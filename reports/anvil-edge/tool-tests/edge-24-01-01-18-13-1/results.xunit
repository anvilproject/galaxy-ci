<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="4"
           failures="5"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="30.995091438293457">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="27.47972559928894">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="28.110088109970093">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="10.181203126907349">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 10.181203126907349, "tool_id": "bcftools_filter", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="28.48889970779419">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="26.393393516540527">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="27.33163857460022">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="9.895701885223389">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 9.895701885223389, "tool_id": "bcftools_filter", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="26.29845356941223">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="34.735764026641846">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="29.752224922180176">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="37.46805119514465">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="35.97438883781433">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="37.82784366607666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="66.11649560928345">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="32.22085690498352">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.21449899673461914">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.21449899673461914, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="33.47548842430115">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="27.928914308547974">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="28.50300621986389">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="26.872959852218628">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="27.622335195541382">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="26.165756225585938">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="28.011435508728027">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="22.151087999343872">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fastq_filters_0|offset_type|base_offset_type": "offsets_percent",  "fastq_filters_0|offset_type|left_column_offset": "1.075",  "fastq_filters_0|offset_type|right_column_offset": "1.075",  "fastq_filters_0|score": "1",  "fastq_filters_0|score_comparison": "\u003e=",  "fastq_filters_0|score_operation": "min",  "input_file": {   "id": "b4d43284a5241f53",   "src": "hda"  },  "max_num_deviants": "0",  "max_quality": "0",  "max_size": "0",  "min_quality": "0",  "min_size": "0",  "paired_end": false }, "job": {  "command_line": "gx-fastq-filter \u0027/galaxy/server/database/objects/f/d/d/dataset_fdd07ec5-e0fb-4745-8ec0-8cfa6cc7a17c.dat\u0027 \u0027/galaxy/server/database/jobs_directory/000/43/configs/tmpa5v52omt\u0027 \u0027/galaxy/server/database/objects/d/1/2/dataset_d1220d34-574e-4646-a2d2-b9a2e277b262.dat\u0027 \u0027/galaxy/server/database/objects/d/1/2/dataset_d1220d34-574e-4646-a2d2-b9a2e277b262_files\u0027 \u0027sanger\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-01-01T18:39:14.575447",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-fr4th",  "galaxy_version": "23.1",  "history_id": "7eeeb2e715aa4d39",  "id": "6f7af085e15211aa",  "inputs": {   "input_file": {    "id": "b4d43284a5241f53",    "src": "hda",    "uuid": "fdd07ec5-e0fb-4745-8ec0-8cfa6cc7a17c"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "61e173e00c61b088",    "src": "hda",    "uuid": "d1220d34-574e-4646-a2d2-b9a2e277b262"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 1, \"base_offset_type\": \"offsets_percent\", \"left_column_offset\": \"1.075\", \"right_column_offset\": \"1.075\"}, \"score\": \"1.0\", \"score_comparison\": \"\u003e=\", \"score_operation\": \"min\"}]",   "max_num_deviants": "\"0\"",   "max_quality": "\"0.0\"",   "max_size": "\"0\"",   "min_quality": "\"0.0\"",   "min_size": "\"0\"",   "paired_end": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-01-01T18:39:20.305593",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: ." ], "status": "failure", "test_index": 7, "time_seconds": 22.151087999343872, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="29.231435298919678">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="34.766355991363525">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="28.514867782592773">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="27.227597951889038">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="56.66780948638916">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="59.389036655426025">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="30.36069083213806">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="141.3732786178589">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/b/c/1/dataset_bc16545f-00b0-4052-b9ae-a780bfb16bdc.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/5/7/0/dataset_570a8854-309b-4bf9-9c78-fc7b31750def.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/6/8/7/dataset_6874b0a8-91b3-4284-8e22-e103f62f605f.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-01-01T18:58:28.477243",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dh9xn",  "galaxy_version": "23.1",  "history_id": "7eeeb2e715aa4d39",  "id": "0d7d04513fd17be7",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "115.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 minute"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1704135627.0000000",    "title": "Job End Time",    "value": "2024-01-01 19:00:27"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1704135512.0000000",    "title": "Job Start Time",    "value": "2024-01-01 18:58:32"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "7ae85ceb41e38841",    "src": "hda",    "uuid": "6874b0a8-91b3-4284-8e22-e103f62f605f"   },   "design_tsv": {    "id": "58f9b8906f483641",    "src": "hda",    "uuid": "2d008107-ae5b-44a7-821b-6ba51afedce5"   },   "genes_tsv": {    "id": "58c21807cf3b9fb1",    "src": "hda",    "uuid": "570a8854-309b-4bf9-9c78-fc7b31750def"   },   "matrix_mtx": {    "id": "d76d72dcfb36aeac",    "src": "hda",    "uuid": "bc16545f-00b0-4052-b9ae-a780bfb16bdc"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-01-01 18:58:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  181K\n    50K .......... .......... .......... .......... ..........  271K\n   100K .......... .......... .......... .......... ..........  271K\n   150K .......... .......... .......... .......... ..........  534K\n   200K .......... .......... .......... .......... ..........  270K\n   250K .......... .......... .......... .......... ..........  539K\n   300K .......... .......... .......... .......... ..........  542K\n   350K .......... .......... .......... .......... ..........  538K\n   400K .......... .......... .......... .......... ..........  542K\n   450K .......... .......... .......... .......... ..........  536K\n   500K .......... .......... .......... .......... .......... 10.6M\n   550K .......... .......... .......... .......... ..........  567K\n   600K .......... .......... .......... .......... ..........  544K\n   650K .......... .......... .......... .......... .......... 9.06M\n   700K .......... .......... .......... .......... ..........  572K\n   750K .......... .......... .......... .......... ..........  544K\n   800K .......... .......... .......... .......... .......... 8.68M\n   850K .......... .......... .......... .......... ..........  576K\n   900K .......... .......... .......... .......... ..........  546K\n   950K .......... .......... .......... .......... .......... 58.7M\n  1000K .......... .......... .......... .......... ..........  543K\n  1050K .......... .......... .......... .......... ..........  193M\n  1100K .......... .......... .......... .......... ..........  546K\n  1150K .......... .......... .......... .......... .......... 7.19M\n  1200K .......... .......... .......... .......... ..........  582K\n  1250K .......... .......... .......... .......... .......... 7.86M\n  1300K .......... .......... .......... .......... ..........  580K\n  1350K .......... .......... .......... .......... .......... 97.6M\n  1400K .......... .......... .......... .......... ..........  545K\n  1450K .......... .......... .......... .......... .......... 77.8M\n  1500K .......... .......... .......... .......... ..........  545K\n  1550K .......... .......... .......... .......... ..........  135M\n  1600K .......... .......... .......... .......... .......... 7.25M\n  1650K .......... .......... .......... .......... ..........  585K\n  1700K .......... .......... .......... .......... .......... 8.61M\n  1750K .......... .......... .......... .......... ..........  574K\n  1800K .......... .......... .......... .......... .......... 79.0M\n  1850K .......... .......... .......... .......... .......... 10.7M\n  1900K .......... .......... .......... .......... ..........  569K\n  1950K .......... .......... .......... .......... .......... 8.88M\n  2000K .......... .......... .......... .......... ..........  579K\n  2050K .......... .......... .......... .......... ..........  104M\n  2100K .......... .......... .......... .......... .......... 9.23M\n  2150K .......... .......... .......... .......... ..........  579K\n  2200K .......... .......... .......... .......... .......... 80.4M\n  2250K .......... .......... .......... .......... .......... 9.17M\n  2300K .......... .......... .......... .......... ..........  575K\n  2350K .......... .......... .......... .......... ..........  106M\n  2400K .......... .......... .......... .......... .......... 6.50M\n  2450K .......... .......... .......... .......... ..........  596K\n  2500K .......... .......... .......... .......... .......... 58.5M\n  2550K .......... .......... .......... .......... .......... 8.71M\n  2600K .......... .......... .......... .......... ..........  582K\n  2650K .......... .......... .......... .......... .......... 77.0M\n  2700K .......... .......... .......... .......... .......... 8.53M\n  2750K .......... .......... .......... .......... ..........  577K\n  2800K .......... .......... .......... .......... ..........  106M\n  2850K .......... .......... .......... .......... .......... 6.39M\n  2900K .......... .......... .......... .......... ..........  175M\n  2950K .......... .......... .......... .......... ..........  585K\n  3000K .......... .......... .......... .......... ..........  179M\n  3050K .......... .......... .......... .......... .......... 7.08M\n  3100K .......... .......... .......... .......... ..........  588K\n  3150K .......... .......... .......... .......... ..........  100M\n  3200K .......... .......... .......... .......... .......... 7.93M\n  3250K .......... .......... .......... .......... ..........  584K\n  3300K .......... .......... .......... .......... .......... 82.2M\n  3350K .......... .......... .......... .......... ..........  116M\n  3400K .......... .......... .......... .......... .......... 7.91M\n  3450K .......... .......... .......... .......... ..........  587K\n  3500K .......... .......... .......... .......... ..........  211M\n  3550K .......... .......... .......... .......... .......... 8.05M\n  3600K .......... .......... .......... .......... .......... 47.4M\n  3650K .......... .......... .......... .......... ..........  590K\n  3700K .......... .......... .......... .......... ..........  157M\n  3750K .......... .......... .......... .......... .......... 7.49M\n  3800K .......... .......... .......... .......... .......... 74.6M\n  3850K .......... .......... .......... .......... ..........  572K\n  3900K .......... .......... .......... .......... ..........  106M\n  3950K .......... .......... .......... .......... .......... 14.2M\n  4000K .......... .......... .......... .......... .......... 1.13M\n  4050K .......... .......... .......... .......... .......... 1.07M\n  4100K .......... .......... .......... .......... .......... 95.4M\n  4150K .......... .......... .......... .......... .......... 14.8M\n  4200K .......... .......... .......... .......... ..........  513K\n  4250K .......... .......... .......... .......... .......... 85.4M\n  4300K .......... .......... .......... .......... .......... 92.5M\n  4350K .......... .......... .......... .......... .......... 85.2M\n  4400K .......... .......... .......... .......... ..........  126M\n  4450K .......... .......... .......... .......... ..........  602K\n  4500K .......... .......... .......... .......... .......... 74.2M\n  4550K .......... .......... .......... .......... .......... 6.82M\n  4600K .......... .......... .......... .......... ..........  594K\n  4650K .......... .......... .......... .......... .......... 37.6M\n  4700K .......... .......... .......... .......... ..........  503K\n  4750K .......... .......... .......... .......... ..........  105M\n  4800K .......... .......... .......... .......... ..........  103M\n  4850K .......... .......... .......... .......... ..........  604K\n  4900K .......... .......... .......... .......... .......... 42.1M\n  4950K .......... .......... .......... .......... .......... 1.03M\n  5000K .......... .......... .......... .......... .......... 1.10M\n  5050K .......... .......... .......... .......... .......... 7.26M\n  5100K .......... .......... .......... .......... ..........  581K\n  5150K .......... .......... .......... .......... .......... 12.7M\n  5200K .......... .......... .......... .......... ..........  566K\n  5250K .......... .......... .......... .......... ..........  106M\n  5300K .......... .......... .......... .......... .......... 1.03M\n  5350K .......... .......... .......... .......... .......... 1.09M\n  5400K .......... .......... .......... .......... .......... 6.89M\n  5450K .......... .......... .......... .......... ..........  592K\n  5500K .......... .......... .......... .......... .......... 8.74M\n  5550K .......... .......... .......... .......... ..........  580K\n  5600K .......... .......... .......... .......... .......... 53.4M\n  5650K .......... .......... .......... .......... .......... 5.96M\n  5700K .......... .......... .......... .......... ..........  598K\n  5750K .......... .......... .......... .......... ..........  109M\n  5800K .......... .......... .......... .......... ..........  546K\n  5850K .......... .......... .......... .......... .......... 94.5M\n  5900K .......... .......... .......... .......... .......... 1024K\n  5950K .......... .......... .......... .......... .......... 1.13M\n  6000K .......... .......... .......... .......... .......... 6.51M\n  6050K .......... .......... .......... .......... ..........  590K\n  6100K .......... .......... .......... .......... ..........  123M\n  6150K .......... .......... .......... .......... .......... 1.01M\n  6200K .......... .......... .......... .......... .......... 1.11M\n  6250K .......... .......... .......... .......... .......... 6.24M\n  6300K .......... .......... .......... .......... ..........  594K\n  6350K .......... .......... .......... .......... .......... 68.4M\n  6400K .......... .......... .......... .......... .......... 5.82M\n  6450K .......... .......... .......... .......... ..........  599K\n  6500K .......... .......... .......... .......... ..........  495K\n  6550K .......... .......... .......... .......... .......... 79.0M\n  6600K .......... .......... .......... .......... .......... 1.10M\n  6650K .......... .......... .......... .......... .......... 1.23M\n  6700K .......... .......... .......... .......... .......... 1.01M\n  6750K .......... .......... .......... .......... .......... 1.11M\n  6800K .......... .......... .......... .......... .......... 1007K\n  6850K .......... .......... .......... .......... .......... 1.14M\n  6900K .......... .......... .......... .......... .......... 1015K\n  6950K .......... .......... .......... .......... ..........  967K\n  7000K .......... .......... .......... .......... ..........  598K\n  7050K .......... .......... .......... .......... .......... 5.73M\n  7100K .......... .......... .......... .......... ..........  588K\n  7150K .......... .......... .......... .......... .......... 86.4M\n  7200K .......... .......... .......... .......... .......... 1.00M\n  7250K .......... .......... .......... .......... .......... 1.11M\n  7300K .......... .......... .......... .......... .......... 1.01M\n  7350K .......... .......... .......... .......... ..........  986K\n  7400K .......... .......... .......... .......... ..........  583K\n  7450K .......... .......... .......... .......... ..........  148M\n  7500K .......... .......... .......... .......... .......... 1022K\n  7550K .......... .......... .......... .......... .......... 1.11M\n  7600K .......... .......... .......... .......... .......... 1.02M\n  7650K .......... .......... .......... .......... .......... 1.09M\n  7700K .......... .......... .......... .......... .......... 7.76M\n  7750K .......... .......... .......... .......... ..........  272K\n  7800K .......... .......... .......... .......... .......... 91.8M\n  7850K .......... .......... .......... .......... ..........  372K\n  7900K .......... .......... .......... .......... .......... 80.5M\n  7950K .......... .......... .......... .......... .......... 1.01M\n  8000K .......... .......... .......... .......... ..........  541K\n  8050K .......... .......... .......... .......... ..........  542K\n  8100K .......... .......... .......... .......... ..........  542K\n  8150K .......... .......... .......... .......... ..........  536K\n  8200K .......... .......... .......... .......... ..........  565K\n  8250K .......... .......... .......... .......... ..........  542K\n  8300K .......... .......... .......... .......... .......... 1.00M\n  8350K .......... .......... .......... .......... ..........  357K\n  8400K .......... .......... .......... .......... .......... 1.10M\n  8450K .......... .......... .......... .......... ..........  376K\n  8500K .......... .......... .......... .......... ..........  520K\n  8550K .......... .......... .......... .......... ..........  522K\n  8600K .......... .......... .......... .......... ..........  542K\n  8650K .......... .......... .......... .......... ..........  533K\n  8700K .......... .......... .......... .......... ..........  544K\n  8750K .......... .......... .......... .......... ..........  544K\n  8800K .......... .......... .......... .......... ..........  541K\n  8850K .......... .......... .......... .......... ..........  542K\n  8900K .......... .......... .......... .......... ..........  540K\n  8950K .......... .......... .......... .......... ..........  349K\n  9000K .......... .......... .......... .......... ..........  541K\n  9050K .......... .......... .......... .......... .......... 1.18M\n  9100K .......... .......... .......... .......... ..........  543K\n  9150K .......... .......... .......... .......... ..........  534K\n  9200K .......... .......... .......... .......... ..........  534K\n  9250K .......... .......... .......... .......... ..........  541K\n  9300K .......... .......... .......... .......... ..........  540K\n  9350K .......... .......... .......... .......... ..........  279K\n  9400K .......... .......... .......... .......... ..........  538K\n  9450K .......... .......... .......... .......... ..........  870K\n  9500K .......... .......... .......... .......... ..........  543K\n  9550K .......... .......... .......... .......... ..........  550K\n  9600K .......... .......... .......... .......... ..........  539K\n  9650K .......... .......... .......... .......... .......... 1.14M\n  9700K .......... .......... .......... .......... ..........  534K\n  9750K .......... .......... .......... .......... ..........  269K\n  9800K .......... .......... .......... .......... ..........  542K\n  9850K .......... .......... .......... .......... ..........  588K\n  9900K .......... .......... .......... .......... ..........  541K\n  9950K .......... .......... .......... .......... ..........  546K\n 10000K .......... .......... .......... .......... ..........  541K\n 10050K .......... .......... .......... .......... ..........  885K\n 10100K .......... .......... .......... .......... ..........  543K\n 10150K .......... .......... .......... .......... ..........  218K\n 10200K .......... .......... .......... .......... .......... 59.0M\n 10250K .......... .......... .......... .......... ..........  542K\n 10300K .......... .......... .......... .......... ..........  285K\n 10350K .......... .......... .......... .......... ..........  496K\n 10400K .......... .......... .......... .......... ..........  541K\n 10450K .......... .......... .......... .......... ..........  541K\n 10500K .......... .......... .......... .......... ..........  539K\n 10550K .......... .......... .......... .......... ..........  272K\n 10600K .......... .......... .......... .......... ..........  540K\n 10650K .......... .......... .......... .......... ..........  543K\n 10700K .......... .......... .......... .......... ..........  541K\n 10750K .......... .......... .......... .......... ..........  540K\n 10800K .......... .......... .......... .......... ..........  543K\n 10850K .......... .......... .......... .......... ..........  541K\n 10900K .......... .......... .......... .......... ..........  540K\n 10950K .......... .......... .......... .......... ..........  539K\n 11000K .......... .......... .......... .......... ..........  541K\n 11050K .......... .......... .......... .......... ..........  533K\n 11100K .......... .......... .......... .......... ..........  531K\n 11150K .......... .......... .......... .......... ..........  217K\n 11200K .......... .......... .......... .......... ..........  160M\n 11250K .......... .......... .......... .......... ..........  272K\n 11300K .......... .......... .......... .......... ..........  540K\n 11350K .......... .......... .......... .......... ..........  272K\n 11400K .......... .......... .......... .......... ..........  542K\n 11450K .......... .......... .......... .......... ..........  541K\n 11500K .......... .......... .......... .......... ..........  543K\n 11550K .......... .......... .......... .......... ..........\n..\n.....  399K\n 50150K .......... .......... .......... .......... ..........  331K\n 50200K .......... .......... .......... .......... ..........  539K\n 50250K .......... .......... .......... .......... ..........  270K\n 50300K .......... .......... .......... .......... ..........  540K\n 50350K .......... .......... .......... .......... ..........  272K\n 50400K .......... .......... .......... .......... ..........  538K\n 50450K .......... .......... .......... .......... ..........  542K\n 50500K .......... .......... .......... .......... ..........  272K\n 50550K .......... .......... .......... .......... ..........  540K\n 50600K .......... .......... .......... .......... ..........  380K\n 50650K .......... .......... .......... .......... ..........  344K\n 50700K .......... .......... .......... .......... ..........  377K\n 50750K .......... .......... .......... .......... ..........  348K\n 50800K .......... .......... .......... .......... ..........  540K\n 50850K .......... .......... .......... .......... ..........  375K\n 50900K .......... .......... .......... .......... ..........  346K\n 50950K .......... .......... .......... .......... ..........  542K\n 51000K .......... .......... .......... .......... ..........  270K\n 51050K .......... .......... .......... .......... ..........  541K\n 51100K .......... .......... .......... .......... ..........  271K\n 51150K .......... .......... .......... .......... ..........  541K\n 51200K .......... .......... .......... .......... ..........  534K\n 51250K .......... .......... .......... .......... ..........  540K\n 51300K .......... .......... .......... .......... ..........  366K\n 51350K .......... .......... .......... .......... ..........  359K\n 51400K .......... .......... .......... .......... ..........  537K\n 51450K .......... .......... .......... .......... ..........  538K\n 51500K .......... .......... .......... .......... ..........  543K\n 51550K .......... .......... .......... .......... ..........  535K\n 51600K .......... .......... .......... .......... ..........  539K\n 51650K .......... .......... .......... .......... ..........  543K\n 51700K .......... .......... .......... .......... ..........  543K\n 51750K .......... .......... .......... .......... ..........  542K\n 51800K .......... .......... .......... .......... ..........  540K\n 51850K .......... .......... .......... .......... ..........  272K\n 51900K .......... .......... .......... .......... .......... 40.4M\n 51950K .......... .......... .......... .......... ..........  541K\n 52000K .......... .......... .......... .......... ..........  542K\n 52050K .......... .......... .......... .......... ..........  541K\n 52100K .......... .......... .......... .......... ..........  544K\n 52150K .......... .......... .......... .......... ..........  537K\n 52200K .......... .......... .......... .......... ..........  545K\n 52250K .......... .......... .......... .......... ..........  527K\n 52300K .......... .......... .......... .......... ..........  553K\n 52350K .......... .......... .......... .......... ..........  540K\n 52400K .......... .......... .......... .......... ..........  540K\n 52450K .......... .......... .......... .......... ..........  540K\n 52500K .......... .......... .......... .......... ..........  269K\n 52550K .......... .......... .......... .......... ..........  539K\n 52600K .......... .......... .......... .......... ..........  534K\n 52650K .......... .......... .......... .......... ..........  271K\n 52700K .......... .......... .......... .......... ..........  539K\n 52750K .......... .......... .......... .......... ..........  539K\n 52800K .......... .......... .......... .......... ..........  539K\n 52850K .......... .......... .......... .......... ..........  541K\n 52900K .......... .......... .......... .......... ..........  537K\n 52950K .......... .......... .......... .......... ..........  273K\n 53000K .......... .......... .......... .......... ..........  541K\n 53050K .......... .......... .......... .......... ..........  541K\n 53100K .......... .......... .......... .......... ..........  536K\n 53150K .......... .......... .......... .......... ..........  540K\n 53200K .......... .......... .......... .......... ..........  272K\n 53250K .......... .......... .......... .......... ..........  541K\n 53300K .......... .......... .......... .......... ..........  542K\n 53350K .......... .......... .......... .......... ..........  540K\n 53400K .......... .......... .......... .......... ..........  538K\n 53450K .......... .......... .......... .......... ..........  541K\n 53500K .......... .......... .......... .......... ..........  532K\n 53550K .......... .......... .......... .......... ..........  272K\n 53600K .......... .......... .......... .......... ..........  541K\n 53650K .......... .......... .......... .......... ..........  539K\n 53700K .......... .......... .......... .......... ..........  544K\n 53750K .......... .......... .......... .......... ..........  544K\n 53800K .......... .......... .......... .......... ..........  538K\n 53850K .......... .......... .......... .......... ..........  541K\n 53900K .......... .......... .......... .......... ..........  273K\n 53950K .......... .......... .......... .......... ..........  542K\n 54000K .......... .......... .......... .......... ..........  538K\n 54050K .......... .......... .......... .......... ..........  538K\n 54100K .......... .......... .......... .......... ..........  537K\n 54150K .......... .......... .......... .......... ..........  542K\n 54200K .......... .......... .......... .......... ..........  271K\n 54250K .......... .......... .......... .......... ..........  539K\n 54300K .......... .......... .......... .......... ..........  538K\n 54350K .......... .......... .......... .......... ..........  543K\n 54400K .......... .......... .......... .......... ..........  540K\n 54450K .......... .......... .......... .......... ..........  540K\n 54500K .......... .......... .......... .......... ..........  541K\n 54550K .......... .......... .......... .......... ..........  539K\n 54600K .......... .......... .......... .......... ..........  537K\n 54650K .......... .......... .......... .......... ..........  181K\n 54700K .......... .......... .......... .......... .......... 18.2M\n 54750K .......... .......... .......... .......... ..........  273K\n 54800K .......... .......... .......... .......... ..........  537K\n 54850K .......... .......... .......... .......... ..........  540K\n 54900K .......... .......... .......... .......... ..........  541K\n 54950K .......... .......... .......... .......... ..........  271K\n 55000K .......... .......... .......... .......... ..........  541K\n 55050K .......... .......... .......... .......... ..........  542K\n 55100K .......... .......... .......... .......... ..........  542K\n 55150K .......... .......... .......... .......... ..........  544K\n 55200K .......... .......... .......... .......... ..........  541K\n 55250K .......... .......... .......... .......... ..........  534K\n 55300K .......... .......... .......... .......... ..........  539K\n 55350K .......... .......... .......... .......... ..........  541K\n 55400K .......... .......... .......... .......... ..........  271K\n 55450K .......... .......... .......... .......... ..........  541K\n 55500K .......... .......... .......... .......... ..........  541K\n 55550K .......... .......... .......... .......... ..........  542K\n 55600K .......... .......... .......... .......... ..........  543K\n 55650K .......... .......... .......... .......... ..........  543K\n 55700K .......... .......... .......... .......... ..........  541K\n 55750K .......... .......... .......... .......... ..........  544K\n 55800K .......... .......... .......... .......... ..........  272K\n 55850K .......... .......... .......... .......... .......... 38.2M\n 55900K .......... .......... .......... .......... ..........  507K\n 55950K .......... .......... .......... .......... ..........  281K\n 56000K .......... .......... .......... .......... ..........  513K\n 56050K .......... .......... .......... .......... ..........  529K\n 56100K .......... .......... .......... .......... ..........  540K\n 56150K .......... .......... .......... .......... ..........  541K\n 56200K .......... .......... .......... .......... ..........  278K\n 56250K .......... .......... .......... .......... ..........  528K\n 56300K .......... .......... .......... .......... ..........  543K\n 56350K .......... .......... .......... .......... ..........  540K\n 56400K .......... .......... .......... .......... ..........  530K\n 56450K .......... .......... .......... .......... ..........  534K\n 56500K .......... .......... .......... .......... ..........  545K\n 56550K .......... .......... .......... .......... ..........  545K\n 56600K .......... .......... .......... .......... ..........  528K\n 56650K .......... .......... .......... .......... ..........  540K\n 56700K .......... .......... .......... .......... ..........  540K\n 56750K .......... .......... .......... .......... ..........  538K\n 56800K .......... .......... .......... .......... ..........  539K\n 56850K .......... .......... .......... .......... ..........  539K\n 56900K .......... .......... .......... .......... ..........  531K\n 56950K .......... .......... .......... .......... ..........  541K\n 57000K .......... .......... .......... .......... ..........  275K\n 57050K .......... .......... .......... .......... ..........  542K\n 57100K .......... .......... .......... .......... ..........  542K\n 57150K .......... .......... .......... .......... .......... 9.41M\n 57200K .......... .......... .......... .......... ..........  542K\n 57250K .......... .......... .......... .......... ..........  543K\n 57300K .......... .......... .......... .......... ..........  537K\n 57350K .......... .......... .......... .......... ..........  543K\n 57400K .......... .......... .......... .......... ..........  272K\n 57450K .......... .......... .......... .......... ..........  542K\n 57500K .......... .......... .......... .......... ..........  542K\n 57550K .......... .......... .......... .......... ..........  539K\n 57600K .......... .......... .......... .......... ..........  541K\n 57650K .......... .......... .......... .......... ..........  541K\n 57700K .......... .......... .......... .......... ..........  541K\n 57750K .......... .......... .......... .......... ..........  135M\n 57800K .......... .......... .......... .......... ..........  272K\n 57850K .......... .......... .......... .......... ..........  541K\n 57900K .......... .......... .......... .......... ..........  539K\n 57950K .......... .......... .......... .......... ..........  540K\n 58000K .......... .......... .......... .......... ..........  270K\n 58050K .......... .......... .......... .......... ..........  110M\n 58100K .......... .......... .......... .......... ..........  530K\n 58150K .......... .......... .......... .......... ..........  270K\n 58200K .......... .......... .......... .......... ..........  532K\n 58250K .......... .......... .......... .......... ..........  538K\n 58300K .......... .......... .......... .......... ..........  271K\n 58350K .......... .......... .......... .......... ..........  536K\n 58400K .......... .......... .......... .......... ..........  539K\n 58450K .......... .......... .......... .......... ..........  535K\n 58500K .......... .......... .......... .......... ..........  537K\n 58550K .......... .......... .......... .......... ..........  537K\n 58600K .......... .......... .......... .......... ..........  537K\n 58650K .......... .......... .......... .......... ..........  539K\n 58700K .......... .......... .......... .......... ..........  535K\n 58750K .......... .......... .......... .......... ..........  537K\n 58800K .......... .......... .......... .......... ..........  535K\n 58850K .......... .......... .......... .......... ..........  538K\n 58900K .......... .......... .......... .......... ..........  537K\n 58950K .......... .......... .......... .......... ..........  273K\n 59000K .......... .......... .......... .......... ..........  270K\n 59050K .......... .......... .......... .......... .......... 23.4M\n 59100K .......... .......... .......... .......... ..........  271K\n 59150K .......... .......... .......... .......... ..........  537K\n 59200K .......... .......... .......... .......... ..........  268K\n 59250K .......... .......... .......... .......... ..........  269K\n 59300K .......... .......... .......... .......... ..........  270K\n 59350K .......... .......... .......... .......... ..........  270K\n 59400K .......... .......... .......... .......... ..........  270K\n 59450K .......... .......... .......... .......... ..........  269K\n 59500K .......... .......... .......... .......... ..........  348K\n 59550K .......... .......... .......... .......... ..........  369K\n 59600K .......... .......... .......... .......... ..........  269K\n 59650K .......... .......... .......... .......... ..........  270K\n 59700K .......... .......... .......... .......... ..........  318K\n 59750K .......... .......... .......... .......... ..........  234K\n 59800K .......... .......... .......... .......... ..........  269K\n 59850K .......... .......... .......... .......... ..........  538K\n 59900K .......... .......... .......... .......... ..........  270K\n 59950K .......... .......... .......... .......... ..........  269K\n 60000K .......... .......... .......... .......... ..........  269K\n 60050K .......... .......... .......... .......... ..........  352K\n 60100K .......... .......... .......... .......... ..........  361K\n 60150K .......... .......... .......... .......... ..........  269K\n 60200K .......... .......... .......... .......... ..........  208K\n 60250K .......... .......... .......... .......... ..........  498K\n 60300K .......... .......... .......... .......... ..........  282K\n 60350K .......... .......... .......... .......... ..........  270K\n 60400K .......... .......... .......... .......... ..........  538K\n 60450K .......... .......... .......... .......... ..........  491K\n 60500K .......... .......... .......... .......... ..........  283K\n 60550K .......... .......... .......... .......... ..........  499K\n 60600K .......... .......... .......... .......... ..........  280K\n 60650K .......... .........                                   88.7M=1m48s\n\n2024-01-01 19:00:21 (562 KB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-01-01 19:00:24--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  272K 3s\n    50K .......... .......... .......... .......... .......... 12%  273K 3s\n   100K .......... .......... .......... .......... .......... 18%  272K 2s\n   150K .......... .......... .......... .......... .......... 24%  272K 2s\n   200K .......... .......... .......... .......... .......... 30%  273K 2s\n   250K .......... .......... .......... .......... .......... 36%  272K 2s\n   300K .......... .......... .......... .......... .......... 42%  544K 2s\n   350K .......... .......... .......... .......... .......... 48%  273K 1s\n   400K .......... .......... .......... .......... .......... 54%  273K 1s\n   450K .......... .......... .......... .......... .......... 60%  543K 1s\n   500K .......... .......... .......... .......... .......... 66%  544K 1s\n   550K .......... .......... .......... .......... .......... 72%  543K 1s\n   600K .......... .......... .......... .......... .......... 78%  531K 1s\n   650K .......... .......... .......... .......... .......... 84%  276K 0s\n   700K .......... .......... .......... .......... .......... 90%  542K 0s\n   750K .......... .......... .......... .......... .......... 96%  541K 0s\n   800K .......... .......... .......                         100% 81.2M=2.3s\n\n2024-01-01 19:00:27 (361 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-01-01 18:58:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  181K\n    50K .......... .......... .......... .......... ..........  271K\n   100K .......... .......... .......... .......... ..........  271K\n   150K .......... .......... .......... .......... ..........  534K\n   200K .......... .......... .......... .......... ..........  270K\n   250K .......... .......... .......... .......... ..........  539K\n   300K .......... .......... .......... .......... ..........  542K\n   350K .......... .......... .......... .......... ..........  538K\n   400K .......... .......... .......... .......... ..........  542K\n   450K .......... .......... .......... .......... ..........  536K\n   500K .......... .......... .......... .......... .......... 10.6M\n   550K .......... .......... .......... .......... ..........  567K\n   600K .......... .......... .......... .......... ..........  544K\n   650K .......... .......... .......... .......... .......... 9.06M\n   700K .......... .......... .......... .......... ..........  572K\n   750K .......... .......... .......... .......... ..........  544K\n   800K .......... .......... .......... .......... .......... 8.68M\n   850K .......... .......... .......... .......... ..........  576K\n   900K .......... .......... .......... .......... ..........  546K\n   950K .......... .......... .......... .......... .......... 58.7M\n  1000K .......... .......... .......... .......... ..........  543K\n  1050K .......... .......... .......... .......... ..........  193M\n  1100K .......... .......... .......... .......... ..........  546K\n  1150K .......... .......... .......... .......... .......... 7.19M\n  1200K .......... .......... .......... .......... ..........  582K\n  1250K .......... .......... .......... .......... .......... 7.86M\n  1300K .......... .......... .......... .......... ..........  580K\n  1350K .......... .......... .......... .......... .......... 97.6M\n  1400K .......... .......... .......... .......... ..........  545K\n  1450K .......... .......... .......... .......... .......... 77.8M\n  1500K .......... .......... .......... .......... ..........  545K\n  1550K .......... .......... .......... .......... ..........  135M\n  1600K .......... .......... .......... .......... .......... 7.25M\n  1650K .......... .......... .......... .......... ..........  585K\n  1700K .......... .......... .......... .......... .......... 8.61M\n  1750K .......... .......... .......... .......... ..........  574K\n  1800K .......... .......... .......... .......... .......... 79.0M\n  1850K .......... .......... .......... .......... .......... 10.7M\n  1900K .......... .......... .......... .......... ..........  569K\n  1950K .......... .......... .......... .......... .......... 8.88M\n  2000K .......... .......... .......... .......... ..........  579K\n  2050K .......... .......... .......... .......... ..........  104M\n  2100K .......... .......... .......... .......... .......... 9.23M\n  2150K .......... .......... .......... .......... ..........  579K\n  2200K .......... .......... .......... .......... .......... 80.4M\n  2250K .......... .......... .......... .......... .......... 9.17M\n  2300K .......... .......... .......... .......... ..........  575K\n  2350K .......... .......... .......... .......... ..........  106M\n  2400K .......... .......... .......... .......... .......... 6.50M\n  2450K .......... .......... .......... .......... ..........  596K\n  2500K .......... .......... .......... .......... .......... 58.5M\n  2550K .......... .......... .......... .......... .......... 8.71M\n  2600K .......... .......... .......... .......... ..........  582K\n  2650K .......... .......... .......... .......... .......... 77.0M\n  2700K .......... .......... .......... .......... .......... 8.53M\n  2750K .......... .......... .......... .......... ..........  577K\n  2800K .......... .......... .......... .......... ..........  106M\n  2850K .......... .......... .......... .......... .......... 6.39M\n  2900K .......... .......... .......... .......... ..........  175M\n  2950K .......... .......... .......... .......... ..........  585K\n  3000K .......... .......... .......... .......... ..........  179M\n  3050K .......... .......... .......... .......... .......... 7.08M\n  3100K .......... .......... .......... .......... ..........  588K\n  3150K .......... .......... .......... .......... ..........  100M\n  3200K .......... .......... .......... .......... .......... 7.93M\n  3250K .......... .......... .......... .......... ..........  584K\n  3300K .......... .......... .......... .......... .......... 82.2M\n  3350K .......... .......... .......... .......... ..........  116M\n  3400K .......... .......... .......... .......... .......... 7.91M\n  3450K .......... .......... .......... .......... ..........  587K\n  3500K .......... .......... .......... .......... ..........  211M\n  3550K .......... .......... .......... .......... .......... 8.05M\n  3600K .......... .......... .......... .......... .......... 47.4M\n  3650K .......... .......... .......... .......... ..........  590K\n  3700K .......... .......... .......... .......... ..........  157M\n  3750K .......... .......... .......... .......... .......... 7.49M\n  3800K .......... .......... .......... .......... .......... 74.6M\n  3850K .......... .......... .......... .......... ..........  572K\n  3900K .......... .......... .......... .......... ..........  106M\n  3950K .......... .......... .......... .......... .......... 14.2M\n  4000K .......... .......... .......... .......... .......... 1.13M\n  4050K .......... .......... .......... .......... .......... 1.07M\n  4100K .......... .......... .......... .......... .......... 95.4M\n  4150K .......... .......... .......... .......... .......... 14.8M\n  4200K .......... .......... .......... .......... ..........  513K\n  4250K .......... .......... .......... .......... .......... 85.4M\n  4300K .......... .......... .......... .......... .......... 92.5M\n  4350K .......... .......... .......... .......... .......... 85.2M\n  4400K .......... .......... .......... .......... ..........  126M\n  4450K .......... .......... .......... .......... ..........  602K\n  4500K .......... .......... .......... .......... .......... 74.2M\n  4550K .......... .......... .......... .......... .......... 6.82M\n  4600K .......... .......... .......... .......... ..........  594K\n  4650K .......... .......... .......... .......... .......... 37.6M\n  4700K .......... .......... .......... .......... ..........  503K\n  4750K .......... .......... .......... .......... ..........  105M\n  4800K .......... .......... .......... .......... ..........  103M\n  4850K .......... .......... .......... .......... ..........  604K\n  4900K .......... .......... .......... .......... .......... 42.1M\n  4950K .......... .......... .......... .......... .......... 1.03M\n  5000K .......... .......... .......... .......... .......... 1.10M\n  5050K .......... .......... .......... .......... .......... 7.26M\n  5100K .......... .......... .......... .......... ..........  581K\n  5150K .......... .......... .......... .......... .......... 12.7M\n  5200K .......... .......... .......... .......... ..........  566K\n  5250K .......... .......... .......... .......... ..........  106M\n  5300K .......... .......... .......... .......... .......... 1.03M\n  5350K .......... .......... .......... .......... .......... 1.09M\n  5400K .......... .......... .......... .......... .......... 6.89M\n  5450K .......... .......... .......... .......... ..........  592K\n  5500K .......... .......... .......... .......... .......... 8.74M\n  5550K .......... .......... .......... .......... ..........  580K\n  5600K .......... .......... .......... .......... .......... 53.4M\n  5650K .......... .......... .......... .......... .......... 5.96M\n  5700K .......... .......... .......... .......... ..........  598K\n  5750K .......... .......... .......... .......... ..........  109M\n  5800K .......... .......... .......... .......... ..........  546K\n  5850K .......... .......... .......... .......... .......... 94.5M\n  5900K .......... .......... .......... .......... .......... 1024K\n  5950K .......... .......... .......... .......... .......... 1.13M\n  6000K .......... .......... .......... .......... .......... 6.51M\n  6050K .......... .......... .......... .......... ..........  590K\n  6100K .......... .......... .......... .......... ..........  123M\n  6150K .......... .......... .......... .......... .......... 1.01M\n  6200K .......... .......... .......... .......... .......... 1.11M\n  6250K .......... .......... .......... .......... .......... 6.24M\n  6300K .......... .......... .......... .......... ..........  594K\n  6350K .......... .......... .......... .......... .......... 68.4M\n  6400K .......... .......... .......... .......... .......... 5.82M\n  6450K .......... .......... .......... .......... ..........  599K\n  6500K .......... .......... .......... .......... ..........  495K\n  6550K .......... .......... .......... .......... .......... 79.0M\n  6600K .......... .......... .......... .......... .......... 1.10M\n  6650K .......... .......... .......... .......... .......... 1.23M\n  6700K .......... .......... .......... .......... .......... 1.01M\n  6750K .......... .......... .......... .......... .......... 1.11M\n  6800K .......... .......... .......... .......... .......... 1007K\n  6850K .......... .......... .......... .......... .......... 1.14M\n  6900K .......... .......... .......... .......... .......... 1015K\n  6950K .......... .......... .......... .......... ..........  967K\n  7000K .......... .......... .......... .......... ..........  598K\n  7050K .......... .......... .......... .......... .......... 5.73M\n  7100K .......... .......... .......... .......... ..........  588K\n  7150K .......... .......... .......... .......... .......... 86.4M\n  7200K .......... .......... .......... .......... .......... 1.00M\n  7250K .......... .......... .......... .......... .......... 1.11M\n  7300K .......... .......... .......... .......... .......... 1.01M\n  7350K .......... .......... .......... .......... ..........  986K\n  7400K .......... .......... .......... .......... ..........  583K\n  7450K .......... .......... .......... .......... ..........  148M\n  7500K .......... .......... .......... .......... .......... 1022K\n  7550K .......... .......... .......... .......... .......... 1.11M\n  7600K .......... .......... .......... .......... .......... 1.02M\n  7650K .......... .......... .......... .......... .......... 1.09M\n  7700K .......... .......... .......... .......... .......... 7.76M\n  7750K .......... .......... .......... .......... ..........  272K\n  7800K .......... .......... .......... .......... .......... 91.8M\n  7850K .......... .......... .......... .......... ..........  372K\n  7900K .......... .......... .......... .......... .......... 80.5M\n  7950K .......... .......... .......... .......... .......... 1.01M\n  8000K .......... .......... .......... .......... ..........  541K\n  8050K .......... .......... .......... .......... ..........  542K\n  8100K .......... .......... .......... .......... ..........  542K\n  8150K .......... .......... .......... .......... ..........  536K\n  8200K .......... .......... .......... .......... ..........  565K\n  8250K .......... .......... .......... .......... ..........  542K\n  8300K .......... .......... .......... .......... .......... 1.00M\n  8350K .......... .......... .......... .......... ..........  357K\n  8400K .......... .......... .......... .......... .......... 1.10M\n  8450K .......... .......... .......... .......... ..........  376K\n  8500K .......... .......... .......... .......... ..........  520K\n  8550K .......... .......... .......... .......... ..........  522K\n  8600K .......... .......... .......... .......... ..........  542K\n  8650K .......... .......... .......... .......... ..........  533K\n  8700K .......... .......... .......... .......... ..........  544K\n  8750K .......... .......... .......... .......... ..........  544K\n  8800K .......... .......... .......... .......... ..........  541K\n  8850K .......... .......... .......... .......... ..........  542K\n  8900K .......... .......... .......... .......... ..........  540K\n  8950K .......... .......... .......... .......... ..........  349K\n  9000K .......... .......... .......... .......... ..........  541K\n  9050K .......... .......... .......... .......... .......... 1.18M\n  9100K .......... .......... .......... .......... ..........  543K\n  9150K .......... .......... .......... .......... ..........  534K\n  9200K .......... .......... .......... .......... ..........  534K\n  9250K .......... .......... .......... .......... ..........  541K\n  9300K .......... .......... .......... .......... ..........  540K\n  9350K .......... .......... .......... .......... ..........  279K\n  9400K .......... .......... .......... .......... ..........  538K\n  9450K .......... .......... .......... .......... ..........  870K\n  9500K .......... .......... .......... .......... ..........  543K\n  9550K .......... .......... .......... .......... ..........  550K\n  9600K .......... .......... .......... .......... ..........  539K\n  9650K .......... .......... .......... .......... .......... 1.14M\n  9700K .......... .......... .......... .......... ..........  534K\n  9750K .......... .......... .......... .......... ..........  269K\n  9800K .......... .......... .......... .......... ..........  542K\n  9850K .......... .......... .......... .......... ..........  588K\n  9900K .......... .......... .......... .......... ..........  541K\n  9950K .......... .......... .......... .......... ..........  546K\n 10000K .......... .......... .......... .......... ..........  541K\n 10050K .......... .......... .......... .......... ..........  885K\n 10100K .......... .......... .......... .......... ..........  543K\n 10150K .......... .......... .......... .......... ..........  218K\n 10200K .......... .......... .......... .......... .......... 59.0M\n 10250K .......... .......... .......... .......... ..........  542K\n 10300K .......... .......... .......... .......... ..........  285K\n 10350K .......... .......... .......... .......... ..........  496K\n 10400K .......... .......... .......... .......... ..........  541K\n 10450K .......... .......... .......... .......... ..........  541K\n 10500K .......... .......... .......... .......... ..........  539K\n 10550K .......... .......... .......... .......... ..........  272K\n 10600K .......... .......... .......... .......... ..........  540K\n 10650K .......... .......... .......... .......... ..........  543K\n 10700K .......... .......... .......... .......... ..........  541K\n 10750K .......... .......... .......... .......... ..........  540K\n 10800K .......... .......... .......... .......... ..........  543K\n 10850K .......... .......... .......... .......... ..........  541K\n 10900K .......... .......... .......... .......... ..........  540K\n 10950K .......... .......... .......... .......... ..........  539K\n 11000K .......... .......... .......... .......... ..........  541K\n 11050K .......... .......... .......... .......... ..........  533K\n 11100K .......... .......... .......... .......... ..........  531K\n 11150K .......... .......... .......... .......... ..........  217K\n 11200K .......... .......... .......... .......... ..........  160M\n 11250K .......... .......... .......... .......... ..........  272K\n 11300K .......... .......... .......... .......... ..........  540K\n 11350K .......... .......... .......... .......... ..........  272K\n 11400K .......... .......... .......... .......... ..........  542K\n 11450K .......... .......... .......... .......... ..........  541K\n 11500K .......... .......... .......... .......... ..........  543K\n 11550K .......... .......... .......... .......... ..........\n..\n.....  399K\n 50150K .......... .......... .......... .......... ..........  331K\n 50200K .......... .......... .......... .......... ..........  539K\n 50250K .......... .......... .......... .......... ..........  270K\n 50300K .......... .......... .......... .......... ..........  540K\n 50350K .......... .......... .......... .......... ..........  272K\n 50400K .......... .......... .......... .......... ..........  538K\n 50450K .......... .......... .......... .......... ..........  542K\n 50500K .......... .......... .......... .......... ..........  272K\n 50550K .......... .......... .......... .......... ..........  540K\n 50600K .......... .......... .......... .......... ..........  380K\n 50650K .......... .......... .......... .......... ..........  344K\n 50700K .......... .......... .......... .......... ..........  377K\n 50750K .......... .......... .......... .......... ..........  348K\n 50800K .......... .......... .......... .......... ..........  540K\n 50850K .......... .......... .......... .......... ..........  375K\n 50900K .......... .......... .......... .......... ..........  346K\n 50950K .......... .......... .......... .......... ..........  542K\n 51000K .......... .......... .......... .......... ..........  270K\n 51050K .......... .......... .......... .......... ..........  541K\n 51100K .......... .......... .......... .......... ..........  271K\n 51150K .......... .......... .......... .......... ..........  541K\n 51200K .......... .......... .......... .......... ..........  534K\n 51250K .......... .......... .......... .......... ..........  540K\n 51300K .......... .......... .......... .......... ..........  366K\n 51350K .......... .......... .......... .......... ..........  359K\n 51400K .......... .......... .......... .......... ..........  537K\n 51450K .......... .......... .......... .......... ..........  538K\n 51500K .......... .......... .......... .......... ..........  543K\n 51550K .......... .......... .......... .......... ..........  535K\n 51600K .......... .......... .......... .......... ..........  539K\n 51650K .......... .......... .......... .......... ..........  543K\n 51700K .......... .......... .......... .......... ..........  543K\n 51750K .......... .......... .......... .......... ..........  542K\n 51800K .......... .......... .......... .......... ..........  540K\n 51850K .......... .......... .......... .......... ..........  272K\n 51900K .......... .......... .......... .......... .......... 40.4M\n 51950K .......... .......... .......... .......... ..........  541K\n 52000K .......... .......... .......... .......... ..........  542K\n 52050K .......... .......... .......... .......... ..........  541K\n 52100K .......... .......... .......... .......... ..........  544K\n 52150K .......... .......... .......... .......... ..........  537K\n 52200K .......... .......... .......... .......... ..........  545K\n 52250K .......... .......... .......... .......... ..........  527K\n 52300K .......... .......... .......... .......... ..........  553K\n 52350K .......... .......... .......... .......... ..........  540K\n 52400K .......... .......... .......... .......... ..........  540K\n 52450K .......... .......... .......... .......... ..........  540K\n 52500K .......... .......... .......... .......... ..........  269K\n 52550K .......... .......... .......... .......... ..........  539K\n 52600K .......... .......... .......... .......... ..........  534K\n 52650K .......... .......... .......... .......... ..........  271K\n 52700K .......... .......... .......... .......... ..........  539K\n 52750K .......... .......... .......... .......... ..........  539K\n 52800K .......... .......... .......... .......... ..........  539K\n 52850K .......... .......... .......... .......... ..........  541K\n 52900K .......... .......... .......... .......... ..........  537K\n 52950K .......... .......... .......... .......... ..........  273K\n 53000K .......... .......... .......... .......... ..........  541K\n 53050K .......... .......... .......... .......... ..........  541K\n 53100K .......... .......... .......... .......... ..........  536K\n 53150K .......... .......... .......... .......... ..........  540K\n 53200K .......... .......... .......... .......... ..........  272K\n 53250K .......... .......... .......... .......... ..........  541K\n 53300K .......... .......... .......... .......... ..........  542K\n 53350K .......... .......... .......... .......... ..........  540K\n 53400K .......... .......... .......... .......... ..........  538K\n 53450K .......... .......... .......... .......... ..........  541K\n 53500K .......... .......... .......... .......... ..........  532K\n 53550K .......... .......... .......... .......... ..........  272K\n 53600K .......... .......... .......... .......... ..........  541K\n 53650K .......... .......... .......... .......... ..........  539K\n 53700K .......... .......... .......... .......... ..........  544K\n 53750K .......... .......... .......... .......... ..........  544K\n 53800K .......... .......... .......... .......... ..........  538K\n 53850K .......... .......... .......... .......... ..........  541K\n 53900K .......... .......... .......... .......... ..........  273K\n 53950K .......... .......... .......... .......... ..........  542K\n 54000K .......... .......... .......... .......... ..........  538K\n 54050K .......... .......... .......... .......... ..........  538K\n 54100K .......... .......... .......... .......... ..........  537K\n 54150K .......... .......... .......... .......... ..........  542K\n 54200K .......... .......... .......... .......... ..........  271K\n 54250K .......... .......... .......... .......... ..........  539K\n 54300K .......... .......... .......... .......... ..........  538K\n 54350K .......... .......... .......... .......... ..........  543K\n 54400K .......... .......... .......... .......... ..........  540K\n 54450K .......... .......... .......... .......... ..........  540K\n 54500K .......... .......... .......... .......... ..........  541K\n 54550K .......... .......... .......... .......... ..........  539K\n 54600K .......... .......... .......... .......... ..........  537K\n 54650K .......... .......... .......... .......... ..........  181K\n 54700K .......... .......... .......... .......... .......... 18.2M\n 54750K .......... .......... .......... .......... ..........  273K\n 54800K .......... .......... .......... .......... ..........  537K\n 54850K .......... .......... .......... .......... ..........  540K\n 54900K .......... .......... .......... .......... ..........  541K\n 54950K .......... .......... .......... .......... ..........  271K\n 55000K .......... .......... .......... .......... ..........  541K\n 55050K .......... .......... .......... .......... ..........  542K\n 55100K .......... .......... .......... .......... ..........  542K\n 55150K .......... .......... .......... .......... ..........  544K\n 55200K .......... .......... .......... .......... ..........  541K\n 55250K .......... .......... .......... .......... ..........  534K\n 55300K .......... .......... .......... .......... ..........  539K\n 55350K .......... .......... .......... .......... ..........  541K\n 55400K .......... .......... .......... .......... ..........  271K\n 55450K .......... .......... .......... .......... ..........  541K\n 55500K .......... .......... .......... .......... ..........  541K\n 55550K .......... .......... .......... .......... ..........  542K\n 55600K .......... .......... .......... .......... ..........  543K\n 55650K .......... .......... .......... .......... ..........  543K\n 55700K .......... .......... .......... .......... ..........  541K\n 55750K .......... .......... .......... .......... ..........  544K\n 55800K .......... .......... .......... .......... ..........  272K\n 55850K .......... .......... .......... .......... .......... 38.2M\n 55900K .......... .......... .......... .......... ..........  507K\n 55950K .......... .......... .......... .......... ..........  281K\n 56000K .......... .......... .......... .......... ..........  513K\n 56050K .......... .......... .......... .......... ..........  529K\n 56100K .......... .......... .......... .......... ..........  540K\n 56150K .......... .......... .......... .......... ..........  541K\n 56200K .......... .......... .......... .......... ..........  278K\n 56250K .......... .......... .......... .......... ..........  528K\n 56300K .......... .......... .......... .......... ..........  543K\n 56350K .......... .......... .......... .......... ..........  540K\n 56400K .......... .......... .......... .......... ..........  530K\n 56450K .......... .......... .......... .......... ..........  534K\n 56500K .......... .......... .......... .......... ..........  545K\n 56550K .......... .......... .......... .......... ..........  545K\n 56600K .......... .......... .......... .......... ..........  528K\n 56650K .......... .......... .......... .......... ..........  540K\n 56700K .......... .......... .......... .......... ..........  540K\n 56750K .......... .......... .......... .......... ..........  538K\n 56800K .......... .......... .......... .......... ..........  539K\n 56850K .......... .......... .......... .......... ..........  539K\n 56900K .......... .......... .......... .......... ..........  531K\n 56950K .......... .......... .......... .......... ..........  541K\n 57000K .......... .......... .......... .......... ..........  275K\n 57050K .......... .......... .......... .......... ..........  542K\n 57100K .......... .......... .......... .......... ..........  542K\n 57150K .......... .......... .......... .......... .......... 9.41M\n 57200K .......... .......... .......... .......... ..........  542K\n 57250K .......... .......... .......... .......... ..........  543K\n 57300K .......... .......... .......... .......... ..........  537K\n 57350K .......... .......... .......... .......... ..........  543K\n 57400K .......... .......... .......... .......... ..........  272K\n 57450K .......... .......... .......... .......... ..........  542K\n 57500K .......... .......... .......... .......... ..........  542K\n 57550K .......... .......... .......... .......... ..........  539K\n 57600K .......... .......... .......... .......... ..........  541K\n 57650K .......... .......... .......... .......... ..........  541K\n 57700K .......... .......... .......... .......... ..........  541K\n 57750K .......... .......... .......... .......... ..........  135M\n 57800K .......... .......... .......... .......... ..........  272K\n 57850K .......... .......... .......... .......... ..........  541K\n 57900K .......... .......... .......... .......... ..........  539K\n 57950K .......... .......... .......... .......... ..........  540K\n 58000K .......... .......... .......... .......... ..........  270K\n 58050K .......... .......... .......... .......... ..........  110M\n 58100K .......... .......... .......... .......... ..........  530K\n 58150K .......... .......... .......... .......... ..........  270K\n 58200K .......... .......... .......... .......... ..........  532K\n 58250K .......... .......... .......... .......... ..........  538K\n 58300K .......... .......... .......... .......... ..........  271K\n 58350K .......... .......... .......... .......... ..........  536K\n 58400K .......... .......... .......... .......... ..........  539K\n 58450K .......... .......... .......... .......... ..........  535K\n 58500K .......... .......... .......... .......... ..........  537K\n 58550K .......... .......... .......... .......... ..........  537K\n 58600K .......... .......... .......... .......... ..........  537K\n 58650K .......... .......... .......... .......... ..........  539K\n 58700K .......... .......... .......... .......... ..........  535K\n 58750K .......... .......... .......... .......... ..........  537K\n 58800K .......... .......... .......... .......... ..........  535K\n 58850K .......... .......... .......... .......... ..........  538K\n 58900K .......... .......... .......... .......... ..........  537K\n 58950K .......... .......... .......... .......... ..........  273K\n 59000K .......... .......... .......... .......... ..........  270K\n 59050K .......... .......... .......... .......... .......... 23.4M\n 59100K .......... .......... .......... .......... ..........  271K\n 59150K .......... .......... .......... .......... ..........  537K\n 59200K .......... .......... .......... .......... ..........  268K\n 59250K .......... .......... .......... .......... ..........  269K\n 59300K .......... .......... .......... .......... ..........  270K\n 59350K .......... .......... .......... .......... ..........  270K\n 59400K .......... .......... .......... .......... ..........  270K\n 59450K .......... .......... .......... .......... ..........  269K\n 59500K .......... .......... .......... .......... ..........  348K\n 59550K .......... .......... .......... .......... ..........  369K\n 59600K .......... .......... .......... .......... ..........  269K\n 59650K .......... .......... .......... .......... ..........  270K\n 59700K .......... .......... .......... .......... ..........  318K\n 59750K .......... .......... .......... .......... ..........  234K\n 59800K .......... .......... .......... .......... ..........  269K\n 59850K .......... .......... .......... .......... ..........  538K\n 59900K .......... .......... .......... .......... ..........  270K\n 59950K .......... .......... .......... .......... ..........  269K\n 60000K .......... .......... .......... .......... ..........  269K\n 60050K .......... .......... .......... .......... ..........  352K\n 60100K .......... .......... .......... .......... ..........  361K\n 60150K .......... .......... .......... .......... ..........  269K\n 60200K .......... .......... .......... .......... ..........  208K\n 60250K .......... .......... .......... .......... ..........  498K\n 60300K .......... .......... .......... .......... ..........  282K\n 60350K .......... .......... .......... .......... ..........  270K\n 60400K .......... .......... .......... .......... ..........  538K\n 60450K .......... .......... .......... .......... ..........  491K\n 60500K .......... .......... .......... .......... ..........  283K\n 60550K .......... .......... .......... .......... ..........  499K\n 60600K .......... .......... .......... .......... ..........  280K\n 60650K .......... .........                                   88.7M=1m48s\n\n2024-01-01 19:00:21 (562 KB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-01-01 19:00:24--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  272K 3s\n    50K .......... .......... .......... .......... .......... 12%  273K 3s\n   100K .......... .......... .......... .......... .......... 18%  272K 2s\n   150K .......... .......... .......... .......... .......... 24%  272K 2s\n   200K .......... .......... .......... .......... .......... 30%  273K 2s\n   250K .......... .......... .......... .......... .......... 36%  272K 2s\n   300K .......... .......... .......... .......... .......... 42%  544K 2s\n   350K .......... .......... .......... .......... .......... 48%  273K 1s\n   400K .......... .......... .......... .......... .......... 54%  273K 1s\n   450K .......... .......... .......... .......... .......... 60%  543K 1s\n   500K .......... .......... .......... .......... .......... 66%  544K 1s\n   550K .......... .......... .......... .......... .......... 72%  543K 1s\n   600K .......... .......... .......... .......... .......... 78%  531K 1s\n   650K .......... .......... .......... .......... .......... 84%  276K 0s\n   700K .......... .......... .......... .......... .......... 90%  542K 0s\n   750K .......... .......... .......... .......... .......... 96%  541K 0s\n   800K .......... .......... .......                         100% 81.2M=2.3s\n\n2024-01-01 19:00:27 (361 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2024-01-01T19:00:39.559977",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 141.3732786178589, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-01-01 18:58:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  181K    50K .......... .......... .......... .......... ..........  271K   100K .......... .......... .......... .......... ..........  271K   150K .......... .......... .......... .......... ..........  534K   200K .......... .......... .......... .......... ..........  270K   250K .......... .......... .......... .......... ..........  539K   300K .......... .......... .......... .......... ..........  542K   350K .......... .......... .......... .......... ..........  538K   400K .......... .......... .......... .......... ..........  542K   450K .......... .......... .......... .......... ..........  536K   500K .......... .......... .......... .......... .......... 10.6M   550K .......... .......... .......... .......... ..........  567K   600K .......... .......... .......... .......... ..........  544K   650K .......... .......... .......... .......... .......... 9.06M   700K .......... .......... .......... .......... ..........  572K   750K .......... .......... .......... .......... ..........  544K   800K .......... .......... .......... .......... .......... 8.68M   850K .......... .......... .......... .......... ..........  576K   900K .......... .......... .......... .......... ..........  546K   950K .......... .......... .......... .......... .......... 58.7M  1000K .......... .......... .......... .......... ..........  543K  1050K .......... .......... .......... .......... ..........  193M  1100K .......... .......... .......... .......... ..........  546K  1150K .......... .......... .......... .......... .......... 7.19M  1200K .......... .......... .......... .......... ..........  582K  1250K .......... .......... .......... .......... .......... 7.86M  1300K .......... .......... .......... .......... ..........  580K  1350K .......... .......... .......... .......... .......... 97.6M  1400K .......... .......... .......... .......... ..........  545K  1450K .......... .......... .......... .......... .......... 77.8M  1500K .......... .......... .......... .......... ..........  545K  1550K .......... .......... .......... .......... ..........  135M  1600K .......... .......... .......... .......... .......... 7.25M  1650K .......... .......... .......... .......... ..........  585K  1700K .......... .......... .......... .......... .......... 8.61M  1750K .......... .......... .......... .......... ..........  574K  1800K .......... .......... .......... .......... .......... 79.0M  1850K .......... .......... .......... .......... .......... 10.7M  1900K .......... .......... .......... .......... ..........  569K  1950K .......... .......... .......... .......... .......... 8.88M  2000K .......... .......... .......... .......... ..........  579K  2050K .......... .......... .......... .......... ..........  104M  2100K .......... .......... .......... .......... .......... 9.23M  2150K .......... .......... .......... .......... ..........  579K  2200K .......... .......... .......... .......... .......... 80.4M  2250K .......... .......... .......... .......... .......... 9.17M  2300K .......... .......... .......... .......... ..........  575K  2350K .......... .......... .......... .......... ..........  106M  2400K .......... .......... .......... .......... .......... 6.50M  2450K .......... .......... .......... .......... ..........  596K  2500K .......... .......... .......... .......... .......... 58.5M  2550K .......... .......... .......... .......... .......... 8.71M  2600K .......... .......... .......... .......... ..........  582K  2650K .......... .......... .......... .......... .......... 77.0M  2700K .......... .......... .......... .......... .......... 8.53M  2750K .......... .......... .......... .......... ..........  577K  2800K .......... .......... .......... .......... ..........  106M  2850K .......... .......... .......... .......... .......... 6.39M  2900K .......... .......... .......... .......... ..........  175M  2950K .......... .......... .......... .......... ..........  585K  3000K .......... .......... .......... .......... ..........  179M  3050K .......... .......... .......... .......... .......... 7.08M  3100K .......... .......... .......... .......... ..........  588K  3150K .......... .......... .......... .......... ..........  100M  3200K .......... .......... .......... .......... .......... 7.93M  3250K .......... .......... .......... .......... ..........  584K  3300K .......... .......... .......... .......... .......... 82.2M  3350K .......... .......... .......... .......... ..........  116M  3400K .......... .......... .......... .......... .......... 7.91M  3450K .......... .......... .......... .......... ..........  587K  3500K .......... .......... .......... .......... ..........  211M  3550K .......... .......... .......... .......... .......... 8.05M  3600K .......... .......... .......... .......... .......... 47.4M  3650K .......... .......... .......... .......... ..........  590K  3700K .......... .......... .......... .......... ..........  157M  3750K .......... .......... .......... .......... .......... 7.49M  3800K .......... .......... .......... .......... .......... 74.6M  3850K .......... .......... .......... .......... ..........  572K  3900K .......... .......... .......... .......... ..........  106M  3950K .......... .......... .......... .......... .......... 14.2M  4000K .......... .......... .......... .......... .......... 1.13M  4050K .......... .......... .......... .......... .......... 1.07M  4100K .......... .......... .......... .......... .......... 95.4M  4150K .......... .......... .......... .......... .......... 14.8M  4200K .......... .......... .......... .......... ..........  513K  4250K .......... .......... .......... .......... .......... 85.4M  4300K .......... .......... .......... .......... .......... 92.5M  4350K .......... .......... .......... .......... .......... 85.2M  4400K .......... .......... .......... .......... ..........  126M  4450K .......... .......... .......... .......... ..........  602K  4500K .......... .......... .......... .......... .......... 74.2M  4550K .......... .......... .......... .......... .......... 6.82M  4600K .......... .......... .......... .......... ..........  594K  4650K .......... .......... .......... .......... .......... 37.6M  4700K .......... .......... .......... .......... ..........  503K  4750K .......... .......... .......... .......... ..........  105M  4800K .......... .......... .......... .......... ..........  103M  4850K .......... .......... .......... .......... ..........  604K  4900K .......... .......... .......... .......... .......... 42.1M  4950K .......... .......... .......... .......... .......... 1.03M  5000K .......... .......... .......... .......... .......... 1.10M  5050K .......... .......... .......... .......... .......... 7.26M  5100K .......... .......... .......... .......... ..........  581K  5150K .......... .......... .......... .......... .......... 12.7M  5200K .......... .......... .......... .......... ..........  566K  5250K .......... .......... .......... .......... ..........  106M  5300K .......... .......... .......... .......... .......... 1.03M  5350K .......... .......... .......... .......... .......... 1.09M  5400K .......... .......... .......... .......... .......... 6.89M  5450K .......... .......... .......... .......... ..........  592K  5500K .......... .......... .......... .......... .......... 8.74M  5550K .......... .......... .......... .......... ..........  580K  5600K .......... .......... .......... .......... .......... 53.4M  5650K .......... .......... .......... .......... .......... 5.96M  5700K .......... .......... .......... .......... ..........  598K  5750K .......... .......... .......... .......... ..........  109M  5800K .......... .......... .......... .......... ..........  546K  5850K .......... .......... .......... .......... .......... 94.5M  5900K .......... .......... .......... .......... .......... 1024K  5950K .......... .......... .......... .......... .......... 1.13M  6000K .......... .......... .......... .......... .......... 6.51M  6050K .......... .......... .......... .......... ..........  590K  6100K .......... .......... .......... .......... ..........  123M  6150K .......... .......... .......... .......... .......... 1.01M  6200K .......... .......... .......... .......... .......... 1.11M  6250K .......... .......... .......... .......... .......... 6.24M  6300K .......... .......... .......... .......... ..........  594K  6350K .......... .......... .......... .......... .......... 68.4M  6400K .......... .......... .......... .......... .......... 5.82M  6450K .......... .......... .......... .......... ..........  599K  6500K .......... .......... .......... .......... ..........  495K  6550K .......... .......... .......... .......... .......... 79.0M  6600K .......... .......... .......... .......... .......... 1.10M  6650K .......... .......... .......... .......... .......... 1.23M  6700K .......... .......... .......... .......... .......... 1.01M  6750K .......... .......... .......... .......... .......... 1.11M  6800K .......... .......... .......... .......... .......... 1007K  6850K .......... .......... .......... .......... .......... 1.14M  6900K .......... .......... .......... .......... .......... 1015K  6950K .......... .......... .......... .......... ..........  967K  7000K .......... .......... .......... .......... ..........  598K  7050K .......... .......... .......... .......... .......... 5.73M  7100K .......... .......... .......... .......... ..........  588K  7150K .......... .......... .......... .......... .......... 86.4M  7200K .......... .......... .......... .......... .......... 1.00M  7250K .......... .......... .......... .......... .......... 1.11M  7300K .......... .......... .......... .......... .......... 1.01M  7350K .......... .......... .......... .......... ..........  986K  7400K .......... .......... .......... .......... ..........  583K  7450K .......... .......... .......... .......... ..........  148M  7500K .......... .......... .......... .......... .......... 1022K  7550K .......... .......... .......... .......... .......... 1.11M  7600K .......... .......... .......... .......... .......... 1.02M  7650K .......... .......... .......... .......... .......... 1.09M  7700K .......... .......... .......... .......... .......... 7.76M  7750K .......... .......... .......... .......... ..........  272K  7800K .......... .......... .......... .......... .......... 91.8M  7850K .......... .......... .......... .......... ..........  372K  7900K .......... .......... .......... .......... .......... 80.5M  7950K .......... .......... .......... .......... .......... 1.01M  8000K .......... .......... .......... .......... ..........  541K  8050K .......... .......... .......... .......... ..........  542K  8100K .......... .......... .......... .......... ..........  542K  8150K .......... .......... .......... .......... ..........  536K  8200K .......... .......... .......... .......... ..........  565K  8250K .......... .......... .......... .......... ..........  542K  8300K .......... .......... .......... .......... .......... 1.00M  8350K .......... .......... .......... .......... ..........  357K  8400K .......... .......... .......... .......... .......... 1.10M  8450K .......... .......... .......... .......... ..........  376K  8500K .......... .......... .......... .......... ..........  520K  8550K .......... .......... .......... .......... ..........  522K  8600K .......... .......... .......... .......... ..........  542K  8650K .......... .......... .......... .......... ..........  533K  8700K .......... .......... .......... .......... ..........  544K  8750K .......... .......... .......... .......... ..........  544K  8800K .......... .......... .......... .......... ..........  541K  8850K .......... .......... .......... .......... ..........  542K  8900K .......... .......... .......... .......... ..........  540K  8950K .......... .......... .......... .......... ..........  349K  9000K .......... .......... .......... .......... ..........  541K  9050K .......... .......... .......... .......... .......... 1.18M  9100K .......... .......... .......... .......... ..........  543K  9150K .......... .......... .......... .......... ..........  534K  9200K .......... .......... .......... .......... ..........  534K  9250K .......... .......... .......... .......... ..........  541K  9300K .......... .......... .......... .......... ..........  540K  9350K .......... .......... .......... .......... ..........  279K  9400K .......... .......... .......... .......... ..........  538K  9450K .......... .......... .......... .......... ..........  870K  9500K .......... .......... .......... .......... ..........  543K  9550K .......... .......... .......... .......... ..........  550K  9600K .......... .......... .......... .......... ..........  539K  9650K .......... .......... .......... .......... .......... 1.14M  9700K .......... .......... .......... .......... ..........  534K  9750K .......... .......... .......... .......... ..........  269K  9800K .......... .......... .......... .......... ..........  542K  9850K .......... .......... .......... .......... ..........  588K  9900K .......... .......... .......... .......... ..........  541K  9950K .......... .......... .......... .......... ..........  546K 10000K .......... .......... .......... .......... ..........  541K 10050K .......... .......... .......... .......... ..........  885K 10100K .......... .......... .......... .......... ..........  543K 10150K .......... .......... .......... .......... ..........  218K 10200K .......... .......... .......... .......... .......... 59.0M 10250K .......... .......... .......... .......... ..........  542K 10300K .......... .......... .......... .......... ..........  285K 10350K .......... .......... .......... .......... ..........  496K 10400K .......... .......... .......... .......... ..........  541K 10450K .......... .......... .......... .......... ..........  541K 10500K .......... .......... .......... .......... ..........  539K 10550K .......... .......... .......... .......... ..........  272K 10600K .......... .......... .......... .......... ..........  540K 10650K .......... .......... .......... .......... ..........  543K 10700K .......... .......... .......... .......... ..........  541K 10750K .......... .......... .......... .......... ..........  540K 10800K .......... .......... .......... .......... ..........  543K 10850K .......... .......... .......... .......... ..........  541K 10900K .......... .......... .......... .......... ..........  540K 10950K .......... .......... .......... .......... ..........  539K 11000K .......... .......... .......... .......... ..........  541K 11050K .......... .......... .......... .......... ..........  533K 11100K .......... .......... .......... .......... ..........  531K 11150K .......... .......... .......... .......... ..........  217K 11200K .......... .......... .......... .......... ..........  160M 11250K .......... .......... .......... .......... ..........  272K 11300K .......... .......... .......... .......... ..........  540K 11350K .......... .......... .......... .......... ..........  272K 11400K .......... .......... .......... .......... ..........  542K 11450K .......... .......... .......... .......... ..........  541K 11500K .......... .......... .......... .......... ..........  543K 11550K .......... .......... .......... .......... .................  399K 50150K .......... .......... .......... .......... ..........  331K 50200K .......... .......... .......... .......... ..........  539K 50250K .......... .......... .......... .......... ..........  270K 50300K .......... .......... .......... .......... ..........  540K 50350K .......... .......... .......... .......... ..........  272K 50400K .......... .......... .......... .......... ..........  538K 50450K .......... .......... .......... .......... ..........  542K 50500K .......... .......... .......... .......... ..........  272K 50550K .......... .......... .......... .......... ..........  540K 50600K .......... .......... .......... .......... ..........  380K 50650K .......... .......... .......... .......... ..........  344K 50700K .......... .......... .......... .......... ..........  377K 50750K .......... .......... .......... .......... ..........  348K 50800K .......... .......... .......... .......... ..........  540K 50850K .......... .......... .......... .......... ..........  375K 50900K .......... .......... .......... .......... ..........  346K 50950K .......... .......... .......... .......... ..........  542K 51000K .......... .......... .......... .......... ..........  270K 51050K .......... .......... .......... .......... ..........  541K 51100K .......... .......... .......... .......... ..........  271K 51150K .......... .......... .......... .......... ..........  541K 51200K .......... .......... .......... .......... ..........  534K 51250K .......... .......... .......... .......... ..........  540K 51300K .......... .......... .......... .......... ..........  366K 51350K .......... .......... .......... .......... ..........  359K 51400K .......... .......... .......... .......... ..........  537K 51450K .......... .......... .......... .......... ..........  538K 51500K .......... .......... .......... .......... ..........  543K 51550K .......... .......... .......... .......... ..........  535K 51600K .......... .......... .......... .......... ..........  539K 51650K .......... .......... .......... .......... ..........  543K 51700K .......... .......... .......... .......... ..........  543K 51750K .......... .......... .......... .......... ..........  542K 51800K .......... .......... .......... .......... ..........  540K 51850K .......... .......... .......... .......... ..........  272K 51900K .......... .......... .......... .......... .......... 40.4M 51950K .......... .......... .......... .......... ..........  541K 52000K .......... .......... .......... .......... ..........  542K 52050K .......... .......... .......... .......... ..........  541K 52100K .......... .......... .......... .......... ..........  544K 52150K .......... .......... .......... .......... ..........  537K 52200K .......... .......... .......... .......... ..........  545K 52250K .......... .......... .......... .......... ..........  527K 52300K .......... .......... .......... .......... ..........  553K 52350K .......... .......... .......... .......... ..........  540K 52400K .......... .......... .......... .......... ..........  540K 52450K .......... .......... .......... .......... ..........  540K 52500K .......... .......... .......... .......... ..........  269K 52550K .......... .......... .......... .......... ..........  539K 52600K .......... .......... .......... .......... ..........  534K 52650K .......... .......... .......... .......... ..........  271K 52700K .......... .......... .......... .......... ..........  539K 52750K .......... .......... .......... .......... ..........  539K 52800K .......... .......... .......... .......... ..........  539K 52850K .......... .......... .......... .......... ..........  541K 52900K .......... .......... .......... .......... ..........  537K 52950K .......... .......... .......... .......... ..........  273K 53000K .......... .......... .......... .......... ..........  541K 53050K .......... .......... .......... .......... ..........  541K 53100K .......... .......... .......... .......... ..........  536K 53150K .......... .......... .......... .......... ..........  540K 53200K .......... .......... .......... .......... ..........  272K 53250K .......... .......... .......... .......... ..........  541K 53300K .......... .......... .......... .......... ..........  542K 53350K .......... .......... .......... .......... ..........  540K 53400K .......... .......... .......... .......... ..........  538K 53450K .......... .......... .......... .......... ..........  541K 53500K .......... .......... .......... .......... ..........  532K 53550K .......... .......... .......... .......... ..........  272K 53600K .......... .......... .......... .......... ..........  541K 53650K .......... .......... .......... .......... ..........  539K 53700K .......... .......... .......... .......... ..........  544K 53750K .......... .......... .......... .......... ..........  544K 53800K .......... .......... .......... .......... ..........  538K 53850K .......... .......... .......... .......... ..........  541K 53900K .......... .......... .......... .......... ..........  273K 53950K .......... .......... .......... .......... ..........  542K 54000K .......... .......... .......... .......... ..........  538K 54050K .......... .......... .......... .......... ..........  538K 54100K .......... .......... .......... .......... ..........  537K 54150K .......... .......... .......... .......... ..........  542K 54200K .......... .......... .......... .......... ..........  271K 54250K .......... .......... .......... .......... ..........  539K 54300K .......... .......... .......... .......... ..........  538K 54350K .......... .......... .......... .......... ..........  543K 54400K .......... .......... .......... .......... ..........  540K 54450K .......... .......... .......... .......... ..........  540K 54500K .......... .......... .......... .......... ..........  541K 54550K .......... .......... .......... .......... ..........  539K 54600K .......... .......... .......... .......... ..........  537K 54650K .......... .......... .......... .......... ..........  181K 54700K .......... .......... .......... .......... .......... 18.2M 54750K .......... .......... .......... .......... ..........  273K 54800K .......... .......... .......... .......... ..........  537K 54850K .......... .......... .......... .......... ..........  540K 54900K .......... .......... .......... .......... ..........  541K 54950K .......... .......... .......... .......... ..........  271K 55000K .......... .......... .......... .......... ..........  541K 55050K .......... .......... .......... .......... ..........  542K 55100K .......... .......... .......... .......... ..........  542K 55150K .......... .......... .......... .......... ..........  544K 55200K .......... .......... .......... .......... ..........  541K 55250K .......... .......... .......... .......... ..........  534K 55300K .......... .......... .......... .......... ..........  539K 55350K .......... .......... .......... .......... ..........  541K 55400K .......... .......... .......... .......... ..........  271K 55450K .......... .......... .......... .......... ..........  541K 55500K .......... .......... .......... .......... ..........  541K 55550K .......... .......... .......... .......... ..........  542K 55600K .......... .......... .......... .......... ..........  543K 55650K .......... .......... .......... .......... ..........  543K 55700K .......... .......... .......... .......... ..........  541K 55750K .......... .......... .......... .......... ..........  544K 55800K .......... .......... .......... .......... ..........  272K 55850K .......... .......... .......... .......... .......... 38.2M 55900K .......... .......... .......... .......... ..........  507K 55950K .......... .......... .......... .......... ..........  281K 56000K .......... .......... .......... .......... ..........  513K 56050K .......... .......... .......... .......... ..........  529K 56100K .......... .......... .......... .......... ..........  540K 56150K .......... .......... .......... .......... ..........  541K 56200K .......... .......... .......... .......... ..........  278K 56250K .......... .......... .......... .......... ..........  528K 56300K .......... .......... .......... .......... ..........  543K 56350K .......... .......... .......... .......... ..........  540K 56400K .......... .......... .......... .......... ..........  530K 56450K .......... .......... .......... .......... ..........  534K 56500K .......... .......... .......... .......... ..........  545K 56550K .......... .......... .......... .......... ..........  545K 56600K .......... .......... .......... .......... ..........  528K 56650K .......... .......... .......... .......... ..........  540K 56700K .......... .......... .......... .......... ..........  540K 56750K .......... .......... .......... .......... ..........  538K 56800K .......... .......... .......... .......... ..........  539K 56850K .......... .......... .......... .......... ..........  539K 56900K .......... .......... .......... .......... ..........  531K 56950K .......... .......... .......... .......... ..........  541K 57000K .......... .......... .......... .......... ..........  275K 57050K .......... .......... .......... .......... ..........  542K 57100K .......... .......... .......... .......... ..........  542K 57150K .......... .......... .......... .......... .......... 9.41M 57200K .......... .......... .......... .......... ..........  542K 57250K .......... .......... .......... .......... ..........  543K 57300K .......... .......... .......... .......... ..........  537K 57350K .......... .......... .......... .......... ..........  543K 57400K .......... .......... .......... .......... ..........  272K 57450K .......... .......... .......... .......... ..........  542K 57500K .......... .......... .......... .......... ..........  542K 57550K .......... .......... .......... .......... ..........  539K 57600K .......... .......... .......... .......... ..........  541K 57650K .......... .......... .......... .......... ..........  541K 57700K .......... .......... .......... .......... ..........  541K 57750K .......... .......... .......... .......... ..........  135M 57800K .......... .......... .......... .......... ..........  272K 57850K .......... .......... .......... .......... ..........  541K 57900K .......... .......... .......... .......... ..........  539K 57950K .......... .......... .......... .......... ..........  540K 58000K .......... .......... .......... .......... ..........  270K 58050K .......... .......... .......... .......... ..........  110M 58100K .......... .......... .......... .......... ..........  530K 58150K .......... .......... .......... .......... ..........  270K 58200K .......... .......... .......... .......... ..........  532K 58250K .......... .......... .......... .......... ..........  538K 58300K .......... .......... .......... .......... ..........  271K 58350K .......... .......... .......... .......... ..........  536K 58400K .......... .......... .......... .......... ..........  539K 58450K .......... .......... .......... .......... ..........  535K 58500K .......... .......... .......... .......... ..........  537K 58550K .......... .......... .......... .......... ..........  537K 58600K .......... .......... .......... .......... ..........  537K 58650K .......... .......... .......... .......... ..........  539K 58700K .......... .......... .......... .......... ..........  535K 58750K .......... .......... .......... .......... ..........  537K 58800K .......... .......... .......... .......... ..........  535K 58850K .......... .......... .......... .......... ..........  538K 58900K .......... .......... .......... .......... ..........  537K 58950K .......... .......... .......... .......... ..........  273K 59000K .......... .......... .......... .......... ..........  270K 59050K .......... .......... .......... .......... .......... 23.4M 59100K .......... .......... .......... .......... ..........  271K 59150K .......... .......... .......... .......... ..........  537K 59200K .......... .......... .......... .......... ..........  268K 59250K .......... .......... .......... .......... ..........  269K 59300K .......... .......... .......... .......... ..........  270K 59350K .......... .......... .......... .......... ..........  270K 59400K .......... .......... .......... .......... ..........  270K 59450K .......... .......... .......... .......... ..........  269K 59500K .......... .......... .......... .......... ..........  348K 59550K .......... .......... .......... .......... ..........  369K 59600K .......... .......... .......... .......... ..........  269K 59650K .......... .......... .......... .......... ..........  270K 59700K .......... .......... .......... .......... ..........  318K 59750K .......... .......... .......... .......... ..........  234K 59800K .......... .......... .......... .......... ..........  269K 59850K .......... .......... .......... .......... ..........  538K 59900K .......... .......... .......... .......... ..........  270K 59950K .......... .......... .......... .......... ..........  269K 60000K .......... .......... .......... .......... ..........  269K 60050K .......... .......... .......... .......... ..........  352K 60100K .......... .......... .......... .......... ..........  361K 60150K .......... .......... .......... .......... ..........  269K 60200K .......... .......... .......... .......... ..........  208K 60250K .......... .......... .......... .......... ..........  498K 60300K .......... .......... .......... .......... ..........  282K 60350K .......... .......... .......... .......... ..........  270K 60400K .......... .......... .......... .......... ..........  538K 60450K .......... .......... .......... .......... ..........  491K 60500K .......... .......... .......... .......... ..........  283K 60550K .......... .......... .......... .......... ..........  499K 60600K .......... .......... .......... .......... ..........  280K 60650K .......... .........                                   88.7M=1m48s2024-01-01 19:00:21 (562 KB/s) - 'exp_quant.zip' saved [62125370]--2024-01-01 19:00:24--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  272K 3s    50K .......... .......... .......... .......... .......... 12%  273K 3s   100K .......... .......... .......... .......... .......... 18%  272K 2s   150K .......... .......... .......... .......... .......... 24%  272K 2s   200K .......... .......... .......... .......... .......... 30%  273K 2s   250K .......... .......... .......... .......... .......... 36%  272K 2s   300K .......... .......... .......... .......... .......... 42%  544K 2s   350K .......... .......... .......... .......... .......... 48%  273K 1s   400K .......... .......... .......... .......... .......... 54%  273K 1s   450K .......... .......... .......... .......... .......... 60%  543K 1s   500K .......... .......... .......... .......... .......... 66%  544K 1s   550K .......... .......... .......... .......... .......... 72%  543K 1s   600K .......... .......... .......... .......... .......... 78%  531K 1s   650K .......... .......... .......... .......... .......... 84%  276K 0s   700K .......... .......... .......... .......... .......... 90%  542K 0s   750K .......... .......... .......... .......... .......... 96%  541K 0s   800K .......... .......... .......                         100% 81.2M=2.3s2024-01-01 19:00:27 (361 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="42.70816254615784">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-01 18:49:32.394] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-01 18:49:32.394] [jLog] [info] building indexout : ./index[2024-01-01 18:49:32.396] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-01 18:49:32.405] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-01 18:49:32.405] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-01 18:49:32.419] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-01 18:49:32.421] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-01 18:49:32.483] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-01 18:49:32.484] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.6235 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 1.0793 ms-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-01 18:49:32.486] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-01 18:49:32.486] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-01 18:49:32.487] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-01 18:49:32.487] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-01 18:49:32.488] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-01 18:49:32.488] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-01 18:49:32.488] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-01 18:49:32.502] [puff::index::jointLog] [info] # segments = 23[2024-01-01 18:49:32.502] [puff::index::jointLog] [info] total length = 19592[2024-01-01 18:49:32.502] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-01 18:49:32.513] [puff::index::jointLog] [info] positional integer width = 15[2024-01-01 18:49:32.513] [puff::index::jointLog] [info] seqSize = 19592[2024-01-01 18:49:32.513] [puff::index::jointLog] [info] rankSize = 19592[2024-01-01 18:49:32.513] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-01 18:49:32.513] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-01 18:49:32.609] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-01 18:49:32.609] [puff::index::jointLog] [info] chunk size = 9796[2024-01-01 18:49:32.609] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-01 18:49:32.609] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-01 18:49:32.610] [puff::index::jointLog] [info] finished populating pos vector[2024-01-01 18:49:32.611] [puff::index::jointLog] [info] writing index components[2024-01-01 18:49:32.627] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-01 18:49:32.633] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-01 18:49:32.922] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-01 18:49:32.922] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-01 18:49:32.922] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-01 18:49:32.922] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-01 18:49:32.922] [jointLog] [info] parsing read library format[2024-01-01 18:49:32.922] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 591.04 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.9739 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 572.28 us----------------------------------------------------------------------------------| Loading mphf table | Time = 993.87 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.2467 ms-----------------------------------------[2024-01-01 18:49:32.973] [jointLog] [info] Loading pufferfish index[2024-01-01 18:49:32.974] [jointLog] [info] Loading dense pufferfish index.size = 19592-----------------------------------------| Loading sequence | Time = 1.239 ms-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 2.2339 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 1.6869 ms----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 515.81 us-----------------------------------------[2024-01-01 18:49:32.988] [jointLog] [info] done[2024-01-01 18:49:32.988] [jointLog] [info] Index contained 15 targets[2024-01-01 18:49:32.988] [jointLog] [info] Number of decoys : 0[2024-01-01 18:49:33.032] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-01 18:49:33.032] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-01 18:49:33.034] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-01 18:49:33.034] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-01 18:49:33.034] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-01 18:49:33.034] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-01 18:49:33.034] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-01 18:49:33.034] [jointLog] [info] Mapping rate = 100%[2024-01-01 18:49:33.034] [jointLog] [info] finished quantifyLibrary()[2024-01-01 18:49:33.040] [jointLog] [info] Starting optimizer[2024-01-01 18:49:33.040] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-01 18:49:33.040] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-01-01 18:49:33.041] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-01 18:49:33.041] [jointLog] [info] Finished optimizer[2024-01-01 18:49:33.041] [jointLog] [info] writing output [2024-01-01 18:49:33.048] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="29.460474729537964">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-01 18:50:06.488] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-01 18:50:06.488] [jLog] [info] building indexout : ./index[2024-01-01 18:50:06.490] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-01 18:50:06.499] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-01 18:50:06.499] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-01 18:50:06.515] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-01 18:50:06.517] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-01 18:50:06.582] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-01 18:50:06.582] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.5013 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 765.5 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-01 18:50:06.585] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-01 18:50:06.585] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-01 18:50:06.585] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-01 18:50:06.585] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-01 18:50:06.586] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-01 18:50:06.586] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-01 18:50:06.586] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-01 18:50:06.600] [puff::index::jointLog] [info] # segments = 23[2024-01-01 18:50:06.600] [puff::index::jointLog] [info] total length = 19592[2024-01-01 18:50:06.600] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-01 18:50:06.612] [puff::index::jointLog] [info] positional integer width = 15[2024-01-01 18:50:06.612] [puff::index::jointLog] [info] seqSize = 19592[2024-01-01 18:50:06.612] [puff::index::jointLog] [info] rankSize = 19592[2024-01-01 18:50:06.612] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-01 18:50:06.612] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elap..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-01 18:50:06.718] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-01 18:50:06.718] [puff::index::jointLog] [info] chunk size = 9796[2024-01-01 18:50:06.718] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-01 18:50:06.718] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-01 18:50:06.720] [puff::index::jointLog] [info] finished populating pos vector[2024-01-01 18:50:06.720] [puff::index::jointLog] [info] writing index components[2024-01-01 18:50:06.741] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-01 18:50:06.750] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-01 18:50:06.826] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-01 18:50:06.826] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-01 18:50:06.826] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-01 18:50:06.826] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-01 18:50:06.826] [jointLog] [info] parsing read library format[2024-01-01 18:50:06.826] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 1.6407 ms-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 2.3186 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 715.77 us-----------------------------------------[2024-01-01 18:50:06.877] [jointLog] [info] Loading pufferfish index[2024-01-01 18:50:06.879] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading mphf table | Time = 1.1537 ms-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.2441 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 1.411 ms-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.6994 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 852.38 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 667.16 us-----------------------------------------[2024-01-01 18:50:06.893] [jointLog] [info] done[2024-01-01 18:50:06.893] [jointLog] [info] Index contained 15 targets[2024-01-01 18:50:06.893] [jointLog] [info] Number of decoys : 0[2024-01-01 18:50:06.940] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-01 18:50:06.940] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-01 18:50:06.942] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-01 18:50:06.942] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-01 18:50:06.942] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-01 18:50:06.942] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-01 18:50:06.942] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-01 18:50:06.942] [jointLog] [info] Mapping rate = 100%[2024-01-01 18:50:06.942] [jointLog] [info] finished quantifyLibrary()[2024-01-01 18:50:06.948] [jointLog] [info] Starting optimizer[2024-01-01 18:50:06.949] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-01 18:50:06.949] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-01-01 18:50:06.950] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-01 18:50:06.950] [jointLog] [info] Finished optimizer[2024-01-01 18:50:06.950] [jointLog] [info] writing output [2024-01-01 18:50:06.957] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="26.122753143310547">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-01 18:50:32.611] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-01 18:50:32.611] [jLog] [info] building indexout : ./index[2024-01-01 18:50:32.612] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-01 18:50:32.624] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-01 18:50:32.624] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-01 18:50:32.639] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-01 18:50:32.641] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-01 18:50:32.700] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-01 18:50:32.700] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.7719 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 783.67 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-01 18:50:32.703] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-01 18:50:32.703] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-01 18:50:32.704] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-01 18:50:32.704] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-01 18:50:32.704] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-01 18:50:32.705] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-01 18:50:32.705] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-01 18:50:32.717] [puff::index::jointLog] [info] # segments = 23[2024-01-01 18:50:32.717] [puff::index::jointLog] [info] total length = 19592[2024-01-01 18:50:32.717] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-01 18:50:32.730] [puff::index::jointLog] [info] positional integer width = 15[2024-01-01 18:50:32.730] [puff::index::jointLog] [info] seqSize = 19592[2024-01-01 18:50:32.730] [puff::index::jointLog] [info] rankSize = 19592[2024-01-01 18:50:32.730] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-01 18:50:32.730] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-01 18:50:32.846] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-01 18:50:32.846] [puff::index::jointLog] [info] chunk size = 9796[2024-01-01 18:50:32.846] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-01 18:50:32.846] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-01 18:50:32.848] [puff::index::jointLog] [info] finished populating pos vector[2024-01-01 18:50:32.848] [puff::index::jointLog] [info] writing index components[2024-01-01 18:50:32.868] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-01 18:50:32.876] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-01 18:50:32.950] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-01 18:50:32.950] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-01 18:50:32.950] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-01 18:50:32.950] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-01 18:50:32.950] [jointLog] [info] parsing read library format[2024-01-01 18:50:32.950] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 412.95 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.9237 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 886.99 us----------------------------------------------------------------------------------| Loading mphf table | Time = 819.22 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.1286 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 914.83 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.6864 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 916.33 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 436.27 us-----------------------------------------[2024-01-01 18:50:32.996] [jointLog] [info] Loading pufferfish index[2024-01-01 18:50:32.997] [jointLog] [info] Loading dense pufferfish index.[2024-01-01 18:50:33.010] [jointLog] [info] done[2024-01-01 18:50:33.010] [jointLog] [info] Index contained 15 targets[2024-01-01 18:50:33.010] [jointLog] [info] Number of decoys : 0[2024-01-01 18:50:33.054] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-01 18:50:33.054] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-01 18:50:33.056] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-01 18:50:33.056] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-01 18:50:33.056] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-01 18:50:33.056] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-01 18:50:33.056] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-01 18:50:33.056] [jointLog] [info] Mapping rate = 100%[2024-01-01 18:50:33.056] [jointLog] [info] finished quantifyLibrary()[2024-01-01 18:50:33.062] [jointLog] [info] Starting optimizer[2024-01-01 18:50:33.062] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-01 18:50:33.062] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-01-01 18:50:33.063] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-01 18:50:33.064] [jointLog] [info] Finished optimizer[2024-01-01 18:50:33.064] [jointLog] [info] writing output [2024-01-01 18:50:33.069] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="31.870504140853882">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "264d37a74fccc00a",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "dd074a8bebddda0e",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/0/f/1/dataset_0f10b36d-b1db-4717-9df7-36c86430871b.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-01-01T18:51:00.310992",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pnxhx",  "galaxy_version": "23.1",  "history_id": "7eeeb2e715aa4d39",  "id": "c90d7d8e6bad9512",  "inputs": {   "quant_type|afile": {    "id": "264d37a74fccc00a",    "src": "hda",    "uuid": "e91ac32b-8f43-41db-b2a7-998c21937f60"   },   "quant_type|transcript": {    "id": "dd074a8bebddda0e",    "src": "hda",    "uuid": "0f10b36d-b1db-4717-9df7-36c86430871b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1704135064.0000000",    "title": "Job End Time",    "value": "2024-01-01 18:51:04"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1704135062.0000000",    "title": "Job Start Time",    "value": "2024-01-01 18:51:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "80f4c84894552f7e",    "src": "hda",    "uuid": "779944db-a719-4140-aeab-77270c61102f"   },   "postSample": {    "id": "f34e6b40ab5bfcc1",    "src": "hda",    "uuid": "dadc027c-eed5-44f9-ba1f-48ffa86e5f2a"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/f/1/dataset_0f10b36d-b1db-4717-9df7-36c86430871b.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-01-01 18:51:02.657] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-01-01 18:51:02.657] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-01-01 18:51:02.658] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat\", fasta = \"/galaxy/server/database/objects/0/f/1/dataset_0f10b36d-b1db-4717-9df7-36c86430871b.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[2024-01-01 18:51:02.906] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2024-01-01 18:51:03.075] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-01-01 18:51:03.079] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-01-01 18:51:03.079] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-01-01 18:51:03.080] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-01-01 18:51:03.081] [jointLog] [info] starting optimizer\n[2024-01-01 18:51:03.081] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-01-01 18:51:03.081] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-01-01 18:51:03.082] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-01-01 18:51:03.082] [jointLog] [info] finished optimizer\n[2024-01-01 18:51:03.082] [jointLog] [info] writing output\n[2024-01-01 18:51:03.088] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/f/1/dataset_0f10b36d-b1db-4717-9df7-36c86430871b.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-01-01 18:51:02.657] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-01-01 18:51:02.657] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-01-01 18:51:02.658] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat\", fasta = \"/galaxy/server/database/objects/0/f/1/dataset_0f10b36d-b1db-4717-9df7-36c86430871b.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[2024-01-01 18:51:02.906] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2024-01-01 18:51:03.075] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-01-01 18:51:03.079] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-01-01 18:51:03.079] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-01-01 18:51:03.080] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-01-01 18:51:03.081] [jointLog] [info] starting optimizer\n[2024-01-01 18:51:03.081] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-01-01 18:51:03.081] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-01-01 18:51:03.082] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-01-01 18:51:03.082] [jointLog] [info] finished optimizer\n[2024-01-01 18:51:03.082] [jointLog] [info] writing output\n[2024-01-01 18:51:03.088] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-01-01T18:51:13.684405",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_3ljbxgx8.sam v. /tmp/history_bam_converted_to_sam_tlyx00m3.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -5014,8 +5015,8 @@\n 1043:NM_174914:1249:169\t419\tNM_174914\t1250\t1\t50M\t=\t1369\t169\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6249:NR_031764:1249:146\t355\tNM_174914\t1250\t1\t50M\t=\t1346\t146\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 1366:NM_174914:1104:195\t339\tNM_174914\t1250\t1\t50M\t=\t1105\t-195\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n+6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 2822:NR_031764:1132:169\t403\tNM_174914\t1252\t1\t50M\t=\t1133\t-169\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n-6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 6516:NM_174914:1111:191\t403\tNM_174914\t1253\t1\t50M\t=\t1112\t-191\tGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 7029:NM_174914:1253:199\t419\tNM_174914\t1254\t1\t50M\t=\t1403\t199\tAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6563:NM_174914:1254:180\t419\tNM_174914\t1255\t1\t50M\t=\t1385\t180\tACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTGT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n@@ -18013,9 +18014,9 @@\n 2071:NM_022658:827:189\t83\tNM_022658\t967\t1\t50M\t=\t828\t-189\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2980:NM_022658:826:190\t83\tNM_022658\t967\t1\t50M\t=\t827\t-190\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9883:NM_022658:822:194\t147\tNM_022658\t967\t1\t50M\t=\t823\t-194\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1395:NM_022658:967:112\t99\tNM_022658\t968\t1\t50M\t=\t1030\t112\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5474:NM_022658:967:171\t99\tNM_022658\t968\t1\t50M\t=\t1089\t171\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1989:NM_022658:833:184\t147\tNM_022658\t968\t1\t50M\t=\t834\t-184\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7622:NM_022658:968:140\t99\tNM_022658\t969\t1\t50M\t=\t1059\t140\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1913:NM_022658:831:187\t83\tNM_022658\t969\t1\t50M\t=\t832\t-187\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -19014,8 +19015,8 @@\n 3911:NM_022658:1029:204\t147\tNM_022658\t1184\t1\t50M\t=\t1030\t-204\tTGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5350:NM_022658:1061:172\t83\tNM_022658\t1184\t1\t50M\t=\t1062\t-172\tTGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6624:NM_022658:1055:178\t147\tNM_022658\t1184\t1\t50M\t=\t1056\t-178\tTGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+9181:NM_022658:1184:170\t99\tNM_022658\t1185\t1\t50M\t=\t1305\t170\tGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5571:NM_022658:1184:165\t163\tNM_022658\t1185\t1\t50M\t=\t1300\t165\tGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-9181:NM_022658:1184:170\t99\tNM_022658\t1185\t1\t50M\t=\t1305\t170\tGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 252:NM_022658:1054:180\t83\tNM_022658\t1185\t1\t50M\t=\t1055\t-180\tGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1396:NM_022658:1037:197\t147\tNM_022658\t1185\t1\t50M\t=\t1038\t-197\tGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3982:NM_022658:1060:174\t83\tNM_022658\t1185\t1\t50M\t=\t1061\t-174\tGCCCCCACCCTTCTGAGTCCTTCCTGGATTTTAAGGTCTGAGACCTGGCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 31.870504140853882, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/0/f/1/dataset_0f10b36d-b1db-4717-9df7-36c86430871b.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-01 18:51:02.657] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-01 18:51:02.657] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2024-01-01 18:51:02.658] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat", fasta = "/galaxy/server/database/objects/0/f/1/dataset_0f10b36d-b1db-4717-9df7-36c86430871b.dat" . . .done[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[AResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/e/9/1/dataset_e91ac32b-8f43-41db-b2a7-998c21937f60.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[2024-01-01 18:51:02.906] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[2024-01-01 18:51:03.075] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2024-01-01 18:51:03.079] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-01-01 18:51:03.079] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-01-01 18:51:03.080] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-01 18:51:03.081] [jointLog] [info] starting optimizer[2024-01-01 18:51:03.081] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-01 18:51:03.081] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2024-01-01 18:51:03.082] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-01 18:51:03.082] [jointLog] [info] finished optimizer[2024-01-01 18:51:03.082] [jointLog] [info] writing output[2024-01-01 18:51:03.088] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="23.3442804813385">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "quant_type|discardOrphansQuasi": false,  "quant_type|dovetail": true,  "quant_type|qtype": "reads",  "quant_type|recoverOrphans": true,  "quant_type|refTranscriptSource|TranscriptSource": "history",  "quant_type|refTranscriptSource|s_index|fasta": {   "id": "38dda93879b62735",   "src": "hda"  },  "quant_type|validmap|validateMappings": true }, "job": {  "command_line": "mkdir ./index \u0026\u0026 mkdir ./output \u0026\u0026 salmon index -i ./index --kmerLen \u002731\u0027 --gencode --transcripts \u0027/galaxy/server/database/objects/b/3/f/dataset_b3f2a6ab-eaa1-46e1-a576-ce6bc08712db.dat\u0027 \u0026\u0026    ln -s /galaxy/server/database/objects/b/3/f/dataset_b3f2a6ab-eaa1-46e1-a576-ce6bc08712db.dat ./single.fasta \u0026\u0026  salmon quant --index \u0027./index\u0027 --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"  --validateMappings --minScoreFraction \u00270.65\u0027 --ma \u00272\u0027 --mp \u00274\u0027 --go \u00275\u0027 --ge \u00273\u0027    --allowDovetail --recoverOrphans          --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-01-01T18:51:31.111122",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-9nzj4",  "galaxy_version": "23.1",  "history_id": "7eeeb2e715aa4d39",  "id": "e5b3ddeb459ae781",  "inputs": {   "quant_type|input|single_or_paired|input_singles": {    "id": "38dda93879b62735",    "src": "hda",    "uuid": "b3f2a6ab-eaa1-46e1-a576-ce6bc08712db"   },   "quant_type|refTranscriptSource|s_index|fasta": {    "id": "38dda93879b62735",    "src": "hda",    "uuid": "b3f2a6ab-eaa1-46e1-a576-ce6bc08712db"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "959d79eb98cd7aa5",    "src": "hda",    "uuid": "283821c8-110f-439a-bcb4-41173b1b3974"   }  },  "params": {   "__input_ext": "\"fasta\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": true, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": true, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 0, \"gapExtensionPenalty\": \"3\", \"gapOpenPenalty\": \"5\", \"hardFilter\": false, \"matchScore\": \"2\", \"maxMMPExtension\": \"\", \"mimicBT2\": false, \"mimicStrictBT2\": false, \"minScoreFraction\": \"0.65\", \"mismatchPenalty\": \"4\", \"validateMappings\": true}, \"writeMappings\": false}",   "seqBias": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-01-01T18:51:37.155021",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 23.3442804813385, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="28.094209671020508">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-01 18:51:55.106] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-01 18:51:55.106] [jLog] [info] building indexout : ./index[2024-01-01 18:51:55.107] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-01 18:51:55.117] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-01 18:51:55.117] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-01 18:51:55.132] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-01 18:51:55.134] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-01 18:51:55.199] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-01 18:51:55.199] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.2079 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 1.1634 ms-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-01 18:51:55.202] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-01 18:51:55.202] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-01 18:51:55.203] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-01 18:51:55.203] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-01 18:51:55.203] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-01 18:51:55.203] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-01 18:51:55.203] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-01 18:51:55.216] [puff::index::jointLog] [info] # segments = 23[2024-01-01 18:51:55.216] [puff::index::jointLog] [info] total length = 19592[2024-01-01 18:51:55.216] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-01 18:51:55.228] [puff::index::jointLog] [info] positional integer width = 15[2024-01-01 18:51:55.228] [puff::index::jointLog] [info] seqSize = 19592[2024-01-01 18:51:55.228] [puff::index::jointLog] [info] rankSize = 19592[2024-01-01 18:51:55.228] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-01 18:51:55.228] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-01 18:51:55.326] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-01 18:51:55.326] [puff::index::jointLog] [info] chunk size = 9796[2024-01-01 18:51:55.326] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-01 18:51:55.326] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-01 18:51:55.328] [puff::index::jointLog] [info] finished populating pos vector[2024-01-01 18:51:55.328] [puff::index::jointLog] [info] writing index components[2024-01-01 18:51:55.344] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-01 18:51:55.351] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-01 18:51:55.433] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-01 18:51:55.433] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-01 18:51:55.433] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-01 18:51:55.433] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-01 18:51:55.433] [jointLog] [info] parsing read library format[2024-01-01 18:51:55.433] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 852.56 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.4751 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 796.46 us----------------------------------------------------------------------------------| Loading mphf table | Time = 666.94 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 783.33 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 787.25 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.3688 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 1.2776 ms----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 676.92 us-----------------------------------------[2024-01-01 18:51:55.477] [jointLog] [info] Loading pufferfish index[2024-01-01 18:51:55.478] [jointLog] [info] Loading dense pufferfish index.[2024-01-01 18:51:55.489] [jointLog] [info] done[2024-01-01 18:51:55.489] [jointLog] [info] Index contained 15 targets[2024-01-01 18:51:55.490] [jointLog] [info] Number of decoys : 0[2024-01-01 18:51:55.490] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-01-01 18:51:55.534] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-01 18:51:55.534] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-01 18:51:55.535] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-01 18:51:55.535] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-01 18:51:55.535] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-01 18:51:55.535] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-01 18:51:55.535] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-01 18:51:55.535] [jointLog] [info] Mapping rate = 100%[2024-01-01 18:51:55.535] [jointLog] [info] finished quantifyLibrary()[2024-01-01 18:51:55.540] [jointLog] [info] Starting optimizer[2024-01-01 18:51:55.541] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-01 18:51:55.541] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-01-01 18:51:55.541] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-01-01 18:51:55.546] [jointLog] [info] Computed expected counts (for bias correction)[2024-01-01 18:51:55.547] [jointLog] [info] processed bias for 6.7% of the transcripts[2024-01-01 18:51:55.548] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-01-01 18:51:55.548] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-01-01 18:51:55.548] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-01-01 18:51:55.548] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-01-01 18:51:55.548] [jointLog] [info] processed bias for 46.7% of the transcripts[2024-01-01 18:51:55.548] [jointLog] [info] processed bias for 46.7% of the transcripts[2024-01-01 18:51:55.548] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-01-01 18:51:55.549] [jointLog] [info] processed bias for 73.3% of the transcripts[2024-01-01 18:51:55.550] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-01-01 18:51:55.550] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-01 18:51:55.550] [jointLog] [info] Finished optimizer[2024-01-01 18:51:55.550] [jointLog] [info] writing output [2024-01-01 18:51:55.556] [jointLog] [info] writing equivalence class counts.[2024-01-01 18:51:55.557] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-01-01 18:51:55.557] [jointLog] [info] done.[2024-01-01 18:51:55.562] [jointLog] [info] done writing equivalence class counts.[2024-01-01 18:51:55.562] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="31.19676446914673">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="32.739052534103394">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="30.559121131896973">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="33.07058572769165">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="33.22610092163086">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="30.741347551345825">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="72.12775778770447">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="37.43565130233765">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="37.149253129959106">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="36.975250482559204">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="85.99684357643127">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/8/8/2/dataset_882c639d-f671-4d20-b460-d0aade5340f7.dat--pe1-2fastq:/galaxy/server/database/objects/c/6/a/dataset_c6a90386-eb40-4bc4-8325-65aa8575cc70.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.120+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/8/8/2/dataset_882c639d-f671-4d20-b460-d0aade5340f7.dat']      right reads: ['/galaxy/server/database/objects/c/6/a/dataset_c6a90386-eb40-4bc4-8325-65aa8575cc70.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/8/2/dataset_882c639d-f671-4d20-b460-d0aade5340f7.dat  0:00:01.588     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/6/a/dataset_c6a90386-eb40-4bc4-8325-65aa8575cc70.dat  0:00:02.896     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.904    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.286    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:03.287    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.592    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.619    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.660    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.663    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.668    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.669    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.680    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.680    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.680    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/8/2/dataset_882c639d-f671-4d20-b460-d0aade5340f7.dat  0:00:03.695    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/6/a/dataset_c6a90386-eb40-4bc4-8325-65aa8575cc70.dat  0:00:03.710    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.710    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.710    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.725    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.726    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.726    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.726    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.735    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.735    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.735    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.735    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/8/8/2/dataset_882c639d-f671-4d20-b460-d0aade5340f7.dat and /galaxy/server/database/objects/c/6/a/dataset_c6a90386-eb40-4bc4-8325-65aa8575cc70.dat  0:00:03.763    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.768    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.771    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.804    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.804    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.804    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:03.810    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.064    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.068     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.161   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.165     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.252   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.364     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.364     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.364     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.365     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.366     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.366     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.366     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.102     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.111    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.111    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.354    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.354    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.506    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.507    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.507    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.508    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.508    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.508    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.761     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.774    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.249    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.249    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.568    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.599    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.631    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.632    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.639    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.641    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensi..      : 346)   Closing short gaps  0:00:10.709    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.711    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.711    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.711    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.711    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.711    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.711    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.711    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.711    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.711    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.711    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.711    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.711    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.724    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.724    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.724    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.730    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.731    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.731    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.736    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.741    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:10.747    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:10.755    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.756    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.756    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.756    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.756    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.756    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.813   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.983   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.238   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.238   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.250    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.314   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.317   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.324   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.324   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.325   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.338   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.343   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.358    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.359    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.359    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.359    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.360    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.361    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.361    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.361    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.361    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.361    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.361    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.361    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.362    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.362    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.362    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.362    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.362    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.362    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.362    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.362    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.362    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.365    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.366    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.366    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.366    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.366    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.366    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.366    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.366    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.366    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.366    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.366    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.366    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.366    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.367    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.367    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.367    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.367    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.367    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.367    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.367    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.367    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.369    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:11.374    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:11.380    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:11.389    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:11.407    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.411    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="44.70684599876404">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/a/e/d/dataset_aed7ecce-0446-4cb0-9d00-87c6fabe68bb.dat--pe1-2fasta:/galaxy/server/database/objects/b/3/5/dataset_b35b4ee5-0c0c-45bf-aa51-e9ccbf7a28f7.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.120+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/a/e/d/dataset_aed7ecce-0446-4cb0-9d00-87c6fabe68bb.dat']      right reads: ['/galaxy/server/database/objects/b/3/5/dataset_b35b4ee5-0c0c-45bf-aa51-e9ccbf7a28f7.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.066    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.070     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.158   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.163     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.252   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.379     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.379     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.379     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.380     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.382     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.382     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.382     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.023     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.033    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.033    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.267    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.267    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.416    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.418    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.418    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.419    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.419    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.419    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.757     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.772    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.303    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:03.303    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.627    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.665    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.699    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:03.699    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.705    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.706    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:03.707    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:03.707    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:03.708    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:03.708    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:03.708    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:03.708    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:03.708    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.728    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:03.728    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:03.739    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:03.757    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:03.757    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:03.757    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:03.757    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:03.757    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:03.793    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:03.888    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:04.233    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:04.816    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:05.872    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:07.600    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:07.601    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:07.601    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:07.601    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:07.601    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:07.601    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:07.601    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:07.601    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:07.601    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:07.601    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:07.604    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:07.604    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:07.605    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:07.606    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:07.606    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:09.052     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:09.062    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:09.660    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:09.660    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:10.004    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:10.037    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:10.069    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:10.069    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:10.071    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:10.073    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:10.073    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:10.075    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:10.075    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:10.075    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:10.075    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.077    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:10.077    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:10.078    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:10.078    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:10.078    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:10.078    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:10.078    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.078 ..indices  0:00:12.409    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:12.409    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:12.411    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:12.411    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:12.411    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:12.411    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:12.411    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:12.411    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:12.411    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:12.411    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:12.411    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:12.411    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:12.412    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:12.412    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:12.412    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:12.412    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:12.412    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:12.412    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:12.412    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:12.412    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:12.412    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:12.412    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:12.412    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:12.425    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:12.425    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:12.425    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:12.433    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.433    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.433    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:12.438    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:12.444    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:12.448    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:12.456    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:12.456    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:12.456    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:12.456    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:12.456    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:12.456    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:12.513   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.680   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.930   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:12.930   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:12.941    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:12.997   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:13.004   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.007   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.015   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:13.015   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:13.015   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:13.029   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.035   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.052    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:13.053    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:13.053    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:13.053    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:13.053    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.053    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.053    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.053    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:13.053    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:13.053    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:13.054    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.054    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.054    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:13.054    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:13.055    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.055    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.055    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.055    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:13.055    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:13.055    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:13.055    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:13.056    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:13.056    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.056    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.057    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:13.057    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:13.057    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.057    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.057    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.057    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.057    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.057    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.057    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:13.057    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:13.057    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:13.059    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:13.064    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:13.070    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:13.078    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:13.094    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:13.097    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 13 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="48.891422510147095">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/9/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/8/e/d/dataset_8ed23856-1ff3-408c-b54b-b072374b03a2.dat--pe1-2fastq.gz:/galaxy/server/database/objects/8/b/0/dataset_8b09975b-59e4-43ae-a5c2-1daf63230534.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.120+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/9/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/8/e/d/dataset_8ed23856-1ff3-408c-b54b-b072374b03a2.dat']      right reads: ['/galaxy/server/database/objects/8/b/0/dataset_8b09975b-59e4-43ae-a5c2-1daf63230534.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/e/d/dataset_8ed23856-1ff3-408c-b54b-b072374b03a2.dat  0:00:01.761     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/b/0/dataset_8b09975b-59e4-43ae-a5c2-1daf63230534.dat  0:00:03.231     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:03.240    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.706    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:03.706    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:04.034    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:04.069    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:04.104    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:04.107    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:04.112    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:04.113    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:04.125    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:04.125    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:04.125    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/e/d/dataset_8ed23856-1ff3-408c-b54b-b072374b03a2.dat  0:00:04.140    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/b/0/dataset_8b09975b-59e4-43ae-a5c2-1daf63230534.dat  0:00:04.155    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:04.155    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:04.155    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:04.171    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:04.173    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:04.173    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:04.186    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:04.187    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:04.187    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:04.187    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/8/e/d/dataset_8ed23856-1ff3-408c-b54b-b072374b03a2.dat and /galaxy/server/database/objects/8/b/0/dataset_8b09975b-59e4-43ae-a5c2-1daf63230534.dat  0:00:04.221    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:04.224    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:04.226    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:04.263    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:04.263    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:04.263    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml  0:00:04.268    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.066    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.070     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.159   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.165     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.268   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.423     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.423     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.423     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.425     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.426     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.426     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.426     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.283     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.290    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.290    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.610    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.610    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.761    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.763    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.763    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.764    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.764    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.764    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:03.231     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:03.248    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.831    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.831    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:04.191    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:04.235    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:04.273    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:04.273    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:04.282    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:04.283    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Co..      : 346)   Closing short gaps  0:00:11.850    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:11.852    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:11.852    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:11.852    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:11.852    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:11.852    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:11.852    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:11.852    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:11.852    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:11.853    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:11.853    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:11.853    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:11.853    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:11.853    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:11.853    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:11.853    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:11.853    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:11.853    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:11.853    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:11.853    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:11.853    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:11.853    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:11.867    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:11.867    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:11.867    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:11.875    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.875    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.876    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:11.883    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:11.889    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta  0:00:11.895    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta  0:00:11.905    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:11.905    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:11.905    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:11.905    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:11.905    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:11.905    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:11.965   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.133   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.382   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:12.382   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:12.403    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:12.469   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:12.481   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.484   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.490   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:12.491   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:12.491   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:12.506   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.512   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.535    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:12.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:12.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:12.536    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:12.536    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.536    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.536    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:12.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:12.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:12.537    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.540    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.540    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:12.540    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:12.540    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.540    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.540    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.540    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:12.540    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:12.540    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:12.540    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:12.541    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:12.541    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.541    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.541    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:12.541    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:12.541    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.542    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.542    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.542    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.542    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.542    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.542    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:12.542    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.542    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.544    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:12.551    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:12.556    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths  0:00:12.569    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths  0:00:12.591    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:12.595    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="56.337512493133545">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/12/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/9/9/6/dataset_9969dfdc-67f9-4387-8495-ec744bc09d36.dat--pe1-2fastq:/galaxy/server/database/objects/8/1/c/dataset_81c2561b-ec53-4c0a-8bfd-d4f5e81792a0.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.120+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/12/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/9/9/6/dataset_9969dfdc-67f9-4387-8495-ec744bc09d36.dat']      right reads: ['/galaxy/server/database/objects/8/1/c/dataset_81c2561b-ec53-4c0a-8bfd-d4f5e81792a0.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/9/6/dataset_9969dfdc-67f9-4387-8495-ec744bc09d36.dat  0:00:01.331     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/1/c/dataset_81c2561b-ec53-4c0a-8bfd-d4f5e81792a0.dat  0:00:02.466     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.475    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.866    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.866    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.149    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.182    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.212    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.215    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.218    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.219    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.230    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.230    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.230    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/9/6/dataset_9969dfdc-67f9-4387-8495-ec744bc09d36.dat  0:00:03.248    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/1/c/dataset_81c2561b-ec53-4c0a-8bfd-d4f5e81792a0.dat  0:00:03.266    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.266    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.266    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.286    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.286    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.287    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.287    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.287    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.287    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.287    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.287    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.287    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.289    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.289    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.298    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.299    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.299    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.299    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/9/9/6/dataset_9969dfdc-67f9-4387-8495-ec744bc09d36.dat and /galaxy/server/database/objects/8/1/c/dataset_81c2561b-ec53-4c0a-8bfd-d4f5e81792a0.dat  0:00:03.325    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.330    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.333    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.368    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.368    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.368    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml  0:00:03.373    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.073    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.078     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.170   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.175     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.265   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.410     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.411     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.411     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.412     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.413     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.414     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.414     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:01.106     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.116    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.116    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.359    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.359    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.510    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.511    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.511    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.512    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.512    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.512    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.764     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.776    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.233    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:03.233    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.527    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.558    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.588    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:03.588    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.591    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.594    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:03.594    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea.. short gaps  0:00:09.186    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.188    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.189    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.189    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.189    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.189    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.189    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.189    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.189    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.189    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:09.189    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.189    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.189    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.204    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.204    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.204    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.211    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.211    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:09.211    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:09.217    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:09.223    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta  0:00:09.229    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta  0:00:09.240    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.241    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.241    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.241    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:09.241    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.241    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.304   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.478   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.739   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:09.739   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:09.749    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:09.804   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:09.812   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.816   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.823   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:09.823   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:09.823   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:09.835   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.839   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.855    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:09.855    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:09.855    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:09.855    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:09.855    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.855    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.855    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.855    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:09.855    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:09.855    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:09.856    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.856    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.856    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:09.856    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:09.856    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.856    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.856    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.856    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:09.856    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:09.856    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:09.856    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:09.857    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:09.857    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:09.857    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:09.857    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:09.857    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.857    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.857    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.857    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.857    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.857    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.857    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.858    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.858    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.858    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.858    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.858    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:09.858    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.858    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:09.859    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:09.865    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:09.871    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths  0:00:09.879    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths  0:00:09.898    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:09.901    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="44.023884534835815">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/15/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/6/0/1/dataset_6017208d-d734-4593-9726-18ec595a77b5.dat--pe1-2fastq:/galaxy/server/database/objects/d/a/5/dataset_da586ca9-e09d-4086-abb1-5d8415755da8.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.120+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/15/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/6/0/1/dataset_6017208d-d734-4593-9726-18ec595a77b5.dat']      right reads: ['/galaxy/server/database/objects/d/a/5/dataset_da586ca9-e09d-4086-abb1-5d8415755da8.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.006     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.006     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.006     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.012     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.012     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.014     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.014     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.015     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.015     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/0/1/dataset_6017208d-d734-4593-9726-18ec595a77b5.dat  0:00:01.521     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/a/5/dataset_da586ca9-e09d-4086-abb1-5d8415755da8.dat  0:00:02.735     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.743    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.143    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:03.143    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.444    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.476    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.509    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.511    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.515    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.516    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.526    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.526    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.527    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/0/1/dataset_6017208d-d734-4593-9726-18ec595a77b5.dat  0:00:03.542    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/a/5/dataset_da586ca9-e09d-4086-abb1-5d8415755da8.dat  0:00:03.556    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.556    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.556    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.580    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.581    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.581    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.592    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.592    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.592    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.592    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/6/0/1/dataset_6017208d-d734-4593-9726-18ec595a77b5.dat and /galaxy/server/database/objects/d/a/5/dataset_da586ca9-e09d-4086-abb1-5d8415755da8.dat  0:00:03.618    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.623    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.626    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.660    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.660    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.660    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml  0:00:03.665    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.063    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.067     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.157   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.162     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.251   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.367     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.367     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.367     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.368     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.369     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.370     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.370     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:00.955     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.967    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.967    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.198    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.198    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.362    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.363    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.363    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.364    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.364    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.364    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:02.761     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:02.775    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.241    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:03.241    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.572    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.601    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.633    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:03.633    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.638    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.639    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..osing short gaps  0:00:08.381    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.384    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.384    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.384    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.384    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.384    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.384    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.384    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.384    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.384    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:08.384    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.384    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.384    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.395    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.395    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.395    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.403    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.403    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:08.404    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:08.409    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:08.415    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta  0:00:08.420    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta  0:00:08.429    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.429    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.429    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.429    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:08.429    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.429    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.489   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.657   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.908   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:08.909   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:08.925    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:08.980   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:08.988   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.989   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.997   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:08.997   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:08.997   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:09.011   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.014   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.030    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:09.030    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:09.030    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:09.030    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:09.031    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.031    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.031    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.031    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:09.031    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:09.031    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:09.031    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.031    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.031    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:09.031    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:09.031    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.031    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.031    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.031    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:09.031    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:09.031    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:09.031    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:09.033    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:09.033    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:09.033    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:09.033    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:09.033    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:09.033    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:09.033    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.034    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.034    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.034    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.034    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.034    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.034    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:09.034    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.034    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:09.035    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:09.042    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:09.047    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths  0:00:09.058    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths  0:00:09.077    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:09.079    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="46.99883723258972">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/18/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/0/f/e/dataset_0fe6c6ec-e136-44af-9509-302902d4b7f7.dat--pe1-2fastq:/galaxy/server/database/objects/d/2/f/dataset_d2f4216d-63f9-4011-a578-0fda3f243fee.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.120+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/18/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/0/f/e/dataset_0fe6c6ec-e136-44af-9509-302902d4b7f7.dat']      right reads: ['/galaxy/server/database/objects/d/2/f/dataset_d2f4216d-63f9-4011-a578-0fda3f243fee.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/f/e/dataset_0fe6c6ec-e136-44af-9509-302902d4b7f7.dat  0:00:01.330     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/2/f/dataset_d2f4216d-63f9-4011-a578-0fda3f243fee.dat  0:00:02.568     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.578    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.026    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:03.026    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.320    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.349    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.384    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.389    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.394    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.396    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.410    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.410    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.410    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/f/e/dataset_0fe6c6ec-e136-44af-9509-302902d4b7f7.dat  0:00:03.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/2/f/dataset_d2f4216d-63f9-4011-a578-0fda3f243fee.dat  0:00:03.446    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.446    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.446    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.462    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.463    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.463    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.476    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.476    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.476    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.476    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/0/f/e/dataset_0fe6c6ec-e136-44af-9509-302902d4b7f7.dat and /galaxy/server/database/objects/d/2/f/dataset_d2f4216d-63f9-4011-a578-0fda3f243fee.dat  0:00:03.503    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.509    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.512    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.548    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.548    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.549    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml  0:00:03.554    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/18/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/18/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.065    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.070     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.164   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.170     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.258   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.390     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.390     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.390     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.391     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.392     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.392     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.392     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.064     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.073    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.073    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.299    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.299    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.430    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.431    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.431    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.432    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.432    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.432    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.587     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.599    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.084    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.084    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.422    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.459    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.488    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.488    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.496    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.501    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:10.457    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.459    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.459    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.459    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.459    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.459    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.459    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.459    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.459    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.459    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.459    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.459    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.459    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.474    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.474    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.474    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.480    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.480    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.481    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta  0:00:10.486    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg  0:00:10.491    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/simplified_contigs.fasta  0:00:10.496    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/intermediate_contigs.fasta  0:00:10.506    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.506    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.506    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.506    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.506    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.506    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.565   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.739   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.989   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.989   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.002    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.060   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.067   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.071   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.076   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.076   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.076   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.088   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.094   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.113    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.113    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.113    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.113    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.113    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.114    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.114    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.114    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.114    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.114    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.114    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.114    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.114    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.114    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.114    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.114    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.115    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.116    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.116    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.116    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.116    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.116    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.116    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.116    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.116    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.116    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.116    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.116    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.116    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.116    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.118    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta  0:00:11.123    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg  0:00:11.128    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/final_contigs.paths  0:00:11.138    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/scaffolds.paths  0:00:11.156    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.158    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="14.720897912979126">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 14.720897912979126, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="47.9353985786438">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/23/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/2/8/f/dataset_28f668c8-2420-406a-accd-0eb5d6d14299.dat--pe1-2fastq.gz:/galaxy/server/database/objects/e/f/2/dataset_ef267931-dd5c-4212-8e04-18370f9ccaa6.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.120+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/23/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/2/8/f/dataset_28f668c8-2420-406a-accd-0eb5d6d14299.dat']      right reads: ['/galaxy/server/database/objects/e/f/2/dataset_ef267931-dd5c-4212-8e04-18370f9ccaa6.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/2/8/f/dataset_28f668c8-2420-406a-accd-0eb5d6d14299.dat  0:00:01.428     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/f/2/dataset_ef267931-dd5c-4212-8e04-18370f9ccaa6.dat  0:00:02.574     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.584    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.971    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.971    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.325    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.363    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.393    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.397    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.404    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.405    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.416    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.416    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.416    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/2/8/f/dataset_28f668c8-2420-406a-accd-0eb5d6d14299.dat  0:00:03.430    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/f/2/dataset_ef267931-dd5c-4212-8e04-18370f9ccaa6.dat  0:00:03.446    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.446    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.446    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.464    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.465    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.465    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.482    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.482    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.482    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.482    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/2/8/f/dataset_28f668c8-2420-406a-accd-0eb5d6d14299.dat and /galaxy/server/database/objects/e/f/2/dataset_ef267931-dd5c-4212-8e04-18370f9ccaa6.dat  0:00:03.514    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.517    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.520    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.557    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.557    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.557    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml  0:00:03.563    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.068    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.074     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.169   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.175     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.269   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.393     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.393     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.393     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.394     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.394     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.394     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.394     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.015     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.025    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.026    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.271    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.272    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.437    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.438    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.438    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.439    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.439    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.439    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.767     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.781    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.249    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.249    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.552    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.595    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.627    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.627    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.631    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.632    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE..sing short gaps  0:00:10.663    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.666    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.666    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.666    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.666    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.666    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.666    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.666    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.666    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.666    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.666    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.666    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.666    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.676    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.676    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.676    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.682    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.682    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.682    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:10.687    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:10.692    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/simplified_contigs.fasta  0:00:10.696    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/intermediate_contigs.fasta  0:00:10.706    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.706    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.706    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.706    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.706    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.706    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.763   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.934   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.186   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.186   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.196    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.252   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.258   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.260   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.266   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.266   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.266   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.278   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.283   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.304    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.304    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.304    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.304    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.305    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.305    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.305    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.305    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.305    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.305    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.305    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.305    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.305    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.305    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.305    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.305    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.305    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.305    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.305    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.305    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.305    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.307    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.307    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.307    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.307    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.307    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.307    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.307    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.307    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.307    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.307    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.307    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.307    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.307    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.308    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:11.314    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:11.320    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/final_contigs.paths  0:00:11.330    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/scaffolds.paths  0:00:11.351    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.355    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="51.22637605667114">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "836c33e084fac049",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/a/4/9/dataset_a493bbfc-fcc5-4d3c-8440-594c633e46c3.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/a/d/a/dataset_ada0b8ac-7cf4-4d29-a234-54c8553ed7c4.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-01-01T18:40:09.117117",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6tvnc",  "galaxy_version": "23.1",  "history_id": "7eeeb2e715aa4d39",  "id": "f7fc8350d11ea2ae",  "inputs": {   "readtype|fastq_in": {    "id": "836c33e084fac049",    "src": "hda",    "uuid": "a493bbfc-fcc5-4d3c-8440-594c633e46c3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1704134428.0000000",    "title": "Job End Time",    "value": "2024-01-01 18:40:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1704134428.0000000",    "title": "Job Start Time",    "value": "2024-01-01 18:40:28"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "f871f3fb8caed00c",    "src": "hda",    "uuid": "0c9bd7bf-76ab-4f87-b50f-4cc047a56164"   },   "fastq_out": {    "id": "c1ea72ff3add4369",    "src": "hda",    "uuid": "ada0b8ac-7cf4-4d29-a234-54c8553ed7c4"   },   "log_file": {    "id": "b100731a984582f4",    "src": "hda",    "uuid": "8fcbfd8b-8270-44c6-a93e-fdc0e3537f01"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 81, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2024-01-01T18:40:40.864868",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpi5vb6dkatrimmomatic_se_out1.err v. /tmp/tmpv9j63u86trimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 51.22637605667114, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="28.494394779205322">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="26.593104362487793">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="31.971914768218994">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="30.090792894363403">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/79/configs/tmpn8sohfe1:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="31.744405269622803">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="30.478474855422974">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="29.21833896636963">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="29.83690071105957">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="26.77642250061035">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="30.235456228256226">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="29.257493257522583">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="27.055049657821655">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="32.940760135650635">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>