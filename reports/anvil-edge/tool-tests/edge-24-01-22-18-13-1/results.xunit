<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="2"
           failures="6"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="36.436731815338135">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="31.2796151638031">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="30.092572450637817">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="30.680909395217896">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="31.412697553634644">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="33.50522232055664">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="31.654086589813232">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="31.27457022666931">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="31.111504316329956">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="39.43620467185974">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="32.08823299407959">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="42.23067617416382">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="42.673656940460205">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="41.04155731201172">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="66.69332361221313">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="37.35502243041992">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.34780311584472656">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.34780311584472656, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="39.36400103569031">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="29.820566415786743">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="31.456485509872437">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="31.89315390586853">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="24.728325128555298">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute",  "fastq_filters_0|offset_type|left_column_offset": "0",  "fastq_filters_0|offset_type|right_column_offset": "0",  "fastq_filters_0|score": "0",  "fastq_filters_0|score_comparison": "\u003e=",  "fastq_filters_0|score_operation": "min",  "input_file": {   "id": "23e3fa2425cf3009",   "src": "hda"  },  "max_num_deviants": "1",  "max_quality": "0",  "max_size": "0",  "min_quality": "1",  "min_size": "0",  "paired_end": false }, "job": {  "command_line": "gx-fastq-filter \u0027/galaxy/server/database/objects/4/8/a/dataset_48a2fd8d-6c82-4d2a-abbb-b60fe388fcf3.dat\u0027 \u0027/galaxy/server/database/jobs_directory/000/38/configs/tmp9_5aqjta\u0027 \u0027/galaxy/server/database/objects/a/7/5/dataset_a7546798-93fb-4418-a7dc-da004a16192b.dat\u0027 \u0027/galaxy/server/database/objects/a/7/5/dataset_a7546798-93fb-4418-a7dc-da004a16192b_files\u0027 \u0027sanger\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-01-22T18:40:17.119816",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-zf2b2",  "galaxy_version": "23.1",  "history_id": "5ddd384e69604877",  "id": "fb262c7a58cfec6d",  "inputs": {   "input_file": {    "id": "23e3fa2425cf3009",    "src": "hda",    "uuid": "48a2fd8d-6c82-4d2a-abbb-b60fe388fcf3"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "a322b0ea9205b8e7",    "src": "hda",    "uuid": "a7546798-93fb-4418-a7dc-da004a16192b"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \"\u003e=\", \"score_operation\": \"min\"}]",   "max_num_deviants": "\"1\"",   "max_quality": "\"0.0\"",   "max_size": "\"0\"",   "min_quality": "\"1.0\"",   "min_size": "\"0\"",   "paired_end": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-01-22T18:40:23.341403",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 24.728325128555298, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="30.416221380233765">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="30.94978904724121">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="31.28306794166565">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="29.560242414474487">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="36.93068814277649">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="28.98186230659485">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="29.41625142097473">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="62.53601813316345">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="64.01350164413452">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="33.7945499420166">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="52.04453182220459">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/f/5/d/dataset_f5da3cf8-cb2e-4fb2-a939-7e582d0351cc.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/3/1/a/dataset_31ac875e-82fc-4025-8e85-26b9a2f7d0ca.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/f/e/c/dataset_fec019e9-aa60-48e7-9b53-349dc0da326b.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-01-22T19:02:27.882346",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xp6rh",  "galaxy_version": "23.1",  "history_id": "5ddd384e69604877",  "id": "9f8e445eb836cf57",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "20.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "20 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1705950172.0000000",    "title": "Job End Time",    "value": "2024-01-22 19:02:52"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1705950152.0000000",    "title": "Job Start Time",    "value": "2024-01-22 19:02:32"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "d9187dc531bf5453",    "src": "hda",    "uuid": "fec019e9-aa60-48e7-9b53-349dc0da326b"   },   "design_tsv": {    "id": "4ef2b96da7e190b1",    "src": "hda",    "uuid": "876e6be6-0500-44e7-a17b-42fc69c96e27"   },   "genes_tsv": {    "id": "eaf7d85bf06dfbef",    "src": "hda",    "uuid": "31ac875e-82fc-4025-8e85-26b9a2f7d0ca"   },   "matrix_mtx": {    "id": "695714d20d81e3a8",    "src": "hda",    "uuid": "f5da3cf8-cb2e-4fb2-a939-7e582d0351cc"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-01-22 19:02:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  189K\n    50K .......... .......... .......... .......... ..........  287K\n   100K .......... .......... .......... .......... ..........  571K\n   150K .......... .......... .......... .......... ..........  573K\n   200K .......... .......... .......... .......... ..........  573K\n   250K .......... .......... .......... .......... ..........  596K\n   300K .......... .......... .......... .......... .......... 1.18M\n   350K .......... .......... .......... .......... ..........  572K\n   400K .......... .......... .......... .......... ..........  991K\n   450K .......... .......... .......... .......... ..........  596K\n   500K .......... .......... .......... .......... .......... 1.21M\n   550K .......... .......... .......... .......... .......... 1006K\n   600K .......... .......... .......... .......... .......... 1.29M\n   650K .......... .......... .......... .......... ..........  996K\n   700K .......... .......... .......... .......... .......... 1.31M\n   750K .......... .......... .......... .......... .......... 1002K\n   800K .......... .......... .......... .......... .......... 1.30M\n   850K .......... .......... .......... .......... .......... 1010K\n   900K .......... .......... .......... .......... .......... 47.5M\n   950K .......... .......... .......... .......... ..........  599K\n  1000K .......... .......... .......... .......... .......... 14.5M\n  1050K .......... .......... .......... .......... .......... 1.31M\n  1100K .......... .......... .......... .......... .......... 1.04M\n  1150K .......... .......... .......... .......... .......... 14.0M\n  1200K .......... .......... .......... .......... .......... 1.29M\n  1250K .......... .......... .......... .......... .......... 1.07M\n  1300K .......... .......... .......... .......... .......... 12.0M\n  1350K .......... .......... .......... .......... .......... 1.29M\n  1400K .......... .......... .......... .......... .......... 1.08M\n  1450K .......... .......... .......... .......... .......... 11.9M\n  1500K .......... .......... .......... .......... .......... 1.29M\n  1550K .......... .......... .......... .......... .......... 1.07M\n  1600K .......... .......... .......... .......... .......... 13.2M\n  1650K .......... .......... .......... .......... .......... 52.4M\n  1700K .......... .......... .......... .......... ..........  600K\n  1750K .......... .......... .......... .......... .......... 17.3M\n  1800K .......... .......... .......... .......... ..........  148M\n  1850K .......... .......... .......... .......... .......... 1.29M\n  1900K .......... .......... .......... .......... .......... 1.06M\n  1950K .......... .......... .......... .......... .......... 16.2M\n  2000K .......... .......... .......... .......... .......... 46.8M\n  2050K .......... .......... .......... .......... .......... 1.31M\n  2100K .......... .......... .......... .......... .......... 1.05M\n  2150K .......... .......... .......... .......... .......... 22.2M\n  2200K .......... .......... .......... .......... ..........  102M\n  2250K .......... .......... .......... .......... .......... 1.28M\n  2300K .......... .......... .......... .......... .......... 1.09M\n  2350K .......... .......... .......... .......... .......... 18.6M\n  2400K .......... .......... .......... .......... .......... 32.2M\n  2450K .......... .......... .......... .......... .......... 28.6M\n  2500K .......... .......... .......... .......... .......... 1.32M\n  2550K .......... .......... .......... .......... .......... 1.05M\n  2600K .......... .......... .......... .......... .......... 27.9M\n  2650K .......... .......... .......... .......... .......... 61.4M\n  2700K .......... .......... .......... .......... .......... 1.29M\n  2750K .......... .......... .......... .......... .......... 52.9M\n  2800K .......... .......... .......... .......... .......... 1.06M\n  2850K .......... .......... .......... .......... .......... 28.2M\n  2900K .......... .......... .......... .......... .......... 99.6M\n  2950K .......... .......... .......... .......... .......... 36.5M\n  3000K .......... .......... .......... .......... .......... 1.32M\n  3050K .......... .......... .......... .......... .......... 1.07M\n  3100K .......... .......... .......... .......... .......... 34.1M\n  3150K .......... .......... .......... .......... .......... 23.3M\n  3200K .......... .......... .......... .......... .......... 99.2M\n  3250K .......... .......... .......... .......... .......... 54.2M\n  3300K .......... .......... .......... .......... .......... 1.33M\n  3350K .......... .......... .......... .......... .......... 1.07M\n  3400K .......... .......... .......... .......... .......... 40.4M\n  3450K .......... .......... .......... .......... .......... 23.5M\n  3500K .......... .......... .......... .......... .......... 91.8M\n  3550K .......... .......... .......... .......... .......... 55.0M\n  3600K .......... .......... .......... .......... .......... 1.33M\n  3650K .......... .......... .......... .......... .......... 1.07M\n  3700K .......... .......... .......... .......... .......... 36.6M\n  3750K .......... .......... .......... .......... .......... 41.9M\n  3800K .......... .......... .......... .......... .......... 33.6M\n  3850K .......... .......... .......... .......... ..........  146M\n  3900K .......... .......... .......... .......... .......... 54.9M\n  3950K .......... .......... .......... .......... .......... 1.33M\n  4000K .......... .......... .......... .......... .......... 1.06M\n  4050K .......... .......... .......... .......... .......... 51.5M\n  4100K .......... .......... .......... .......... ..........  101M\n  4150K .......... .......... .......... .......... .......... 26.3M\n  4200K .......... .......... .......... .......... ..........  104M\n  4250K .......... .......... .......... .......... ..........  110M\n  4300K .......... .......... .......... .......... .......... 1.32M\n  4350K .......... .......... .......... .......... .......... 71.1M\n  4400K .......... .......... .......... .......... .......... 1.06M\n  4450K .......... .......... .......... .......... .......... 61.8M\n  4500K .......... .......... .......... .......... ..........  110M\n  4550K .......... .......... .......... .......... .......... 28.7M\n  4600K .......... .......... .......... .......... ..........  130M\n  4650K .......... .......... .......... .......... ..........  142M\n  4700K .......... .......... .......... .......... .......... 1.32M\n  4750K .......... .......... .......... .......... .......... 78.2M\n  4800K .......... .......... .......... .......... .......... 1.07M\n  4850K .......... .......... .......... .......... .......... 54.3M\n  4900K .......... .......... .......... .......... .......... 76.3M\n  4950K .......... .......... .......... .......... .......... 31.6M\n  5000K .......... .......... .......... .......... ..........  147M\n  5050K .......... .......... .......... .......... ..........  131M\n  5100K .......... .......... .......... .......... .......... 53.5M\n  5150K .......... .......... .......... .......... .......... 1.34M\n  5200K .......... .......... .......... .......... .......... 1.16M\n  5250K .......... .......... .......... .......... .......... 13.0M\n  5300K .......... .......... .......... .......... .......... 37.5M\n  5350K .......... .......... .......... .......... .......... 81.6M\n  5400K .......... .......... .......... .......... .......... 39.0M\n  5450K .......... .......... .......... .......... .......... 70.0M\n  5500K .......... .......... .......... .......... ..........  132M\n  5550K .......... .......... .......... .......... ..........  164M\n  5600K .......... .......... .......... .......... .......... 1.31M\n  5650K .......... .......... .......... .......... .......... 77.1M\n  5700K .......... .......... .......... .......... .......... 1.09M\n  5750K .......... .......... .......... .......... .......... 93.0M\n  5800K .......... .......... .......... .......... .......... 49.8M\n  5850K .......... .......... .......... .......... .......... 41.1M\n  5900K .......... .......... .......... .......... .......... 59.0M\n  5950K .......... .......... .......... .......... .......... 82.1M\n  6000K .......... .......... .......... .......... ..........  112M\n  6050K .......... .......... .......... .......... ..........  138M\n  6100K .......... .......... .......... .......... .......... 1.33M\n  6150K .......... .......... .......... .......... ..........  110M\n  6200K .......... .......... .......... .......... .......... 1.06M\n  6250K .......... .......... .......... .......... .......... 85.9M\n  6300K .......... .......... .......... .......... ..........  104M\n  6350K .......... .......... .......... .......... .......... 68.5M\n  6400K .......... .......... .......... .......... .......... 75.0M\n  6450K .......... .......... .......... .......... .......... 76.5M\n  6500K .......... .......... .......... .......... ..........  141M\n  6550K .......... .......... .......... .......... ..........  174M\n  6600K .......... .......... .......... .......... .......... 84.0M\n  6650K .......... .......... .......... .......... .......... 1.32M\n  6700K .......... .......... .......... .......... ..........  101M\n  6750K .......... .......... .......... .......... .......... 1.07M\n  6800K .......... .......... .......... .......... ..........  138M\n  6850K .......... .......... .......... .......... ..........  160M\n  6900K .......... .......... .......... .......... .......... 36.8M\n  6950K .......... .......... .......... .......... .......... 50.9M\n  7000K .......... .......... .......... .......... .......... 87.7M\n  7050K .......... .......... .......... .......... ..........  135M\n  7100K .......... .......... .......... .......... ..........  162M\n  7150K .......... .......... .......... .......... .......... 40.9M\n  7200K .......... .......... .......... .......... .......... 1.36M\n  7250K .......... .......... .......... .......... ..........  159M\n  7300K .......... .......... .......... .......... .......... 1.17M\n  7350K .......... .......... .......... .......... .......... 10.5M\n  7400K .......... .......... .......... .......... ..........  108M\n  7450K .......... .......... .......... .......... .......... 77.4M\n  7500K .......... .......... .......... .......... .......... 76.2M\n  7550K .......... .......... .......... .......... .......... 64.6M\n  7600K .......... .......... .......... .......... .......... 4.71M\n  7650K .......... .......... .......... .......... .......... 4.24M\n  7700K .......... .......... .......... .......... .......... 6.82M\n  7750K .......... .......... .......... .......... .......... 4.53M\n  7800K .......... .......... .......... .......... .......... 4.11M\n  7850K .......... .......... .......... .......... .......... 4.25M\n  7900K .......... .......... .......... .......... .......... 2.29M\n  7950K .......... .......... .......... .......... .......... 63.5M\n  8000K .......... .......... .......... .......... .......... 5.97M\n  8050K .......... .......... .......... .......... .......... 6.71M\n  8100K .......... .......... .......... .......... .......... 5.01M\n  8150K .......... .......... .......... .......... .......... 4.16M\n  8200K .......... .......... .......... .......... .......... 4.09M\n  8250K .......... .......... .......... .......... .......... 8.28M\n  8300K .......... .......... .......... .......... .......... 4.23M\n  8350K .......... .......... .......... .......... .......... 3.92M\n  8400K .......... .......... .......... .......... .......... 4.22M\n  8450K .......... .......... .......... .......... .......... 7.78M\n  8500K .......... .......... .......... .......... .......... 4.30M\n  8550K .......... .......... .......... .......... .......... 4.05M\n  8600K .......... .......... .......... .......... .......... 3.81M\n  8650K .......... .......... .......... .......... .......... 8.86M\n  8700K .......... .......... .......... .......... .......... 4.08M\n  8750K .......... .......... .......... .......... .......... 4.33M\n  8800K .......... .......... .......... .......... .......... 3.65M\n  8850K .......... .......... .......... .......... .......... 7.55M\n  8900K .......... .......... .......... .......... .......... 3.92M\n  8950K .......... .......... .......... .......... .......... 4.11M\n  9000K .......... .......... .......... .......... .......... 3.94M\n  9050K .......... .......... .......... .......... .......... 7.69M\n  9100K .......... .......... .......... .......... .......... 4.01M\n  9150K .......... .......... .......... .......... .......... 4.08M\n  9200K .......... .......... .......... .......... .......... 4.17M\n  9250K .......... .......... .......... .......... .......... 7.04M\n  9300K .......... .......... .......... .......... .......... 4.25M\n  9350K .......... .......... .......... .......... .......... 4.24M\n  9400K .......... .......... .......... .......... .......... 4.06M\n  9450K .......... .......... .......... .......... .......... 4.03M\n  9500K .......... .......... .......... .......... .......... 7.20M\n  9550K .......... .......... .......... .......... .......... 4.20M\n  9600K .......... .......... .......... .......... .......... 4.04M\n  9650K .......... .......... .......... .......... .......... 4.19M\n  9700K .......... .......... .......... .......... .......... 7.79M\n  9750K .......... .......... .......... .......... .......... 4.18M\n  9800K .......... .......... .......... .......... .......... 4.14M\n  9850K .......... .......... .......... .......... .......... 4.15M\n  9900K .......... .......... .......... .......... .......... 7.58M\n  9950K .......... .......... .......... .......... .......... 4.22M\n 10000K .......... .......... .......... .......... .......... 4.00M\n 10050K .......... .......... .......... .......... .......... 4.13M\n 10100K .......... .......... .......... .......... .......... 3.47M\n 10150K .......... .......... .......... .......... .......... 10.8M\n 10200K .......... .......... .......... .......... .......... 4.16M\n 10250K .......... .......... .......... .......... .......... 3.81M\n 10300K .......... .......... .......... .......... .......... 4.21M\n 10350K .......... .......... .......... .......... .......... 8.68M\n 10400K .......... .......... .......... .......... .......... 3.70M\n 10450K .......... .......... .......... .......... .......... 4.56M\n 10500K .......... .......... .......... .......... .......... 4.04M\n 10550K .......... .......... .......... .......... .......... 7.59M\n 10600K .......... .......... .......... .......... .......... 4.28M\n 10650K .......... .......... .......... .......... .......... 4.30M\n 10700K .......... .......... .......... .......... .......... 3.93M\n 10750K .......... .......... .......... .......... .......... 7.97M\n 10800K .......... .......... .......... .......... .......... 3.75M\n 10850K .......... .......... .......... .......... .......... 3.60M\n 10900K .......... .......... .......... .......... .......... 3.78M\n 10950K .......... .......... .......... .......... .......... 9.15M\n 11000K .......... .......... .......... .......... .......... 4.05M\n 11050K .......... .......... .......... .......... .......... 3.95M\n 11100K .......... .......... .......... .......... .......... 4.02M\n 11150K .......... .......... .......... .......... .......... 8.28M\n 11200K .......... .......... .......... .......... .......... 4.19M\n 11250K .......... .......... .......... .......... .......... 4.18M\n 11300K .......... .......... .......... .......... .......... 3.20M\n 11350K .......... .......... .......... .......... .......... 4.97M\n 11400K .......... .......... .......... .......... .......... 7.01M\n 11450K .......... .......... .......... .......... .......... 4.42M\n 11500K .......... .......... .......... .......... .......... 3.67M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 79.8M\n 50150K .......... .......... .......... .......... ..........  110M\n 50200K .......... .......... .......... .......... .......... 5.04M\n 50250K .......... .......... .......... .......... .......... 8.07M\n 50300K .......... .......... .......... .......... .......... 4.07M\n 50350K .......... .......... .......... .......... .......... 2.99M\n 50400K .......... .......... .......... .......... .......... 8.55M\n 50450K .......... .......... .......... .......... .......... 10.3M\n 50500K .......... .......... .......... .......... .......... 3.00M\n 50550K .......... .......... .......... .......... .......... 4.01M\n 50600K .......... .......... .......... .......... .......... 9.11M\n 50650K .......... .......... .......... .......... .......... 9.82M\n 50700K .......... .......... .......... .......... .......... 4.55M\n 50750K .......... .......... .......... .......... .......... 3.96M\n 50800K .......... .......... .......... .......... .......... 4.63M\n 50850K .......... .......... .......... .......... .......... 8.62M\n 50900K .......... .......... .......... .......... .......... 4.48M\n 50950K .......... .......... .......... .......... .......... 4.51M\n 51000K .......... .......... .......... .......... .......... 3.87M\n 51050K .......... .......... .......... .......... .......... 9.68M\n 51100K .......... .......... .......... .......... .......... 3.90M\n 51150K .......... .......... .......... .......... .......... 4.98M\n 51200K .......... .......... .......... .......... .......... 4.73M\n 51250K .......... .......... .......... .......... .......... 4.62M\n 51300K .......... .......... .......... .......... .......... 8.03M\n 51350K .......... .......... .......... .......... .......... 3.99M\n 51400K .......... .......... .......... .......... .......... 5.19M\n 51450K .......... .......... .......... .......... .......... 4.02M\n 51500K .......... .......... .......... .......... .......... 3.10M\n 51550K .......... .......... .......... .......... .......... 39.3M\n 51600K .......... .......... .......... .......... .......... 4.65M\n 51650K .......... .......... .......... .......... .......... 4.63M\n 51700K .......... .......... .......... .......... .......... 4.43M\n 51750K .......... .......... .......... .......... .......... 7.57M\n 51800K .......... .......... .......... .......... .......... 3.69M\n 51850K .......... .......... .......... .......... .......... 4.18M\n 51900K .......... .......... .......... .......... .......... 6.73M\n 51950K .......... .......... .......... .......... .......... 8.42M\n 52000K .......... .......... .......... .......... .......... 4.27M\n 52050K .......... .......... .......... .......... .......... 4.69M\n 52100K .......... .......... .......... .......... .......... 3.46M\n 52150K .......... .......... .......... .......... .......... 6.19M\n 52200K .......... .......... .......... .......... .......... 3.45M\n 52250K .......... .......... .......... .......... .......... 3.45M\n 52300K .......... .......... .......... .......... .......... 4.23M\n 52350K .......... .......... .......... .......... .......... 7.91M\n 52400K .......... .......... .......... .......... .......... 4.49M\n 52450K .......... .......... .......... .......... .......... 4.45M\n 52500K .......... .......... .......... .......... .......... 4.62M\n 52550K .......... .......... .......... .......... .......... 6.16M\n 52600K .......... .......... .......... .......... .......... 5.44M\n 52650K .......... .......... .......... .......... .......... 4.63M\n 52700K .......... .......... .......... .......... .......... 4.49M\n 52750K .......... .......... .......... .......... .......... 8.43M\n 52800K .......... .......... .......... .......... .......... 4.03M\n 52850K .......... .......... .......... .......... .......... 4.84M\n 52900K .......... .......... .......... .......... .......... 4.52M\n 52950K .......... .......... .......... .......... .......... 8.73M\n 53000K .......... .......... .......... .......... .......... 4.37M\n 53050K .......... .......... .......... .......... .......... 4.33M\n 53100K .......... .......... .......... .......... .......... 4.30M\n 53150K .......... .......... .......... .......... .......... 8.28M\n 53200K .......... .......... .......... .......... .......... 4.47M\n 53250K .......... .......... .......... .......... .......... 4.57M\n 53300K .......... .......... .......... .......... .......... 4.51M\n 53350K .......... .......... .......... .......... .......... 7.81M\n 53400K .......... .......... .......... .......... .......... 4.74M\n 53450K .......... .......... .......... .......... .......... 4.34M\n 53500K .......... .......... .......... .......... .......... 4.75M\n 53550K .......... .......... .......... .......... .......... 8.44M\n 53600K .......... .......... .......... .......... .......... 4.50M\n 53650K .......... .......... .......... .......... .......... 4.18M\n 53700K .......... .......... .......... .......... .......... 4.54M\n 53750K .......... .......... .......... .......... .......... 7.08M\n 53800K .......... .......... .......... .......... .......... 4.39M\n 53850K .......... .......... .......... .......... .......... 4.02M\n 53900K .......... .......... .......... .......... .......... 5.29M\n 53950K .......... .......... .......... .......... .......... 4.45M\n 54000K .......... .......... .......... .......... .......... 8.13M\n 54050K .......... .......... .......... .......... .......... 4.39M\n 54100K .......... .......... .......... .......... .......... 4.22M\n 54150K .......... .......... .......... .......... .......... 4.03M\n 54200K .......... .......... .......... .......... .......... 9.65M\n 54250K .......... .......... .......... .......... .......... 4.26M\n 54300K .......... .......... .......... .......... .......... 4.69M\n 54350K .......... .......... .......... .......... .......... 4.63M\n 54400K .......... .......... .......... .......... .......... 7.60M\n 54450K .......... .......... .......... .......... .......... 4.20M\n 54500K .......... .......... .......... .......... .......... 4.50M\n 54550K .......... .......... .......... .......... .......... 4.57M\n 54600K .......... .......... .......... .......... .......... 8.15M\n 54650K .......... .......... .......... .......... .......... 4.18M\n 54700K .......... .......... .......... .......... .......... 4.57M\n 54750K .......... .......... .......... .......... .......... 4.47M\n 54800K .......... .......... .......... .......... .......... 8.17M\n 54850K .......... .......... .......... .......... .......... 4.46M\n 54900K .......... .......... .......... .......... .......... 4.24M\n 54950K .......... .......... .......... .......... .......... 4.50M\n 55000K .......... .......... .......... .......... .......... 7.98M\n 55050K .......... .......... .......... .......... .......... 4.54M\n 55100K .......... .......... .......... .......... .......... 4.46M\n 55150K .......... .......... .......... .......... .......... 4.54M\n 55200K .......... .......... .......... .......... .......... 4.22M\n 55250K .......... .......... .......... .......... .......... 8.71M\n 55300K .......... .......... .......... .......... .......... 4.47M\n 55350K .......... .......... .......... .......... .......... 4.31M\n 55400K .......... .......... .......... .......... .......... 4.53M\n 55450K .......... .......... .......... .......... .......... 7.53M\n 55500K .......... .......... .......... .......... .......... 4.57M\n 55550K .......... .......... .......... .......... .......... 3.73M\n 55600K .......... .......... .......... .......... .......... 5.67M\n 55650K .......... .......... .......... .......... .......... 6.23M\n 55700K .......... .......... .......... .......... .......... 4.81M\n 55750K .......... .......... .......... .......... .......... 3.53M\n 55800K .......... .......... .......... .......... .......... 4.69M\n 55850K .......... .......... .......... .......... .......... 7.51M\n 55900K .......... .......... .......... .......... .......... 3.96M\n 55950K .......... .......... .......... .......... ..........  541K\n 56000K .......... .......... .......... .......... .......... 68.8M\n 56050K .......... .......... .......... .......... ..........  109M\n 56100K .......... .......... .......... .......... .......... 99.9M\n 56150K .......... .......... .......... .......... ..........  129M\n 56200K .......... .......... .......... .......... ..........  130M\n 56250K .......... .......... .......... .......... ..........  137M\n 56300K .......... .......... .......... .......... ..........  157M\n 56350K .......... .......... .......... .......... ..........  174M\n 56400K .......... .......... .......... .......... .......... 5.37M\n 56450K .......... .......... .......... .......... .......... 4.18M\n 56500K .......... .......... .......... .......... .......... 3.39M\n 56550K .......... .......... .......... .......... .......... 4.12M\n 56600K .......... .......... .......... .......... .......... 2.73M\n 56650K .......... .......... .......... .......... .......... 3.42M\n 56700K .......... .......... .......... .......... .......... 4.45M\n 56750K .......... .......... .......... .......... .......... 4.28M\n 56800K .......... .......... .......... .......... .......... 3.21M\n 56850K .......... .......... .......... .......... .......... 4.50M\n 56900K .......... .......... .......... .......... .......... 2.84M\n 56950K .......... .......... .......... .......... .......... 3.92M\n 57000K .......... .......... .......... .......... .......... 5.19M\n 57050K .......... .......... .......... .......... .......... 2.79M\n 57100K .......... .......... .......... .......... .......... 3.40M\n 57150K .......... .......... .......... .......... .......... 4.19M\n 57200K .......... .......... .......... .......... .......... 4.09M\n 57250K .......... .......... .......... .......... .......... 4.54M\n 57300K .......... .......... .......... .......... .......... 3.13M\n 57350K .......... .......... .......... .......... .......... 3.30M\n 57400K .......... .......... .......... .......... .......... 2.58M\n 57450K .......... .......... .......... .......... .......... 12.5M\n 57500K .......... .......... .......... .......... .......... 3.02M\n 57550K .......... .......... .......... .......... .......... 4.22M\n 57600K .......... .......... .......... .......... .......... 2.31M\n 57650K .......... .......... .......... .......... .......... 7.68M\n 57700K .......... .......... .......... .......... .......... 4.45M\n 57750K .......... .......... .......... .......... .......... 2.76M\n 57800K .......... .......... .......... .......... .......... 3.31M\n 57850K .......... .......... .......... .......... .......... 8.35M\n 57900K .......... .......... .......... .......... .......... 3.10M\n 57950K .......... .......... .......... .......... .......... 2.91M\n 58000K .......... .......... .......... .......... .......... 8.77M\n 58050K .......... .......... .......... .......... .......... 2.71M\n 58100K .......... .......... .......... .......... .......... 4.62M\n 58150K .......... .......... .......... .......... .......... 3.29M\n 58200K .......... .......... .......... .......... .......... 4.09M\n 58250K .......... .......... .......... .......... .......... 2.85M\n 58300K .......... .......... .......... .......... .......... 5.15M\n 58350K .......... .......... .......... .......... .......... 3.76M\n 58400K .......... .......... .......... .......... .......... 4.77M\n 58450K .......... .......... .......... .......... .......... 3.49M\n 58500K .......... .......... .......... .......... .......... 4.24M\n 58550K .......... .......... .......... .......... .......... 4.00M\n 58600K .......... .......... .......... .......... .......... 2.76M\n 58650K .......... .......... .......... .......... .......... 3.67M\n 58700K .......... .......... .......... .......... .......... 4.33M\n 58750K .......... .......... .......... .......... .......... 4.24M\n 58800K .......... .......... .......... .......... .......... 4.98M\n 58850K .......... .......... .......... .......... .......... 4.13M\n 58900K .......... .......... .......... .......... .......... 3.98M\n 58950K .......... .......... .......... .......... .......... 2.94M\n 59000K .......... .......... .......... .......... .......... 3.39M\n 59050K .......... .......... .......... .......... .......... 4.25M\n 59100K .......... .......... .......... .......... .......... 4.40M\n 59150K .......... .......... .......... .......... .......... 3.42M\n 59200K .......... .......... .......... .......... .......... 7.01M\n 59250K .......... .......... .......... .......... .......... 2.81M\n 59300K .......... .......... .......... .......... .......... 4.08M\n 59350K .......... .......... .......... .......... .......... 3.43M\n 59400K .......... .......... .......... .......... .......... 4.22M\n 59450K .......... .......... .......... .......... .......... 3.01M\n 59500K .......... .......... .......... .......... .......... 5.47M\n 59550K .......... .......... .......... .......... .......... 6.96M\n 59600K .......... .......... .......... .......... .......... 2.83M\n 59650K .......... .......... .......... .......... .......... 3.91M\n 59700K .......... .......... .......... .......... .......... 3.55M\n 59750K .......... .......... .......... .......... .......... 4.27M\n 59800K .......... .......... .......... .......... .......... 3.00M\n 59850K .......... .......... .......... .......... .......... 4.90M\n 59900K .......... .......... .......... .......... .......... 7.60M\n 59950K .......... .......... .......... .......... .......... 2.90M\n 60000K .......... .......... .......... .......... .......... 3.85M\n 60050K .......... .......... .......... .......... .......... 3.59M\n 60100K .......... .......... .......... .......... .......... 5.74M\n 60150K .......... .......... .......... .......... .......... 2.57M\n 60200K .......... .......... .......... .......... .......... 4.82M\n 60250K .......... .......... .......... .......... .......... 7.64M\n 60300K .......... .......... .......... .......... .......... 2.90M\n 60350K .......... .......... .......... .......... .......... 3.95M\n 60400K .......... .......... .......... .......... .......... 5.20M\n 60450K .......... .......... .......... .......... .......... 3.61M\n 60500K .......... .......... .......... .......... .......... 3.70M\n 60550K .......... .......... .......... .......... .......... 3.13M\n 60600K .......... .......... .......... .......... .......... 7.66M\n 60650K .......... .........                                   92.4M=14s\n\n2024-01-22 19:02:47 (4.09 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-01-22 19:02:50--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  191K 4s\n    50K .......... .......... .......... .......... .......... 12%  193K 4s\n   100K .......... .......... .......... .......... .......... 18%  577K 3s\n   150K .......... .......... .......... .......... .......... 24%  575K 2s\n   200K .......... .......... .......... .......... .......... 30%  580K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  579K 1s\n   350K .......... .......... .......... .......... .......... 48%  579K 1s\n   400K .......... .......... .......... .......... .......... 54%  579K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.18M 1s\n   500K .......... .......... .......... .......... .......... 66% 1.08M 1s\n   550K .......... .......... .......... .......... .......... 72%  571K 0s\n   600K .......... .......... .......... .......... .......... 78% 22.6M 0s\n   650K .......... .......... .......... .......... .......... 84%  591K 0s\n   700K .......... .......... .......... .......... .......... 90% 18.6M 0s\n   750K .......... .......... .......... .......... .......... 96%  596K 0s\n   800K .......... .......... .......                         100%  144M=1.5s\n\n2024-01-22 19:02:52 (562 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-01-22 19:02:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  189K\n    50K .......... .......... .......... .......... ..........  287K\n   100K .......... .......... .......... .......... ..........  571K\n   150K .......... .......... .......... .......... ..........  573K\n   200K .......... .......... .......... .......... ..........  573K\n   250K .......... .......... .......... .......... ..........  596K\n   300K .......... .......... .......... .......... .......... 1.18M\n   350K .......... .......... .......... .......... ..........  572K\n   400K .......... .......... .......... .......... ..........  991K\n   450K .......... .......... .......... .......... ..........  596K\n   500K .......... .......... .......... .......... .......... 1.21M\n   550K .......... .......... .......... .......... .......... 1006K\n   600K .......... .......... .......... .......... .......... 1.29M\n   650K .......... .......... .......... .......... ..........  996K\n   700K .......... .......... .......... .......... .......... 1.31M\n   750K .......... .......... .......... .......... .......... 1002K\n   800K .......... .......... .......... .......... .......... 1.30M\n   850K .......... .......... .......... .......... .......... 1010K\n   900K .......... .......... .......... .......... .......... 47.5M\n   950K .......... .......... .......... .......... ..........  599K\n  1000K .......... .......... .......... .......... .......... 14.5M\n  1050K .......... .......... .......... .......... .......... 1.31M\n  1100K .......... .......... .......... .......... .......... 1.04M\n  1150K .......... .......... .......... .......... .......... 14.0M\n  1200K .......... .......... .......... .......... .......... 1.29M\n  1250K .......... .......... .......... .......... .......... 1.07M\n  1300K .......... .......... .......... .......... .......... 12.0M\n  1350K .......... .......... .......... .......... .......... 1.29M\n  1400K .......... .......... .......... .......... .......... 1.08M\n  1450K .......... .......... .......... .......... .......... 11.9M\n  1500K .......... .......... .......... .......... .......... 1.29M\n  1550K .......... .......... .......... .......... .......... 1.07M\n  1600K .......... .......... .......... .......... .......... 13.2M\n  1650K .......... .......... .......... .......... .......... 52.4M\n  1700K .......... .......... .......... .......... ..........  600K\n  1750K .......... .......... .......... .......... .......... 17.3M\n  1800K .......... .......... .......... .......... ..........  148M\n  1850K .......... .......... .......... .......... .......... 1.29M\n  1900K .......... .......... .......... .......... .......... 1.06M\n  1950K .......... .......... .......... .......... .......... 16.2M\n  2000K .......... .......... .......... .......... .......... 46.8M\n  2050K .......... .......... .......... .......... .......... 1.31M\n  2100K .......... .......... .......... .......... .......... 1.05M\n  2150K .......... .......... .......... .......... .......... 22.2M\n  2200K .......... .......... .......... .......... ..........  102M\n  2250K .......... .......... .......... .......... .......... 1.28M\n  2300K .......... .......... .......... .......... .......... 1.09M\n  2350K .......... .......... .......... .......... .......... 18.6M\n  2400K .......... .......... .......... .......... .......... 32.2M\n  2450K .......... .......... .......... .......... .......... 28.6M\n  2500K .......... .......... .......... .......... .......... 1.32M\n  2550K .......... .......... .......... .......... .......... 1.05M\n  2600K .......... .......... .......... .......... .......... 27.9M\n  2650K .......... .......... .......... .......... .......... 61.4M\n  2700K .......... .......... .......... .......... .......... 1.29M\n  2750K .......... .......... .......... .......... .......... 52.9M\n  2800K .......... .......... .......... .......... .......... 1.06M\n  2850K .......... .......... .......... .......... .......... 28.2M\n  2900K .......... .......... .......... .......... .......... 99.6M\n  2950K .......... .......... .......... .......... .......... 36.5M\n  3000K .......... .......... .......... .......... .......... 1.32M\n  3050K .......... .......... .......... .......... .......... 1.07M\n  3100K .......... .......... .......... .......... .......... 34.1M\n  3150K .......... .......... .......... .......... .......... 23.3M\n  3200K .......... .......... .......... .......... .......... 99.2M\n  3250K .......... .......... .......... .......... .......... 54.2M\n  3300K .......... .......... .......... .......... .......... 1.33M\n  3350K .......... .......... .......... .......... .......... 1.07M\n  3400K .......... .......... .......... .......... .......... 40.4M\n  3450K .......... .......... .......... .......... .......... 23.5M\n  3500K .......... .......... .......... .......... .......... 91.8M\n  3550K .......... .......... .......... .......... .......... 55.0M\n  3600K .......... .......... .......... .......... .......... 1.33M\n  3650K .......... .......... .......... .......... .......... 1.07M\n  3700K .......... .......... .......... .......... .......... 36.6M\n  3750K .......... .......... .......... .......... .......... 41.9M\n  3800K .......... .......... .......... .......... .......... 33.6M\n  3850K .......... .......... .......... .......... ..........  146M\n  3900K .......... .......... .......... .......... .......... 54.9M\n  3950K .......... .......... .......... .......... .......... 1.33M\n  4000K .......... .......... .......... .......... .......... 1.06M\n  4050K .......... .......... .......... .......... .......... 51.5M\n  4100K .......... .......... .......... .......... ..........  101M\n  4150K .......... .......... .......... .......... .......... 26.3M\n  4200K .......... .......... .......... .......... ..........  104M\n  4250K .......... .......... .......... .......... ..........  110M\n  4300K .......... .......... .......... .......... .......... 1.32M\n  4350K .......... .......... .......... .......... .......... 71.1M\n  4400K .......... .......... .......... .......... .......... 1.06M\n  4450K .......... .......... .......... .......... .......... 61.8M\n  4500K .......... .......... .......... .......... ..........  110M\n  4550K .......... .......... .......... .......... .......... 28.7M\n  4600K .......... .......... .......... .......... ..........  130M\n  4650K .......... .......... .......... .......... ..........  142M\n  4700K .......... .......... .......... .......... .......... 1.32M\n  4750K .......... .......... .......... .......... .......... 78.2M\n  4800K .......... .......... .......... .......... .......... 1.07M\n  4850K .......... .......... .......... .......... .......... 54.3M\n  4900K .......... .......... .......... .......... .......... 76.3M\n  4950K .......... .......... .......... .......... .......... 31.6M\n  5000K .......... .......... .......... .......... ..........  147M\n  5050K .......... .......... .......... .......... ..........  131M\n  5100K .......... .......... .......... .......... .......... 53.5M\n  5150K .......... .......... .......... .......... .......... 1.34M\n  5200K .......... .......... .......... .......... .......... 1.16M\n  5250K .......... .......... .......... .......... .......... 13.0M\n  5300K .......... .......... .......... .......... .......... 37.5M\n  5350K .......... .......... .......... .......... .......... 81.6M\n  5400K .......... .......... .......... .......... .......... 39.0M\n  5450K .......... .......... .......... .......... .......... 70.0M\n  5500K .......... .......... .......... .......... ..........  132M\n  5550K .......... .......... .......... .......... ..........  164M\n  5600K .......... .......... .......... .......... .......... 1.31M\n  5650K .......... .......... .......... .......... .......... 77.1M\n  5700K .......... .......... .......... .......... .......... 1.09M\n  5750K .......... .......... .......... .......... .......... 93.0M\n  5800K .......... .......... .......... .......... .......... 49.8M\n  5850K .......... .......... .......... .......... .......... 41.1M\n  5900K .......... .......... .......... .......... .......... 59.0M\n  5950K .......... .......... .......... .......... .......... 82.1M\n  6000K .......... .......... .......... .......... ..........  112M\n  6050K .......... .......... .......... .......... ..........  138M\n  6100K .......... .......... .......... .......... .......... 1.33M\n  6150K .......... .......... .......... .......... ..........  110M\n  6200K .......... .......... .......... .......... .......... 1.06M\n  6250K .......... .......... .......... .......... .......... 85.9M\n  6300K .......... .......... .......... .......... ..........  104M\n  6350K .......... .......... .......... .......... .......... 68.5M\n  6400K .......... .......... .......... .......... .......... 75.0M\n  6450K .......... .......... .......... .......... .......... 76.5M\n  6500K .......... .......... .......... .......... ..........  141M\n  6550K .......... .......... .......... .......... ..........  174M\n  6600K .......... .......... .......... .......... .......... 84.0M\n  6650K .......... .......... .......... .......... .......... 1.32M\n  6700K .......... .......... .......... .......... ..........  101M\n  6750K .......... .......... .......... .......... .......... 1.07M\n  6800K .......... .......... .......... .......... ..........  138M\n  6850K .......... .......... .......... .......... ..........  160M\n  6900K .......... .......... .......... .......... .......... 36.8M\n  6950K .......... .......... .......... .......... .......... 50.9M\n  7000K .......... .......... .......... .......... .......... 87.7M\n  7050K .......... .......... .......... .......... ..........  135M\n  7100K .......... .......... .......... .......... ..........  162M\n  7150K .......... .......... .......... .......... .......... 40.9M\n  7200K .......... .......... .......... .......... .......... 1.36M\n  7250K .......... .......... .......... .......... ..........  159M\n  7300K .......... .......... .......... .......... .......... 1.17M\n  7350K .......... .......... .......... .......... .......... 10.5M\n  7400K .......... .......... .......... .......... ..........  108M\n  7450K .......... .......... .......... .......... .......... 77.4M\n  7500K .......... .......... .......... .......... .......... 76.2M\n  7550K .......... .......... .......... .......... .......... 64.6M\n  7600K .......... .......... .......... .......... .......... 4.71M\n  7650K .......... .......... .......... .......... .......... 4.24M\n  7700K .......... .......... .......... .......... .......... 6.82M\n  7750K .......... .......... .......... .......... .......... 4.53M\n  7800K .......... .......... .......... .......... .......... 4.11M\n  7850K .......... .......... .......... .......... .......... 4.25M\n  7900K .......... .......... .......... .......... .......... 2.29M\n  7950K .......... .......... .......... .......... .......... 63.5M\n  8000K .......... .......... .......... .......... .......... 5.97M\n  8050K .......... .......... .......... .......... .......... 6.71M\n  8100K .......... .......... .......... .......... .......... 5.01M\n  8150K .......... .......... .......... .......... .......... 4.16M\n  8200K .......... .......... .......... .......... .......... 4.09M\n  8250K .......... .......... .......... .......... .......... 8.28M\n  8300K .......... .......... .......... .......... .......... 4.23M\n  8350K .......... .......... .......... .......... .......... 3.92M\n  8400K .......... .......... .......... .......... .......... 4.22M\n  8450K .......... .......... .......... .......... .......... 7.78M\n  8500K .......... .......... .......... .......... .......... 4.30M\n  8550K .......... .......... .......... .......... .......... 4.05M\n  8600K .......... .......... .......... .......... .......... 3.81M\n  8650K .......... .......... .......... .......... .......... 8.86M\n  8700K .......... .......... .......... .......... .......... 4.08M\n  8750K .......... .......... .......... .......... .......... 4.33M\n  8800K .......... .......... .......... .......... .......... 3.65M\n  8850K .......... .......... .......... .......... .......... 7.55M\n  8900K .......... .......... .......... .......... .......... 3.92M\n  8950K .......... .......... .......... .......... .......... 4.11M\n  9000K .......... .......... .......... .......... .......... 3.94M\n  9050K .......... .......... .......... .......... .......... 7.69M\n  9100K .......... .......... .......... .......... .......... 4.01M\n  9150K .......... .......... .......... .......... .......... 4.08M\n  9200K .......... .......... .......... .......... .......... 4.17M\n  9250K .......... .......... .......... .......... .......... 7.04M\n  9300K .......... .......... .......... .......... .......... 4.25M\n  9350K .......... .......... .......... .......... .......... 4.24M\n  9400K .......... .......... .......... .......... .......... 4.06M\n  9450K .......... .......... .......... .......... .......... 4.03M\n  9500K .......... .......... .......... .......... .......... 7.20M\n  9550K .......... .......... .......... .......... .......... 4.20M\n  9600K .......... .......... .......... .......... .......... 4.04M\n  9650K .......... .......... .......... .......... .......... 4.19M\n  9700K .......... .......... .......... .......... .......... 7.79M\n  9750K .......... .......... .......... .......... .......... 4.18M\n  9800K .......... .......... .......... .......... .......... 4.14M\n  9850K .......... .......... .......... .......... .......... 4.15M\n  9900K .......... .......... .......... .......... .......... 7.58M\n  9950K .......... .......... .......... .......... .......... 4.22M\n 10000K .......... .......... .......... .......... .......... 4.00M\n 10050K .......... .......... .......... .......... .......... 4.13M\n 10100K .......... .......... .......... .......... .......... 3.47M\n 10150K .......... .......... .......... .......... .......... 10.8M\n 10200K .......... .......... .......... .......... .......... 4.16M\n 10250K .......... .......... .......... .......... .......... 3.81M\n 10300K .......... .......... .......... .......... .......... 4.21M\n 10350K .......... .......... .......... .......... .......... 8.68M\n 10400K .......... .......... .......... .......... .......... 3.70M\n 10450K .......... .......... .......... .......... .......... 4.56M\n 10500K .......... .......... .......... .......... .......... 4.04M\n 10550K .......... .......... .......... .......... .......... 7.59M\n 10600K .......... .......... .......... .......... .......... 4.28M\n 10650K .......... .......... .......... .......... .......... 4.30M\n 10700K .......... .......... .......... .......... .......... 3.93M\n 10750K .......... .......... .......... .......... .......... 7.97M\n 10800K .......... .......... .......... .......... .......... 3.75M\n 10850K .......... .......... .......... .......... .......... 3.60M\n 10900K .......... .......... .......... .......... .......... 3.78M\n 10950K .......... .......... .......... .......... .......... 9.15M\n 11000K .......... .......... .......... .......... .......... 4.05M\n 11050K .......... .......... .......... .......... .......... 3.95M\n 11100K .......... .......... .......... .......... .......... 4.02M\n 11150K .......... .......... .......... .......... .......... 8.28M\n 11200K .......... .......... .......... .......... .......... 4.19M\n 11250K .......... .......... .......... .......... .......... 4.18M\n 11300K .......... .......... .......... .......... .......... 3.20M\n 11350K .......... .......... .......... .......... .......... 4.97M\n 11400K .......... .......... .......... .......... .......... 7.01M\n 11450K .......... .......... .......... .......... .......... 4.42M\n 11500K .......... .......... .......... .......... .......... 3.67M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 79.8M\n 50150K .......... .......... .......... .......... ..........  110M\n 50200K .......... .......... .......... .......... .......... 5.04M\n 50250K .......... .......... .......... .......... .......... 8.07M\n 50300K .......... .......... .......... .......... .......... 4.07M\n 50350K .......... .......... .......... .......... .......... 2.99M\n 50400K .......... .......... .......... .......... .......... 8.55M\n 50450K .......... .......... .......... .......... .......... 10.3M\n 50500K .......... .......... .......... .......... .......... 3.00M\n 50550K .......... .......... .......... .......... .......... 4.01M\n 50600K .......... .......... .......... .......... .......... 9.11M\n 50650K .......... .......... .......... .......... .......... 9.82M\n 50700K .......... .......... .......... .......... .......... 4.55M\n 50750K .......... .......... .......... .......... .......... 3.96M\n 50800K .......... .......... .......... .......... .......... 4.63M\n 50850K .......... .......... .......... .......... .......... 8.62M\n 50900K .......... .......... .......... .......... .......... 4.48M\n 50950K .......... .......... .......... .......... .......... 4.51M\n 51000K .......... .......... .......... .......... .......... 3.87M\n 51050K .......... .......... .......... .......... .......... 9.68M\n 51100K .......... .......... .......... .......... .......... 3.90M\n 51150K .......... .......... .......... .......... .......... 4.98M\n 51200K .......... .......... .......... .......... .......... 4.73M\n 51250K .......... .......... .......... .......... .......... 4.62M\n 51300K .......... .......... .......... .......... .......... 8.03M\n 51350K .......... .......... .......... .......... .......... 3.99M\n 51400K .......... .......... .......... .......... .......... 5.19M\n 51450K .......... .......... .......... .......... .......... 4.02M\n 51500K .......... .......... .......... .......... .......... 3.10M\n 51550K .......... .......... .......... .......... .......... 39.3M\n 51600K .......... .......... .......... .......... .......... 4.65M\n 51650K .......... .......... .......... .......... .......... 4.63M\n 51700K .......... .......... .......... .......... .......... 4.43M\n 51750K .......... .......... .......... .......... .......... 7.57M\n 51800K .......... .......... .......... .......... .......... 3.69M\n 51850K .......... .......... .......... .......... .......... 4.18M\n 51900K .......... .......... .......... .......... .......... 6.73M\n 51950K .......... .......... .......... .......... .......... 8.42M\n 52000K .......... .......... .......... .......... .......... 4.27M\n 52050K .......... .......... .......... .......... .......... 4.69M\n 52100K .......... .......... .......... .......... .......... 3.46M\n 52150K .......... .......... .......... .......... .......... 6.19M\n 52200K .......... .......... .......... .......... .......... 3.45M\n 52250K .......... .......... .......... .......... .......... 3.45M\n 52300K .......... .......... .......... .......... .......... 4.23M\n 52350K .......... .......... .......... .......... .......... 7.91M\n 52400K .......... .......... .......... .......... .......... 4.49M\n 52450K .......... .......... .......... .......... .......... 4.45M\n 52500K .......... .......... .......... .......... .......... 4.62M\n 52550K .......... .......... .......... .......... .......... 6.16M\n 52600K .......... .......... .......... .......... .......... 5.44M\n 52650K .......... .......... .......... .......... .......... 4.63M\n 52700K .......... .......... .......... .......... .......... 4.49M\n 52750K .......... .......... .......... .......... .......... 8.43M\n 52800K .......... .......... .......... .......... .......... 4.03M\n 52850K .......... .......... .......... .......... .......... 4.84M\n 52900K .......... .......... .......... .......... .......... 4.52M\n 52950K .......... .......... .......... .......... .......... 8.73M\n 53000K .......... .......... .......... .......... .......... 4.37M\n 53050K .......... .......... .......... .......... .......... 4.33M\n 53100K .......... .......... .......... .......... .......... 4.30M\n 53150K .......... .......... .......... .......... .......... 8.28M\n 53200K .......... .......... .......... .......... .......... 4.47M\n 53250K .......... .......... .......... .......... .......... 4.57M\n 53300K .......... .......... .......... .......... .......... 4.51M\n 53350K .......... .......... .......... .......... .......... 7.81M\n 53400K .......... .......... .......... .......... .......... 4.74M\n 53450K .......... .......... .......... .......... .......... 4.34M\n 53500K .......... .......... .......... .......... .......... 4.75M\n 53550K .......... .......... .......... .......... .......... 8.44M\n 53600K .......... .......... .......... .......... .......... 4.50M\n 53650K .......... .......... .......... .......... .......... 4.18M\n 53700K .......... .......... .......... .......... .......... 4.54M\n 53750K .......... .......... .......... .......... .......... 7.08M\n 53800K .......... .......... .......... .......... .......... 4.39M\n 53850K .......... .......... .......... .......... .......... 4.02M\n 53900K .......... .......... .......... .......... .......... 5.29M\n 53950K .......... .......... .......... .......... .......... 4.45M\n 54000K .......... .......... .......... .......... .......... 8.13M\n 54050K .......... .......... .......... .......... .......... 4.39M\n 54100K .......... .......... .......... .......... .......... 4.22M\n 54150K .......... .......... .......... .......... .......... 4.03M\n 54200K .......... .......... .......... .......... .......... 9.65M\n 54250K .......... .......... .......... .......... .......... 4.26M\n 54300K .......... .......... .......... .......... .......... 4.69M\n 54350K .......... .......... .......... .......... .......... 4.63M\n 54400K .......... .......... .......... .......... .......... 7.60M\n 54450K .......... .......... .......... .......... .......... 4.20M\n 54500K .......... .......... .......... .......... .......... 4.50M\n 54550K .......... .......... .......... .......... .......... 4.57M\n 54600K .......... .......... .......... .......... .......... 8.15M\n 54650K .......... .......... .......... .......... .......... 4.18M\n 54700K .......... .......... .......... .......... .......... 4.57M\n 54750K .......... .......... .......... .......... .......... 4.47M\n 54800K .......... .......... .......... .......... .......... 8.17M\n 54850K .......... .......... .......... .......... .......... 4.46M\n 54900K .......... .......... .......... .......... .......... 4.24M\n 54950K .......... .......... .......... .......... .......... 4.50M\n 55000K .......... .......... .......... .......... .......... 7.98M\n 55050K .......... .......... .......... .......... .......... 4.54M\n 55100K .......... .......... .......... .......... .......... 4.46M\n 55150K .......... .......... .......... .......... .......... 4.54M\n 55200K .......... .......... .......... .......... .......... 4.22M\n 55250K .......... .......... .......... .......... .......... 8.71M\n 55300K .......... .......... .......... .......... .......... 4.47M\n 55350K .......... .......... .......... .......... .......... 4.31M\n 55400K .......... .......... .......... .......... .......... 4.53M\n 55450K .......... .......... .......... .......... .......... 7.53M\n 55500K .......... .......... .......... .......... .......... 4.57M\n 55550K .......... .......... .......... .......... .......... 3.73M\n 55600K .......... .......... .......... .......... .......... 5.67M\n 55650K .......... .......... .......... .......... .......... 6.23M\n 55700K .......... .......... .......... .......... .......... 4.81M\n 55750K .......... .......... .......... .......... .......... 3.53M\n 55800K .......... .......... .......... .......... .......... 4.69M\n 55850K .......... .......... .......... .......... .......... 7.51M\n 55900K .......... .......... .......... .......... .......... 3.96M\n 55950K .......... .......... .......... .......... ..........  541K\n 56000K .......... .......... .......... .......... .......... 68.8M\n 56050K .......... .......... .......... .......... ..........  109M\n 56100K .......... .......... .......... .......... .......... 99.9M\n 56150K .......... .......... .......... .......... ..........  129M\n 56200K .......... .......... .......... .......... ..........  130M\n 56250K .......... .......... .......... .......... ..........  137M\n 56300K .......... .......... .......... .......... ..........  157M\n 56350K .......... .......... .......... .......... ..........  174M\n 56400K .......... .......... .......... .......... .......... 5.37M\n 56450K .......... .......... .......... .......... .......... 4.18M\n 56500K .......... .......... .......... .......... .......... 3.39M\n 56550K .......... .......... .......... .......... .......... 4.12M\n 56600K .......... .......... .......... .......... .......... 2.73M\n 56650K .......... .......... .......... .......... .......... 3.42M\n 56700K .......... .......... .......... .......... .......... 4.45M\n 56750K .......... .......... .......... .......... .......... 4.28M\n 56800K .......... .......... .......... .......... .......... 3.21M\n 56850K .......... .......... .......... .......... .......... 4.50M\n 56900K .......... .......... .......... .......... .......... 2.84M\n 56950K .......... .......... .......... .......... .......... 3.92M\n 57000K .......... .......... .......... .......... .......... 5.19M\n 57050K .......... .......... .......... .......... .......... 2.79M\n 57100K .......... .......... .......... .......... .......... 3.40M\n 57150K .......... .......... .......... .......... .......... 4.19M\n 57200K .......... .......... .......... .......... .......... 4.09M\n 57250K .......... .......... .......... .......... .......... 4.54M\n 57300K .......... .......... .......... .......... .......... 3.13M\n 57350K .......... .......... .......... .......... .......... 3.30M\n 57400K .......... .......... .......... .......... .......... 2.58M\n 57450K .......... .......... .......... .......... .......... 12.5M\n 57500K .......... .......... .......... .......... .......... 3.02M\n 57550K .......... .......... .......... .......... .......... 4.22M\n 57600K .......... .......... .......... .......... .......... 2.31M\n 57650K .......... .......... .......... .......... .......... 7.68M\n 57700K .......... .......... .......... .......... .......... 4.45M\n 57750K .......... .......... .......... .......... .......... 2.76M\n 57800K .......... .......... .......... .......... .......... 3.31M\n 57850K .......... .......... .......... .......... .......... 8.35M\n 57900K .......... .......... .......... .......... .......... 3.10M\n 57950K .......... .......... .......... .......... .......... 2.91M\n 58000K .......... .......... .......... .......... .......... 8.77M\n 58050K .......... .......... .......... .......... .......... 2.71M\n 58100K .......... .......... .......... .......... .......... 4.62M\n 58150K .......... .......... .......... .......... .......... 3.29M\n 58200K .......... .......... .......... .......... .......... 4.09M\n 58250K .......... .......... .......... .......... .......... 2.85M\n 58300K .......... .......... .......... .......... .......... 5.15M\n 58350K .......... .......... .......... .......... .......... 3.76M\n 58400K .......... .......... .......... .......... .......... 4.77M\n 58450K .......... .......... .......... .......... .......... 3.49M\n 58500K .......... .......... .......... .......... .......... 4.24M\n 58550K .......... .......... .......... .......... .......... 4.00M\n 58600K .......... .......... .......... .......... .......... 2.76M\n 58650K .......... .......... .......... .......... .......... 3.67M\n 58700K .......... .......... .......... .......... .......... 4.33M\n 58750K .......... .......... .......... .......... .......... 4.24M\n 58800K .......... .......... .......... .......... .......... 4.98M\n 58850K .......... .......... .......... .......... .......... 4.13M\n 58900K .......... .......... .......... .......... .......... 3.98M\n 58950K .......... .......... .......... .......... .......... 2.94M\n 59000K .......... .......... .......... .......... .......... 3.39M\n 59050K .......... .......... .......... .......... .......... 4.25M\n 59100K .......... .......... .......... .......... .......... 4.40M\n 59150K .......... .......... .......... .......... .......... 3.42M\n 59200K .......... .......... .......... .......... .......... 7.01M\n 59250K .......... .......... .......... .......... .......... 2.81M\n 59300K .......... .......... .......... .......... .......... 4.08M\n 59350K .......... .......... .......... .......... .......... 3.43M\n 59400K .......... .......... .......... .......... .......... 4.22M\n 59450K .......... .......... .......... .......... .......... 3.01M\n 59500K .......... .......... .......... .......... .......... 5.47M\n 59550K .......... .......... .......... .......... .......... 6.96M\n 59600K .......... .......... .......... .......... .......... 2.83M\n 59650K .......... .......... .......... .......... .......... 3.91M\n 59700K .......... .......... .......... .......... .......... 3.55M\n 59750K .......... .......... .......... .......... .......... 4.27M\n 59800K .......... .......... .......... .......... .......... 3.00M\n 59850K .......... .......... .......... .......... .......... 4.90M\n 59900K .......... .......... .......... .......... .......... 7.60M\n 59950K .......... .......... .......... .......... .......... 2.90M\n 60000K .......... .......... .......... .......... .......... 3.85M\n 60050K .......... .......... .......... .......... .......... 3.59M\n 60100K .......... .......... .......... .......... .......... 5.74M\n 60150K .......... .......... .......... .......... .......... 2.57M\n 60200K .......... .......... .......... .......... .......... 4.82M\n 60250K .......... .......... .......... .......... .......... 7.64M\n 60300K .......... .......... .......... .......... .......... 2.90M\n 60350K .......... .......... .......... .......... .......... 3.95M\n 60400K .......... .......... .......... .......... .......... 5.20M\n 60450K .......... .......... .......... .......... .......... 3.61M\n 60500K .......... .......... .......... .......... .......... 3.70M\n 60550K .......... .......... .......... .......... .......... 3.13M\n 60600K .......... .......... .......... .......... .......... 7.66M\n 60650K .......... .........                                   92.4M=14s\n\n2024-01-22 19:02:47 (4.09 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-01-22 19:02:50--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  191K 4s\n    50K .......... .......... .......... .......... .......... 12%  193K 4s\n   100K .......... .......... .......... .......... .......... 18%  577K 3s\n   150K .......... .......... .......... .......... .......... 24%  575K 2s\n   200K .......... .......... .......... .......... .......... 30%  580K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  579K 1s\n   350K .......... .......... .......... .......... .......... 48%  579K 1s\n   400K .......... .......... .......... .......... .......... 54%  579K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.18M 1s\n   500K .......... .......... .......... .......... .......... 66% 1.08M 1s\n   550K .......... .......... .......... .......... .......... 72%  571K 0s\n   600K .......... .......... .......... .......... .......... 78% 22.6M 0s\n   650K .......... .......... .......... .......... .......... 84%  591K 0s\n   700K .......... .......... .......... .......... .......... 90% 18.6M 0s\n   750K .......... .......... .......... .......... .......... 96%  596K 0s\n   800K .......... .......... .......                         100%  144M=1.5s\n\n2024-01-22 19:02:52 (562 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2024-01-22T19:03:06.411372",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 52.04453182220459, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-01-22 19:02:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  189K    50K .......... .......... .......... .......... ..........  287K   100K .......... .......... .......... .......... ..........  571K   150K .......... .......... .......... .......... ..........  573K   200K .......... .......... .......... .......... ..........  573K   250K .......... .......... .......... .......... ..........  596K   300K .......... .......... .......... .......... .......... 1.18M   350K .......... .......... .......... .......... ..........  572K   400K .......... .......... .......... .......... ..........  991K   450K .......... .......... .......... .......... ..........  596K   500K .......... .......... .......... .......... .......... 1.21M   550K .......... .......... .......... .......... .......... 1006K   600K .......... .......... .......... .......... .......... 1.29M   650K .......... .......... .......... .......... ..........  996K   700K .......... .......... .......... .......... .......... 1.31M   750K .......... .......... .......... .......... .......... 1002K   800K .......... .......... .......... .......... .......... 1.30M   850K .......... .......... .......... .......... .......... 1010K   900K .......... .......... .......... .......... .......... 47.5M   950K .......... .......... .......... .......... ..........  599K  1000K .......... .......... .......... .......... .......... 14.5M  1050K .......... .......... .......... .......... .......... 1.31M  1100K .......... .......... .......... .......... .......... 1.04M  1150K .......... .......... .......... .......... .......... 14.0M  1200K .......... .......... .......... .......... .......... 1.29M  1250K .......... .......... .......... .......... .......... 1.07M  1300K .......... .......... .......... .......... .......... 12.0M  1350K .......... .......... .......... .......... .......... 1.29M  1400K .......... .......... .......... .......... .......... 1.08M  1450K .......... .......... .......... .......... .......... 11.9M  1500K .......... .......... .......... .......... .......... 1.29M  1550K .......... .......... .......... .......... .......... 1.07M  1600K .......... .......... .......... .......... .......... 13.2M  1650K .......... .......... .......... .......... .......... 52.4M  1700K .......... .......... .......... .......... ..........  600K  1750K .......... .......... .......... .......... .......... 17.3M  1800K .......... .......... .......... .......... ..........  148M  1850K .......... .......... .......... .......... .......... 1.29M  1900K .......... .......... .......... .......... .......... 1.06M  1950K .......... .......... .......... .......... .......... 16.2M  2000K .......... .......... .......... .......... .......... 46.8M  2050K .......... .......... .......... .......... .......... 1.31M  2100K .......... .......... .......... .......... .......... 1.05M  2150K .......... .......... .......... .......... .......... 22.2M  2200K .......... .......... .......... .......... ..........  102M  2250K .......... .......... .......... .......... .......... 1.28M  2300K .......... .......... .......... .......... .......... 1.09M  2350K .......... .......... .......... .......... .......... 18.6M  2400K .......... .......... .......... .......... .......... 32.2M  2450K .......... .......... .......... .......... .......... 28.6M  2500K .......... .......... .......... .......... .......... 1.32M  2550K .......... .......... .......... .......... .......... 1.05M  2600K .......... .......... .......... .......... .......... 27.9M  2650K .......... .......... .......... .......... .......... 61.4M  2700K .......... .......... .......... .......... .......... 1.29M  2750K .......... .......... .......... .......... .......... 52.9M  2800K .......... .......... .......... .......... .......... 1.06M  2850K .......... .......... .......... .......... .......... 28.2M  2900K .......... .......... .......... .......... .......... 99.6M  2950K .......... .......... .......... .......... .......... 36.5M  3000K .......... .......... .......... .......... .......... 1.32M  3050K .......... .......... .......... .......... .......... 1.07M  3100K .......... .......... .......... .......... .......... 34.1M  3150K .......... .......... .......... .......... .......... 23.3M  3200K .......... .......... .......... .......... .......... 99.2M  3250K .......... .......... .......... .......... .......... 54.2M  3300K .......... .......... .......... .......... .......... 1.33M  3350K .......... .......... .......... .......... .......... 1.07M  3400K .......... .......... .......... .......... .......... 40.4M  3450K .......... .......... .......... .......... .......... 23.5M  3500K .......... .......... .......... .......... .......... 91.8M  3550K .......... .......... .......... .......... .......... 55.0M  3600K .......... .......... .......... .......... .......... 1.33M  3650K .......... .......... .......... .......... .......... 1.07M  3700K .......... .......... .......... .......... .......... 36.6M  3750K .......... .......... .......... .......... .......... 41.9M  3800K .......... .......... .......... .......... .......... 33.6M  3850K .......... .......... .......... .......... ..........  146M  3900K .......... .......... .......... .......... .......... 54.9M  3950K .......... .......... .......... .......... .......... 1.33M  4000K .......... .......... .......... .......... .......... 1.06M  4050K .......... .......... .......... .......... .......... 51.5M  4100K .......... .......... .......... .......... ..........  101M  4150K .......... .......... .......... .......... .......... 26.3M  4200K .......... .......... .......... .......... ..........  104M  4250K .......... .......... .......... .......... ..........  110M  4300K .......... .......... .......... .......... .......... 1.32M  4350K .......... .......... .......... .......... .......... 71.1M  4400K .......... .......... .......... .......... .......... 1.06M  4450K .......... .......... .......... .......... .......... 61.8M  4500K .......... .......... .......... .......... ..........  110M  4550K .......... .......... .......... .......... .......... 28.7M  4600K .......... .......... .......... .......... ..........  130M  4650K .......... .......... .......... .......... ..........  142M  4700K .......... .......... .......... .......... .......... 1.32M  4750K .......... .......... .......... .......... .......... 78.2M  4800K .......... .......... .......... .......... .......... 1.07M  4850K .......... .......... .......... .......... .......... 54.3M  4900K .......... .......... .......... .......... .......... 76.3M  4950K .......... .......... .......... .......... .......... 31.6M  5000K .......... .......... .......... .......... ..........  147M  5050K .......... .......... .......... .......... ..........  131M  5100K .......... .......... .......... .......... .......... 53.5M  5150K .......... .......... .......... .......... .......... 1.34M  5200K .......... .......... .......... .......... .......... 1.16M  5250K .......... .......... .......... .......... .......... 13.0M  5300K .......... .......... .......... .......... .......... 37.5M  5350K .......... .......... .......... .......... .......... 81.6M  5400K .......... .......... .......... .......... .......... 39.0M  5450K .......... .......... .......... .......... .......... 70.0M  5500K .......... .......... .......... .......... ..........  132M  5550K .......... .......... .......... .......... ..........  164M  5600K .......... .......... .......... .......... .......... 1.31M  5650K .......... .......... .......... .......... .......... 77.1M  5700K .......... .......... .......... .......... .......... 1.09M  5750K .......... .......... .......... .......... .......... 93.0M  5800K .......... .......... .......... .......... .......... 49.8M  5850K .......... .......... .......... .......... .......... 41.1M  5900K .......... .......... .......... .......... .......... 59.0M  5950K .......... .......... .......... .......... .......... 82.1M  6000K .......... .......... .......... .......... ..........  112M  6050K .......... .......... .......... .......... ..........  138M  6100K .......... .......... .......... .......... .......... 1.33M  6150K .......... .......... .......... .......... ..........  110M  6200K .......... .......... .......... .......... .......... 1.06M  6250K .......... .......... .......... .......... .......... 85.9M  6300K .......... .......... .......... .......... ..........  104M  6350K .......... .......... .......... .......... .......... 68.5M  6400K .......... .......... .......... .......... .......... 75.0M  6450K .......... .......... .......... .......... .......... 76.5M  6500K .......... .......... .......... .......... ..........  141M  6550K .......... .......... .......... .......... ..........  174M  6600K .......... .......... .......... .......... .......... 84.0M  6650K .......... .......... .......... .......... .......... 1.32M  6700K .......... .......... .......... .......... ..........  101M  6750K .......... .......... .......... .......... .......... 1.07M  6800K .......... .......... .......... .......... ..........  138M  6850K .......... .......... .......... .......... ..........  160M  6900K .......... .......... .......... .......... .......... 36.8M  6950K .......... .......... .......... .......... .......... 50.9M  7000K .......... .......... .......... .......... .......... 87.7M  7050K .......... .......... .......... .......... ..........  135M  7100K .......... .......... .......... .......... ..........  162M  7150K .......... .......... .......... .......... .......... 40.9M  7200K .......... .......... .......... .......... .......... 1.36M  7250K .......... .......... .......... .......... ..........  159M  7300K .......... .......... .......... .......... .......... 1.17M  7350K .......... .......... .......... .......... .......... 10.5M  7400K .......... .......... .......... .......... ..........  108M  7450K .......... .......... .......... .......... .......... 77.4M  7500K .......... .......... .......... .......... .......... 76.2M  7550K .......... .......... .......... .......... .......... 64.6M  7600K .......... .......... .......... .......... .......... 4.71M  7650K .......... .......... .......... .......... .......... 4.24M  7700K .......... .......... .......... .......... .......... 6.82M  7750K .......... .......... .......... .......... .......... 4.53M  7800K .......... .......... .......... .......... .......... 4.11M  7850K .......... .......... .......... .......... .......... 4.25M  7900K .......... .......... .......... .......... .......... 2.29M  7950K .......... .......... .......... .......... .......... 63.5M  8000K .......... .......... .......... .......... .......... 5.97M  8050K .......... .......... .......... .......... .......... 6.71M  8100K .......... .......... .......... .......... .......... 5.01M  8150K .......... .......... .......... .......... .......... 4.16M  8200K .......... .......... .......... .......... .......... 4.09M  8250K .......... .......... .......... .......... .......... 8.28M  8300K .......... .......... .......... .......... .......... 4.23M  8350K .......... .......... .......... .......... .......... 3.92M  8400K .......... .......... .......... .......... .......... 4.22M  8450K .......... .......... .......... .......... .......... 7.78M  8500K .......... .......... .......... .......... .......... 4.30M  8550K .......... .......... .......... .......... .......... 4.05M  8600K .......... .......... .......... .......... .......... 3.81M  8650K .......... .......... .......... .......... .......... 8.86M  8700K .......... .......... .......... .......... .......... 4.08M  8750K .......... .......... .......... .......... .......... 4.33M  8800K .......... .......... .......... .......... .......... 3.65M  8850K .......... .......... .......... .......... .......... 7.55M  8900K .......... .......... .......... .......... .......... 3.92M  8950K .......... .......... .......... .......... .......... 4.11M  9000K .......... .......... .......... .......... .......... 3.94M  9050K .......... .......... .......... .......... .......... 7.69M  9100K .......... .......... .......... .......... .......... 4.01M  9150K .......... .......... .......... .......... .......... 4.08M  9200K .......... .......... .......... .......... .......... 4.17M  9250K .......... .......... .......... .......... .......... 7.04M  9300K .......... .......... .......... .......... .......... 4.25M  9350K .......... .......... .......... .......... .......... 4.24M  9400K .......... .......... .......... .......... .......... 4.06M  9450K .......... .......... .......... .......... .......... 4.03M  9500K .......... .......... .......... .......... .......... 7.20M  9550K .......... .......... .......... .......... .......... 4.20M  9600K .......... .......... .......... .......... .......... 4.04M  9650K .......... .......... .......... .......... .......... 4.19M  9700K .......... .......... .......... .......... .......... 7.79M  9750K .......... .......... .......... .......... .......... 4.18M  9800K .......... .......... .......... .......... .......... 4.14M  9850K .......... .......... .......... .......... .......... 4.15M  9900K .......... .......... .......... .......... .......... 7.58M  9950K .......... .......... .......... .......... .......... 4.22M 10000K .......... .......... .......... .......... .......... 4.00M 10050K .......... .......... .......... .......... .......... 4.13M 10100K .......... .......... .......... .......... .......... 3.47M 10150K .......... .......... .......... .......... .......... 10.8M 10200K .......... .......... .......... .......... .......... 4.16M 10250K .......... .......... .......... .......... .......... 3.81M 10300K .......... .......... .......... .......... .......... 4.21M 10350K .......... .......... .......... .......... .......... 8.68M 10400K .......... .......... .......... .......... .......... 3.70M 10450K .......... .......... .......... .......... .......... 4.56M 10500K .......... .......... .......... .......... .......... 4.04M 10550K .......... .......... .......... .......... .......... 7.59M 10600K .......... .......... .......... .......... .......... 4.28M 10650K .......... .......... .......... .......... .......... 4.30M 10700K .......... .......... .......... .......... .......... 3.93M 10750K .......... .......... .......... .......... .......... 7.97M 10800K .......... .......... .......... .......... .......... 3.75M 10850K .......... .......... .......... .......... .......... 3.60M 10900K .......... .......... .......... .......... .......... 3.78M 10950K .......... .......... .......... .......... .......... 9.15M 11000K .......... .......... .......... .......... .......... 4.05M 11050K .......... .......... .......... .......... .......... 3.95M 11100K .......... .......... .......... .......... .......... 4.02M 11150K .......... .......... .......... .......... .......... 8.28M 11200K .......... .......... .......... .......... .......... 4.19M 11250K .......... .......... .......... .......... .......... 4.18M 11300K .......... .......... .......... .......... .......... 3.20M 11350K .......... .......... .......... .......... .......... 4.97M 11400K .......... .......... .......... .......... .......... 7.01M 11450K .......... .......... .......... .......... .......... 4.42M 11500K .......... .......... .......... .......... .......... 3.67M 11550K .......... .......... .......... .......... .................. 79.8M 50150K .......... .......... .......... .......... ..........  110M 50200K .......... .......... .......... .......... .......... 5.04M 50250K .......... .......... .......... .......... .......... 8.07M 50300K .......... .......... .......... .......... .......... 4.07M 50350K .......... .......... .......... .......... .......... 2.99M 50400K .......... .......... .......... .......... .......... 8.55M 50450K .......... .......... .......... .......... .......... 10.3M 50500K .......... .......... .......... .......... .......... 3.00M 50550K .......... .......... .......... .......... .......... 4.01M 50600K .......... .......... .......... .......... .......... 9.11M 50650K .......... .......... .......... .......... .......... 9.82M 50700K .......... .......... .......... .......... .......... 4.55M 50750K .......... .......... .......... .......... .......... 3.96M 50800K .......... .......... .......... .......... .......... 4.63M 50850K .......... .......... .......... .......... .......... 8.62M 50900K .......... .......... .......... .......... .......... 4.48M 50950K .......... .......... .......... .......... .......... 4.51M 51000K .......... .......... .......... .......... .......... 3.87M 51050K .......... .......... .......... .......... .......... 9.68M 51100K .......... .......... .......... .......... .......... 3.90M 51150K .......... .......... .......... .......... .......... 4.98M 51200K .......... .......... .......... .......... .......... 4.73M 51250K .......... .......... .......... .......... .......... 4.62M 51300K .......... .......... .......... .......... .......... 8.03M 51350K .......... .......... .......... .......... .......... 3.99M 51400K .......... .......... .......... .......... .......... 5.19M 51450K .......... .......... .......... .......... .......... 4.02M 51500K .......... .......... .......... .......... .......... 3.10M 51550K .......... .......... .......... .......... .......... 39.3M 51600K .......... .......... .......... .......... .......... 4.65M 51650K .......... .......... .......... .......... .......... 4.63M 51700K .......... .......... .......... .......... .......... 4.43M 51750K .......... .......... .......... .......... .......... 7.57M 51800K .......... .......... .......... .......... .......... 3.69M 51850K .......... .......... .......... .......... .......... 4.18M 51900K .......... .......... .......... .......... .......... 6.73M 51950K .......... .......... .......... .......... .......... 8.42M 52000K .......... .......... .......... .......... .......... 4.27M 52050K .......... .......... .......... .......... .......... 4.69M 52100K .......... .......... .......... .......... .......... 3.46M 52150K .......... .......... .......... .......... .......... 6.19M 52200K .......... .......... .......... .......... .......... 3.45M 52250K .......... .......... .......... .......... .......... 3.45M 52300K .......... .......... .......... .......... .......... 4.23M 52350K .......... .......... .......... .......... .......... 7.91M 52400K .......... .......... .......... .......... .......... 4.49M 52450K .......... .......... .......... .......... .......... 4.45M 52500K .......... .......... .......... .......... .......... 4.62M 52550K .......... .......... .......... .......... .......... 6.16M 52600K .......... .......... .......... .......... .......... 5.44M 52650K .......... .......... .......... .......... .......... 4.63M 52700K .......... .......... .......... .......... .......... 4.49M 52750K .......... .......... .......... .......... .......... 8.43M 52800K .......... .......... .......... .......... .......... 4.03M 52850K .......... .......... .......... .......... .......... 4.84M 52900K .......... .......... .......... .......... .......... 4.52M 52950K .......... .......... .......... .......... .......... 8.73M 53000K .......... .......... .......... .......... .......... 4.37M 53050K .......... .......... .......... .......... .......... 4.33M 53100K .......... .......... .......... .......... .......... 4.30M 53150K .......... .......... .......... .......... .......... 8.28M 53200K .......... .......... .......... .......... .......... 4.47M 53250K .......... .......... .......... .......... .......... 4.57M 53300K .......... .......... .......... .......... .......... 4.51M 53350K .......... .......... .......... .......... .......... 7.81M 53400K .......... .......... .......... .......... .......... 4.74M 53450K .......... .......... .......... .......... .......... 4.34M 53500K .......... .......... .......... .......... .......... 4.75M 53550K .......... .......... .......... .......... .......... 8.44M 53600K .......... .......... .......... .......... .......... 4.50M 53650K .......... .......... .......... .......... .......... 4.18M 53700K .......... .......... .......... .......... .......... 4.54M 53750K .......... .......... .......... .......... .......... 7.08M 53800K .......... .......... .......... .......... .......... 4.39M 53850K .......... .......... .......... .......... .......... 4.02M 53900K .......... .......... .......... .......... .......... 5.29M 53950K .......... .......... .......... .......... .......... 4.45M 54000K .......... .......... .......... .......... .......... 8.13M 54050K .......... .......... .......... .......... .......... 4.39M 54100K .......... .......... .......... .......... .......... 4.22M 54150K .......... .......... .......... .......... .......... 4.03M 54200K .......... .......... .......... .......... .......... 9.65M 54250K .......... .......... .......... .......... .......... 4.26M 54300K .......... .......... .......... .......... .......... 4.69M 54350K .......... .......... .......... .......... .......... 4.63M 54400K .......... .......... .......... .......... .......... 7.60M 54450K .......... .......... .......... .......... .......... 4.20M 54500K .......... .......... .......... .......... .......... 4.50M 54550K .......... .......... .......... .......... .......... 4.57M 54600K .......... .......... .......... .......... .......... 8.15M 54650K .......... .......... .......... .......... .......... 4.18M 54700K .......... .......... .......... .......... .......... 4.57M 54750K .......... .......... .......... .......... .......... 4.47M 54800K .......... .......... .......... .......... .......... 8.17M 54850K .......... .......... .......... .......... .......... 4.46M 54900K .......... .......... .......... .......... .......... 4.24M 54950K .......... .......... .......... .......... .......... 4.50M 55000K .......... .......... .......... .......... .......... 7.98M 55050K .......... .......... .......... .......... .......... 4.54M 55100K .......... .......... .......... .......... .......... 4.46M 55150K .......... .......... .......... .......... .......... 4.54M 55200K .......... .......... .......... .......... .......... 4.22M 55250K .......... .......... .......... .......... .......... 8.71M 55300K .......... .......... .......... .......... .......... 4.47M 55350K .......... .......... .......... .......... .......... 4.31M 55400K .......... .......... .......... .......... .......... 4.53M 55450K .......... .......... .......... .......... .......... 7.53M 55500K .......... .......... .......... .......... .......... 4.57M 55550K .......... .......... .......... .......... .......... 3.73M 55600K .......... .......... .......... .......... .......... 5.67M 55650K .......... .......... .......... .......... .......... 6.23M 55700K .......... .......... .......... .......... .......... 4.81M 55750K .......... .......... .......... .......... .......... 3.53M 55800K .......... .......... .......... .......... .......... 4.69M 55850K .......... .......... .......... .......... .......... 7.51M 55900K .......... .......... .......... .......... .......... 3.96M 55950K .......... .......... .......... .......... ..........  541K 56000K .......... .......... .......... .......... .......... 68.8M 56050K .......... .......... .......... .......... ..........  109M 56100K .......... .......... .......... .......... .......... 99.9M 56150K .......... .......... .......... .......... ..........  129M 56200K .......... .......... .......... .......... ..........  130M 56250K .......... .......... .......... .......... ..........  137M 56300K .......... .......... .......... .......... ..........  157M 56350K .......... .......... .......... .......... ..........  174M 56400K .......... .......... .......... .......... .......... 5.37M 56450K .......... .......... .......... .......... .......... 4.18M 56500K .......... .......... .......... .......... .......... 3.39M 56550K .......... .......... .......... .......... .......... 4.12M 56600K .......... .......... .......... .......... .......... 2.73M 56650K .......... .......... .......... .......... .......... 3.42M 56700K .......... .......... .......... .......... .......... 4.45M 56750K .......... .......... .......... .......... .......... 4.28M 56800K .......... .......... .......... .......... .......... 3.21M 56850K .......... .......... .......... .......... .......... 4.50M 56900K .......... .......... .......... .......... .......... 2.84M 56950K .......... .......... .......... .......... .......... 3.92M 57000K .......... .......... .......... .......... .......... 5.19M 57050K .......... .......... .......... .......... .......... 2.79M 57100K .......... .......... .......... .......... .......... 3.40M 57150K .......... .......... .......... .......... .......... 4.19M 57200K .......... .......... .......... .......... .......... 4.09M 57250K .......... .......... .......... .......... .......... 4.54M 57300K .......... .......... .......... .......... .......... 3.13M 57350K .......... .......... .......... .......... .......... 3.30M 57400K .......... .......... .......... .......... .......... 2.58M 57450K .......... .......... .......... .......... .......... 12.5M 57500K .......... .......... .......... .......... .......... 3.02M 57550K .......... .......... .......... .......... .......... 4.22M 57600K .......... .......... .......... .......... .......... 2.31M 57650K .......... .......... .......... .......... .......... 7.68M 57700K .......... .......... .......... .......... .......... 4.45M 57750K .......... .......... .......... .......... .......... 2.76M 57800K .......... .......... .......... .......... .......... 3.31M 57850K .......... .......... .......... .......... .......... 8.35M 57900K .......... .......... .......... .......... .......... 3.10M 57950K .......... .......... .......... .......... .......... 2.91M 58000K .......... .......... .......... .......... .......... 8.77M 58050K .......... .......... .......... .......... .......... 2.71M 58100K .......... .......... .......... .......... .......... 4.62M 58150K .......... .......... .......... .......... .......... 3.29M 58200K .......... .......... .......... .......... .......... 4.09M 58250K .......... .......... .......... .......... .......... 2.85M 58300K .......... .......... .......... .......... .......... 5.15M 58350K .......... .......... .......... .......... .......... 3.76M 58400K .......... .......... .......... .......... .......... 4.77M 58450K .......... .......... .......... .......... .......... 3.49M 58500K .......... .......... .......... .......... .......... 4.24M 58550K .......... .......... .......... .......... .......... 4.00M 58600K .......... .......... .......... .......... .......... 2.76M 58650K .......... .......... .......... .......... .......... 3.67M 58700K .......... .......... .......... .......... .......... 4.33M 58750K .......... .......... .......... .......... .......... 4.24M 58800K .......... .......... .......... .......... .......... 4.98M 58850K .......... .......... .......... .......... .......... 4.13M 58900K .......... .......... .......... .......... .......... 3.98M 58950K .......... .......... .......... .......... .......... 2.94M 59000K .......... .......... .......... .......... .......... 3.39M 59050K .......... .......... .......... .......... .......... 4.25M 59100K .......... .......... .......... .......... .......... 4.40M 59150K .......... .......... .......... .......... .......... 3.42M 59200K .......... .......... .......... .......... .......... 7.01M 59250K .......... .......... .......... .......... .......... 2.81M 59300K .......... .......... .......... .......... .......... 4.08M 59350K .......... .......... .......... .......... .......... 3.43M 59400K .......... .......... .......... .......... .......... 4.22M 59450K .......... .......... .......... .......... .......... 3.01M 59500K .......... .......... .......... .......... .......... 5.47M 59550K .......... .......... .......... .......... .......... 6.96M 59600K .......... .......... .......... .......... .......... 2.83M 59650K .......... .......... .......... .......... .......... 3.91M 59700K .......... .......... .......... .......... .......... 3.55M 59750K .......... .......... .......... .......... .......... 4.27M 59800K .......... .......... .......... .......... .......... 3.00M 59850K .......... .......... .......... .......... .......... 4.90M 59900K .......... .......... .......... .......... .......... 7.60M 59950K .......... .......... .......... .......... .......... 2.90M 60000K .......... .......... .......... .......... .......... 3.85M 60050K .......... .......... .......... .......... .......... 3.59M 60100K .......... .......... .......... .......... .......... 5.74M 60150K .......... .......... .......... .......... .......... 2.57M 60200K .......... .......... .......... .......... .......... 4.82M 60250K .......... .......... .......... .......... .......... 7.64M 60300K .......... .......... .......... .......... .......... 2.90M 60350K .......... .......... .......... .......... .......... 3.95M 60400K .......... .......... .......... .......... .......... 5.20M 60450K .......... .......... .......... .......... .......... 3.61M 60500K .......... .......... .......... .......... .......... 3.70M 60550K .......... .......... .......... .......... .......... 3.13M 60600K .......... .......... .......... .......... .......... 7.66M 60650K .......... .........                                   92.4M=14s2024-01-22 19:02:47 (4.09 MB/s) - 'exp_quant.zip' saved [62125370]--2024-01-22 19:02:50--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  191K 4s    50K .......... .......... .......... .......... .......... 12%  193K 4s   100K .......... .......... .......... .......... .......... 18%  577K 3s   150K .......... .......... .......... .......... .......... 24%  575K 2s   200K .......... .......... .......... .......... .......... 30%  580K 2s   250K .......... .......... .......... .......... .......... 36%  578K 2s   300K .......... .......... .......... .......... .......... 42%  579K 1s   350K .......... .......... .......... .......... .......... 48%  579K 1s   400K .......... .......... .......... .......... .......... 54%  579K 1s   450K .......... .......... .......... .......... .......... 60% 1.18M 1s   500K .......... .......... .......... .......... .......... 66% 1.08M 1s   550K .......... .......... .......... .......... .......... 72%  571K 0s   600K .......... .......... .......... .......... .......... 78% 22.6M 0s   650K .......... .......... .......... .......... .......... 84%  591K 0s   700K .......... .......... .......... .......... .......... 90% 18.6M 0s   750K .......... .......... .......... .......... .......... 96%  596K 0s   800K .......... .......... .......                         100%  144M=1.5s2024-01-22 19:02:52 (562 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="46.63693857192993">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-22 18:53:20.911] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-22 18:53:20.911] [jLog] [info] building indexout : ./index[2024-01-22 18:53:20.912] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-22 18:53:20.918] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-22 18:53:20.918] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-22 18:53:20.930] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-22 18:53:20.931] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-22 18:53:20.980] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-22 18:53:20.980] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 640.51 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 463.52 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-22 18:53:20.981] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-22 18:53:20.981] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-22 18:53:20.982] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-22 18:53:20.982] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-22 18:53:20.982] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-22 18:53:20.982] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-22 18:53:20.982] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-22 18:53:20.989] [puff::index::jointLog] [info] # segments = 23[2024-01-22 18:53:20.989] [puff::index::jointLog] [info] total length = 19592[2024-01-22 18:53:20.989] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-22 18:53:20.996] [puff::index::jointLog] [info] positional integer width = 15[2024-01-22 18:53:20.996] [puff::index::jointLog] [info] seqSize = 19592[2024-01-22 18:53:20.996] [puff::index::jointLog] [info] rankSize = 19592[2024-01-22 18:53:20.996] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-22 18:53:20.996] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-22 18:53:21.047] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-22 18:53:21.047] [puff::index::jointLog] [info] chunk size = 9796[2024-01-22 18:53:21.047] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-22 18:53:21.047] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-22 18:53:21.048] [puff::index::jointLog] [info] finished populating pos vector[2024-01-22 18:53:21.048] [puff::index::jointLog] [info] writing index components[2024-01-22 18:53:21.058] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-22 18:53:21.061] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-22 18:53:21.692] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-22 18:53:21.692] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-22 18:53:21.692] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-22 18:53:21.692] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-22 18:53:21.692] [jointLog] [info] parsing read library format[2024-01-22 18:53:21.692] [jointLog] [info] There is 1 library.[2024-01-22 18:53:21.811] [jointLog] [info] Loading pufferfish index[2024-01-22 18:53:21.812] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading contig table | Time = 480.36 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.025 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 270.12 us----------------------------------------------------------------------------------| Loading mphf table | Time = 428.45 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 726.53 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 671.26 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 895.05 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 717.46 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 366.3 us-----------------------------------------[2024-01-22 18:53:21.819] [jointLog] [info] done[2024-01-22 18:53:21.819] [jointLog] [info] Index contained 15 targets[2024-01-22 18:53:21.819] [jointLog] [info] Number of decoys : 0[2024-01-22 18:53:21.889] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-22 18:53:21.889] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-22 18:53:21.890] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-22 18:53:21.890] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-22 18:53:21.890] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-22 18:53:21.890] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-22 18:53:21.891] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-22 18:53:21.891] [jointLog] [info] Mapping rate = 100%[2024-01-22 18:53:21.891] [jointLog] [info] finished quantifyLibrary()[2024-01-22 18:53:21.894] [jointLog] [info] Starting optimizer[2024-01-22 18:53:21.895] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-22 18:53:21.895] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-01-22 18:53:21.896] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-22 18:53:21.897] [jointLog] [info] Finished optimizer[2024-01-22 18:53:21.897] [jointLog] [info] writing output [2024-01-22 18:53:21.901] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="29.326336145401">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-22 18:53:53.171] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-22 18:53:53.171] [jLog] [info] building indexout : ./index[2024-01-22 18:53:53.171] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-22 18:53:53.177] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-22 18:53:53.177] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-22 18:53:53.186] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-22 18:53:53.188] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-22 18:53:53.241] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-22 18:53:53.241] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 757.08 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 537.93 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-22 18:53:53.242] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-22 18:53:53.242] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-22 18:53:53.243] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-22 18:53:53.243] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-22 18:53:53.243] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-22 18:53:53.243] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-22 18:53:53.243] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-22 18:53:53.250] [puff::index::jointLog] [info] # segments = 23[2024-01-22 18:53:53.250] [puff::index::jointLog] [info] total length = 19592[2024-01-22 18:53:53.250] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-22 18:53:53.257] [puff::index::jointLog] [info] positional integer width = 15[2024-01-22 18:53:53.257] [puff::index::jointLog] [info] seqSize = 19592[2024-01-22 18:53:53.257] [puff::index::jointLog] [info] rankSize = 19592[2024-01-22 18:53:53.257] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-22 18:53:53.257] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-22 18:53:53.330] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-22 18:53:53.330] [puff::index::jointLog] [info] chunk size = 9796[2024-01-22 18:53:53.330] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-22 18:53:53.330] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-22 18:53:53.331] [puff::index::jointLog] [info] finished populating pos vector[2024-01-22 18:53:53.331] [puff::index::jointLog] [info] writing index components[2024-01-22 18:53:53.342] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-22 18:53:53.345] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-22 18:53:53.431] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-22 18:53:53.431] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-22 18:53:53.431] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-22 18:53:53.431] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-22 18:53:53.431] [jointLog] [info] parsing read library format[2024-01-22 18:53:53.431] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 406.3 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 816.14 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 326 us----------------------------------------------------------------------------------| Loading mphf table | Time = 430.75 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 534.87 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 565.13 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 957.77 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 546.17 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 251.43 us-----------------------------------------[2024-01-22 18:53:53.533] [jointLog] [info] Loading pufferfish index[2024-01-22 18:53:53.534] [jointLog] [info] Loading dense pufferfish index.[2024-01-22 18:53:53.540] [jointLog] [info] done[2024-01-22 18:53:53.540] [jointLog] [info] Index contained 15 targets[2024-01-22 18:53:53.540] [jointLog] [info] Number of decoys : 0[2024-01-22 18:53:53.607] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-22 18:53:53.607] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-22 18:53:53.609] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-22 18:53:53.609] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-22 18:53:53.609] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-22 18:53:53.609] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-22 18:53:53.609] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-22 18:53:53.609] [jointLog] [info] Mapping rate = 100%[2024-01-22 18:53:53.609] [jointLog] [info] finished quantifyLibrary()[2024-01-22 18:53:53.612] [jointLog] [info] Starting optimizer[2024-01-22 18:53:53.613] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-22 18:53:53.613] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-01-22 18:53:53.614] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-22 18:53:53.614] [jointLog] [info] Finished optimizer[2024-01-22 18:53:53.614] [jointLog] [info] writing output [2024-01-22 18:53:53.617] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="30.905462980270386">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-22 18:54:23.938] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-22 18:54:23.938] [jLog] [info] building indexout : ./index[2024-01-22 18:54:23.939] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-22 18:54:23.945] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-22 18:54:23.945] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-22 18:54:23.954] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-22 18:54:23.955] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-22 18:54:24.003] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-22 18:54:24.003] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 604.81 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 483.38 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-22 18:54:24.004] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-22 18:54:24.004] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-22 18:54:24.005] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-22 18:54:24.005] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-22 18:54:24.005] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-22 18:54:24.005] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-22 18:54:24.005] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-22 18:54:24.012] [puff::index::jointLog] [info] # segments = 23[2024-01-22 18:54:24.012] [puff::index::jointLog] [info] total length = 19592[2024-01-22 18:54:24.012] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-22 18:54:24.020] [puff::index::jointLog] [info] positional integer width = 15[2024-01-22 18:54:24.020] [puff::index::jointLog] [info] seqSize = 19592[2024-01-22 18:54:24.020] [puff::index::jointLog] [info] rankSize = 19592[2024-01-22 18:54:24.020] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-22 18:54:24.020] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-22 18:54:24.076] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-22 18:54:24.076] [puff::index::jointLog] [info] chunk size = 9796[2024-01-22 18:54:24.076] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-22 18:54:24.076] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-22 18:54:24.078] [puff::index::jointLog] [info] finished populating pos vector[2024-01-22 18:54:24.078] [puff::index::jointLog] [info] writing index components[2024-01-22 18:54:24.087] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-22 18:54:24.091] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-22 18:54:24.175] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-22 18:54:24.175] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-22 18:54:24.175] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-22 18:54:24.175] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-22 18:54:24.175] [jointLog] [info] parsing read library format[2024-01-22 18:54:24.175] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 398.79 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 685.13 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 298.25 us----------------------------------------------------------------------------------| Loading mphf table | Time = 430 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 582.94 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 523.02 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 887.3 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 628.76 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 275.96 us-----------------------------------------[2024-01-22 18:54:24.276] [jointLog] [info] Loading pufferfish index[2024-01-22 18:54:24.277] [jointLog] [info] Loading dense pufferfish index.[2024-01-22 18:54:24.283] [jointLog] [info] done[2024-01-22 18:54:24.283] [jointLog] [info] Index contained 15 targets[2024-01-22 18:54:24.283] [jointLog] [info] Number of decoys : 0[2024-01-22 18:54:24.352] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-22 18:54:24.352] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-22 18:54:24.353] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-22 18:54:24.353] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-22 18:54:24.353] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-22 18:54:24.353] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-22 18:54:24.354] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-22 18:54:24.354] [jointLog] [info] Mapping rate = 100%[2024-01-22 18:54:24.354] [jointLog] [info] finished quantifyLibrary()[2024-01-22 18:54:24.357] [jointLog] [info] Starting optimizer[2024-01-22 18:54:24.357] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-22 18:54:24.357] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-01-22 18:54:24.358] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-22 18:54:24.358] [jointLog] [info] Finished optimizer[2024-01-22 18:54:24.358] [jointLog] [info] writing output [2024-01-22 18:54:24.362] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="32.874809980392456">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "132ee31c7bb8d63f",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "403f786476e4edb3",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/7/d/f/dataset_7df859c0-8532-425e-b0ce-b359812e7b31.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-01-22T18:54:55.224991",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rlsch",  "galaxy_version": "23.1",  "history_id": "5ddd384e69604877",  "id": "cdb3645b2ace1d19",  "inputs": {   "quant_type|afile": {    "id": "132ee31c7bb8d63f",    "src": "hda",    "uuid": "646009bb-a7be-4e31-bb08-f9ee396b7507"   },   "quant_type|transcript": {    "id": "403f786476e4edb3",    "src": "hda",    "uuid": "7df859c0-8532-425e-b0ce-b359812e7b31"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1705949698.0000000",    "title": "Job End Time",    "value": "2024-01-22 18:54:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1705949696.0000000",    "title": "Job Start Time",    "value": "2024-01-22 18:54:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "815b30094e04e2aa",    "src": "hda",    "uuid": "0349ee1d-56e9-4336-b46e-bb484a1b6746"   },   "postSample": {    "id": "962ba8abbd47c4ea",    "src": "hda",    "uuid": "386ecf53-1ab9-4ddf-933c-98453a4051c5"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 162, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/7/d/f/dataset_7df859c0-8532-425e-b0ce-b359812e7b31.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-01-22 18:54:56.780] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-01-22 18:54:56.780] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-01-22 18:54:56.781] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat\", fasta = \"/galaxy/server/database/objects/7/d/f/dataset_7df859c0-8532-425e-b0ce-b359812e7b31.dat\" . . .done\n[2024-01-22 18:54:57.320] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-01-22 18:54:57.552] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-01-22 18:54:57.560] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-01-22 18:54:57.560] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-01-22 18:54:57.560] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-01-22 18:54:57.561] [jointLog] [info] starting optimizer\n[2024-01-22 18:54:57.562] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-01-22 18:54:57.562] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-01-22 18:54:57.563] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-01-22 18:54:57.563] [jointLog] [info] finished optimizer\n[2024-01-22 18:54:57.563] [jointLog] [info] writing output\n[2024-01-22 18:54:57.566] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/7/d/f/dataset_7df859c0-8532-425e-b0ce-b359812e7b31.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-01-22 18:54:56.780] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-01-22 18:54:56.780] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-01-22 18:54:56.781] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat\", fasta = \"/galaxy/server/database/objects/7/d/f/dataset_7df859c0-8532-425e-b0ce-b359812e7b31.dat\" . . .done\n[2024-01-22 18:54:57.320] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-01-22 18:54:57.552] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-01-22 18:54:57.560] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-01-22 18:54:57.560] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-01-22 18:54:57.560] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-01-22 18:54:57.561] [jointLog] [info] starting optimizer\n[2024-01-22 18:54:57.562] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-01-22 18:54:57.562] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-01-22 18:54:57.563] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-01-22 18:54:57.563] [jointLog] [info] finished optimizer\n[2024-01-22 18:54:57.563] [jointLog] [info] writing output\n[2024-01-22 18:54:57.566] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-01-22T18:55:07.832786",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_wicae0ty.sam v. /tmp/history_bam_converted_to_sam_nvmn_5j5.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -5014,8 +5015,8 @@\n 1043:NM_174914:1249:169\t419\tNM_174914\t1250\t1\t50M\t=\t1369\t169\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6249:NR_031764:1249:146\t355\tNM_174914\t1250\t1\t50M\t=\t1346\t146\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 1366:NM_174914:1104:195\t339\tNM_174914\t1250\t1\t50M\t=\t1105\t-195\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n+6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 2822:NR_031764:1132:169\t403\tNM_174914\t1252\t1\t50M\t=\t1133\t-169\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n-6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 6516:NM_174914:1111:191\t403\tNM_174914\t1253\t1\t50M\t=\t1112\t-191\tGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 7029:NM_174914:1253:199\t419\tNM_174914\t1254\t1\t50M\t=\t1403\t199\tAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6563:NM_174914:1254:180\t419\tNM_174914\t1255\t1\t50M\t=\t1385\t180\tACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTGT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n@@ -15011,11 +15012,11 @@\n 1710:NM_022658:195:168\t83\tNM_022658\t314\t1\t50M\t=\t196\t-168\tGGCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6524:NM_022658:179:184\t83\tNM_022658\t314\t1\t50M\t=\t180\t-184\tGGCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7202:NM_022658:176:187\t83\tNM_022658\t314\t1\t50M\t=\t177\t-187\tGGCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+3865:NM_022658:315:183\t99\tNM_022658\t316\t1\t50M\t=\t449\t183\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 263:NM_022658:315:176\t163\tNM_022658\t316\t1\t50M\t=\t442\t176\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 794:NM_022658:315:158\t163\tNM_022658\t316\t1\t50M\t=\t424\t158\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3036:NM_022658:315:197\t163\tNM_022658\t316\t1\t50M\t=\t463\t197\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3258:NM_022658:315:184\t163\tNM_022658\t316\t1\t50M\t=\t450\t184\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-3865:NM_022658:315:183\t99\tNM_022658\t316\t1\t50M\t=\t449\t183\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1707:NM_022658:181:184\t83\tNM_022658\t316\t1\t50M\t=\t182\t-184\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4621:NM_022658:167:198\t147\tNM_022658\t316\t1\t50M\t=\t168\t-198\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5235:NM_022658:202:163\t147\tNM_022658\t316\t1\t50M\t=\t203\t-163\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -22012,10 +22013,10 @@\n 6874:NM_022658:1707:180\t147\tNM_022658\t1838\t1\t50M\t=\t1708\t-180\tAGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4482:NM_022658:1838:177\t99\tNM_022658\t1839\t1\t50M\t=\t1966\t177\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8901:NM_022658:1838:169\t99\tNM_022658\t1839\t1\t50M\t=\t1958\t169\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+9927:NM_022658:1720:168\t147\tNM_022658\t1839\t1\t50M\t=\t1721\t-168\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5538:NM_022658:1715:173\t147\tNM_022658\t1839\t1\t50M\t=\t1716\t-173\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6384:NM_022658:1685:203\t147\tNM_022658\t1839\t1\t50M\t=\t1686\t-203\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8172:NM_022658:1682:206\t83\tNM_022658\t1839\t1\t50M\t=\t1683\t-206\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 32.874809980392456, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/7/d/f/dataset_7df859c0-8532-425e-b0ce-b359812e7b31.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-22 18:54:56.780] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-22 18:54:56.780] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2024-01-22 18:54:56.781] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat", fasta = "/galaxy/server/database/objects/7/d/f/dataset_7df859c0-8532-425e-b0ce-b359812e7b31.dat" . . .done[2024-01-22 18:54:57.320] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2024-01-22 18:54:57.552] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2024-01-22 18:54:57.560] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-01-22 18:54:57.560] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-01-22 18:54:57.560] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-22 18:54:57.561] [jointLog] [info] starting optimizer[2024-01-22 18:54:57.562] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-22 18:54:57.562] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815Resetting BAMQueue from file(s) [ "/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2024-01-22 18:54:57.563] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-22 18:54:57.563] [jointLog] [info] finished optimizer[2024-01-22 18:54:57.563] [jointLog] [info] writing output[2024-01-22 18:54:57.566] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/6/4/6/dataset_646009bb-a7be-4e31-bb08-f9ee396b7507.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="30.177279949188232">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-22 18:55:27.616] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-22 18:55:27.617] [jLog] [info] building indexout : ./index[2024-01-22 18:55:27.617] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-22 18:55:27.624] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-22 18:55:27.624] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-22 18:55:27.633] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-22 18:55:27.635] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-22 18:55:27.688] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-22 18:55:27.688] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 952.26 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 589.2 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-22 18:55:27.689] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-22 18:55:27.689] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-22 18:55:27.690] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-22 18:55:27.690] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-22 18:55:27.690] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-22 18:55:27.690] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-22 18:55:27.690] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-22 18:55:27.698] [puff::index::jointLog] [info] # segments = 23[2024-01-22 18:55:27.698] [puff::index::jointLog] [info] total length = 19592[2024-01-22 18:55:27.698] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-22 18:55:27.705] [puff::index::jointLog] [info] positional integer width = 15[2024-01-22 18:55:27.705] [puff::index::jointLog] [info] seqSize = 19592[2024-01-22 18:55:27.705] [puff::index::jointLog] [info] rankSize = 19592[2024-01-22 18:55:27.705] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-22 18:55:27.705] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elap.. sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-22 18:55:27.765] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-22 18:55:27.765] [puff::index::jointLog] [info] chunk size = 9796[2024-01-22 18:55:27.765] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-22 18:55:27.765] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-22 18:55:27.766] [puff::index::jointLog] [info] finished populating pos vector[2024-01-22 18:55:27.766] [puff::index::jointLog] [info] writing index components[2024-01-22 18:55:27.777] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-22 18:55:27.781] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-22 18:55:27.868] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-22 18:55:27.868] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-22 18:55:27.868] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-01-22 18:55:27.868] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-22 18:55:27.868] [jointLog] [info] parsing read library format[2024-01-22 18:55:27.868] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 673.8 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.1321 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 456.44 us----------------------------------------------------------------------------------| Loading mphf table | Time = 480.45 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 847.93 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 825.6 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.2203 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 407.07 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 396.84 us-----------------------------------------[2024-01-22 18:55:27.970] [jointLog] [info] Loading pufferfish index[2024-01-22 18:55:27.971] [jointLog] [info] Loading dense pufferfish index.[2024-01-22 18:55:27.979] [jointLog] [info] done[2024-01-22 18:55:27.979] [jointLog] [info] Index contained 15 targets[2024-01-22 18:55:27.979] [jointLog] [info] Number of decoys : 0[2024-01-22 18:55:28.046] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-22 18:55:28.046] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-22 18:55:28.048] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-01-22 18:55:28.048] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-01-22 18:55:28.048] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-22 18:55:28.048] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-22 18:55:28.048] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-22 18:55:28.048] [jointLog] [info] Mapping rate = 100%[2024-01-22 18:55:28.048] [jointLog] [info] finished quantifyLibrary()[2024-01-22 18:55:28.051] [jointLog] [info] Starting optimizer[2024-01-22 18:55:28.052] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-22 18:55:28.052] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-01-22 18:55:28.053] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-22 18:55:28.053] [jointLog] [info] Finished optimizer[2024-01-22 18:55:28.053] [jointLog] [info] writing output [2024-01-22 18:55:28.057] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="30.95930814743042">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 19Hash table size = 33Candidate marks count = 57--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-01-22 18:55:58.479] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-01-22 18:55:58.479] [jLog] [info] building indexout : ./index[2024-01-22 18:55:58.480] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-01-22 18:55:58.487] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-01-22 18:55:58.487] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-01-22 18:55:58.496] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-01-22 18:55:58.498] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-01-22 18:55:58.547] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-01-22 18:55:58.547] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 703.05 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 603.28 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-01-22 18:55:58.549] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-01-22 18:55:58.549] [puff::index::jointLog] [info] contig count for validation: 23[2024-01-22 18:55:58.549] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-01-22 18:55:58.549] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-01-22 18:55:58.549] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-01-22 18:55:58.549] [puff::index::jointLog] [info] bits per offset entry 6[2024-01-22 18:55:58.549] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-01-22 18:55:58.556] [puff::index::jointLog] [info] # segments = 23[2024-01-22 18:55:58.556] [puff::index::jointLog] [info] total length = 19592[2024-01-22 18:55:58.556] [puff::index::jointLog] [info] Reading the reference files ...[2024-01-22 18:55:58.564] [puff::index::jointLog] [info] positional integer width = 15[2024-01-22 18:55:58.564] [puff::index::jointLog] [info] seqSize = 19592[2024-01-22 18:55:58.564] [puff::index::jointLog] [info] rankSize = 19592[2024-01-22 18:55:58.564] [puff::index::jointLog] [info] edgeVecSize = 0[2024-01-22 18:55:58.564] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-01-22 18:55:58.622] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-01-22 18:55:58.622] [puff::index::jointLog] [info] chunk size = 9796[2024-01-22 18:55:58.622] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-01-22 18:55:58.622] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-01-22 18:55:58.624] [puff::index::jointLog] [info] finished populating pos vector[2024-01-22 18:55:58.624] [puff::index::jointLog] [info] writing index components[2024-01-22 18:55:58.633] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-01-22 18:55:58.637] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-01-22 18:55:58.723] [jointLog] [info] setting maxHashResizeThreads to 6[2024-01-22 18:55:58.723] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-01-22 18:55:58.723] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-01-22 18:55:58.723] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-01-22 18:55:58.723] [jointLog] [info] parsing read library format[2024-01-22 18:55:58.723] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 390.9 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.2569 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 344.44 us----------------------------------------------------------------------------------| Loading mphf table | Time = 509.37 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 481.87 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 404.75 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 815.6 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 599.41 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 295.03 us-----------------------------------------[2024-01-22 18:55:58.829] [jointLog] [info] Loading pufferfish index[2024-01-22 18:55:58.829] [jointLog] [info] Loading dense pufferfish index.[2024-01-22 18:55:58.836] [jointLog] [info] done[2024-01-22 18:55:58.836] [jointLog] [info] Index contained 15 targets[2024-01-22 18:55:58.837] [jointLog] [info] Number of decoys : 0[2024-01-22 18:55:58.837] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-01-22 18:55:58.903] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-01-22 18:55:58.903] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-01-22 18:55:58.905] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-01-22 18:55:58.905] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-01-22 18:55:58.905] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-01-22 18:55:58.905] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-01-22 18:55:58.905] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-01-22 18:55:58.905] [jointLog] [info] Mapping rate = 100%[2024-01-22 18:55:58.905] [jointLog] [info] finished quantifyLibrary()[2024-01-22 18:55:58.908] [jointLog] [info] Starting optimizer[2024-01-22 18:55:58.909] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-01-22 18:55:58.909] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-01-22 18:55:58.909] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-01-22 18:55:58.914] [jointLog] [info] Computed expected counts (for bias correction)[2024-01-22 18:55:58.916] [jointLog] [info] processed bias for 13.3% of the transcripts[2024-01-22 18:55:58.916] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-01-22 18:55:58.917] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-01-22 18:55:58.917] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-01-22 18:55:58.917] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-01-22 18:55:58.917] [jointLog] [info] processed bias for 46.7% of the transcripts[2024-01-22 18:55:58.917] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-01-22 18:55:58.917] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-01-22 18:55:58.918] [jointLog] [info] processed bias for 66.7% of the transcripts[2024-01-22 18:55:58.919] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-01-22 18:55:58.919] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-01-22 18:55:58.920] [jointLog] [info] Finished optimizer[2024-01-22 18:55:58.920] [jointLog] [info] writing output [2024-01-22 18:55:58.923] [jointLog] [info] writing equivalence class counts.[2024-01-22 18:55:58.924] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-01-22 18:55:58.924] [jointLog] [info] done.[2024-01-22 18:55:58.926] [jointLog] [info] done writing equivalence class counts.[2024-01-22 18:55:58.927] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="33.45030236244202">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="36.66892147064209">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="33.33000206947327">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="36.96325492858887">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="34.73469543457031">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="32.339539527893066">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="11.634481430053711">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.634481430053711, "tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="40.68680214881897">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="71.01905179023743">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="38.271263122558594">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="99.98259854316711">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/3/8/5/dataset_38518a55-ea62-469e-ae46-d68690b88825.dat--pe1-2fastq:/galaxy/server/database/objects/e/2/9/dataset_e296ceb0-e743-4862-a2f6-6d8632fa2089.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.133+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/8/5/dataset_38518a55-ea62-469e-ae46-d68690b88825.dat']      right reads: ['/galaxy/server/database/objects/e/2/9/dataset_e296ceb0-e743-4862-a2f6-6d8632fa2089.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.005     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/8/5/dataset_38518a55-ea62-469e-ae46-d68690b88825.dat  0:00:00.757     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/2/9/dataset_e296ceb0-e743-4862-a2f6-6d8632fa2089.dat  0:00:01.417     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.426    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.684    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.684    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.826    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.848    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.863    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.865    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.867    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.869    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.876    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.876    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.876    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/8/5/dataset_38518a55-ea62-469e-ae46-d68690b88825.dat  0:00:01.894    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/2/9/dataset_e296ceb0-e743-4862-a2f6-6d8632fa2089.dat  0:00:01.911    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.911    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.911    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.929    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.929    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.938    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.938    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.938    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.938    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/8/5/dataset_38518a55-ea62-469e-ae46-d68690b88825.dat and /galaxy/server/database/objects/e/2/9/dataset_e296ceb0-e743-4862-a2f6-6d8632fa2089.dat  0:00:02.000    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.008    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.011    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.045    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.045    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.045    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:02.048    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.101    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.106     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.269   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.276     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.432   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.505     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.505     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.505     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.506     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.507     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.507     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.507     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.899     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.906    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.906    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.057    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.057    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.120    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.120    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.120    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.121    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.121    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.121    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.879     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.890    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.168    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.169    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.298    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.317    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.331    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.331    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.334    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.335    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensi..      : 346)   Closing short gaps  0:00:07.805    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.806    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.806    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.806    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.806    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.815    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.815    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.816    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.818    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.818    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.818    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:07.821    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:07.825    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:07.827    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:07.832    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.833    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.833    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:07.953   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.167   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.927   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:09.927   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:09.936    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.071   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.075   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.078   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.081   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.081   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.081   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.095   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.101   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.116    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.116    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.116    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.117    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.117    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.117    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.117    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.117    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.117    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.117    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.118    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.118    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.118    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.118    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.118    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.118    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.118    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.118    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.118    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.118    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.118    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.119    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.119    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.119    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.119    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.119    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.119    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.119    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.119    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.119    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.119    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.119    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.119    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.119    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.120    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.124    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.127    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:10.133    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:10.144    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.145    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="46.67050385475159">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/2/7/c/dataset_27c6a108-9fdf-45a2-95a6-95420fec52f6.dat--pe1-2fasta:/galaxy/server/database/objects/a/d/b/dataset_adbee507-d89a-47c8-b5e7-5366943ed7fb.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.133+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/2/7/c/dataset_27c6a108-9fdf-45a2-95a6-95420fec52f6.dat']      right reads: ['/galaxy/server/database/objects/a/d/b/dataset_adbee507-d89a-47c8-b5e7-5366943ed7fb.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.104    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.109     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.279   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.287     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.455   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.529     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.530     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.530     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.530     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.531     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.531     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.531     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.951     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.959    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.960    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.105    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.106    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.178    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.179    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.179    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.180    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.180    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.180    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.983     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:01.995    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.283    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.283    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.440    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.459    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.476    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:02.477    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.480    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.481    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:02.481    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:02.482    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:02.482    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:02.483    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:02.483    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:02.483    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:02.483    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.497    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:02.497    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:02.504    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:02.511    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:02.511    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:02.511    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:02.511    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:02.511    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:02.552    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.655    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.024    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:03.645    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:04.769    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.602    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:06.603    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:06.604    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:06.604    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:06.604    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:06.604    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:06.604    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:06.604    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:06.604    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:06.604    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:06.605    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:06.605    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:06.606    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:06.606    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:06.606    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:07.462     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:07.470    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:07.788    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:07.788    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:07.941    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:07.959    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:07.979    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:07.979    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:07.980    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:07.983    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:07.983    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:07.985    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:07.985    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:07.986    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:07.986    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.987    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:07.987    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:07.987    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:07.987    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:07.987    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:07.987    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:07.987    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.987 ..indices  0:00:09.497    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.498    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.499    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.499    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.499    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.499    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.499    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.500    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.500    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.500    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.500    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:09.500    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.500    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.500    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.510    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.510    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.510    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.515    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.515    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.516    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:09.520    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:09.524    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:09.528    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:09.535    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.535    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.535    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.535    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.535    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.535    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.660   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.882   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.651   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.652   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:11.662    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:11.798   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.801   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.804   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.806   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.806   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.806   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.820   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.826   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.844    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.844    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.844    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.845    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.848    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.848    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.848    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.848    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.848    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.848    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.848    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.849    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.849    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.849    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.849    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.850    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.850    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.850    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.850    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.850    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.850    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.851    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.851    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.851    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.851    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.851    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.851    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.851    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.851    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.851    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.851    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.851    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.851    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.851    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.852    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:11.857    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:11.860    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:11.868    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:11.882    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.885    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="45.927738428115845">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/9/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/6/1/2/dataset_612d4c13-3461-4d29-8391-df3a818e0cec.dat--pe1-2fastq.gz:/galaxy/server/database/objects/b/a/3/dataset_ba353e4b-9951-479c-ab6e-c8c975e17fef.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.133+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/9/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/6/1/2/dataset_612d4c13-3461-4d29-8391-df3a818e0cec.dat']      right reads: ['/galaxy/server/database/objects/b/a/3/dataset_ba353e4b-9951-479c-ab6e-c8c975e17fef.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/1/2/dataset_612d4c13-3461-4d29-8391-df3a818e0cec.dat  0:00:00.791     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/a/3/dataset_ba353e4b-9951-479c-ab6e-c8c975e17fef.dat  0:00:01.436     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.447    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.710    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.711    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.847    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.865    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.879    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.884    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.886    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.893    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.894    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.894    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/1/2/dataset_612d4c13-3461-4d29-8391-df3a818e0cec.dat  0:00:01.916    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/a/3/dataset_ba353e4b-9951-479c-ab6e-c8c975e17fef.dat  0:00:01.937    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.937    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.937    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.953    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.953    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.966    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.966    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.966    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.966    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/6/1/2/dataset_612d4c13-3461-4d29-8391-df3a818e0cec.dat and /galaxy/server/database/objects/b/a/3/dataset_ba353e4b-9951-479c-ab6e-c8c975e17fef.dat  0:00:02.028    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.034    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.037    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.093    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.094    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.094    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml  0:00:02.097    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.271   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.278     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.444   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.526     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.526     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.526     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.527     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.527     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.527     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.528     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.949     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.958    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.958    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.096    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.182    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.183    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.183    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.184    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.184    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.184    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.052     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.066    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.379    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.379    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.537    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.559    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.578    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.578    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.581    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.583    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Co..      : 346)   Closing short gaps  0:00:08.260    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.261    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.261    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.261    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.261    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.261    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.261    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.261    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.261    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.261    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.261    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.261    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.261    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.270    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.271    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.271    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.274    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.274    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.274    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:08.278    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:08.282    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta  0:00:08.286    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta  0:00:08.291    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.291    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.291    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.291    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.291    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.291    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.415   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.637   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.408   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.408   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.419    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.559   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.563   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.566   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.569   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.569   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.569   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.584   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.589   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.609    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.609    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.609    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.609    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.610    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.610    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.610    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.610    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.610    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.610    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.610    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.610    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.610    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.610    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.610    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.610    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.610    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.610    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.610    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.610    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.610    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.611    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.611    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.612    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.612    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.612    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.612    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.612    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.612    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.612    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.612    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.612    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.612    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.612    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.612    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.613    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:10.618    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:10.622    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths  0:00:10.628    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths  0:00:10.642    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.644    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="57.1210675239563">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/12/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/f/d/b/dataset_fdb65f09-7688-4c0f-941a-51d58e3ad663.dat--pe1-2fastq:/galaxy/server/database/objects/1/a/e/dataset_1ae6f89c-6489-4be4-b1ca-e83ffd466e61.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.133+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/12/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/f/d/b/dataset_fdb65f09-7688-4c0f-941a-51d58e3ad663.dat']      right reads: ['/galaxy/server/database/objects/1/a/e/dataset_1ae6f89c-6489-4be4-b1ca-e83ffd466e61.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/d/b/dataset_fdb65f09-7688-4c0f-941a-51d58e3ad663.dat  0:00:00.909     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/a/e/dataset_1ae6f89c-6489-4be4-b1ca-e83ffd466e61.dat  0:00:01.706     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.718    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.990    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.991    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.154    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.183    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.203    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.205    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.210    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.213    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.222    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.222    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.222    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/d/b/dataset_fdb65f09-7688-4c0f-941a-51d58e3ad663.dat  0:00:02.241    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/a/e/dataset_1ae6f89c-6489-4be4-b1ca-e83ffd466e61.dat  0:00:02.261    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.262    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.262    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.281    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.283    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.283    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.296    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.296    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.296    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.296    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/d/b/dataset_fdb65f09-7688-4c0f-941a-51d58e3ad663.dat and /galaxy/server/database/objects/1/a/e/dataset_1ae6f89c-6489-4be4-b1ca-e83ffd466e61.dat  0:00:02.352    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.359    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.364    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.401    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.401    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.401    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml  0:00:02.405    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.108    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.113     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.275   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.282     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.446   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.532     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.532     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.532     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.533     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.534     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:01.001     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.009    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.010    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.164    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.164    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.249    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.250    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.250    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.251    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.251    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.251    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.169     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.182    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.555    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.555    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.739    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.766    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.789    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:02.789    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.792    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.794    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:02.795    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea.. short gaps  0:00:05.093    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.094    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.094    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.094    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.094    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.094    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.094    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.094    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.094    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.094    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:05.094    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.094    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.094    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.102    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.102    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.102    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.107    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.107    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:05.107    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:05.111    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:05.114    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta  0:00:05.118    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta  0:00:05.124    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.124    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.124    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.124    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:05.124    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.124    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.249   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.466   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.238   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.238   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:07.249    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:07.385   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.389   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.392   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.395   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.395   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.395   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.409   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.415   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.436    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.436    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.436    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.436    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.436    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.436    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.436    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.436    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.436    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.436    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.437    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.438    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.438    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.438    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.438    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.438    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.438    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.438    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.438    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.438    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.438    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.439    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.439    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.439    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.439    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.439    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.440    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.440    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.440    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.440    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.440    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.440    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.440    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.440    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.440    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.440    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.441    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.441    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.441    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.441    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.441    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.441    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.441    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.441    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.441    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.441    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.441    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.441    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.441    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.441    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.441    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:07.442    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:07.446    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:07.450    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths  0:00:07.457    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths  0:00:07.469    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.474    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="38.05070233345032">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "careful": false,  "kmer_choice|kmers": "77",  "libraries_0|files_0|file_type|fwd_reads": {   "id": "8395fa6f00223b17",   "src": "hda"  },  "libraries_0|files_0|file_type|rev_reads": {   "id": "8b18b7643f472ab1",   "src": "hda"  },  "libraries_0|lib_type": "paired_end",  "sc": false }, "job": {  "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi \u0026\u0026  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"77\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/c/6/7/dataset_c67d8747-4760-4203-baf8-4eaa8b523868.dat --pe1-2 fastq:/galaxy/server/database/objects/7/6/a/dataset_76a21c5c-f9e9-478d-bb4e-b7b65f0d5b92.dat \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/15/configs/tmpjfe225c1\u0027 \u003c contigs.fasta \u003e \u0027/galaxy/server/database/objects/a/4/f/dataset_a4fbd2ce-505e-4686-9ee3-85c2fb07c4a3.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/15/configs/tmpjfe225c1\u0027 \u003c scaffolds.fasta \u003e \u0027/galaxy/server/database/objects/0/1/2/dataset_01288de0-59e6-4db7-aa21-d995cc356f14.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-01-22T18:33:21.654820",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-bdhvn",  "galaxy_version": "23.1",  "history_id": "5ddd384e69604877",  "id": "43d9f81f5017b6e7",  "inputs": {   "libraries_0|files_0|file_type|fwd_reads": {    "id": "8395fa6f00223b17",    "src": "hda",    "uuid": "c67d8747-4760-4203-baf8-4eaa8b523868"   },   "libraries_0|files_0|file_type|rev_reads": {    "id": "8b18b7643f472ab1",    "src": "hda",    "uuid": "76a21c5c-f9e9-478d-bb4e-b7b65f0d5b92"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_contig_stats": {    "id": "52d387a14c8ddacf",    "src": "hda",    "uuid": "a4fbd2ce-505e-4686-9ee3-85c2fb07c4a3"   },   "out_contigs": {    "id": "be52a66d6896472f",    "src": "hda",    "uuid": "44aef220-d6d4-4045-b1d9-74a7b02d38df"   },   "out_log": {    "id": "da9cbd607eb608d6",    "src": "hda",    "uuid": "3f7909ab-db8a-429a-afd0-a7ebb76c6cfa"   },   "out_scaffold_stats": {    "id": "60fa5faa325199c0",    "src": "hda",    "uuid": "01288de0-59e6-4db7-aa21-d995cc356f14"   },   "out_scaffolds": {    "id": "73db21099cc7a7d4",    "src": "hda",    "uuid": "fbe16212-5f29-4ad9-bed5-dd531a51076a"   }  },  "params": {   "__input_ext": "\"fastq\"",   "careful": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contig_graph_out": "false",   "cov": "{\"__current_case__\": 0, \"state\": \"off\"}",   "dbkey": "\"?\"",   "iontorrent": "false",   "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"77\"}",   "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 29, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 30, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]",   "nanopore_reads": null,   "onlyassembler": "false",   "pacbio_reads": null,   "sanger_reads": null,   "sc": "false",   "scaffold_graph_out": "false",   "trusted_contigs": null,   "untrusted_contigs": null  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-01-22T18:33:38.962097",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 38.05070233345032, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="46.14393496513367">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/18/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/d/e/7/dataset_de75d8ef-3689-41a6-8f39-06ca2313abf3.dat--pe1-2fastq:/galaxy/server/database/objects/d/3/7/dataset_d378fd5a-edc4-4c6f-b4b6-74e8fb396d7d.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.133+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/18/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/d/e/7/dataset_de75d8ef-3689-41a6-8f39-06ca2313abf3.dat']      right reads: ['/galaxy/server/database/objects/d/3/7/dataset_d378fd5a-edc4-4c6f-b4b6-74e8fb396d7d.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/e/7/dataset_de75d8ef-3689-41a6-8f39-06ca2313abf3.dat  0:00:00.757     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/3/7/dataset_d378fd5a-edc4-4c6f-b4b6-74e8fb396d7d.dat  0:00:01.424     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.435    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.685    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.685    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.815    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.836    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.849    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.850    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.855    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.856    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.864    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.864    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.864    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/e/7/dataset_de75d8ef-3689-41a6-8f39-06ca2313abf3.dat  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/3/7/dataset_d378fd5a-edc4-4c6f-b4b6-74e8fb396d7d.dat  0:00:01.896    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.896    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.896    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.910    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.911    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.911    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.911    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.919    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.919    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.919    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.919    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/e/7/dataset_de75d8ef-3689-41a6-8f39-06ca2313abf3.dat and /galaxy/server/database/objects/d/3/7/dataset_d378fd5a-edc4-4c6f-b4b6-74e8fb396d7d.dat  0:00:01.973    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:01.978    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:01.981    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.015    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.015    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.015    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml  0:00:02.018    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/18/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/18/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.101    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.107     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.266   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.273     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.452   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.527     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.527     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.527     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.527     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.528     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.528     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.528     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.917     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.926    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.926    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.067    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.068    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.131    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.132    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.132    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.133    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.133    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.133    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.879     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.891    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.155    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.155    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.304    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.322    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.337    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.337    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.340    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.340    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:07.777    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.778    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.778    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.778    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.778    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.778    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.778    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.778    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.778    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.778    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.778    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.778    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.787    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.787    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.787    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.790    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.790    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.790    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta  0:00:07.793    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg  0:00:07.797    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/simplified_contigs.fasta  0:00:07.799    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/intermediate_contigs.fasta  0:00:07.804    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.804    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.804    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.805    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:07.805    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.805    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:07.927   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.147   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.918   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:09.918   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:09.928    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.063   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.067   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.070   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.073   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.073   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.073   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.087   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.095   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.121    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.121    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.122    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.122    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.122    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.122    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.122    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.122    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.122    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.123    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.123    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.127    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.127    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.127    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.127    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.127    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.127    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.127    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.127    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.127    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.127    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.128    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.128    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.128    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.128    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.128    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.128    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.128    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.128    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.128    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.128    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.128    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.128    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.128    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.128    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.128    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.128    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.128    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.128    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.128    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.128    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.129    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.129    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.129    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.129    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.129    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.129    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.129    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.129    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.129    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.129    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.129    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.130    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta  0:00:10.133    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg  0:00:10.137    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/final_contigs.paths  0:00:10.142    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/scaffolds.paths  0:00:10.152    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.154    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="46.121395111083984">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/21/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/f/2/2/dataset_f223ad3d-1c12-4ce7-986c-48e04f03b34e.dat--pe1-2fastq:/galaxy/server/database/objects/6/c/0/dataset_6c07482f-410b-4841-adaa-9d054e4c8696.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.133+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/21/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/f/2/2/dataset_f223ad3d-1c12-4ce7-986c-48e04f03b34e.dat']      right reads: ['/galaxy/server/database/objects/6/c/0/dataset_6c07482f-410b-4841-adaa-9d054e4c8696.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/21/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/2/2/dataset_f223ad3d-1c12-4ce7-986c-48e04f03b34e.dat  0:00:00.810     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/c/0/dataset_6c07482f-410b-4841-adaa-9d054e4c8696.dat  0:00:01.504     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.514    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.777    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.777    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.926    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.948    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.966    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.968    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.971    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.973    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.981    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.982    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.982    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/2/2/dataset_f223ad3d-1c12-4ce7-986c-48e04f03b34e.dat  0:00:02.004    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/c/0/dataset_6c07482f-410b-4841-adaa-9d054e4c8696.dat  0:00:02.028    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.028    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.028    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.043    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.044    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.045    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.045    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.056    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.056    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.056    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.056    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/2/2/dataset_f223ad3d-1c12-4ce7-986c-48e04f03b34e.dat and /galaxy/server/database/objects/6/c/0/dataset_6c07482f-410b-4841-adaa-9d054e4c8696.dat  0:00:02.113    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.119    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.123    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.159    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.159    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.160    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml  0:00:02.163    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/21/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/21/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.108    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.114     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.285   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.292     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.453   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.532     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.532     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.533     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.533     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.534     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.977     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.986    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.986    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.140    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.140    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.216    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.217    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.217    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.218    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.218    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.218    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.008     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.020    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.336    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.336    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.478    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.500    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.520    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.520    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.523    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.524    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:08.216    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.218    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.218    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.218    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.218    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.218    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.219    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.219    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.219    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.219    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.219    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.219    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.234    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.235    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.235    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.241    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.241    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.241    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta  0:00:08.245    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg  0:00:08.248    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/simplified_contigs.fasta  0:00:08.252    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/intermediate_contigs.fasta  0:00:08.258    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.259    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.259    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.259    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.259    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.259    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.388   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.612   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.376   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.376   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.387    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.525   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.529   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.535   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.540   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.540   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.541   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.555   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.561   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.582    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.583    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.583    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.583    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.585    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.585    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.585    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.585    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.586    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.586    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.586    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.587    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.587    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.587    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.587    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.587    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.587    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.587    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.587    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.587    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.587    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.588    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.588    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.588    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.588    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.589    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.589    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.589    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.589    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.589    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.589    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.589    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.589    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.589    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.589    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.591    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta  0:00:10.596    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg  0:00:10.600    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/final_contigs.paths  0:00:10.607    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/scaffolds.paths  0:00:10.620    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.622    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/21/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="47.58234143257141">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/24/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/a/f/5/dataset_af553a13-6cff-454c-82c4-65c2eb3edbdb.dat--pe1-2fastq.gz:/galaxy/server/database/objects/2/2/e/dataset_22e33278-0013-4065-8bba-3993c351b853.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.133+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/24/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/a/f/5/dataset_af553a13-6cff-454c-82c4-65c2eb3edbdb.dat']      right reads: ['/galaxy/server/database/objects/2/2/e/dataset_22e33278-0013-4065-8bba-3993c351b853.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/f/5/dataset_af553a13-6cff-454c-82c4-65c2eb3edbdb.dat  0:00:00.778     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/2/2/e/dataset_22e33278-0013-4065-8bba-3993c351b853.dat  0:00:01.479     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.491    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.757    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.757    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.907    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.929    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.944    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.946    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.948    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.950    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.957    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.957    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.958    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/f/5/dataset_af553a13-6cff-454c-82c4-65c2eb3edbdb.dat  0:00:01.976    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/2/2/e/dataset_22e33278-0013-4065-8bba-3993c351b853.dat  0:00:01.995    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.995    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.995    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.008    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.009    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.009    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.026    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.027    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.027    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.027    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/a/f/5/dataset_af553a13-6cff-454c-82c4-65c2eb3edbdb.dat and /galaxy/server/database/objects/2/2/e/dataset_22e33278-0013-4065-8bba-3993c351b853.dat  0:00:02.087    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.093    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.097    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.134    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.134    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.134    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml  0:00:02.137    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/24/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/24/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.113    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.120     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.284   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.291     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.454   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.528     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.528     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.528     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.528     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.529     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.529     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.529     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.933     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.940    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.940    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.183    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.184    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.184    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.184    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.185    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.185    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.967     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.980    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.276    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.276    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.429    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.450    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.467    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.467    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.469    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.470    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE..sing short gaps  0:00:08.097    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.098    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.098    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.098    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.098    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.098    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.098    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.098    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.098    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.098    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.098    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.098    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.098    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.106    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.106    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.106    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.109    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.109    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.110    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta  0:00:08.113    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg  0:00:08.116    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/simplified_contigs.fasta  0:00:08.120    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/intermediate_contigs.fasta  0:00:08.125    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.125    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.125    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.125    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.125    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.126    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.250   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.466   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.231   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.231   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.242    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.381   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.385   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.388   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.391   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.391   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.391   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.406   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.413   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.432    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.433    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.433    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.433    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.433    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.434    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.434    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.434    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.434    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.434    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.434    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.438    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.438    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.438    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.438    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.438    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.438    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.438    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.438    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.438    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.439    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.440    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.440    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.440    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.441    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.441    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.441    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.442    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.442    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.442    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.442    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.442    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.442    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.442    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.442    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.443    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta  0:00:10.448    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg  0:00:10.451    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/final_contigs.paths  0:00:10.456    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/scaffolds.paths  0:00:10.468    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.470    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/24/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="56.0555202960968">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "83203000eca4653e",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/4/6/dataset_e4645959-15b6-4cdb-b141-46ed3781fabf.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/b/4/8/dataset_b4893fb9-ce5a-4b78-8bac-357b0551d631.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-01-22T18:42:45.234439",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jcvsc",  "galaxy_version": "23.1",  "history_id": "5ddd384e69604877",  "id": "b4c67e5ef3764db8",  "inputs": {   "readtype|fastq_in": {    "id": "83203000eca4653e",    "src": "hda",    "uuid": "e4645959-15b6-4cdb-b141-46ed3781fabf"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1705948988.0000000",    "title": "Job End Time",    "value": "2024-01-22 18:43:08"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1705948988.0000000",    "title": "Job Start Time",    "value": "2024-01-22 18:43:08"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "538999ba0c80f76c",    "src": "hda",    "uuid": "cc084ae2-7bed-48e0-8618-7d4a7e373540"   },   "fastq_out": {    "id": "fbcf49fe29a15574",    "src": "hda",    "uuid": "b4893fb9-ce5a-4b78-8bac-357b0551d631"   },   "log_file": {    "id": "088ce331ac2d0a5d",    "src": "hda",    "uuid": "1e716b34-59bd-4c07-9c37-07c131552a39"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 86, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2024-01-22T18:43:21.450526",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmp3ogbdhmrtrimmomatic_se_out1.err v. /tmp/tmpj4e6_fkttrimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 56.0555202960968, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="29.839178562164307">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="29.12249255180359">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="34.73071098327637">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="35.540674924850464">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/80/configs/tmp9r5f3tni:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="35.83539867401123">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="35.374154806137085">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="35.42167901992798">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="35.431532859802246">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="29.931236505508423">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="35.64564752578735">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="34.36637592315674">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="27.99774169921875">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="31.461376667022705">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_vcfs": [   {    "id": "3d82c128238f8105",    "src": "hda"   },   {    "id": "3d82c128238f8105",    "src": "hda"   }  ] }, "job": {  "command_line": "vcfcombine  \u0027/galaxy/server/database/objects/7/b/8/dataset_7b8a1f7b-5ded-4c99-af4d-c2444e19fa72.dat\u0027 \u0027/galaxy/server/database/objects/7/b/8/dataset_7b8a1f7b-5ded-4c99-af4d-c2444e19fa72.dat\u0027  \u003e \u0027/galaxy/server/database/objects/f/5/4/dataset_f5448c3a-2790-48c7-a626-8067b559025f.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-01-22T19:13:26.909299",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-q9vmd",  "galaxy_version": "23.1",  "history_id": "5ddd384e69604877",  "id": "0ce40c339952b799",  "inputs": {   "input_vcfs": {    "id": "3d82c128238f8105",    "src": "hda",    "uuid": "7b8a1f7b-5ded-4c99-af4d-c2444e19fa72"   },   "input_vcfs1": {    "id": "3d82c128238f8105",    "src": "hda",    "uuid": "7b8a1f7b-5ded-4c99-af4d-c2444e19fa72"   },   "input_vcfs2": {    "id": "3d82c128238f8105",    "src": "hda",    "uuid": "7b8a1f7b-5ded-4c99-af4d-c2444e19fa72"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file1": {    "id": "514f43cb09c38f8b",    "src": "hda",    "uuid": "f5448c3a-2790-48c7-a626-8067b559025f"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc3+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-01-22T19:13:38.989671",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc3+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 31.461376667022705, "tool_id": "vcfcombine", "tool_version": "1.0.0_rc3+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>