<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="213"
           errors="25"
           failures="36"
           skip="0">
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #1)" name="0" time="40.711578369140625">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "ab1a6db3bfd7b3ac",   "src": "hda"  },  "library|input_2": {   "id": "8ab67fa1743dcfe1",   "src": "hda"  },  "library|paired_options|paired_options_selector": "no",  "library|type": "paired",  "library|unaligned_file": false,  "reference_genome|own_file": {   "id": "5b79de30c381d248",   "src": "hda"  },  "reference_genome|source": "history" }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/5/b/8/dataset_5b8226b9-307d-4108-beac-d3f3268f4793.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/5/b/8/dataset_5b8226b9-307d-4108-beac-d3f3268f4793.dat\u0027 genome.fa \u0026\u0026   ln -f -s \u0027/galaxy/server/database/objects/6/9/4/dataset_694088d7-a60e-474c-a9df-3ea804ac9596.dat\u0027 input_f.fastq \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/3/a/9/dataset_3a930076-a76e-4b76-af7f-eafeca8ab805.dat\u0027 input_r.fastq \u0026\u0026   bowtie2  -p ${GALAXY_SLOTS:-4}  -x \u0027genome\u0027   -1 \u0027input_f.fastq\u0027 -2 \u0027input_r.fastq\u0027                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o \u0027/galaxy/server/database/objects/4/5/4/dataset_4547012a-7e3d-4c7e-996d-e07273d47c7c.dat\u0027",  "command_version": null,  "create_time": "2023-02-07T23:13:30.178722",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-fdf8j",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "eb3c4155505f15c4",  "inputs": {   "input_1": {    "id": "ab1a6db3bfd7b3ac",    "src": "hda",    "uuid": "694088d7-a60e-474c-a9df-3ea804ac9596"   },   "input_2": {    "id": "8ab67fa1743dcfe1",    "src": "hda",    "uuid": "3a930076-a76e-4b76-af7f-eafeca8ab805"   },   "own_file": {    "id": "5b79de30c381d248",    "src": "hda",    "uuid": "5b8226b9-307d-4108-beac-d3f3268f4793"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "a1168ae8230baa8e",    "src": "hda",    "uuid": "4547012a-7e3d-4c7e-996d-e07273d47c7c"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 734, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 735, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 736, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",   "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}",   "save_mapping_stats": "\"false\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:13:46.176380",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 40.711578369140625, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #2)" name="1" time="37.840543270111084">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "d27908dea3c1e257",   "src": "hdca"  },  "library|paired_options|paired_options_selector": "no",  "library|type": "paired_collection",  "library|unaligned_file": true,  "reference_genome|own_file": {   "id": "2b3b39b9c5dae81d",   "src": "hda"  },  "reference_genome|source": "history" }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/5/4/4/dataset_5446edb0-7667-4005-90e4-2659efffe4bd.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/5/4/4/dataset_5446edb0-7667-4005-90e4-2659efffe4bd.dat\u0027 genome.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/2/9/6/dataset_2968eecc-3c97-44a7-98bb-50de000c8a94.dat\u0027 input_f.fastq \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/d/7/d/dataset_d7d6ae6c-7604-4839-96fc-7fc1cdd2a404.dat\u0027 input_r.fastq \u0026\u0026    bowtie2  -p ${GALAXY_SLOTS:-4}  -x \u0027genome\u0027   -1 \u0027input_f.fastq\u0027 -2 \u0027input_r.fastq\u0027 --un-conc \u0027/galaxy/server/database/objects/3/8/8/dataset_38833589-e8cb-4048-9b4b-2aa7d1732985.dat\u0027                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o \u0027/galaxy/server/database/objects/b/5/6/dataset_b569274b-2f10-4eda-9f10-ee8b6f0ed8cc.dat\u0027  \u0026\u0026 mv \u0027/galaxy/server/database/objects/3/8/8/dataset_38833589-e8cb-4048-9b4b-2aa7d1732985.1.dat\u0027 \u0027/galaxy/server/database/objects/3/8/8/dataset_38833589-e8cb-4048-9b4b-2aa7d1732985.dat\u0027 \u0026\u0026 mv \u0027/galaxy/server/database/objects/3/8/8/dataset_38833589-e8cb-4048-9b4b-2aa7d1732985.2.dat\u0027 \u0027/galaxy/server/database/objects/b/c/b/dataset_bcb624c2-ed19-41e4-8bfb-8396ab8108a9.dat\u0027",  "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}",  "create_time": "2023-02-07T23:14:10.949156",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zx2g6",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "7abe5b450d697da3",  "inputs": {   "input_11": {    "id": "94ee9b727aa6dc9d",    "src": "hda",    "uuid": "2968eecc-3c97-44a7-98bb-50de000c8a94"   },   "input_12": {    "id": "8bcd5a9c1589ae5c",    "src": "hda",    "uuid": "d7d6ae6c-7604-4839-96fc-7fc1cdd2a404"   },   "own_file": {    "id": "2b3b39b9c5dae81d",    "src": "hda",    "uuid": "5446edb0-7667-4005-90e4-2659efffe4bd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811653.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:14:13"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811652.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:14:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "ae94a539b2a3db27",    "src": "hda",    "uuid": "b569274b-2f10-4eda-9f10-ee8b6f0ed8cc"   },   "output_unaligned_reads_l": {    "id": "2aa27248d10b8235",    "src": "hda",    "uuid": "38833589-e8cb-4048-9b4b-2aa7d1732985"   },   "output_unaligned_reads_r": {    "id": "7e9a65b580f0d7ff",    "src": "hda",    "uuid": "bcb624c2-ed19-41e4-8bfb-8396ab8108a9"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 2, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 27, \"src\": \"hdca\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired_collection\", \"unaligned_file\": \"true\"}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 740, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",   "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}",   "save_mapping_stats": "\"false\""  },  "state": "ok",  "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/5/4/4/dataset_5446edb0-7667-4005-90e4-2659efffe4bd.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 3:\n  Calculating Z arrays for bucket 6\n  bucket 1: 10%\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 4:\n  bucket 1: 20%\n  Entering block accumulator loop for bucket 6:\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 3: 10%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 5: 10%\n  bucket 4: 10%\n  bucket 1: 40%\n  bucket 3: 20%\n  bucket 2: 20%\n  bucket 7: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 8: 10%\n  bucket 1: 50%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 7: 20%\n  bucket 2: 30%\n  bucket 5: 30%\n  bucket 1: 60%\n  bucket 6: 20%\n  bucket 8: 20%\n  bucket 7: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 5: 40%\n  bucket 1: 70%\n  bucket 2: 40%\n  bucket 7: 40%\n  bucket 6: 30%\n  bucket 8: 30%\n  bucket 5: 50%\n  bucket 1: 80%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 7: 50%\n  bucket 2: 50%\n  bucket 5: 60%\n  bucket 1: 90%\n  bucket 6: 40%\n  bucket 8: 40%\n  bucket 4: 50%\n  bucket 7: 60%\n  bucket 5: 70%\n  bucket 3: 60%\n  bucket 1: 100%\n  bucket 2: 60%\n  bucket 6: 50%\n  bucket 8: 50%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 7: 70%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 2: 70%\n  bucket 6: 60%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 2: 80%\n  bucket 7: 90%\n  bucket 6: 70%\n  bucket 8: 70%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 7: 100%\n  Sorting block time: 00:00:00\n  bucket 2: 90%\n  bucket 6: 80%\n  bucket 8: 80%\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\nReturning block of 356 for bucket 1\n  bucket 4: 90%\n  bucket 3: 100%\n  bucket 2: 100%\n  bucket 6: 90%\n  bucket 8: 90%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  bucket 4: 100%\n  bucket 6: 100%\n  bucket 5: 80%\n  bucket 8: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\nGetting block 10 of 58\n  bucket 9: 30%\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 40%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 50%\n  bucket 10: 10%\n  bucket 9: 60%\n  bucket 10: 20%\n  bucket 9: 70%\nGetting block 11 of 58\n  bucket 10: 30%\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  bucket 9: 80%\n  bucket 10: 40%\n  Entering block accumulator loop for bucket 11:\n  bucket 9: 90%\n  bucket 10: 50%\n  bucket 11: 10%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 10: 60%\n  bucket 11: 20%\n  bucket 10: 70%\n  bucket 11: 30%\n  bucket 10: 80%\n  bucket 11: 40%\n  bucket 10: 90%\n  bucket 11: 50%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 20%\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 13: 10%\nGetting block 14 of 58\nGetting block 15 of 58\n  bucket 13: 20%\n  bucket 12: 50%\n  Reserving size (388) for bucket 14\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 14\nGetting block 16 of 58\n  Calculating Z arrays for bucket 15\n  bucket 13: 30%\n  Reserving size (388) for bucket 16\n  bucket 12: 60%\n  Entering block accumulator loop for bucket 14:\n  Calculating Z arrays for bucket 16\n  Entering block accumulator loop for bucket 15:\n  bucket 13: 40%\n  bucket 12: 70%\n  Entering block accumulator loop for bucket 16:\n  bucket 13: 50%\n  bucket 15: 10%\n  bucket 14: 10%\n  bucket 13: 60%\n  bucket 16: 10%\n  bucket 12: 80%\n  bucket 13: 70%\n  bucket 15: 20%\n  bucket 16: 20%\n  bucket 14: 20%\n  bucket 12: 90%\n  bucket 13: 80%\n  bucket 16: 30%\n  bucket 15: 30%\n  bucket 13: 90%\n  bucket 14: 30%\n  bucket 16: 40%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 100%\n  bucket 15: 40%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  bucket 16: 50%\n  bucket 14: 40%\n  bucket 15: 50%\n  bucket 16: 60%\n  bucket 14: 50%\n  bucket 16: 70%\n  bucket 15: 60%\n  bucket 14: 60%\n  bucket 16: 80%\n  bucket 15: 70%\n  bucket 14: 70%\n  bucket 16: 90%\n  Sorting block time: 00:00:00\n  bucket 15: 80%\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\n  bucket 14: 80%\n  bucket 16: 100%\nReturning block of 283 for bucket 13\n  bucket 15: 90%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 14: 90%\n  bucket 15: 100%\n  bucket 14: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 17 of 58\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  Entering block accumulator loop for bucket 17:\n  bucket 17: 10%\n  bucket 17: 20%\n  bucket 17: 30%\n  bucket 17: 40%\n  bucket 17: 50%\n  bucket 17: 60%\n  bucket 17: 70%\n  bucket 17: 80%\n  bucket 17: 90%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\nGetting block 19 of 58\nGetting block 20 of 58\n  Calculating Z arrays for bucket 18\n  Reserving size (388) for bucket 19\n  Reserving size (388) for bucket 20\nGetting block 21 of 58\n  Calculating Z arrays for bucket 19\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 18:\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 20:\n  Entering block accumulator loop for bucket 19:\n  Entering block accumulator loop for bucket 21:\n  bucket 20: 10%\n  bucket 18: 10%\n  bucket 21: 10%\n  bucket 19: 10%\n  bucket 20: 20%\n  bucket 21: 20%\n  bucket 20: 30%\n  bucket 18: 20%\n  bucket 19: 20%\n  bucket 21: 30%\n  bucket 20: 40%\n  bucket 21: 40%\n  bucket 18: 30%\n  bucket 20: 50%\n  bucket 19: 30%\n  bucket 21: 50%\n  bucket 20: 60%\n  bucket 18: 40%\n  bucket 19: 40%\n  bucket 21: 60%\n  bucket 20: 70%\n  bucket 21: 70%\n  bucket 18: 50%\n  bucket 20: 80%\n  bucket 19: 50%\n  bucket 21: 80%\n  bucket 20: 90%\n  bucket 18: 60%\n  bucket 19: 60%\n  bucket 21: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 18: 70%\n  bucket 19: 70%\n  bucket 18: 80%\n  bucket 19: 80%\n  bucket 18: 90%\n  bucket 19: 90%\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  Sorting block time: 00:00:00\n  bucket 19: 100%\n  bucket 18: 100%\nReturning block of 211 for bucket 21\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\nGetting block 23 of 58\n  Calculating Z arrays for bucket 22\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 22:\n  Entering block accumulator loop for bucket 23:\n  bucket 22: 10%\n  bucket 23: 10%\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nReturning block of 335 for bucket 19\n  bucket 22: 20%\n  bucket 23: 20%\n  bucket 22: 30%\n  bucket 23: 30%\n  bucket 22: 40%\n  bucket 23: 40%\n  bucket 22: 50%\n  bucket 23: 50%\n  bucket 22: 60%\n  bucket 23: 60%\n  bucket 22: 70%\n  bucket 23: 70%\n  bucket 22: 80%\n  bucket 23: 80%\n  bucket 22: 90%\n  bucket 23: 90%\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  bucket 22: 100%\n  bucket 23: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  bucket 24: 30%\n  bucket 24: 40%\n  bucket 24: 50%\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  bucket 25: 10%\n  bucket 25: 20%\n  bucket 25: 30%\n  bucket 25: 40%\n  bucket 25: 50%\n  bucket 25: 60%\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\n  bucket 26: 10%\nGetting block 27 of 58\n  bucket 26: 20%\n  Reserving size (388) for bucket 27\nGetting block 28 of 58\nGetting block 29 of 58\n  Calculating Z arrays for bucket 27\n  Reserving size (388) for bucket 28\n  bucket 26: 30%\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 27:\n  Calculating Z arrays for bucket 29\n  bucket 26: 40%\n  Entering block accumulator loop for bucket 28:\n  Entering block accumulator loop for bucket 29:\n  bucket 26: 50%\n  bucket 27: 10%\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 26: 60%\n  bucket 27: 20%\n  bucket 29: 20%\n  bucket 26: 70%\n  bucket 28: 20%\n  bucket 26: 80%\n  bucket 27: 30%\n  bucket 29: 30%\n  bucket 28: 30%\n  bucket 26: 90%\n  bucket 27: 40%\n  bucket 28: 40%\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 29: 40%\n  bucket 27: 50%\n  bucket 28: 50%\n  bucket 29: 50%\n  bucket 28: 60%\n  bucket 27: 60%\n  bucket 29: 60%\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\n  bucket 28: 70%\n  bucket 27: 70%\n  bucket 29: 70%\n  bucket 28: 80%\n  bucket 27: 80%\n  bucket 29: 80%\n  bucket 28: 90%\n  bucket 27: 90%\n  bucket 29: 90%\n  bucket 28: 100%\n  bucket 29: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\nGetting block 30 of 58\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 31: 10%\n  bucket 31: 20%\nGetting block 32 of 58\n  bucket 31: 30%\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  bucket 31: 40%\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 32: 10%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 32: 20%\n  bucket 31: 90%\n  bucket 32: 30%\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using di\n..\nme: 00:00:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 24: 30%\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\nGetting block 26 of 57\n  Entering block accumulator loop for bucket 25:\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Entering block accumulator loop for bucket 26:\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 25: 10%\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 27: 20%\n  bucket 25: 20%\n  bucket 27: 30%\n  bucket 26: 20%\n  bucket 25: 30%\n  bucket 27: 40%\n  bucket 26: 30%\n  bucket 25: 40%\n  bucket 27: 50%\n  bucket 26: 40%\n  bucket 25: 50%\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 26: 50%\n  bucket 25: 60%\n  bucket 27: 80%\n  bucket 26: 60%\n  bucket 25: 70%\n  bucket 27: 90%\n  bucket 26: 70%\n  bucket 27: 100%\n  bucket 25: 80%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  bucket 26: 80%\n  bucket 25: 90%\n  bucket 26: 90%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\nGetting block 29 of 57\n  Calculating Z arrays for bucket 28\n  Reserving size (388) for bucket 29\n  Entering block accumulator loop for bucket 28:\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 29: 20%\n  bucket 28: 20%\n  bucket 29: 30%\n  bucket 28: 30%\n  bucket 29: 40%\n  bucket 28: 40%\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 28: 50%\n  bucket 29: 70%\n  bucket 28: 60%\n  bucket 29: 80%\n  bucket 28: 70%\n  bucket 29: 90%\n  bucket 28: 80%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  bucket 28: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\nGetting block 31 of 57\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 31: 10%\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 32:\n  bucket 32: 10%\nGetting block 33 of 57\n  bucket 32: 20%\n  Reserving size (388) for bucket 33\n  bucket 32: 30%\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\n  bucket 32: 40%\n  bucket 33: 10%\n  bucket 32: 50%\n  bucket 32: 60%\n  bucket 33: 20%\n  bucket 32: 70%\n  bucket 33: 30%\n  bucket 32: 80%\n  bucket 32: 90%\n  bucket 33: 40%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  bucket 33: 50%\n  bucket 33: 60%\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\n  bucket 33: 70%\n  bucket 33: 80%\n  bucket 33: 90%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  Entering block accumulator loop for bucket 34:\n  bucket 34: 10%\n  bucket 34: 20%\n  bucket 34: 30%\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  bucket 34: 40%\n  Entering block accumulator loop for bucket 35:\n  bucket 34: 50%\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 34: 60%\n  bucket 35: 30%\n  bucket 34: 70%\n  bucket 35: 40%\n  bucket 34: 80%\n  bucket 35: 50%\n  bucket 34: 90%\n  bucket 35: 60%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\n  Entering block accumulator loop for bucket 36:\n  bucket 36: 10%\n  bucket 36: 20%\n  bucket 36: 30%\n  bucket 36: 40%\n  bucket 36: 50%\n  bucket 36: 60%\n  bucket 36: 70%\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 37:\n  bucket 37: 10%\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  bucket 37: 20%\n  bucket 37: 30%\n  bucket 37: 40%\n  bucket 37: 50%\n  bucket 37: 60%\n  bucket 37: 70%\n  bucket 37: 80%\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\nGetting block 39 of 57\n  Entering block accumulator loop for bucket 38:\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\nGetting block 40 of 57\n  Entering block accumulator loop for bucket 39:\n  Reserving size (388) for bucket 40\n  bucket 38: 10%\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 39: 10%\n  bucket 38: 20%\n  bucket 40: 10%\n  bucket 39: 20%\n  bucket 38: 30%\n  bucket 40: 20%\n  bucket 39: 30%\n  bucket 38: 40%\n  bucket 40: 30%\n  bucket 39: 40%\n  bucket 38: 50%\n  bucket 40: 40%\n  bucket 39: 50%\n  bucket 38: 60%\n  bucket 40: 50%\n  bucket 39: 60%\n  bucket 38: 70%\n  bucket 40: 60%\n  bucket 39: 70%\n  bucket 38: 80%\n  bucket 40: 70%\n  bucket 39: 80%\n  bucket 38: 90%\n  bucket 40: 80%\n  bucket 39: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 40: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\nGetting block 41 of 57\n  Reserving size (388) for bucket 41\nGetting block 42 of 57\nGetting block 43 of 57\n  Calculating Z arrays for bucket 41\n  Reserving size (388) for bucket 42\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 42\n  Entering block accumulator loop for bucket 41:\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 42:\n  Entering block accumulator loop for bucket 43:\n  bucket 41: 10%\n  bucket 43: 10%\n  bucket 42: 10%\n  bucket 43: 20%\n  bucket 41: 20%\n  bucket 42: 20%\n  bucket 43: 30%\n  bucket 41: 30%\n  bucket 43: 40%\n  bucket 42: 30%\n  bucket 43: 50%\n  bucket 41: 40%\n  bucket 43: 60%\n  bucket 42: 40%\n  bucket 41: 50%\n  bucket 43: 70%\n  bucket 42: 50%\n  bucket 43: 80%\n  bucket 41: 60%\n  bucket 43: 90%\n  bucket 42: 60%\n  bucket 41: 70%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 42: 70%\n  bucket 41: 80%\n  bucket 42: 80%\n  bucket 41: 90%\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  bucket 42: 90%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  bucket 44: 10%\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 45: 10%\n  bucket 44: 40%\n  bucket 45: 20%\nGetting block 46 of 57\n  bucket 44: 50%\n  Reserving size (388) for bucket 46\n  bucket 45: 30%\n  Calculating Z arrays for bucket 46\n  bucket 44: 60%\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 40%\n  bucket 44: 70%\n  bucket 45: 50%\n  bucket 46: 10%\n  bucket 45: 60%\n  bucket 46: 20%\n  bucket 44: 80%\n  bucket 45: 70%\n  bucket 46: 30%\n  bucket 45: 80%\n  bucket 44: 90%\n  bucket 46: 40%\n  bucket 45: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  bucket 46: 50%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\n  bucket 46: 90%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 47:\n  Entering block accumulator loop for bucket 48:\n  bucket 47: 10%\n  bucket 48: 10%\n  bucket 47: 20%\n  bucket 48: 20%\n  bucket 47: 30%\n  bucket 48: 30%\n  bucket 47: 40%\n  bucket 48: 40%\n  bucket 47: 50%\n  bucket 48: 50%\n  bucket 47: 60%\n  bucket 48: 60%\n  bucket 47: 70%\n  bucket 48: 70%\n  bucket 47: 80%\n  bucket 47: 90%\n  bucket 48: 80%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  bucket 49: 20%\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 30%\n  bucket 50: 10%\nGetting block 51 of 57\n  bucket 49: 40%\n  Reserving size (388) for bucket 51\n  bucket 50: 20%\n  Calculating Z arrays for bucket 51\n  bucket 49: 50%\n  bucket 50: 30%\n  Entering block accumulator loop for bucket 51:\n  bucket 50: 40%\n  bucket 51: 10%\n  bucket 49: 60%\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  Calculating Z arrays for bucket 52\n  bucket 50: 50%\n  bucket 51: 20%\n  bucket 49: 70%\n  Entering block accumulator loop for bucket 52:\n  bucket 50: 60%\n  bucket 49: 80%\n  bucket 51: 30%\n  bucket 52: 10%\n  bucket 50: 70%\n  bucket 49: 90%\n  bucket 52: 20%\n  bucket 51: 40%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 52: 30%\n  bucket 50: 80%\n  bucket 51: 50%\n  bucket 52: 40%\n  bucket 50: 90%\n  bucket 51: 60%\n  bucket 52: 50%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  bucket 51: 70%\n  bucket 52: 60%\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  bucket 51: 80%\n  bucket 52: 70%\n  bucket 51: 90%\n  bucket 52: 80%\n  bucket 51: 100%\n  Sorting block time: 00:00:00\n  bucket 52: 90%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\nReturning block of 276 for bucket 50\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 53:\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 10%\n  bucket 54: 10%\n  bucket 53: 20%\n  bucket 54: 20%\n  bucket 53: 30%\n  bucket 54: 30%\n  bucket 53: 40%\n  bucket 54: 40%\n  bucket 53: 50%\n  bucket 54: 50%\n  bucket 53: 60%\n  bucket 54: 60%\n  bucket 53: 70%\n  bucket 54: 70%\n  bucket 53: 80%\n  bucket 54: 80%\n  bucket 53: 90%\n  bucket 54: 90%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\n  bucket 55: 10%\nGetting block 56 of 57\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  bucket 55: 20%\n  Entering block accumulator loop for bucket 56:\n  bucket 55: 30%\n  bucket 56: 10%\n  bucket 55: 40%\n  bucket 56: 20%\n  bucket 55: 50%\n  bucket 56: 30%\n  bucket 55: 60%\n  bucket 56: 40%\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 55: 70%\n  bucket 56: 70%\n  bucket 55: 80%\n  bucket 56: 80%\n  bucket 55: 90%\n  bucket 56: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0",  "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/5/4/4/dataset_5446edb0-7667-4005-90e4-2659efffe4bd.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Entering block accumulator loop for bucket 3:\n  Calculating Z arrays for bucket 6\n  bucket 1: 10%\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 4:\n  bucket 1: 20%\n  Entering block accumulator loop for bucket 6:\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 3: 10%\n  bucket 2: 10%\n  bucket 1: 30%\n  bucket 5: 10%\n  bucket 4: 10%\n  bucket 1: 40%\n  bucket 3: 20%\n  bucket 2: 20%\n  bucket 7: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 8: 10%\n  bucket 1: 50%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 7: 20%\n  bucket 2: 30%\n  bucket 5: 30%\n  bucket 1: 60%\n  bucket 6: 20%\n  bucket 8: 20%\n  bucket 7: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 5: 40%\n  bucket 1: 70%\n  bucket 2: 40%\n  bucket 7: 40%\n  bucket 6: 30%\n  bucket 8: 30%\n  bucket 5: 50%\n  bucket 1: 80%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 7: 50%\n  bucket 2: 50%\n  bucket 5: 60%\n  bucket 1: 90%\n  bucket 6: 40%\n  bucket 8: 40%\n  bucket 4: 50%\n  bucket 7: 60%\n  bucket 5: 70%\n  bucket 3: 60%\n  bucket 1: 100%\n  bucket 2: 60%\n  bucket 6: 50%\n  bucket 8: 50%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 7: 70%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 2: 70%\n  bucket 6: 60%\n  bucket 7: 80%\n  bucket 8: 60%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 2: 80%\n  bucket 7: 90%\n  bucket 6: 70%\n  bucket 8: 70%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 7: 100%\n  Sorting block time: 00:00:00\n  bucket 2: 90%\n  bucket 6: 80%\n  bucket 8: 80%\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\nReturning block of 356 for bucket 1\n  bucket 4: 90%\n  bucket 3: 100%\n  bucket 2: 100%\n  bucket 6: 90%\n  bucket 8: 90%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  bucket 4: 100%\n  bucket 6: 100%\n  bucket 5: 80%\n  bucket 8: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  bucket 5: 90%\n  bucket 5: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\n  Entering block accumulator loop for bucket 9:\n  bucket 9: 10%\n  bucket 9: 20%\nGetting block 10 of 58\n  bucket 9: 30%\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 40%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 50%\n  bucket 10: 10%\n  bucket 9: 60%\n  bucket 10: 20%\n  bucket 9: 70%\nGetting block 11 of 58\n  bucket 10: 30%\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  bucket 9: 80%\n  bucket 10: 40%\n  Entering block accumulator loop for bucket 11:\n  bucket 9: 90%\n  bucket 10: 50%\n  bucket 11: 10%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 10: 60%\n  bucket 11: 20%\n  bucket 10: 70%\n  bucket 11: 30%\n  bucket 10: 80%\n  bucket 11: 40%\n  bucket 10: 90%\n  bucket 11: 50%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 20%\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 13: 10%\nGetting block 14 of 58\nGetting block 15 of 58\n  bucket 13: 20%\n  bucket 12: 50%\n  Reserving size (388) for bucket 14\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 14\nGetting block 16 of 58\n  Calculating Z arrays for bucket 15\n  bucket 13: 30%\n  Reserving size (388) for bucket 16\n  bucket 12: 60%\n  Entering block accumulator loop for bucket 14:\n  Calculating Z arrays for bucket 16\n  Entering block accumulator loop for bucket 15:\n  bucket 13: 40%\n  bucket 12: 70%\n  Entering block accumulator loop for bucket 16:\n  bucket 13: 50%\n  bucket 15: 10%\n  bucket 14: 10%\n  bucket 13: 60%\n  bucket 16: 10%\n  bucket 12: 80%\n  bucket 13: 70%\n  bucket 15: 20%\n  bucket 16: 20%\n  bucket 14: 20%\n  bucket 12: 90%\n  bucket 13: 80%\n  bucket 16: 30%\n  bucket 15: 30%\n  bucket 13: 90%\n  bucket 14: 30%\n  bucket 16: 40%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 100%\n  bucket 15: 40%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  bucket 16: 50%\n  bucket 14: 40%\n  bucket 15: 50%\n  bucket 16: 60%\n  bucket 14: 50%\n  bucket 16: 70%\n  bucket 15: 60%\n  bucket 14: 60%\n  bucket 16: 80%\n  bucket 15: 70%\n  bucket 14: 70%\n  bucket 16: 90%\n  Sorting block time: 00:00:00\n  bucket 15: 80%\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\n  bucket 14: 80%\n  bucket 16: 100%\nReturning block of 283 for bucket 13\n  bucket 15: 90%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 14: 90%\n  bucket 15: 100%\n  bucket 14: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 17 of 58\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  Entering block accumulator loop for bucket 17:\n  bucket 17: 10%\n  bucket 17: 20%\n  bucket 17: 30%\n  bucket 17: 40%\n  bucket 17: 50%\n  bucket 17: 60%\n  bucket 17: 70%\n  bucket 17: 80%\n  bucket 17: 90%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\nGetting block 19 of 58\nGetting block 20 of 58\n  Calculating Z arrays for bucket 18\n  Reserving size (388) for bucket 19\n  Reserving size (388) for bucket 20\nGetting block 21 of 58\n  Calculating Z arrays for bucket 19\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 18:\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 20:\n  Entering block accumulator loop for bucket 19:\n  Entering block accumulator loop for bucket 21:\n  bucket 20: 10%\n  bucket 18: 10%\n  bucket 21: 10%\n  bucket 19: 10%\n  bucket 20: 20%\n  bucket 21: 20%\n  bucket 20: 30%\n  bucket 18: 20%\n  bucket 19: 20%\n  bucket 21: 30%\n  bucket 20: 40%\n  bucket 21: 40%\n  bucket 18: 30%\n  bucket 20: 50%\n  bucket 19: 30%\n  bucket 21: 50%\n  bucket 20: 60%\n  bucket 18: 40%\n  bucket 19: 40%\n  bucket 21: 60%\n  bucket 20: 70%\n  bucket 21: 70%\n  bucket 18: 50%\n  bucket 20: 80%\n  bucket 19: 50%\n  bucket 21: 80%\n  bucket 20: 90%\n  bucket 18: 60%\n  bucket 19: 60%\n  bucket 21: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 18: 70%\n  bucket 19: 70%\n  bucket 18: 80%\n  bucket 19: 80%\n  bucket 18: 90%\n  bucket 19: 90%\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  Sorting block time: 00:00:00\n  bucket 19: 100%\n  bucket 18: 100%\nReturning block of 211 for bucket 21\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\nGetting block 23 of 58\n  Calculating Z arrays for bucket 22\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 22:\n  Entering block accumulator loop for bucket 23:\n  bucket 22: 10%\n  bucket 23: 10%\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nReturning block of 335 for bucket 19\n  bucket 22: 20%\n  bucket 23: 20%\n  bucket 22: 30%\n  bucket 23: 30%\n  bucket 22: 40%\n  bucket 23: 40%\n  bucket 22: 50%\n  bucket 23: 50%\n  bucket 22: 60%\n  bucket 23: 60%\n  bucket 22: 70%\n  bucket 23: 70%\n  bucket 22: 80%\n  bucket 23: 80%\n  bucket 22: 90%\n  bucket 23: 90%\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  bucket 22: 100%\n  bucket 23: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  bucket 24: 30%\n  bucket 24: 40%\n  bucket 24: 50%\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  bucket 25: 10%\n  bucket 25: 20%\n  bucket 25: 30%\n  bucket 25: 40%\n  bucket 25: 50%\n  bucket 25: 60%\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\n  bucket 26: 10%\nGetting block 27 of 58\n  bucket 26: 20%\n  Reserving size (388) for bucket 27\nGetting block 28 of 58\nGetting block 29 of 58\n  Calculating Z arrays for bucket 27\n  Reserving size (388) for bucket 28\n  bucket 26: 30%\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 27:\n  Calculating Z arrays for bucket 29\n  bucket 26: 40%\n  Entering block accumulator loop for bucket 28:\n  Entering block accumulator loop for bucket 29:\n  bucket 26: 50%\n  bucket 27: 10%\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 26: 60%\n  bucket 27: 20%\n  bucket 29: 20%\n  bucket 26: 70%\n  bucket 28: 20%\n  bucket 26: 80%\n  bucket 27: 30%\n  bucket 29: 30%\n  bucket 28: 30%\n  bucket 26: 90%\n  bucket 27: 40%\n  bucket 28: 40%\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 29: 40%\n  bucket 27: 50%\n  bucket 28: 50%\n  bucket 29: 50%\n  bucket 28: 60%\n  bucket 27: 60%\n  bucket 29: 60%\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\n  bucket 28: 70%\n  bucket 27: 70%\n  bucket 29: 70%\n  bucket 28: 80%\n  bucket 27: 80%\n  bucket 29: 80%\n  bucket 28: 90%\n  bucket 27: 90%\n  bucket 29: 90%\n  bucket 28: 100%\n  bucket 29: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\nGetting block 30 of 58\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 31: 10%\n  bucket 31: 20%\nGetting block 32 of 58\n  bucket 31: 30%\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  bucket 31: 40%\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 32: 10%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 32: 20%\n  bucket 31: 90%\n  bucket 32: 30%\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using di\n..\nme: 00:00:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 24: 30%\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\nGetting block 26 of 57\n  Entering block accumulator loop for bucket 25:\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Entering block accumulator loop for bucket 26:\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 25: 10%\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 27: 20%\n  bucket 25: 20%\n  bucket 27: 30%\n  bucket 26: 20%\n  bucket 25: 30%\n  bucket 27: 40%\n  bucket 26: 30%\n  bucket 25: 40%\n  bucket 27: 50%\n  bucket 26: 40%\n  bucket 25: 50%\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 26: 50%\n  bucket 25: 60%\n  bucket 27: 80%\n  bucket 26: 60%\n  bucket 25: 70%\n  bucket 27: 90%\n  bucket 26: 70%\n  bucket 27: 100%\n  bucket 25: 80%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  bucket 26: 80%\n  bucket 25: 90%\n  bucket 26: 90%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\nGetting block 29 of 57\n  Calculating Z arrays for bucket 28\n  Reserving size (388) for bucket 29\n  Entering block accumulator loop for bucket 28:\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 29: 20%\n  bucket 28: 20%\n  bucket 29: 30%\n  bucket 28: 30%\n  bucket 29: 40%\n  bucket 28: 40%\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 28: 50%\n  bucket 29: 70%\n  bucket 28: 60%\n  bucket 29: 80%\n  bucket 28: 70%\n  bucket 29: 90%\n  bucket 28: 80%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  bucket 28: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\nGetting block 31 of 57\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 31: 10%\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 32:\n  bucket 32: 10%\nGetting block 33 of 57\n  bucket 32: 20%\n  Reserving size (388) for bucket 33\n  bucket 32: 30%\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\n  bucket 32: 40%\n  bucket 33: 10%\n  bucket 32: 50%\n  bucket 32: 60%\n  bucket 33: 20%\n  bucket 32: 70%\n  bucket 33: 30%\n  bucket 32: 80%\n  bucket 32: 90%\n  bucket 33: 40%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  bucket 33: 50%\n  bucket 33: 60%\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\n  bucket 33: 70%\n  bucket 33: 80%\n  bucket 33: 90%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  Entering block accumulator loop for bucket 34:\n  bucket 34: 10%\n  bucket 34: 20%\n  bucket 34: 30%\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  bucket 34: 40%\n  Entering block accumulator loop for bucket 35:\n  bucket 34: 50%\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 34: 60%\n  bucket 35: 30%\n  bucket 34: 70%\n  bucket 35: 40%\n  bucket 34: 80%\n  bucket 35: 50%\n  bucket 34: 90%\n  bucket 35: 60%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\n  Entering block accumulator loop for bucket 36:\n  bucket 36: 10%\n  bucket 36: 20%\n  bucket 36: 30%\n  bucket 36: 40%\n  bucket 36: 50%\n  bucket 36: 60%\n  bucket 36: 70%\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 37:\n  bucket 37: 10%\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  bucket 37: 20%\n  bucket 37: 30%\n  bucket 37: 40%\n  bucket 37: 50%\n  bucket 37: 60%\n  bucket 37: 70%\n  bucket 37: 80%\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\nGetting block 39 of 57\n  Entering block accumulator loop for bucket 38:\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\nGetting block 40 of 57\n  Entering block accumulator loop for bucket 39:\n  Reserving size (388) for bucket 40\n  bucket 38: 10%\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 39: 10%\n  bucket 38: 20%\n  bucket 40: 10%\n  bucket 39: 20%\n  bucket 38: 30%\n  bucket 40: 20%\n  bucket 39: 30%\n  bucket 38: 40%\n  bucket 40: 30%\n  bucket 39: 40%\n  bucket 38: 50%\n  bucket 40: 40%\n  bucket 39: 50%\n  bucket 38: 60%\n  bucket 40: 50%\n  bucket 39: 60%\n  bucket 38: 70%\n  bucket 40: 60%\n  bucket 39: 70%\n  bucket 38: 80%\n  bucket 40: 70%\n  bucket 39: 80%\n  bucket 38: 90%\n  bucket 40: 80%\n  bucket 39: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 40: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\nGetting block 41 of 57\n  Reserving size (388) for bucket 41\nGetting block 42 of 57\nGetting block 43 of 57\n  Calculating Z arrays for bucket 41\n  Reserving size (388) for bucket 42\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 42\n  Entering block accumulator loop for bucket 41:\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 42:\n  Entering block accumulator loop for bucket 43:\n  bucket 41: 10%\n  bucket 43: 10%\n  bucket 42: 10%\n  bucket 43: 20%\n  bucket 41: 20%\n  bucket 42: 20%\n  bucket 43: 30%\n  bucket 41: 30%\n  bucket 43: 40%\n  bucket 42: 30%\n  bucket 43: 50%\n  bucket 41: 40%\n  bucket 43: 60%\n  bucket 42: 40%\n  bucket 41: 50%\n  bucket 43: 70%\n  bucket 42: 50%\n  bucket 43: 80%\n  bucket 41: 60%\n  bucket 43: 90%\n  bucket 42: 60%\n  bucket 41: 70%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 42: 70%\n  bucket 41: 80%\n  bucket 42: 80%\n  bucket 41: 90%\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  bucket 42: 90%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  bucket 44: 10%\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 45: 10%\n  bucket 44: 40%\n  bucket 45: 20%\nGetting block 46 of 57\n  bucket 44: 50%\n  Reserving size (388) for bucket 46\n  bucket 45: 30%\n  Calculating Z arrays for bucket 46\n  bucket 44: 60%\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 40%\n  bucket 44: 70%\n  bucket 45: 50%\n  bucket 46: 10%\n  bucket 45: 60%\n  bucket 46: 20%\n  bucket 44: 80%\n  bucket 45: 70%\n  bucket 46: 30%\n  bucket 45: 80%\n  bucket 44: 90%\n  bucket 46: 40%\n  bucket 45: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  bucket 46: 50%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\n  bucket 46: 90%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 47:\n  Entering block accumulator loop for bucket 48:\n  bucket 47: 10%\n  bucket 48: 10%\n  bucket 47: 20%\n  bucket 48: 20%\n  bucket 47: 30%\n  bucket 48: 30%\n  bucket 47: 40%\n  bucket 48: 40%\n  bucket 47: 50%\n  bucket 48: 50%\n  bucket 47: 60%\n  bucket 48: 60%\n  bucket 47: 70%\n  bucket 48: 70%\n  bucket 47: 80%\n  bucket 47: 90%\n  bucket 48: 80%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  bucket 49: 20%\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 30%\n  bucket 50: 10%\nGetting block 51 of 57\n  bucket 49: 40%\n  Reserving size (388) for bucket 51\n  bucket 50: 20%\n  Calculating Z arrays for bucket 51\n  bucket 49: 50%\n  bucket 50: 30%\n  Entering block accumulator loop for bucket 51:\n  bucket 50: 40%\n  bucket 51: 10%\n  bucket 49: 60%\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  Calculating Z arrays for bucket 52\n  bucket 50: 50%\n  bucket 51: 20%\n  bucket 49: 70%\n  Entering block accumulator loop for bucket 52:\n  bucket 50: 60%\n  bucket 49: 80%\n  bucket 51: 30%\n  bucket 52: 10%\n  bucket 50: 70%\n  bucket 49: 90%\n  bucket 52: 20%\n  bucket 51: 40%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 52: 30%\n  bucket 50: 80%\n  bucket 51: 50%\n  bucket 52: 40%\n  bucket 50: 90%\n  bucket 51: 60%\n  bucket 52: 50%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  bucket 51: 70%\n  bucket 52: 60%\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  bucket 51: 80%\n  bucket 52: 70%\n  bucket 51: 90%\n  bucket 52: 80%\n  bucket 51: 100%\n  Sorting block time: 00:00:00\n  bucket 52: 90%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\nReturning block of 276 for bucket 50\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 53:\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 10%\n  bucket 54: 10%\n  bucket 53: 20%\n  bucket 54: 20%\n  bucket 53: 30%\n  bucket 54: 30%\n  bucket 53: 40%\n  bucket 54: 40%\n  bucket 53: 50%\n  bucket 54: 50%\n  bucket 53: 60%\n  bucket 54: 60%\n  bucket 53: 70%\n  bucket 54: 70%\n  bucket 53: 80%\n  bucket 54: 80%\n  bucket 53: 90%\n  bucket 54: 90%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\n  bucket 55: 10%\nGetting block 56 of 57\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  bucket 55: 20%\n  Entering block accumulator loop for bucket 56:\n  bucket 55: 30%\n  bucket 56: 10%\n  bucket 55: 40%\n  bucket 56: 20%\n  bucket 55: 50%\n  bucket 56: 30%\n  bucket 55: 60%\n  bucket 56: 40%\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 55: 70%\n  bucket 56: 70%\n  bucket 55: 80%\n  bucket 56: 80%\n  bucket 55: 90%\n  bucket 56: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "traceback": null,  "update_time": "2023-02-07T23:14:24.326115",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_w26d_d_9.sam v. /tmp/history_bam_converted_to_sam_lc7lpu2a.sam )\n--- local_file\n+++ history_data\n@@ -1,77 +1,78 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 8 -x genome --passthrough -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@8 -T /galaxy/server/database/jobs_directory/000/527/tmp -O bam -o /galaxy/server/database/objects/b/5/6/dataset_b569274b-2f10-4eda-9f10-ee8b6f0ed8cc.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3\u003eAAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC\u003e;\u003e=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2\u003eAFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@\u003eBD/9BFBBBBFDFFFF99D=?\u003eDDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n********\n*SNIP *\n********\n-M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D\u003eCFDDFFFB?AF?B;-@\u003e.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000\u003c00\u003cBFBB0\u003c00000\u003c99.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A\u003cGFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.\u003cADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/\u003e99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG\u003e0\u003c0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t141\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGACAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTA\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHCHHGDGGGGHGGHHHHHHHHGHGHHHGGGGGHFHHHHFHHHFFHHHHHFGCGGEHFHHFGGHFHGGGGGGHHFEEEAFEFFDFHGHHHHGGGGGGGHH0DGGGGCGHCC-\u003cCCBGHHHGEFFFFHH.C/\u003cAEGHHEG.EEA0GE0:FB0CFGF:A?FFBF??FG0B;FGGGGFGE?BBF;BFBFFFF/F/B?DDF.;.;:ADD.BA/BBFFB:BFE/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t77\t*\t0\t0\t*\t*\t0\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGCGGTGTCCACGCAATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\t1\u003e\u003e1AAFFFFFBGGFE1EEEEGGHGHHH2FGHHHFGFGHGCFGGGEFHGGEGGHHHHGHEFBFEGHHHGHHBEHHHHGHGFHHHGGGGHHEGGGGHHHGFHGHHHH1FHHG?G/AGF1GBFGEFFHF2FDD0FG\u003cGDHBFDGFFCGH//B//?0GFFGFGGHHHFHFB.=1FDFB?FGH.C/.-:::CH0;CAB@-.;0CGFFFGG--9.A@GB\u003e--99@=---AAABA-BF/B?A@F-9BBFF//BB/9/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t141\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATTGCGTGGACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tABBB\u003eFFFFFFFGGGGGGGGGGHHHHHGHHHHGHHGGHHGGHGGHHHGHHHHFHHGHHAFGGGHHHHHGHHHHFHFHHHHHECGGGHGHHHEFHFHGGGGGGGGFGFFGFFEFGEGHHHGHHGGDGGGHGFGGGGGGGGE@GCGGHHHGHHHHHGHHHHFHHGEGFFEGCE.ECCECEHCGGFFE/AABFFG0CFE0BFFF9CFGG.F/BBBFFGFGGGFFFFFFBFEDAEFFFFFBFFFFFFF0;FEBF:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTT\tAAABABBBBBBFGGGGGGGGGGHGHHGHGHHHHHHHHHGHHHGGHDGHHHGGGGHHHHHHHHHHHHHHHFHGHHHHGGHGGHHHFHHHHHCGHFFHHHHHHHHHHHHHGHGEFGAEEEEHHGHHGHGHHHHHHHGHHHHHHGHGHFFBC/BA?BGGGFFFFFFFFFFFFFFFC-@DDFFFFFFFEFAFFFFFFBFBFFFFFFFFFFFFFFFFBFF-\u003e@FFFFFFFFFFBFBFAD--.99;A?////:.9A.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t141\t*\t0\t0\t*\t*\t0\t0\tGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCAAGTGTAGTGCTCGGGGGGG\tBBCCBFFCCCCCGGGGGGGGGGGGGGHHHHHHGGGGGGHHFHGGGGGFGHGGGGGGHHHHHHHHHHFHHHHFHGFFHHGF?ECEFFFFFFHHHHHH?FHHHHHHHHHGFHHHHHHGGGFGHHHHFHHHHHHHHHHGGGFGFGCGGGGHHHHHHHHHHHGGFFHGHHHHHFFHFCGFHCCGHGHCGGHG?DGGGGGFBBFGFBFBBBGGGB0000;CD?DFFAFF9=--;...://;////////.------\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t77\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGGGCTGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCTTGAAGTAGGAACC\tAABABFFFFFFFF4GGGGEBGEFGHGGHGHGHHHGGHFBGFGGGGGHHEFHGEHFHFHEHHHHHGCGGGHFHHCFGHE@1EEEFFGB?EEEEHBGGGCHHGHHBEE@\u003eEAHHFAEBDGGGCEFF?CEGFFHHHHHFHHHFHGHCGCAHHF\u003c..C.D=0CD.GFHHHG.CAGHC:CHB0GGGFFB0:CFA.A-;9.;000CBBFFBFGA.9AA;A;EDDE.ABBFFFF9;BEFFF/BF//9/B//9:B//..\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBBFBBBBBFGGGGGGGGGGHFHHHHHHHHHHHHHHGHHHHGHFHHHGEEGGHHHGHHHHHHHHHHHHEHGHHGGGHGGHGHHHHHGHHHHGHHHHHHHHHHHHHHGHHHHHGEGCGHHHHHGHHHHHHHHHHHHHHGHFFGHGHHGGGDACDFFFFABFFFFFFFFFFD-BC?DA9.DFFBEA==B=?F.;ABBFBFEF-DAF/BFF9/FFFBB/9BFFFFFFF/BFBBFFFFFFF/9FEA?--B/;.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t77\t*\t0\t0\t*\t*\t0\t0\tCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGA\tAABBBBFFFFFFGGGFGGGGGGHHHGGHGGHHHHHHHHHHHGHHGGGGGHHHHHHHHHHHHHHHHHHGGCGDHHHHFGGHHHGGGGGFGGHGGGGHHGGGGHHHHHHGGGGGGHHGGGGDGGFGHGGFCDCHHHHGHHHHGHHFAGFGGEHFGEG.C\u003cEGCECEFCFFHBGHE:GHHGFF0FFFB0CFGGGGAGFFF0;;FFGGGFFGFFCDD.DEFBEDD?9FFFFFFFFFFFFFFF/B./FB///;BF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t141\t*\t0\t0\t*\t*\t0\t0\tGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATT\tBBBBAFFFFFFFGGGGGGGGGGFGHHHHHGHHHHHHHHHHHHCGHHHHHHHGHHHHHHDGHHGGAECHHGHHHHHHHGHHHGHGFHHHHGGHGGHHFHHHHHHFHHHHHHHHH2GHHHHGHGHHFHHGGFGGGHHGHHHHHFHHHHEFHHHHEFGFFHGEHCFGDFDFFFFFCFFFFFFFFFFFFFAFBFFDFFFFFFFFADCF?9?EFBFB9EF-A.;BFFFFFFFBFFFFFFFFFFFFBFFFFFFFFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t77\t*\t0\t0\t*\t*\t0\t0\tGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGCTACAGTTCACTTTAGCTACCTCCAAGTGTTATG\tAA?AAFFFFFFFGGGGGFBFGGGGGGH5GHFEDHHGGGGCGFBGH?AEEHFFEEGHGHHHHGGG?0EHGHHGGGGGC?GEE/EE?GHHHGBHFHHHHHHGHHGHHHGGGCG/A@\u003cFGGHHHHHHHFF/GFDGHHHHHHGFFFGHGGHABGHFHHHHHFHEGDGHGDDEEHHBEDDEGFGHGBFFBFFEGGGEFGFGFB000;F0F;FGGEGGEFFF;-.9//B///B9FFFFF/BFFB/:.BB//;FBFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t141\t*\t0\t0\t*\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTGGAT\tCDDDBFFFFFFFGGGGGGGGGGHHHHHGGHHHGHHHGHHGGGGEHHGGHHHHHHHHHHHHHHGHHGHHHHHGGHHHHHFHHHHGCDCGHHHHHHHHEHHHGHGHHHGFHGGHGGHHHHHHHHFHHHFHHHGHHHHHHHHHFGGHHHHGGGEGAFHHGHHGGHHHHGHFBGFHGHGHGHGGHGGF@DAFEFBECAB=A.0BFFFEDF=A9.@D.-AAFFFA-:-..:.9/0:;0..-..0000::BFB09::\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t77\t*\t0\t0\t*\t*\t0\t0\tTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGA\tABBBBFFFFFFFGGGFGGGGGGHHHGHHGGHBGHGAGFFCAFGHGFFGHHGFHHHHHGGGGGHGHHHHHHHHE3BFFHHHGG0EDF@GHFFGGGHGGGGGGGGGGGGGHHGGEEFHGFHHDDG@DGGGHHGDGGGGGHGG?CF?HHGHHHGHGHHHFFHGGGHHHHGGCD.;0\u003cC;CGGGGEFF/.;0;FFFBF/0;0CFGFFB..9B/;0CBFFBBFFFFBAC?DED9;B9AD;.FFFB/B/;FBA/B//\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBCFCCCCCFGGGGGGGGGGHHHHHHHGHHHHHHHHGHHHHGHDGHHHGGGGHHHHHHHHHHHHHHHGHHHHHGGGEGGHHHHFHHHHHHHHHHHHHHHHHHHHHHGHHGHHGGGGGHHHHHHHHHHHGHHHFHHHHHHGHGHGHGGGGCGGFGGFFFFFFFFFFFFFBFFFFFFFFFFFFFFAFFFFEAEFFFFFFFFFFF9BFFBFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFADAB-/BF.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t77\t*\t0\t0\t*\t*\t0\t0\tCGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTCTGATCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAACAAACACACATCCAGA\t\u003eA33\u003eFFFFFF@FFFGGGGFGGD4EGGGGGHHGFFGHFGGHHHFEFHECFHHHEHGAGBCCGCCEGGHGHEGFBFHFHHHHGGGHFHGHEGGGFEGEGG??@DBGHGGC-@FFGHFHFHB-??DA-DD@9:BEBG@B?E?A.ABBFBFA??F.FF/BFFB/B9B/9;BF9FF9FFFFFFFFFFFFFF?BB?;9EE;-;DDB9//;B-B@;ABFFEFFFF/-.9A.;//9/BF./B/..9.9:...//////\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH\u003c1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n" ], "status": "failure", "test_index": 1, "time_seconds": 37.840543270111084, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/5/4/4/dataset_5446edb0-7667-4005-90e4-2659efffe4bd.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2  Reserving size (388) for bucket 3Getting block 4 of 58Getting block 5 of 58Getting block 6 of 58  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:Getting block 7 of 58Getting block 8 of 58  Calculating Z arrays for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6  Reserving size (388) for bucket 7  Reserving size (388) for bucket 8  Entering block accumulator loop for bucket 2:  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Entering block accumulator loop for bucket 3:  Calculating Z arrays for bucket 6  bucket 1: 10%  Calculating Z arrays for bucket 7  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 4:  bucket 1: 20%  Entering block accumulator loop for bucket 6:  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 3: 10%  bucket 2: 10%  bucket 1: 30%  bucket 5: 10%  bucket 4: 10%  bucket 1: 40%  bucket 3: 20%  bucket 2: 20%  bucket 7: 10%  bucket 6: 10%  bucket 5: 20%  bucket 8: 10%  bucket 1: 50%  bucket 4: 20%  bucket 3: 30%  bucket 7: 20%  bucket 2: 30%  bucket 5: 30%  bucket 1: 60%  bucket 6: 20%  bucket 8: 20%  bucket 7: 30%  bucket 4: 30%  bucket 3: 40%  bucket 5: 40%  bucket 1: 70%  bucket 2: 40%  bucket 7: 40%  bucket 6: 30%  bucket 8: 30%  bucket 5: 50%  bucket 1: 80%  bucket 4: 40%  bucket 3: 50%  bucket 7: 50%  bucket 2: 50%  bucket 5: 60%  bucket 1: 90%  bucket 6: 40%  bucket 8: 40%  bucket 4: 50%  bucket 7: 60%  bucket 5: 70%  bucket 3: 60%  bucket 1: 100%  bucket 2: 60%  bucket 6: 50%  bucket 8: 50%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 7: 70%  bucket 4: 60%  bucket 3: 70%  bucket 2: 70%  bucket 6: 60%  bucket 7: 80%  bucket 8: 60%  bucket 4: 70%  bucket 3: 80%  bucket 2: 80%  bucket 7: 90%  bucket 6: 70%  bucket 8: 70%  bucket 4: 80%  bucket 3: 90%  bucket 7: 100%  Sorting block time: 00:00:00  bucket 2: 90%  bucket 6: 80%  bucket 8: 80%  Sorting block of length 368 for bucket 7  (Using difference cover)Returning block of 356 for bucket 1  bucket 4: 90%  bucket 3: 100%  bucket 2: 100%  bucket 6: 90%  bucket 8: 90%  Sorting block of length 370 for bucket 3  (Using difference cover)  Sorting block of length 165 for bucket 2  (Using difference cover)  bucket 4: 100%  bucket 6: 100%  bucket 5: 80%  bucket 8: 100%  Sorting block of length 328 for bucket 4  (Using difference cover)  Sorting block of length 339 for bucket 6  (Using difference cover)  Sorting block of length 171 for bucket 8  (Using difference cover)  bucket 5: 90%  bucket 5: 100%  Sorting block of length 203 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 340 for bucket 6  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 172 for bucket 8Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%  bucket 9: 20%Getting block 10 of 58  bucket 9: 30%  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  bucket 9: 40%  Entering block accumulator loop for bucket 10:  bucket 9: 50%  bucket 10: 10%  bucket 9: 60%  bucket 10: 20%  bucket 9: 70%Getting block 11 of 58  bucket 10: 30%  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 11  bucket 9: 80%  bucket 10: 40%  Entering block accumulator loop for bucket 11:  bucket 9: 90%  bucket 10: 50%  bucket 11: 10%  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  bucket 10: 60%  bucket 11: 20%  bucket 10: 70%  bucket 11: 30%  bucket 10: 80%  bucket 11: 40%  bucket 10: 90%  bucket 11: 50%  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 11: 60%  bucket 11: 70%  bucket 11: 80%  bucket 11: 90%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 9  Sorting block time: 00:00:00Returning block of 358 for bucket 10  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 12 of 58  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 12: 10%Getting block 13 of 58  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  bucket 12: 20%  Entering block accumulator loop for bucket 13:  bucket 12: 30%  bucket 12: 40%  bucket 13: 10%Getting block 14 of 58Getting block 15 of 58  bucket 13: 20%  bucket 12: 50%  Reserving size (388) for bucket 14  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 14Getting block 16 of 58  Calculating Z arrays for bucket 15  bucket 13: 30%  Reserving size (388) for bucket 16  bucket 12: 60%  Entering block accumulator loop for bucket 14:  Calculating Z arrays for bucket 16  Entering block accumulator loop for bucket 15:  bucket 13: 40%  bucket 12: 70%  Entering block accumulator loop for bucket 16:  bucket 13: 50%  bucket 15: 10%  bucket 14: 10%  bucket 13: 60%  bucket 16: 10%  bucket 12: 80%  bucket 13: 70%  bucket 15: 20%  bucket 16: 20%  bucket 14: 20%  bucket 12: 90%  bucket 13: 80%  bucket 16: 30%  bucket 15: 30%  bucket 13: 90%  bucket 14: 30%  bucket 16: 40%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 13: 100%  bucket 15: 40%  Sorting block of length 282 for bucket 13  (Using difference cover)  bucket 16: 50%  bucket 14: 40%  bucket 15: 50%  bucket 16: 60%  bucket 14: 50%  bucket 16: 70%  bucket 15: 60%  bucket 14: 60%  bucket 16: 80%  bucket 15: 70%  bucket 14: 70%  bucket 16: 90%  Sorting block time: 00:00:00  bucket 15: 80%Returning block of 186 for bucket 12  Sorting block time: 00:00:00  bucket 14: 80%  bucket 16: 100%Returning block of 283 for bucket 13  bucket 15: 90%  Sorting block of length 379 for bucket 16  (Using difference cover)  bucket 14: 90%  bucket 15: 100%  bucket 14: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  Sorting block of length 339 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 16  Sorting block time: 00:00:00Returning block of 242 for bucket 15  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 17 of 58  Reserving size (388) for bucket 17  Calculating Z arrays for bucket 17  Entering block accumulator loop for bucket 17:  bucket 17: 10%  bucket 17: 20%  bucket 17: 30%  bucket 17: 40%  bucket 17: 50%  bucket 17: 60%  bucket 17: 70%  bucket 17: 80%  bucket 17: 90%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17Getting block 18 of 58  Reserving size (388) for bucket 18Getting block 19 of 58Getting block 20 of 58  Calculating Z arrays for bucket 18  Reserving size (388) for bucket 19  Reserving size (388) for bucket 20Getting block 21 of 58  Calculating Z arrays for bucket 19  Calculating Z arrays for bucket 20  Entering block accumulator loop for bucket 18:  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 20:  Entering block accumulator loop for bucket 19:  Entering block accumulator loop for bucket 21:  bucket 20: 10%  bucket 18: 10%  bucket 21: 10%  bucket 19: 10%  bucket 20: 20%  bucket 21: 20%  bucket 20: 30%  bucket 18: 20%  bucket 19: 20%  bucket 21: 30%  bucket 20: 40%  bucket 21: 40%  bucket 18: 30%  bucket 20: 50%  bucket 19: 30%  bucket 21: 50%  bucket 20: 60%  bucket 18: 40%  bucket 19: 40%  bucket 21: 60%  bucket 20: 70%  bucket 21: 70%  bucket 18: 50%  bucket 20: 80%  bucket 19: 50%  bucket 21: 80%  bucket 20: 90%  bucket 18: 60%  bucket 19: 60%  bucket 21: 90%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  bucket 18: 70%  bucket 19: 70%  bucket 18: 80%  bucket 19: 80%  bucket 18: 90%  bucket 19: 90%  Sorting block time: 00:00:00Returning block of 314 for bucket 20  Sorting block time: 00:00:00  bucket 19: 100%  bucket 18: 100%Returning block of 211 for bucket 21  Sorting block of length 334 for bucket 19  (Using difference cover)  Sorting block of length 378 for bucket 18  (Using difference cover)Getting block 22 of 58  Reserving size (388) for bucket 22Getting block 23 of 58  Calculating Z arrays for bucket 22  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  Entering block accumulator loop for bucket 22:  Entering block accumulator loop for bucket 23:  bucket 22: 10%  bucket 23: 10%  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 379 for bucket 18Returning block of 335 for bucket 19  bucket 22: 20%  bucket 23: 20%  bucket 22: 30%  bucket 23: 30%  bucket 22: 40%  bucket 23: 40%  bucket 22: 50%  bucket 23: 50%  bucket 22: 60%  bucket 23: 60%  bucket 22: 70%  bucket 23: 70%  bucket 22: 80%  bucket 23: 80%  bucket 22: 90%  bucket 23: 90%Getting block 24 of 58  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  bucket 22: 100%  bucket 23: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block of length 238 for bucket 23  (Using difference cover)  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 24: 20%  Sorting block time: 00:00:00Returning block of 239 for bucket 23  bucket 24: 30%  bucket 24: 40%  bucket 24: 50%  Sorting block time: 00:00:00Returning block of 387 for bucket 22  bucket 24: 60%  bucket 24: 70%  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 25: 10%  bucket 25: 20%  bucket 25: 30%  bucket 25: 40%  bucket 25: 50%  bucket 25: 60%  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 106 for bucket 25Getting block 26 of 58  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:  bucket 26: 10%Getting block 27 of 58  bucket 26: 20%  Reserving size (388) for bucket 27Getting block 28 of 58Getting block 29 of 58  Calculating Z arrays for bucket 27  Reserving size (388) for bucket 28  bucket 26: 30%  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 27:  Calculating Z arrays for bucket 29  bucket 26: 40%  Entering block accumulator loop for bucket 28:  Entering block accumulator loop for bucket 29:  bucket 26: 50%  bucket 27: 10%  bucket 28: 10%  bucket 29: 10%  bucket 26: 60%  bucket 27: 20%  bucket 29: 20%  bucket 26: 70%  bucket 28: 20%  bucket 26: 80%  bucket 27: 30%  bucket 29: 30%  bucket 28: 30%  bucket 26: 90%  bucket 27: 40%  bucket 28: 40%  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  bucket 29: 40%  bucket 27: 50%  bucket 28: 50%  bucket 29: 50%  bucket 28: 60%  bucket 27: 60%  bucket 29: 60%  Sorting block time: 00:00:00Returning block of 355 for bucket 26  bucket 28: 70%  bucket 27: 70%  bucket 29: 70%  bucket 28: 80%  bucket 27: 80%  bucket 29: 80%  bucket 28: 90%  bucket 27: 90%  bucket 29: 90%  bucket 28: 100%  bucket 29: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  Sorting block of length 289 for bucket 29  (Using difference cover)  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 290 for bucket 29  Sorting block time: 00:00:00Returning block of 254 for bucket 28  Sorting block time: 00:00:00Returning block of 335 for bucket 27Getting block 30 of 58  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 30: 20%  bucket 30: 30%  bucket 30: 40%  bucket 30: 50%  bucket 30: 60%  bucket 30: 70%  bucket 30: 80%  bucket 30: 90%  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)  Sorting block time: 00:00:00Returning block of 346 for bucket 30Getting block 31 of 58  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 31:  bucket 31: 10%  bucket 31: 20%Getting block 32 of 58  bucket 31: 30%  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  bucket 31: 40%  Entering block accumulator loop for bucket 32:  bucket 31: 50%  bucket 31: 60%  bucket 32: 10%  bucket 31: 70%  bucket 31: 80%  bucket 32: 20%  bucket 31: 90%  bucket 32: 30%  bucket 31: 100%  Sorting block of length 377 for bucket 31  (Using di..me: 00:00:00Returning block of 350 for bucket 23Getting block 24 of 57  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 24: 20%  bucket 24: 30%  bucket 24: 40%  bucket 24: 50%  bucket 24: 60%  bucket 24: 70%  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 25 of 57  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25Getting block 26 of 57  Entering block accumulator loop for bucket 25:  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26Getting block 27 of 57  Reserving size (388) for bucket 27  Entering block accumulator loop for bucket 26:  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:  bucket 25: 10%  bucket 26: 10%  bucket 27: 10%  bucket 27: 20%  bucket 25: 20%  bucket 27: 30%  bucket 26: 20%  bucket 25: 30%  bucket 27: 40%  bucket 26: 30%  bucket 25: 40%  bucket 27: 50%  bucket 26: 40%  bucket 25: 50%  bucket 27: 60%  bucket 27: 70%  bucket 26: 50%  bucket 25: 60%  bucket 27: 80%  bucket 26: 60%  bucket 25: 70%  bucket 27: 90%  bucket 26: 70%  bucket 27: 100%  bucket 25: 80%  Sorting block of length 359 for bucket 27  (Using difference cover)  bucket 26: 80%  bucket 25: 90%  bucket 26: 90%  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 360 for bucket 27  Sorting block time: 00:00:00Returning block of 287 for bucket 25  Sorting block time: 00:00:00Returning block of 385 for bucket 26Getting block 28 of 57  Reserving size (388) for bucket 28Getting block 29 of 57  Calculating Z arrays for bucket 28  Reserving size (388) for bucket 29  Entering block accumulator loop for bucket 28:  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 29:  bucket 28: 10%  bucket 29: 10%  bucket 29: 20%  bucket 28: 20%  bucket 29: 30%  bucket 28: 30%  bucket 29: 40%  bucket 28: 40%  bucket 29: 50%  bucket 29: 60%  bucket 28: 50%  bucket 29: 70%  bucket 28: 60%  bucket 29: 80%  bucket 28: 70%  bucket 29: 90%  bucket 28: 80%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  bucket 28: 90%  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 30 of 57  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 30: 20%  bucket 30: 30%  bucket 30: 40%  bucket 30: 50%  bucket 30: 60%  bucket 30: 70%  bucket 30: 80%  bucket 30: 90%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  Sorting block time: 00:00:00Returning block of 258 for bucket 30Getting block 31 of 57  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 31:  bucket 31: 10%  bucket 31: 20%  bucket 31: 30%  bucket 31: 40%  bucket 31: 50%  bucket 31: 60%  bucket 31: 70%  bucket 31: 80%  bucket 31: 90%  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 32 of 57  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 32:  bucket 32: 10%Getting block 33 of 57  bucket 32: 20%  Reserving size (388) for bucket 33  bucket 32: 30%  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 33:  bucket 32: 40%  bucket 33: 10%  bucket 32: 50%  bucket 32: 60%  bucket 33: 20%  bucket 32: 70%  bucket 33: 30%  bucket 32: 80%  bucket 32: 90%  bucket 33: 40%  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)  bucket 33: 50%  bucket 33: 60%  Sorting block time: 00:00:00Returning block of 220 for bucket 32  bucket 33: 70%  bucket 33: 80%  bucket 33: 90%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 33Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34  Entering block accumulator loop for bucket 34:  bucket 34: 10%  bucket 34: 20%  bucket 34: 30%Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  bucket 34: 40%  Entering block accumulator loop for bucket 35:  bucket 34: 50%  bucket 35: 10%  bucket 35: 20%  bucket 34: 60%  bucket 35: 30%  bucket 34: 70%  bucket 35: 40%  bucket 34: 80%  bucket 35: 50%  bucket 34: 90%  bucket 35: 60%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  bucket 35: 70%  bucket 35: 80%  bucket 35: 90%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 34  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36  Entering block accumulator loop for bucket 36:  bucket 36: 10%  bucket 36: 20%  bucket 36: 30%  bucket 36: 40%  bucket 36: 50%  bucket 36: 60%  bucket 36: 70%  bucket 36: 80%  bucket 36: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)Getting block 37 of 57  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  Entering block accumulator loop for bucket 37:  bucket 37: 10%  Sorting block time: 00:00:00Returning block of 151 for bucket 36  bucket 37: 20%  bucket 37: 30%  bucket 37: 40%  bucket 37: 50%  bucket 37: 60%  bucket 37: 70%  bucket 37: 80%  bucket 37: 90%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  Sorting block time: 00:00:00Returning block of 268 for bucket 37Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38Getting block 39 of 57  Entering block accumulator loop for bucket 38:  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39Getting block 40 of 57  Entering block accumulator loop for bucket 39:  Reserving size (388) for bucket 40  bucket 38: 10%  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 40:  bucket 39: 10%  bucket 38: 20%  bucket 40: 10%  bucket 39: 20%  bucket 38: 30%  bucket 40: 20%  bucket 39: 30%  bucket 38: 40%  bucket 40: 30%  bucket 39: 40%  bucket 38: 50%  bucket 40: 40%  bucket 39: 50%  bucket 38: 60%  bucket 40: 50%  bucket 39: 60%  bucket 38: 70%  bucket 40: 60%  bucket 39: 70%  bucket 38: 80%  bucket 40: 70%  bucket 39: 80%  bucket 38: 90%  bucket 40: 80%  bucket 39: 90%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 40: 90%  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  Sorting block time: 00:00:00Returning block of 338 for bucket 38  Sorting block time: 00:00:00Returning block of 388 for bucket 39  Sorting block time: 00:00:00Returning block of 380 for bucket 40Getting block 41 of 57  Reserving size (388) for bucket 41Getting block 42 of 57Getting block 43 of 57  Calculating Z arrays for bucket 41  Reserving size (388) for bucket 42  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 42  Entering block accumulator loop for bucket 41:  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 42:  Entering block accumulator loop for bucket 43:  bucket 41: 10%  bucket 43: 10%  bucket 42: 10%  bucket 43: 20%  bucket 41: 20%  bucket 42: 20%  bucket 43: 30%  bucket 41: 30%  bucket 43: 40%  bucket 42: 30%  bucket 43: 50%  bucket 41: 40%  bucket 43: 60%  bucket 42: 40%  bucket 41: 50%  bucket 43: 70%  bucket 42: 50%  bucket 43: 80%  bucket 41: 60%  bucket 43: 90%  bucket 42: 60%  bucket 41: 70%  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  bucket 42: 70%  bucket 41: 80%  bucket 42: 80%  bucket 41: 90%  Sorting block time: 00:00:00Returning block of 322 for bucket 43  bucket 42: 90%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42  Sorting block time: 00:00:00Returning block of 331 for bucket 41Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:Getting block 45 of 57  Reserving size (388) for bucket 45  bucket 44: 10%  Calculating Z arrays for bucket 45  Entering block accumulator loop for bucket 45:  bucket 44: 20%  bucket 44: 30%  bucket 45: 10%  bucket 44: 40%  bucket 45: 20%Getting block 46 of 57  bucket 44: 50%  Reserving size (388) for bucket 46  bucket 45: 30%  Calculating Z arrays for bucket 46  bucket 44: 60%  Entering block accumulator loop for bucket 46:  bucket 45: 40%  bucket 44: 70%  bucket 45: 50%  bucket 46: 10%  bucket 45: 60%  bucket 46: 20%  bucket 44: 80%  bucket 45: 70%  bucket 46: 30%  bucket 45: 80%  bucket 44: 90%  bucket 46: 40%  bucket 45: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  bucket 46: 50%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  bucket 46: 60%  bucket 46: 70%  bucket 46: 80%  Sorting block time: 00:00:00Returning block of 367 for bucket 44  bucket 46: 90%  Sorting block time: 00:00:00Returning block of 366 for bucket 45  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 47:  Entering block accumulator loop for bucket 48:  bucket 47: 10%  bucket 48: 10%  bucket 47: 20%  bucket 48: 20%  bucket 47: 30%  bucket 48: 30%  bucket 47: 40%  bucket 48: 40%  bucket 47: 50%  bucket 48: 50%  bucket 47: 60%  bucket 48: 60%  bucket 47: 70%  bucket 48: 70%  bucket 47: 80%  bucket 47: 90%  bucket 48: 80%  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  bucket 48: 90%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block time: 00:00:00Returning block of 218 for bucket 47  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  Entering block accumulator loop for bucket 49:  bucket 49: 10%Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  bucket 49: 20%  Entering block accumulator loop for bucket 50:  bucket 49: 30%  bucket 50: 10%Getting block 51 of 57  bucket 49: 40%  Reserving size (388) for bucket 51  bucket 50: 20%  Calculating Z arrays for bucket 51  bucket 49: 50%  bucket 50: 30%  Entering block accumulator loop for bucket 51:  bucket 50: 40%  bucket 51: 10%  bucket 49: 60%Getting block 52 of 57  Reserving size (388) for bucket 52  Calculating Z arrays for bucket 52  bucket 50: 50%  bucket 51: 20%  bucket 49: 70%  Entering block accumulator loop for bucket 52:  bucket 50: 60%  bucket 49: 80%  bucket 51: 30%  bucket 52: 10%  bucket 50: 70%  bucket 49: 90%  bucket 52: 20%  bucket 51: 40%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  bucket 52: 30%  bucket 50: 80%  bucket 51: 50%  bucket 52: 40%  bucket 50: 90%  bucket 51: 60%  bucket 52: 50%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  bucket 51: 70%  bucket 52: 60%  Sorting block time: 00:00:00Returning block of 113 for bucket 49  bucket 51: 80%  bucket 52: 70%  bucket 51: 90%  bucket 52: 80%  bucket 51: 100%  Sorting block time: 00:00:00  bucket 52: 90%  Sorting block of length 350 for bucket 51  (Using difference cover)Returning block of 276 for bucket 50  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 51  Sorting block time: 00:00:00Returning block of 379 for bucket 52Getting block 53 of 57  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 53:  Entering block accumulator loop for bucket 54:  bucket 53: 10%  bucket 54: 10%  bucket 53: 20%  bucket 54: 20%  bucket 53: 30%  bucket 54: 30%  bucket 53: 40%  bucket 54: 40%  bucket 53: 50%  bucket 54: 50%  bucket 53: 60%  bucket 54: 60%  bucket 53: 70%  bucket 54: 70%  bucket 53: 80%  bucket 54: 80%  bucket 53: 90%  bucket 54: 90%  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  Sorting block time: 00:00:00Returning block of 238 for bucket 54  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 55 of 57  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55  Entering block accumulator loop for bucket 55:  bucket 55: 10%Getting block 56 of 57  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  bucket 55: 20%  Entering block accumulator loop for bucket 56:  bucket 55: 30%  bucket 56: 10%  bucket 55: 40%  bucket 56: 20%  bucket 55: 50%  bucket 56: 30%  bucket 55: 60%  bucket 56: 40%  bucket 56: 50%  bucket 56: 60%  bucket 55: 70%  bucket 56: 70%  bucket 55: 80%  bucket 56: 80%  bucket 55: 90%  bucket 56: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56  Sorting block time: 00:00:00Returning block of 345 for bucket 55Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #3)" name="2" time="34.59119987487793">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "04b281932fef923e",   "src": "hda"  },  "library|input_2": {   "id": "e1e40d9ad60b67f4",   "src": "hda"  },  "library|paired_options|paired_options_selector": "no",  "library|type": "paired",  "library|unaligned_file": false,  "reference_genome|own_file": {   "id": "e2de107b42bf4d18",   "src": "hda"  },  "reference_genome|source": "history",  "rg|PL": "CAPILLARY",  "rg|read_group_id_conditional|ID": "rg1",  "rg|rg_selector": "set" }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/3/7/1/dataset_3717ca74-e3f9-4cc7-b02b-7e09260cb546.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/3/7/1/dataset_3717ca74-e3f9-4cc7-b02b-7e09260cb546.dat\u0027 genome.fa \u0026\u0026   ln -f -s \u0027/galaxy/server/database/objects/a/7/4/dataset_a743eff1-5418-485d-9cbd-1cfe0b58b23f.dat\u0027 input_f.fastq \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/8/c/b/dataset_8cb95f6a-a1e1-475a-8db3-18b4cc94125f.dat\u0027 input_r.fastq \u0026\u0026   bowtie2  -p ${GALAXY_SLOTS:-4}  -x \u0027genome\u0027   -1 \u0027input_f.fastq\u0027 -2 \u0027input_r.fastq\u0027                        --rg-id \"rg1\"  --rg \"PL:CAPILLARY\"              | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o \u0027/galaxy/server/database/objects/3/3/f/dataset_33f27e98-e42a-46b6-aa2d-0f00a1876018.dat\u0027",  "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}",  "create_time": "2023-02-07T23:14:45.959482",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-l8m4t",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "4cdc8b629b957646",  "inputs": {   "input_1": {    "id": "04b281932fef923e",    "src": "hda",    "uuid": "a743eff1-5418-485d-9cbd-1cfe0b58b23f"   },   "input_2": {    "id": "e1e40d9ad60b67f4",    "src": "hda",    "uuid": "8cb95f6a-a1e1-475a-8db3-18b4cc94125f"   },   "own_file": {    "id": "e2de107b42bf4d18",    "src": "hda",    "uuid": "3717ca74-e3f9-4cc7-b02b-7e09260cb546"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811690.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:14:50"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811689.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:14:49"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "2eaf440e1cdf3a45",    "src": "hda",    "uuid": "33f27e98-e42a-46b6-aa2d-0f00a1876018"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 744, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 745, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 746, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": null, \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": null, \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": null, \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}",   "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}",   "save_mapping_stats": "\"false\""  },  "state": "ok",  "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/3/7/1/dataset_3717ca74-e3f9-4cc7-b02b-7e09260cb546.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\nGetting block 5 of 58\nGetting block 6 of 58\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\nGetting block 7 of 58\nGetting block 8 of 58\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 3:\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 4:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 5: 10%\n  bucket 1: 30%\n  bucket 6: 10%\n  bucket 2: 20%\n  bucket 3: 20%\n  bucket 7: 10%\n  bucket 1: 40%\n  bucket 4: 20%\n  bucket 8: 10%\n  bucket 6: 20%\n  bucket 5: 20%\n  bucket 2: 30%\n  bucket 3: 30%\n  bucket 1: 50%\n  bucket 7: 20%\n  bucket 4: 30%\n  bucket 6: 30%\n  bucket 8: 20%\n  bucket 5: 30%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 3: 40%\n  bucket 7: 30%\n  bucket 6: 40%\n  bucket 4: 40%\n  bucket 8: 30%\n  bucket 5: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 3: 50%\n  bucket 6: 50%\n  bucket 7: 40%\n  bucket 4: 50%\n  bucket 1: 80%\n  bucket 8: 40%\n  bucket 5: 50%\n  bucket 2: 60%\n  bucket 6: 60%\n  bucket 3: 60%\n  bucket 7: 50%\n  bucket 1: 90%\n  bucket 4: 60%\n  bucket 8: 50%\n  bucket 5: 60%\n  bucket 6: 70%\n  bucket 2: 70%\n  bucket 1: 100%\n  bucket 3: 70%\n  bucket 7: 60%\n  bucket 4: 70%\n  bucket 8: 60%\n  bucket 6: 80%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 5: 70%\n  bucket 2: 80%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 6: 90%\n  bucket 7: 70%\n  bucket 8: 70%\n  bucket 5: 80%\n  bucket 2: 90%\n  bucket 3: 90%\n  bucket 6: 100%\n  bucket 4: 90%\n  bucket 7: 80%\n  bucket 8: 80%\n  bucket 5: 90%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 2: 100%\n  Sorting block time: 00:00:00\n  bucket 3: 100%\n  bucket 4: 100%\n  bucket 7: 90%\n  bucket 8: 90%\n  bucket 5: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block of length 328 for bucket 4\n  Sorting block time: 00:00:00\n  (Using difference cover)\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 7: 100%\n  bucket 8: 100%\nReturning block of 340 for bucket 6\nReturning block of 166 for bucket 2\nReturning block of 371 for bucket 3\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\nGetting block 10 of 58\n  Calculating Z arrays for bucket 9\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\nGetting block 11 of 58\n  bucket 9: 10%\n  Reserving size (388) for bucket 11\n  bucket 10: 10%\n  Calculating Z arrays for bucket 11\n  bucket 9: 20%\n  bucket 10: 20%\n  Entering block accumulator loop for bucket 11:\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 11: 10%\n  bucket 9: 40%\n  bucket 10: 40%\n  bucket 11: 20%\n  bucket 9: 50%\n  bucket 10: 50%\n  bucket 11: 30%\n  bucket 9: 60%\n  bucket 10: 60%\n  bucket 11: 40%\n  bucket 9: 70%\n  bucket 10: 70%\n  bucket 11: 50%\n  bucket 9: 80%\n  bucket 10: 80%\n  bucket 11: 60%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 11: 70%\n  bucket 9: 100%\n  bucket 10: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\nGetting block 13 of 58\n  bucket 12: 20%\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 30%\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 40%\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 12: 50%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 12: 60%\n  bucket 13: 50%\n  bucket 12: 70%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 12: 80%\n  bucket 13: 80%\n  bucket 12: 90%\n  bucket 13: 90%\n  bucket 13: 100%\n  bucket 12: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\nGetting block 15 of 58\n  Entering block accumulator loop for bucket 14:\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 14: 10%\n  bucket 15: 10%\n  bucket 14: 20%\n  bucket 15: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 15: 30%\n  bucket 14: 50%\n  bucket 15: 40%\n  bucket 14: 60%\n  bucket 15: 50%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 15: 60%\n  bucket 14: 100%\n  bucket 15: 70%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\nGetting block 16 of 58\n  Reserving size (388) for bucket 16\nGetting block 17 of 58\n  Calculating Z arrays for bucket 16\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  Entering block accumulator loop for bucket 16:\n  Entering block accumulator loop for bucket 17:\n  bucket 16: 10%\n  bucket 17: 10%\n  bucket 17: 20%\n  bucket 16: 20%\n  bucket 17: 30%\n  bucket 17: 40%\n  bucket 16: 30%\n  bucket 17: 50%\n  bucket 16: 40%\n  bucket 17: 60%\n  bucket 17: 70%\n  bucket 16: 50%\n  bucket 17: 80%\n  bucket 16: 60%\n  bucket 17: 90%\n  bucket 16: 70%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 16: 80%\n  bucket 16: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\nGetting block 19 of 58\n  Calculating Z arrays for bucket 18\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\n  Entering block accumulator loop for bucket 18:\n  Entering block accumulator loop for bucket 19:\n  bucket 19: 10%\n  bucket 18: 10%\n  bucket 19: 20%\n  bucket 18: 20%\n  bucket 19: 30%\n  bucket 18: 30%\n  bucket 19: 40%\n  bucket 18: 40%\n  bucket 19: 50%\n  bucket 18: 50%\n  bucket 19: 60%\n  bucket 18: 60%\n  bucket 19: 70%\n  bucket 18: 70%\n  bucket 19: 80%\n  bucket 18: 80%\n  bucket 19: 90%\n  bucket 19: 100%\n  bucket 18: 90%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 20:\n  bucket 20: 10%\n  bucket 20: 20%\n  bucket 20: 30%\n  bucket 20: 40%\n  bucket 20: 50%\nGetting block 21 of 58\n  bucket 20: 60%\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 21:\n  bucket 20: 70%\n  bucket 20: 80%\n  bucket 21: 10%\n  bucket 20: 90%\n  bucket 21: 20%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  bucket 21: 30%\n  bucket 21: 40%\n  bucket 21: 50%\n  bucket 21: 60%\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  bucket 21: 70%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\nGetting block 23 of 58\nGetting block 22 of 58\n  Reserving size (388) for bucket 23\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 23\n  Calculating Z arrays for bucket 22\nGetting block 24 of 58\nGetting block 25 of 58\n  Reserving size (388) for bucket 24\n  Entering block accumulator loop for bucket 22:\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 24\n  Calculating Z arrays for bucket 25\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\n  Entering block accumulator loop for bucket 24:\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 25:\n  Entering block accumulator loop for bucket 23:\n  bucket 22: 10%\n  Entering block accumulator loop for bucket 26:\n  bucket 24: 10%\n  bucket 25: 10%\n  bucket 22: 20%\n  bucket 24: 20%\n  bucket 23: 10%\n  bucket 26: 10%\n  bucket 25: 20%\n  bucket 24: 30%\n  bucket 22: 30%\n  bucket 25: 30%\n  bucket 23: 20%\n  bucket 26: 20%\n  bucket 24: 40%\n  bucket 25: 40%\n  bucket 24: 50%\n  bucket 22: 40%\n  bucket 25: 50%\n  bucket 26: 30%\n  bucket 24: 60%\n  bucket 22: 50%\n  bucket 25: 60%\n  bucket 24: 70%\n  bucket 26: 40%\n  bucket 25: 70%\n  bucket 24: 80%\n  bucket 23: 30%\n  bucket 25: 80%\n  bucket 26: 50%\n  bucket 24: 90%\n  bucket 25: 90%\n  bucket 22: 60%\n  bucket 23: 40%\n  bucket 24: 100%\n  bucket 26: 60%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 23: 50%\n  bucket 26: 70%\n  bucket 22: 70%\n  bucket 23: 60%\n  bucket 26: 80%\n  bucket 22: 80%\n  bucket 23: 70%\n  bucket 26: 90%\n  Sorting block time: 00:00:00\n  bucket 22: 90%\nReturning block of 106 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\n  bucket 23: 80%\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\nGetting block 27 of 58\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  bucket 23: 90%\n  Entering block accumulator loop for bucket 27:\n  bucket 23: 100%\n  bucket 27: 10%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 27: 20%\n  bucket 27: 30%\n  bucket 27: 40%\n  bucket 27: 50%\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 27: 80%\n  bucket 27: 90%\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\nGetting block 29 of 58\n  Entering block accumulator loop for bucket 28:\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 28: 20%\n  bucket 29: 10%\n  bucket 28: 30%\n  bucket 29: 20%\n  bucket 28: 40%\n  bucket 29: 30%\n  bucket 28: 50%\n  bucket 29: 40%\n  bucket 28: 60%\n  bucket 29: 50%\n  bucket 28: 70%\n  bucket 29: 60%\n  bucket 28: 80%\n  bucket 29: 70%\n  bucket 28: 90%\n  bucket 29: 80%\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\nGetting block 30 of 58\nGetting block 31 of 58\n  Reserving size (388) for bucket 30\n  Reserving size (388) for bucket 31\nGetting block 32 of 58\n  Calculating Z arrays for bucket 30\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 30:\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 10%\n  bucket 30: 10%\n  bucket 31: 20%\n  bucket 32: 10%\n  bucket 30: 20%\n  bucket 31: 30%\n  bucket 30: 30%\n  bucket 32: 20%\n  bucket 31: 40%\n  bucket 30: 40%\n  bucket 32: 30%\n  bucket 31: 50%\n  bucket 30: 50%\n  bucket 32: 40%\n  bucket 31: 60%\n  bucket 32: 50%\n  bucket 31: 70%\n  bucket 30: 60%\n  bucket 32: 60%\n  bucket 31: 80%\n  bucket 30: 70%\n  bucket 32: 70%\n  bucket 30: 80%\n  bucket 31: 90%\n  bucket 32: 80%\n  bucket 30: 90%\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using difference cover)\n  bucket 32: 90%\n  bucket 30: 100%\n  Sorting block of le\n..\nme: 00:00:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\nGetting block 26 of 57\n  Entering block accumulator loop for bucket 25:\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  bucket 24: 10%\n  Entering block accumulator loop for bucket 26:\n  bucket 25: 10%\n  bucket 24: 20%\n  bucket 26: 10%\n  bucket 25: 20%\n  bucket 24: 30%\n  bucket 26: 20%\n  bucket 25: 30%\n  bucket 26: 30%\n  bucket 24: 40%\n  bucket 25: 40%\n  bucket 26: 40%\n  bucket 25: 50%\n  bucket 24: 50%\n  bucket 26: 50%\n  bucket 25: 60%\n  bucket 26: 60%\n  bucket 24: 60%\n  bucket 25: 70%\n  bucket 26: 70%\n  bucket 25: 80%\n  bucket 24: 70%\n  bucket 26: 80%\n  bucket 25: 90%\n  bucket 24: 80%\n  bucket 26: 90%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 24: 90%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 27: 10%\n  bucket 27: 20%\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  bucket 27: 30%\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 28:\n  bucket 27: 40%\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 27: 50%\n  bucket 28: 20%\n  bucket 29: 20%\n  bucket 27: 60%\n  bucket 28: 30%\n  bucket 29: 30%\n  bucket 27: 70%\n  bucket 28: 40%\n  bucket 29: 40%\n  bucket 27: 80%\n  bucket 28: 50%\n  bucket 29: 50%\n  bucket 28: 60%\n  bucket 27: 90%\n  bucket 29: 60%\n  bucket 28: 70%\n  bucket 29: 70%\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  bucket 28: 80%\n  bucket 28: 90%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\nGetting block 31 of 57\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  bucket 30: 20%\n  Entering block accumulator loop for bucket 31:\n  bucket 30: 30%\n  bucket 31: 10%\n  bucket 30: 40%\n  bucket 31: 20%\n  bucket 30: 50%\n  bucket 31: 30%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 31: 40%\n  bucket 30: 80%\n  bucket 31: 50%\n  bucket 30: 90%\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  bucket 31: 60%\nGetting block 33 of 57\n  Entering block accumulator loop for bucket 32:\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  bucket 30: 100%\n  bucket 31: 70%\n  Entering block accumulator loop for bucket 33:\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  bucket 32: 10%\n  bucket 31: 80%\n  bucket 33: 10%\n  bucket 32: 20%\n  bucket 31: 90%\n  bucket 33: 20%\n  bucket 32: 30%\n  bucket 31: 100%\n  Sorting block time: 00:00:00\n  bucket 33: 30%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\nReturning block of 258 for bucket 30\n  bucket 32: 40%\n  bucket 33: 40%\n  bucket 33: 50%\n  bucket 32: 50%\n  bucket 33: 60%\n  bucket 32: 60%\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\n  bucket 33: 70%\n  bucket 32: 70%\n  bucket 33: 80%\n  bucket 33: 90%\n  bucket 32: 80%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 32: 90%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Sorting block time: 00:00:00\n  Calculating Z arrays for bucket 34\nReturning block of 388 for bucket 33\n  Entering block accumulator loop for bucket 34:\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\n  bucket 34: 10%\n  bucket 34: 20%\n  bucket 34: 30%\n  bucket 34: 40%\n  bucket 34: 50%\n  bucket 34: 60%\n  bucket 34: 70%\n  bucket 34: 80%\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 35: 60%\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\nGetting block 37 of 57\n  Entering block accumulator loop for bucket 36:\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 37:\n  bucket 36: 10%\n  bucket 37: 10%\n  bucket 36: 20%\n  bucket 37: 20%\n  bucket 37: 30%\n  bucket 36: 30%\n  bucket 37: 40%\n  bucket 37: 50%\n  bucket 36: 40%\n  bucket 37: 60%\n  bucket 36: 50%\n  bucket 37: 70%\n  bucket 36: 60%\n  bucket 37: 80%\n  bucket 37: 90%\n  bucket 36: 70%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\nGetting block 39 of 57\n  bucket 38: 10%\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 20%\n  bucket 39: 10%\n  bucket 38: 30%\n  bucket 39: 20%\n  bucket 38: 40%\n  bucket 39: 30%\n  bucket 38: 50%\n  bucket 39: 40%\n  bucket 39: 50%\n  bucket 38: 60%\n  bucket 39: 60%\n  bucket 38: 70%\n  bucket 39: 70%\n  bucket 38: 80%\n  bucket 39: 80%\n  bucket 38: 90%\n  bucket 39: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\nGetting block 41 of 57\nGetting block 42 of 57\n  Calculating Z arrays for bucket 40\n  Reserving size (388) for bucket 41\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 41\n  Calculating Z arrays for bucket 42\n  Entering block accumulator loop for bucket 40:\n  Entering block accumulator loop for bucket 41:\n  Entering block accumulator loop for bucket 42:\n  bucket 41: 10%\n  bucket 42: 10%\n  bucket 40: 10%\n  bucket 41: 20%\n  bucket 42: 20%\n  bucket 40: 20%\n  bucket 41: 30%\n  bucket 42: 30%\n  bucket 41: 40%\n  bucket 42: 40%\n  bucket 40: 30%\n  bucket 41: 50%\n  bucket 42: 50%\n  bucket 40: 40%\n  bucket 41: 60%\n  bucket 42: 60%\n  bucket 40: 50%\n  bucket 41: 70%\n  bucket 42: 70%\n  bucket 40: 60%\n  bucket 41: 80%\n  bucket 42: 80%\n  bucket 40: 70%\n  bucket 41: 90%\n  bucket 42: 90%\n  bucket 40: 80%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  bucket 40: 90%\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 43:\n  bucket 43: 10%\n  bucket 43: 20%\n  bucket 43: 30%\n  bucket 43: 40%\n  bucket 43: 50%\n  bucket 43: 60%\n  bucket 43: 70%\n  bucket 43: 80%\n  bucket 43: 90%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 44: 10%\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 44: 40%\n  bucket 44: 50%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 45: 10%\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 45: 40%\n  bucket 45: 50%\n  bucket 45: 60%\n  bucket 45: 70%\n  bucket 45: 80%\n  bucket 45: 90%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\nGetting block 46 of 57\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  Entering block accumulator loop for bucket 46:\n  bucket 46: 10%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 20%\n  bucket 46: 30%\n  bucket 46: 40%\n  bucket 46: 50%\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 47:\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\n  bucket 47: 10%\n  bucket 47: 20%\n  bucket 47: 30%\n  bucket 47: 40%\n  bucket 47: 50%\n  bucket 47: 60%\n  bucket 47: 70%\n  bucket 47: 80%\n  bucket 47: 90%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 48: 10%\n  bucket 48: 20%\n  bucket 48: 30%\n  bucket 48: 40%\n  bucket 48: 50%\n  bucket 48: 60%\n  bucket 48: 70%\n  bucket 48: 80%\n  bucket 48: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\n  bucket 49: 20%\n  bucket 49: 30%\nGetting block 50 of 57\n  bucket 49: 40%\n  Reserving size (388) for bucket 50\nGetting block 51 of 57\n  Calculating Z arrays for bucket 50\n  bucket 49: 50%\n  Reserving size (388) for bucket 51\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 60%\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 49: 70%\n  bucket 50: 10%\n  bucket 49: 80%\n  bucket 51: 10%\n  bucket 49: 90%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 51: 20%\n  bucket 50: 20%\n  bucket 51: 30%\n  bucket 50: 30%\n  bucket 51: 40%\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  bucket 50: 40%\n  bucket 51: 50%\n  bucket 50: 50%\n  bucket 51: 60%\n  bucket 50: 60%\n  bucket 51: 70%\n  bucket 50: 70%\n  bucket 51: 80%\n  bucket 51: 90%\n  bucket 50: 80%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  bucket 50: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  Calculating Z arrays for bucket 52\n  Entering block accumulator loop for bucket 52:\nGetting block 53 of 57\n  bucket 52: 10%\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  bucket 52: 20%\n  Entering block accumulator loop for bucket 53:\n  bucket 52: 30%\n  bucket 52: 40%\n  bucket 53: 10%\n  bucket 52: 50%\n  bucket 53: 20%\n  bucket 52: 60%\n  bucket 53: 30%\n  bucket 52: 70%\n  bucket 53: 40%\n  bucket 52: 80%\n  bucket 53: 50%\n  bucket 52: 90%\n  bucket 53: 60%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  bucket 53: 70%\n  bucket 53: 80%\n  bucket 53: 90%\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 54: 10%\nGetting block 55 of 57\n  bucket 54: 20%\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\n  bucket 54: 30%\n  bucket 54: 40%\n  bucket 55: 10%\n  bucket 54: 50%\n  bucket 55: 20%\n  bucket 55: 30%\n  bucket 54: 60%\n  bucket 55: 40%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 55: 50%\n  bucket 54: 90%\n  bucket 55: 60%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 55: 70%\n  bucket 55: 80%\n  bucket 55: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  Sorting block time: 00:00:00\n  (Using difference cover)\nReturning block of 238 for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 56 of 57\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 56:\n  bucket 56: 10%\n  bucket 56: 20%\n  bucket 56: 30%\n  bucket 56: 40%\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 56: 70%\n  bucket 56: 80%\n  bucket 56: 90%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0",  "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/3/7/1/dataset_3717ca74-e3f9-4cc7-b02b-7e09260cb546.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\nGetting block 5 of 58\nGetting block 6 of 58\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\nGetting block 7 of 58\nGetting block 8 of 58\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 3:\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 4:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 5: 10%\n  bucket 1: 30%\n  bucket 6: 10%\n  bucket 2: 20%\n  bucket 3: 20%\n  bucket 7: 10%\n  bucket 1: 40%\n  bucket 4: 20%\n  bucket 8: 10%\n  bucket 6: 20%\n  bucket 5: 20%\n  bucket 2: 30%\n  bucket 3: 30%\n  bucket 1: 50%\n  bucket 7: 20%\n  bucket 4: 30%\n  bucket 6: 30%\n  bucket 8: 20%\n  bucket 5: 30%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 3: 40%\n  bucket 7: 30%\n  bucket 6: 40%\n  bucket 4: 40%\n  bucket 8: 30%\n  bucket 5: 40%\n  bucket 1: 70%\n  bucket 2: 50%\n  bucket 3: 50%\n  bucket 6: 50%\n  bucket 7: 40%\n  bucket 4: 50%\n  bucket 1: 80%\n  bucket 8: 40%\n  bucket 5: 50%\n  bucket 2: 60%\n  bucket 6: 60%\n  bucket 3: 60%\n  bucket 7: 50%\n  bucket 1: 90%\n  bucket 4: 60%\n  bucket 8: 50%\n  bucket 5: 60%\n  bucket 6: 70%\n  bucket 2: 70%\n  bucket 1: 100%\n  bucket 3: 70%\n  bucket 7: 60%\n  bucket 4: 70%\n  bucket 8: 60%\n  bucket 6: 80%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 5: 70%\n  bucket 2: 80%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 6: 90%\n  bucket 7: 70%\n  bucket 8: 70%\n  bucket 5: 80%\n  bucket 2: 90%\n  bucket 3: 90%\n  bucket 6: 100%\n  bucket 4: 90%\n  bucket 7: 80%\n  bucket 8: 80%\n  bucket 5: 90%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 2: 100%\n  Sorting block time: 00:00:00\n  bucket 3: 100%\n  bucket 4: 100%\n  bucket 7: 90%\n  bucket 8: 90%\n  bucket 5: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block of length 328 for bucket 4\n  Sorting block time: 00:00:00\n  (Using difference cover)\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 7: 100%\n  bucket 8: 100%\nReturning block of 340 for bucket 6\nReturning block of 166 for bucket 2\nReturning block of 371 for bucket 3\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\nGetting block 10 of 58\n  Calculating Z arrays for bucket 9\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\nGetting block 11 of 58\n  bucket 9: 10%\n  Reserving size (388) for bucket 11\n  bucket 10: 10%\n  Calculating Z arrays for bucket 11\n  bucket 9: 20%\n  bucket 10: 20%\n  Entering block accumulator loop for bucket 11:\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 11: 10%\n  bucket 9: 40%\n  bucket 10: 40%\n  bucket 11: 20%\n  bucket 9: 50%\n  bucket 10: 50%\n  bucket 11: 30%\n  bucket 9: 60%\n  bucket 10: 60%\n  bucket 11: 40%\n  bucket 9: 70%\n  bucket 10: 70%\n  bucket 11: 50%\n  bucket 9: 80%\n  bucket 10: 80%\n  bucket 11: 60%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 11: 70%\n  bucket 9: 100%\n  bucket 10: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 80%\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\nGetting block 13 of 58\n  bucket 12: 20%\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 30%\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 40%\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 12: 50%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 12: 60%\n  bucket 13: 50%\n  bucket 12: 70%\n  bucket 13: 60%\n  bucket 13: 70%\n  bucket 12: 80%\n  bucket 13: 80%\n  bucket 12: 90%\n  bucket 13: 90%\n  bucket 13: 100%\n  bucket 12: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\nGetting block 15 of 58\n  Entering block accumulator loop for bucket 14:\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 14: 10%\n  bucket 15: 10%\n  bucket 14: 20%\n  bucket 15: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  bucket 15: 30%\n  bucket 14: 50%\n  bucket 15: 40%\n  bucket 14: 60%\n  bucket 15: 50%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 15: 60%\n  bucket 14: 100%\n  bucket 15: 70%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\nGetting block 16 of 58\n  Reserving size (388) for bucket 16\nGetting block 17 of 58\n  Calculating Z arrays for bucket 16\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  Entering block accumulator loop for bucket 16:\n  Entering block accumulator loop for bucket 17:\n  bucket 16: 10%\n  bucket 17: 10%\n  bucket 17: 20%\n  bucket 16: 20%\n  bucket 17: 30%\n  bucket 17: 40%\n  bucket 16: 30%\n  bucket 17: 50%\n  bucket 16: 40%\n  bucket 17: 60%\n  bucket 17: 70%\n  bucket 16: 50%\n  bucket 17: 80%\n  bucket 16: 60%\n  bucket 17: 90%\n  bucket 16: 70%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 16: 80%\n  bucket 16: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\nGetting block 19 of 58\n  Calculating Z arrays for bucket 18\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\n  Entering block accumulator loop for bucket 18:\n  Entering block accumulator loop for bucket 19:\n  bucket 19: 10%\n  bucket 18: 10%\n  bucket 19: 20%\n  bucket 18: 20%\n  bucket 19: 30%\n  bucket 18: 30%\n  bucket 19: 40%\n  bucket 18: 40%\n  bucket 19: 50%\n  bucket 18: 50%\n  bucket 19: 60%\n  bucket 18: 60%\n  bucket 19: 70%\n  bucket 18: 70%\n  bucket 19: 80%\n  bucket 18: 80%\n  bucket 19: 90%\n  bucket 19: 100%\n  bucket 18: 90%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 20:\n  bucket 20: 10%\n  bucket 20: 20%\n  bucket 20: 30%\n  bucket 20: 40%\n  bucket 20: 50%\nGetting block 21 of 58\n  bucket 20: 60%\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 21:\n  bucket 20: 70%\n  bucket 20: 80%\n  bucket 21: 10%\n  bucket 20: 90%\n  bucket 21: 20%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  bucket 21: 30%\n  bucket 21: 40%\n  bucket 21: 50%\n  bucket 21: 60%\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  bucket 21: 70%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\nGetting block 23 of 58\nGetting block 22 of 58\n  Reserving size (388) for bucket 23\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 23\n  Calculating Z arrays for bucket 22\nGetting block 24 of 58\nGetting block 25 of 58\n  Reserving size (388) for bucket 24\n  Entering block accumulator loop for bucket 22:\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 24\n  Calculating Z arrays for bucket 25\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\n  Entering block accumulator loop for bucket 24:\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 25:\n  Entering block accumulator loop for bucket 23:\n  bucket 22: 10%\n  Entering block accumulator loop for bucket 26:\n  bucket 24: 10%\n  bucket 25: 10%\n  bucket 22: 20%\n  bucket 24: 20%\n  bucket 23: 10%\n  bucket 26: 10%\n  bucket 25: 20%\n  bucket 24: 30%\n  bucket 22: 30%\n  bucket 25: 30%\n  bucket 23: 20%\n  bucket 26: 20%\n  bucket 24: 40%\n  bucket 25: 40%\n  bucket 24: 50%\n  bucket 22: 40%\n  bucket 25: 50%\n  bucket 26: 30%\n  bucket 24: 60%\n  bucket 22: 50%\n  bucket 25: 60%\n  bucket 24: 70%\n  bucket 26: 40%\n  bucket 25: 70%\n  bucket 24: 80%\n  bucket 23: 30%\n  bucket 25: 80%\n  bucket 26: 50%\n  bucket 24: 90%\n  bucket 25: 90%\n  bucket 22: 60%\n  bucket 23: 40%\n  bucket 24: 100%\n  bucket 26: 60%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 23: 50%\n  bucket 26: 70%\n  bucket 22: 70%\n  bucket 23: 60%\n  bucket 26: 80%\n  bucket 22: 80%\n  bucket 23: 70%\n  bucket 26: 90%\n  Sorting block time: 00:00:00\n  bucket 22: 90%\nReturning block of 106 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\n  bucket 23: 80%\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\nGetting block 27 of 58\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  bucket 23: 90%\n  Entering block accumulator loop for bucket 27:\n  bucket 23: 100%\n  bucket 27: 10%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 27: 20%\n  bucket 27: 30%\n  bucket 27: 40%\n  bucket 27: 50%\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 27: 80%\n  bucket 27: 90%\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\nGetting block 29 of 58\n  Entering block accumulator loop for bucket 28:\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 28: 20%\n  bucket 29: 10%\n  bucket 28: 30%\n  bucket 29: 20%\n  bucket 28: 40%\n  bucket 29: 30%\n  bucket 28: 50%\n  bucket 29: 40%\n  bucket 28: 60%\n  bucket 29: 50%\n  bucket 28: 70%\n  bucket 29: 60%\n  bucket 28: 80%\n  bucket 29: 70%\n  bucket 28: 90%\n  bucket 29: 80%\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\nGetting block 30 of 58\nGetting block 31 of 58\n  Reserving size (388) for bucket 30\n  Reserving size (388) for bucket 31\nGetting block 32 of 58\n  Calculating Z arrays for bucket 30\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 30:\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 10%\n  bucket 30: 10%\n  bucket 31: 20%\n  bucket 32: 10%\n  bucket 30: 20%\n  bucket 31: 30%\n  bucket 30: 30%\n  bucket 32: 20%\n  bucket 31: 40%\n  bucket 30: 40%\n  bucket 32: 30%\n  bucket 31: 50%\n  bucket 30: 50%\n  bucket 32: 40%\n  bucket 31: 60%\n  bucket 32: 50%\n  bucket 31: 70%\n  bucket 30: 60%\n  bucket 32: 60%\n  bucket 31: 80%\n  bucket 30: 70%\n  bucket 32: 70%\n  bucket 30: 80%\n  bucket 31: 90%\n  bucket 32: 80%\n  bucket 30: 90%\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using difference cover)\n  bucket 32: 90%\n  bucket 30: 100%\n  Sorting block of le\n..\nme: 00:00:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\nGetting block 26 of 57\n  Entering block accumulator loop for bucket 25:\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  bucket 24: 10%\n  Entering block accumulator loop for bucket 26:\n  bucket 25: 10%\n  bucket 24: 20%\n  bucket 26: 10%\n  bucket 25: 20%\n  bucket 24: 30%\n  bucket 26: 20%\n  bucket 25: 30%\n  bucket 26: 30%\n  bucket 24: 40%\n  bucket 25: 40%\n  bucket 26: 40%\n  bucket 25: 50%\n  bucket 24: 50%\n  bucket 26: 50%\n  bucket 25: 60%\n  bucket 26: 60%\n  bucket 24: 60%\n  bucket 25: 70%\n  bucket 26: 70%\n  bucket 25: 80%\n  bucket 24: 70%\n  bucket 26: 80%\n  bucket 25: 90%\n  bucket 24: 80%\n  bucket 26: 90%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 24: 90%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 27: 10%\n  bucket 27: 20%\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  bucket 27: 30%\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 28:\n  bucket 27: 40%\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 27: 50%\n  bucket 28: 20%\n  bucket 29: 20%\n  bucket 27: 60%\n  bucket 28: 30%\n  bucket 29: 30%\n  bucket 27: 70%\n  bucket 28: 40%\n  bucket 29: 40%\n  bucket 27: 80%\n  bucket 28: 50%\n  bucket 29: 50%\n  bucket 28: 60%\n  bucket 27: 90%\n  bucket 29: 60%\n  bucket 28: 70%\n  bucket 29: 70%\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  bucket 28: 80%\n  bucket 28: 90%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\nGetting block 31 of 57\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  bucket 30: 20%\n  Entering block accumulator loop for bucket 31:\n  bucket 30: 30%\n  bucket 31: 10%\n  bucket 30: 40%\n  bucket 31: 20%\n  bucket 30: 50%\n  bucket 31: 30%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 31: 40%\n  bucket 30: 80%\n  bucket 31: 50%\n  bucket 30: 90%\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  bucket 31: 60%\nGetting block 33 of 57\n  Entering block accumulator loop for bucket 32:\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  bucket 30: 100%\n  bucket 31: 70%\n  Entering block accumulator loop for bucket 33:\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  bucket 32: 10%\n  bucket 31: 80%\n  bucket 33: 10%\n  bucket 32: 20%\n  bucket 31: 90%\n  bucket 33: 20%\n  bucket 32: 30%\n  bucket 31: 100%\n  Sorting block time: 00:00:00\n  bucket 33: 30%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\nReturning block of 258 for bucket 30\n  bucket 32: 40%\n  bucket 33: 40%\n  bucket 33: 50%\n  bucket 32: 50%\n  bucket 33: 60%\n  bucket 32: 60%\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\n  bucket 33: 70%\n  bucket 32: 70%\n  bucket 33: 80%\n  bucket 33: 90%\n  bucket 32: 80%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 32: 90%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Sorting block time: 00:00:00\n  Calculating Z arrays for bucket 34\nReturning block of 388 for bucket 33\n  Entering block accumulator loop for bucket 34:\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\n  bucket 34: 10%\n  bucket 34: 20%\n  bucket 34: 30%\n  bucket 34: 40%\n  bucket 34: 50%\n  bucket 34: 60%\n  bucket 34: 70%\n  bucket 34: 80%\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 35: 60%\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\nGetting block 37 of 57\n  Entering block accumulator loop for bucket 36:\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 37:\n  bucket 36: 10%\n  bucket 37: 10%\n  bucket 36: 20%\n  bucket 37: 20%\n  bucket 37: 30%\n  bucket 36: 30%\n  bucket 37: 40%\n  bucket 37: 50%\n  bucket 36: 40%\n  bucket 37: 60%\n  bucket 36: 50%\n  bucket 37: 70%\n  bucket 36: 60%\n  bucket 37: 80%\n  bucket 37: 90%\n  bucket 36: 70%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\nGetting block 39 of 57\n  bucket 38: 10%\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 20%\n  bucket 39: 10%\n  bucket 38: 30%\n  bucket 39: 20%\n  bucket 38: 40%\n  bucket 39: 30%\n  bucket 38: 50%\n  bucket 39: 40%\n  bucket 39: 50%\n  bucket 38: 60%\n  bucket 39: 60%\n  bucket 38: 70%\n  bucket 39: 70%\n  bucket 38: 80%\n  bucket 39: 80%\n  bucket 38: 90%\n  bucket 39: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\nGetting block 41 of 57\nGetting block 42 of 57\n  Calculating Z arrays for bucket 40\n  Reserving size (388) for bucket 41\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 41\n  Calculating Z arrays for bucket 42\n  Entering block accumulator loop for bucket 40:\n  Entering block accumulator loop for bucket 41:\n  Entering block accumulator loop for bucket 42:\n  bucket 41: 10%\n  bucket 42: 10%\n  bucket 40: 10%\n  bucket 41: 20%\n  bucket 42: 20%\n  bucket 40: 20%\n  bucket 41: 30%\n  bucket 42: 30%\n  bucket 41: 40%\n  bucket 42: 40%\n  bucket 40: 30%\n  bucket 41: 50%\n  bucket 42: 50%\n  bucket 40: 40%\n  bucket 41: 60%\n  bucket 42: 60%\n  bucket 40: 50%\n  bucket 41: 70%\n  bucket 42: 70%\n  bucket 40: 60%\n  bucket 41: 80%\n  bucket 42: 80%\n  bucket 40: 70%\n  bucket 41: 90%\n  bucket 42: 90%\n  bucket 40: 80%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  bucket 40: 90%\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 43:\n  bucket 43: 10%\n  bucket 43: 20%\n  bucket 43: 30%\n  bucket 43: 40%\n  bucket 43: 50%\n  bucket 43: 60%\n  bucket 43: 70%\n  bucket 43: 80%\n  bucket 43: 90%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 44: 10%\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 44: 40%\n  bucket 44: 50%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 45: 10%\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 45: 40%\n  bucket 45: 50%\n  bucket 45: 60%\n  bucket 45: 70%\n  bucket 45: 80%\n  bucket 45: 90%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\nGetting block 46 of 57\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  Entering block accumulator loop for bucket 46:\n  bucket 46: 10%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 20%\n  bucket 46: 30%\n  bucket 46: 40%\n  bucket 46: 50%\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 47:\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\n  bucket 47: 10%\n  bucket 47: 20%\n  bucket 47: 30%\n  bucket 47: 40%\n  bucket 47: 50%\n  bucket 47: 60%\n  bucket 47: 70%\n  bucket 47: 80%\n  bucket 47: 90%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 48: 10%\n  bucket 48: 20%\n  bucket 48: 30%\n  bucket 48: 40%\n  bucket 48: 50%\n  bucket 48: 60%\n  bucket 48: 70%\n  bucket 48: 80%\n  bucket 48: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\n  bucket 49: 20%\n  bucket 49: 30%\nGetting block 50 of 57\n  bucket 49: 40%\n  Reserving size (388) for bucket 50\nGetting block 51 of 57\n  Calculating Z arrays for bucket 50\n  bucket 49: 50%\n  Reserving size (388) for bucket 51\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 60%\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 49: 70%\n  bucket 50: 10%\n  bucket 49: 80%\n  bucket 51: 10%\n  bucket 49: 90%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 51: 20%\n  bucket 50: 20%\n  bucket 51: 30%\n  bucket 50: 30%\n  bucket 51: 40%\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  bucket 50: 40%\n  bucket 51: 50%\n  bucket 50: 50%\n  bucket 51: 60%\n  bucket 50: 60%\n  bucket 51: 70%\n  bucket 50: 70%\n  bucket 51: 80%\n  bucket 51: 90%\n  bucket 50: 80%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  bucket 50: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  Calculating Z arrays for bucket 52\n  Entering block accumulator loop for bucket 52:\nGetting block 53 of 57\n  bucket 52: 10%\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  bucket 52: 20%\n  Entering block accumulator loop for bucket 53:\n  bucket 52: 30%\n  bucket 52: 40%\n  bucket 53: 10%\n  bucket 52: 50%\n  bucket 53: 20%\n  bucket 52: 60%\n  bucket 53: 30%\n  bucket 52: 70%\n  bucket 53: 40%\n  bucket 52: 80%\n  bucket 53: 50%\n  bucket 52: 90%\n  bucket 53: 60%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  bucket 53: 70%\n  bucket 53: 80%\n  bucket 53: 90%\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 54: 10%\nGetting block 55 of 57\n  bucket 54: 20%\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\n  bucket 54: 30%\n  bucket 54: 40%\n  bucket 55: 10%\n  bucket 54: 50%\n  bucket 55: 20%\n  bucket 55: 30%\n  bucket 54: 60%\n  bucket 55: 40%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 55: 50%\n  bucket 54: 90%\n  bucket 55: 60%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 55: 70%\n  bucket 55: 80%\n  bucket 55: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  Sorting block time: 00:00:00\n  (Using difference cover)\nReturning block of 238 for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 56 of 57\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 56:\n  bucket 56: 10%\n  bucket 56: 20%\n  bucket 56: 30%\n  bucket 56: 40%\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 56: 70%\n  bucket 56: 80%\n  bucket 56: 90%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "traceback": null,  "update_time": "2023-02-07T23:14:59.016987",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_qudntl59.sam v. /tmp/history_bam_converted_to_sam_74f68bvl.sam )\n--- local_file\n+++ history_data\n@@ -1,78 +1,79 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n @RG\tID:rg1\tPL:CAPILLARY\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome --rg-id rg1 --rg PL:CAPILLARY -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 8 -x genome --rg-id rg1 --rg PL:CAPILLARY -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@8 -T /galaxy/server/database/jobs_directory/000/531/tmp -O bam -o /galaxy/server/database/objects/3/3/f/dataset_33f27e98-e42a-46b6-aa2d-0f00a1876018.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3\u003eAAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\tRG:Z:rg1\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC\u003e;\u003e=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2\u003eAFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@\u003eBD/9BFBBBBFDFFFF99D=?\u003eDDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\tRG:Z:rg1\n********\n*SNIP *\n********\n-M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D\u003eCFDDFFFB?AF?B;-@\u003e.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000\u003c00\u003cBFBB0\u003c00000\u003c99.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A\u003cGFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.\u003cADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/\u003e99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG\u003e0\u003c0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t141\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGACAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTA\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHCHHGDGGGGHGGHHHHHHHHGHGHHHGGGGGHFHHHHFHHHFFHHHHHFGCGGEHFHHFGGHFHGGGGGGHHFEEEAFEFFDFHGHHHHGGGGGGGHH0DGGGGCGHCC-\u003cCCBGHHHGEFFFFHH.C/\u003cAEGHHEG.EEA0GE0:FB0CFGF:A?FFBF??FG0B;FGGGGFGE?BBF;BFBFFFF/F/B?DDF.;.;:ADD.BA/BBFFB:BFE/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t77\t*\t0\t0\t*\t*\t0\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGCGGTGTCCACGCAATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\t1\u003e\u003e1AAFFFFFBGGFE1EEEEGGHGHHH2FGHHHFGFGHGCFGGGEFHGGEGGHHHHGHEFBFEGHHHGHHBEHHHHGHGFHHHGGGGHHEGGGGHHHGFHGHHHH1FHHG?G/AGF1GBFGEFFHF2FDD0FG\u003cGDHBFDGFFCGH//B//?0GFFGFGGHHHFHFB.=1FDFB?FGH.C/.-:::CH0;CAB@-.;0CGFFFGG--9.A@GB\u003e--99@=---AAABA-BF/B?A@F-9BBFF//BB/9/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t141\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATTGCGTGGACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tABBB\u003eFFFFFFFGGGGGGGGGGHHHHHGHHHHGHHGGHHGGHGGHHHGHHHHFHHGHHAFGGGHHHHHGHHHHFHFHHHHHECGGGHGHHHEFHFHGGGGGGGGFGFFGFFEFGEGHHHGHHGGDGGGHGFGGGGGGGGE@GCGGHHHGHHHHHGHHHHFHHGEGFFEGCE.ECCECEHCGGFFE/AABFFG0CFE0BFFF9CFGG.F/BBBFFGFGGGFFFFFFBFEDAEFFFFFBFFFFFFF0;FEBF:\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTT\tAAABABBBBBBFGGGGGGGGGGHGHHGHGHHHHHHHHHGHHHGGHDGHHHGGGGHHHHHHHHHHHHHHHFHGHHHHGGHGGHHHFHHHHHCGHFFHHHHHHHHHHHHHGHGEFGAEEEEHHGHHGHGHHHHHHHGHHHHHHGHGHFFBC/BA?BGGGFFFFFFFFFFFFFFFC-@DDFFFFFFFEFAFFFFFFBFBFFFFFFFFFFFFFFFFBFF-\u003e@FFFFFFFFFFBFBFAD--.99;A?////:.9A.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t141\t*\t0\t0\t*\t*\t0\t0\tGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCAAGTGTAGTGCTCGGGGGGG\tBBCCBFFCCCCCGGGGGGGGGGGGGGHHHHHHGGGGGGHHFHGGGGGFGHGGGGGGHHHHHHHHHHFHHHHFHGFFHHGF?ECEFFFFFFHHHHHH?FHHHHHHHHHGFHHHHHHGGGFGHHHHFHHHHHHHHHHGGGFGFGCGGGGHHHHHHHHHHHGGFFHGHHHHHFFHFCGFHCCGHGHCGGHG?DGGGGGFBBFGFBFBBBGGGB0000;CD?DFFAFF9=--;...://;////////.------\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t77\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGGGCTGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCTTGAAGTAGGAACC\tAABABFFFFFFFF4GGGGEBGEFGHGGHGHGHHHGGHFBGFGGGGGHHEFHGEHFHFHEHHHHHGCGGGHFHHCFGHE@1EEEFFGB?EEEEHBGGGCHHGHHBEE@\u003eEAHHFAEBDGGGCEFF?CEGFFHHHHHFHHHFHGHCGCAHHF\u003c..C.D=0CD.GFHHHG.CAGHC:CHB0GGGFFB0:CFA.A-;9.;000CBBFFBFGA.9AA;A;EDDE.ABBFFFF9;BEFFF/BF//9/B//9:B//..\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBBFBBBBBFGGGGGGGGGGHFHHHHHHHHHHHHHHGHHHHGHFHHHGEEGGHHHGHHHHHHHHHHHHEHGHHGGGHGGHGHHHHHGHHHHGHHHHHHHHHHHHHHGHHHHHGEGCGHHHHHGHHHHHHHHHHHHHHGHFFGHGHHGGGDACDFFFFABFFFFFFFFFFD-BC?DA9.DFFBEA==B=?F.;ABBFBFEF-DAF/BFF9/FFFBB/9BFFFFFFF/BFBBFFFFFFF/9FEA?--B/;.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t77\t*\t0\t0\t*\t*\t0\t0\tCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGA\tAABBBBFFFFFFGGGFGGGGGGHHHGGHGGHHHHHHHHHHHGHHGGGGGHHHHHHHHHHHHHHHHHHGGCGDHHHHFGGHHHGGGGGFGGHGGGGHHGGGGHHHHHHGGGGGGHHGGGGDGGFGHGGFCDCHHHHGHHHHGHHFAGFGGEHFGEG.C\u003cEGCECEFCFFHBGHE:GHHGFF0FFFB0CFGGGGAGFFF0;;FFGGGFFGFFCDD.DEFBEDD?9FFFFFFFFFFFFFFF/B./FB///;BF/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t141\t*\t0\t0\t*\t*\t0\t0\tGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATT\tBBBBAFFFFFFFGGGGGGGGGGFGHHHHHGHHHHHHHHHHHHCGHHHHHHHGHHHHHHDGHHGGAECHHGHHHHHHHGHHHGHGFHHHHGGHGGHHFHHHHHHFHHHHHHHHH2GHHHHGHGHHFHHGGFGGGHHGHHHHHFHHHHEFHHHHEFGFFHGEHCFGDFDFFFFFCFFFFFFFFFFFFFAFBFFDFFFFFFFFADCF?9?EFBFB9EF-A.;BFFFFFFFBFFFFFFFFFFFFBFFFFFFFFFF\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t77\t*\t0\t0\t*\t*\t0\t0\tGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGCTACAGTTCACTTTAGCTACCTCCAAGTGTTATG\tAA?AAFFFFFFFGGGGGFBFGGGGGGH5GHFEDHHGGGGCGFBGH?AEEHFFEEGHGHHHHGGG?0EHGHHGGGGGC?GEE/EE?GHHHGBHFHHHHHHGHHGHHHGGGCG/A@\u003cFGGHHHHHHHFF/GFDGHHHHHHGFFFGHGGHABGHFHHHHHFHEGDGHGDDEEHHBEDDEGFGHGBFFBFFEGGGEFGFGFB000;F0F;FGGEGGEFFF;-.9//B///B9FFFFF/BFFB/:.BB//;FBFFF\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t141\t*\t0\t0\t*\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTGGAT\tCDDDBFFFFFFFGGGGGGGGGGHHHHHGGHHHGHHHGHHGGGGEHHGGHHHHHHHHHHHHHHGHHGHHHHHGGHHHHHFHHHHGCDCGHHHHHHHHEHHHGHGHHHGFHGGHGGHHHHHHHHFHHHFHHHGHHHHHHHHHFGGHHHHGGGEGAFHHGHHGGHHHHGHFBGFHGHGHGHGGHGGF@DAFEFBECAB=A.0BFFFEDF=A9.@D.-AAFFFA-:-..:.9/0:;0..-..0000::BFB09::\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t77\t*\t0\t0\t*\t*\t0\t0\tTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGA\tABBBBFFFFFFFGGGFGGGGGGHHHGHHGGHBGHGAGFFCAFGHGFFGHHGFHHHHHGGGGGHGHHHHHHHHE3BFFHHHGG0EDF@GHFFGGGHGGGGGGGGGGGGGHHGGEEFHGFHHDDG@DGGGHHGDGGGGGHGG?CF?HHGHHHGHGHHHFFHGGGHHHHGGCD.;0\u003cC;CGGGGEFF/.;0;FFFBF/0;0CFGFFB..9B/;0CBFFBBFFFFBAC?DED9;B9AD;.FFFB/B/;FBA/B//\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBCFCCCCCFGGGGGGGGGGHHHHHHHGHHHHHHHHGHHHHGHDGHHHGGGGHHHHHHHHHHHHHHHGHHHHHGGGEGGHHHHFHHHHHHHHHHHHHHHHHHHHHHGHHGHHGGGGGHHHHHHHHHHHGHHHFHHHHHHGHGHGHGGGGCGGFGGFFFFFFFFFFFFFBFFFFFFFFFFFFFFAFFFFEAEFFFFFFFFFFF9BFFBFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFADAB-/BF.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t77\t*\t0\t0\t*\t*\t0\t0\tCGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTCTGATCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAACAAACACACATCCAGA\t\u003eA33\u003eFFFFFF@FFFGGGGFGGD4EGGGGGHHGFFGHFGGHHHFEFHECFHHHEHGAGBCCGCCEGGHGHEGFBFHFHHHHGGGHFHGHEGGGFEGEGG??@DBGHGGC-@FFGHFHFHB-??DA-DD@9:BEBG@B?E?A.ABBFBFA??F.FF/BFFB/B9B/9;BF9FF9FFFFFFFFFFFFFF?BB?;9EE;-;DDB9//;B-B@;ABFFEFFFF/-.9A.;//9/BF./B/..9.9:...//////\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH\u003c1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\tRG:Z:rg1\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\tRG:Z:rg1\n" ], "status": "failure", "test_index": 2, "time_seconds": 34.59119987487793, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/3/7/1/dataset_3717ca74-e3f9-4cc7-b02b-7e09260cb546.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2Getting block 5 of 58Getting block 6 of 58  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4Getting block 7 of 58Getting block 8 of 58  Entering block accumulator loop for bucket 1:  Calculating Z arrays for bucket 2  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Reserving size (388) for bucket 7  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 2:  Entering block accumulator loop for bucket 3:  Calculating Z arrays for bucket 7  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 4:  bucket 1: 10%  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 1: 20%  bucket 2: 10%  bucket 3: 10%  bucket 4: 10%  bucket 5: 10%  bucket 1: 30%  bucket 6: 10%  bucket 2: 20%  bucket 3: 20%  bucket 7: 10%  bucket 1: 40%  bucket 4: 20%  bucket 8: 10%  bucket 6: 20%  bucket 5: 20%  bucket 2: 30%  bucket 3: 30%  bucket 1: 50%  bucket 7: 20%  bucket 4: 30%  bucket 6: 30%  bucket 8: 20%  bucket 5: 30%  bucket 2: 40%  bucket 1: 60%  bucket 3: 40%  bucket 7: 30%  bucket 6: 40%  bucket 4: 40%  bucket 8: 30%  bucket 5: 40%  bucket 1: 70%  bucket 2: 50%  bucket 3: 50%  bucket 6: 50%  bucket 7: 40%  bucket 4: 50%  bucket 1: 80%  bucket 8: 40%  bucket 5: 50%  bucket 2: 60%  bucket 6: 60%  bucket 3: 60%  bucket 7: 50%  bucket 1: 90%  bucket 4: 60%  bucket 8: 50%  bucket 5: 60%  bucket 6: 70%  bucket 2: 70%  bucket 1: 100%  bucket 3: 70%  bucket 7: 60%  bucket 4: 70%  bucket 8: 60%  bucket 6: 80%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 5: 70%  bucket 2: 80%  bucket 3: 80%  bucket 4: 80%  bucket 6: 90%  bucket 7: 70%  bucket 8: 70%  bucket 5: 80%  bucket 2: 90%  bucket 3: 90%  bucket 6: 100%  bucket 4: 90%  bucket 7: 80%  bucket 8: 80%  bucket 5: 90%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 2: 100%  Sorting block time: 00:00:00  bucket 3: 100%  bucket 4: 100%  bucket 7: 90%  bucket 8: 90%  bucket 5: 100%  Sorting block of length 165 for bucket 2  (Using difference cover)Returning block of 356 for bucket 1  Sorting block time: 00:00:00  Sorting block of length 370 for bucket 3  (Using difference cover)  Sorting block time: 00:00:00  Sorting block of length 328 for bucket 4  Sorting block time: 00:00:00  (Using difference cover)  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 7: 100%  bucket 8: 100%Returning block of 340 for bucket 6Returning block of 166 for bucket 2Returning block of 371 for bucket 3  Sorting block of length 368 for bucket 7  (Using difference cover)  Sorting block of length 171 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 172 for bucket 8  Sorting block time: 00:00:00Returning block of 369 for bucket 7Getting block 9 of 58  Reserving size (388) for bucket 9Getting block 10 of 58  Calculating Z arrays for bucket 9  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:Getting block 11 of 58  bucket 9: 10%  Reserving size (388) for bucket 11  bucket 10: 10%  Calculating Z arrays for bucket 11  bucket 9: 20%  bucket 10: 20%  Entering block accumulator loop for bucket 11:  bucket 9: 30%  bucket 10: 30%  bucket 11: 10%  bucket 9: 40%  bucket 10: 40%  bucket 11: 20%  bucket 9: 50%  bucket 10: 50%  bucket 11: 30%  bucket 9: 60%  bucket 10: 60%  bucket 11: 40%  bucket 9: 70%  bucket 10: 70%  bucket 11: 50%  bucket 9: 80%  bucket 10: 80%  bucket 11: 60%  bucket 9: 90%  bucket 10: 90%  bucket 11: 70%  bucket 9: 100%  bucket 10: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 11: 80%  bucket 11: 90%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 9  Sorting block time: 00:00:00Returning block of 358 for bucket 10  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 12 of 58  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 12: 10%Getting block 13 of 58  bucket 12: 20%  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  bucket 12: 30%  Entering block accumulator loop for bucket 13:  bucket 12: 40%  bucket 13: 10%  bucket 13: 20%  bucket 12: 50%  bucket 13: 30%  bucket 13: 40%  bucket 12: 60%  bucket 13: 50%  bucket 12: 70%  bucket 13: 60%  bucket 13: 70%  bucket 12: 80%  bucket 13: 80%  bucket 12: 90%  bucket 13: 90%  bucket 13: 100%  bucket 12: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  Sorting block of length 185 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 186 for bucket 12  Sorting block time: 00:00:00Returning block of 283 for bucket 13Getting block 14 of 58  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14Getting block 15 of 58  Entering block accumulator loop for bucket 14:  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 14: 10%  bucket 15: 10%  bucket 14: 20%  bucket 15: 20%  bucket 14: 30%  bucket 14: 40%  bucket 15: 30%  bucket 14: 50%  bucket 15: 40%  bucket 14: 60%  bucket 15: 50%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 15: 60%  bucket 14: 100%  bucket 15: 70%  Sorting block of length 339 for bucket 14  (Using difference cover)  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 14  Sorting block time: 00:00:00Returning block of 242 for bucket 15Getting block 16 of 58  Reserving size (388) for bucket 16Getting block 17 of 58  Calculating Z arrays for bucket 16  Reserving size (388) for bucket 17  Calculating Z arrays for bucket 17  Entering block accumulator loop for bucket 16:  Entering block accumulator loop for bucket 17:  bucket 16: 10%  bucket 17: 10%  bucket 17: 20%  bucket 16: 20%  bucket 17: 30%  bucket 17: 40%  bucket 16: 30%  bucket 17: 50%  bucket 16: 40%  bucket 17: 60%  bucket 17: 70%  bucket 16: 50%  bucket 17: 80%  bucket 16: 60%  bucket 17: 90%  bucket 16: 70%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  bucket 16: 80%  bucket 16: 90%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17  Sorting block time: 00:00:00Returning block of 380 for bucket 16Getting block 18 of 58  Reserving size (388) for bucket 18Getting block 19 of 58  Calculating Z arrays for bucket 18  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19  Entering block accumulator loop for bucket 18:  Entering block accumulator loop for bucket 19:  bucket 19: 10%  bucket 18: 10%  bucket 19: 20%  bucket 18: 20%  bucket 19: 30%  bucket 18: 30%  bucket 19: 40%  bucket 18: 40%  bucket 19: 50%  bucket 18: 50%  bucket 19: 60%  bucket 18: 60%  bucket 19: 70%  bucket 18: 70%  bucket 19: 80%  bucket 18: 80%  bucket 19: 90%  bucket 19: 100%  bucket 18: 90%  Sorting block of length 334 for bucket 19  (Using difference cover)  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 19  Sorting block time: 00:00:00Returning block of 379 for bucket 18Getting block 20 of 58  Reserving size (388) for bucket 20  Calculating Z arrays for bucket 20  Entering block accumulator loop for bucket 20:  bucket 20: 10%  bucket 20: 20%  bucket 20: 30%  bucket 20: 40%  bucket 20: 50%Getting block 21 of 58  bucket 20: 60%  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 21:  bucket 20: 70%  bucket 20: 80%  bucket 21: 10%  bucket 20: 90%  bucket 21: 20%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  bucket 21: 30%  bucket 21: 40%  bucket 21: 50%  bucket 21: 60%  Sorting block time: 00:00:00Returning block of 314 for bucket 20  bucket 21: 70%  bucket 21: 80%  bucket 21: 90%  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  Sorting block time: 00:00:00Returning block of 211 for bucket 21Getting block 23 of 58Getting block 22 of 58  Reserving size (388) for bucket 23  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 23  Calculating Z arrays for bucket 22Getting block 24 of 58Getting block 25 of 58  Reserving size (388) for bucket 24  Entering block accumulator loop for bucket 22:  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 24  Calculating Z arrays for bucket 25Getting block 26 of 58  Reserving size (388) for bucket 26  Entering block accumulator loop for bucket 24:  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 25:  Entering block accumulator loop for bucket 23:  bucket 22: 10%  Entering block accumulator loop for bucket 26:  bucket 24: 10%  bucket 25: 10%  bucket 22: 20%  bucket 24: 20%  bucket 23: 10%  bucket 26: 10%  bucket 25: 20%  bucket 24: 30%  bucket 22: 30%  bucket 25: 30%  bucket 23: 20%  bucket 26: 20%  bucket 24: 40%  bucket 25: 40%  bucket 24: 50%  bucket 22: 40%  bucket 25: 50%  bucket 26: 30%  bucket 24: 60%  bucket 22: 50%  bucket 25: 60%  bucket 24: 70%  bucket 26: 40%  bucket 25: 70%  bucket 24: 80%  bucket 23: 30%  bucket 25: 80%  bucket 26: 50%  bucket 24: 90%  bucket 25: 90%  bucket 22: 60%  bucket 23: 40%  bucket 24: 100%  bucket 26: 60%  Sorting block of length 351 for bucket 24  (Using difference cover)  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  bucket 23: 50%  bucket 26: 70%  bucket 22: 70%  bucket 23: 60%  bucket 26: 80%  bucket 22: 80%  bucket 23: 70%  bucket 26: 90%  Sorting block time: 00:00:00  bucket 22: 90%Returning block of 106 for bucket 25  Sorting block time: 00:00:00Returning block of 352 for bucket 24  bucket 23: 80%  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)Getting block 27 of 58  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  bucket 23: 90%  Entering block accumulator loop for bucket 27:  bucket 23: 100%  bucket 27: 10%  Sorting block of length 238 for bucket 23  (Using difference cover)  bucket 27: 20%  bucket 27: 30%  bucket 27: 40%  bucket 27: 50%  Sorting block time: 00:00:00Returning block of 355 for bucket 26  Sorting block time: 00:00:00Returning block of 387 for bucket 22  bucket 27: 60%  bucket 27: 70%  bucket 27: 80%  bucket 27: 90%  Sorting block time: 00:00:00Returning block of 239 for bucket 23  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 27Getting block 28 of 58  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28Getting block 29 of 58  Entering block accumulator loop for bucket 28:  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 29:  bucket 28: 10%  bucket 28: 20%  bucket 29: 10%  bucket 28: 30%  bucket 29: 20%  bucket 28: 40%  bucket 29: 30%  bucket 28: 50%  bucket 29: 40%  bucket 28: 60%  bucket 29: 50%  bucket 28: 70%  bucket 29: 60%  bucket 28: 80%  bucket 29: 70%  bucket 28: 90%  bucket 29: 80%  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  bucket 29: 90%  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 28  Sorting block time: 00:00:00Returning block of 290 for bucket 29Getting block 30 of 58Getting block 31 of 58  Reserving size (388) for bucket 30  Reserving size (388) for bucket 31Getting block 32 of 58  Calculating Z arrays for bucket 30  Calculating Z arrays for bucket 31  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 30:  Entering block accumulator loop for bucket 32:  bucket 31: 10%  bucket 30: 10%  bucket 31: 20%  bucket 32: 10%  bucket 30: 20%  bucket 31: 30%  bucket 30: 30%  bucket 32: 20%  bucket 31: 40%  bucket 30: 40%  bucket 32: 30%  bucket 31: 50%  bucket 30: 50%  bucket 32: 40%  bucket 31: 60%  bucket 32: 50%  bucket 31: 70%  bucket 30: 60%  bucket 32: 60%  bucket 31: 80%  bucket 30: 70%  bucket 32: 70%  bucket 30: 80%  bucket 31: 90%  bucket 32: 80%  bucket 30: 90%  bucket 31: 100%  Sorting block of length 377 for bucket 31  (Using difference cover)  bucket 32: 90%  bucket 30: 100%  Sorting block of le..me: 00:00:00Returning block of 350 for bucket 23Getting block 24 of 57  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:Getting block 25 of 57  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25Getting block 26 of 57  Entering block accumulator loop for bucket 25:  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  bucket 24: 10%  Entering block accumulator loop for bucket 26:  bucket 25: 10%  bucket 24: 20%  bucket 26: 10%  bucket 25: 20%  bucket 24: 30%  bucket 26: 20%  bucket 25: 30%  bucket 26: 30%  bucket 24: 40%  bucket 25: 40%  bucket 26: 40%  bucket 25: 50%  bucket 24: 50%  bucket 26: 50%  bucket 25: 60%  bucket 26: 60%  bucket 24: 60%  bucket 25: 70%  bucket 26: 70%  bucket 25: 80%  bucket 24: 70%  bucket 26: 80%  bucket 25: 90%  bucket 24: 80%  bucket 26: 90%  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  bucket 24: 90%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25  Sorting block time: 00:00:00Returning block of 385 for bucket 26  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 27 of 57  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:  bucket 27: 10%  bucket 27: 20%Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  bucket 27: 30%Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 28:  bucket 27: 40%  Entering block accumulator loop for bucket 29:  bucket 28: 10%  bucket 29: 10%  bucket 27: 50%  bucket 28: 20%  bucket 29: 20%  bucket 27: 60%  bucket 28: 30%  bucket 29: 30%  bucket 27: 70%  bucket 28: 40%  bucket 29: 40%  bucket 27: 80%  bucket 28: 50%  bucket 29: 50%  bucket 28: 60%  bucket 27: 90%  bucket 29: 60%  bucket 28: 70%  bucket 29: 70%  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  bucket 28: 80%  bucket 28: 90%  bucket 29: 80%  bucket 29: 90%  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 28  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 360 for bucket 27Getting block 30 of 57  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%Getting block 31 of 57  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  bucket 30: 20%  Entering block accumulator loop for bucket 31:  bucket 30: 30%  bucket 31: 10%  bucket 30: 40%  bucket 31: 20%  bucket 30: 50%  bucket 31: 30%  bucket 30: 60%  bucket 30: 70%  bucket 31: 40%  bucket 30: 80%  bucket 31: 50%  bucket 30: 90%Getting block 32 of 57  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  bucket 31: 60%Getting block 33 of 57  Entering block accumulator loop for bucket 32:  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  bucket 30: 100%  bucket 31: 70%  Entering block accumulator loop for bucket 33:  Sorting block of length 257 for bucket 30  (Using difference cover)  bucket 32: 10%  bucket 31: 80%  bucket 33: 10%  bucket 32: 20%  bucket 31: 90%  bucket 33: 20%  bucket 32: 30%  bucket 31: 100%  Sorting block time: 00:00:00  bucket 33: 30%  Sorting block of length 310 for bucket 31  (Using difference cover)Returning block of 258 for bucket 30  bucket 32: 40%  bucket 33: 40%  bucket 33: 50%  bucket 32: 50%  bucket 33: 60%  bucket 32: 60%  Sorting block time: 00:00:00Returning block of 311 for bucket 31  bucket 33: 70%  bucket 32: 70%  bucket 33: 80%  bucket 33: 90%  bucket 32: 80%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  bucket 32: 90%  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)Getting block 34 of 57  Reserving size (388) for bucket 34  Sorting block time: 00:00:00  Calculating Z arrays for bucket 34Returning block of 388 for bucket 33  Entering block accumulator loop for bucket 34:  Sorting block time: 00:00:00Returning block of 220 for bucket 32  bucket 34: 10%  bucket 34: 20%  bucket 34: 30%  bucket 34: 40%  bucket 34: 50%  bucket 34: 60%  bucket 34: 70%  bucket 34: 80%  bucket 34: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 35:  bucket 35: 10%  bucket 35: 20%  bucket 35: 30%  bucket 35: 40%  bucket 35: 50%  bucket 35: 60%  bucket 35: 70%  bucket 35: 80%  bucket 35: 90%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36Getting block 37 of 57  Entering block accumulator loop for bucket 36:  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  Entering block accumulator loop for bucket 37:  bucket 36: 10%  bucket 37: 10%  bucket 36: 20%  bucket 37: 20%  bucket 37: 30%  bucket 36: 30%  bucket 37: 40%  bucket 37: 50%  bucket 36: 40%  bucket 37: 60%  bucket 36: 50%  bucket 37: 70%  bucket 36: 60%  bucket 37: 80%  bucket 37: 90%  bucket 36: 70%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  bucket 36: 80%  bucket 36: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 268 for bucket 37  Sorting block time: 00:00:00Returning block of 151 for bucket 36Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:Getting block 39 of 57  bucket 38: 10%  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  Entering block accumulator loop for bucket 39:  bucket 38: 20%  bucket 39: 10%  bucket 38: 30%  bucket 39: 20%  bucket 38: 40%  bucket 39: 30%  bucket 38: 50%  bucket 39: 40%  bucket 39: 50%  bucket 38: 60%  bucket 39: 60%  bucket 38: 70%  bucket 39: 70%  bucket 38: 80%  bucket 39: 80%  bucket 38: 90%  bucket 39: 90%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 39  Sorting block time: 00:00:00Returning block of 338 for bucket 38Getting block 40 of 57  Reserving size (388) for bucket 40Getting block 41 of 57Getting block 42 of 57  Calculating Z arrays for bucket 40  Reserving size (388) for bucket 41  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 41  Calculating Z arrays for bucket 42  Entering block accumulator loop for bucket 40:  Entering block accumulator loop for bucket 41:  Entering block accumulator loop for bucket 42:  bucket 41: 10%  bucket 42: 10%  bucket 40: 10%  bucket 41: 20%  bucket 42: 20%  bucket 40: 20%  bucket 41: 30%  bucket 42: 30%  bucket 41: 40%  bucket 42: 40%  bucket 40: 30%  bucket 41: 50%  bucket 42: 50%  bucket 40: 40%  bucket 41: 60%  bucket 42: 60%  bucket 40: 50%  bucket 41: 70%  bucket 42: 70%  bucket 40: 60%  bucket 41: 80%  bucket 42: 80%  bucket 40: 70%  bucket 41: 90%  bucket 42: 90%  bucket 40: 80%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  bucket 40: 90%  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42  Sorting block time: 00:00:00Returning block of 331 for bucket 41  Sorting block time: 00:00:00Returning block of 380 for bucket 40Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 43:  bucket 43: 10%  bucket 43: 20%  bucket 43: 30%  bucket 43: 40%  bucket 43: 50%  bucket 43: 60%  bucket 43: 70%  bucket 43: 80%  bucket 43: 90%  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  Sorting block time: 00:00:00Returning block of 322 for bucket 43Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:  bucket 44: 10%  bucket 44: 20%  bucket 44: 30%  bucket 44: 40%  bucket 44: 50%  bucket 44: 60%  bucket 44: 70%  bucket 44: 80%  bucket 44: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  Entering block accumulator loop for bucket 45:  bucket 45: 10%  bucket 45: 20%  bucket 45: 30%  bucket 45: 40%  bucket 45: 50%  bucket 45: 60%  bucket 45: 70%  bucket 45: 80%  bucket 45: 90%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)Getting block 46 of 57  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46  Entering block accumulator loop for bucket 46:  bucket 46: 10%  Sorting block time: 00:00:00Returning block of 366 for bucket 45  bucket 46: 20%  bucket 46: 30%  bucket 46: 40%  bucket 46: 50%  bucket 46: 60%  bucket 46: 70%  bucket 46: 80%  bucket 46: 90%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)Getting block 47 of 57  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47  Entering block accumulator loop for bucket 47:  Sorting block time: 00:00:00Returning block of 254 for bucket 46  bucket 47: 10%  bucket 47: 20%  bucket 47: 30%  bucket 47: 40%  bucket 47: 50%  bucket 47: 60%  bucket 47: 70%  bucket 47: 80%  bucket 47: 90%  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  Sorting block time: 00:00:00Returning block of 218 for bucket 47Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 48:  bucket 48: 10%  bucket 48: 20%  bucket 48: 30%  bucket 48: 40%  bucket 48: 50%  bucket 48: 60%  bucket 48: 70%  bucket 48: 80%  bucket 48: 90%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  Entering block accumulator loop for bucket 49:  bucket 49: 10%  bucket 49: 20%  bucket 49: 30%Getting block 50 of 57  bucket 49: 40%  Reserving size (388) for bucket 50Getting block 51 of 57  Calculating Z arrays for bucket 50  bucket 49: 50%  Reserving size (388) for bucket 51  Entering block accumulator loop for bucket 50:  bucket 49: 60%  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 51:  bucket 49: 70%  bucket 50: 10%  bucket 49: 80%  bucket 51: 10%  bucket 49: 90%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  bucket 51: 20%  bucket 50: 20%  bucket 51: 30%  bucket 50: 30%  bucket 51: 40%  Sorting block time: 00:00:00Returning block of 113 for bucket 49  bucket 50: 40%  bucket 51: 50%  bucket 50: 50%  bucket 51: 60%  bucket 50: 60%  bucket 51: 70%  bucket 50: 70%  bucket 51: 80%  bucket 51: 90%  bucket 50: 80%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  bucket 50: 90%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 51  Sorting block time: 00:00:00Returning block of 276 for bucket 50Getting block 52 of 57  Reserving size (388) for bucket 52  Calculating Z arrays for bucket 52  Entering block accumulator loop for bucket 52:Getting block 53 of 57  bucket 52: 10%  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  bucket 52: 20%  Entering block accumulator loop for bucket 53:  bucket 52: 30%  bucket 52: 40%  bucket 53: 10%  bucket 52: 50%  bucket 53: 20%  bucket 52: 60%  bucket 53: 30%  bucket 52: 70%  bucket 53: 40%  bucket 52: 80%  bucket 53: 50%  bucket 52: 90%  bucket 53: 60%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  bucket 53: 70%  bucket 53: 80%  bucket 53: 90%  Sorting block time: 00:00:00Returning block of 379 for bucket 52  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 54:  bucket 54: 10%Getting block 55 of 57  bucket 54: 20%  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55  Entering block accumulator loop for bucket 55:  bucket 54: 30%  bucket 54: 40%  bucket 55: 10%  bucket 54: 50%  bucket 55: 20%  bucket 55: 30%  bucket 54: 60%  bucket 55: 40%  bucket 54: 70%  bucket 54: 80%  bucket 55: 50%  bucket 54: 90%  bucket 55: 60%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  bucket 55: 70%  bucket 55: 80%  bucket 55: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  Sorting block time: 00:00:00  (Using difference cover)Returning block of 238 for bucket 54  Sorting block time: 00:00:00Returning block of 345 for bucket 55Getting block 56 of 57  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 56:  bucket 56: 10%  bucket 56: 20%  bucket 56: 30%  bucket 56: 40%  bucket 56: 50%  bucket 56: 60%  bucket 56: 70%  bucket 56: 80%  bucket 56: 90%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #4)" name="3" time="36.305073976516724">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "fd58e91b1d0979ea",   "src": "hda"  },  "library|input_2": {   "id": "80e4f0750ab1e377",   "src": "hda"  },  "library|paired_options|paired_options_selector": "no",  "library|type": "paired",  "library|unaligned_file": false,  "reference_genome|own_file": {   "id": "5ace149959673565",   "src": "hda"  },  "reference_genome|source": "history",  "save_mapping_stats": true }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/b/c/d/dataset_bcd1892e-cd9c-4366-8cb6-d79fede59479.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/b/c/d/dataset_bcd1892e-cd9c-4366-8cb6-d79fede59479.dat\u0027 genome.fa \u0026\u0026   ln -f -s \u0027/galaxy/server/database/objects/e/0/0/dataset_e00f9b0e-5f8e-4c0c-a189-42912013604b.dat\u0027 input_f.fastq \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/7/7/f/dataset_77f0b838-2048-4ac6-909e-bc631ac4d771.dat\u0027 input_r.fastq \u0026\u0026   bowtie2  -p ${GALAXY_SLOTS:-4}  -x \u0027genome\u0027   -1 \u0027input_f.fastq\u0027 -2 \u0027input_r.fastq\u0027                2\u003e \u0027/galaxy/server/database/objects/7/1/c/dataset_71cf7ba0-0f5a-4bf2-bf09-483242487c32.dat\u0027  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o \u0027/galaxy/server/database/objects/8/5/c/dataset_85c964f4-c8c5-4892-9f50-f0a9ab93ca6e.dat\u0027",  "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}",  "create_time": "2023-02-07T23:15:21.839496",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9crs7",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "a3ba2bbb37e14641",  "inputs": {   "input_1": {    "id": "fd58e91b1d0979ea",    "src": "hda",    "uuid": "e00f9b0e-5f8e-4c0c-a189-42912013604b"   },   "input_2": {    "id": "80e4f0750ab1e377",    "src": "hda",    "uuid": "77f0b838-2048-4ac6-909e-bc631ac4d771"   },   "own_file": {    "id": "5ace149959673565",    "src": "hda",    "uuid": "bcd1892e-cd9c-4366-8cb6-d79fede59479"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811724.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:15:24"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811724.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:15:24"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "mapping_stats": {    "id": "b557ddf71a45c951",    "src": "hda",    "uuid": "71cf7ba0-0f5a-4bf2-bf09-483242487c32"   },   "output": {    "id": "76d8e1d1c759e458",    "src": "hda",    "uuid": "85c964f4-c8c5-4892-9f50-f0a9ab93ca6e"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 748, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 749, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 750, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",   "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}",   "save_mapping_stats": "\"true\""  },  "state": "ok",  "stderr": "Building a SMALL index\n",  "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/d/dataset_bcd1892e-cd9c-4366-8cb6-d79fede59479.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 6\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 6:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 8:\n  Entering block accumulator loop for bucket 5:\n  bucket 1: 20%\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 7: 10%\n  bucket 6: 10%\n  bucket 8: 10%\n  bucket 2: 10%\n  bucket 5: 10%\n  bucket 3: 20%\n  bucket 1: 30%\n  bucket 4: 20%\n  bucket 7: 20%\n  bucket 6: 20%\n  bucket 8: 20%\n  bucket 2: 20%\n  bucket 3: 30%\n  bucket 1: 40%\n  bucket 4: 30%\n  bucket 7: 30%\n  bucket 6: 30%\n  bucket 8: 30%\n  bucket 5: 20%\n  bucket 3: 40%\n  bucket 2: 30%\n  bucket 4: 40%\n  bucket 1: 50%\n  bucket 7: 40%\n  bucket 6: 40%\n  bucket 8: 40%\n  bucket 3: 50%\n  bucket 5: 30%\n  bucket 4: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 7: 50%\n  bucket 6: 50%\n  bucket 8: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 5: 40%\n  bucket 2: 50%\n  bucket 7: 60%\n  bucket 1: 70%\n  bucket 6: 60%\n  bucket 8: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 5: 50%\n  bucket 7: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 6: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 8: 70%\n  bucket 7: 80%\n  bucket 5: 60%\n  bucket 2: 70%\n  bucket 6: 80%\n  bucket 3: 90%\n  bucket 1: 90%\n  bucket 4: 90%\n  bucket 8: 80%\n  bucket 7: 90%\n  bucket 5: 70%\n  bucket 3: 100%\n  bucket 6: 90%\n  bucket 2: 80%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  bucket 1: 100%\n  bucket 8: 90%\n  bucket 7: 100%\n  bucket 6: 100%\n  bucket 5: 80%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  bucket 2: 90%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 8: 100%\n  bucket 5: 90%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  bucket 2: 100%\n  bucket 5: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 58\n  Entering block accumulator loop for bucket 9:\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 9: 20%\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\n  bucket 10: 10%\n  Calculating Z arrays for bucket 11\n  bucket 9: 30%\n  bucket 10: 20%\n  Entering block accumulator loop for bucket 11:\n  bucket 9: 40%\n  bucket 10: 30%\n  bucket 9: 50%\n  bucket 11: 10%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 9: 60%\n  bucket 11: 20%\n  bucket 10: 60%\n  bucket 9: 70%\n  bucket 11: 30%\n  bucket 10: 70%\n  bucket 9: 80%\n  bucket 10: 80%\n  bucket 11: 40%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 11: 50%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  Sorting block time: 00:00:00\n  bucket 11: 100%\nReturning block of 358 for bucket 10\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\nGetting block 13 of 58\n  Calculating Z arrays for bucket 12\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 12:\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 10%\n  bucket 13: 10%\n  bucket 12: 20%\n  bucket 13: 20%\n  bucket 12: 30%\n  bucket 13: 30%\n  bucket 12: 40%\n  bucket 13: 40%\n  bucket 12: 50%\n  bucket 13: 50%\n  bucket 12: 60%\n  bucket 13: 60%\n  bucket 12: 70%\n  bucket 13: 70%\n  bucket 12: 80%\n  bucket 13: 80%\n  bucket 12: 90%\n  bucket 13: 90%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\nGetting block 15 of 58\n  Calculating Z arrays for bucket 14\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  Entering block accumulator loop for bucket 14:\n  bucket 15: 10%\nGetting block 16 of 58\n  bucket 14: 10%\n  Reserving size (388) for bucket 16\n  bucket 15: 20%\n  Calculating Z arrays for bucket 16\n  bucket 15: 30%\n  bucket 14: 20%\n  Entering block accumulator loop for bucket 16:\n  bucket 15: 40%\nGetting block 17 of 58\n  bucket 15: 50%\n  bucket 16: 10%\n  bucket 14: 30%\n  Reserving size (388) for bucket 17\nGetting block 18 of 58\n  bucket 16: 20%\n  bucket 15: 60%\n  bucket 14: 40%\n  Calculating Z arrays for bucket 17\n  Reserving size (388) for bucket 18\n  bucket 15: 70%\n  Calculating Z arrays for bucket 18\n  bucket 16: 30%\n  Entering block accumulator loop for bucket 17:\n  bucket 14: 50%\n  bucket 15: 80%\n  Entering block accumulator loop for bucket 18:\n  bucket 16: 40%\n  bucket 17: 10%\n  bucket 14: 60%\n  bucket 15: 90%\n  bucket 16: 50%\n  bucket 17: 20%\n  bucket 18: 10%\n  bucket 15: 100%\n  bucket 16: 60%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  bucket 17: 30%\n  bucket 14: 70%\n  bucket 18: 20%\n  bucket 16: 70%\n  bucket 17: 40%\n  bucket 16: 80%\n  bucket 18: 30%\n  bucket 14: 80%\n  bucket 17: 50%\n  bucket 16: 90%\n  bucket 18: 40%\n  bucket 17: 60%\n  bucket 14: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 17: 70%\n  bucket 18: 50%\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  bucket 17: 80%\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 18: 60%\n  bucket 17: 90%\n  bucket 18: 70%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 18: 80%\nGetting block 19 of 58\n  bucket 18: 90%\n  Reserving size (388) for bucket 19\n  bucket 18: 100%\n  Calculating Z arrays for bucket 19\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\n  Sorting block time: 00:00:00\n  Entering block accumulator loop for bucket 19:\nReturning block of 340 for bucket 14\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nReturning block of 216 for bucket 17\n  bucket 19: 10%\n  bucket 19: 20%\n  bucket 19: 30%\n  bucket 19: 40%\n  bucket 19: 50%\n  bucket 19: 60%\n  bucket 19: 70%\n  bucket 19: 80%\n  bucket 19: 90%\n  bucket 19: 100%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 20:\n  bucket 20: 10%\n  bucket 20: 20%\n  bucket 20: 30%\n  bucket 20: 40%\n  bucket 20: 50%\n  bucket 20: 60%\n  bucket 20: 70%\n  bucket 20: 80%\n  bucket 20: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\nGetting block 22 of 58\n  Calculating Z arrays for bucket 21\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  Entering block accumulator loop for bucket 21:\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 10%\n  bucket 22: 10%\n  bucket 21: 20%\n  bucket 22: 20%\n  bucket 21: 30%\n  bucket 22: 30%\n  bucket 21: 40%\n  bucket 22: 40%\n  bucket 21: 50%\n  bucket 21: 60%\n  bucket 22: 50%\n  bucket 21: 70%\n  bucket 22: 60%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 22: 70%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 22: 80%\n  bucket 22: 90%\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 23: 30%\n  bucket 23: 40%\n  bucket 23: 50%\n  bucket 23: 60%\n  bucket 23: 70%\n  bucket 23: 80%\n  bucket 23: 90%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 24: 30%\n  bucket 24: 40%\nGetting block 25 of 58\nGetting block 26 of 58\n  Reserving size (388) for bucket 25\n  Reserving size (388) for bucket 26\n  bucket 24: 50%\n  Calculating Z arrays for bucket 25\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 60%\n  Entering block accumulator loop for bucket 26:\n  bucket 24: 70%\n  bucket 25: 10%\n  bucket 26: 10%\n  bucket 24: 80%\n  bucket 25: 20%\n  bucket 26: 20%\n  bucket 24: 90%\n  bucket 25: 30%\n  bucket 26: 30%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  bucket 25: 40%\n  bucket 26: 40%\n  bucket 25: 50%\n  bucket 26: 50%\n  bucket 25: 60%\n  bucket 26: 60%\n  bucket 25: 70%\n  bucket 26: 70%\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\n  bucket 25: 80%\n  bucket 26: 80%\n  bucket 25: 90%\n  bucket 26: 90%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\nGetting block 27 of 58\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 27: 10%\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 27: 20%\n  bucket 28: 10%\n  bucket 27: 30%\n  bucket 28: 20%\n  bucket 27: 40%\n  bucket 28: 30%\n  bucket 27: 50%\n  bucket 28: 40%\n  bucket 27: 60%\n  bucket 28: 50%\n  bucket 27: 70%\n  bucket 28: 60%\n  bucket 27: 80%\n  bucket 28: 70%\n  bucket 28: 80%\n  bucket 27: 90%\n  bucket 28: 90%\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\nGetting block 29 of 58\n  Reserving size (388) for bucket 29\nGetting block 30 of 58\n  Calculating Z arrays for bucket 29\n  Reserving size (388) for bucket 30\nGetting block 31 of 58\nGetting block 32 of 58\nGetting block 33 of 58\n  Calculating Z arrays for bucket 30\n  Reserving size (388) for bucket 31\n  Entering block accumulator loop for bucket 29:\n  Reserving size (388) for bucket 32\nGetting block 34 of 58\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 30:\n  Calculating Z arrays for bucket 32\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 31:\n  bucket 29: 10%\n  Entering block accumulator loop for bucket 32:\n  Calculating Z arrays for bucket 34\n  Entering block accumulator loop for bucket 33:\n  bucket 30: 10%\n  bucket 29: 20%\n  Entering block accumulator loop for bucket 34:\n  bucket 31: 10%\n  bucket 30: 20%\n  bucket 29: 30%\n  bucket 34: 10%\n  bucket 33: 10%\n  bucket 32: 10%\n  bucket 31: 20%\n  bucket 30: 30%\n  bucket 29: 40%\n  bucket 34: 20%\n  bucket 33: 20%\n  bucket 31: 30%\n  bucket 30: 40%\n  bucket 29: 50%\n  bucket 32: 20%\n  bucket 34: 30%\n  bucket 31: 40%\n  bucket 30: 50%\n  bucket 29: 60%\n  bucket 33: 30%\n  bucket 34: 40%\n  bucket 32: 30%\n  bucket 31: 50%\n  bucket 30: 60%\n  bucket 29: 70%\n  bucket 34: 50%\n  bucket 33: 40%\n  bucket 32: 40%\n  bucket 31: 60%\n  bucket 30: 70%\n  bucket 29: 80%\n  bucket 34: 60%\n  bucket 3\n..\n 50%\n  bucket 24: 60%\n  bucket 23: 30%\n  bucket 24: 70%\n  bucket 23: 40%\nGetting block 25 of 57\n  bucket 23: 50%\n  bucket 24: 80%\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  bucket 24: 90%\n  bucket 23: 60%\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 100%\n  bucket 23: 70%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  bucket 25: 10%\n  bucket 23: 80%\n  bucket 25: 20%\n  bucket 23: 90%\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 30%\n  bucket 23: 100%\n  Sorting block of length 349 for bucket 23\n  (Using difference cover)\n  bucket 25: 40%\n  bucket 25: 50%\n  bucket 25: 60%\n  Sorting block time: 00:00:00\nReturning block of 350 for bucket 23\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  bucket 26: 10%\n  Entering block accumulator loop for bucket 27:\n  Entering block accumulator loop for bucket 28:\n  bucket 26: 20%\n  bucket 27: 10%\n  bucket 28: 10%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 27: 30%\n  bucket 28: 20%\n  bucket 26: 40%\n  bucket 27: 40%\n  bucket 26: 50%\n  bucket 28: 30%\n  bucket 26: 60%\n  bucket 28: 40%\n  bucket 27: 50%\n  bucket 26: 70%\n  bucket 28: 50%\n  bucket 27: 60%\n  bucket 26: 80%\n  bucket 28: 60%\n  bucket 27: 70%\n  bucket 26: 90%\n  bucket 28: 70%\n  bucket 27: 80%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 28: 80%\n  bucket 27: 90%\n  bucket 28: 90%\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 29: 10%\n  bucket 29: 20%\n  bucket 29: 30%\n  bucket 29: 40%\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\nGetting block 31 of 57\n  Calculating Z arrays for bucket 30\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 31: 10%\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 30: 20%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 30: 30%\n  bucket 31: 90%\n  bucket 30: 40%\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 32:\n  bucket 32: 10%\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\n  bucket 32: 20%\n  bucket 32: 30%\n  bucket 32: 40%\n  bucket 32: 50%\n  bucket 32: 60%\n  bucket 32: 70%\n  bucket 32: 80%\n  bucket 32: 90%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\n  bucket 33: 10%\nGetting block 34 of 57\n  bucket 33: 20%\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 30%\n  Entering block accumulator loop for bucket 34:\n  bucket 33: 40%\n  bucket 34: 10%\n  bucket 33: 50%\n  bucket 34: 20%\n  bucket 33: 60%\n  bucket 34: 30%\n  bucket 33: 70%\n  bucket 34: 40%\n  bucket 33: 80%\n  bucket 34: 50%\n  bucket 33: 90%\n  bucket 34: 60%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 34: 70%\n  bucket 34: 80%\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\n  bucket 35: 10%\n  Entering block accumulator loop for bucket 36:\n  bucket 35: 20%\n  bucket 36: 10%\n  bucket 35: 30%\n  bucket 36: 20%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 36: 30%\n  bucket 35: 60%\n  bucket 36: 40%\n  bucket 35: 70%\n  bucket 36: 50%\n  bucket 35: 80%\n  bucket 36: 60%\n  bucket 35: 90%\n  bucket 36: 70%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 37:\n  bucket 37: 10%\n  bucket 37: 20%\n  bucket 37: 30%\n  bucket 37: 40%\n  bucket 37: 50%\n  bucket 37: 60%\n  bucket 37: 70%\n  bucket 37: 80%\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  bucket 38: 10%\nGetting block 39 of 57\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 20%\n  bucket 39: 10%\n  bucket 38: 30%\n  bucket 39: 20%\n  bucket 38: 40%\n  bucket 39: 30%\n  bucket 38: 50%\n  bucket 39: 40%\n  bucket 38: 60%\n  bucket 39: 50%\n  bucket 38: 70%\n  bucket 39: 60%\n  bucket 39: 70%\n  bucket 38: 80%\n  bucket 39: 80%\n  bucket 38: 90%\n  bucket 39: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 40: 10%\nGetting block 41 of 57\n  Reserving size (388) for bucket 41\n  bucket 40: 20%\n  Calculating Z arrays for bucket 41\n  Entering block accumulator loop for bucket 41:\n  bucket 40: 30%\n  bucket 41: 10%\n  bucket 40: 40%\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\n  bucket 40: 50%\n  bucket 41: 20%\n  Entering block accumulator loop for bucket 42:\n  bucket 42: 10%\n  bucket 40: 60%\n  bucket 41: 30%\n  bucket 42: 20%\n  bucket 41: 40%\n  bucket 40: 70%\n  bucket 42: 30%\n  bucket 41: 50%\n  bucket 40: 80%\n  bucket 42: 40%\n  bucket 42: 50%\n  bucket 41: 60%\n  bucket 40: 90%\n  bucket 41: 70%\n  bucket 42: 60%\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 41: 80%\n  bucket 42: 70%\n  bucket 41: 90%\n  bucket 42: 80%\n  bucket 41: 100%\n  bucket 42: 90%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 43:\n  bucket 43: 10%\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 43: 20%\n  bucket 44: 10%\n  bucket 43: 30%\n  bucket 44: 20%\n  bucket 43: 40%\n  bucket 44: 30%\n  bucket 43: 50%\n  bucket 44: 40%\n  bucket 43: 60%\n  bucket 44: 50%\n  bucket 43: 70%\n  bucket 44: 60%\n  bucket 43: 80%\n  bucket 44: 70%\n  bucket 43: 90%\n  bucket 44: 80%\n  bucket 43: 100%\n  bucket 44: 90%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 45: 10%\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 45: 40%\nGetting block 46 of 57\n  bucket 45: 50%\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  bucket 45: 60%\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 70%\n  bucket 46: 10%\n  bucket 45: 80%\n  bucket 46: 20%\n  bucket 45: 90%\n  bucket 46: 30%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 40%\n  bucket 46: 50%\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\nGetting block 48 of 57\n  Calculating Z arrays for bucket 47\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 47:\n  Entering block accumulator loop for bucket 48:\n  bucket 48: 10%\n  bucket 47: 10%\n  bucket 48: 20%\n  bucket 47: 20%\n  bucket 48: 30%\n  bucket 47: 30%\n  bucket 48: 40%\n  bucket 47: 40%\n  bucket 48: 50%\n  bucket 47: 50%\n  bucket 48: 60%\n  bucket 47: 60%\n  bucket 47: 70%\n  bucket 48: 70%\n  bucket 47: 80%\n  bucket 48: 80%\n  bucket 47: 90%\n  bucket 48: 90%\n  bucket 47: 100%\n  bucket 48: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\nGetting block 50 of 57\n  Entering block accumulator loop for bucket 49:\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 10%\n  bucket 50: 10%\n  bucket 49: 20%\n  bucket 50: 20%\n  bucket 49: 30%\n  bucket 49: 40%\n  bucket 50: 30%\n  bucket 49: 50%\n  bucket 49: 60%\n  bucket 50: 40%\n  bucket 49: 70%\n  bucket 50: 50%\n  bucket 49: 80%\n  bucket 49: 90%\n  bucket 50: 60%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 50: 70%\n  bucket 50: 80%\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  bucket 50: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  bucket 51: 10%\n  Calculating Z arrays for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 52:\n  bucket 51: 20%\n  Entering block accumulator loop for bucket 53:\n  bucket 52: 10%\n  bucket 53: 10%\n  bucket 52: 20%\n  bucket 51: 30%\n  bucket 53: 20%\n  bucket 52: 30%\n  bucket 53: 30%\n  bucket 51: 40%\n  bucket 52: 40%\n  bucket 53: 40%\n  bucket 52: 50%\n  bucket 53: 50%\n  bucket 51: 50%\n  bucket 52: 60%\n  bucket 53: 60%\n  bucket 51: 60%\n  bucket 52: 70%\n  bucket 53: 70%\n  bucket 52: 80%\n  bucket 53: 80%\n  bucket 51: 70%\n  bucket 52: 90%\n  bucket 53: 90%\n  bucket 52: 100%\n  bucket 53: 100%\n  bucket 51: 80%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  bucket 51: 90%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  Entering block accumulator loop for bucket 54:\n  bucket 54: 10%\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\n  bucket 54: 20%\n  bucket 54: 30%\n  bucket 54: 40%\n  bucket 54: 50%\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  bucket 54: 60%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 54: 90%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\nGetting block 56 of 57\n  Entering block accumulator loop for bucket 55:\n  Reserving size (388) for bucket 56\nGetting block 57 of 57\n  Calculating Z arrays for bucket 56\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  Entering block accumulator loop for bucket 56:\n  bucket 57: 10%\n  bucket 56: 10%\n  bucket 57: 20%\n  bucket 56: 20%\n  bucket 57: 30%\n  bucket 55: 10%\n  bucket 57: 40%\n  bucket 56: 30%\n  bucket 55: 20%\n  bucket 57: 50%\n  bucket 56: 40%\n  bucket 55: 30%\n  bucket 57: 60%\n  bucket 55: 40%\n  bucket 57: 70%\n  bucket 56: 50%\n  bucket 55: 50%\n  bucket 57: 80%\n  bucket 56: 60%\n  bucket 55: 60%\n  bucket 57: 90%\n  bucket 56: 70%\n  bucket 57: 100%\n  bucket 55: 70%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  bucket 56: 80%\n  bucket 55: 80%\n  bucket 56: 90%\n  bucket 55: 90%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0",  "tool_stderr": "Building a SMALL index\n",  "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/b/c/d/dataset_bcd1892e-cd9c-4366-8cb6-d79fede59479.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 2\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 6\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 6:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 8:\n  Entering block accumulator loop for bucket 5:\n  bucket 1: 20%\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 7: 10%\n  bucket 6: 10%\n  bucket 8: 10%\n  bucket 2: 10%\n  bucket 5: 10%\n  bucket 3: 20%\n  bucket 1: 30%\n  bucket 4: 20%\n  bucket 7: 20%\n  bucket 6: 20%\n  bucket 8: 20%\n  bucket 2: 20%\n  bucket 3: 30%\n  bucket 1: 40%\n  bucket 4: 30%\n  bucket 7: 30%\n  bucket 6: 30%\n  bucket 8: 30%\n  bucket 5: 20%\n  bucket 3: 40%\n  bucket 2: 30%\n  bucket 4: 40%\n  bucket 1: 50%\n  bucket 7: 40%\n  bucket 6: 40%\n  bucket 8: 40%\n  bucket 3: 50%\n  bucket 5: 30%\n  bucket 4: 50%\n  bucket 2: 40%\n  bucket 1: 60%\n  bucket 7: 50%\n  bucket 6: 50%\n  bucket 8: 50%\n  bucket 3: 60%\n  bucket 4: 60%\n  bucket 5: 40%\n  bucket 2: 50%\n  bucket 7: 60%\n  bucket 1: 70%\n  bucket 6: 60%\n  bucket 8: 60%\n  bucket 3: 70%\n  bucket 4: 70%\n  bucket 5: 50%\n  bucket 7: 70%\n  bucket 2: 60%\n  bucket 1: 80%\n  bucket 6: 70%\n  bucket 3: 80%\n  bucket 4: 80%\n  bucket 8: 70%\n  bucket 7: 80%\n  bucket 5: 60%\n  bucket 2: 70%\n  bucket 6: 80%\n  bucket 3: 90%\n  bucket 1: 90%\n  bucket 4: 90%\n  bucket 8: 80%\n  bucket 7: 90%\n  bucket 5: 70%\n  bucket 3: 100%\n  bucket 6: 90%\n  bucket 2: 80%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 4: 100%\n  bucket 1: 100%\n  bucket 8: 90%\n  bucket 7: 100%\n  bucket 6: 100%\n  bucket 5: 80%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  bucket 2: 90%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 8: 100%\n  bucket 5: 90%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  bucket 2: 100%\n  bucket 5: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 58\n  Entering block accumulator loop for bucket 9:\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 9: 20%\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\n  bucket 10: 10%\n  Calculating Z arrays for bucket 11\n  bucket 9: 30%\n  bucket 10: 20%\n  Entering block accumulator loop for bucket 11:\n  bucket 9: 40%\n  bucket 10: 30%\n  bucket 9: 50%\n  bucket 11: 10%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 9: 60%\n  bucket 11: 20%\n  bucket 10: 60%\n  bucket 9: 70%\n  bucket 11: 30%\n  bucket 10: 70%\n  bucket 9: 80%\n  bucket 10: 80%\n  bucket 11: 40%\n  bucket 9: 90%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 11: 50%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 60%\n  bucket 11: 70%\n  bucket 11: 80%\n  bucket 11: 90%\n  Sorting block time: 00:00:00\n  bucket 11: 100%\nReturning block of 358 for bucket 10\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\nGetting block 13 of 58\n  Calculating Z arrays for bucket 12\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 12:\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 10%\n  bucket 13: 10%\n  bucket 12: 20%\n  bucket 13: 20%\n  bucket 12: 30%\n  bucket 13: 30%\n  bucket 12: 40%\n  bucket 13: 40%\n  bucket 12: 50%\n  bucket 13: 50%\n  bucket 12: 60%\n  bucket 13: 60%\n  bucket 12: 70%\n  bucket 13: 70%\n  bucket 12: 80%\n  bucket 13: 80%\n  bucket 12: 90%\n  bucket 13: 90%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\nGetting block 15 of 58\n  Calculating Z arrays for bucket 14\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  Entering block accumulator loop for bucket 14:\n  bucket 15: 10%\nGetting block 16 of 58\n  bucket 14: 10%\n  Reserving size (388) for bucket 16\n  bucket 15: 20%\n  Calculating Z arrays for bucket 16\n  bucket 15: 30%\n  bucket 14: 20%\n  Entering block accumulator loop for bucket 16:\n  bucket 15: 40%\nGetting block 17 of 58\n  bucket 15: 50%\n  bucket 16: 10%\n  bucket 14: 30%\n  Reserving size (388) for bucket 17\nGetting block 18 of 58\n  bucket 16: 20%\n  bucket 15: 60%\n  bucket 14: 40%\n  Calculating Z arrays for bucket 17\n  Reserving size (388) for bucket 18\n  bucket 15: 70%\n  Calculating Z arrays for bucket 18\n  bucket 16: 30%\n  Entering block accumulator loop for bucket 17:\n  bucket 14: 50%\n  bucket 15: 80%\n  Entering block accumulator loop for bucket 18:\n  bucket 16: 40%\n  bucket 17: 10%\n  bucket 14: 60%\n  bucket 15: 90%\n  bucket 16: 50%\n  bucket 17: 20%\n  bucket 18: 10%\n  bucket 15: 100%\n  bucket 16: 60%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  bucket 17: 30%\n  bucket 14: 70%\n  bucket 18: 20%\n  bucket 16: 70%\n  bucket 17: 40%\n  bucket 16: 80%\n  bucket 18: 30%\n  bucket 14: 80%\n  bucket 17: 50%\n  bucket 16: 90%\n  bucket 18: 40%\n  bucket 17: 60%\n  bucket 14: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 17: 70%\n  bucket 18: 50%\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  bucket 17: 80%\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 18: 60%\n  bucket 17: 90%\n  bucket 18: 70%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 18: 80%\nGetting block 19 of 58\n  bucket 18: 90%\n  Reserving size (388) for bucket 19\n  bucket 18: 100%\n  Calculating Z arrays for bucket 19\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\n  Sorting block time: 00:00:00\n  Entering block accumulator loop for bucket 19:\nReturning block of 340 for bucket 14\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nReturning block of 216 for bucket 17\n  bucket 19: 10%\n  bucket 19: 20%\n  bucket 19: 30%\n  bucket 19: 40%\n  bucket 19: 50%\n  bucket 19: 60%\n  bucket 19: 70%\n  bucket 19: 80%\n  bucket 19: 90%\n  bucket 19: 100%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 20:\n  bucket 20: 10%\n  bucket 20: 20%\n  bucket 20: 30%\n  bucket 20: 40%\n  bucket 20: 50%\n  bucket 20: 60%\n  bucket 20: 70%\n  bucket 20: 80%\n  bucket 20: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\nGetting block 22 of 58\n  Calculating Z arrays for bucket 21\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  Entering block accumulator loop for bucket 21:\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 10%\n  bucket 22: 10%\n  bucket 21: 20%\n  bucket 22: 20%\n  bucket 21: 30%\n  bucket 22: 30%\n  bucket 21: 40%\n  bucket 22: 40%\n  bucket 21: 50%\n  bucket 21: 60%\n  bucket 22: 50%\n  bucket 21: 70%\n  bucket 22: 60%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 22: 70%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 22: 80%\n  bucket 22: 90%\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 23: 30%\n  bucket 23: 40%\n  bucket 23: 50%\n  bucket 23: 60%\n  bucket 23: 70%\n  bucket 23: 80%\n  bucket 23: 90%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 24: 30%\n  bucket 24: 40%\nGetting block 25 of 58\nGetting block 26 of 58\n  Reserving size (388) for bucket 25\n  Reserving size (388) for bucket 26\n  bucket 24: 50%\n  Calculating Z arrays for bucket 25\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 60%\n  Entering block accumulator loop for bucket 26:\n  bucket 24: 70%\n  bucket 25: 10%\n  bucket 26: 10%\n  bucket 24: 80%\n  bucket 25: 20%\n  bucket 26: 20%\n  bucket 24: 90%\n  bucket 25: 30%\n  bucket 26: 30%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  bucket 25: 40%\n  bucket 26: 40%\n  bucket 25: 50%\n  bucket 26: 50%\n  bucket 25: 60%\n  bucket 26: 60%\n  bucket 25: 70%\n  bucket 26: 70%\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\n  bucket 25: 80%\n  bucket 26: 80%\n  bucket 25: 90%\n  bucket 26: 90%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\nGetting block 27 of 58\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 27: 10%\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 27: 20%\n  bucket 28: 10%\n  bucket 27: 30%\n  bucket 28: 20%\n  bucket 27: 40%\n  bucket 28: 30%\n  bucket 27: 50%\n  bucket 28: 40%\n  bucket 27: 60%\n  bucket 28: 50%\n  bucket 27: 70%\n  bucket 28: 60%\n  bucket 27: 80%\n  bucket 28: 70%\n  bucket 28: 80%\n  bucket 27: 90%\n  bucket 28: 90%\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\nGetting block 29 of 58\n  Reserving size (388) for bucket 29\nGetting block 30 of 58\n  Calculating Z arrays for bucket 29\n  Reserving size (388) for bucket 30\nGetting block 31 of 58\nGetting block 32 of 58\nGetting block 33 of 58\n  Calculating Z arrays for bucket 30\n  Reserving size (388) for bucket 31\n  Entering block accumulator loop for bucket 29:\n  Reserving size (388) for bucket 32\nGetting block 34 of 58\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 30:\n  Calculating Z arrays for bucket 32\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 31:\n  bucket 29: 10%\n  Entering block accumulator loop for bucket 32:\n  Calculating Z arrays for bucket 34\n  Entering block accumulator loop for bucket 33:\n  bucket 30: 10%\n  bucket 29: 20%\n  Entering block accumulator loop for bucket 34:\n  bucket 31: 10%\n  bucket 30: 20%\n  bucket 29: 30%\n  bucket 34: 10%\n  bucket 33: 10%\n  bucket 32: 10%\n  bucket 31: 20%\n  bucket 30: 30%\n  bucket 29: 40%\n  bucket 34: 20%\n  bucket 33: 20%\n  bucket 31: 30%\n  bucket 30: 40%\n  bucket 29: 50%\n  bucket 32: 20%\n  bucket 34: 30%\n  bucket 31: 40%\n  bucket 30: 50%\n  bucket 29: 60%\n  bucket 33: 30%\n  bucket 34: 40%\n  bucket 32: 30%\n  bucket 31: 50%\n  bucket 30: 60%\n  bucket 29: 70%\n  bucket 34: 50%\n  bucket 33: 40%\n  bucket 32: 40%\n  bucket 31: 60%\n  bucket 30: 70%\n  bucket 29: 80%\n  bucket 34: 60%\n  bucket 3\n..\n 50%\n  bucket 24: 60%\n  bucket 23: 30%\n  bucket 24: 70%\n  bucket 23: 40%\nGetting block 25 of 57\n  bucket 23: 50%\n  bucket 24: 80%\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  bucket 24: 90%\n  bucket 23: 60%\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 100%\n  bucket 23: 70%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  bucket 25: 10%\n  bucket 23: 80%\n  bucket 25: 20%\n  bucket 23: 90%\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 30%\n  bucket 23: 100%\n  Sorting block of length 349 for bucket 23\n  (Using difference cover)\n  bucket 25: 40%\n  bucket 25: 50%\n  bucket 25: 60%\n  Sorting block time: 00:00:00\nReturning block of 350 for bucket 23\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  bucket 26: 10%\n  Entering block accumulator loop for bucket 27:\n  Entering block accumulator loop for bucket 28:\n  bucket 26: 20%\n  bucket 27: 10%\n  bucket 28: 10%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 27: 30%\n  bucket 28: 20%\n  bucket 26: 40%\n  bucket 27: 40%\n  bucket 26: 50%\n  bucket 28: 30%\n  bucket 26: 60%\n  bucket 28: 40%\n  bucket 27: 50%\n  bucket 26: 70%\n  bucket 28: 50%\n  bucket 27: 60%\n  bucket 26: 80%\n  bucket 28: 60%\n  bucket 27: 70%\n  bucket 26: 90%\n  bucket 28: 70%\n  bucket 27: 80%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 28: 80%\n  bucket 27: 90%\n  bucket 28: 90%\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 29: 10%\n  bucket 29: 20%\n  bucket 29: 30%\n  bucket 29: 40%\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\nGetting block 31 of 57\n  Calculating Z arrays for bucket 30\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 31: 10%\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 30: 20%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 30: 30%\n  bucket 31: 90%\n  bucket 30: 40%\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 32:\n  bucket 32: 10%\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\n  bucket 32: 20%\n  bucket 32: 30%\n  bucket 32: 40%\n  bucket 32: 50%\n  bucket 32: 60%\n  bucket 32: 70%\n  bucket 32: 80%\n  bucket 32: 90%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\n  bucket 33: 10%\nGetting block 34 of 57\n  bucket 33: 20%\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 30%\n  Entering block accumulator loop for bucket 34:\n  bucket 33: 40%\n  bucket 34: 10%\n  bucket 33: 50%\n  bucket 34: 20%\n  bucket 33: 60%\n  bucket 34: 30%\n  bucket 33: 70%\n  bucket 34: 40%\n  bucket 33: 80%\n  bucket 34: 50%\n  bucket 33: 90%\n  bucket 34: 60%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 34: 70%\n  bucket 34: 80%\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\n  bucket 35: 10%\n  Entering block accumulator loop for bucket 36:\n  bucket 35: 20%\n  bucket 36: 10%\n  bucket 35: 30%\n  bucket 36: 20%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 36: 30%\n  bucket 35: 60%\n  bucket 36: 40%\n  bucket 35: 70%\n  bucket 36: 50%\n  bucket 35: 80%\n  bucket 36: 60%\n  bucket 35: 90%\n  bucket 36: 70%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 37:\n  bucket 37: 10%\n  bucket 37: 20%\n  bucket 37: 30%\n  bucket 37: 40%\n  bucket 37: 50%\n  bucket 37: 60%\n  bucket 37: 70%\n  bucket 37: 80%\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  bucket 38: 10%\nGetting block 39 of 57\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 20%\n  bucket 39: 10%\n  bucket 38: 30%\n  bucket 39: 20%\n  bucket 38: 40%\n  bucket 39: 30%\n  bucket 38: 50%\n  bucket 39: 40%\n  bucket 38: 60%\n  bucket 39: 50%\n  bucket 38: 70%\n  bucket 39: 60%\n  bucket 39: 70%\n  bucket 38: 80%\n  bucket 39: 80%\n  bucket 38: 90%\n  bucket 39: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 40: 10%\nGetting block 41 of 57\n  Reserving size (388) for bucket 41\n  bucket 40: 20%\n  Calculating Z arrays for bucket 41\n  Entering block accumulator loop for bucket 41:\n  bucket 40: 30%\n  bucket 41: 10%\n  bucket 40: 40%\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\n  bucket 40: 50%\n  bucket 41: 20%\n  Entering block accumulator loop for bucket 42:\n  bucket 42: 10%\n  bucket 40: 60%\n  bucket 41: 30%\n  bucket 42: 20%\n  bucket 41: 40%\n  bucket 40: 70%\n  bucket 42: 30%\n  bucket 41: 50%\n  bucket 40: 80%\n  bucket 42: 40%\n  bucket 42: 50%\n  bucket 41: 60%\n  bucket 40: 90%\n  bucket 41: 70%\n  bucket 42: 60%\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 41: 80%\n  bucket 42: 70%\n  bucket 41: 90%\n  bucket 42: 80%\n  bucket 41: 100%\n  bucket 42: 90%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 43:\n  bucket 43: 10%\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 43: 20%\n  bucket 44: 10%\n  bucket 43: 30%\n  bucket 44: 20%\n  bucket 43: 40%\n  bucket 44: 30%\n  bucket 43: 50%\n  bucket 44: 40%\n  bucket 43: 60%\n  bucket 44: 50%\n  bucket 43: 70%\n  bucket 44: 60%\n  bucket 43: 80%\n  bucket 44: 70%\n  bucket 43: 90%\n  bucket 44: 80%\n  bucket 43: 100%\n  bucket 44: 90%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 45: 10%\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 45: 40%\nGetting block 46 of 57\n  bucket 45: 50%\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  bucket 45: 60%\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 70%\n  bucket 46: 10%\n  bucket 45: 80%\n  bucket 46: 20%\n  bucket 45: 90%\n  bucket 46: 30%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 40%\n  bucket 46: 50%\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\nGetting block 48 of 57\n  Calculating Z arrays for bucket 47\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 47:\n  Entering block accumulator loop for bucket 48:\n  bucket 48: 10%\n  bucket 47: 10%\n  bucket 48: 20%\n  bucket 47: 20%\n  bucket 48: 30%\n  bucket 47: 30%\n  bucket 48: 40%\n  bucket 47: 40%\n  bucket 48: 50%\n  bucket 47: 50%\n  bucket 48: 60%\n  bucket 47: 60%\n  bucket 47: 70%\n  bucket 48: 70%\n  bucket 47: 80%\n  bucket 48: 80%\n  bucket 47: 90%\n  bucket 48: 90%\n  bucket 47: 100%\n  bucket 48: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\nGetting block 50 of 57\n  Entering block accumulator loop for bucket 49:\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 10%\n  bucket 50: 10%\n  bucket 49: 20%\n  bucket 50: 20%\n  bucket 49: 30%\n  bucket 49: 40%\n  bucket 50: 30%\n  bucket 49: 50%\n  bucket 49: 60%\n  bucket 50: 40%\n  bucket 49: 70%\n  bucket 50: 50%\n  bucket 49: 80%\n  bucket 49: 90%\n  bucket 50: 60%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 50: 70%\n  bucket 50: 80%\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  bucket 50: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  bucket 51: 10%\n  Calculating Z arrays for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 52:\n  bucket 51: 20%\n  Entering block accumulator loop for bucket 53:\n  bucket 52: 10%\n  bucket 53: 10%\n  bucket 52: 20%\n  bucket 51: 30%\n  bucket 53: 20%\n  bucket 52: 30%\n  bucket 53: 30%\n  bucket 51: 40%\n  bucket 52: 40%\n  bucket 53: 40%\n  bucket 52: 50%\n  bucket 53: 50%\n  bucket 51: 50%\n  bucket 52: 60%\n  bucket 53: 60%\n  bucket 51: 60%\n  bucket 52: 70%\n  bucket 53: 70%\n  bucket 52: 80%\n  bucket 53: 80%\n  bucket 51: 70%\n  bucket 52: 90%\n  bucket 53: 90%\n  bucket 52: 100%\n  bucket 53: 100%\n  bucket 51: 80%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  bucket 51: 90%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  Entering block accumulator loop for bucket 54:\n  bucket 54: 10%\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\n  bucket 54: 20%\n  bucket 54: 30%\n  bucket 54: 40%\n  bucket 54: 50%\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  bucket 54: 60%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 54: 90%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\nGetting block 56 of 57\n  Entering block accumulator loop for bucket 55:\n  Reserving size (388) for bucket 56\nGetting block 57 of 57\n  Calculating Z arrays for bucket 56\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  Entering block accumulator loop for bucket 56:\n  bucket 57: 10%\n  bucket 56: 10%\n  bucket 57: 20%\n  bucket 56: 20%\n  bucket 57: 30%\n  bucket 55: 10%\n  bucket 57: 40%\n  bucket 56: 30%\n  bucket 55: 20%\n  bucket 57: 50%\n  bucket 56: 40%\n  bucket 55: 30%\n  bucket 57: 60%\n  bucket 55: 40%\n  bucket 57: 70%\n  bucket 56: 50%\n  bucket 55: 50%\n  bucket 57: 80%\n  bucket 56: 60%\n  bucket 55: 60%\n  bucket 57: 90%\n  bucket 56: 70%\n  bucket 57: 100%\n  bucket 55: 70%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  bucket 56: 80%\n  bucket 55: 80%\n  bucket 56: 90%\n  bucket 55: 90%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "traceback": null,  "update_time": "2023-02-07T23:15:35.045551",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_mn9_7sov.sam v. /tmp/history_bam_converted_to_sam_f4sppmju.sam )\n--- local_file\n+++ history_data\n@@ -1,77 +1,78 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 8 -x genome -1 input_f.fastq -2 input_r.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@8 -T /galaxy/server/database/jobs_directory/000/535/tmp -O bam -o /galaxy/server/database/objects/8/5/c/dataset_85c964f4-c8c5-4892-9f50-f0a9ab93ca6e.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3\u003eAAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC\u003e;\u003e=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2\u003eAFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@\u003eBD/9BFBBBBFDFFFF99D=?\u003eDDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n********\n*SNIP *\n********\n-M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D\u003eCFDDFFFB?AF?B;-@\u003e.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000\u003c00\u003cBFBB0\u003c00000\u003c99.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A\u003cGFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.\u003cADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/\u003e99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG\u003e0\u003c0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t141\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGACAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTA\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHCHHGDGGGGHGGHHHHHHHHGHGHHHGGGGGHFHHHHFHHHFFHHHHHFGCGGEHFHHFGGHFHGGGGGGHHFEEEAFEFFDFHGHHHHGGGGGGGHH0DGGGGCGHCC-\u003cCCBGHHHGEFFFFHH.C/\u003cAEGHHEG.EEA0GE0:FB0CFGF:A?FFBF??FG0B;FGGGGFGE?BBF;BFBFFFF/F/B?DDF.;.;:ADD.BA/BBFFB:BFE/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t77\t*\t0\t0\t*\t*\t0\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGCGGTGTCCACGCAATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\t1\u003e\u003e1AAFFFFFBGGFE1EEEEGGHGHHH2FGHHHFGFGHGCFGGGEFHGGEGGHHHHGHEFBFEGHHHGHHBEHHHHGHGFHHHGGGGHHEGGGGHHHGFHGHHHH1FHHG?G/AGF1GBFGEFFHF2FDD0FG\u003cGDHBFDGFFCGH//B//?0GFFGFGGHHHFHFB.=1FDFB?FGH.C/.-:::CH0;CAB@-.;0CGFFFGG--9.A@GB\u003e--99@=---AAABA-BF/B?A@F-9BBFF//BB/9/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t141\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATTGCGTGGACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tABBB\u003eFFFFFFFGGGGGGGGGGHHHHHGHHHHGHHGGHHGGHGGHHHGHHHHFHHGHHAFGGGHHHHHGHHHHFHFHHHHHECGGGHGHHHEFHFHGGGGGGGGFGFFGFFEFGEGHHHGHHGGDGGGHGFGGGGGGGGE@GCGGHHHGHHHHHGHHHHFHHGEGFFEGCE.ECCECEHCGGFFE/AABFFG0CFE0BFFF9CFGG.F/BBBFFGFGGGFFFFFFBFEDAEFFFFFBFFFFFFF0;FEBF:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTT\tAAABABBBBBBFGGGGGGGGGGHGHHGHGHHHHHHHHHGHHHGGHDGHHHGGGGHHHHHHHHHHHHHHHFHGHHHHGGHGGHHHFHHHHHCGHFFHHHHHHHHHHHHHGHGEFGAEEEEHHGHHGHGHHHHHHHGHHHHHHGHGHFFBC/BA?BGGGFFFFFFFFFFFFFFFC-@DDFFFFFFFEFAFFFFFFBFBFFFFFFFFFFFFFFFFBFF-\u003e@FFFFFFFFFFBFBFAD--.99;A?////:.9A.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t141\t*\t0\t0\t*\t*\t0\t0\tGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCAAGTGTAGTGCTCGGGGGGG\tBBCCBFFCCCCCGGGGGGGGGGGGGGHHHHHHGGGGGGHHFHGGGGGFGHGGGGGGHHHHHHHHHHFHHHHFHGFFHHGF?ECEFFFFFFHHHHHH?FHHHHHHHHHGFHHHHHHGGGFGHHHHFHHHHHHHHHHGGGFGFGCGGGGHHHHHHHHHHHGGFFHGHHHHHFFHFCGFHCCGHGHCGGHG?DGGGGGFBBFGFBFBBBGGGB0000;CD?DFFAFF9=--;...://;////////.------\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t77\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGGGCTGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCTTGAAGTAGGAACC\tAABABFFFFFFFF4GGGGEBGEFGHGGHGHGHHHGGHFBGFGGGGGHHEFHGEHFHFHEHHHHHGCGGGHFHHCFGHE@1EEEFFGB?EEEEHBGGGCHHGHHBEE@\u003eEAHHFAEBDGGGCEFF?CEGFFHHHHHFHHHFHGHCGCAHHF\u003c..C.D=0CD.GFHHHG.CAGHC:CHB0GGGFFB0:CFA.A-;9.;000CBBFFBFGA.9AA;A;EDDE.ABBFFFF9;BEFFF/BF//9/B//9:B//..\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBBFBBBBBFGGGGGGGGGGHFHHHHHHHHHHHHHHGHHHHGHFHHHGEEGGHHHGHHHHHHHHHHHHEHGHHGGGHGGHGHHHHHGHHHHGHHHHHHHHHHHHHHGHHHHHGEGCGHHHHHGHHHHHHHHHHHHHHGHFFGHGHHGGGDACDFFFFABFFFFFFFFFFD-BC?DA9.DFFBEA==B=?F.;ABBFBFEF-DAF/BFF9/FFFBB/9BFFFFFFF/BFBBFFFFFFF/9FEA?--B/;.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t77\t*\t0\t0\t*\t*\t0\t0\tCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGA\tAABBBBFFFFFFGGGFGGGGGGHHHGGHGGHHHHHHHHHHHGHHGGGGGHHHHHHHHHHHHHHHHHHGGCGDHHHHFGGHHHGGGGGFGGHGGGGHHGGGGHHHHHHGGGGGGHHGGGGDGGFGHGGFCDCHHHHGHHHHGHHFAGFGGEHFGEG.C\u003cEGCECEFCFFHBGHE:GHHGFF0FFFB0CFGGGGAGFFF0;;FFGGGFFGFFCDD.DEFBEDD?9FFFFFFFFFFFFFFF/B./FB///;BF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t141\t*\t0\t0\t*\t*\t0\t0\tGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATT\tBBBBAFFFFFFFGGGGGGGGGGFGHHHHHGHHHHHHHHHHHHCGHHHHHHHGHHHHHHDGHHGGAECHHGHHHHHHHGHHHGHGFHHHHGGHGGHHFHHHHHHFHHHHHHHHH2GHHHHGHGHHFHHGGFGGGHHGHHHHHFHHHHEFHHHHEFGFFHGEHCFGDFDFFFFFCFFFFFFFFFFFFFAFBFFDFFFFFFFFADCF?9?EFBFB9EF-A.;BFFFFFFFBFFFFFFFFFFFFBFFFFFFFFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t77\t*\t0\t0\t*\t*\t0\t0\tGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGCTACAGTTCACTTTAGCTACCTCCAAGTGTTATG\tAA?AAFFFFFFFGGGGGFBFGGGGGGH5GHFEDHHGGGGCGFBGH?AEEHFFEEGHGHHHHGGG?0EHGHHGGGGGC?GEE/EE?GHHHGBHFHHHHHHGHHGHHHGGGCG/A@\u003cFGGHHHHHHHFF/GFDGHHHHHHGFFFGHGGHABGHFHHHHHFHEGDGHGDDEEHHBEDDEGFGHGBFFBFFEGGGEFGFGFB000;F0F;FGGEGGEFFF;-.9//B///B9FFFFF/BFFB/:.BB//;FBFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t141\t*\t0\t0\t*\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTGGAT\tCDDDBFFFFFFFGGGGGGGGGGHHHHHGGHHHGHHHGHHGGGGEHHGGHHHHHHHHHHHHHHGHHGHHHHHGGHHHHHFHHHHGCDCGHHHHHHHHEHHHGHGHHHGFHGGHGGHHHHHHHHFHHHFHHHGHHHHHHHHHFGGHHHHGGGEGAFHHGHHGGHHHHGHFBGFHGHGHGHGGHGGF@DAFEFBECAB=A.0BFFFEDF=A9.@D.-AAFFFA-:-..:.9/0:;0..-..0000::BFB09::\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t77\t*\t0\t0\t*\t*\t0\t0\tTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGA\tABBBBFFFFFFFGGGFGGGGGGHHHGHHGGHBGHGAGFFCAFGHGFFGHHGFHHHHHGGGGGHGHHHHHHHHE3BFFHHHGG0EDF@GHFFGGGHGGGGGGGGGGGGGHHGGEEFHGFHHDDG@DGGGHHGDGGGGGHGG?CF?HHGHHHGHGHHHFFHGGGHHHHGGCD.;0\u003cC;CGGGGEFF/.;0;FFFBF/0;0CFGFFB..9B/;0CBFFBBFFFFBAC?DED9;B9AD;.FFFB/B/;FBA/B//\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBCFCCCCCFGGGGGGGGGGHHHHHHHGHHHHHHHHGHHHHGHDGHHHGGGGHHHHHHHHHHHHHHHGHHHHHGGGEGGHHHHFHHHHHHHHHHHHHHHHHHHHHHGHHGHHGGGGGHHHHHHHHHHHGHHHFHHHHHHGHGHGHGGGGCGGFGGFFFFFFFFFFFFFBFFFFFFFFFFFFFFAFFFFEAEFFFFFFFFFFF9BFFBFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFADAB-/BF.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t77\t*\t0\t0\t*\t*\t0\t0\tCGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTCTGATCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAACAAACACACATCCAGA\t\u003eA33\u003eFFFFFF@FFFGGGGFGGD4EGGGGGHHGFFGHFGGHHHFEFHECFHHHEHGAGBCCGCCEGGHGHEGFBFHFHHHHGGGHFHGHEGGGFEGEGG??@DBGHGGC-@FFGHFHFHB-??DA-DD@9:BEBG@B?E?A.ABBFBFA??F.FF/BFFB/B9B/9;BF9FF9FFFFFFFFFFFFFF?BB?;9EE;-;DDB9//;B-B@;ABFFEFFFF/-.9A.;//9/BF./B/..9.9:...//////\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH\u003c1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n" ], "status": "failure", "test_index": 3, "time_seconds": 36.305073976516724, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/b/c/d/dataset_bcd1892e-cd9c-4366-8cb6-d79fede59479.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58Getting block 6 of 58Getting block 7 of 58Getting block 8 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6  Reserving size (388) for bucket 7  Reserving size (388) for bucket 8  Entering block accumulator loop for bucket 1:  Calculating Z arrays for bucket 2  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 7  Calculating Z arrays for bucket 6  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 2:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 6:  bucket 1: 10%  Entering block accumulator loop for bucket 8:  Entering block accumulator loop for bucket 5:  bucket 1: 20%  bucket 3: 10%  bucket 4: 10%  bucket 7: 10%  bucket 6: 10%  bucket 8: 10%  bucket 2: 10%  bucket 5: 10%  bucket 3: 20%  bucket 1: 30%  bucket 4: 20%  bucket 7: 20%  bucket 6: 20%  bucket 8: 20%  bucket 2: 20%  bucket 3: 30%  bucket 1: 40%  bucket 4: 30%  bucket 7: 30%  bucket 6: 30%  bucket 8: 30%  bucket 5: 20%  bucket 3: 40%  bucket 2: 30%  bucket 4: 40%  bucket 1: 50%  bucket 7: 40%  bucket 6: 40%  bucket 8: 40%  bucket 3: 50%  bucket 5: 30%  bucket 4: 50%  bucket 2: 40%  bucket 1: 60%  bucket 7: 50%  bucket 6: 50%  bucket 8: 50%  bucket 3: 60%  bucket 4: 60%  bucket 5: 40%  bucket 2: 50%  bucket 7: 60%  bucket 1: 70%  bucket 6: 60%  bucket 8: 60%  bucket 3: 70%  bucket 4: 70%  bucket 5: 50%  bucket 7: 70%  bucket 2: 60%  bucket 1: 80%  bucket 6: 70%  bucket 3: 80%  bucket 4: 80%  bucket 8: 70%  bucket 7: 80%  bucket 5: 60%  bucket 2: 70%  bucket 6: 80%  bucket 3: 90%  bucket 1: 90%  bucket 4: 90%  bucket 8: 80%  bucket 7: 90%  bucket 5: 70%  bucket 3: 100%  bucket 6: 90%  bucket 2: 80%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 4: 100%  bucket 1: 100%  bucket 8: 90%  bucket 7: 100%  bucket 6: 100%  bucket 5: 80%  Sorting block of length 328 for bucket 4  (Using difference cover)  Sorting block of length 355 for bucket 1  (Using difference cover)  Sorting block of length 368 for bucket 7  (Using difference cover)  bucket 2: 90%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 8: 100%  bucket 5: 90%  Sorting block of length 171 for bucket 8  (Using difference cover)  bucket 2: 100%  bucket 5: 100%  Sorting block of length 165 for bucket 2  (Using difference cover)  Sorting block of length 203 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 340 for bucket 6  Sorting block time: 00:00:00Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 172 for bucket 8  Sorting block time: 00:00:00Returning block of 166 for bucket 2Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 58  Entering block accumulator loop for bucket 9:  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 9: 20%Getting block 11 of 58  Reserving size (388) for bucket 11  bucket 10: 10%  Calculating Z arrays for bucket 11  bucket 9: 30%  bucket 10: 20%  Entering block accumulator loop for bucket 11:  bucket 9: 40%  bucket 10: 30%  bucket 9: 50%  bucket 11: 10%  bucket 10: 40%  bucket 10: 50%  bucket 9: 60%  bucket 11: 20%  bucket 10: 60%  bucket 9: 70%  bucket 11: 30%  bucket 10: 70%  bucket 9: 80%  bucket 10: 80%  bucket 11: 40%  bucket 9: 90%  bucket 10: 90%  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  bucket 11: 50%  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 11: 60%  bucket 11: 70%  bucket 11: 80%  bucket 11: 90%  Sorting block time: 00:00:00  bucket 11: 100%Returning block of 358 for bucket 10  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 9  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 12 of 58  Reserving size (388) for bucket 12Getting block 13 of 58  Calculating Z arrays for bucket 12  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 12:  Entering block accumulator loop for bucket 13:  bucket 12: 10%  bucket 13: 10%  bucket 12: 20%  bucket 13: 20%  bucket 12: 30%  bucket 13: 30%  bucket 12: 40%  bucket 13: 40%  bucket 12: 50%  bucket 13: 50%  bucket 12: 60%  bucket 13: 60%  bucket 12: 70%  bucket 13: 70%  bucket 12: 80%  bucket 13: 80%  bucket 12: 90%  bucket 13: 90%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 186 for bucket 12  Sorting block time: 00:00:00Returning block of 283 for bucket 13Getting block 14 of 58  Reserving size (388) for bucket 14Getting block 15 of 58  Calculating Z arrays for bucket 14  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  Entering block accumulator loop for bucket 14:  bucket 15: 10%Getting block 16 of 58  bucket 14: 10%  Reserving size (388) for bucket 16  bucket 15: 20%  Calculating Z arrays for bucket 16  bucket 15: 30%  bucket 14: 20%  Entering block accumulator loop for bucket 16:  bucket 15: 40%Getting block 17 of 58  bucket 15: 50%  bucket 16: 10%  bucket 14: 30%  Reserving size (388) for bucket 17Getting block 18 of 58  bucket 16: 20%  bucket 15: 60%  bucket 14: 40%  Calculating Z arrays for bucket 17  Reserving size (388) for bucket 18  bucket 15: 70%  Calculating Z arrays for bucket 18  bucket 16: 30%  Entering block accumulator loop for bucket 17:  bucket 14: 50%  bucket 15: 80%  Entering block accumulator loop for bucket 18:  bucket 16: 40%  bucket 17: 10%  bucket 14: 60%  bucket 15: 90%  bucket 16: 50%  bucket 17: 20%  bucket 18: 10%  bucket 15: 100%  bucket 16: 60%  Sorting block of length 241 for bucket 15  (Using difference cover)  bucket 17: 30%  bucket 14: 70%  bucket 18: 20%  bucket 16: 70%  bucket 17: 40%  bucket 16: 80%  bucket 18: 30%  bucket 14: 80%  bucket 17: 50%  bucket 16: 90%  bucket 18: 40%  bucket 17: 60%  bucket 14: 90%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  bucket 17: 70%  bucket 18: 50%  Sorting block time: 00:00:00Returning block of 242 for bucket 15  bucket 17: 80%  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  bucket 18: 60%  bucket 17: 90%  bucket 18: 70%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  bucket 18: 80%Getting block 19 of 58  bucket 18: 90%  Reserving size (388) for bucket 19  bucket 18: 100%  Calculating Z arrays for bucket 19  Sorting block of length 378 for bucket 18  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 16  Sorting block time: 00:00:00  Entering block accumulator loop for bucket 19:Returning block of 340 for bucket 14  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 379 for bucket 18Returning block of 216 for bucket 17  bucket 19: 10%  bucket 19: 20%  bucket 19: 30%  bucket 19: 40%  bucket 19: 50%  bucket 19: 60%  bucket 19: 70%  bucket 19: 80%  bucket 19: 90%  bucket 19: 100%  Sorting block of length 334 for bucket 19  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 19Getting block 20 of 58  Reserving size (388) for bucket 20  Calculating Z arrays for bucket 20  Entering block accumulator loop for bucket 20:  bucket 20: 10%  bucket 20: 20%  bucket 20: 30%  bucket 20: 40%  bucket 20: 50%  bucket 20: 60%  bucket 20: 70%  bucket 20: 80%  bucket 20: 90%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  Sorting block time: 00:00:00Returning block of 314 for bucket 20Getting block 21 of 58  Reserving size (388) for bucket 21Getting block 22 of 58  Calculating Z arrays for bucket 21  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  Entering block accumulator loop for bucket 21:  Entering block accumulator loop for bucket 22:  bucket 21: 10%  bucket 22: 10%  bucket 21: 20%  bucket 22: 20%  bucket 21: 30%  bucket 22: 30%  bucket 21: 40%  bucket 22: 40%  bucket 21: 50%  bucket 21: 60%  bucket 22: 50%  bucket 21: 70%  bucket 22: 60%  bucket 21: 80%  bucket 21: 90%  bucket 22: 70%  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  bucket 22: 80%  bucket 22: 90%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 211 for bucket 21  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 23 of 58  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  Entering block accumulator loop for bucket 23:  bucket 23: 10%  bucket 23: 20%  bucket 23: 30%  bucket 23: 40%  bucket 23: 50%  bucket 23: 60%  bucket 23: 70%  bucket 23: 80%  bucket 23: 90%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23Getting block 24 of 58  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 24: 20%  bucket 24: 30%  bucket 24: 40%Getting block 25 of 58Getting block 26 of 58  Reserving size (388) for bucket 25  Reserving size (388) for bucket 26  bucket 24: 50%  Calculating Z arrays for bucket 25  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 25:  bucket 24: 60%  Entering block accumulator loop for bucket 26:  bucket 24: 70%  bucket 25: 10%  bucket 26: 10%  bucket 24: 80%  bucket 25: 20%  bucket 26: 20%  bucket 24: 90%  bucket 25: 30%  bucket 26: 30%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  bucket 25: 40%  bucket 26: 40%  bucket 25: 50%  bucket 26: 50%  bucket 25: 60%  bucket 26: 60%  bucket 25: 70%  bucket 26: 70%  Sorting block time: 00:00:00Returning block of 352 for bucket 24  bucket 25: 80%  bucket 26: 80%  bucket 25: 90%  bucket 26: 90%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 106 for bucket 25  Sorting block time: 00:00:00Returning block of 355 for bucket 26Getting block 27 of 58  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:  bucket 27: 10%Getting block 28 of 58  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 28:  bucket 27: 20%  bucket 28: 10%  bucket 27: 30%  bucket 28: 20%  bucket 27: 40%  bucket 28: 30%  bucket 27: 50%  bucket 28: 40%  bucket 27: 60%  bucket 28: 50%  bucket 27: 70%  bucket 28: 60%  bucket 27: 80%  bucket 28: 70%  bucket 28: 80%  bucket 27: 90%  bucket 28: 90%  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 27  Sorting block time: 00:00:00Returning block of 254 for bucket 28Getting block 29 of 58  Reserving size (388) for bucket 29Getting block 30 of 58  Calculating Z arrays for bucket 29  Reserving size (388) for bucket 30Getting block 31 of 58Getting block 32 of 58Getting block 33 of 58  Calculating Z arrays for bucket 30  Reserving size (388) for bucket 31  Entering block accumulator loop for bucket 29:  Reserving size (388) for bucket 32Getting block 34 of 58  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 30:  Calculating Z arrays for bucket 32  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 31:  bucket 29: 10%  Entering block accumulator loop for bucket 32:  Calculating Z arrays for bucket 34  Entering block accumulator loop for bucket 33:  bucket 30: 10%  bucket 29: 20%  Entering block accumulator loop for bucket 34:  bucket 31: 10%  bucket 30: 20%  bucket 29: 30%  bucket 34: 10%  bucket 33: 10%  bucket 32: 10%  bucket 31: 20%  bucket 30: 30%  bucket 29: 40%  bucket 34: 20%  bucket 33: 20%  bucket 31: 30%  bucket 30: 40%  bucket 29: 50%  bucket 32: 20%  bucket 34: 30%  bucket 31: 40%  bucket 30: 50%  bucket 29: 60%  bucket 33: 30%  bucket 34: 40%  bucket 32: 30%  bucket 31: 50%  bucket 30: 60%  bucket 29: 70%  bucket 34: 50%  bucket 33: 40%  bucket 32: 40%  bucket 31: 60%  bucket 30: 70%  bucket 29: 80%  bucket 34: 60%  bucket 3.. 50%  bucket 24: 60%  bucket 23: 30%  bucket 24: 70%  bucket 23: 40%Getting block 25 of 57  bucket 23: 50%  bucket 24: 80%  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  bucket 24: 90%  bucket 23: 60%  Entering block accumulator loop for bucket 25:  bucket 24: 100%  bucket 23: 70%  Sorting block of length 245 for bucket 24  (Using difference cover)  bucket 25: 10%  bucket 23: 80%  bucket 25: 20%  bucket 23: 90%  Sorting block time: 00:00:00Returning block of 246 for bucket 24  bucket 25: 30%  bucket 23: 100%  Sorting block of length 349 for bucket 23  (Using difference cover)  bucket 25: 40%  bucket 25: 50%  bucket 25: 60%  Sorting block time: 00:00:00Returning block of 350 for bucket 23  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25Getting block 26 of 57  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:Getting block 27 of 57  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  bucket 26: 10%  Entering block accumulator loop for bucket 27:  Entering block accumulator loop for bucket 28:  bucket 26: 20%  bucket 27: 10%  bucket 28: 10%  bucket 27: 20%  bucket 26: 30%  bucket 27: 30%  bucket 28: 20%  bucket 26: 40%  bucket 27: 40%  bucket 26: 50%  bucket 28: 30%  bucket 26: 60%  bucket 28: 40%  bucket 27: 50%  bucket 26: 70%  bucket 28: 50%  bucket 27: 60%  bucket 26: 80%  bucket 28: 60%  bucket 27: 70%  bucket 26: 90%  bucket 28: 70%  bucket 27: 80%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  bucket 28: 80%  bucket 27: 90%  bucket 28: 90%  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 26  Sorting block time: 00:00:00Returning block of 360 for bucket 27  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 29:  bucket 29: 10%  bucket 29: 20%  bucket 29: 30%  bucket 29: 40%  bucket 29: 50%  bucket 29: 60%  bucket 29: 70%  bucket 29: 80%  bucket 29: 90%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29Getting block 30 of 57  Reserving size (388) for bucket 30Getting block 31 of 57  Calculating Z arrays for bucket 30  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 31: 10%  bucket 31: 20%  bucket 31: 30%  bucket 31: 40%  bucket 31: 50%  bucket 31: 60%  bucket 30: 20%  bucket 31: 70%  bucket 31: 80%  bucket 30: 30%  bucket 31: 90%  bucket 30: 40%  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  bucket 30: 50%  bucket 30: 60%  bucket 30: 70%  bucket 30: 80%  Sorting block time: 00:00:00Returning block of 311 for bucket 31  bucket 30: 90%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)Getting block 32 of 57  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 32:  bucket 32: 10%  Sorting block time: 00:00:00Returning block of 258 for bucket 30  bucket 32: 20%  bucket 32: 30%  bucket 32: 40%  bucket 32: 50%  bucket 32: 60%  bucket 32: 70%  bucket 32: 80%  bucket 32: 90%  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)  Sorting block time: 00:00:00Returning block of 220 for bucket 32Getting block 33 of 57  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 33:  bucket 33: 10%Getting block 34 of 57  bucket 33: 20%  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34  bucket 33: 30%  Entering block accumulator loop for bucket 34:  bucket 33: 40%  bucket 34: 10%  bucket 33: 50%  bucket 34: 20%  bucket 33: 60%  bucket 34: 30%  bucket 33: 70%  bucket 34: 40%  bucket 33: 80%  bucket 34: 50%  bucket 33: 90%  bucket 34: 60%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  bucket 34: 70%  bucket 34: 80%  bucket 34: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 33  Sorting block time: 00:00:00Returning block of 276 for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 35:Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36  bucket 35: 10%  Entering block accumulator loop for bucket 36:  bucket 35: 20%  bucket 36: 10%  bucket 35: 30%  bucket 36: 20%  bucket 35: 40%  bucket 35: 50%  bucket 36: 30%  bucket 35: 60%  bucket 36: 40%  bucket 35: 70%  bucket 36: 50%  bucket 35: 80%  bucket 36: 60%  bucket 35: 90%  bucket 36: 70%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  bucket 36: 80%  bucket 36: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 35  Sorting block time: 00:00:00Returning block of 151 for bucket 36Getting block 37 of 57  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  Entering block accumulator loop for bucket 37:  bucket 37: 10%  bucket 37: 20%  bucket 37: 30%  bucket 37: 40%  bucket 37: 50%  bucket 37: 60%  bucket 37: 70%  bucket 37: 80%  bucket 37: 90%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  Sorting block time: 00:00:00Returning block of 268 for bucket 37Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:  bucket 38: 10%Getting block 39 of 57  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  Entering block accumulator loop for bucket 39:  bucket 38: 20%  bucket 39: 10%  bucket 38: 30%  bucket 39: 20%  bucket 38: 40%  bucket 39: 30%  bucket 38: 50%  bucket 39: 40%  bucket 38: 60%  bucket 39: 50%  bucket 38: 70%  bucket 39: 60%  bucket 39: 70%  bucket 38: 80%  bucket 39: 80%  bucket 38: 90%  bucket 39: 90%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 39  Sorting block time: 00:00:00Returning block of 338 for bucket 38Getting block 40 of 57  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 40:  bucket 40: 10%Getting block 41 of 57  Reserving size (388) for bucket 41  bucket 40: 20%  Calculating Z arrays for bucket 41  Entering block accumulator loop for bucket 41:  bucket 40: 30%  bucket 41: 10%  bucket 40: 40%Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42  bucket 40: 50%  bucket 41: 20%  Entering block accumulator loop for bucket 42:  bucket 42: 10%  bucket 40: 60%  bucket 41: 30%  bucket 42: 20%  bucket 41: 40%  bucket 40: 70%  bucket 42: 30%  bucket 41: 50%  bucket 40: 80%  bucket 42: 40%  bucket 42: 50%  bucket 41: 60%  bucket 40: 90%  bucket 41: 70%  bucket 42: 60%  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  bucket 41: 80%  bucket 42: 70%  bucket 41: 90%  bucket 42: 80%  bucket 41: 100%  bucket 42: 90%  Sorting block of length 330 for bucket 41  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 40  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  Sorting block time: 00:00:00Returning block of 331 for bucket 41  Sorting block time: 00:00:00Returning block of 189 for bucket 42Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 43:  bucket 43: 10%Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:  bucket 43: 20%  bucket 44: 10%  bucket 43: 30%  bucket 44: 20%  bucket 43: 40%  bucket 44: 30%  bucket 43: 50%  bucket 44: 40%  bucket 43: 60%  bucket 44: 50%  bucket 43: 70%  bucket 44: 60%  bucket 43: 80%  bucket 44: 70%  bucket 43: 90%  bucket 44: 80%  bucket 43: 100%  bucket 44: 90%  Sorting block of length 321 for bucket 43  (Using difference cover)  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 322 for bucket 43  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  Entering block accumulator loop for bucket 45:  bucket 45: 10%  bucket 45: 20%  bucket 45: 30%  bucket 45: 40%Getting block 46 of 57  bucket 45: 50%  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46  bucket 45: 60%  Entering block accumulator loop for bucket 46:  bucket 45: 70%  bucket 46: 10%  bucket 45: 80%  bucket 46: 20%  bucket 45: 90%  bucket 46: 30%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  bucket 46: 40%  bucket 46: 50%  bucket 46: 60%  bucket 46: 70%  bucket 46: 80%  Sorting block time: 00:00:00Returning block of 366 for bucket 45  bucket 46: 90%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47Getting block 48 of 57  Calculating Z arrays for bucket 47  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 47:  Entering block accumulator loop for bucket 48:  bucket 48: 10%  bucket 47: 10%  bucket 48: 20%  bucket 47: 20%  bucket 48: 30%  bucket 47: 30%  bucket 48: 40%  bucket 47: 40%  bucket 48: 50%  bucket 47: 50%  bucket 48: 60%  bucket 47: 60%  bucket 47: 70%  bucket 48: 70%  bucket 47: 80%  bucket 48: 80%  bucket 47: 90%  bucket 48: 90%  bucket 47: 100%  bucket 48: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block time: 00:00:00Returning block of 218 for bucket 47  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49Getting block 50 of 57  Entering block accumulator loop for bucket 49:  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 50:  bucket 49: 10%  bucket 50: 10%  bucket 49: 20%  bucket 50: 20%  bucket 49: 30%  bucket 49: 40%  bucket 50: 30%  bucket 49: 50%  bucket 49: 60%  bucket 50: 40%  bucket 49: 70%  bucket 50: 50%  bucket 49: 80%  bucket 49: 90%  bucket 50: 60%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  bucket 50: 70%  bucket 50: 80%  Sorting block time: 00:00:00Returning block of 113 for bucket 49  bucket 50: 90%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 50Getting block 51 of 57  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 51:Getting block 52 of 57  Reserving size (388) for bucket 52  bucket 51: 10%  Calculating Z arrays for bucket 52Getting block 53 of 57  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  Entering block accumulator loop for bucket 52:  bucket 51: 20%  Entering block accumulator loop for bucket 53:  bucket 52: 10%  bucket 53: 10%  bucket 52: 20%  bucket 51: 30%  bucket 53: 20%  bucket 52: 30%  bucket 53: 30%  bucket 51: 40%  bucket 52: 40%  bucket 53: 40%  bucket 52: 50%  bucket 53: 50%  bucket 51: 50%  bucket 52: 60%  bucket 53: 60%  bucket 51: 60%  bucket 52: 70%  bucket 53: 70%  bucket 52: 80%  bucket 53: 80%  bucket 51: 70%  bucket 52: 90%  bucket 53: 90%  bucket 52: 100%  bucket 53: 100%  bucket 51: 80%  Sorting block of length 378 for bucket 52  (Using difference cover)  Sorting block of length 370 for bucket 53  (Using difference cover)  bucket 51: 90%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Sorting block time: 00:00:00Returning block of 379 for bucket 52  Entering block accumulator loop for bucket 54:  bucket 54: 10%  Sorting block time: 00:00:00Returning block of 371 for bucket 53  bucket 54: 20%  bucket 54: 30%  bucket 54: 40%  bucket 54: 50%  Sorting block time: 00:00:00Returning block of 351 for bucket 51  bucket 54: 60%  bucket 54: 70%  bucket 54: 80%  bucket 54: 90%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  Sorting block time: 00:00:00Returning block of 238 for bucket 54Getting block 55 of 57  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55Getting block 56 of 57  Entering block accumulator loop for bucket 55:  Reserving size (388) for bucket 56Getting block 57 of 57  Calculating Z arrays for bucket 56  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  Entering block accumulator loop for bucket 56:  bucket 57: 10%  bucket 56: 10%  bucket 57: 20%  bucket 56: 20%  bucket 57: 30%  bucket 55: 10%  bucket 57: 40%  bucket 56: 30%  bucket 55: 20%  bucket 57: 50%  bucket 56: 40%  bucket 55: 30%  bucket 57: 60%  bucket 55: 40%  bucket 57: 70%  bucket 56: 50%  bucket 55: 50%  bucket 57: 80%  bucket 56: 60%  bucket 55: 60%  bucket 57: 90%  bucket 56: 70%  bucket 57: 100%  bucket 55: 70%  Sorting block of length 132 for bucket 57  (Using difference cover)  bucket 56: 80%  bucket 55: 80%  bucket 56: 90%  bucket 55: 90%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57  Sorting block time: 00:00:00Returning block of 345 for bucket 55  Sorting block time: 00:00:00Returning block of 271 for bucket 56Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #5)" name="4" time="33.076411962509155">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "25bd79a8f0bbfb01",   "src": "hda"  },  "library|type": "paired_interleaved",  "library|unaligned_file": false,  "reference_genome|own_file": {   "id": "9102823b5bc5708a",   "src": "hda"  },  "reference_genome|source": "history",  "rg|PL": "CAPILLARY",  "rg|read_group_id_conditional|ID": "rg1",  "rg|rg_selector": "set" }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/5/6/f/dataset_56ffe6f0-6940-40b9-b202-9848ef7cd39c.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/5/6/f/dataset_56ffe6f0-6940-40b9-b202-9848ef7cd39c.dat\u0027 genome.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/7/e/a/dataset_7eaafa4f-e7d7-429d-95ca-9de3e4745b5c.dat\u0027 input_il.fastq \u0026\u0026   bowtie2  -p ${GALAXY_SLOTS:-4}  -x \u0027genome\u0027   --interleaved \u0027input_il.fastq\u0027                        --rg-id \"rg1\"  --rg \"PL:CAPILLARY\"              | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o \u0027/galaxy/server/database/objects/7/c/0/dataset_7c0b32ba-a1fc-4191-939c-734f71115143.dat\u0027",  "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}",  "create_time": "2023-02-07T23:15:55.276130",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vz8l7",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "f83f1e2307bca43e",  "inputs": {   "input_1": {    "id": "25bd79a8f0bbfb01",    "src": "hda",    "uuid": "7eaafa4f-e7d7-429d-95ca-9de3e4745b5c"   },   "own_file": {    "id": "9102823b5bc5708a",    "src": "hda",    "uuid": "56ffe6f0-6940-40b9-b202-9848ef7cd39c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811757.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:15:57"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811756.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:15:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "94ee7f523d2f414b",    "src": "hda",    "uuid": "7c0b32ba-a1fc-4191-939c-734f71115143"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 3, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 753, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired_interleaved\", \"unaligned_file\": \"false\"}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 754, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"CN\": \"\", \"DS\": \"\", \"DT\": \"\", \"FO\": null, \"KS\": \"\", \"PG\": \"\", \"PI\": \"\", \"PL\": \"CAPILLARY\", \"PU\": null, \"__current_case__\": 1, \"read_group_id_conditional\": {\"ID\": \"rg1\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_lb_conditional\": {\"LB\": null, \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"read_group_sm_conditional\": {\"SM\": \"\", \"__current_case__\": 1, \"do_auto_name\": \"false\"}, \"rg_selector\": \"set\"}",   "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}",   "save_mapping_stats": "\"false\""  },  "state": "ok",  "stderr": "Building a SMALL index\n3 reads; of these:\n  3 (100.00%) were paired; of these:\n    2 (66.67%) aligned concordantly 0 times\n    1 (33.33%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    2 pairs aligned concordantly 0 times; of these:\n      0 (0.00%) aligned discordantly 1 time\n    ----\n    2 pairs aligned 0 times concordantly or discordantly; of these:\n      4 mates make up the pairs; of these:\n        3 (75.00%) aligned 0 times\n        1 (25.00%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n50.00% overall alignment rate\n",  "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/5/6/f/dataset_56ffe6f0-6940-40b9-b202-9848ef7cd39c.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\nGetting block 2 of 58\n  Reserving size (388) for bucket 1\n  Reserving size (388) for bucket 2\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 8 of 58\nGetting block 7 of 58\n  Calculating Z arrays for bucket 1\n  Calculating Z arrays for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 8\n  Reserving size (388) for bucket 7\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 2:\n  Calculating Z arrays for bucket 8\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 6:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 5: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 5: 30%\n  bucket 1: 40%\n  bucket 6: 20%\n  bucket 2: 30%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 5: 40%\n  bucket 7: 20%\n  bucket 1: 50%\n  bucket 8: 20%\n  bucket 2: 40%\n  bucket 6: 30%\n  bucket 3: 40%\n  bucket 5: 50%\n  bucket 1: 60%\n  bucket 4: 40%\n  bucket 7: 30%\n  bucket 8: 30%\n  bucket 2: 50%\n  bucket 5: 60%\n  bucket 1: 70%\n  bucket 6: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 7: 40%\n  bucket 5: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 8: 40%\n  bucket 6: 50%\n  bucket 3: 60%\n  bucket 5: 80%\n  bucket 1: 90%\n  bucket 4: 60%\n  bucket 7: 50%\n  bucket 8: 50%\n  bucket 5: 90%\n  bucket 1: 100%\n  bucket 2: 70%\n  bucket 6: 60%\n  bucket 3: 70%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 4: 70%\n  bucket 5: 100%\n  bucket 7: 60%\n  bucket 8: 60%\n  bucket 2: 80%\n  bucket 6: 70%\n  bucket 3: 80%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 4: 80%\n  bucket 7: 70%\n  bucket 8: 70%\n  bucket 2: 90%\n  bucket 6: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 7: 80%\n  bucket 8: 80%\n  bucket 2: 100%\n  bucket 6: 90%\n  bucket 3: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 4: 100%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 7: 90%\n  bucket 8: 90%\nReturning block of 356 for bucket 1\n  bucket 6: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block time: 00:00:00\n  bucket 8: 100%\nReturning block of 204 for bucket 5\nReturning block of 329 for bucket 4\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\nReturning block of 166 for bucket 2\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 58\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 10: 10%\nReturning block of 340 for bucket 9\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\nGetting block 12 of 58\n  bucket 11: 10%\n  Reserving size (388) for bucket 12\nGetting block 13 of 58\n  Calculating Z arrays for bucket 12\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 11: 20%\n  Entering block accumulator loop for bucket 12:\n  Entering block accumulator loop for bucket 13:\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 13: 10%\n  bucket 11: 40%\n  bucket 12: 20%\n  bucket 11: 50%\n  bucket 13: 20%\n  bucket 12: 30%\n  bucket 11: 60%\n  bucket 13: 30%\n  bucket 12: 40%\n  bucket 11: 70%\n  bucket 13: 40%\n  bucket 12: 50%\n  bucket 11: 80%\n  bucket 13: 50%\n  bucket 12: 60%\n  bucket 11: 90%\n  bucket 13: 60%\n  bucket 12: 70%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  bucket 13: 70%\n  bucket 12: 80%\n  bucket 13: 80%\n  bucket 12: 90%\n  bucket 13: 90%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\nGetting block 15 of 58\nGetting block 16 of 58\nGetting block 17 of 58\nGetting block 18 of 58\n  bucket 14: 30%\n  Reserving size (388) for bucket 15\n  Reserving size (388) for bucket 16\n  Reserving size (388) for bucket 17\n  Reserving size (388) for bucket 18\n  bucket 14: 40%\n  Calculating Z arrays for bucket 15\n  Calculating Z arrays for bucket 16\n  Calculating Z arrays for bucket 17\n  Calculating Z arrays for bucket 18\n  bucket 14: 50%\n  Entering block accumulator loop for bucket 15:\n  Entering block accumulator loop for bucket 17:\n  Entering block accumulator loop for bucket 18:\n  bucket 14: 60%\n  Entering block accumulator loop for bucket 16:\n  bucket 14: 70%\n  bucket 17: 10%\n  bucket 16: 10%\n  bucket 18: 10%\n  bucket 15: 10%\n  bucket 14: 80%\n  bucket 17: 20%\n  bucket 16: 20%\n  bucket 18: 20%\n  bucket 14: 90%\n  bucket 17: 30%\n  bucket 16: 30%\n  bucket 15: 20%\n  bucket 18: 30%\n  bucket 14: 100%\n  bucket 17: 40%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 16: 40%\n  bucket 18: 40%\n  bucket 17: 50%\n  bucket 16: 50%\n  bucket 15: 30%\n  bucket 18: 50%\n  bucket 17: 60%\n  bucket 16: 60%\n  bucket 17: 70%\n  bucket 16: 70%\n  bucket 15: 40%\n  bucket 18: 60%\n  bucket 17: 80%\n  bucket 16: 80%\n  bucket 18: 70%\n  bucket 15: 50%\n  bucket 17: 90%\n  bucket 16: 90%\n  bucket 18: 80%\n  bucket 17: 100%\n  Sorting block time: 00:00:00\n  bucket 16: 100%\n  bucket 15: 60%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\nReturning block of 340 for bucket 14\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 15: 70%\n  bucket 18: 90%\n  bucket 15: 80%\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  bucket 15: 90%\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 20 of 58\n  Entering block accumulator loop for bucket 19:\n  Sorting block time: 00:00:00\n  bucket 15: 100%\n  Reserving size (388) for bucket 20\nReturning block of 216 for bucket 17\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Calculating Z arrays for bucket 20\n  bucket 19: 10%\n  Entering block accumulator loop for bucket 20:\n  bucket 19: 20%\n  bucket 20: 10%\n  bucket 19: 30%\n  bucket 19: 40%\n  bucket 20: 20%\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  bucket 19: 50%\n  Sorting block time: 00:00:00\n  bucket 20: 30%\nReturning block of 379 for bucket 18\n  bucket 19: 60%\n  bucket 20: 40%\n  bucket 19: 70%\n  bucket 20: 50%\n  bucket 19: 80%\n  bucket 20: 60%\n  bucket 19: 90%\n  bucket 19: 100%\n  bucket 20: 70%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 20: 80%\n  bucket 20: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 21:\n  bucket 21: 10%\n  bucket 21: 20%\n  bucket 21: 30%\n  bucket 21: 40%\n  bucket 21: 50%\n  bucket 21: 60%\n  bucket 21: 70%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\nGetting block 23 of 58\n  Entering block accumulator loop for bucket 22:\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 22: 10%\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 22: 20%\n  bucket 23: 30%\n  bucket 22: 30%\n  bucket 23: 40%\n  bucket 22: 40%\n  bucket 23: 50%\n  bucket 23: 60%\n  bucket 22: 50%\n  bucket 23: 70%\n  bucket 22: 60%\n  bucket 23: 80%\n  bucket 22: 70%\n  bucket 23: 90%\n  bucket 22: 80%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 22: 90%\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Entering block accumulator loop for bucket 24:\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 25: 10%\n  bucket 24: 30%\n  bucket 25: 20%\n  bucket 24: 40%\n  bucket 25: 30%\n  bucket 24: 50%\n  bucket 25: 40%\n  bucket 24: 60%\n  bucket 25: 50%\n  bucket 24: 70%\n  bucket 25: 60%\n  bucket 24: 80%\n  bucket 25: 70%\n  bucket 24: 90%\n  bucket 25: 80%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  bucket 25: 90%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\nGetting block 27 of 58\n  Entering block accumulator loop for bucket 26:\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 26: 20%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 27: 30%\n  bucket 26: 40%\n  bucket 27: 40%\n  bucket 26: 50%\n  bucket 27: 50%\n  bucket 26: 60%\n  bucket 27: 60%\n  bucket 26: 70%\n  bucket 27: 70%\n  bucket 26: 80%\n  bucket 27: 80%\n  bucket 26: 90%\n  bucket 27: 90%\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\nGetting block 29 of 58\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  bucket 28: 10%\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 20%\n  bucket 29: 10%\n  bucket 28: 30%\n  bucket 29: 20%\n  bucket 29: 30%\n  bucket 29: 40%\n  bucket 29: 50%\n  bucket 28: 40%\n  bucket 28: 50%\n  bucket 29: 60%\n  bucket 28: 60%\n  bucket 29: 70%\n  bucket 28: 70%\n  bucket 29: 80%\n  bucket 28: 80%\n  bucket 29: 90%\n  bucket 28: 90%\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\nGetting block 30 of 58\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\n  bucket 31: 10%\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 378 for bucket 31\nGetting block 32 of 58\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\nGetting block 33\n..\nme: 00:00:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 24:\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 25: 10%\n  bucket 24: 30%\n  bucket 25: 20%\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 25: 30%\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 25: 40%\n  bucket 24: 80%\n  bucket 25: 50%\n  bucket 24: 90%\n  bucket 25: 60%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 26: 20%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 27: 30%\n  bucket 26: 40%\n  bucket 27: 40%\n  bucket 27: 50%\n  bucket 26: 50%\n  bucket 27: 60%\n  bucket 26: 60%\n  bucket 27: 70%\n  bucket 26: 70%\n  bucket 27: 80%\n  bucket 26: 80%\n  bucket 27: 90%\n  bucket 26: 90%\n  bucket 27: 100%\n  bucket 26: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 28: 10%\n  bucket 28: 20%\n  bucket 28: 30%\n  bucket 28: 40%\n  bucket 28: 50%\n  bucket 28: 60%\n  bucket 28: 70%\n  bucket 28: 80%\n  bucket 28: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 29: 10%\n  bucket 29: 20%\n  bucket 29: 30%\n  bucket 29: 40%\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\nGetting block 31 of 57\n  bucket 30: 70%\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\nGetting block 32 of 57\n  bucket 30: 80%\n  Entering block accumulator loop for bucket 31:\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  bucket 30: 90%\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 32:\n  bucket 30: 100%\n  bucket 31: 10%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  Entering block accumulator loop for bucket 33:\n  bucket 32: 10%\n  bucket 33: 10%\n  bucket 31: 20%\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 20%\n  bucket 32: 20%\n  bucket 31: 30%\n  Entering block accumulator loop for bucket 34:\n  bucket 33: 30%\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\n  bucket 32: 30%\n  bucket 31: 40%\n  bucket 33: 40%\n  bucket 34: 10%\n  bucket 33: 50%\n  bucket 32: 40%\n  bucket 31: 50%\n  bucket 34: 20%\n  bucket 33: 60%\n  bucket 34: 30%\n  bucket 32: 50%\n  bucket 31: 60%\n  bucket 33: 70%\n  bucket 34: 40%\n  bucket 33: 80%\n  bucket 32: 60%\n  bucket 34: 50%\n  bucket 31: 70%\n  bucket 33: 90%\n  bucket 34: 60%\n  bucket 32: 70%\n  bucket 31: 80%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 34: 70%\n  bucket 32: 80%\n  bucket 31: 90%\n  bucket 34: 80%\n  bucket 32: 90%\n  bucket 31: 100%\n  bucket 34: 90%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  bucket 32: 100%\n  Sorting block time: 00:00:00\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\nReturning block of 388 for bucket 33\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nReturning block of 311 for bucket 31\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 35: 60%\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\n  Entering block accumulator loop for bucket 36:\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  bucket 36: 10%\n  Entering block accumulator loop for bucket 37:\n  bucket 36: 20%\n  bucket 37: 10%\n  bucket 36: 30%\n  bucket 37: 20%\n  bucket 36: 40%\n  bucket 36: 50%\n  bucket 37: 30%\n  bucket 36: 60%\n  bucket 37: 40%\n  bucket 36: 70%\n  bucket 37: 50%\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 37: 60%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  bucket 37: 70%\n  bucket 37: 80%\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\nGetting block 39 of 57\n  bucket 38: 10%\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  bucket 38: 20%\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 30%\n  bucket 39: 10%\n  bucket 38: 40%\n  bucket 39: 20%\n  bucket 38: 50%\n  bucket 39: 30%\n  bucket 38: 60%\n  bucket 39: 40%\n  bucket 38: 70%\n  bucket 39: 50%\n  bucket 38: 80%\n  bucket 39: 60%\n  bucket 38: 90%\n  bucket 39: 70%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 80%\n  bucket 39: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 40: 10%\n  bucket 40: 20%\n  bucket 40: 30%\nGetting block 41 of 57\n  bucket 40: 40%\n  Reserving size (388) for bucket 41\n  Calculating Z arrays for bucket 41\nGetting block 42 of 57\nGetting block 43 of 57\n  Entering block accumulator loop for bucket 41:\n  Reserving size (388) for bucket 42\n  bucket 40: 50%\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 42\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 42:\n  bucket 41: 10%\n  Entering block accumulator loop for bucket 43:\n  bucket 40: 60%\n  bucket 42: 10%\n  bucket 41: 20%\n  bucket 43: 10%\n  bucket 42: 20%\n  bucket 40: 70%\n  bucket 41: 30%\n  bucket 43: 20%\n  bucket 42: 30%\n  bucket 41: 40%\n  bucket 40: 80%\n  bucket 43: 30%\n  bucket 42: 40%\n  bucket 41: 50%\n  bucket 43: 40%\n  bucket 42: 50%\n  bucket 41: 60%\n  bucket 40: 90%\n  bucket 43: 50%\n  bucket 42: 60%\n  bucket 41: 70%\n  bucket 40: 100%\n  bucket 43: 60%\n  bucket 42: 70%\n  bucket 41: 80%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 43: 70%\n  bucket 42: 80%\n  bucket 41: 90%\n  bucket 43: 80%\n  bucket 42: 90%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 43: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 44: 10%\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 44: 40%\n  bucket 44: 50%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\nGetting block 46 of 57\n  bucket 45: 10%\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 20%\n  bucket 46: 10%\n  bucket 45: 30%\n  bucket 46: 20%\nGetting block 47 of 57\n  bucket 45: 40%\n  bucket 46: 30%\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  bucket 46: 40%\n  Entering block accumulator loop for bucket 47:\n  bucket 45: 50%\n  bucket 46: 50%\n  bucket 47: 10%\n  bucket 45: 60%\n  bucket 46: 60%\n  bucket 47: 20%\n  bucket 46: 70%\n  bucket 45: 70%\n  bucket 47: 30%\n  bucket 46: 80%\n  bucket 45: 80%\n  bucket 46: 90%\n  bucket 47: 40%\n  bucket 46: 100%\n  bucket 45: 90%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  bucket 47: 50%\n  bucket 47: 60%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 47: 70%\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\n  bucket 47: 80%\n  bucket 47: 90%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 48: 10%\nGetting block 49 of 57\n  bucket 48: 20%\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 48: 30%\n  bucket 48: 40%\n  bucket 49: 10%\n  bucket 48: 50%\n  bucket 49: 20%\n  bucket 48: 60%\n  bucket 49: 30%\n  bucket 48: 70%\n  bucket 49: 40%\n  bucket 48: 80%\n  bucket 49: 50%\n  bucket 48: 90%\n  bucket 49: 60%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  bucket 49: 70%\n  bucket 49: 80%\n  bucket 49: 90%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 50:\n  bucket 50: 10%\nGetting block 51 of 57\n  bucket 50: 20%\n  Reserving size (388) for bucket 51\nGetting block 52 of 57\n  Calculating Z arrays for bucket 51\n  Reserving size (388) for bucket 52\n  bucket 50: 30%\n  Calculating Z arrays for bucket 52\n  Entering block accumulator loop for bucket 51:\n  Entering block accumulator loop for bucket 52:\n  bucket 50: 40%\n  bucket 50: 50%\n  bucket 51: 10%\n  bucket 52: 10%\n  bucket 50: 60%\n  bucket 51: 20%\n  bucket 52: 20%\n  bucket 50: 70%\n  bucket 52: 30%\n  bucket 50: 80%\n  bucket 51: 30%\n  bucket 52: 40%\n  bucket 50: 90%\n  bucket 52: 50%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  bucket 51: 40%\n  bucket 52: 60%\n  bucket 52: 70%\n  bucket 51: 50%\n  bucket 52: 80%\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\n  bucket 52: 90%\n  bucket 51: 60%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  bucket 51: 70%\n  bucket 51: 80%\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  bucket 51: 90%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 53:\nGetting block 54 of 57\n  bucket 53: 10%\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 20%\n  bucket 54: 10%\n  bucket 53: 30%\n  bucket 54: 20%\n  bucket 53: 40%\n  bucket 54: 30%\n  bucket 54: 40%\n  bucket 53: 50%\n  bucket 54: 50%\n  bucket 54: 60%\n  bucket 53: 60%\n  bucket 54: 70%\n  bucket 53: 70%\n  bucket 54: 80%\n  bucket 54: 90%\n  bucket 53: 80%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 53: 90%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\nGetting block 56 of 57\n  bucket 55: 10%\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 56:\n  bucket 55: 20%\n  bucket 56: 10%\n  bucket 55: 30%\n  bucket 56: 20%\n  bucket 56: 30%\n  bucket 55: 40%\n  bucket 56: 40%\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 56: 70%\n  bucket 55: 50%\n  bucket 56: 80%\n  bucket 55: 60%\n  bucket 56: 90%\n  bucket 55: 70%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  bucket 55: 80%\n  bucket 55: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0",  "tool_stderr": "Building a SMALL index\n3 reads; of these:\n  3 (100.00%) were paired; of these:\n    2 (66.67%) aligned concordantly 0 times\n    1 (33.33%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    2 pairs aligned concordantly 0 times; of these:\n      0 (0.00%) aligned discordantly 1 time\n    ----\n    2 pairs aligned 0 times concordantly or discordantly; of these:\n      4 mates make up the pairs; of these:\n        3 (75.00%) aligned 0 times\n        1 (25.00%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n50.00% overall alignment rate\n",  "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/5/6/f/dataset_56ffe6f0-6940-40b9-b202-9848ef7cd39c.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\nGetting block 2 of 58\n  Reserving size (388) for bucket 1\n  Reserving size (388) for bucket 2\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 8 of 58\nGetting block 7 of 58\n  Calculating Z arrays for bucket 1\n  Calculating Z arrays for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 8\n  Reserving size (388) for bucket 7\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Entering block accumulator loop for bucket 2:\n  Calculating Z arrays for bucket 8\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 6:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 5: 10%\n  bucket 1: 20%\n  bucket 2: 10%\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 6: 10%\n  bucket 5: 20%\n  bucket 1: 30%\n  bucket 2: 20%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 5: 30%\n  bucket 1: 40%\n  bucket 6: 20%\n  bucket 2: 30%\n  bucket 3: 30%\n  bucket 4: 30%\n  bucket 5: 40%\n  bucket 7: 20%\n  bucket 1: 50%\n  bucket 8: 20%\n  bucket 2: 40%\n  bucket 6: 30%\n  bucket 3: 40%\n  bucket 5: 50%\n  bucket 1: 60%\n  bucket 4: 40%\n  bucket 7: 30%\n  bucket 8: 30%\n  bucket 2: 50%\n  bucket 5: 60%\n  bucket 1: 70%\n  bucket 6: 40%\n  bucket 3: 50%\n  bucket 4: 50%\n  bucket 7: 40%\n  bucket 5: 70%\n  bucket 1: 80%\n  bucket 2: 60%\n  bucket 8: 40%\n  bucket 6: 50%\n  bucket 3: 60%\n  bucket 5: 80%\n  bucket 1: 90%\n  bucket 4: 60%\n  bucket 7: 50%\n  bucket 8: 50%\n  bucket 5: 90%\n  bucket 1: 100%\n  bucket 2: 70%\n  bucket 6: 60%\n  bucket 3: 70%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 4: 70%\n  bucket 5: 100%\n  bucket 7: 60%\n  bucket 8: 60%\n  bucket 2: 80%\n  bucket 6: 70%\n  bucket 3: 80%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 4: 80%\n  bucket 7: 70%\n  bucket 8: 70%\n  bucket 2: 90%\n  bucket 6: 80%\n  bucket 3: 90%\n  bucket 4: 90%\n  bucket 7: 80%\n  bucket 8: 80%\n  bucket 2: 100%\n  bucket 6: 90%\n  bucket 3: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 4: 100%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 7: 90%\n  bucket 8: 90%\nReturning block of 356 for bucket 1\n  bucket 6: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block time: 00:00:00\n  bucket 8: 100%\nReturning block of 204 for bucket 5\nReturning block of 329 for bucket 4\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\nReturning block of 166 for bucket 2\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 58\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 9: 40%\n  bucket 9: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 9: 80%\n  bucket 9: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 10: 10%\nReturning block of 340 for bucket 9\n  bucket 10: 20%\n  bucket 10: 30%\n  bucket 10: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 10: 70%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\nGetting block 12 of 58\n  bucket 11: 10%\n  Reserving size (388) for bucket 12\nGetting block 13 of 58\n  Calculating Z arrays for bucket 12\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 11: 20%\n  Entering block accumulator loop for bucket 12:\n  Entering block accumulator loop for bucket 13:\n  bucket 11: 30%\n  bucket 12: 10%\n  bucket 13: 10%\n  bucket 11: 40%\n  bucket 12: 20%\n  bucket 11: 50%\n  bucket 13: 20%\n  bucket 12: 30%\n  bucket 11: 60%\n  bucket 13: 30%\n  bucket 12: 40%\n  bucket 11: 70%\n  bucket 13: 40%\n  bucket 12: 50%\n  bucket 11: 80%\n  bucket 13: 50%\n  bucket 12: 60%\n  bucket 11: 90%\n  bucket 13: 60%\n  bucket 12: 70%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  bucket 13: 70%\n  bucket 12: 80%\n  bucket 13: 80%\n  bucket 12: 90%\n  bucket 13: 90%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 14: 10%\n  bucket 14: 20%\nGetting block 15 of 58\nGetting block 16 of 58\nGetting block 17 of 58\nGetting block 18 of 58\n  bucket 14: 30%\n  Reserving size (388) for bucket 15\n  Reserving size (388) for bucket 16\n  Reserving size (388) for bucket 17\n  Reserving size (388) for bucket 18\n  bucket 14: 40%\n  Calculating Z arrays for bucket 15\n  Calculating Z arrays for bucket 16\n  Calculating Z arrays for bucket 17\n  Calculating Z arrays for bucket 18\n  bucket 14: 50%\n  Entering block accumulator loop for bucket 15:\n  Entering block accumulator loop for bucket 17:\n  Entering block accumulator loop for bucket 18:\n  bucket 14: 60%\n  Entering block accumulator loop for bucket 16:\n  bucket 14: 70%\n  bucket 17: 10%\n  bucket 16: 10%\n  bucket 18: 10%\n  bucket 15: 10%\n  bucket 14: 80%\n  bucket 17: 20%\n  bucket 16: 20%\n  bucket 18: 20%\n  bucket 14: 90%\n  bucket 17: 30%\n  bucket 16: 30%\n  bucket 15: 20%\n  bucket 18: 30%\n  bucket 14: 100%\n  bucket 17: 40%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 16: 40%\n  bucket 18: 40%\n  bucket 17: 50%\n  bucket 16: 50%\n  bucket 15: 30%\n  bucket 18: 50%\n  bucket 17: 60%\n  bucket 16: 60%\n  bucket 17: 70%\n  bucket 16: 70%\n  bucket 15: 40%\n  bucket 18: 60%\n  bucket 17: 80%\n  bucket 16: 80%\n  bucket 18: 70%\n  bucket 15: 50%\n  bucket 17: 90%\n  bucket 16: 90%\n  bucket 18: 80%\n  bucket 17: 100%\n  Sorting block time: 00:00:00\n  bucket 16: 100%\n  bucket 15: 60%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\nReturning block of 340 for bucket 14\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 15: 70%\n  bucket 18: 90%\n  bucket 15: 80%\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  bucket 15: 90%\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 20 of 58\n  Entering block accumulator loop for bucket 19:\n  Sorting block time: 00:00:00\n  bucket 15: 100%\n  Reserving size (388) for bucket 20\nReturning block of 216 for bucket 17\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Calculating Z arrays for bucket 20\n  bucket 19: 10%\n  Entering block accumulator loop for bucket 20:\n  bucket 19: 20%\n  bucket 20: 10%\n  bucket 19: 30%\n  bucket 19: 40%\n  bucket 20: 20%\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  bucket 19: 50%\n  Sorting block time: 00:00:00\n  bucket 20: 30%\nReturning block of 379 for bucket 18\n  bucket 19: 60%\n  bucket 20: 40%\n  bucket 19: 70%\n  bucket 20: 50%\n  bucket 19: 80%\n  bucket 20: 60%\n  bucket 19: 90%\n  bucket 19: 100%\n  bucket 20: 70%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 20: 80%\n  bucket 20: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 21:\n  bucket 21: 10%\n  bucket 21: 20%\n  bucket 21: 30%\n  bucket 21: 40%\n  bucket 21: 50%\n  bucket 21: 60%\n  bucket 21: 70%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\nGetting block 23 of 58\n  Entering block accumulator loop for bucket 22:\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 22: 10%\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 22: 20%\n  bucket 23: 30%\n  bucket 22: 30%\n  bucket 23: 40%\n  bucket 22: 40%\n  bucket 23: 50%\n  bucket 23: 60%\n  bucket 22: 50%\n  bucket 23: 70%\n  bucket 22: 60%\n  bucket 23: 80%\n  bucket 22: 70%\n  bucket 23: 90%\n  bucket 22: 80%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 22: 90%\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Entering block accumulator loop for bucket 24:\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 25: 10%\n  bucket 24: 30%\n  bucket 25: 20%\n  bucket 24: 40%\n  bucket 25: 30%\n  bucket 24: 50%\n  bucket 25: 40%\n  bucket 24: 60%\n  bucket 25: 50%\n  bucket 24: 70%\n  bucket 25: 60%\n  bucket 24: 80%\n  bucket 25: 70%\n  bucket 24: 90%\n  bucket 25: 80%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  bucket 25: 90%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\nGetting block 27 of 58\n  Entering block accumulator loop for bucket 26:\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 26: 20%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 27: 30%\n  bucket 26: 40%\n  bucket 27: 40%\n  bucket 26: 50%\n  bucket 27: 50%\n  bucket 26: 60%\n  bucket 27: 60%\n  bucket 26: 70%\n  bucket 27: 70%\n  bucket 26: 80%\n  bucket 27: 80%\n  bucket 26: 90%\n  bucket 27: 90%\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\nGetting block 29 of 58\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  bucket 28: 10%\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 20%\n  bucket 29: 10%\n  bucket 28: 30%\n  bucket 29: 20%\n  bucket 29: 30%\n  bucket 29: 40%\n  bucket 29: 50%\n  bucket 28: 40%\n  bucket 28: 50%\n  bucket 29: 60%\n  bucket 28: 60%\n  bucket 29: 70%\n  bucket 28: 70%\n  bucket 29: 80%\n  bucket 28: 80%\n  bucket 29: 90%\n  bucket 28: 90%\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\nGetting block 30 of 58\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\n  bucket 30: 70%\n  bucket 30: 80%\n  bucket 30: 90%\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\n  bucket 31: 10%\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 378 for bucket 31\nGetting block 32 of 58\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\nGetting block 33\n..\nme: 00:00:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 24:\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 25: 10%\n  bucket 24: 30%\n  bucket 25: 20%\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 25: 30%\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 25: 40%\n  bucket 24: 80%\n  bucket 25: 50%\n  bucket 24: 90%\n  bucket 25: 60%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 26: 20%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 27: 30%\n  bucket 26: 40%\n  bucket 27: 40%\n  bucket 27: 50%\n  bucket 26: 50%\n  bucket 27: 60%\n  bucket 26: 60%\n  bucket 27: 70%\n  bucket 26: 70%\n  bucket 27: 80%\n  bucket 26: 80%\n  bucket 27: 90%\n  bucket 26: 90%\n  bucket 27: 100%\n  bucket 26: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 28: 10%\n  bucket 28: 20%\n  bucket 28: 30%\n  bucket 28: 40%\n  bucket 28: 50%\n  bucket 28: 60%\n  bucket 28: 70%\n  bucket 28: 80%\n  bucket 28: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 29: 10%\n  bucket 29: 20%\n  bucket 29: 30%\n  bucket 29: 40%\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 30: 60%\nGetting block 31 of 57\n  bucket 30: 70%\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\nGetting block 32 of 57\n  bucket 30: 80%\n  Entering block accumulator loop for bucket 31:\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  bucket 30: 90%\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 32:\n  bucket 30: 100%\n  bucket 31: 10%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  Entering block accumulator loop for bucket 33:\n  bucket 32: 10%\n  bucket 33: 10%\n  bucket 31: 20%\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 20%\n  bucket 32: 20%\n  bucket 31: 30%\n  Entering block accumulator loop for bucket 34:\n  bucket 33: 30%\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\n  bucket 32: 30%\n  bucket 31: 40%\n  bucket 33: 40%\n  bucket 34: 10%\n  bucket 33: 50%\n  bucket 32: 40%\n  bucket 31: 50%\n  bucket 34: 20%\n  bucket 33: 60%\n  bucket 34: 30%\n  bucket 32: 50%\n  bucket 31: 60%\n  bucket 33: 70%\n  bucket 34: 40%\n  bucket 33: 80%\n  bucket 32: 60%\n  bucket 34: 50%\n  bucket 31: 70%\n  bucket 33: 90%\n  bucket 34: 60%\n  bucket 32: 70%\n  bucket 31: 80%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 34: 70%\n  bucket 32: 80%\n  bucket 31: 90%\n  bucket 34: 80%\n  bucket 32: 90%\n  bucket 31: 100%\n  bucket 34: 90%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  bucket 32: 100%\n  Sorting block time: 00:00:00\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\nReturning block of 388 for bucket 33\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nReturning block of 311 for bucket 31\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 35: 60%\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\n  Calculating Z arrays for bucket 36\n  Entering block accumulator loop for bucket 36:\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  bucket 36: 10%\n  Entering block accumulator loop for bucket 37:\n  bucket 36: 20%\n  bucket 37: 10%\n  bucket 36: 30%\n  bucket 37: 20%\n  bucket 36: 40%\n  bucket 36: 50%\n  bucket 37: 30%\n  bucket 36: 60%\n  bucket 37: 40%\n  bucket 36: 70%\n  bucket 37: 50%\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 37: 60%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  bucket 37: 70%\n  bucket 37: 80%\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\nGetting block 39 of 57\n  bucket 38: 10%\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  bucket 38: 20%\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 30%\n  bucket 39: 10%\n  bucket 38: 40%\n  bucket 39: 20%\n  bucket 38: 50%\n  bucket 39: 30%\n  bucket 38: 60%\n  bucket 39: 40%\n  bucket 38: 70%\n  bucket 39: 50%\n  bucket 38: 80%\n  bucket 39: 60%\n  bucket 38: 90%\n  bucket 39: 70%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 80%\n  bucket 39: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 40: 10%\n  bucket 40: 20%\n  bucket 40: 30%\nGetting block 41 of 57\n  bucket 40: 40%\n  Reserving size (388) for bucket 41\n  Calculating Z arrays for bucket 41\nGetting block 42 of 57\nGetting block 43 of 57\n  Entering block accumulator loop for bucket 41:\n  Reserving size (388) for bucket 42\n  bucket 40: 50%\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 42\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 42:\n  bucket 41: 10%\n  Entering block accumulator loop for bucket 43:\n  bucket 40: 60%\n  bucket 42: 10%\n  bucket 41: 20%\n  bucket 43: 10%\n  bucket 42: 20%\n  bucket 40: 70%\n  bucket 41: 30%\n  bucket 43: 20%\n  bucket 42: 30%\n  bucket 41: 40%\n  bucket 40: 80%\n  bucket 43: 30%\n  bucket 42: 40%\n  bucket 41: 50%\n  bucket 43: 40%\n  bucket 42: 50%\n  bucket 41: 60%\n  bucket 40: 90%\n  bucket 43: 50%\n  bucket 42: 60%\n  bucket 41: 70%\n  bucket 40: 100%\n  bucket 43: 60%\n  bucket 42: 70%\n  bucket 41: 80%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 43: 70%\n  bucket 42: 80%\n  bucket 41: 90%\n  bucket 43: 80%\n  bucket 42: 90%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 43: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 44: 10%\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 44: 40%\n  bucket 44: 50%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\nGetting block 46 of 57\n  bucket 45: 10%\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 20%\n  bucket 46: 10%\n  bucket 45: 30%\n  bucket 46: 20%\nGetting block 47 of 57\n  bucket 45: 40%\n  bucket 46: 30%\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  bucket 46: 40%\n  Entering block accumulator loop for bucket 47:\n  bucket 45: 50%\n  bucket 46: 50%\n  bucket 47: 10%\n  bucket 45: 60%\n  bucket 46: 60%\n  bucket 47: 20%\n  bucket 46: 70%\n  bucket 45: 70%\n  bucket 47: 30%\n  bucket 46: 80%\n  bucket 45: 80%\n  bucket 46: 90%\n  bucket 47: 40%\n  bucket 46: 100%\n  bucket 45: 90%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  bucket 47: 50%\n  bucket 47: 60%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 47: 70%\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\n  bucket 47: 80%\n  bucket 47: 90%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 48: 10%\nGetting block 49 of 57\n  bucket 48: 20%\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 48: 30%\n  bucket 48: 40%\n  bucket 49: 10%\n  bucket 48: 50%\n  bucket 49: 20%\n  bucket 48: 60%\n  bucket 49: 30%\n  bucket 48: 70%\n  bucket 49: 40%\n  bucket 48: 80%\n  bucket 49: 50%\n  bucket 48: 90%\n  bucket 49: 60%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  bucket 49: 70%\n  bucket 49: 80%\n  bucket 49: 90%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 50:\n  bucket 50: 10%\nGetting block 51 of 57\n  bucket 50: 20%\n  Reserving size (388) for bucket 51\nGetting block 52 of 57\n  Calculating Z arrays for bucket 51\n  Reserving size (388) for bucket 52\n  bucket 50: 30%\n  Calculating Z arrays for bucket 52\n  Entering block accumulator loop for bucket 51:\n  Entering block accumulator loop for bucket 52:\n  bucket 50: 40%\n  bucket 50: 50%\n  bucket 51: 10%\n  bucket 52: 10%\n  bucket 50: 60%\n  bucket 51: 20%\n  bucket 52: 20%\n  bucket 50: 70%\n  bucket 52: 30%\n  bucket 50: 80%\n  bucket 51: 30%\n  bucket 52: 40%\n  bucket 50: 90%\n  bucket 52: 50%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  bucket 51: 40%\n  bucket 52: 60%\n  bucket 52: 70%\n  bucket 51: 50%\n  bucket 52: 80%\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\n  bucket 52: 90%\n  bucket 51: 60%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  bucket 51: 70%\n  bucket 51: 80%\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  bucket 51: 90%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 53:\nGetting block 54 of 57\n  bucket 53: 10%\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 20%\n  bucket 54: 10%\n  bucket 53: 30%\n  bucket 54: 20%\n  bucket 53: 40%\n  bucket 54: 30%\n  bucket 54: 40%\n  bucket 53: 50%\n  bucket 54: 50%\n  bucket 54: 60%\n  bucket 53: 60%\n  bucket 54: 70%\n  bucket 53: 70%\n  bucket 54: 80%\n  bucket 54: 90%\n  bucket 53: 80%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 53: 90%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\nGetting block 56 of 57\n  bucket 55: 10%\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 56:\n  bucket 55: 20%\n  bucket 56: 10%\n  bucket 55: 30%\n  bucket 56: 20%\n  bucket 56: 30%\n  bucket 55: 40%\n  bucket 56: 40%\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 56: 70%\n  bucket 55: 50%\n  bucket 56: 80%\n  bucket 55: 60%\n  bucket 56: 90%\n  bucket 55: 70%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  bucket 55: 80%\n  bucket 55: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "traceback": null,  "update_time": "2023-02-07T23:16:08.460802",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_tshktbf4.sam v. /tmp/history_bam_converted_to_sam_lad99qju.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,8 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n @RG\tID:rg1\tPL:CAPILLARY\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome --interleaved input_il.fastq --rg-id rg1 --rg PL:CAPILLARY\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 8 -x genome --rg-id rg1 --rg PL:CAPILLARY --interleaved input_il.fastq\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@8 -T /galaxy/server/database/jobs_directory/000/538/tmp -O bam -o /galaxy/server/database/objects/7/c/0/dataset_7c0b32ba-a1fc-4191-939c-734f71115143.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\tRG:Z:rg1\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t153\tchrM\t1\t3\t4M23I224M\t=\t1\t0\tCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCCCCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAG\tFB099BFFFBFBBFEF?EFFFB090FFFFFFFFFFD;;.GFFGFGFA0FGFFEFEGGGFBCE;BGHHFFGHGEHFHHHHGFE@ECCDCGGGGGEHFFFGGGGGBHHGFGGGCGHHGGGGGGHGGGGGGHHHDGCFFBHGGGGGHHHHHFHFHGGGHHHHGHGGGGGHHHGGHGHHHHHHHGGHGGHHGGHHHHHHHEHHHHHHHHGGGGHHHHHHHHHHHHHHHHGHHHGGGGGGGGGGFFFFCFFCCCCB\tAS:i:-99\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:23\tNM:i:29\tMD:Z:0G0A0T0C11A56A155\tYT:Z:UP\tRG:Z:rg1\n" ], "status": "failure", "test_index": 4, "time_seconds": 33.076411962509155, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/5/6/f/dataset_56ffe6f0-6940-40b9-b202-9848ef7cd39c.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58Getting block 2 of 58  Reserving size (388) for bucket 1  Reserving size (388) for bucket 2Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58Getting block 6 of 58Getting block 8 of 58Getting block 7 of 58  Calculating Z arrays for bucket 1  Calculating Z arrays for bucket 2  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6  Reserving size (388) for bucket 8  Reserving size (388) for bucket 7  Entering block accumulator loop for bucket 1:  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 2:  Calculating Z arrays for bucket 8  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 6:  bucket 1: 10%  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 5: 10%  bucket 1: 20%  bucket 2: 10%  bucket 3: 10%  bucket 4: 10%  bucket 6: 10%  bucket 5: 20%  bucket 1: 30%  bucket 2: 20%  bucket 3: 20%  bucket 4: 20%  bucket 7: 10%  bucket 8: 10%  bucket 5: 30%  bucket 1: 40%  bucket 6: 20%  bucket 2: 30%  bucket 3: 30%  bucket 4: 30%  bucket 5: 40%  bucket 7: 20%  bucket 1: 50%  bucket 8: 20%  bucket 2: 40%  bucket 6: 30%  bucket 3: 40%  bucket 5: 50%  bucket 1: 60%  bucket 4: 40%  bucket 7: 30%  bucket 8: 30%  bucket 2: 50%  bucket 5: 60%  bucket 1: 70%  bucket 6: 40%  bucket 3: 50%  bucket 4: 50%  bucket 7: 40%  bucket 5: 70%  bucket 1: 80%  bucket 2: 60%  bucket 8: 40%  bucket 6: 50%  bucket 3: 60%  bucket 5: 80%  bucket 1: 90%  bucket 4: 60%  bucket 7: 50%  bucket 8: 50%  bucket 5: 90%  bucket 1: 100%  bucket 2: 70%  bucket 6: 60%  bucket 3: 70%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 4: 70%  bucket 5: 100%  bucket 7: 60%  bucket 8: 60%  bucket 2: 80%  bucket 6: 70%  bucket 3: 80%  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 4: 80%  bucket 7: 70%  bucket 8: 70%  bucket 2: 90%  bucket 6: 80%  bucket 3: 90%  bucket 4: 90%  bucket 7: 80%  bucket 8: 80%  bucket 2: 100%  bucket 6: 90%  bucket 3: 100%  Sorting block of length 165 for bucket 2  (Using difference cover)  Sorting block time: 00:00:00  bucket 4: 100%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 7: 90%  bucket 8: 90%Returning block of 356 for bucket 1  bucket 6: 100%  Sorting block of length 328 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00  Sorting block time: 00:00:00  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 7: 100%  Sorting block time: 00:00:00  bucket 8: 100%Returning block of 204 for bucket 5Returning block of 329 for bucket 4  Sorting block of length 368 for bucket 7  (Using difference cover)Returning block of 166 for bucket 2  Sorting block of length 171 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 6  Sorting block time: 00:00:00Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 172 for bucket 8Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 58  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 9: 20%  bucket 9: 30%  bucket 9: 40%  bucket 9: 50%  bucket 9: 60%  bucket 9: 70%  bucket 9: 80%  bucket 9: 90%  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00  bucket 10: 10%Returning block of 340 for bucket 9  bucket 10: 20%  bucket 10: 30%  bucket 10: 40%  bucket 10: 50%  bucket 10: 60%  bucket 10: 70%  bucket 10: 80%  bucket 10: 90%  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 358 for bucket 10Getting block 11 of 58  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:Getting block 12 of 58  bucket 11: 10%  Reserving size (388) for bucket 12Getting block 13 of 58  Calculating Z arrays for bucket 12  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  bucket 11: 20%  Entering block accumulator loop for bucket 12:  Entering block accumulator loop for bucket 13:  bucket 11: 30%  bucket 12: 10%  bucket 13: 10%  bucket 11: 40%  bucket 12: 20%  bucket 11: 50%  bucket 13: 20%  bucket 12: 30%  bucket 11: 60%  bucket 13: 30%  bucket 12: 40%  bucket 11: 70%  bucket 13: 40%  bucket 12: 50%  bucket 11: 80%  bucket 13: 50%  bucket 12: 60%  bucket 11: 90%  bucket 13: 60%  bucket 12: 70%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  bucket 13: 70%  bucket 12: 80%  bucket 13: 80%  bucket 12: 90%  bucket 13: 90%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 306 for bucket 11  Sorting block time: 00:00:00Returning block of 186 for bucket 12  Sorting block time: 00:00:00Returning block of 283 for bucket 13Getting block 14 of 58  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 14: 20%Getting block 15 of 58Getting block 16 of 58Getting block 17 of 58Getting block 18 of 58  bucket 14: 30%  Reserving size (388) for bucket 15  Reserving size (388) for bucket 16  Reserving size (388) for bucket 17  Reserving size (388) for bucket 18  bucket 14: 40%  Calculating Z arrays for bucket 15  Calculating Z arrays for bucket 16  Calculating Z arrays for bucket 17  Calculating Z arrays for bucket 18  bucket 14: 50%  Entering block accumulator loop for bucket 15:  Entering block accumulator loop for bucket 17:  Entering block accumulator loop for bucket 18:  bucket 14: 60%  Entering block accumulator loop for bucket 16:  bucket 14: 70%  bucket 17: 10%  bucket 16: 10%  bucket 18: 10%  bucket 15: 10%  bucket 14: 80%  bucket 17: 20%  bucket 16: 20%  bucket 18: 20%  bucket 14: 90%  bucket 17: 30%  bucket 16: 30%  bucket 15: 20%  bucket 18: 30%  bucket 14: 100%  bucket 17: 40%  Sorting block of length 339 for bucket 14  (Using difference cover)  bucket 16: 40%  bucket 18: 40%  bucket 17: 50%  bucket 16: 50%  bucket 15: 30%  bucket 18: 50%  bucket 17: 60%  bucket 16: 60%  bucket 17: 70%  bucket 16: 70%  bucket 15: 40%  bucket 18: 60%  bucket 17: 80%  bucket 16: 80%  bucket 18: 70%  bucket 15: 50%  bucket 17: 90%  bucket 16: 90%  bucket 18: 80%  bucket 17: 100%  Sorting block time: 00:00:00  bucket 16: 100%  bucket 15: 60%  Sorting block of length 215 for bucket 17  (Using difference cover)Returning block of 340 for bucket 14  Sorting block of length 379 for bucket 16  (Using difference cover)  bucket 15: 70%  bucket 18: 90%  bucket 15: 80%  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  bucket 15: 90%Getting block 19 of 58  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19  Sorting block time: 00:00:00Returning block of 380 for bucket 16Getting block 20 of 58  Entering block accumulator loop for bucket 19:  Sorting block time: 00:00:00  bucket 15: 100%  Reserving size (388) for bucket 20Returning block of 216 for bucket 17  Sorting block of length 241 for bucket 15  (Using difference cover)  Calculating Z arrays for bucket 20  bucket 19: 10%  Entering block accumulator loop for bucket 20:  bucket 19: 20%  bucket 20: 10%  bucket 19: 30%  bucket 19: 40%  bucket 20: 20%  Sorting block time: 00:00:00Returning block of 242 for bucket 15  bucket 19: 50%  Sorting block time: 00:00:00  bucket 20: 30%Returning block of 379 for bucket 18  bucket 19: 60%  bucket 20: 40%  bucket 19: 70%  bucket 20: 50%  bucket 19: 80%  bucket 20: 60%  bucket 19: 90%  bucket 19: 100%  bucket 20: 70%  Sorting block of length 334 for bucket 19  (Using difference cover)  bucket 20: 80%  bucket 20: 90%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 19  Sorting block time: 00:00:00Returning block of 314 for bucket 20Getting block 21 of 58  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 21:  bucket 21: 10%  bucket 21: 20%  bucket 21: 30%  bucket 21: 40%  bucket 21: 50%  bucket 21: 60%  bucket 21: 70%  bucket 21: 80%  bucket 21: 90%  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  Sorting block time: 00:00:00Returning block of 211 for bucket 21Getting block 22 of 58  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22Getting block 23 of 58  Entering block accumulator loop for bucket 22:  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  Entering block accumulator loop for bucket 23:  bucket 22: 10%  bucket 23: 10%  bucket 23: 20%  bucket 22: 20%  bucket 23: 30%  bucket 22: 30%  bucket 23: 40%  bucket 22: 40%  bucket 23: 50%  bucket 23: 60%  bucket 22: 50%  bucket 23: 70%  bucket 22: 60%  bucket 23: 80%  bucket 22: 70%  bucket 23: 90%  bucket 22: 80%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  bucket 22: 90%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 24 of 58  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Entering block accumulator loop for bucket 24:  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 24: 10%  bucket 24: 20%  bucket 25: 10%  bucket 24: 30%  bucket 25: 20%  bucket 24: 40%  bucket 25: 30%  bucket 24: 50%  bucket 25: 40%  bucket 24: 60%  bucket 25: 50%  bucket 24: 70%  bucket 25: 60%  bucket 24: 80%  bucket 25: 70%  bucket 24: 90%  bucket 25: 80%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  bucket 25: 90%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 352 for bucket 24  Sorting block time: 00:00:00Returning block of 106 for bucket 25Getting block 26 of 58  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26Getting block 27 of 58  Entering block accumulator loop for bucket 26:  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:  bucket 26: 10%  bucket 27: 10%  bucket 26: 20%  bucket 27: 20%  bucket 26: 30%  bucket 27: 30%  bucket 26: 40%  bucket 27: 40%  bucket 26: 50%  bucket 27: 50%  bucket 26: 60%  bucket 27: 60%  bucket 26: 70%  bucket 27: 70%  bucket 26: 80%  bucket 27: 80%  bucket 26: 90%  bucket 27: 90%  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 355 for bucket 26  Sorting block time: 00:00:00Returning block of 335 for bucket 27Getting block 28 of 58  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 28:Getting block 29 of 58  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  bucket 28: 10%  Entering block accumulator loop for bucket 29:  bucket 28: 20%  bucket 29: 10%  bucket 28: 30%  bucket 29: 20%  bucket 29: 30%  bucket 29: 40%  bucket 29: 50%  bucket 28: 40%  bucket 28: 50%  bucket 29: 60%  bucket 28: 60%  bucket 29: 70%  bucket 28: 70%  bucket 29: 80%  bucket 28: 80%  bucket 29: 90%  bucket 28: 90%  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 290 for bucket 29  Sorting block time: 00:00:00Returning block of 254 for bucket 28Getting block 30 of 58  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 30: 20%  bucket 30: 30%  bucket 30: 40%  bucket 30: 50%  bucket 30: 60%  bucket 30: 70%  bucket 30: 80%  bucket 30: 90%  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)Getting block 31 of 58  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 31:  Sorting block time: 00:00:00Returning block of 346 for bucket 30  bucket 31: 10%  bucket 31: 20%  bucket 31: 30%  bucket 31: 40%  bucket 31: 50%  bucket 31: 60%  bucket 31: 70%  bucket 31: 80%  bucket 31: 90%  bucket 31: 100%  Sorting block of length 377 for bucket 31  (Using difference cover)  Sorting block time: 00:00:00Returning block of 378 for bucket 31Getting block 32 of 58  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32Getting block 33..me: 00:00:00Returning block of 350 for bucket 23Getting block 24 of 57  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24Getting block 25 of 57  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 24:  Entering block accumulator loop for bucket 25:  bucket 24: 10%  bucket 24: 20%  bucket 25: 10%  bucket 24: 30%  bucket 25: 20%  bucket 24: 40%  bucket 24: 50%  bucket 25: 30%  bucket 24: 60%  bucket 24: 70%  bucket 25: 40%  bucket 24: 80%  bucket 25: 50%  bucket 24: 90%  bucket 25: 60%  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  Sorting block time: 00:00:00Returning block of 246 for bucket 24  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25Getting block 26 of 57  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:Getting block 27 of 57  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:  bucket 26: 10%  bucket 27: 10%  bucket 26: 20%  bucket 27: 20%  bucket 26: 30%  bucket 27: 30%  bucket 26: 40%  bucket 27: 40%  bucket 27: 50%  bucket 26: 50%  bucket 27: 60%  bucket 26: 60%  bucket 27: 70%  bucket 26: 70%  bucket 27: 80%  bucket 26: 80%  bucket 27: 90%  bucket 26: 90%  bucket 27: 100%  bucket 26: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  Sorting block of length 384 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 360 for bucket 27  Sorting block time: 00:00:00Returning block of 385 for bucket 26Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 28:  bucket 28: 10%  bucket 28: 20%  bucket 28: 30%  bucket 28: 40%  bucket 28: 50%  bucket 28: 60%  bucket 28: 70%  bucket 28: 80%  bucket 28: 90%  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 29:  bucket 29: 10%  bucket 29: 20%  bucket 29: 30%  bucket 29: 40%  bucket 29: 50%  bucket 29: 60%  bucket 29: 70%  bucket 29: 80%  bucket 29: 90%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29Getting block 30 of 57  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 30: 20%  bucket 30: 30%  bucket 30: 40%  bucket 30: 50%  bucket 30: 60%Getting block 31 of 57  bucket 30: 70%  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31Getting block 32 of 57  bucket 30: 80%  Entering block accumulator loop for bucket 31:  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  bucket 30: 90%Getting block 33 of 57  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 32:  bucket 30: 100%  bucket 31: 10%  Sorting block of length 257 for bucket 30  (Using difference cover)  Entering block accumulator loop for bucket 33:  bucket 32: 10%  bucket 33: 10%  bucket 31: 20%Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34  bucket 33: 20%  bucket 32: 20%  bucket 31: 30%  Entering block accumulator loop for bucket 34:  bucket 33: 30%  Sorting block time: 00:00:00Returning block of 258 for bucket 30  bucket 32: 30%  bucket 31: 40%  bucket 33: 40%  bucket 34: 10%  bucket 33: 50%  bucket 32: 40%  bucket 31: 50%  bucket 34: 20%  bucket 33: 60%  bucket 34: 30%  bucket 32: 50%  bucket 31: 60%  bucket 33: 70%  bucket 34: 40%  bucket 33: 80%  bucket 32: 60%  bucket 34: 50%  bucket 31: 70%  bucket 33: 90%  bucket 34: 60%  bucket 32: 70%  bucket 31: 80%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  bucket 34: 70%  bucket 32: 80%  bucket 31: 90%  bucket 34: 80%  bucket 32: 90%  bucket 31: 100%  bucket 34: 90%  Sorting block of length 310 for bucket 31  (Using difference cover)  bucket 32: 100%  Sorting block time: 00:00:00  Sorting block of length 219 for bucket 32  (Using difference cover)Returning block of 388 for bucket 33  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 34  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 220 for bucket 32Returning block of 311 for bucket 31Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 35:  bucket 35: 10%  bucket 35: 20%  bucket 35: 30%  bucket 35: 40%  bucket 35: 50%  bucket 35: 60%  bucket 35: 70%  bucket 35: 80%  bucket 35: 90%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36  Entering block accumulator loop for bucket 36:Getting block 37 of 57  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  bucket 36: 10%  Entering block accumulator loop for bucket 37:  bucket 36: 20%  bucket 37: 10%  bucket 36: 30%  bucket 37: 20%  bucket 36: 40%  bucket 36: 50%  bucket 37: 30%  bucket 36: 60%  bucket 37: 40%  bucket 36: 70%  bucket 37: 50%  bucket 36: 80%  bucket 36: 90%  bucket 37: 60%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  bucket 37: 70%  bucket 37: 80%  Sorting block time: 00:00:00Returning block of 151 for bucket 36  bucket 37: 90%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  Sorting block time: 00:00:00Returning block of 268 for bucket 37Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:Getting block 39 of 57  bucket 38: 10%  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  bucket 38: 20%  Entering block accumulator loop for bucket 39:  bucket 38: 30%  bucket 39: 10%  bucket 38: 40%  bucket 39: 20%  bucket 38: 50%  bucket 39: 30%  bucket 38: 60%  bucket 39: 40%  bucket 38: 70%  bucket 39: 50%  bucket 38: 80%  bucket 39: 60%  bucket 38: 90%  bucket 39: 70%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 39: 80%  bucket 39: 90%  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 338 for bucket 38  Sorting block time: 00:00:00Returning block of 388 for bucket 39Getting block 40 of 57  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 40:  bucket 40: 10%  bucket 40: 20%  bucket 40: 30%Getting block 41 of 57  bucket 40: 40%  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41Getting block 42 of 57Getting block 43 of 57  Entering block accumulator loop for bucket 41:  Reserving size (388) for bucket 42  bucket 40: 50%  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 42  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 42:  bucket 41: 10%  Entering block accumulator loop for bucket 43:  bucket 40: 60%  bucket 42: 10%  bucket 41: 20%  bucket 43: 10%  bucket 42: 20%  bucket 40: 70%  bucket 41: 30%  bucket 43: 20%  bucket 42: 30%  bucket 41: 40%  bucket 40: 80%  bucket 43: 30%  bucket 42: 40%  bucket 41: 50%  bucket 43: 40%  bucket 42: 50%  bucket 41: 60%  bucket 40: 90%  bucket 43: 50%  bucket 42: 60%  bucket 41: 70%  bucket 40: 100%  bucket 43: 60%  bucket 42: 70%  bucket 41: 80%  Sorting block of length 379 for bucket 40  (Using difference cover)  bucket 43: 70%  bucket 42: 80%  bucket 41: 90%  bucket 43: 80%  bucket 42: 90%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 43: 90%  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 40  Sorting block time: 00:00:00Returning block of 331 for bucket 41  Sorting block time: 00:00:00Returning block of 322 for bucket 43  Sorting block time: 00:00:00Returning block of 189 for bucket 42Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:  bucket 44: 10%  bucket 44: 20%  bucket 44: 30%  bucket 44: 40%  bucket 44: 50%  bucket 44: 60%  bucket 44: 70%  bucket 44: 80%  bucket 44: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  Entering block accumulator loop for bucket 45:Getting block 46 of 57  bucket 45: 10%  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46  Entering block accumulator loop for bucket 46:  bucket 45: 20%  bucket 46: 10%  bucket 45: 30%  bucket 46: 20%Getting block 47 of 57  bucket 45: 40%  bucket 46: 30%  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47  bucket 46: 40%  Entering block accumulator loop for bucket 47:  bucket 45: 50%  bucket 46: 50%  bucket 47: 10%  bucket 45: 60%  bucket 46: 60%  bucket 47: 20%  bucket 46: 70%  bucket 45: 70%  bucket 47: 30%  bucket 46: 80%  bucket 45: 80%  bucket 46: 90%  bucket 47: 40%  bucket 46: 100%  bucket 45: 90%  Sorting block of length 253 for bucket 46  (Using difference cover)  bucket 47: 50%  bucket 47: 60%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  bucket 47: 70%  Sorting block time: 00:00:00Returning block of 254 for bucket 46  bucket 47: 80%  bucket 47: 90%  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  Sorting block time: 00:00:00Returning block of 366 for bucket 45  Sorting block time: 00:00:00Returning block of 218 for bucket 47Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 48:  bucket 48: 10%Getting block 49 of 57  bucket 48: 20%  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  Entering block accumulator loop for bucket 49:  bucket 48: 30%  bucket 48: 40%  bucket 49: 10%  bucket 48: 50%  bucket 49: 20%  bucket 48: 60%  bucket 49: 30%  bucket 48: 70%  bucket 49: 40%  bucket 48: 80%  bucket 49: 50%  bucket 48: 90%  bucket 49: 60%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  bucket 49: 70%  bucket 49: 80%  bucket 49: 90%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 48  Sorting block time: 00:00:00Returning block of 113 for bucket 49Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 50:  bucket 50: 10%Getting block 51 of 57  bucket 50: 20%  Reserving size (388) for bucket 51Getting block 52 of 57  Calculating Z arrays for bucket 51  Reserving size (388) for bucket 52  bucket 50: 30%  Calculating Z arrays for bucket 52  Entering block accumulator loop for bucket 51:  Entering block accumulator loop for bucket 52:  bucket 50: 40%  bucket 50: 50%  bucket 51: 10%  bucket 52: 10%  bucket 50: 60%  bucket 51: 20%  bucket 52: 20%  bucket 50: 70%  bucket 52: 30%  bucket 50: 80%  bucket 51: 30%  bucket 52: 40%  bucket 50: 90%  bucket 52: 50%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  bucket 51: 40%  bucket 52: 60%  bucket 52: 70%  bucket 51: 50%  bucket 52: 80%  Sorting block time: 00:00:00Returning block of 276 for bucket 50  bucket 52: 90%  bucket 51: 60%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  bucket 51: 70%  bucket 51: 80%  Sorting block time: 00:00:00Returning block of 379 for bucket 52  bucket 51: 90%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 51Getting block 53 of 57  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  Entering block accumulator loop for bucket 53:Getting block 54 of 57  bucket 53: 10%  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 54:  bucket 53: 20%  bucket 54: 10%  bucket 53: 30%  bucket 54: 20%  bucket 53: 40%  bucket 54: 30%  bucket 54: 40%  bucket 53: 50%  bucket 54: 50%  bucket 54: 60%  bucket 53: 60%  bucket 54: 70%  bucket 53: 70%  bucket 54: 80%  bucket 54: 90%  bucket 53: 80%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  bucket 53: 90%  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 238 for bucket 54  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 55 of 57  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55  Entering block accumulator loop for bucket 55:Getting block 56 of 57  bucket 55: 10%  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 56:  bucket 55: 20%  bucket 56: 10%  bucket 55: 30%  bucket 56: 20%  bucket 56: 30%  bucket 55: 40%  bucket 56: 40%  bucket 56: 50%  bucket 56: 60%  bucket 56: 70%  bucket 55: 50%  bucket 56: 80%  bucket 55: 60%  bucket 56: 90%  bucket 55: 70%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  bucket 55: 80%  bucket 55: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56  Sorting block time: 00:00:00Returning block of 345 for bucket 55Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index3 reads; of these:  3 (100.00%) were paired; of these:    2 (66.67%) aligned concordantly 0 times    1 (33.33%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    2 pairs aligned concordantly 0 times; of these:      0 (0.00%) aligned discordantly 1 time    ----    2 pairs aligned 0 times concordantly or discordantly; of these:      4 mates make up the pairs; of these:        3 (75.00%) aligned 0 times        1 (25.00%) aligned exactly 1 time        0 (0.00%) aligned >1 times50.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #6)" name="5" time="37.90370583534241">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "a112d03e0ca64e6e",   "src": "hda"  },  "library|input_2": {   "id": "2f2f3fd9c4888c65",   "src": "hda"  },  "library|paired_options|paired_options_selector": "no",  "library|type": "paired",  "library|unaligned_file": false,  "reference_genome|own_file": {   "id": "86e580603de506e1",   "src": "hda"  },  "reference_genome|source": "history" }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/6/5/5/dataset_655b5975-e35f-45d3-9c46-21fb1108650c.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/6/5/5/dataset_655b5975-e35f-45d3-9c46-21fb1108650c.dat\u0027 genome.fa \u0026\u0026   ln -f -s \u0027/galaxy/server/database/objects/1/b/b/dataset_1bbe58fb-2b93-4bc8-befd-f1f3073189f6.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/d/2/8/dataset_d28a92bb-88d3-4837-8d2f-1adb51420f76.dat\u0027 input_r.fastq.gz \u0026\u0026   bowtie2  -p ${GALAXY_SLOTS:-4}  -x \u0027genome\u0027   -1 \u0027input_f.fastq.gz\u0027 -2 \u0027input_r.fastq.gz\u0027                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o \u0027/galaxy/server/database/objects/3/d/4/dataset_3d4a7029-721a-456e-9f49-3884e6b542f0.dat\u0027",  "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}",  "create_time": "2023-02-07T23:16:32.915979",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-t8k2d",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "c0b484732c29f325",  "inputs": {   "input_1": {    "id": "a112d03e0ca64e6e",    "src": "hda",    "uuid": "1bbe58fb-2b93-4bc8-befd-f1f3073189f6"   },   "input_2": {    "id": "2f2f3fd9c4888c65",    "src": "hda",    "uuid": "d28a92bb-88d3-4837-8d2f-1adb51420f76"   },   "own_file": {    "id": "86e580603de506e1",    "src": "hda",    "uuid": "655b5975-e35f-45d3-9c46-21fb1108650c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811795.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:16:35"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811795.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:16:35"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "10444464747fa42a",    "src": "hda",    "uuid": "3d4a7029-721a-456e-9f49-3884e6b542f0"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 756, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 757, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 758, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",   "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}",   "save_mapping_stats": "\"false\""  },  "state": "ok",  "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/6/5/5/dataset_655b5975-e35f-45d3-9c46-21fb1108650c.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 2: 10%\n  bucket 3: 10%\n  bucket 1: 20%\n  bucket 4: 10%\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 2: 20%\n  bucket 7: 10%\n  bucket 3: 20%\n  bucket 1: 30%\n  bucket 8: 10%\n  bucket 2: 30%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 7: 20%\n  bucket 1: 40%\n  bucket 2: 40%\n  bucket 8: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 1: 50%\n  bucket 7: 30%\n  bucket 2: 50%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 8: 30%\n  bucket 5: 40%\n  bucket 1: 60%\n  bucket 6: 40%\n  bucket 7: 40%\n  bucket 2: 60%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 1: 70%\n  bucket 8: 40%\n  bucket 7: 50%\n  bucket 2: 70%\n  bucket 5: 50%\n  bucket 6: 50%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 1: 80%\n  bucket 8: 50%\n  bucket 2: 80%\n  bucket 7: 60%\n  bucket 5: 60%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 6: 60%\n  bucket 1: 90%\n  bucket 2: 90%\n  bucket 7: 70%\n  bucket 8: 60%\n  bucket 5: 70%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 1: 100%\n  bucket 2: 100%\n  bucket 6: 70%\n  bucket 7: 80%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  bucket 8: 70%\n  bucket 5: 80%\n  bucket 4: 90%\n  bucket 3: 100%\n  bucket 7: 90%\n  bucket 6: 80%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 8: 80%\n  bucket 4: 100%\n  bucket 5: 90%\n  bucket 7: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 8: 90%\n  bucket 5: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 6: 100%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 8: 100%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 58\n  Entering block accumulator loop for bucket 9:\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 10%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 9: 30%\n  bucket 10: 20%\n  bucket 9: 40%\n  bucket 10: 30%\n  bucket 9: 50%\n  bucket 10: 40%\n  bucket 9: 60%\n  bucket 10: 50%\n  bucket 9: 70%\n  bucket 10: 60%\n  bucket 9: 80%\n  bucket 10: 70%\n  bucket 9: 90%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\nGetting block 12 of 58\n  Calculating Z arrays for bucket 11\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 11:\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 11: 10%\n  bucket 12: 20%\n  bucket 11: 20%\n  bucket 12: 30%\n  bucket 11: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 11: 40%\n  bucket 12: 60%\n  bucket 11: 50%\n  bucket 12: 70%\n  bucket 11: 60%\n  bucket 12: 80%\n  bucket 11: 70%\n  bucket 12: 90%\n  bucket 11: 80%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\nGetting block 14 of 58\n  bucket 13: 80%\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 13: 90%\n  bucket 14: 10%\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 15 of 58\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nGetting block 16 of 58\nReturning block of 242 for bucket 15\n  Reserving size (388) for bucket 16\n  Calculating Z arrays for bucket 16\n  Entering block accumulator loop for bucket 16:\n  bucket 16: 10%\n  bucket 16: 20%\n  bucket 16: 30%\n  bucket 16: 40%\n  bucket 16: 50%\n  bucket 16: 60%\n  bucket 16: 70%\n  bucket 16: 80%\n  bucket 16: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 17 of 58\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\n  Entering block accumulator loop for bucket 17:\n  Calculating Z arrays for bucket 18\n  Entering block accumulator loop for bucket 18:\n  bucket 17: 10%\n  bucket 17: 20%\n  bucket 18: 10%\n  bucket 17: 30%\n  bucket 18: 20%\n  bucket 17: 40%\n  bucket 18: 30%\n  bucket 17: 50%\n  bucket 18: 40%\n  bucket 17: 60%\n  bucket 18: 50%\n  bucket 17: 70%\n  bucket 17: 80%\n  bucket 18: 60%\n  bucket 17: 90%\n  bucket 18: 70%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 18: 80%\n  bucket 18: 90%\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Entering block accumulator loop for bucket 19:\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 20:\n  bucket 19: 10%\n  bucket 20: 10%\n  bucket 19: 20%\n  bucket 20: 20%\n  bucket 19: 30%\n  bucket 20: 30%\n  bucket 19: 40%\n  bucket 20: 40%\n  bucket 19: 50%\n  bucket 20: 50%\n  bucket 19: 60%\n  bucket 20: 60%\n  bucket 19: 70%\n  bucket 20: 70%\n  bucket 20: 80%\n  bucket 19: 80%\n  bucket 20: 90%\n  bucket 19: 90%\n  bucket 20: 100%\n  bucket 19: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 21:\n  bucket 21: 10%\n  bucket 21: 20%\n  bucket 21: 30%\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  bucket 21: 40%\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 50%\n  bucket 22: 10%\n  bucket 21: 60%\n  bucket 22: 20%\n  bucket 21: 70%\n  bucket 22: 30%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 22: 40%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 22: 50%\n  bucket 22: 60%\n  bucket 22: 70%\n  bucket 22: 80%\n  bucket 22: 90%\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\nGetting block 24 of 58\n  Calculating Z arrays for bucket 23\n  Reserving size (388) for bucket 24\n  Entering block accumulator loop for bucket 23:\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 23: 10%\n  bucket 24: 10%\n  bucket 23: 20%\n  bucket 24: 20%\n  bucket 23: 30%\n  bucket 24: 30%\n  bucket 23: 40%\n  bucket 24: 40%\n  bucket 23: 50%\n  bucket 24: 50%\n  bucket 23: 60%\n  bucket 24: 60%\n  bucket 23: 70%\n  bucket 24: 70%\n  bucket 23: 80%\n  bucket 24: 80%\n  bucket 23: 90%\n  bucket 24: 90%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\nGetting block 26 of 58\n  Entering block accumulator loop for bucket 25:\n  Reserving size (388) for bucket 26\nGetting block 27 of 58\n  Calculating Z arrays for bucket 26\n  bucket 25: 10%\n  Reserving size (388) for bucket 27\n  Entering block accumulator loop for bucket 26:\n  bucket 25: 20%\n  Calculating Z arrays for bucket 27\n  bucket 25: 30%\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 25: 40%\n  bucket 26: 20%\n  bucket 25: 50%\n  bucket 27: 10%\n  bucket 26: 30%\n  bucket 25: 60%\n  bucket 27: 20%\n  bucket 26: 40%\n  bucket 25: 70%\n  bucket 27: 30%\n  bucket 26: 50%\n  bucket 25: 80%\n  bucket 26: 60%\n  bucket 27: 40%\n  bucket 25: 90%\n  bucket 26: 70%\n  bucket 27: 50%\n  bucket 25: 100%\n  bucket 26: 80%\n  bucket 27: 60%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 26: 90%\n  Sorting block time: 00:00:00\n  bucket 27: 70%\n  bucket 26: 100%\nReturning block of 106 for bucket 25\n  bucket 27: 80%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\nGetting block 28 of 58\nGetting block 29 of 58\n  bucket 27: 90%\nGetting block 30 of 58\n  Reserving size (388) for bucket 28\n  Sorting block time: 00:00:00\n  Reserving size (388) for bucket 29\n  bucket 27: 100%\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 28\nReturning block of 355 for bucket 26\n  Calculating Z arrays for bucket 29\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 28:\n  Entering block accumulator loop for bucket 29:\n  Entering block accumulator loop for bucket 30:\n  bucket 28: 10%\n  bucket 29: 10%\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  bucket 28: 20%\n  bucket 30: 10%\n  bucket 29: 20%\n  bucket 30: 20%\n  bucket 28: 30%\n  bucket 29: 30%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 29: 40%\n  bucket 28: 40%\nGetting block 31 of 58\n  bucket 30: 50%\n  Reserving size (388) for bucket 31\n  bucket 29: 50%\n  Calculating Z arrays for bucket 31\n  bucket 28: 50%\n  Entering block accumulator loop for bucket 31:\n  bucket 30: 60%\n  bucket 29: 60%\n  bucket 28: 60%\n  bucket 30: 70%\n  bucket 29: 70%\n  bucket 31: 10%\n  bucket 30: 80%\n  bucket 29: 80%\n  bucket 28: 70%\n  bucket 31: 20%\n  bucket 30: 90%\n  bucket 29: 90%\n  bucket 31: 30%\n  bucket 28: 80%\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 31: 40%\n  bucket 28: 90%\n  bucket 31: 50%\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nReturning block of 290 for bucket 29\n  bucket 31: 90%\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 378 for bucket 31\nGetting block 32 of 58\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block\n..\n bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  Sorting block time: 00:00:00\nGetting block 25 of 57\nReturning block of 350 for bucket 23\n  Sorting block time: 00:00:00\n  Reserving size (388) for bucket 25\nReturning block of 372 for bucket 22\n  Calculating Z arrays for bucket 25\n  bucket 24: 20%\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 30%\n  bucket 25: 10%\n  bucket 24: 40%\n  bucket 25: 20%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 25: 30%\n  bucket 24: 70%\n  bucket 25: 40%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 25: 50%\n  bucket 24: 100%\n  bucket 25: 60%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\nGetting block 27 of 57\n  Calculating Z arrays for bucket 26\n  Reserving size (388) for bucket 27\n  Entering block accumulator loop for bucket 26:\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 26: 20%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 26: 40%\n  bucket 26: 50%\n  bucket 26: 60%\n  bucket 26: 70%\n  bucket 26: 80%\n  bucket 26: 90%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 27: 30%\n  bucket 27: 40%\n  bucket 27: 50%\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 27: 80%\n  bucket 27: 90%\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 28:\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 28: 20%\n  bucket 28: 30%\n  bucket 28: 40%\n  bucket 28: 50%\n  bucket 29: 10%\n  bucket 28: 60%\n  bucket 28: 70%\n  bucket 28: 80%\n  bucket 29: 20%\n  bucket 28: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  bucket 29: 30%\n  bucket 29: 40%\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\nGetting block 31 of 57\n  bucket 30: 30%\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 31: 10%\n  bucket 30: 60%\n  bucket 31: 20%\n  bucket 30: 70%\n  bucket 31: 30%\n  bucket 30: 80%\n  bucket 31: 40%\n  bucket 30: 90%\n  bucket 31: 50%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  Sorting block time: 00:00:00\n  (Using difference cover)\nReturning block of 258 for bucket 30\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\nGetting block 33 of 57\n  Calculating Z arrays for bucket 32\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 32:\n  Entering block accumulator loop for bucket 33:\n  bucket 32: 10%\n  bucket 33: 10%\n  bucket 32: 20%\n  bucket 33: 20%\n  bucket 32: 30%\n  bucket 33: 30%\n  bucket 33: 40%\n  bucket 33: 50%\n  bucket 32: 40%\n  bucket 33: 60%\n  bucket 32: 50%\n  bucket 33: 70%\n  bucket 32: 60%\n  bucket 33: 80%\n  bucket 32: 70%\n  bucket 32: 80%\n  bucket 33: 90%\n  bucket 32: 90%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nReturning block of 388 for bucket 33\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 34:\n  Entering block accumulator loop for bucket 35:\nGetting block 36 of 57\n  bucket 34: 10%\n  Reserving size (388) for bucket 36\n  bucket 35: 10%\n  Calculating Z arrays for bucket 36\n  bucket 34: 20%\n  Entering block accumulator loop for bucket 36:\n  bucket 35: 20%\n  bucket 34: 30%\n  bucket 36: 10%\n  bucket 35: 30%\n  bucket 34: 40%\n  bucket 36: 20%\n  bucket 35: 40%\n  bucket 34: 50%\n  bucket 36: 30%\n  bucket 35: 50%\n  bucket 34: 60%\n  bucket 36: 40%\n  bucket 35: 60%\n  bucket 34: 70%\n  bucket 36: 50%\n  bucket 35: 70%\n  bucket 34: 80%\n  bucket 36: 60%\n  bucket 35: 80%\n  bucket 36: 70%\n  bucket 34: 90%\n  bucket 35: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  bucket 36: 80%\n  (Using difference cover)\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\nGetting block 38 of 57\n  Calculating Z arrays for bucket 37\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  Entering block accumulator loop for bucket 37:\n  bucket 38: 10%\n  bucket 37: 10%\n  bucket 38: 20%\n  bucket 37: 20%\n  bucket 38: 30%\n  bucket 38: 40%\n  bucket 37: 30%\n  bucket 38: 50%\n  bucket 38: 60%\n  bucket 37: 40%\n  bucket 38: 70%\n  bucket 37: 50%\n  bucket 38: 80%\n  bucket 38: 90%\n  bucket 37: 60%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 37: 70%\n  bucket 37: 80%\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\nGetting block 39 of 57\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Sorting block time: 00:00:00\nGetting block 40 of 57\nReturning block of 268 for bucket 37\n  Entering block accumulator loop for bucket 39:\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\nGetting block 41 of 57\n  Entering block accumulator loop for bucket 40:\n  bucket 39: 10%\n  Reserving size (388) for bucket 41\n  Calculating Z arrays for bucket 41\n  bucket 39: 20%\n  bucket 40: 10%\n  Entering block accumulator loop for bucket 41:\n  bucket 39: 30%\n  bucket 40: 20%\n  bucket 39: 40%\n  bucket 41: 10%\n  bucket 40: 30%\n  bucket 41: 20%\n  bucket 39: 50%\n  bucket 40: 40%\n  bucket 41: 30%\n  bucket 40: 50%\n  bucket 39: 60%\n  bucket 41: 40%\n  bucket 40: 60%\n  bucket 41: 50%\n  bucket 39: 70%\n  bucket 40: 70%\n  bucket 41: 60%\n  bucket 40: 80%\n  bucket 41: 70%\n  bucket 39: 80%\n  bucket 40: 90%\n  bucket 41: 80%\n  bucket 40: 100%\n  bucket 41: 90%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 39: 90%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 42:\n  Entering block accumulator loop for bucket 43:\n  bucket 42: 10%\n  bucket 43: 10%\n  bucket 42: 20%\n  bucket 43: 20%\n  bucket 42: 30%\n  bucket 43: 30%\n  bucket 42: 40%\n  bucket 43: 40%\n  bucket 42: 50%\n  bucket 43: 50%\n  bucket 42: 60%\n  bucket 43: 60%\n  bucket 42: 70%\n  bucket 43: 70%\n  bucket 42: 80%\n  bucket 43: 80%\n  bucket 42: 90%\n  bucket 43: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 44: 10%\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 44: 40%\n  bucket 44: 50%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\nGetting block 46 of 57\n  Calculating Z arrays for bucket 45\n  Reserving size (388) for bucket 46\nGetting block 47 of 57\n  Calculating Z arrays for bucket 46\n  Reserving size (388) for bucket 47\n  Entering block accumulator loop for bucket 45:\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 46:\n  Entering block accumulator loop for bucket 47:\n  bucket 46: 10%\n  bucket 45: 10%\n  bucket 47: 10%\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  bucket 46: 20%\n  bucket 47: 20%\n  bucket 45: 20%\n  Entering block accumulator loop for bucket 48:\n  bucket 46: 30%\n  bucket 47: 30%\n  bucket 48: 10%\n  bucket 46: 40%\n  bucket 45: 30%\n  bucket 47: 40%\n  bucket 48: 20%\n  bucket 46: 50%\n  bucket 47: 50%\n  bucket 45: 40%\n  bucket 48: 30%\n  bucket 46: 60%\n  bucket 47: 60%\n  bucket 48: 40%\n  bucket 46: 70%\n  bucket 45: 50%\n  bucket 47: 70%\n  bucket 48: 50%\n  bucket 46: 80%\n  bucket 47: 80%\n  bucket 45: 60%\n  bucket 48: 60%\n  bucket 46: 90%\n  bucket 47: 90%\n  bucket 45: 70%\n  bucket 48: 70%\n  bucket 46: 100%\n  bucket 47: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 80%\n  bucket 45: 80%\n  bucket 48: 90%\n  bucket 45: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\n  bucket 49: 20%\n  bucket 49: 30%\n  bucket 49: 40%\n  bucket 49: 50%\n  bucket 49: 60%\n  bucket 49: 70%\n  bucket 49: 80%\n  bucket 49: 90%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 50:\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 50: 10%\n  bucket 51: 10%\n  bucket 51: 20%\n  bucket 51: 30%\n  bucket 51: 40%\n  bucket 50: 20%\n  bucket 51: 50%\n  bucket 51: 60%\n  bucket 51: 70%\n  bucket 50: 30%\n  bucket 51: 80%\n  bucket 51: 90%\n  bucket 50: 40%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  bucket 50: 50%\n  bucket 50: 60%\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  bucket 50: 70%\n  bucket 50: 80%\n  bucket 50: 90%\nGetting block 52 of 57\n  bucket 50: 100%\n  Reserving size (388) for bucket 52\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Calculating Z arrays for bucket 52\n  Entering block accumulator loop for bucket 52:\n  bucket 52: 10%\n  bucket 52: 20%\n  bucket 52: 30%\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\n  bucket 52: 40%\n  bucket 52: 50%\n  bucket 52: 60%\n  bucket 52: 70%\n  bucket 52: 80%\n  bucket 52: 90%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 53:\nGetting block 54 of 57\n  bucket 53: 10%\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 20%\n  bucket 53: 30%\n  bucket 54: 10%\n  bucket 53: 40%\n  bucket 54: 20%\n  bucket 53: 50%\n  bucket 54: 30%\n  bucket 53: 60%\n  bucket 54: 40%\n  bucket 53: 70%\n  bucket 54: 50%\n  bucket 53: 80%\n  bucket 54: 60%\n  bucket 53: 90%\n  bucket 54: 70%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  bucket 54: 80%\n  bucket 54: 90%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\nGetting block 56 of 57\n  Calculating Z arrays for bucket 55\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 55:\n  Entering block accumulator loop for bucket 56:\n  bucket 55: 10%\n  bucket 56: 10%\n  bucket 55: 20%\n  bucket 56: 20%\n  bucket 55: 30%\n  bucket 56: 30%\n  bucket 55: 40%\n  bucket 56: 40%\n  bucket 55: 50%\n  bucket 56: 50%\n  bucket 55: 60%\n  bucket 56: 60%\n  bucket 55: 70%\n  bucket 56: 70%\n  bucket 55: 80%\n  bucket 56: 80%\n  bucket 55: 90%\n  bucket 56: 90%\n  bucket 55: 100%\n  bucket 56: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0",  "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/6/5/5/dataset_655b5975-e35f-45d3-9c46-21fb1108650c.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 2\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 6:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 7:\n  Entering block accumulator loop for bucket 8:\n  bucket 2: 10%\n  bucket 3: 10%\n  bucket 1: 20%\n  bucket 4: 10%\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 2: 20%\n  bucket 7: 10%\n  bucket 3: 20%\n  bucket 1: 30%\n  bucket 8: 10%\n  bucket 2: 30%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 4: 20%\n  bucket 3: 30%\n  bucket 7: 20%\n  bucket 1: 40%\n  bucket 2: 40%\n  bucket 8: 20%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 4: 30%\n  bucket 3: 40%\n  bucket 1: 50%\n  bucket 7: 30%\n  bucket 2: 50%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 8: 30%\n  bucket 5: 40%\n  bucket 1: 60%\n  bucket 6: 40%\n  bucket 7: 40%\n  bucket 2: 60%\n  bucket 4: 50%\n  bucket 3: 60%\n  bucket 1: 70%\n  bucket 8: 40%\n  bucket 7: 50%\n  bucket 2: 70%\n  bucket 5: 50%\n  bucket 6: 50%\n  bucket 4: 60%\n  bucket 3: 70%\n  bucket 1: 80%\n  bucket 8: 50%\n  bucket 2: 80%\n  bucket 7: 60%\n  bucket 5: 60%\n  bucket 4: 70%\n  bucket 3: 80%\n  bucket 6: 60%\n  bucket 1: 90%\n  bucket 2: 90%\n  bucket 7: 70%\n  bucket 8: 60%\n  bucket 5: 70%\n  bucket 4: 80%\n  bucket 3: 90%\n  bucket 1: 100%\n  bucket 2: 100%\n  bucket 6: 70%\n  bucket 7: 80%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  bucket 8: 70%\n  bucket 5: 80%\n  bucket 4: 90%\n  bucket 3: 100%\n  bucket 7: 90%\n  bucket 6: 80%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 8: 80%\n  bucket 4: 100%\n  bucket 5: 90%\n  bucket 7: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  bucket 6: 90%\n  bucket 8: 90%\n  bucket 5: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 6: 100%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 8: 100%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\nGetting block 10 of 58\n  Entering block accumulator loop for bucket 9:\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  bucket 9: 10%\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 20%\n  bucket 10: 10%\n  bucket 9: 30%\n  bucket 10: 20%\n  bucket 9: 40%\n  bucket 10: 30%\n  bucket 9: 50%\n  bucket 10: 40%\n  bucket 9: 60%\n  bucket 10: 50%\n  bucket 9: 70%\n  bucket 10: 60%\n  bucket 9: 80%\n  bucket 10: 70%\n  bucket 9: 90%\n  bucket 10: 80%\n  bucket 10: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\nGetting block 12 of 58\n  Calculating Z arrays for bucket 11\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 11:\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\n  bucket 11: 10%\n  bucket 12: 20%\n  bucket 11: 20%\n  bucket 12: 30%\n  bucket 11: 30%\n  bucket 12: 40%\n  bucket 12: 50%\n  bucket 11: 40%\n  bucket 12: 60%\n  bucket 11: 50%\n  bucket 12: 70%\n  bucket 11: 60%\n  bucket 12: 80%\n  bucket 11: 70%\n  bucket 12: 90%\n  bucket 11: 80%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 13: 20%\n  bucket 13: 30%\n  bucket 13: 40%\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\nGetting block 14 of 58\n  bucket 13: 80%\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  bucket 13: 90%\n  bucket 14: 10%\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  bucket 14: 20%\n  bucket 14: 30%\n  bucket 14: 40%\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\n  bucket 14: 50%\n  bucket 14: 60%\n  bucket 14: 70%\n  bucket 14: 80%\n  bucket 14: 90%\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 15 of 58\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\n  bucket 15: 20%\n  bucket 15: 30%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 15: 60%\n  bucket 15: 70%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 15: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  Sorting block time: 00:00:00\nGetting block 16 of 58\nReturning block of 242 for bucket 15\n  Reserving size (388) for bucket 16\n  Calculating Z arrays for bucket 16\n  Entering block accumulator loop for bucket 16:\n  bucket 16: 10%\n  bucket 16: 20%\n  bucket 16: 30%\n  bucket 16: 40%\n  bucket 16: 50%\n  bucket 16: 60%\n  bucket 16: 70%\n  bucket 16: 80%\n  bucket 16: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 17 of 58\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\n  Entering block accumulator loop for bucket 17:\n  Calculating Z arrays for bucket 18\n  Entering block accumulator loop for bucket 18:\n  bucket 17: 10%\n  bucket 17: 20%\n  bucket 18: 10%\n  bucket 17: 30%\n  bucket 18: 20%\n  bucket 17: 40%\n  bucket 18: 30%\n  bucket 17: 50%\n  bucket 18: 40%\n  bucket 17: 60%\n  bucket 18: 50%\n  bucket 17: 70%\n  bucket 17: 80%\n  bucket 18: 60%\n  bucket 17: 90%\n  bucket 18: 70%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 18: 80%\n  bucket 18: 90%\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Entering block accumulator loop for bucket 19:\n  Calculating Z arrays for bucket 20\n  Entering block accumulator loop for bucket 20:\n  bucket 19: 10%\n  bucket 20: 10%\n  bucket 19: 20%\n  bucket 20: 20%\n  bucket 19: 30%\n  bucket 20: 30%\n  bucket 19: 40%\n  bucket 20: 40%\n  bucket 19: 50%\n  bucket 20: 50%\n  bucket 19: 60%\n  bucket 20: 60%\n  bucket 19: 70%\n  bucket 20: 70%\n  bucket 20: 80%\n  bucket 19: 80%\n  bucket 20: 90%\n  bucket 19: 90%\n  bucket 20: 100%\n  bucket 19: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\n  Entering block accumulator loop for bucket 21:\n  bucket 21: 10%\n  bucket 21: 20%\n  bucket 21: 30%\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  bucket 21: 40%\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 50%\n  bucket 22: 10%\n  bucket 21: 60%\n  bucket 22: 20%\n  bucket 21: 70%\n  bucket 22: 30%\n  bucket 21: 80%\n  bucket 21: 90%\n  bucket 22: 40%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 22: 50%\n  bucket 22: 60%\n  bucket 22: 70%\n  bucket 22: 80%\n  bucket 22: 90%\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\nGetting block 24 of 58\n  Calculating Z arrays for bucket 23\n  Reserving size (388) for bucket 24\n  Entering block accumulator loop for bucket 23:\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 23: 10%\n  bucket 24: 10%\n  bucket 23: 20%\n  bucket 24: 20%\n  bucket 23: 30%\n  bucket 24: 30%\n  bucket 23: 40%\n  bucket 24: 40%\n  bucket 23: 50%\n  bucket 24: 50%\n  bucket 23: 60%\n  bucket 24: 60%\n  bucket 23: 70%\n  bucket 24: 70%\n  bucket 23: 80%\n  bucket 24: 80%\n  bucket 23: 90%\n  bucket 24: 90%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\nGetting block 26 of 58\n  Entering block accumulator loop for bucket 25:\n  Reserving size (388) for bucket 26\nGetting block 27 of 58\n  Calculating Z arrays for bucket 26\n  bucket 25: 10%\n  Reserving size (388) for bucket 27\n  Entering block accumulator loop for bucket 26:\n  bucket 25: 20%\n  Calculating Z arrays for bucket 27\n  bucket 25: 30%\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 25: 40%\n  bucket 26: 20%\n  bucket 25: 50%\n  bucket 27: 10%\n  bucket 26: 30%\n  bucket 25: 60%\n  bucket 27: 20%\n  bucket 26: 40%\n  bucket 25: 70%\n  bucket 27: 30%\n  bucket 26: 50%\n  bucket 25: 80%\n  bucket 26: 60%\n  bucket 27: 40%\n  bucket 25: 90%\n  bucket 26: 70%\n  bucket 27: 50%\n  bucket 25: 100%\n  bucket 26: 80%\n  bucket 27: 60%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 26: 90%\n  Sorting block time: 00:00:00\n  bucket 27: 70%\n  bucket 26: 100%\nReturning block of 106 for bucket 25\n  bucket 27: 80%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\nGetting block 28 of 58\nGetting block 29 of 58\n  bucket 27: 90%\nGetting block 30 of 58\n  Reserving size (388) for bucket 28\n  Sorting block time: 00:00:00\n  Reserving size (388) for bucket 29\n  bucket 27: 100%\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 28\nReturning block of 355 for bucket 26\n  Calculating Z arrays for bucket 29\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 28:\n  Entering block accumulator loop for bucket 29:\n  Entering block accumulator loop for bucket 30:\n  bucket 28: 10%\n  bucket 29: 10%\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  bucket 28: 20%\n  bucket 30: 10%\n  bucket 29: 20%\n  bucket 30: 20%\n  bucket 28: 30%\n  bucket 29: 30%\n  bucket 30: 30%\n  bucket 30: 40%\n  bucket 29: 40%\n  bucket 28: 40%\nGetting block 31 of 58\n  bucket 30: 50%\n  Reserving size (388) for bucket 31\n  bucket 29: 50%\n  Calculating Z arrays for bucket 31\n  bucket 28: 50%\n  Entering block accumulator loop for bucket 31:\n  bucket 30: 60%\n  bucket 29: 60%\n  bucket 28: 60%\n  bucket 30: 70%\n  bucket 29: 70%\n  bucket 31: 10%\n  bucket 30: 80%\n  bucket 29: 80%\n  bucket 28: 70%\n  bucket 31: 20%\n  bucket 30: 90%\n  bucket 29: 90%\n  bucket 31: 30%\n  bucket 28: 80%\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 31: 40%\n  bucket 28: 90%\n  bucket 31: 50%\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nReturning block of 290 for bucket 29\n  bucket 31: 90%\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  bucket 31: 100%\n  Sorting block of length 377 for bucket 31\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 378 for bucket 31\nGetting block 32 of 58\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block\n..\n bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  Sorting block time: 00:00:00\nGetting block 25 of 57\nReturning block of 350 for bucket 23\n  Sorting block time: 00:00:00\n  Reserving size (388) for bucket 25\nReturning block of 372 for bucket 22\n  Calculating Z arrays for bucket 25\n  bucket 24: 20%\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 30%\n  bucket 25: 10%\n  bucket 24: 40%\n  bucket 25: 20%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 25: 30%\n  bucket 24: 70%\n  bucket 25: 40%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 25: 50%\n  bucket 24: 100%\n  bucket 25: 60%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 25: 90%\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\nGetting block 27 of 57\n  Calculating Z arrays for bucket 26\n  Reserving size (388) for bucket 27\n  Entering block accumulator loop for bucket 26:\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 27: 10%\n  bucket 26: 20%\n  bucket 27: 20%\n  bucket 26: 30%\n  bucket 26: 40%\n  bucket 26: 50%\n  bucket 26: 60%\n  bucket 26: 70%\n  bucket 26: 80%\n  bucket 26: 90%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 27: 30%\n  bucket 27: 40%\n  bucket 27: 50%\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 27: 80%\n  bucket 27: 90%\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 28:\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 28: 20%\n  bucket 28: 30%\n  bucket 28: 40%\n  bucket 28: 50%\n  bucket 29: 10%\n  bucket 28: 60%\n  bucket 28: 70%\n  bucket 28: 80%\n  bucket 29: 20%\n  bucket 28: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  bucket 29: 30%\n  bucket 29: 40%\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\n  bucket 29: 50%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 29: 80%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 30:\n  bucket 30: 10%\n  bucket 30: 20%\nGetting block 31 of 57\n  bucket 30: 30%\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 30: 40%\n  bucket 30: 50%\n  bucket 31: 10%\n  bucket 30: 60%\n  bucket 31: 20%\n  bucket 30: 70%\n  bucket 31: 30%\n  bucket 30: 80%\n  bucket 31: 40%\n  bucket 30: 90%\n  bucket 31: 50%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 31: 80%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  Sorting block time: 00:00:00\n  (Using difference cover)\nReturning block of 258 for bucket 30\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\nGetting block 32 of 57\n  Reserving size (388) for bucket 32\nGetting block 33 of 57\n  Calculating Z arrays for bucket 32\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 32:\n  Entering block accumulator loop for bucket 33:\n  bucket 32: 10%\n  bucket 33: 10%\n  bucket 32: 20%\n  bucket 33: 20%\n  bucket 32: 30%\n  bucket 33: 30%\n  bucket 33: 40%\n  bucket 33: 50%\n  bucket 32: 40%\n  bucket 33: 60%\n  bucket 32: 50%\n  bucket 33: 70%\n  bucket 32: 60%\n  bucket 33: 80%\n  bucket 32: 70%\n  bucket 32: 80%\n  bucket 33: 90%\n  bucket 32: 90%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nReturning block of 388 for bucket 33\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 34:\n  Entering block accumulator loop for bucket 35:\nGetting block 36 of 57\n  bucket 34: 10%\n  Reserving size (388) for bucket 36\n  bucket 35: 10%\n  Calculating Z arrays for bucket 36\n  bucket 34: 20%\n  Entering block accumulator loop for bucket 36:\n  bucket 35: 20%\n  bucket 34: 30%\n  bucket 36: 10%\n  bucket 35: 30%\n  bucket 34: 40%\n  bucket 36: 20%\n  bucket 35: 40%\n  bucket 34: 50%\n  bucket 36: 30%\n  bucket 35: 50%\n  bucket 34: 60%\n  bucket 36: 40%\n  bucket 35: 60%\n  bucket 34: 70%\n  bucket 36: 50%\n  bucket 35: 70%\n  bucket 34: 80%\n  bucket 36: 60%\n  bucket 35: 80%\n  bucket 36: 70%\n  bucket 34: 90%\n  bucket 35: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  bucket 36: 80%\n  (Using difference cover)\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 37 of 57\n  Reserving size (388) for bucket 37\nGetting block 38 of 57\n  Calculating Z arrays for bucket 37\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  Entering block accumulator loop for bucket 37:\n  bucket 38: 10%\n  bucket 37: 10%\n  bucket 38: 20%\n  bucket 37: 20%\n  bucket 38: 30%\n  bucket 38: 40%\n  bucket 37: 30%\n  bucket 38: 50%\n  bucket 38: 60%\n  bucket 37: 40%\n  bucket 38: 70%\n  bucket 37: 50%\n  bucket 38: 80%\n  bucket 38: 90%\n  bucket 37: 60%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 37: 70%\n  bucket 37: 80%\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  bucket 37: 90%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\nGetting block 39 of 57\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Sorting block time: 00:00:00\nGetting block 40 of 57\nReturning block of 268 for bucket 37\n  Entering block accumulator loop for bucket 39:\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\nGetting block 41 of 57\n  Entering block accumulator loop for bucket 40:\n  bucket 39: 10%\n  Reserving size (388) for bucket 41\n  Calculating Z arrays for bucket 41\n  bucket 39: 20%\n  bucket 40: 10%\n  Entering block accumulator loop for bucket 41:\n  bucket 39: 30%\n  bucket 40: 20%\n  bucket 39: 40%\n  bucket 41: 10%\n  bucket 40: 30%\n  bucket 41: 20%\n  bucket 39: 50%\n  bucket 40: 40%\n  bucket 41: 30%\n  bucket 40: 50%\n  bucket 39: 60%\n  bucket 41: 40%\n  bucket 40: 60%\n  bucket 41: 50%\n  bucket 39: 70%\n  bucket 40: 70%\n  bucket 41: 60%\n  bucket 40: 80%\n  bucket 41: 70%\n  bucket 39: 80%\n  bucket 40: 90%\n  bucket 41: 80%\n  bucket 40: 100%\n  bucket 41: 90%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 39: 90%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 42:\n  Entering block accumulator loop for bucket 43:\n  bucket 42: 10%\n  bucket 43: 10%\n  bucket 42: 20%\n  bucket 43: 20%\n  bucket 42: 30%\n  bucket 43: 30%\n  bucket 42: 40%\n  bucket 43: 40%\n  bucket 42: 50%\n  bucket 43: 50%\n  bucket 42: 60%\n  bucket 43: 60%\n  bucket 42: 70%\n  bucket 43: 70%\n  bucket 42: 80%\n  bucket 43: 80%\n  bucket 42: 90%\n  bucket 43: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 44:\n  bucket 44: 10%\n  bucket 44: 20%\n  bucket 44: 30%\n  bucket 44: 40%\n  bucket 44: 50%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\nGetting block 46 of 57\n  Calculating Z arrays for bucket 45\n  Reserving size (388) for bucket 46\nGetting block 47 of 57\n  Calculating Z arrays for bucket 46\n  Reserving size (388) for bucket 47\n  Entering block accumulator loop for bucket 45:\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 46:\n  Entering block accumulator loop for bucket 47:\n  bucket 46: 10%\n  bucket 45: 10%\n  bucket 47: 10%\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  bucket 46: 20%\n  bucket 47: 20%\n  bucket 45: 20%\n  Entering block accumulator loop for bucket 48:\n  bucket 46: 30%\n  bucket 47: 30%\n  bucket 48: 10%\n  bucket 46: 40%\n  bucket 45: 30%\n  bucket 47: 40%\n  bucket 48: 20%\n  bucket 46: 50%\n  bucket 47: 50%\n  bucket 45: 40%\n  bucket 48: 30%\n  bucket 46: 60%\n  bucket 47: 60%\n  bucket 48: 40%\n  bucket 46: 70%\n  bucket 45: 50%\n  bucket 47: 70%\n  bucket 48: 50%\n  bucket 46: 80%\n  bucket 47: 80%\n  bucket 45: 60%\n  bucket 48: 60%\n  bucket 46: 90%\n  bucket 47: 90%\n  bucket 45: 70%\n  bucket 48: 70%\n  bucket 46: 100%\n  bucket 47: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 80%\n  bucket 45: 80%\n  bucket 48: 90%\n  bucket 45: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\n  bucket 49: 20%\n  bucket 49: 30%\n  bucket 49: 40%\n  bucket 49: 50%\n  bucket 49: 60%\n  bucket 49: 70%\n  bucket 49: 80%\n  bucket 49: 90%\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 50:\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 50: 10%\n  bucket 51: 10%\n  bucket 51: 20%\n  bucket 51: 30%\n  bucket 51: 40%\n  bucket 50: 20%\n  bucket 51: 50%\n  bucket 51: 60%\n  bucket 51: 70%\n  bucket 50: 30%\n  bucket 51: 80%\n  bucket 51: 90%\n  bucket 50: 40%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  bucket 50: 50%\n  bucket 50: 60%\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  bucket 50: 70%\n  bucket 50: 80%\n  bucket 50: 90%\nGetting block 52 of 57\n  bucket 50: 100%\n  Reserving size (388) for bucket 52\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Calculating Z arrays for bucket 52\n  Entering block accumulator loop for bucket 52:\n  bucket 52: 10%\n  bucket 52: 20%\n  bucket 52: 30%\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\n  bucket 52: 40%\n  bucket 52: 50%\n  bucket 52: 60%\n  bucket 52: 70%\n  bucket 52: 80%\n  bucket 52: 90%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 53:\nGetting block 54 of 57\n  bucket 53: 10%\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 20%\n  bucket 53: 30%\n  bucket 54: 10%\n  bucket 53: 40%\n  bucket 54: 20%\n  bucket 53: 50%\n  bucket 54: 30%\n  bucket 53: 60%\n  bucket 54: 40%\n  bucket 53: 70%\n  bucket 54: 50%\n  bucket 53: 80%\n  bucket 54: 60%\n  bucket 53: 90%\n  bucket 54: 70%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  bucket 54: 80%\n  bucket 54: 90%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\nGetting block 56 of 57\n  Calculating Z arrays for bucket 55\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 55:\n  Entering block accumulator loop for bucket 56:\n  bucket 55: 10%\n  bucket 56: 10%\n  bucket 55: 20%\n  bucket 56: 20%\n  bucket 55: 30%\n  bucket 56: 30%\n  bucket 55: 40%\n  bucket 56: 40%\n  bucket 55: 50%\n  bucket 56: 50%\n  bucket 55: 60%\n  bucket 56: 60%\n  bucket 55: 70%\n  bucket 56: 70%\n  bucket 55: 80%\n  bucket 56: 80%\n  bucket 55: 90%\n  bucket 56: 90%\n  bucket 55: 100%\n  bucket 56: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "traceback": null,  "update_time": "2023-02-07T23:16:46.638793",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_f7zqrf_d.sam v. /tmp/history_bam_converted_to_sam_wy8m7rr2.sam )\n--- local_file\n+++ history_data\n@@ -1,77 +1,78 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 8 -x genome -1 input_f.fastq.gz -2 input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@8 -T /galaxy/server/database/jobs_directory/000/542/tmp -O bam -o /galaxy/server/database/objects/3/d/4/dataset_3d4a7029-721a-456e-9f49-3884e6b542f0.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3\u003eAAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC\u003e;\u003e=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2\u003eAFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@\u003eBD/9BFBBBBFDFFFF99D=?\u003eDDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n********\n*SNIP *\n********\n-M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D\u003eCFDDFFFB?AF?B;-@\u003e.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000\u003c00\u003cBFBB0\u003c00000\u003c99.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A\u003cGFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.\u003cADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/\u003e99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG\u003e0\u003c0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t141\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGACAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTA\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHCHHGDGGGGHGGHHHHHHHHGHGHHHGGGGGHFHHHHFHHHFFHHHHHFGCGGEHFHHFGGHFHGGGGGGHHFEEEAFEFFDFHGHHHHGGGGGGGHH0DGGGGCGHCC-\u003cCCBGHHHGEFFFFHH.C/\u003cAEGHHEG.EEA0GE0:FB0CFGF:A?FFBF??FG0B;FGGGGFGE?BBF;BFBFFFF/F/B?DDF.;.;:ADD.BA/BBFFB:BFE/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t77\t*\t0\t0\t*\t*\t0\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGCGGTGTCCACGCAATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\t1\u003e\u003e1AAFFFFFBGGFE1EEEEGGHGHHH2FGHHHFGFGHGCFGGGEFHGGEGGHHHHGHEFBFEGHHHGHHBEHHHHGHGFHHHGGGGHHEGGGGHHHGFHGHHHH1FHHG?G/AGF1GBFGEFFHF2FDD0FG\u003cGDHBFDGFFCGH//B//?0GFFGFGGHHHFHFB.=1FDFB?FGH.C/.-:::CH0;CAB@-.;0CGFFFGG--9.A@GB\u003e--99@=---AAABA-BF/B?A@F-9BBFF//BB/9/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t141\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATTGCGTGGACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tABBB\u003eFFFFFFFGGGGGGGGGGHHHHHGHHHHGHHGGHHGGHGGHHHGHHHHFHHGHHAFGGGHHHHHGHHHHFHFHHHHHECGGGHGHHHEFHFHGGGGGGGGFGFFGFFEFGEGHHHGHHGGDGGGHGFGGGGGGGGE@GCGGHHHGHHHHHGHHHHFHHGEGFFEGCE.ECCECEHCGGFFE/AABFFG0CFE0BFFF9CFGG.F/BBBFFGFGGGFFFFFFBFEDAEFFFFFBFFFFFFF0;FEBF:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTT\tAAABABBBBBBFGGGGGGGGGGHGHHGHGHHHHHHHHHGHHHGGHDGHHHGGGGHHHHHHHHHHHHHHHFHGHHHHGGHGGHHHFHHHHHCGHFFHHHHHHHHHHHHHGHGEFGAEEEEHHGHHGHGHHHHHHHGHHHHHHGHGHFFBC/BA?BGGGFFFFFFFFFFFFFFFC-@DDFFFFFFFEFAFFFFFFBFBFFFFFFFFFFFFFFFFBFF-\u003e@FFFFFFFFFFBFBFAD--.99;A?////:.9A.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t141\t*\t0\t0\t*\t*\t0\t0\tGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCAAGTGTAGTGCTCGGGGGGG\tBBCCBFFCCCCCGGGGGGGGGGGGGGHHHHHHGGGGGGHHFHGGGGGFGHGGGGGGHHHHHHHHHHFHHHHFHGFFHHGF?ECEFFFFFFHHHHHH?FHHHHHHHHHGFHHHHHHGGGFGHHHHFHHHHHHHHHHGGGFGFGCGGGGHHHHHHHHHHHGGFFHGHHHHHFFHFCGFHCCGHGHCGGHG?DGGGGGFBBFGFBFBBBGGGB0000;CD?DFFAFF9=--;...://;////////.------\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t77\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGGGCTGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCTTGAAGTAGGAACC\tAABABFFFFFFFF4GGGGEBGEFGHGGHGHGHHHGGHFBGFGGGGGHHEFHGEHFHFHEHHHHHGCGGGHFHHCFGHE@1EEEFFGB?EEEEHBGGGCHHGHHBEE@\u003eEAHHFAEBDGGGCEFF?CEGFFHHHHHFHHHFHGHCGCAHHF\u003c..C.D=0CD.GFHHHG.CAGHC:CHB0GGGFFB0:CFA.A-;9.;000CBBFFBFGA.9AA;A;EDDE.ABBFFFF9;BEFFF/BF//9/B//9:B//..\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBBFBBBBBFGGGGGGGGGGHFHHHHHHHHHHHHHHGHHHHGHFHHHGEEGGHHHGHHHHHHHHHHHHEHGHHGGGHGGHGHHHHHGHHHHGHHHHHHHHHHHHHHGHHHHHGEGCGHHHHHGHHHHHHHHHHHHHHGHFFGHGHHGGGDACDFFFFABFFFFFFFFFFD-BC?DA9.DFFBEA==B=?F.;ABBFBFEF-DAF/BFF9/FFFBB/9BFFFFFFF/BFBBFFFFFFF/9FEA?--B/;.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t77\t*\t0\t0\t*\t*\t0\t0\tCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGA\tAABBBBFFFFFFGGGFGGGGGGHHHGGHGGHHHHHHHHHHHGHHGGGGGHHHHHHHHHHHHHHHHHHGGCGDHHHHFGGHHHGGGGGFGGHGGGGHHGGGGHHHHHHGGGGGGHHGGGGDGGFGHGGFCDCHHHHGHHHHGHHFAGFGGEHFGEG.C\u003cEGCECEFCFFHBGHE:GHHGFF0FFFB0CFGGGGAGFFF0;;FFGGGFFGFFCDD.DEFBEDD?9FFFFFFFFFFFFFFF/B./FB///;BF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t141\t*\t0\t0\t*\t*\t0\t0\tGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATT\tBBBBAFFFFFFFGGGGGGGGGGFGHHHHHGHHHHHHHHHHHHCGHHHHHHHGHHHHHHDGHHGGAECHHGHHHHHHHGHHHGHGFHHHHGGHGGHHFHHHHHHFHHHHHHHHH2GHHHHGHGHHFHHGGFGGGHHGHHHHHFHHHHEFHHHHEFGFFHGEHCFGDFDFFFFFCFFFFFFFFFFFFFAFBFFDFFFFFFFFADCF?9?EFBFB9EF-A.;BFFFFFFFBFFFFFFFFFFFFBFFFFFFFFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t77\t*\t0\t0\t*\t*\t0\t0\tGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGCTACAGTTCACTTTAGCTACCTCCAAGTGTTATG\tAA?AAFFFFFFFGGGGGFBFGGGGGGH5GHFEDHHGGGGCGFBGH?AEEHFFEEGHGHHHHGGG?0EHGHHGGGGGC?GEE/EE?GHHHGBHFHHHHHHGHHGHHHGGGCG/A@\u003cFGGHHHHHHHFF/GFDGHHHHHHGFFFGHGGHABGHFHHHHHFHEGDGHGDDEEHHBEDDEGFGHGBFFBFFEGGGEFGFGFB000;F0F;FGGEGGEFFF;-.9//B///B9FFFFF/BFFB/:.BB//;FBFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t141\t*\t0\t0\t*\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTGGAT\tCDDDBFFFFFFFGGGGGGGGGGHHHHHGGHHHGHHHGHHGGGGEHHGGHHHHHHHHHHHHHHGHHGHHHHHGGHHHHHFHHHHGCDCGHHHHHHHHEHHHGHGHHHGFHGGHGGHHHHHHHHFHHHFHHHGHHHHHHHHHFGGHHHHGGGEGAFHHGHHGGHHHHGHFBGFHGHGHGHGGHGGF@DAFEFBECAB=A.0BFFFEDF=A9.@D.-AAFFFA-:-..:.9/0:;0..-..0000::BFB09::\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t77\t*\t0\t0\t*\t*\t0\t0\tTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGA\tABBBBFFFFFFFGGGFGGGGGGHHHGHHGGHBGHGAGFFCAFGHGFFGHHGFHHHHHGGGGGHGHHHHHHHHE3BFFHHHGG0EDF@GHFFGGGHGGGGGGGGGGGGGHHGGEEFHGFHHDDG@DGGGHHGDGGGGGHGG?CF?HHGHHHGHGHHHFFHGGGHHHHGGCD.;0\u003cC;CGGGGEFF/.;0;FFFBF/0;0CFGFFB..9B/;0CBFFBBFFFFBAC?DED9;B9AD;.FFFB/B/;FBA/B//\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBCFCCCCCFGGGGGGGGGGHHHHHHHGHHHHHHHHGHHHHGHDGHHHGGGGHHHHHHHHHHHHHHHGHHHHHGGGEGGHHHHFHHHHHHHHHHHHHHHHHHHHHHGHHGHHGGGGGHHHHHHHHHHHGHHHFHHHHHHGHGHGHGGGGCGGFGGFFFFFFFFFFFFFBFFFFFFFFFFFFFFAFFFFEAEFFFFFFFFFFF9BFFBFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFADAB-/BF.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t77\t*\t0\t0\t*\t*\t0\t0\tCGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTCTGATCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAACAAACACACATCCAGA\t\u003eA33\u003eFFFFFF@FFFGGGGFGGD4EGGGGGHHGFFGHFGGHHHFEFHECFHHHEHGAGBCCGCCEGGHGHEGFBFHFHHHHGGGHFHGHEGGGFEGEGG??@DBGHGGC-@FFGHFHFHB-??DA-DD@9:BEBG@B?E?A.ABBFBFA??F.FF/BFFB/B9B/9;BF9FF9FFFFFFFFFFFFFF?BB?;9EE;-;DDB9//;B-B@;ABFFEFFFF/-.9A.;//9/BF./B/..9.9:...//////\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH\u003c1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n" ], "status": "failure", "test_index": 5, "time_seconds": 37.90370583534241, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/6/5/5/dataset_655b5975-e35f-45d3-9c46-21fb1108650c.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58Getting block 6 of 58Getting block 7 of 58Getting block 8 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6  Reserving size (388) for bucket 7  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Calculating Z arrays for bucket 7  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 2:  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 1: 10%  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 2: 10%  bucket 3: 10%  bucket 1: 20%  bucket 4: 10%  bucket 5: 10%  bucket 6: 10%  bucket 2: 20%  bucket 7: 10%  bucket 3: 20%  bucket 1: 30%  bucket 8: 10%  bucket 2: 30%  bucket 5: 20%  bucket 6: 20%  bucket 4: 20%  bucket 3: 30%  bucket 7: 20%  bucket 1: 40%  bucket 2: 40%  bucket 8: 20%  bucket 5: 30%  bucket 6: 30%  bucket 4: 30%  bucket 3: 40%  bucket 1: 50%  bucket 7: 30%  bucket 2: 50%  bucket 4: 40%  bucket 3: 50%  bucket 8: 30%  bucket 5: 40%  bucket 1: 60%  bucket 6: 40%  bucket 7: 40%  bucket 2: 60%  bucket 4: 50%  bucket 3: 60%  bucket 1: 70%  bucket 8: 40%  bucket 7: 50%  bucket 2: 70%  bucket 5: 50%  bucket 6: 50%  bucket 4: 60%  bucket 3: 70%  bucket 1: 80%  bucket 8: 50%  bucket 2: 80%  bucket 7: 60%  bucket 5: 60%  bucket 4: 70%  bucket 3: 80%  bucket 6: 60%  bucket 1: 90%  bucket 2: 90%  bucket 7: 70%  bucket 8: 60%  bucket 5: 70%  bucket 4: 80%  bucket 3: 90%  bucket 1: 100%  bucket 2: 100%  bucket 6: 70%  bucket 7: 80%  Sorting block of length 355 for bucket 1  (Using difference cover)  Sorting block of length 165 for bucket 2  (Using difference cover)  bucket 8: 70%  bucket 5: 80%  bucket 4: 90%  bucket 3: 100%  bucket 7: 90%  bucket 6: 80%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 8: 80%  bucket 4: 100%  bucket 5: 90%  bucket 7: 100%  Sorting block of length 328 for bucket 4  (Using difference cover)  Sorting block of length 368 for bucket 7  (Using difference cover)  bucket 6: 90%  bucket 8: 90%  bucket 5: 100%  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 6: 100%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 8: 100%  Sorting block of length 171 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 340 for bucket 6  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 172 for bucket 8Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 369 for bucket 7Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9Getting block 10 of 58  Entering block accumulator loop for bucket 9:  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  bucket 9: 10%  Entering block accumulator loop for bucket 10:  bucket 9: 20%  bucket 10: 10%  bucket 9: 30%  bucket 10: 20%  bucket 9: 40%  bucket 10: 30%  bucket 9: 50%  bucket 10: 40%  bucket 9: 60%  bucket 10: 50%  bucket 9: 70%  bucket 10: 60%  bucket 9: 80%  bucket 10: 70%  bucket 9: 90%  bucket 10: 80%  bucket 10: 90%  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 9  Sorting block time: 00:00:00Returning block of 358 for bucket 10Getting block 11 of 58  Reserving size (388) for bucket 11Getting block 12 of 58  Calculating Z arrays for bucket 11  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 11:  Entering block accumulator loop for bucket 12:  bucket 12: 10%  bucket 11: 10%  bucket 12: 20%  bucket 11: 20%  bucket 12: 30%  bucket 11: 30%  bucket 12: 40%  bucket 12: 50%  bucket 11: 40%  bucket 12: 60%  bucket 11: 50%  bucket 12: 70%  bucket 11: 60%  bucket 12: 80%  bucket 11: 70%  bucket 12: 90%  bucket 11: 80%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 11: 90%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 186 for bucket 12  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 13 of 58  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 13: 20%  bucket 13: 30%  bucket 13: 40%  bucket 13: 50%  bucket 13: 60%  bucket 13: 70%Getting block 14 of 58  bucket 13: 80%  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 13: 90%  bucket 14: 10%  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  bucket 14: 20%  bucket 14: 30%  bucket 14: 40%  Sorting block time: 00:00:00Returning block of 283 for bucket 13  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 15 of 58  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Getting block 16 of 58Returning block of 242 for bucket 15  Reserving size (388) for bucket 16  Calculating Z arrays for bucket 16  Entering block accumulator loop for bucket 16:  bucket 16: 10%  bucket 16: 20%  bucket 16: 30%  bucket 16: 40%  bucket 16: 50%  bucket 16: 60%  bucket 16: 70%  bucket 16: 80%  bucket 16: 90%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 16Getting block 17 of 58  Reserving size (388) for bucket 17  Calculating Z arrays for bucket 17Getting block 18 of 58  Reserving size (388) for bucket 18  Entering block accumulator loop for bucket 17:  Calculating Z arrays for bucket 18  Entering block accumulator loop for bucket 18:  bucket 17: 10%  bucket 17: 20%  bucket 18: 10%  bucket 17: 30%  bucket 18: 20%  bucket 17: 40%  bucket 18: 30%  bucket 17: 50%  bucket 18: 40%  bucket 17: 60%  bucket 18: 50%  bucket 17: 70%  bucket 17: 80%  bucket 18: 60%  bucket 17: 90%  bucket 18: 70%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  bucket 18: 80%  bucket 18: 90%  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17  Sorting block time: 00:00:00Returning block of 379 for bucket 18Getting block 19 of 58  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19Getting block 20 of 58  Reserving size (388) for bucket 20  Entering block accumulator loop for bucket 19:  Calculating Z arrays for bucket 20  Entering block accumulator loop for bucket 20:  bucket 19: 10%  bucket 20: 10%  bucket 19: 20%  bucket 20: 20%  bucket 19: 30%  bucket 20: 30%  bucket 19: 40%  bucket 20: 40%  bucket 19: 50%  bucket 20: 50%  bucket 19: 60%  bucket 20: 60%  bucket 19: 70%  bucket 20: 70%  bucket 20: 80%  bucket 19: 80%  bucket 20: 90%  bucket 19: 90%  bucket 20: 100%  bucket 19: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  Sorting block of length 334 for bucket 19  (Using difference cover)  Sorting block time: 00:00:00Returning block of 314 for bucket 20  Sorting block time: 00:00:00Returning block of 335 for bucket 19Getting block 21 of 58  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 21:  bucket 21: 10%  bucket 21: 20%  bucket 21: 30%Getting block 22 of 58  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  bucket 21: 40%  Entering block accumulator loop for bucket 22:  bucket 21: 50%  bucket 22: 10%  bucket 21: 60%  bucket 22: 20%  bucket 21: 70%  bucket 22: 30%  bucket 21: 80%  bucket 21: 90%  bucket 22: 40%  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  bucket 22: 50%  bucket 22: 60%  bucket 22: 70%  bucket 22: 80%  bucket 22: 90%  Sorting block time: 00:00:00Returning block of 211 for bucket 21  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 23 of 58  Reserving size (388) for bucket 23Getting block 24 of 58  Calculating Z arrays for bucket 23  Reserving size (388) for bucket 24  Entering block accumulator loop for bucket 23:  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 23: 10%  bucket 24: 10%  bucket 23: 20%  bucket 24: 20%  bucket 23: 30%  bucket 24: 30%  bucket 23: 40%  bucket 24: 40%  bucket 23: 50%  bucket 24: 50%  bucket 23: 60%  bucket 24: 60%  bucket 23: 70%  bucket 24: 70%  bucket 23: 80%  bucket 24: 80%  bucket 23: 90%  bucket 24: 90%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25Getting block 26 of 58  Entering block accumulator loop for bucket 25:  Reserving size (388) for bucket 26Getting block 27 of 58  Calculating Z arrays for bucket 26  bucket 25: 10%  Reserving size (388) for bucket 27  Entering block accumulator loop for bucket 26:  bucket 25: 20%  Calculating Z arrays for bucket 27  bucket 25: 30%  Entering block accumulator loop for bucket 27:  bucket 26: 10%  bucket 25: 40%  bucket 26: 20%  bucket 25: 50%  bucket 27: 10%  bucket 26: 30%  bucket 25: 60%  bucket 27: 20%  bucket 26: 40%  bucket 25: 70%  bucket 27: 30%  bucket 26: 50%  bucket 25: 80%  bucket 26: 60%  bucket 27: 40%  bucket 25: 90%  bucket 26: 70%  bucket 27: 50%  bucket 25: 100%  bucket 26: 80%  bucket 27: 60%  Sorting block of length 105 for bucket 25  (Using difference cover)  bucket 26: 90%  Sorting block time: 00:00:00  bucket 27: 70%  bucket 26: 100%Returning block of 106 for bucket 25  bucket 27: 80%  Sorting block of length 354 for bucket 26  (Using difference cover)Getting block 28 of 58Getting block 29 of 58  bucket 27: 90%Getting block 30 of 58  Reserving size (388) for bucket 28  Sorting block time: 00:00:00  Reserving size (388) for bucket 29  bucket 27: 100%  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 28Returning block of 355 for bucket 26  Calculating Z arrays for bucket 29  Sorting block of length 334 for bucket 27  (Using difference cover)  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 28:  Entering block accumulator loop for bucket 29:  Entering block accumulator loop for bucket 30:  bucket 28: 10%  bucket 29: 10%  Sorting block time: 00:00:00Returning block of 335 for bucket 27  bucket 28: 20%  bucket 30: 10%  bucket 29: 20%  bucket 30: 20%  bucket 28: 30%  bucket 29: 30%  bucket 30: 30%  bucket 30: 40%  bucket 29: 40%  bucket 28: 40%Getting block 31 of 58  bucket 30: 50%  Reserving size (388) for bucket 31  bucket 29: 50%  Calculating Z arrays for bucket 31  bucket 28: 50%  Entering block accumulator loop for bucket 31:  bucket 30: 60%  bucket 29: 60%  bucket 28: 60%  bucket 30: 70%  bucket 29: 70%  bucket 31: 10%  bucket 30: 80%  bucket 29: 80%  bucket 28: 70%  bucket 31: 20%  bucket 30: 90%  bucket 29: 90%  bucket 31: 30%  bucket 28: 80%  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  bucket 31: 40%  bucket 28: 90%  bucket 31: 50%  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  bucket 31: 60%  bucket 31: 70%  bucket 31: 80%  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 346 for bucket 30Returning block of 290 for bucket 29  bucket 31: 90%  Sorting block time: 00:00:00Returning block of 254 for bucket 28  bucket 31: 100%  Sorting block of length 377 for bucket 31  (Using difference cover)  Sorting block time: 00:00:00Returning block of 378 for bucket 31Getting block 32 of 58  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block.. bucket 24  Entering block accumulator loop for bucket 24:  bucket 24: 10%  Sorting block time: 00:00:00Getting block 25 of 57Returning block of 350 for bucket 23  Sorting block time: 00:00:00  Reserving size (388) for bucket 25Returning block of 372 for bucket 22  Calculating Z arrays for bucket 25  bucket 24: 20%  Entering block accumulator loop for bucket 25:  bucket 24: 30%  bucket 25: 10%  bucket 24: 40%  bucket 25: 20%  bucket 24: 50%  bucket 24: 60%  bucket 25: 30%  bucket 24: 70%  bucket 25: 40%  bucket 24: 80%  bucket 24: 90%  bucket 25: 50%  bucket 24: 100%  bucket 25: 60%  Sorting block of length 245 for bucket 24  (Using difference cover)  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  Sorting block time: 00:00:00Returning block of 246 for bucket 24  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25Getting block 26 of 57  Reserving size (388) for bucket 26Getting block 27 of 57  Calculating Z arrays for bucket 26  Reserving size (388) for bucket 27  Entering block accumulator loop for bucket 26:  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:  bucket 26: 10%  bucket 27: 10%  bucket 26: 20%  bucket 27: 20%  bucket 26: 30%  bucket 26: 40%  bucket 26: 50%  bucket 26: 60%  bucket 26: 70%  bucket 26: 80%  bucket 26: 90%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  bucket 27: 30%  bucket 27: 40%  bucket 27: 50%  bucket 27: 60%  bucket 27: 70%  bucket 27: 80%  bucket 27: 90%  Sorting block time: 00:00:00Returning block of 385 for bucket 26  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 360 for bucket 27Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 28:  Entering block accumulator loop for bucket 29:  bucket 28: 10%  bucket 28: 20%  bucket 28: 30%  bucket 28: 40%  bucket 28: 50%  bucket 29: 10%  bucket 28: 60%  bucket 28: 70%  bucket 28: 80%  bucket 29: 20%  bucket 28: 90%  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  bucket 29: 30%  bucket 29: 40%  Sorting block time: 00:00:00Returning block of 388 for bucket 28  bucket 29: 50%  bucket 29: 60%  bucket 29: 70%  bucket 29: 80%  bucket 29: 90%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29Getting block 30 of 57  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 30: 20%Getting block 31 of 57  bucket 30: 30%  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 31:  bucket 30: 40%  bucket 30: 50%  bucket 31: 10%  bucket 30: 60%  bucket 31: 20%  bucket 30: 70%  bucket 31: 30%  bucket 30: 80%  bucket 31: 40%  bucket 30: 90%  bucket 31: 50%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  bucket 31: 60%  bucket 31: 70%  bucket 31: 80%  bucket 31: 90%  bucket 31: 100%  Sorting block of length 310 for bucket 31  Sorting block time: 00:00:00  (Using difference cover)Returning block of 258 for bucket 30  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 32 of 57  Reserving size (388) for bucket 32Getting block 33 of 57  Calculating Z arrays for bucket 32  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 32:  Entering block accumulator loop for bucket 33:  bucket 32: 10%  bucket 33: 10%  bucket 32: 20%  bucket 33: 20%  bucket 32: 30%  bucket 33: 30%  bucket 33: 40%  bucket 33: 50%  bucket 32: 40%  bucket 33: 60%  bucket 32: 50%  bucket 33: 70%  bucket 32: 60%  bucket 33: 80%  bucket 32: 70%  bucket 32: 80%  bucket 33: 90%  bucket 32: 90%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 220 for bucket 32Returning block of 388 for bucket 33Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 34:  Entering block accumulator loop for bucket 35:Getting block 36 of 57  bucket 34: 10%  Reserving size (388) for bucket 36  bucket 35: 10%  Calculating Z arrays for bucket 36  bucket 34: 20%  Entering block accumulator loop for bucket 36:  bucket 35: 20%  bucket 34: 30%  bucket 36: 10%  bucket 35: 30%  bucket 34: 40%  bucket 36: 20%  bucket 35: 40%  bucket 34: 50%  bucket 36: 30%  bucket 35: 50%  bucket 34: 60%  bucket 36: 40%  bucket 35: 60%  bucket 34: 70%  bucket 36: 50%  bucket 35: 70%  bucket 34: 80%  bucket 36: 60%  bucket 35: 80%  bucket 36: 70%  bucket 34: 90%  bucket 35: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  bucket 36: 80%  (Using difference cover)  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  bucket 36: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 35  Sorting block time: 00:00:00Returning block of 151 for bucket 36  Sorting block time: 00:00:00Returning block of 276 for bucket 34Getting block 37 of 57  Reserving size (388) for bucket 37Getting block 38 of 57  Calculating Z arrays for bucket 37  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:  Entering block accumulator loop for bucket 37:  bucket 38: 10%  bucket 37: 10%  bucket 38: 20%  bucket 37: 20%  bucket 38: 30%  bucket 38: 40%  bucket 37: 30%  bucket 38: 50%  bucket 38: 60%  bucket 37: 40%  bucket 38: 70%  bucket 37: 50%  bucket 38: 80%  bucket 38: 90%  bucket 37: 60%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 37: 70%  bucket 37: 80%  Sorting block time: 00:00:00Returning block of 338 for bucket 38  bucket 37: 90%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)Getting block 39 of 57  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  Sorting block time: 00:00:00Getting block 40 of 57Returning block of 268 for bucket 37  Entering block accumulator loop for bucket 39:  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40Getting block 41 of 57  Entering block accumulator loop for bucket 40:  bucket 39: 10%  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41  bucket 39: 20%  bucket 40: 10%  Entering block accumulator loop for bucket 41:  bucket 39: 30%  bucket 40: 20%  bucket 39: 40%  bucket 41: 10%  bucket 40: 30%  bucket 41: 20%  bucket 39: 50%  bucket 40: 40%  bucket 41: 30%  bucket 40: 50%  bucket 39: 60%  bucket 41: 40%  bucket 40: 60%  bucket 41: 50%  bucket 39: 70%  bucket 40: 70%  bucket 41: 60%  bucket 40: 80%  bucket 41: 70%  bucket 39: 80%  bucket 40: 90%  bucket 41: 80%  bucket 40: 100%  bucket 41: 90%  Sorting block of length 379 for bucket 40  (Using difference cover)  bucket 39: 90%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 40  Sorting block time: 00:00:00Returning block of 331 for bucket 41  Sorting block time: 00:00:00Returning block of 388 for bucket 39Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 42:  Entering block accumulator loop for bucket 43:  bucket 42: 10%  bucket 43: 10%  bucket 42: 20%  bucket 43: 20%  bucket 42: 30%  bucket 43: 30%  bucket 42: 40%  bucket 43: 40%  bucket 42: 50%  bucket 43: 50%  bucket 42: 60%  bucket 43: 60%  bucket 42: 70%  bucket 43: 70%  bucket 42: 80%  bucket 43: 80%  bucket 42: 90%  bucket 43: 90%  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42  Sorting block time: 00:00:00Returning block of 322 for bucket 43Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:  bucket 44: 10%  bucket 44: 20%  bucket 44: 30%  bucket 44: 40%  bucket 44: 50%  bucket 44: 60%  bucket 44: 70%  bucket 44: 80%  bucket 44: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45Getting block 46 of 57  Calculating Z arrays for bucket 45  Reserving size (388) for bucket 46Getting block 47 of 57  Calculating Z arrays for bucket 46  Reserving size (388) for bucket 47  Entering block accumulator loop for bucket 45:  Calculating Z arrays for bucket 47  Entering block accumulator loop for bucket 46:  Entering block accumulator loop for bucket 47:  bucket 46: 10%  bucket 45: 10%  bucket 47: 10%Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  bucket 46: 20%  bucket 47: 20%  bucket 45: 20%  Entering block accumulator loop for bucket 48:  bucket 46: 30%  bucket 47: 30%  bucket 48: 10%  bucket 46: 40%  bucket 45: 30%  bucket 47: 40%  bucket 48: 20%  bucket 46: 50%  bucket 47: 50%  bucket 45: 40%  bucket 48: 30%  bucket 46: 60%  bucket 47: 60%  bucket 48: 40%  bucket 46: 70%  bucket 45: 50%  bucket 47: 70%  bucket 48: 50%  bucket 46: 80%  bucket 47: 80%  bucket 45: 60%  bucket 48: 60%  bucket 46: 90%  bucket 47: 90%  bucket 45: 70%  bucket 48: 70%  bucket 46: 100%  bucket 47: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block of length 217 for bucket 47  (Using difference cover)  bucket 48: 80%  bucket 45: 80%  bucket 48: 90%  bucket 45: 90%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  Sorting block time: 00:00:00Returning block of 218 for bucket 47  Sorting block time: 00:00:00Returning block of 254 for bucket 46  Sorting block time: 00:00:00Returning block of 385 for bucket 48  Sorting block time: 00:00:00Returning block of 366 for bucket 45Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  Entering block accumulator loop for bucket 49:  bucket 49: 10%  bucket 49: 20%  bucket 49: 30%  bucket 49: 40%  bucket 49: 50%  bucket 49: 60%  bucket 49: 70%  bucket 49: 80%  bucket 49: 90%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  Sorting block time: 00:00:00Returning block of 113 for bucket 49Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 50:Getting block 51 of 57  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 51:  bucket 50: 10%  bucket 51: 10%  bucket 51: 20%  bucket 51: 30%  bucket 51: 40%  bucket 50: 20%  bucket 51: 50%  bucket 51: 60%  bucket 51: 70%  bucket 50: 30%  bucket 51: 80%  bucket 51: 90%  bucket 50: 40%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  bucket 50: 50%  bucket 50: 60%  Sorting block time: 00:00:00Returning block of 351 for bucket 51  bucket 50: 70%  bucket 50: 80%  bucket 50: 90%Getting block 52 of 57  bucket 50: 100%  Reserving size (388) for bucket 52  Sorting block of length 275 for bucket 50  (Using difference cover)  Calculating Z arrays for bucket 52  Entering block accumulator loop for bucket 52:  bucket 52: 10%  bucket 52: 20%  bucket 52: 30%  Sorting block time: 00:00:00Returning block of 276 for bucket 50  bucket 52: 40%  bucket 52: 50%  bucket 52: 60%  bucket 52: 70%  bucket 52: 80%  bucket 52: 90%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 52Getting block 53 of 57  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  Entering block accumulator loop for bucket 53:Getting block 54 of 57  bucket 53: 10%  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 54:  bucket 53: 20%  bucket 53: 30%  bucket 54: 10%  bucket 53: 40%  bucket 54: 20%  bucket 53: 50%  bucket 54: 30%  bucket 53: 60%  bucket 54: 40%  bucket 53: 70%  bucket 54: 50%  bucket 53: 80%  bucket 54: 60%  bucket 53: 90%  bucket 54: 70%  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  bucket 54: 80%  bucket 54: 90%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  Sorting block time: 00:00:00Returning block of 371 for bucket 53  Sorting block time: 00:00:00Returning block of 238 for bucket 54Getting block 55 of 57  Reserving size (388) for bucket 55Getting block 56 of 57  Calculating Z arrays for bucket 55  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 55:  Entering block accumulator loop for bucket 56:  bucket 55: 10%  bucket 56: 10%  bucket 55: 20%  bucket 56: 20%  bucket 55: 30%  bucket 56: 30%  bucket 55: 40%  bucket 56: 40%  bucket 55: 50%  bucket 56: 50%  bucket 55: 60%  bucket 56: 60%  bucket 55: 70%  bucket 56: 70%  bucket 55: 80%  bucket 56: 80%  bucket 55: 90%  bucket 56: 90%  bucket 55: 100%  bucket 56: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56  Sorting block time: 00:00:00Returning block of 345 for bucket 55Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #7)" name="6" time="36.57587552070618">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "d2043428d2882474",   "src": "hda"  },  "library|input_2": {   "id": "08bd08a0b73b3c84",   "src": "hda"  },  "library|paired_options|paired_options_selector": "no",  "library|type": "paired",  "library|unaligned_file": false,  "reference_genome|own_file": {   "id": "58b9ab131068faca",   "src": "hda"  },  "reference_genome|source": "history" }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/a/6/b/dataset_a6b9c267-dc51-40cd-ada0-cbc1f57b597c.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/a/6/b/dataset_a6b9c267-dc51-40cd-ada0-cbc1f57b597c.dat\u0027 genome.fa \u0026\u0026   ln -f -s \u0027/galaxy/server/database/objects/d/6/8/dataset_d6866409-7fb3-41d4-92c3-c73cacfde45f.dat\u0027 input_f.fastq.bz2 \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/6/9/c/dataset_69c44324-7a1c-4ee7-bb9b-84e81e4f0fb2.dat\u0027 input_r.fastq.bz2 \u0026\u0026   bowtie2  -p ${GALAXY_SLOTS:-4}  -x \u0027genome\u0027   -1 \u0027input_f.fastq.bz2\u0027 -2 \u0027input_r.fastq.bz2\u0027                 | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o \u0027/galaxy/server/database/objects/1/a/6/dataset_1a6b222d-0922-4ea7-9512-f665510065d2.dat\u0027",  "command_version": "/usr/local/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}",  "create_time": "2023-02-07T23:17:09.983340",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-mmwd8",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "84d70ae1e43e785d",  "inputs": {   "input_1": {    "id": "d2043428d2882474",    "src": "hda",    "uuid": "d6866409-7fb3-41d4-92c3-c73cacfde45f"   },   "input_2": {    "id": "08bd08a0b73b3c84",    "src": "hda",    "uuid": "69c44324-7a1c-4ee7-bb9b-84e81e4f0fb2"   },   "own_file": {    "id": "58b9ab131068faca",    "src": "hda",    "uuid": "a6b9c267-dc51-40cd-ada0-cbc1f57b597c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811833.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:17:13"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811832.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:17:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "c99f799204cff732",    "src": "hda",    "uuid": "1a6b222d-0922-4ea7-9512-f665510065d2"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 1, \"aligned_file\": \"false\", \"input_1\": {\"values\": [{\"id\": 760, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 761, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": \"false\"}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 762, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",   "sam_options": "{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}",   "save_mapping_stats": "\"false\""  },  "state": "ok",  "stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/a/6/b/dataset_a6b9c267-dc51-40cd-ada0-cbc1f57b597c.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 2\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 6\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 6:\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 7:\n  bucket 1: 10%\n  bucket 2: 10%\n  Entering block accumulator loop for bucket 8:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 2: 20%\n  bucket 6: 10%\n  bucket 5: 10%\n  bucket 1: 20%\n  bucket 2: 30%\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 2: 40%\n  bucket 6: 20%\n  bucket 1: 30%\n  bucket 5: 20%\n  bucket 2: 50%\n  bucket 7: 20%\n  bucket 3: 30%\n  bucket 8: 20%\n  bucket 4: 30%\n  bucket 6: 30%\n  bucket 1: 40%\n  bucket 2: 60%\n  bucket 5: 30%\n  bucket 7: 30%\n  bucket 3: 40%\n  bucket 2: 70%\n  bucket 8: 30%\n  bucket 4: 40%\n  bucket 1: 50%\n  bucket 6: 40%\n  bucket 5: 40%\n  bucket 2: 80%\n  bucket 3: 50%\n  bucket 7: 40%\n  bucket 1: 60%\n  bucket 8: 40%\n  bucket 4: 50%\n  bucket 2: 90%\n  bucket 6: 50%\n  bucket 5: 50%\n  bucket 3: 60%\n  bucket 7: 50%\n  bucket 1: 70%\n  bucket 2: 100%\n  bucket 8: 50%\n  bucket 4: 60%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  bucket 6: 60%\n  bucket 5: 60%\n  bucket 3: 70%\n  bucket 1: 80%\n  bucket 7: 60%\n  bucket 8: 60%\n  bucket 4: 70%\n  bucket 6: 70%\n  bucket 5: 70%\n  bucket 3: 80%\n  bucket 1: 90%\n  bucket 7: 70%\n  bucket 8: 70%\n  bucket 4: 80%\n  bucket 6: 80%\n  bucket 5: 80%\n  bucket 1: 100%\n  bucket 3: 90%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 7: 80%\n  bucket 8: 80%\n  bucket 4: 90%\n  bucket 6: 90%\n  bucket 5: 90%\n  bucket 3: 100%\n  bucket 7: 90%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 8: 90%\n  bucket 4: 100%\n  bucket 6: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  bucket 8: 100%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\nGetting block 10 of 58\n  Calculating Z arrays for bucket 9\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 10: 10%\n  bucket 9: 20%\n  bucket 10: 20%\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 9: 40%\n  bucket 10: 40%\n  bucket 9: 50%\n  bucket 10: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 10: 60%\n  bucket 9: 80%\n  bucket 10: 70%\n  bucket 9: 90%\n  bucket 10: 80%\n  bucket 9: 100%\n  bucket 10: 90%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  bucket 11: 20%\n  Calculating Z arrays for bucket 12\n  bucket 11: 30%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 40%\n  bucket 12: 10%\n  bucket 11: 50%\n  bucket 12: 20%\n  bucket 11: 60%\n  bucket 12: 30%\n  bucket 11: 70%\n  bucket 12: 40%\n  bucket 11: 80%\n  bucket 12: 50%\n  bucket 11: 90%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\nGetting block 14 of 58\n  Calculating Z arrays for bucket 13\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 13: 20%\n  bucket 14: 30%\n  bucket 13: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 13: 70%\n  bucket 14: 80%\n  bucket 13: 80%\n  bucket 14: 90%\n  bucket 13: 90%\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 15 of 58\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\nGetting block 16 of 58\n  bucket 15: 20%\n  Reserving size (388) for bucket 16\n  Calculating Z arrays for bucket 16\n  bucket 15: 30%\n  Entering block accumulator loop for bucket 16:\nGetting block 17 of 58\n  bucket 15: 40%\n  bucket 16: 10%\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  bucket 15: 50%\n  bucket 16: 20%\n  Entering block accumulator loop for bucket 17:\n  bucket 15: 60%\n  bucket 16: 30%\n  bucket 17: 10%\n  bucket 15: 70%\n  bucket 16: 40%\n  bucket 17: 20%\n  bucket 15: 80%\n  bucket 16: 50%\n  bucket 17: 30%\n  bucket 15: 90%\n  bucket 16: 60%\n  bucket 15: 100%\n  bucket 16: 70%\n  bucket 17: 40%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  bucket 16: 80%\n  bucket 17: 50%\n  bucket 16: 90%\n  bucket 17: 60%\n  bucket 17: 70%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 17: 80%\n  bucket 17: 90%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\n  Calculating Z arrays for bucket 18\n  Entering block accumulator loop for bucket 18:\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  bucket 18: 10%\n  Calculating Z arrays for bucket 19\n  Entering block accumulator loop for bucket 19:\n  bucket 18: 20%\nGetting block 20 of 58\nGetting block 21 of 58\n  Reserving size (388) for bucket 20\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 20\n  Calculating Z arrays for bucket 21\n  bucket 19: 10%\n  bucket 18: 30%\n  Entering block accumulator loop for bucket 20:\n  Entering block accumulator loop for bucket 21:\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  bucket 19: 20%\n  bucket 18: 40%\n  bucket 20: 10%\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 10%\n  bucket 19: 30%\n  bucket 20: 20%\n  bucket 22: 10%\n  bucket 18: 50%\n  bucket 20: 30%\n  bucket 21: 20%\n  bucket 22: 20%\n  bucket 19: 40%\n  bucket 18: 60%\n  bucket 20: 40%\n  bucket 22: 30%\n  bucket 21: 30%\n  bucket 19: 50%\n  bucket 22: 40%\n  bucket 20: 50%\n  bucket 18: 70%\n  bucket 21: 40%\n  bucket 19: 60%\n  bucket 22: 50%\n  bucket 20: 60%\n  bucket 21: 50%\n  bucket 18: 80%\n  bucket 20: 70%\n  bucket 22: 60%\n  bucket 19: 70%\n  bucket 21: 60%\n  bucket 20: 80%\n  bucket 22: 70%\n  bucket 18: 90%\n  bucket 19: 80%\n  bucket 20: 90%\n  bucket 21: 70%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  bucket 19: 90%\n  bucket 22: 80%\n  bucket 18: 100%\n  bucket 21: 80%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  bucket 22: 90%\n  bucket 19: 100%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 21: 90%\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 23: 30%\n  bucket 23: 40%\nGetting block 24 of 58\n  bucket 23: 50%\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 23: 60%\n  bucket 23: 70%\n  bucket 24: 10%\n  bucket 23: 80%\n  bucket 24: 20%\n  bucket 23: 90%\n  bucket 24: 30%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 24: 70%\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\nGetting block 26 of 58\n  Calculating Z arrays for bucket 25\n  Reserving size (388) for bucket 26\n  Entering block accumulator loop for bucket 25:\n  Calculating Z arrays for bucket 26\nGetting block 27 of 58\n  Entering block accumulator loop for bucket 26:\n  Reserving size (388) for bucket 27\nGetting block 28 of 58\n  Calculating Z arrays for bucket 27\nGetting block 29 of 58\n  bucket 25: 10%\n  Reserving size (388) for bucket 28\n  bucket 26: 10%\n  Reserving size (388) for bucket 29\n  Entering block accumulator loop for bucket 27:\n  Calculating Z arrays for bucket 28\n  bucket 25: 20%\n  Calculating Z arrays for bucket 29\n  bucket 26: 20%\n  Entering block accumulator loop for bucket 28:\nGetting block 30 of 58\n  Entering block accumulator loop for bucket 29:\n  bucket 25: 30%\n  bucket 26: 30%\n  Reserving size (388) for bucket 30\n  bucket 27: 10%\n  Calculating Z arrays for bucket 30\n  bucket 25: 40%\n  bucket 26: 40%\n  bucket 28: 10%\n  Entering block accumulator loop for bucket 30:\n  bucket 27: 20%\n  bucket 29: 10%\n  bucket 25: 50%\n  bucket 26: 50%\n  bucket 28: 20%\n  bucket 27: 30%\n  bucket 29: 20%\n  bucket 25: 60%\n  bucket 30: 10%\n  bucket 26: 60%\n  bucket 27: 40%\n  bucket 28: 30%\n  bucket 25: 70%\n  bucket 29: 30%\n  bucket 30: 20%\n  bucket 26: 70%\n  bucket 27: 50%\n  bucket 28: 40%\n  bucket 25: 80%\n  bucket 30: 30%\n  bucket 29: 40%\n  bucket 26: 80%\n  bucket 27: 60%\n  bucket 28: 50%\n  bucket 25: 90%\n  bucket 30: 40%\n  bucket 29: 50%\n  bucket 26: 90%\n  bucket 27: 70%\n  bucket 28: 60%\n  bucket 25: 100%\n  bucket 30: 50%\n  bucket 29: 60%\n  bucket 26: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 27: 80%\n  bucket 28: 70%\n  bucket 30: 60%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 29: 70%\n  bucket 28: 80%\n  bucket 27: 90%\n  bucket 30: 70%\n  bucket 29: 80%\n  bucket 28: 90%\n  bucket 30: 80%\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 28: 100%\n  bucket 29: 90%\n  bucket 30: 90%\nReturning block of 106 for bucket 25\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 29: 100%\n  bucket 30: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\nReturning block of 355 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\nGetting block 32 of 58\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 10%\n  bucket 32: 10%\n  bucket 32: 20%\n  bucket 31: 20%\n  bucket 32: 30%\n  bucket 31: 30%\n  bucket 32: 40%\n  bucket 31: 40%\n  bucket 32: 50%\n  bucket 31: 50%\n  bucket 32: 60%\n  bucket 31: 60%\n  bucket 32: 70%\n  bucket 31: 70%\n  bucket 32: 80%\n  bucket 31: 80%\n  buc\n..\nme: 00:00:00\nGetting block 24 of 57\nReturning block of 350 for bucket 23\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 24: 30%\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 10%\nGetting block 26 of 57\n  bucket 25: 20%\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\n  bucket 25: 30%\n  bucket 25: 40%\n  bucket 26: 10%\n  bucket 25: 50%\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  bucket 25: 60%\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 20%\n  bucket 25: 70%\n  bucket 26: 30%\n  bucket 27: 10%\n  bucket 26: 40%\n  bucket 25: 80%\n  bucket 27: 20%\n  bucket 26: 50%\n  bucket 25: 90%\n  bucket 26: 60%\n  bucket 25: 100%\n  bucket 27: 30%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 26: 70%\n  bucket 27: 40%\n  bucket 26: 80%\n  bucket 27: 50%\n  bucket 26: 90%\n  bucket 27: 60%\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  bucket 26: 100%\n  bucket 27: 70%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 27: 80%\n  bucket 27: 90%\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\nGetting block 29 of 57\n  Calculating Z arrays for bucket 28\n  Reserving size (388) for bucket 29\n  Entering block accumulator loop for bucket 28:\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 28: 20%\n  bucket 29: 20%\n  bucket 28: 30%\n  bucket 28: 40%\n  bucket 29: 30%\n  bucket 28: 50%\n  bucket 29: 40%\n  bucket 28: 60%\n  bucket 29: 50%\n  bucket 28: 70%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 28: 80%\n  bucket 29: 80%\n  bucket 28: 90%\n  bucket 29: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\nGetting block 31 of 57\n  Calculating Z arrays for bucket 30\n  Reserving size (388) for bucket 31\nGetting block 32 of 57\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Entering block accumulator loop for bucket 30:\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 32:\n  bucket 30: 10%\n  bucket 31: 10%\n  bucket 30: 20%\n  bucket 31: 20%\n  bucket 32: 10%\n  bucket 30: 30%\n  bucket 31: 30%\n  bucket 32: 20%\n  bucket 30: 40%\n  bucket 31: 40%\n  bucket 32: 30%\n  bucket 30: 50%\n  bucket 31: 50%\n  bucket 32: 40%\n  bucket 30: 60%\n  bucket 31: 60%\n  bucket 32: 50%\n  bucket 30: 70%\n  bucket 31: 70%\n  bucket 32: 60%\n  bucket 30: 80%\n  bucket 31: 80%\n  bucket 32: 70%\n  bucket 30: 90%\n  bucket 31: 90%\n  bucket 32: 80%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  bucket 32: 90%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 10%\n  Entering block accumulator loop for bucket 34:\n  bucket 34: 10%\n  bucket 33: 20%\n  bucket 34: 20%\n  bucket 33: 30%\n  bucket 34: 30%\n  bucket 33: 40%\n  bucket 34: 40%\n  bucket 34: 50%\n  bucket 33: 50%\n  bucket 34: 60%\n  bucket 33: 60%\n  bucket 34: 70%\n  bucket 34: 80%\n  bucket 33: 70%\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  bucket 33: 80%\n  (Using difference cover)\n  bucket 33: 90%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\nGetting block 36 of 57\n  bucket 35: 40%\n  Reserving size (388) for bucket 36\nGetting block 37 of 57\n  Calculating Z arrays for bucket 36\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  bucket 35: 50%\n  Entering block accumulator loop for bucket 37:\n  Entering block accumulator loop for bucket 36:\n  bucket 37: 10%\n  bucket 35: 60%\n  bucket 36: 10%\n  bucket 37: 20%\n  bucket 35: 70%\n  bucket 37: 30%\n  bucket 36: 20%\n  bucket 37: 40%\n  bucket 35: 80%\n  bucket 36: 30%\n  bucket 37: 50%\n  bucket 35: 90%\n  bucket 36: 40%\n  bucket 37: 60%\n  bucket 36: 50%\n  bucket 37: 70%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  bucket 37: 80%\n  bucket 36: 60%\n  bucket 37: 90%\n  bucket 36: 70%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  bucket 38: 10%\n  bucket 38: 20%\n  bucket 38: 30%\n  bucket 38: 40%\n  bucket 38: 50%\n  bucket 38: 60%\n  bucket 38: 70%\n  bucket 38: 80%\n  bucket 38: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\nGetting block 39 of 57\n  Reserving size (388) for bucket 39\nGetting block 40 of 57\n  Calculating Z arrays for bucket 39\n  Reserving size (388) for bucket 40\nGetting block 41 of 57\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 39:\n  Reserving size (388) for bucket 41\n  Entering block accumulator loop for bucket 40:\n  Calculating Z arrays for bucket 41\n  Entering block accumulator loop for bucket 41:\n  bucket 39: 10%\n  bucket 40: 10%\n  bucket 41: 10%\n  bucket 39: 20%\n  bucket 40: 20%\n  bucket 41: 20%\n  bucket 39: 30%\n  bucket 41: 30%\n  bucket 40: 30%\n  bucket 39: 40%\n  bucket 41: 40%\n  bucket 40: 40%\n  bucket 39: 50%\n  bucket 41: 50%\n  bucket 40: 50%\n  bucket 39: 60%\n  bucket 40: 60%\n  bucket 41: 60%\n  bucket 39: 70%\n  bucket 40: 70%\n  bucket 41: 70%\n  bucket 39: 80%\n  bucket 40: 80%\n  bucket 41: 80%\n  bucket 39: 90%\n  bucket 40: 90%\n  bucket 41: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\n  Entering block accumulator loop for bucket 42:\n  bucket 42: 10%\n  bucket 42: 20%\n  bucket 42: 30%\n  bucket 42: 40%\n  bucket 42: 50%\n  bucket 42: 60%\n  bucket 42: 70%\n  bucket 42: 80%\n  bucket 42: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 43:\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  bucket 43: 10%\n  Entering block accumulator loop for bucket 44:\n  bucket 43: 20%\n  bucket 44: 10%\n  bucket 43: 30%\n  bucket 44: 20%\n  bucket 43: 40%\n  bucket 44: 30%\n  bucket 43: 50%\n  bucket 44: 40%\n  bucket 43: 60%\n  bucket 44: 50%\n  bucket 43: 70%\n  bucket 43: 80%\n  bucket 44: 60%\n  bucket 43: 90%\n  bucket 44: 70%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 45: 10%\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 45: 40%\n  bucket 45: 50%\n  bucket 45: 60%\n  bucket 45: 70%\n  bucket 45: 80%\nGetting block 46 of 57\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  bucket 45: 90%\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 10%\n  bucket 46: 20%\n  bucket 46: 30%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 40%\n  bucket 46: 50%\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 47:\n  bucket 47: 10%\n  bucket 47: 20%\n  bucket 47: 30%\n  bucket 47: 40%\nGetting block 48 of 57\n  bucket 47: 50%\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 47: 60%\n  bucket 47: 70%\n  bucket 48: 10%\n  bucket 47: 80%\n  bucket 48: 20%\n  bucket 47: 90%\n  bucket 48: 30%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 40%\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  bucket 48: 50%\n  bucket 48: 60%\n  bucket 48: 70%\n  bucket 48: 80%\n  bucket 48: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  bucket 49: 20%\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 30%\n  bucket 50: 10%\n  bucket 49: 40%\n  bucket 50: 20%\n  bucket 49: 50%\n  bucket 50: 30%\n  bucket 49: 60%\n  bucket 50: 40%\n  bucket 49: 70%\n  bucket 50: 50%\n  bucket 49: 80%\n  bucket 50: 60%\n  bucket 49: 90%\n  bucket 49: 100%\n  bucket 50: 70%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 50: 80%\n  bucket 50: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 51: 10%\n  bucket 51: 20%\n  bucket 51: 30%\n  bucket 51: 40%\n  bucket 51: 50%\n  bucket 51: 60%\n  bucket 51: 70%\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  Calculating Z arrays for bucket 52\n  bucket 51: 80%\n  Entering block accumulator loop for bucket 52:\n  bucket 51: 90%\n  bucket 52: 10%\n  bucket 52: 20%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  bucket 52: 30%\n  bucket 52: 40%\n  bucket 52: 50%\n  bucket 52: 60%\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  bucket 52: 70%\n  bucket 52: 80%\n  bucket 52: 90%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\nGetting block 54 of 57\n  Calculating Z arrays for bucket 53\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 53:\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 10%\n  bucket 54: 10%\n  bucket 53: 20%\n  bucket 54: 20%\n  bucket 53: 30%\n  bucket 54: 30%\n  bucket 53: 40%\n  bucket 54: 40%\n  bucket 53: 50%\n  bucket 54: 50%\n  bucket 53: 60%\n  bucket 54: 60%\n  bucket 53: 70%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 53: 80%\n  bucket 54: 90%\n  bucket 53: 90%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\n  bucket 55: 10%\n  bucket 55: 20%\n  bucket 55: 30%\n  bucket 55: 40%\n  bucket 55: 50%\n  bucket 55: 60%\n  bucket 55: 70%\n  bucket 55: 80%\n  bucket 55: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 56 of 57\n  Reserving size (388) for bucket 56\nGetting block 57 of 57\n  Calculating Z arrays for bucket 56\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 56:\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 56: 10%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 56: 20%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 56: 30%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 56: 40%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 56: 70%\n  bucket 56: 80%\n  Sorting block time: 00:00:00\n  bucket 56: 90%\nReturning block of 133 for bucket 57\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0",  "tool_stderr": "Building a SMALL index\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      8 (8.25%) aligned discordantly 1 time\n    ----\n    89 pairs aligned 0 times concordantly or discordantly; of these:\n      178 mates make up the pairs; of these:\n        153 (85.96%) aligned 0 times\n        25 (14.04%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n23.50% overall alignment rate\n",  "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/a/6/b/dataset_a6b9c267-dc51-40cd-ada0-cbc1f57b597c.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\n  Reserving size (388) for bucket 1\nGetting block 2 of 58\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\nGetting block 6 of 58\nGetting block 7 of 58\nGetting block 8 of 58\n  Calculating Z arrays for bucket 1\n  Reserving size (388) for bucket 2\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\n  Reserving size (388) for bucket 7\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 2\n  Calculating Z arrays for bucket 3\n  Entering block accumulator loop for bucket 1:\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 6\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 7\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 2:\n  Entering block accumulator loop for bucket 3:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 6:\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 7:\n  bucket 1: 10%\n  bucket 2: 10%\n  Entering block accumulator loop for bucket 8:\n  bucket 3: 10%\n  bucket 4: 10%\n  bucket 2: 20%\n  bucket 6: 10%\n  bucket 5: 10%\n  bucket 1: 20%\n  bucket 2: 30%\n  bucket 7: 10%\n  bucket 8: 10%\n  bucket 3: 20%\n  bucket 4: 20%\n  bucket 2: 40%\n  bucket 6: 20%\n  bucket 1: 30%\n  bucket 5: 20%\n  bucket 2: 50%\n  bucket 7: 20%\n  bucket 3: 30%\n  bucket 8: 20%\n  bucket 4: 30%\n  bucket 6: 30%\n  bucket 1: 40%\n  bucket 2: 60%\n  bucket 5: 30%\n  bucket 7: 30%\n  bucket 3: 40%\n  bucket 2: 70%\n  bucket 8: 30%\n  bucket 4: 40%\n  bucket 1: 50%\n  bucket 6: 40%\n  bucket 5: 40%\n  bucket 2: 80%\n  bucket 3: 50%\n  bucket 7: 40%\n  bucket 1: 60%\n  bucket 8: 40%\n  bucket 4: 50%\n  bucket 2: 90%\n  bucket 6: 50%\n  bucket 5: 50%\n  bucket 3: 60%\n  bucket 7: 50%\n  bucket 1: 70%\n  bucket 2: 100%\n  bucket 8: 50%\n  bucket 4: 60%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  bucket 6: 60%\n  bucket 5: 60%\n  bucket 3: 70%\n  bucket 1: 80%\n  bucket 7: 60%\n  bucket 8: 60%\n  bucket 4: 70%\n  bucket 6: 70%\n  bucket 5: 70%\n  bucket 3: 80%\n  bucket 1: 90%\n  bucket 7: 70%\n  bucket 8: 70%\n  bucket 4: 80%\n  bucket 6: 80%\n  bucket 5: 80%\n  bucket 1: 100%\n  bucket 3: 90%\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 7: 80%\n  bucket 8: 80%\n  bucket 4: 90%\n  bucket 6: 90%\n  bucket 5: 90%\n  bucket 3: 100%\n  bucket 7: 90%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 8: 90%\n  bucket 4: 100%\n  bucket 6: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  bucket 5: 100%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  bucket 8: 100%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\nGetting block 10 of 58\n  Calculating Z arrays for bucket 9\n  Reserving size (388) for bucket 10\n  Calculating Z arrays for bucket 10\n  Entering block accumulator loop for bucket 9:\n  Entering block accumulator loop for bucket 10:\n  bucket 9: 10%\n  bucket 10: 10%\n  bucket 9: 20%\n  bucket 10: 20%\n  bucket 9: 30%\n  bucket 10: 30%\n  bucket 9: 40%\n  bucket 10: 40%\n  bucket 9: 50%\n  bucket 10: 50%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 10: 60%\n  bucket 9: 80%\n  bucket 10: 70%\n  bucket 9: 90%\n  bucket 10: 80%\n  bucket 9: 100%\n  bucket 10: 90%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\nGetting block 11 of 58\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 11:\n  bucket 11: 10%\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  bucket 11: 20%\n  Calculating Z arrays for bucket 12\n  bucket 11: 30%\n  Entering block accumulator loop for bucket 12:\n  bucket 11: 40%\n  bucket 12: 10%\n  bucket 11: 50%\n  bucket 12: 20%\n  bucket 11: 60%\n  bucket 12: 30%\n  bucket 11: 70%\n  bucket 12: 40%\n  bucket 11: 80%\n  bucket 12: 50%\n  bucket 11: 90%\n  bucket 12: 60%\n  bucket 12: 70%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\nGetting block 14 of 58\n  Calculating Z arrays for bucket 13\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\n  Entering block accumulator loop for bucket 13:\n  bucket 13: 10%\n  bucket 14: 10%\n  bucket 14: 20%\n  bucket 13: 20%\n  bucket 14: 30%\n  bucket 13: 30%\n  bucket 14: 40%\n  bucket 13: 40%\n  bucket 14: 50%\n  bucket 13: 50%\n  bucket 14: 60%\n  bucket 13: 60%\n  bucket 14: 70%\n  bucket 13: 70%\n  bucket 14: 80%\n  bucket 13: 80%\n  bucket 14: 90%\n  bucket 13: 90%\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 15 of 58\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 15: 10%\nGetting block 16 of 58\n  bucket 15: 20%\n  Reserving size (388) for bucket 16\n  Calculating Z arrays for bucket 16\n  bucket 15: 30%\n  Entering block accumulator loop for bucket 16:\nGetting block 17 of 58\n  bucket 15: 40%\n  bucket 16: 10%\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  bucket 15: 50%\n  bucket 16: 20%\n  Entering block accumulator loop for bucket 17:\n  bucket 15: 60%\n  bucket 16: 30%\n  bucket 17: 10%\n  bucket 15: 70%\n  bucket 16: 40%\n  bucket 17: 20%\n  bucket 15: 80%\n  bucket 16: 50%\n  bucket 17: 30%\n  bucket 15: 90%\n  bucket 16: 60%\n  bucket 15: 100%\n  bucket 16: 70%\n  bucket 17: 40%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  bucket 16: 80%\n  bucket 17: 50%\n  bucket 16: 90%\n  bucket 17: 60%\n  bucket 17: 70%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  bucket 17: 80%\n  bucket 17: 90%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\n  Calculating Z arrays for bucket 18\n  Entering block accumulator loop for bucket 18:\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  bucket 18: 10%\n  Calculating Z arrays for bucket 19\n  Entering block accumulator loop for bucket 19:\n  bucket 18: 20%\nGetting block 20 of 58\nGetting block 21 of 58\n  Reserving size (388) for bucket 20\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 20\n  Calculating Z arrays for bucket 21\n  bucket 19: 10%\n  bucket 18: 30%\n  Entering block accumulator loop for bucket 20:\n  Entering block accumulator loop for bucket 21:\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  bucket 19: 20%\n  bucket 18: 40%\n  bucket 20: 10%\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 10%\n  bucket 19: 30%\n  bucket 20: 20%\n  bucket 22: 10%\n  bucket 18: 50%\n  bucket 20: 30%\n  bucket 21: 20%\n  bucket 22: 20%\n  bucket 19: 40%\n  bucket 18: 60%\n  bucket 20: 40%\n  bucket 22: 30%\n  bucket 21: 30%\n  bucket 19: 50%\n  bucket 22: 40%\n  bucket 20: 50%\n  bucket 18: 70%\n  bucket 21: 40%\n  bucket 19: 60%\n  bucket 22: 50%\n  bucket 20: 60%\n  bucket 21: 50%\n  bucket 18: 80%\n  bucket 20: 70%\n  bucket 22: 60%\n  bucket 19: 70%\n  bucket 21: 60%\n  bucket 20: 80%\n  bucket 22: 70%\n  bucket 18: 90%\n  bucket 19: 80%\n  bucket 20: 90%\n  bucket 21: 70%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  bucket 19: 90%\n  bucket 22: 80%\n  bucket 18: 100%\n  bucket 21: 80%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  bucket 22: 90%\n  bucket 19: 100%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 21: 90%\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 23: 30%\n  bucket 23: 40%\nGetting block 24 of 58\n  bucket 23: 50%\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 23: 60%\n  bucket 23: 70%\n  bucket 24: 10%\n  bucket 23: 80%\n  bucket 24: 20%\n  bucket 23: 90%\n  bucket 24: 30%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 24: 70%\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\nGetting block 26 of 58\n  Calculating Z arrays for bucket 25\n  Reserving size (388) for bucket 26\n  Entering block accumulator loop for bucket 25:\n  Calculating Z arrays for bucket 26\nGetting block 27 of 58\n  Entering block accumulator loop for bucket 26:\n  Reserving size (388) for bucket 27\nGetting block 28 of 58\n  Calculating Z arrays for bucket 27\nGetting block 29 of 58\n  bucket 25: 10%\n  Reserving size (388) for bucket 28\n  bucket 26: 10%\n  Reserving size (388) for bucket 29\n  Entering block accumulator loop for bucket 27:\n  Calculating Z arrays for bucket 28\n  bucket 25: 20%\n  Calculating Z arrays for bucket 29\n  bucket 26: 20%\n  Entering block accumulator loop for bucket 28:\nGetting block 30 of 58\n  Entering block accumulator loop for bucket 29:\n  bucket 25: 30%\n  bucket 26: 30%\n  Reserving size (388) for bucket 30\n  bucket 27: 10%\n  Calculating Z arrays for bucket 30\n  bucket 25: 40%\n  bucket 26: 40%\n  bucket 28: 10%\n  Entering block accumulator loop for bucket 30:\n  bucket 27: 20%\n  bucket 29: 10%\n  bucket 25: 50%\n  bucket 26: 50%\n  bucket 28: 20%\n  bucket 27: 30%\n  bucket 29: 20%\n  bucket 25: 60%\n  bucket 30: 10%\n  bucket 26: 60%\n  bucket 27: 40%\n  bucket 28: 30%\n  bucket 25: 70%\n  bucket 29: 30%\n  bucket 30: 20%\n  bucket 26: 70%\n  bucket 27: 50%\n  bucket 28: 40%\n  bucket 25: 80%\n  bucket 30: 30%\n  bucket 29: 40%\n  bucket 26: 80%\n  bucket 27: 60%\n  bucket 28: 50%\n  bucket 25: 90%\n  bucket 30: 40%\n  bucket 29: 50%\n  bucket 26: 90%\n  bucket 27: 70%\n  bucket 28: 60%\n  bucket 25: 100%\n  bucket 30: 50%\n  bucket 29: 60%\n  bucket 26: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 27: 80%\n  bucket 28: 70%\n  bucket 30: 60%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  bucket 29: 70%\n  bucket 28: 80%\n  bucket 27: 90%\n  bucket 30: 70%\n  bucket 29: 80%\n  bucket 28: 90%\n  bucket 30: 80%\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  bucket 28: 100%\n  bucket 29: 90%\n  bucket 30: 90%\nReturning block of 106 for bucket 25\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 29: 100%\n  bucket 30: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\nReturning block of 355 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 290 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\nGetting block 32 of 58\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 10%\n  bucket 32: 10%\n  bucket 32: 20%\n  bucket 31: 20%\n  bucket 32: 30%\n  bucket 31: 30%\n  bucket 32: 40%\n  bucket 31: 40%\n  bucket 32: 50%\n  bucket 31: 50%\n  bucket 32: 60%\n  bucket 31: 60%\n  bucket 32: 70%\n  bucket 31: 70%\n  bucket 32: 80%\n  bucket 31: 80%\n  buc\n..\nme: 00:00:00\nGetting block 24 of 57\nReturning block of 350 for bucket 23\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\n  Entering block accumulator loop for bucket 24:\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 24: 30%\n  bucket 24: 40%\n  bucket 24: 50%\n  bucket 24: 60%\n  bucket 24: 70%\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\nGetting block 25 of 57\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\n  bucket 25: 10%\nGetting block 26 of 57\n  bucket 25: 20%\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\n  bucket 25: 30%\n  bucket 25: 40%\n  bucket 26: 10%\n  bucket 25: 50%\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  bucket 25: 60%\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 20%\n  bucket 25: 70%\n  bucket 26: 30%\n  bucket 27: 10%\n  bucket 26: 40%\n  bucket 25: 80%\n  bucket 27: 20%\n  bucket 26: 50%\n  bucket 25: 90%\n  bucket 26: 60%\n  bucket 25: 100%\n  bucket 27: 30%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 26: 70%\n  bucket 27: 40%\n  bucket 26: 80%\n  bucket 27: 50%\n  bucket 26: 90%\n  bucket 27: 60%\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  bucket 26: 100%\n  bucket 27: 70%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  bucket 27: 80%\n  bucket 27: 90%\n  bucket 27: 100%\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\nGetting block 29 of 57\n  Calculating Z arrays for bucket 28\n  Reserving size (388) for bucket 29\n  Entering block accumulator loop for bucket 28:\n  Calculating Z arrays for bucket 29\n  Entering block accumulator loop for bucket 29:\n  bucket 28: 10%\n  bucket 29: 10%\n  bucket 28: 20%\n  bucket 29: 20%\n  bucket 28: 30%\n  bucket 28: 40%\n  bucket 29: 30%\n  bucket 28: 50%\n  bucket 29: 40%\n  bucket 28: 60%\n  bucket 29: 50%\n  bucket 28: 70%\n  bucket 29: 60%\n  bucket 29: 70%\n  bucket 28: 80%\n  bucket 29: 80%\n  bucket 28: 90%\n  bucket 29: 90%\n  bucket 28: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\nGetting block 31 of 57\n  Calculating Z arrays for bucket 30\n  Reserving size (388) for bucket 31\nGetting block 32 of 57\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Entering block accumulator loop for bucket 30:\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 32:\n  bucket 30: 10%\n  bucket 31: 10%\n  bucket 30: 20%\n  bucket 31: 20%\n  bucket 32: 10%\n  bucket 30: 30%\n  bucket 31: 30%\n  bucket 32: 20%\n  bucket 30: 40%\n  bucket 31: 40%\n  bucket 32: 30%\n  bucket 30: 50%\n  bucket 31: 50%\n  bucket 32: 40%\n  bucket 30: 60%\n  bucket 31: 60%\n  bucket 32: 50%\n  bucket 30: 70%\n  bucket 31: 70%\n  bucket 32: 60%\n  bucket 30: 80%\n  bucket 31: 80%\n  bucket 32: 70%\n  bucket 30: 90%\n  bucket 31: 90%\n  bucket 32: 80%\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  bucket 31: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  bucket 32: 90%\n  bucket 32: 100%\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 10%\n  Entering block accumulator loop for bucket 34:\n  bucket 34: 10%\n  bucket 33: 20%\n  bucket 34: 20%\n  bucket 33: 30%\n  bucket 34: 30%\n  bucket 33: 40%\n  bucket 34: 40%\n  bucket 34: 50%\n  bucket 33: 50%\n  bucket 34: 60%\n  bucket 33: 60%\n  bucket 34: 70%\n  bucket 34: 80%\n  bucket 33: 70%\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  bucket 33: 80%\n  (Using difference cover)\n  bucket 33: 90%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\nGetting block 36 of 57\n  bucket 35: 40%\n  Reserving size (388) for bucket 36\nGetting block 37 of 57\n  Calculating Z arrays for bucket 36\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  bucket 35: 50%\n  Entering block accumulator loop for bucket 37:\n  Entering block accumulator loop for bucket 36:\n  bucket 37: 10%\n  bucket 35: 60%\n  bucket 36: 10%\n  bucket 37: 20%\n  bucket 35: 70%\n  bucket 37: 30%\n  bucket 36: 20%\n  bucket 37: 40%\n  bucket 35: 80%\n  bucket 36: 30%\n  bucket 37: 50%\n  bucket 35: 90%\n  bucket 36: 40%\n  bucket 37: 60%\n  bucket 36: 50%\n  bucket 37: 70%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  bucket 37: 80%\n  bucket 36: 60%\n  bucket 37: 90%\n  bucket 36: 70%\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  bucket 36: 80%\n  bucket 36: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  bucket 38: 10%\n  bucket 38: 20%\n  bucket 38: 30%\n  bucket 38: 40%\n  bucket 38: 50%\n  bucket 38: 60%\n  bucket 38: 70%\n  bucket 38: 80%\n  bucket 38: 90%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\nGetting block 39 of 57\n  Reserving size (388) for bucket 39\nGetting block 40 of 57\n  Calculating Z arrays for bucket 39\n  Reserving size (388) for bucket 40\nGetting block 41 of 57\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 39:\n  Reserving size (388) for bucket 41\n  Entering block accumulator loop for bucket 40:\n  Calculating Z arrays for bucket 41\n  Entering block accumulator loop for bucket 41:\n  bucket 39: 10%\n  bucket 40: 10%\n  bucket 41: 10%\n  bucket 39: 20%\n  bucket 40: 20%\n  bucket 41: 20%\n  bucket 39: 30%\n  bucket 41: 30%\n  bucket 40: 30%\n  bucket 39: 40%\n  bucket 41: 40%\n  bucket 40: 40%\n  bucket 39: 50%\n  bucket 41: 50%\n  bucket 40: 50%\n  bucket 39: 60%\n  bucket 40: 60%\n  bucket 41: 60%\n  bucket 39: 70%\n  bucket 40: 70%\n  bucket 41: 70%\n  bucket 39: 80%\n  bucket 40: 80%\n  bucket 41: 80%\n  bucket 39: 90%\n  bucket 40: 90%\n  bucket 41: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\n  Entering block accumulator loop for bucket 42:\n  bucket 42: 10%\n  bucket 42: 20%\n  bucket 42: 30%\n  bucket 42: 40%\n  bucket 42: 50%\n  bucket 42: 60%\n  bucket 42: 70%\n  bucket 42: 80%\n  bucket 42: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\n  Calculating Z arrays for bucket 43\n  Entering block accumulator loop for bucket 43:\nGetting block 44 of 57\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  bucket 43: 10%\n  Entering block accumulator loop for bucket 44:\n  bucket 43: 20%\n  bucket 44: 10%\n  bucket 43: 30%\n  bucket 44: 20%\n  bucket 43: 40%\n  bucket 44: 30%\n  bucket 43: 50%\n  bucket 44: 40%\n  bucket 43: 60%\n  bucket 44: 50%\n  bucket 43: 70%\n  bucket 43: 80%\n  bucket 44: 60%\n  bucket 43: 90%\n  bucket 44: 70%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 44: 80%\n  bucket 44: 90%\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\n  bucket 45: 10%\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 45: 40%\n  bucket 45: 50%\n  bucket 45: 60%\n  bucket 45: 70%\n  bucket 45: 80%\nGetting block 46 of 57\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  bucket 45: 90%\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 10%\n  bucket 46: 20%\n  bucket 46: 30%\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  bucket 46: 40%\n  bucket 46: 50%\n  bucket 46: 60%\n  bucket 46: 70%\n  bucket 46: 80%\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 47:\n  bucket 47: 10%\n  bucket 47: 20%\n  bucket 47: 30%\n  bucket 47: 40%\nGetting block 48 of 57\n  bucket 47: 50%\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 47: 60%\n  bucket 47: 70%\n  bucket 48: 10%\n  bucket 47: 80%\n  bucket 48: 20%\n  bucket 47: 90%\n  bucket 48: 30%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 40%\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  bucket 48: 50%\n  bucket 48: 60%\n  bucket 48: 70%\n  bucket 48: 80%\n  bucket 48: 90%\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\n  Entering block accumulator loop for bucket 49:\n  bucket 49: 10%\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  bucket 49: 20%\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 30%\n  bucket 50: 10%\n  bucket 49: 40%\n  bucket 50: 20%\n  bucket 49: 50%\n  bucket 50: 30%\n  bucket 49: 60%\n  bucket 50: 40%\n  bucket 49: 70%\n  bucket 50: 50%\n  bucket 49: 80%\n  bucket 50: 60%\n  bucket 49: 90%\n  bucket 49: 100%\n  bucket 50: 70%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  bucket 50: 80%\n  bucket 50: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 51: 10%\n  bucket 51: 20%\n  bucket 51: 30%\n  bucket 51: 40%\n  bucket 51: 50%\n  bucket 51: 60%\n  bucket 51: 70%\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\n  Calculating Z arrays for bucket 52\n  bucket 51: 80%\n  Entering block accumulator loop for bucket 52:\n  bucket 51: 90%\n  bucket 52: 10%\n  bucket 52: 20%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  bucket 52: 30%\n  bucket 52: 40%\n  bucket 52: 50%\n  bucket 52: 60%\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\n  bucket 52: 70%\n  bucket 52: 80%\n  bucket 52: 90%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\nGetting block 53 of 57\n  Reserving size (388) for bucket 53\nGetting block 54 of 57\n  Calculating Z arrays for bucket 53\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 53:\n  Entering block accumulator loop for bucket 54:\n  bucket 53: 10%\n  bucket 54: 10%\n  bucket 53: 20%\n  bucket 54: 20%\n  bucket 53: 30%\n  bucket 54: 30%\n  bucket 53: 40%\n  bucket 54: 40%\n  bucket 53: 50%\n  bucket 54: 50%\n  bucket 53: 60%\n  bucket 54: 60%\n  bucket 53: 70%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 53: 80%\n  bucket 54: 90%\n  bucket 53: 90%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\n  Calculating Z arrays for bucket 55\n  Entering block accumulator loop for bucket 55:\n  bucket 55: 10%\n  bucket 55: 20%\n  bucket 55: 30%\n  bucket 55: 40%\n  bucket 55: 50%\n  bucket 55: 60%\n  bucket 55: 70%\n  bucket 55: 80%\n  bucket 55: 90%\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\nGetting block 56 of 57\n  Reserving size (388) for bucket 56\nGetting block 57 of 57\n  Calculating Z arrays for bucket 56\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 56:\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 56: 10%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 56: 20%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 56: 30%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 56: 40%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  bucket 56: 50%\n  bucket 56: 60%\n  bucket 56: 70%\n  bucket 56: 80%\n  Sorting block time: 00:00:00\n  bucket 56: 90%\nReturning block of 133 for bucket 57\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "traceback": null,  "update_time": "2023-02-07T23:17:23.287067",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_qvm78at8.sam v. /tmp/history_bam_converted_to_sam_4349h9g0.sam )\n--- local_file\n+++ history_data\n@@ -1,77 +1,78 @@\n @HD\tVN:1.0\tSO:coordinate\n @SQ\tSN:chrM\tLN:16569\n-@PG\tID:bowtie2\tPN:bowtie2\tVN:2.3.2\tCL:\"/Users/anton/miniconda2/envs/mulled-v1-cf272fa72b0572012c68ee2cbf0c8f909a02f29be46918c2a23283da1d3d76b5/bin/bowtie2-align-s --wrapper basic-0 -p 1 -x genome -1 /tmp/32192.inpipe1 -2 /tmp/32192.inpipe2\"\n+@PG\tID:bowtie2\tPN:bowtie2\tVN:2.4.2\tCL:\"/usr/local/bin/bowtie2-align-s --wrapper basic-0 -p 8 -x genome -1 /tmp/gxy-mmwd8-wkl2z_53mate1 -2 /tmp/gxy-mmwd8-wkl2z_53mate2\"\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.11\tCL:samtools sort -@8 -T /galaxy/server/database/jobs_directory/000/546/tmp -O bam -o /galaxy/server/database/objects/1/a/6/dataset_1a6b222d-0922-4ea7-9512-f665510065d2.dat\n M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tchrM\t1\t40\t1M10I240M\t=\t2\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tAS:i:-45\tXN:i:0\tXM:i:2\tXO:i:1\tXG:i:10\tNM:i:12\tMD:Z:0G71A168\tYS:i:-41\tYT:Z:CP\n M01368:8:000000000-A3GHV:1:1101:18422:19051\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:25545:21098\t165\tchrM\t1\t0\t*\t=\t1\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1101:5861:6452\t165\tchrM\t1\t0\t*\t=\t1\t0\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t-223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t-216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:10677:23253\t97\tchrM\t1\t0\t4M22I209M5I5M1I5M\t=\t1\t223\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tAS:i:-143\tXN:i:0\tXM:i:9\tXO:i:3\tXG:i:28\tNM:i:37\tMD:Z:0G0A1C68A140A0A4T0G1T0\tYS:i:-135\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1102:21788:11027\t97\tchrM\t1\t0\t3M35I213M\t=\t1\t216\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tAS:i:-138\tXN:i:0\tXM:i:6\tXO:i:1\tXG:i:35\tNM:i:41\tMD:Z:1A0T69A140A0A0T0\tYS:i:-135\tYT:Z:DP\n M01368:8:000000000-A3GHV:1:1102:7765:18353\t101\tchrM\t1\t0\t*\t=\t1\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:15502:11453\t161\tchrM\t1\t23\t235M4I12M\t=\t1\t247\tGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACCTGTCTCTTATACACATCTG\tCCCCCFFFCFFFGGGGGGGGGGHHHHHHGHHHHHGGGGGFHFHHHHHHGHHHHHGHHHHHHGHFHGHGGGGGGGGHHHGGGGGGGGHHHGHGGGGGGGGGGGHHGGGFGGGFEGGGGFFFGGFGDGGGBFGFFFFFFFFFFFFFE0BFFFFFFFFFFFFFFFFFFF;BFFDFFFFBF0BFFBFFEEBFFAA009FFFFFBFFEBB0;.BFFBFFFFFFFFFFFF0;BFFFFE//090::B0000:009900\tAS:i:-50\tXN:i:0\tXM:i:9\tXO:i:1\tXG:i:4\tNM:i:13\tMD:Z:72A158A1A0A2A0T0A3A0T2\tYS:i:-80\tYT:Z:DP\n+M01368:8:000000000-A3GHV:1:1105:20577:18421\t101\tchrM\t1\t0\t*\t=\t1\t0\tGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCC\tABB@3\u003eAAFFFFFEAGGGFGGAA6FHDGGCGFHFFHFHFHHHHHGDDDFFFHGFFHGBEGEGHHHFFFHGEEAEGHHHHHFHHHFHGHFEDGGEGBEAGEFHHFFHHHHHHGGHHHGHHGBGHHFHHFGHHHHG?CG?AFHH1FHHHGHFHHHF?DGHFFHCGAGEFHGCBBBB?BFFF?B-B.9/BFFFFFB=-AD?..@FFFF@@-@@?AFD.FFFBBEEBD9/:FFFFFBB/:FF9BF/BF.BBFF/:\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:21099:2895\t101\tchrM\t1\t0\t*\t=\t1\t0\tTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTT\tCBCBBFFFFFFFGGGGGGGGGGGGGFHHHHFHGHHHHHHFHHHHFGFHHHHHHGHHHHHHGHHEHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHHFHHHHGHGHHHGGHHHHHGGHFFGHGCGGGHGHHGHHHFGHHFHH/FGGGHFGFEGGCFCCD;B@DFFFFFFFFFFFFFFFFFFFFFFFFF;F.BEFADFFFF.AEFFFFFFE;D.;:B00099:09BFBFFBFF.0:000BFFBF0\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:26469:19245\t165\tchrM\t1\t0\t*\t=\t1\t0\tGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTTGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCT\tAAABBBBFFFFFGGGGGGGGGGHHHGGGGGHHFFGHHHHFHHHFFHFHHHFHHHHHFGFHHHHHGHHHHGGGGHHHGHHFHHHHHHHGHHHHHHHGGHGGHHHHHHHHHHHGHHHHHHHHHHGHHHHGHGHHGGCGGGHHHH23FFHHHHGHGCGHHHHGGHFHGHBCCFFFFFFF/ECCDFDFEFFFFBDAFF?DADE??BFFFF=A-.AAAA.BFFFFED..BF/BFFEFFFFBFFFFFFFFFFBFB::\tYT:Z:UP\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t101\tchrM\t1\t0\t*\t=\t1\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGT\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHGGHHHHHHFHHHHHHHHHHHHHHHHHHHHGHHHHHGGGGCHHHHHHHHGHHHHHHHFHHHHHGHGHGHHGGGGGFGGHHGGGGGGGGGGGGEGGFGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFF-9@DDBFFFFFFFFBBFFF0\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:11572:8264\t101\tchrM\t1\t0\t*\t=\t1\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBABCBFBACCCFGGGGGGGGGGGHHGHHGHHHHGFGCHGHHGFFHEHHHHGGGGFGHHHHHHHHHHHHGHHHHHHHGGGGGHHHFFHHGHHHHHHHHHHHEHHHHHHHGHHGHGGEGEGHHHFHHHHGHHHHHHGGHHHHHGHGEGEHCGG-BGDFGFFFFAFFDFFFFEFFCFFDDFFFFFFFEC\u003e;\u003e=EF?AEFFFF;9;=DAFFFFBBFFFBFFF//;BFB.:FBFFBB/BFFFF/BFFE?EFAFEF9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:12288:20635\t101\tchrM\t1\t0\t*\t=\t1\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\tABA?AFBAB2\u003eAFGGGGFFGD5GGHGFFHGHEGGGGHHHHFFHH5FHGHHHFFHEFHHHHHHGGHHHHHGFHGGHGGGGFHGGGFBHHHFGEGHHHHGHGGGGECEHHFHHGHHFFHFGGGHHHEGHDGHHGHGHFHHHECGCBCHHGFHHFHD1GFHEFHEF?GDCFFEFE0A@;@\u003eBD/9BFBBBBFDFFFF99D=?\u003eDDBFF-AFFEBB9BBEFEFAFFF//-@---;;FBBFBFB///;99999BA9\tYT:Z:UP\n M01368:8:000000000-A3GHV:1:1104:23670:4161\t165\tchrM\t1\t0\t*\t=\t1\t0\tCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAA\tA3AABBFFFFFFGGGGGGGGGGHHFHHHHHHGHGHHHHHGCHHHHGGGGHHHHHHHHHHHHHHHGHHGHGHGGHGGHGHGGHHGFGHHGHHHEHHGHHHHHGHEHEHHHGGFGGHHHFHHHGHHHHHHHGHHHHG4EGGGFCBBCA?DGGGGGGCCAFFFFFFFFFFFFFFFFFDFFF.9@--=AFFFF;FBFFBEFFF9FBFFB9/FFFFFFB/FFFFFFFBFFFF/BBFBB/FFFE?.;@FFB?FBB//\tYT:Z:UP\n********\n*SNIP *\n********\n-M01368:8:000000000-A3GHV:1:1110:16700:6843\t141\t*\t0\t0\t*\t*\t0\t0\tGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTCTGTCTCTTATACACATTTGTCGCTC\tCBCCDFFFFFFFGGGGGGGGGGHHGHHHGGHFHHHGGGGGHHHHHHHHHHGHHHHHHHHHHHGGHGGHHHHHHHGBGFFHHHHHHGHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHFHHHHGHCG/GGHHGGGGGGAFGEEADAGGDFFFF00D\u003eCFDDFFFB?AF?B;-@\u003e.FEDFFFFF0BF-BDFFFFE00B0BF0FFFF:BFA0B0:BBFBBFFFFF0B0:000\u003c00\u003cBFBB0\u003c00000\u003c99.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t77\t*\t0\t0\t*\t*\t0\t0\tATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGGGATAGACCTGTGATCCATCGTGATGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAAAAAAAAAATAG\tAABBBFFFFFFFCGGGCGGGGGGHHHHHGFHHHHHHGHHHGGGGGFHHGHFGGHHHGGFGGGHHGGGGGHHGGGGHGGHHHGGGGGGHHGHGDGGGGGGGGB/A\u003cGFHFHHHGHBBGFEGGGGHFFFEF/EEGGHGGFEHFHHBA.\u003cADFFHFHB/CCGHFEFHHGHGEFFGGGGGFFFGGFGFFBFFGGBFGG??DGG?@9-ADFFFFB/@BD;./BFE?BFE/\u003e99FE//BBFFF.9/FF?DA=@9./9\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1110:18014:7856\t141\t*\t0\t0\t*\t*\t0\t0\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGTAGAGCTCGGGGGTCGCCGTGTATTTTTACAAAAAA\tCDDDBFCDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHGHHHHHEGHHHHHEHGHGHHGGGCCGGHGHGCGGGGDHHHHFHGGGGGGGGGGGFGGFGAC-EFEGGGFFFGFF;DFFFBFFFFFFFFFFFFFFFFFFFEFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB?DFF---;--D;9AFB0B:B0::00;0.;----.--.-9-:/00::090:0;..:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t77\t*\t0\t0\t*\t*\t0\t0\tATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTCCGAGCCCACGAGA\tABAAAFFFFFFFGGGGGGGGGGGHHGG4FDFGFGGCGGGHGHG?EGHEGFFDHFHHHHGGFE@EHHGEEEGFCCEFFGFG/EHHHHHBFBGGHFHFHEHGHEFGGGED/EFDEFFEHHBGHHCFFFDFGGHHGFFFHHHHGFG\u003e0\u003c0DGGFHBGHFBDFGHGFFGGAGHHGCGBHFFHHHFFFBFGGGGF/:FFFCB9F9FF0FEFE?FF0BED-D.//BF9//BBFF/BFFFEFFFFED-DCFF?.:BFA\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:13195:14562\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGG\tABBBBFBBBBBFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHDGHHHGGGGHHHHHHHHHHHHGHHHHHHHHHGGGGGHHGHHHHGFGFHHHHHHHHGHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHGFHHHHHGFGHGHHGGGGFCGFGFFFFAFFFFFFFFFFA;BADFFFAFFFFFFFFFEFFFEFFFFFFF;FDBFFFFFFFFFFFFFFFFF/BFF/BFFFEBFFFEFFFFFFFFF@B@-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t77\t*\t0\t0\t*\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTGTCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCG\tAA3AAFFFFFFFGGGFGFFGGGGHGH4AGGGFHHCGEE2FGHHHHHHHHHHGFHGF53FHEGGFAF5CFHHGGFGHFHHGGHHHCHHHHHHHFHHGH?EEEG1FFFEHHFHFGGHHGG?F4FBGHGHCHEF0//-9--;0CFGG?@BGDGFFFFEFBBBDA?FFBFFFF=B;-9.AA9EFFFF/;9BD.//;9/9/B:/:BFBFFBFFF/B:BFF//;/B/FFFBFF.A-BFFFBA/F//BFFFBF/;/A-\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:8665:25542\t141\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGACAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTA\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHCHHGDGGGGHGGHHHHHHHHGHGHHHGGGGGHFHHHHFHHHFFHHHHHFGCGGEHFHHFGGHFHGGGGGGHHFEEEAFEFFDFHGHHHHGGGGGGGHH0DGGGGCGHCC-\u003cCCBGHHHGEFFFFHH.C/\u003cAEGHHEG.EEA0GE0:FB0CFGF:A?FFBF??FG0B;FGGGGFGE?BBF;BFBFFFF/F/B?DDF.;.;:ADD.BA/BBFFB:BFE/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t77\t*\t0\t0\t*\t*\t0\t0\tGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGCGGTGTCCACGCAATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGA\t1\u003e\u003e1AAFFFFFBGGFE1EEEEGGHGHHH2FGHHHFGFGHGCFGGGEFHGGEGGHHHHGHEFBFEGHHHGHHBEHHHHGHGFHHHGGGGHHEGGGGHHHGFHGHHHH1FHHG?G/AGF1GBFGEFFHF2FDD0FG\u003cGDHBFDGFFCGH//B//?0GFFGFGGHHHFHFB.=1FDFB?FGH.C/.-:::CH0;CAB@-.;0CGFFFGG--9.A@GB\u003e--99@=---AAABA-BF/B?A@F-9BBFF//BB/9/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1111:9655:13916\t141\t*\t0\t0\t*\t*\t0\t0\tTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATTGCGTGGACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATG\tABBB\u003eFFFFFFFGGGGGGGGGGHHHHHGHHHHGHHGGHHGGHGGHHHGHHHHFHHGHHAFGGGHHHHHGHHHHFHFHHHHHECGGGHGHHHEFHFHGGGGGGGGFGFFGFFEFGEGHHHGHHGGDGGGHGFGGGGGGGGE@GCGGHHHGHHHHHGHHHHFHHGEGFFEGCE.ECCECEHCGGFFE/AABFFG0CFE0BFFF9CFGG.F/BBBFFGFGGGFFFFFFBFEDAEFFFFFBFFFFFFF0;FEBF:\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t77\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTT\tAAABABBBBBBFGGGGGGGGGGHGHHGHGHHHHHHHHHGHHHGGHDGHHHGGGGHHHHHHHHHHHHHHHFHGHHHHGGHGGHHHFHHHHHCGHFFHHHHHHHHHHHHHGHGEFGAEEEEHHGHHGHGHHHHHHHGHHHHHHGHGHFFBC/BA?BGGGFFFFFFFFFFFFFFFC-@DDFFFFFFFEFAFFFFFFBFBFFFFFFFFFFFFFFFFBFF-\u003e@FFFFFFFFFFBFBFAD--.99;A?////:.9A.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:10272:7828\t141\t*\t0\t0\t*\t*\t0\t0\tGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCAAGTGTAGTGCTCGGGGGGG\tBBCCBFFCCCCCGGGGGGGGGGGGGGHHHHHHGGGGGGHHFHGGGGGFGHGGGGGGHHHHHHHHHHFHHHHFHGFFHHGF?ECEFFFFFFHHHHHH?FHHHHHHHHHGFHHHHHHGGGFGHHHHFHHHHHHHHHHGGGFGFGCGGGGHHHHHHHHHHHGGFFHGHHHHHFFHFCGFHCCGHGHCGGHG?DGGGGGFBBFGFBFBBBGGGB0000;CD?DFFAFF9=--;...://;////////.------\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t77\t*\t0\t0\t*\t*\t0\t0\tCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGGGCTGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCTTGAAGTAGGAACC\tAABABFFFFFFFF4GGGGEBGEFGHGGHGHGHHHGGHFBGFGGGGGHHEFHGEHFHFHEHHHHHGCGGGHFHHCFGHE@1EEEFFGB?EEEEHBGGGCHHGHHBEE@\u003eEAHHFAEBDGGGCEFF?CEGFFHHHHHFHHHFHGHCGCAHHF\u003c..C.D=0CD.GFHHHG.CAGHC:CHB0GGGFFB0:CFA.A-;9.;000CBBFFBFGA.9AA;A;EDDE.ABBFFFF9;BEFFF/BF//9/B//9:B//..\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:16531\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBBFBBBBBFGGGGGGGGGGHFHHHHHHHHHHHHHHGHHHHGHFHHHGEEGGHHHGHHHHHHHHHHHHEHGHHGGGHGGHGHHHHHGHHHHGHHHHHHHHHHHHHHGHHHHHGEGCGHHHHHGHHHHHHHHHHHHHHGHFFGHGHHGGGDACDFFFFABFFFFFFFFFFD-BC?DA9.DFFBEA==B=?F.;ABBFBFEF-DAF/BFF9/FFFBB/9BFFFFFFF/BFBBFFFFFFF/9FEA?--B/;.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t77\t*\t0\t0\t*\t*\t0\t0\tCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGA\tAABBBBFFFFFFGGGFGGGGGGHHHGGHGGHHHHHHHHHHHGHHGGGGGHHHHHHHHHHHHHHHHHHGGCGDHHHHFGGHHHGGGGGFGGHGGGGHHGGGGHHHHHHGGGGGGHHGGGGDGGFGHGGFCDCHHHHGHHHHGHHFAGFGGEHFGEG.C\u003cEGCECEFCFFHBGHE:GHHGFF0FFFB0CFGGGGAGFFF0;;FFGGGFFGFFCDD.DEFBEDD?9FFFFFFFFFFFFFFF/B./FB///;BF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1112:9832:6701\t141\t*\t0\t0\t*\t*\t0\t0\tGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATT\tBBBBAFFFFFFFGGGGGGGGGGFGHHHHHGHHHHHHHHHHHHCGHHHHHHHGHHHHHHDGHHGGAECHHGHHHHHHHGHHHGHGFHHHHGGHGGHHFHHHHHHFHHHHHHHHH2GHHHHGHGHHFHHGGFGGGHHGHHHHHFHHHHEFHHHHEFGFFHGEHCFGDFDFFFFFCFFFFFFFFFFFFFAFBFFDFFFFFFFFADCF?9?EFBFB9EF-A.;BFFFFFFFBFFFFFFFFFFFFBFFFFFFFFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t77\t*\t0\t0\t*\t*\t0\t0\tGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGCTACAGTTCACTTTAGCTACCTCCAAGTGTTATG\tAA?AAFFFFFFFGGGGGFBFGGGGGGH5GHFEDHHGGGGCGFBGH?AEEHFFEEGHGHHHHGGG?0EHGHHGGGGGC?GEE/EE?GHHHGBHFHHHHHHGHHGHHHGGGCG/A@\u003cFGGHHHHHHHFF/GFDGHHHHHHGFFFGHGGHABGHFHHHHHFHEGDGHGDDEEHHBEDDEGFGHGBFFBFFEGGGEFGFGFB000;F0F;FGGEGGEFFF;-.9//B///B9FFFFF/BFFB/:.BB//;FBFFF\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:13532:8618\t141\t*\t0\t0\t*\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTGGAT\tCDDDBFFFFFFFGGGGGGGGGGHHHHHGGHHHGHHHGHHGGGGEHHGGHHHHHHHHHHHHHHGHHGHHHHHGGHHHHHFHHHHGCDCGHHHHHHHHEHHHGHGHHHGFHGGHGGHHHHHHHHFHHHFHHHGHHHHHHHHHFGGHHHHGGGEGAFHHGHHGGHHHHGHFBGFHGHGHGHGGHGGF@DAFEFBECAB=A.0BFFFEDF=A9.@D.-AAFFFA-:-..:.9/0:;0..-..0000::BFB09::\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t77\t*\t0\t0\t*\t*\t0\t0\tTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGA\tABBBBFFFFFFFGGGFGGGGGGHHHGHHGGHBGHGAGFFCAFGHGFFGHHGFHHHHHGGGGGHGHHHHHHHHE3BFFHHHGG0EDF@GHFFGGGHGGGGGGGGGGGGGHHGGEEFHGFHHDDG@DGGGHHGDGGGGGHGG?CF?HHGHHHGHGHHHFFHGGGHHHHGGCD.;0\u003cC;CGGGGEFF/.;0;FFFBF/0;0CFGFFB..9B/;0CBFFBBFFFFBAC?DED9;B9AD;.FFFB/B/;FBA/B//\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1113:5741:16959\t141\t*\t0\t0\t*\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBBBBCFCCCCCFGGGGGGGGGGHHHHHHHGHHHHHHHHGHHHHGHDGHHHGGGGHHHHHHHHHHHHHHHGHHHHHGGGEGGHHHHFHHHHHHHHHHHHHHHHHHHHHHGHHGHHGGGGGHHHHHHHHHHHGHHHFHHHHHHGHGHGHGGGGCGGFGGFFFFFFFFFFFFFBFFFFFFFFFFFFFFAFFFFEAEFFFFFFFFFFF9BFFBFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFADAB-/BF.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t77\t*\t0\t0\t*\t*\t0\t0\tCGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTCTGATCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGCAACAAACACACATCCAGA\t\u003eA33\u003eFFFFFF@FFFGGGGFGGD4EGGGGGHHGFFGHFGGHHHFEFHECFHHHEHGAGBCCGCCEGGHGHEGFBFHFHHHHGGGHFHGHEGGGFEGEGG??@DBGHGGC-@FFGHFHFHB-??DA-DD@9:BEBG@B?E?A.ABBFBFA??F.FF/BFFB/B9B/9;BF9FF9FFFFFFFFFFFFFF?BB?;9EE;-;DDB9//;B-B@;ABFFEFFFF/-.9A.;//9/BF./B/..9.9:...//////\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:10130:11959\t141\t*\t0\t0\t*\t*\t0\t0\tATCAGAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGAGTTCTGTGGGGCCGGGGATCCTTATAAAAAAAATAGA\tBCCDDFFFFFFFGGGGGGGGGGGHHHHHGGHHHGGGCGGHGHGGGGHHGGGGHHHHHHGGGEGGHHHFGGGGG?E1FE?/EEHHHHHGHHGHHHHGHFHGHGHHGDGGFG2FF2?GHHHHHGCCCFHGHGHHHHGHHFEHHFGHHGHH\u003c1=DGHHHGHHGHGAGAEEDG.CGCGHC0CGBFHGFBBF0ABDDEFF@?--:BB@.;:BF;0.0:0.0:000:BF.-.------.9/;000::0;0:--.000\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t77\t*\t0\t0\t*\t*\t0\t0\tCTTTAGTAAGTATGTTCGCCTGTAATATTGAACGTAGGTGCGATAAATAATAGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGGGGGCTATTTAGGTTTTT\tAABCCFFFFFFFGGGGGGGGGGHHHHHHHFHHHHGHHGHHGGGHGGHHHHHHHGHHHHHHGGGGGHHFHHHFGHHGGFHHHHHGGGGGHHHGHGGHHHGGGGGGHGHGGGGHHGGGGHHHHHEGDDFGFFFHHGGGGGCDAFCFGFDHHHHGGHGHHHHHHBCGEHHHHGGHG.ACGEHGG0CBFFF:A;BB0;09CGF00CFFFE0AA?//CFFFFFFFFFFFFFFFBEF;A.-=A--:BBFB90;;FE.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:14540:5315\t141\t*\t0\t0\t*\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tCCCCCFFCCDCCGGGGGGGGGGHHHHHHHHHGGGGGHHHHHHHHHHHHHHHHHHHGHHHHHHHGHHHHFHFHHHGGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGGHHHFHHHGHHHHHHHHHHHHHHHHHHGHGHHHGGGFGHHHHHHHHFHHHHHF?1FHHGHGHGHGHHGGFFFFDBFBE;BCC.:BFFFFFFFFFFFFFF;AFFFFF-=-.AEDEFFFFF..9A;9FFFF0FFFFE00FFF0:BA.\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t77\t*\t0\t0\t*\t*\t0\t0\tGGATGAGGCAGGAATCAAAGACAGATACTGCGACATAGGGTGCTCCGGCTCCAGCGTCTCGCAATGCTATCGCGTGCACACCCCCCAGACGAAAATACCAAATGCATGGAGAGCTCCCGTGAGTGGTTAATAGGGTGATAGACCTGTGATCCATCGTGATGTCTTATTTAAGGGGAACGTGTGGGCTATTTAGGTTTTATGACCCTGAAGTAGGAACCAGATGTCGGATACAGTTCACTTTCTGTCTCTTA\tAABBBFFFCCCBFGGGGGGGGGHHHHHHHHGGGGGGHHHG3FFHHHFGFGGGHHHGGGEHHGGGGHHHHHHGGGGGGHGHGGGGGGGDEGGGGEGGFHHHHHHHHHHHHGGGFGEHHGGFDGGGDFFGFHHHHGFCFHHHHHEFHFHGGFFGHHGGGHHHHDGHHHFHHHFFFFGFGGG.EFGGGGFGEBFGGGFGFGGGGFFBFGGBBFFFFFB/FEFF?///;A::AABBFFFBFFFFFFFFFBFFFF/\tYT:Z:UP\n-M01368:8:000000000-A3GHV:1:1114:9184:6959\t141\t*\t0\t0\t*\t*\t0\t0\tAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCCTGTCTCTTA\tCCCCBFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHEHIHHGGGGHHHHHHHHHHHHHGHHHHHHHHGGGGGHHFHHHHHBGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHGHHHHHHHHHHHHHHHHHGHGHGHHGGGGCFFFFFFFFFFFFFFFFFFFFFFFFFF.CFFFFAF=D=EAEFFF0B:0AF-DAFBFFFFFFFFFBFFFFFFFFFFBFFFEFF9B900B0\tYT:Z:UP\n" ], "status": "failure", "test_index": 6, "time_seconds": 36.57587552070618, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/a/6/b/dataset_a6b9c267-dc51-40cd-ada0-cbc1f57b597c.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58Getting block 6 of 58Getting block 7 of 58Getting block 8 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6  Reserving size (388) for bucket 7  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 2  Calculating Z arrays for bucket 3  Entering block accumulator loop for bucket 1:  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 6  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 7  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 2:  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 6:  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 7:  bucket 1: 10%  bucket 2: 10%  Entering block accumulator loop for bucket 8:  bucket 3: 10%  bucket 4: 10%  bucket 2: 20%  bucket 6: 10%  bucket 5: 10%  bucket 1: 20%  bucket 2: 30%  bucket 7: 10%  bucket 8: 10%  bucket 3: 20%  bucket 4: 20%  bucket 2: 40%  bucket 6: 20%  bucket 1: 30%  bucket 5: 20%  bucket 2: 50%  bucket 7: 20%  bucket 3: 30%  bucket 8: 20%  bucket 4: 30%  bucket 6: 30%  bucket 1: 40%  bucket 2: 60%  bucket 5: 30%  bucket 7: 30%  bucket 3: 40%  bucket 2: 70%  bucket 8: 30%  bucket 4: 40%  bucket 1: 50%  bucket 6: 40%  bucket 5: 40%  bucket 2: 80%  bucket 3: 50%  bucket 7: 40%  bucket 1: 60%  bucket 8: 40%  bucket 4: 50%  bucket 2: 90%  bucket 6: 50%  bucket 5: 50%  bucket 3: 60%  bucket 7: 50%  bucket 1: 70%  bucket 2: 100%  bucket 8: 50%  bucket 4: 60%  Sorting block of length 165 for bucket 2  (Using difference cover)  bucket 6: 60%  bucket 5: 60%  bucket 3: 70%  bucket 1: 80%  bucket 7: 60%  bucket 8: 60%  bucket 4: 70%  bucket 6: 70%  bucket 5: 70%  bucket 3: 80%  bucket 1: 90%  bucket 7: 70%  bucket 8: 70%  bucket 4: 80%  bucket 6: 80%  bucket 5: 80%  bucket 1: 100%  bucket 3: 90%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 7: 80%  bucket 8: 80%  bucket 4: 90%  bucket 6: 90%  bucket 5: 90%  bucket 3: 100%  bucket 7: 90%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 8: 90%  bucket 4: 100%  bucket 6: 100%  Sorting block of length 328 for bucket 4  (Using difference cover)  bucket 5: 100%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 7: 100%  Sorting block of length 203 for bucket 5  (Using difference cover)  Sorting block of length 368 for bucket 7  (Using difference cover)  bucket 8: 100%  Sorting block of length 171 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 172 for bucket 8  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 340 for bucket 6Getting block 9 of 58  Reserving size (388) for bucket 9Getting block 10 of 58  Calculating Z arrays for bucket 9  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Entering block accumulator loop for bucket 10:  bucket 9: 10%  bucket 10: 10%  bucket 9: 20%  bucket 10: 20%  bucket 9: 30%  bucket 10: 30%  bucket 9: 40%  bucket 10: 40%  bucket 9: 50%  bucket 10: 50%  bucket 9: 60%  bucket 9: 70%  bucket 10: 60%  bucket 9: 80%  bucket 10: 70%  bucket 9: 90%  bucket 10: 80%  bucket 9: 100%  bucket 10: 90%  Sorting block of length 339 for bucket 9  (Using difference cover)  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 9  Sorting block time: 00:00:00Returning block of 358 for bucket 10Getting block 11 of 58  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 11: 10%Getting block 12 of 58  Reserving size (388) for bucket 12  bucket 11: 20%  Calculating Z arrays for bucket 12  bucket 11: 30%  Entering block accumulator loop for bucket 12:  bucket 11: 40%  bucket 12: 10%  bucket 11: 50%  bucket 12: 20%  bucket 11: 60%  bucket 12: 30%  bucket 11: 70%  bucket 12: 40%  bucket 11: 80%  bucket 12: 50%  bucket 11: 90%  bucket 12: 60%  bucket 12: 70%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  bucket 12: 80%  bucket 12: 90%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 306 for bucket 11  Sorting block time: 00:00:00Returning block of 186 for bucket 12Getting block 13 of 58  Reserving size (388) for bucket 13Getting block 14 of 58  Calculating Z arrays for bucket 13  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  Entering block accumulator loop for bucket 13:  bucket 13: 10%  bucket 14: 10%  bucket 14: 20%  bucket 13: 20%  bucket 14: 30%  bucket 13: 30%  bucket 14: 40%  bucket 13: 40%  bucket 14: 50%  bucket 13: 50%  bucket 14: 60%  bucket 13: 60%  bucket 14: 70%  bucket 13: 70%  bucket 14: 80%  bucket 13: 80%  bucket 14: 90%  bucket 13: 90%  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 283 for bucket 13  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 15 of 58  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 15: 10%Getting block 16 of 58  bucket 15: 20%  Reserving size (388) for bucket 16  Calculating Z arrays for bucket 16  bucket 15: 30%  Entering block accumulator loop for bucket 16:Getting block 17 of 58  bucket 15: 40%  bucket 16: 10%  Reserving size (388) for bucket 17  Calculating Z arrays for bucket 17  bucket 15: 50%  bucket 16: 20%  Entering block accumulator loop for bucket 17:  bucket 15: 60%  bucket 16: 30%  bucket 17: 10%  bucket 15: 70%  bucket 16: 40%  bucket 17: 20%  bucket 15: 80%  bucket 16: 50%  bucket 17: 30%  bucket 15: 90%  bucket 16: 60%  bucket 15: 100%  bucket 16: 70%  bucket 17: 40%  Sorting block of length 241 for bucket 15  (Using difference cover)  bucket 16: 80%  bucket 17: 50%  bucket 16: 90%  bucket 17: 60%  bucket 17: 70%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  bucket 17: 80%  bucket 17: 90%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  Sorting block time: 00:00:00Returning block of 242 for bucket 15  Sorting block time: 00:00:00Returning block of 380 for bucket 16  Sorting block time: 00:00:00Returning block of 216 for bucket 17Getting block 18 of 58  Reserving size (388) for bucket 18  Calculating Z arrays for bucket 18  Entering block accumulator loop for bucket 18:Getting block 19 of 58  Reserving size (388) for bucket 19  bucket 18: 10%  Calculating Z arrays for bucket 19  Entering block accumulator loop for bucket 19:  bucket 18: 20%Getting block 20 of 58Getting block 21 of 58  Reserving size (388) for bucket 20  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 20  Calculating Z arrays for bucket 21  bucket 19: 10%  bucket 18: 30%  Entering block accumulator loop for bucket 20:  Entering block accumulator loop for bucket 21:Getting block 22 of 58  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  bucket 19: 20%  bucket 18: 40%  bucket 20: 10%  Entering block accumulator loop for bucket 22:  bucket 21: 10%  bucket 19: 30%  bucket 20: 20%  bucket 22: 10%  bucket 18: 50%  bucket 20: 30%  bucket 21: 20%  bucket 22: 20%  bucket 19: 40%  bucket 18: 60%  bucket 20: 40%  bucket 22: 30%  bucket 21: 30%  bucket 19: 50%  bucket 22: 40%  bucket 20: 50%  bucket 18: 70%  bucket 21: 40%  bucket 19: 60%  bucket 22: 50%  bucket 20: 60%  bucket 21: 50%  bucket 18: 80%  bucket 20: 70%  bucket 22: 60%  bucket 19: 70%  bucket 21: 60%  bucket 20: 80%  bucket 22: 70%  bucket 18: 90%  bucket 19: 80%  bucket 20: 90%  bucket 21: 70%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  bucket 19: 90%  bucket 22: 80%  bucket 18: 100%  bucket 21: 80%  Sorting block of length 378 for bucket 18  (Using difference cover)  bucket 22: 90%  bucket 19: 100%  Sorting block of length 334 for bucket 19  (Using difference cover)  bucket 21: 90%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  Sorting block time: 00:00:00Returning block of 314 for bucket 20  Sorting block time: 00:00:00Returning block of 379 for bucket 18  Sorting block time: 00:00:00Returning block of 211 for bucket 21  Sorting block time: 00:00:00Returning block of 387 for bucket 22  Sorting block time: 00:00:00Returning block of 335 for bucket 19Getting block 23 of 58  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  Entering block accumulator loop for bucket 23:  bucket 23: 10%  bucket 23: 20%  bucket 23: 30%  bucket 23: 40%Getting block 24 of 58  bucket 23: 50%  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 23: 60%  bucket 23: 70%  bucket 24: 10%  bucket 23: 80%  bucket 24: 20%  bucket 23: 90%  bucket 24: 30%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  bucket 24: 40%  bucket 24: 50%  bucket 24: 60%  bucket 24: 70%  Sorting block time: 00:00:00Returning block of 239 for bucket 23  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25Getting block 26 of 58  Calculating Z arrays for bucket 25  Reserving size (388) for bucket 26  Entering block accumulator loop for bucket 25:  Calculating Z arrays for bucket 26Getting block 27 of 58  Entering block accumulator loop for bucket 26:  Reserving size (388) for bucket 27Getting block 28 of 58  Calculating Z arrays for bucket 27Getting block 29 of 58  bucket 25: 10%  Reserving size (388) for bucket 28  bucket 26: 10%  Reserving size (388) for bucket 29  Entering block accumulator loop for bucket 27:  Calculating Z arrays for bucket 28  bucket 25: 20%  Calculating Z arrays for bucket 29  bucket 26: 20%  Entering block accumulator loop for bucket 28:Getting block 30 of 58  Entering block accumulator loop for bucket 29:  bucket 25: 30%  bucket 26: 30%  Reserving size (388) for bucket 30  bucket 27: 10%  Calculating Z arrays for bucket 30  bucket 25: 40%  bucket 26: 40%  bucket 28: 10%  Entering block accumulator loop for bucket 30:  bucket 27: 20%  bucket 29: 10%  bucket 25: 50%  bucket 26: 50%  bucket 28: 20%  bucket 27: 30%  bucket 29: 20%  bucket 25: 60%  bucket 30: 10%  bucket 26: 60%  bucket 27: 40%  bucket 28: 30%  bucket 25: 70%  bucket 29: 30%  bucket 30: 20%  bucket 26: 70%  bucket 27: 50%  bucket 28: 40%  bucket 25: 80%  bucket 30: 30%  bucket 29: 40%  bucket 26: 80%  bucket 27: 60%  bucket 28: 50%  bucket 25: 90%  bucket 30: 40%  bucket 29: 50%  bucket 26: 90%  bucket 27: 70%  bucket 28: 60%  bucket 25: 100%  bucket 30: 50%  bucket 29: 60%  bucket 26: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  bucket 27: 80%  bucket 28: 70%  bucket 30: 60%  Sorting block of length 354 for bucket 26  (Using difference cover)  bucket 29: 70%  bucket 28: 80%  bucket 27: 90%  bucket 30: 70%  bucket 29: 80%  bucket 28: 90%  bucket 30: 80%  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00  bucket 28: 100%  bucket 29: 90%  bucket 30: 90%Returning block of 106 for bucket 25  Sorting block of length 253 for bucket 28  (Using difference cover)  bucket 29: 100%  bucket 30: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00  Sorting block of length 345 for bucket 30  (Using difference cover)Returning block of 355 for bucket 26  Sorting block time: 00:00:00Returning block of 335 for bucket 27  Sorting block time: 00:00:00Returning block of 254 for bucket 28  Sorting block time: 00:00:00Returning block of 290 for bucket 29  Sorting block time: 00:00:00Returning block of 346 for bucket 30Getting block 31 of 58  Reserving size (388) for bucket 31Getting block 32 of 58  Calculating Z arrays for bucket 31  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 32:  bucket 31: 10%  bucket 32: 10%  bucket 32: 20%  bucket 31: 20%  bucket 32: 30%  bucket 31: 30%  bucket 32: 40%  bucket 31: 40%  bucket 32: 50%  bucket 31: 50%  bucket 32: 60%  bucket 31: 60%  bucket 32: 70%  bucket 31: 70%  bucket 32: 80%  bucket 31: 80%  buc..me: 00:00:00Getting block 24 of 57Returning block of 350 for bucket 23  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 24: 20%  bucket 24: 30%  bucket 24: 40%  bucket 24: 50%  bucket 24: 60%  bucket 24: 70%  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)Getting block 25 of 57  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  Sorting block time: 00:00:00Returning block of 246 for bucket 24  bucket 25: 10%Getting block 26 of 57  bucket 25: 20%  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:  bucket 25: 30%  bucket 25: 40%  bucket 26: 10%  bucket 25: 50%Getting block 27 of 57  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  bucket 25: 60%  Entering block accumulator loop for bucket 27:  bucket 26: 20%  bucket 25: 70%  bucket 26: 30%  bucket 27: 10%  bucket 26: 40%  bucket 25: 80%  bucket 27: 20%  bucket 26: 50%  bucket 25: 90%  bucket 26: 60%  bucket 25: 100%  bucket 27: 30%  Sorting block of length 286 for bucket 25  (Using difference cover)  bucket 26: 70%  bucket 27: 40%  bucket 26: 80%  bucket 27: 50%  bucket 26: 90%  bucket 27: 60%  Sorting block time: 00:00:00Returning block of 287 for bucket 25  bucket 26: 100%  bucket 27: 70%  Sorting block of length 384 for bucket 26  (Using difference cover)  bucket 27: 80%  bucket 27: 90%  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 26  Sorting block time: 00:00:00Returning block of 360 for bucket 27Getting block 28 of 57  Reserving size (388) for bucket 28Getting block 29 of 57  Calculating Z arrays for bucket 28  Reserving size (388) for bucket 29  Entering block accumulator loop for bucket 28:  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 29:  bucket 28: 10%  bucket 29: 10%  bucket 28: 20%  bucket 29: 20%  bucket 28: 30%  bucket 28: 40%  bucket 29: 30%  bucket 28: 50%  bucket 29: 40%  bucket 28: 60%  bucket 29: 50%  bucket 28: 70%  bucket 29: 60%  bucket 29: 70%  bucket 28: 80%  bucket 29: 80%  bucket 28: 90%  bucket 29: 90%  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 30 of 57  Reserving size (388) for bucket 30Getting block 31 of 57  Calculating Z arrays for bucket 30  Reserving size (388) for bucket 31Getting block 32 of 57  Calculating Z arrays for bucket 31  Reserving size (388) for bucket 32  Entering block accumulator loop for bucket 30:  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 32:  bucket 30: 10%  bucket 31: 10%  bucket 30: 20%  bucket 31: 20%  bucket 32: 10%  bucket 30: 30%  bucket 31: 30%  bucket 32: 20%  bucket 30: 40%  bucket 31: 40%  bucket 32: 30%  bucket 30: 50%  bucket 31: 50%  bucket 32: 40%  bucket 30: 60%  bucket 31: 60%  bucket 32: 50%  bucket 30: 70%  bucket 31: 70%  bucket 32: 60%  bucket 30: 80%  bucket 31: 80%  bucket 32: 70%  bucket 30: 90%  bucket 31: 90%  bucket 32: 80%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  bucket 32: 90%  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)  Sorting block time: 00:00:00Returning block of 258 for bucket 30  Sorting block time: 00:00:00Returning block of 311 for bucket 31  Sorting block time: 00:00:00Returning block of 220 for bucket 32Getting block 33 of 57  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 33:Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34  bucket 33: 10%  Entering block accumulator loop for bucket 34:  bucket 34: 10%  bucket 33: 20%  bucket 34: 20%  bucket 33: 30%  bucket 34: 30%  bucket 33: 40%  bucket 34: 40%  bucket 34: 50%  bucket 33: 50%  bucket 34: 60%  bucket 33: 60%  bucket 34: 70%  bucket 34: 80%  bucket 33: 70%  bucket 34: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  bucket 33: 80%  (Using difference cover)  bucket 33: 90%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 34  Sorting block time: 00:00:00Returning block of 388 for bucket 33Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 35:  bucket 35: 10%  bucket 35: 20%  bucket 35: 30%Getting block 36 of 57  bucket 35: 40%  Reserving size (388) for bucket 36Getting block 37 of 57  Calculating Z arrays for bucket 36  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  bucket 35: 50%  Entering block accumulator loop for bucket 37:  Entering block accumulator loop for bucket 36:  bucket 37: 10%  bucket 35: 60%  bucket 36: 10%  bucket 37: 20%  bucket 35: 70%  bucket 37: 30%  bucket 36: 20%  bucket 37: 40%  bucket 35: 80%  bucket 36: 30%  bucket 37: 50%  bucket 35: 90%  bucket 36: 40%  bucket 37: 60%  bucket 36: 50%  bucket 37: 70%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  bucket 37: 80%  bucket 36: 60%  bucket 37: 90%  bucket 36: 70%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  bucket 36: 80%  bucket 36: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 35  Sorting block time: 00:00:00Returning block of 268 for bucket 37  Sorting block time: 00:00:00Returning block of 151 for bucket 36Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:  bucket 38: 10%  bucket 38: 20%  bucket 38: 30%  bucket 38: 40%  bucket 38: 50%  bucket 38: 60%  bucket 38: 70%  bucket 38: 80%  bucket 38: 90%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  Sorting block time: 00:00:00Returning block of 338 for bucket 38Getting block 39 of 57  Reserving size (388) for bucket 39Getting block 40 of 57  Calculating Z arrays for bucket 39  Reserving size (388) for bucket 40Getting block 41 of 57  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 39:  Reserving size (388) for bucket 41  Entering block accumulator loop for bucket 40:  Calculating Z arrays for bucket 41  Entering block accumulator loop for bucket 41:  bucket 39: 10%  bucket 40: 10%  bucket 41: 10%  bucket 39: 20%  bucket 40: 20%  bucket 41: 20%  bucket 39: 30%  bucket 41: 30%  bucket 40: 30%  bucket 39: 40%  bucket 41: 40%  bucket 40: 40%  bucket 39: 50%  bucket 41: 50%  bucket 40: 50%  bucket 39: 60%  bucket 40: 60%  bucket 41: 60%  bucket 39: 70%  bucket 40: 70%  bucket 41: 70%  bucket 39: 80%  bucket 40: 80%  bucket 41: 80%  bucket 39: 90%  bucket 40: 90%  bucket 41: 90%  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 40  Sorting block time: 00:00:00Returning block of 388 for bucket 39  Sorting block time: 00:00:00Returning block of 331 for bucket 41Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42  Entering block accumulator loop for bucket 42:  bucket 42: 10%  bucket 42: 20%  bucket 42: 30%  bucket 42: 40%  bucket 42: 50%  bucket 42: 60%  bucket 42: 70%  bucket 42: 80%  bucket 42: 90%  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 43:Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  bucket 43: 10%  Entering block accumulator loop for bucket 44:  bucket 43: 20%  bucket 44: 10%  bucket 43: 30%  bucket 44: 20%  bucket 43: 40%  bucket 44: 30%  bucket 43: 50%  bucket 44: 40%  bucket 43: 60%  bucket 44: 50%  bucket 43: 70%  bucket 43: 80%  bucket 44: 60%  bucket 43: 90%  bucket 44: 70%  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  bucket 44: 80%  bucket 44: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 322 for bucket 43  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  Entering block accumulator loop for bucket 45:  bucket 45: 10%  bucket 45: 20%  bucket 45: 30%  bucket 45: 40%  bucket 45: 50%  bucket 45: 60%  bucket 45: 70%  bucket 45: 80%Getting block 46 of 57  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46  bucket 45: 90%  Entering block accumulator loop for bucket 46:  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  bucket 46: 10%  bucket 46: 20%  bucket 46: 30%  Sorting block time: 00:00:00Returning block of 366 for bucket 45  bucket 46: 40%  bucket 46: 50%  bucket 46: 60%  bucket 46: 70%  bucket 46: 80%  bucket 46: 90%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47  Entering block accumulator loop for bucket 47:  bucket 47: 10%  bucket 47: 20%  bucket 47: 30%  bucket 47: 40%Getting block 48 of 57  bucket 47: 50%  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 48:  bucket 47: 60%  bucket 47: 70%  bucket 48: 10%  bucket 47: 80%  bucket 48: 20%  bucket 47: 90%  bucket 48: 30%  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  bucket 48: 40%  Sorting block time: 00:00:00Returning block of 218 for bucket 47  bucket 48: 50%  bucket 48: 60%  bucket 48: 70%  bucket 48: 80%  bucket 48: 90%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  Entering block accumulator loop for bucket 49:  bucket 49: 10%Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  bucket 49: 20%  Entering block accumulator loop for bucket 50:  bucket 49: 30%  bucket 50: 10%  bucket 49: 40%  bucket 50: 20%  bucket 49: 50%  bucket 50: 30%  bucket 49: 60%  bucket 50: 40%  bucket 49: 70%  bucket 50: 50%  bucket 49: 80%  bucket 50: 60%  bucket 49: 90%  bucket 49: 100%  bucket 50: 70%  Sorting block of length 112 for bucket 49  (Using difference cover)  bucket 50: 80%  bucket 50: 90%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  Sorting block time: 00:00:00Returning block of 113 for bucket 49  Sorting block time: 00:00:00Returning block of 276 for bucket 50Getting block 51 of 57  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 51:  bucket 51: 10%  bucket 51: 20%  bucket 51: 30%  bucket 51: 40%  bucket 51: 50%  bucket 51: 60%  bucket 51: 70%Getting block 52 of 57  Reserving size (388) for bucket 52  Calculating Z arrays for bucket 52  bucket 51: 80%  Entering block accumulator loop for bucket 52:  bucket 51: 90%  bucket 52: 10%  bucket 52: 20%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  bucket 52: 30%  bucket 52: 40%  bucket 52: 50%  bucket 52: 60%  Sorting block time: 00:00:00Returning block of 351 for bucket 51  bucket 52: 70%  bucket 52: 80%  bucket 52: 90%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 52Getting block 53 of 57  Reserving size (388) for bucket 53Getting block 54 of 57  Calculating Z arrays for bucket 53  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 53:  Entering block accumulator loop for bucket 54:  bucket 53: 10%  bucket 54: 10%  bucket 53: 20%  bucket 54: 20%  bucket 53: 30%  bucket 54: 30%  bucket 53: 40%  bucket 54: 40%  bucket 53: 50%  bucket 54: 50%  bucket 53: 60%  bucket 54: 60%  bucket 53: 70%  bucket 54: 70%  bucket 54: 80%  bucket 53: 80%  bucket 54: 90%  bucket 53: 90%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 371 for bucket 53  Sorting block time: 00:00:00Returning block of 238 for bucket 54Getting block 55 of 57  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55  Entering block accumulator loop for bucket 55:  bucket 55: 10%  bucket 55: 20%  bucket 55: 30%  bucket 55: 40%  bucket 55: 50%  bucket 55: 60%  bucket 55: 70%  bucket 55: 80%  bucket 55: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  Sorting block time: 00:00:00Returning block of 345 for bucket 55Getting block 56 of 57  Reserving size (388) for bucket 56Getting block 57 of 57  Calculating Z arrays for bucket 56  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 56:  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 56: 10%  bucket 57: 30%  bucket 57: 40%  bucket 56: 20%  bucket 57: 50%  bucket 57: 60%  bucket 56: 30%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 56: 40%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  bucket 56: 50%  bucket 56: 60%  bucket 56: 70%  bucket 56: 80%  Sorting block time: 00:00:00  bucket 56: 90%Returning block of 133 for bucket 57  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #8)" name="7" time="18.45737314224243">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 18.45737314224243, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2", "tool_version": "2.4.2+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #9)" name="8" time="36.75146007537842">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/6/3/2/dataset_63207707-0200-4b74-8739-4b2edda29e94.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2Getting block 6 of 58Getting block 7 of 58Getting block 8 of 58  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Calculating Z arrays for bucket 2  Entering block accumulator loop for bucket 1:  Reserving size (388) for bucket 6  Reserving size (388) for bucket 7  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 2:  Calculating Z arrays for bucket 7  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 5:  bucket 1: 10%  Entering block accumulator loop for bucket 6:  Entering block accumulator loop for bucket 8:  Entering block accumulator loop for bucket 7:  bucket 1: 20%  bucket 2: 10%  bucket 3: 10%  bucket 4: 10%  bucket 5: 10%  bucket 1: 30%  bucket 6: 10%  bucket 2: 20%  bucket 3: 20%  bucket 4: 20%  bucket 8: 10%  bucket 7: 10%  bucket 5: 20%  bucket 1: 40%  bucket 2: 30%  bucket 6: 20%  bucket 3: 30%  bucket 4: 30%  bucket 8: 20%  bucket 7: 20%  bucket 5: 30%  bucket 1: 50%  bucket 2: 40%  bucket 3: 40%  bucket 4: 40%  bucket 6: 30%  bucket 8: 30%  bucket 7: 30%  bucket 5: 40%  bucket 1: 60%  bucket 2: 50%  bucket 3: 50%  bucket 4: 50%  bucket 8: 40%  bucket 6: 40%  bucket 7: 40%  bucket 5: 50%  bucket 1: 70%  bucket 2: 60%  bucket 3: 60%  bucket 4: 60%  bucket 8: 50%  bucket 7: 50%  bucket 5: 60%  bucket 6: 50%  bucket 1: 80%  bucket 2: 70%  bucket 3: 70%  bucket 4: 70%  bucket 8: 60%  bucket 7: 60%  bucket 5: 70%  bucket 1: 90%  bucket 6: 60%  bucket 2: 80%  bucket 3: 80%  bucket 8: 70%  bucket 4: 80%  bucket 7: 70%  bucket 5: 80%  bucket 1: 100%  bucket 6: 70%  bucket 2: 90%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 8: 80%  bucket 3: 90%  bucket 7: 80%  bucket 4: 90%  bucket 5: 90%  bucket 6: 80%  bucket 2: 100%  bucket 8: 90%  bucket 3: 100%  bucket 7: 90%  bucket 4: 100%  Sorting block of length 165 for bucket 2  (Using difference cover)  bucket 5: 100%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 6: 90%  Sorting block of length 328 for bucket 4  (Using difference cover)  bucket 8: 100%  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 7: 100%  Sorting block of length 171 for bucket 8  (Using difference cover)  bucket 6: 100%  Sorting block of length 368 for bucket 7  (Using difference cover)  Sorting block of length 339 for bucket 6  (Using difference cover)  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00  Sorting block time: 00:00:00Returning block of 172 for bucket 8Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 340 for bucket 6Getting block 9 of 58  Reserving size (388) for bucket 9Getting block 10 of 58Getting block 11 of 58  Calculating Z arrays for bucket 9  Reserving size (388) for bucket 10  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 9:  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 10:  Entering block accumulator loop for bucket 11:  bucket 10: 10%  bucket 9: 10%  bucket 11: 10%  bucket 10: 20%  bucket 9: 20%  bucket 10: 30%  bucket 9: 30%  bucket 10: 40%  bucket 11: 20%  bucket 9: 40%  bucket 10: 50%  bucket 11: 30%  bucket 9: 50%  bucket 10: 60%  bucket 11: 40%  bucket 10: 70%  bucket 9: 60%  bucket 10: 80%  bucket 9: 70%  bucket 11: 50%  bucket 10: 90%  bucket 9: 80%  bucket 10: 100%  bucket 9: 90%  bucket 11: 60%  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  bucket 11: 70%  bucket 11: 80%  bucket 11: 90%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 358 for bucket 10  Sorting block time: 00:00:00Returning block of 340 for bucket 9  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 12 of 58  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 12: 10%Getting block 13 of 58  bucket 12: 20%  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  bucket 12: 30%  Entering block accumulator loop for bucket 13:  bucket 12: 40%  bucket 13: 10%  bucket 12: 50%  bucket 13: 20%  bucket 12: 60%  bucket 13: 30%  bucket 12: 70%  bucket 13: 40%  bucket 12: 80%  bucket 13: 50%  bucket 12: 90%  bucket 13: 60%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 13: 70%  bucket 13: 80%  bucket 13: 90%  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 186 for bucket 12  Sorting block time: 00:00:00Returning block of 283 for bucket 13Getting block 14 of 58  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 14: 20%  bucket 14: 30%  bucket 14: 40%  bucket 14: 50%  bucket 14: 60%  bucket 14: 70%  bucket 14: 80%  bucket 14: 90%  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 15 of 58  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15Getting block 16 of 58  Entering block accumulator loop for bucket 15:  Reserving size (388) for bucket 16Getting block 17 of 58  Calculating Z arrays for bucket 16  Reserving size (388) for bucket 17  bucket 15: 10%  Entering block accumulator loop for bucket 16:  Calculating Z arrays for bucket 17  bucket 15: 20%  bucket 16: 10%  bucket 15: 30%  Entering block accumulator loop for bucket 17:  bucket 16: 20%  bucket 15: 40%  bucket 17: 10%  bucket 16: 30%  bucket 15: 50%  bucket 16: 40%  bucket 15: 60%  bucket 17: 20%  bucket 16: 50%  bucket 15: 70%  bucket 16: 60%  bucket 17: 30%  bucket 15: 80%  bucket 16: 70%  bucket 17: 40%  bucket 15: 90%  bucket 16: 80%  bucket 17: 50%  bucket 15: 100%  bucket 16: 90%  Sorting block of length 241 for bucket 15  (Using difference cover)  bucket 16: 100%  bucket 17: 60%  Sorting block of length 379 for bucket 16  (Using difference cover)  bucket 17: 70%  bucket 17: 80%  Sorting block time: 00:00:00Returning block of 242 for bucket 15  bucket 17: 90%  Sorting block time: 00:00:00Returning block of 380 for bucket 16  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17Getting block 18 of 58  Reserving size (388) for bucket 18  Calculating Z arrays for bucket 18  Entering block accumulator loop for bucket 18:  bucket 18: 10%  bucket 18: 20%  bucket 18: 30%  bucket 18: 40%  bucket 18: 50%  bucket 18: 60%  bucket 18: 70%Getting block 19 of 58  bucket 18: 80%  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19  Entering block accumulator loop for bucket 19:  bucket 18: 90%  bucket 18: 100%  bucket 19: 10%  Sorting block of length 378 for bucket 18  (Using difference cover)  bucket 19: 20%  bucket 19: 30%  bucket 19: 40%  Sorting block time: 00:00:00Returning block of 379 for bucket 18  bucket 19: 50%  bucket 19: 60%  bucket 19: 70%  bucket 19: 80%  bucket 19: 90%  bucket 19: 100%  Sorting block of length 334 for bucket 19  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 19Getting block 20 of 58  Reserving size (388) for bucket 20  Calculating Z arrays for bucket 20  Entering block accumulator loop for bucket 20:  bucket 20: 10%  bucket 20: 20%  bucket 20: 30%  bucket 20: 40%  bucket 20: 50%  bucket 20: 60%  bucket 20: 70%  bucket 20: 80%  bucket 20: 90%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  Sorting block time: 00:00:00Returning block of 314 for bucket 20Getting block 21 of 58  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 21:Getting block 22 of 58  bucket 21: 10%  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  bucket 21: 20%Getting block 23 of 58  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  Entering block accumulator loop for bucket 22:  bucket 21: 30%  Entering block accumulator loop for bucket 23:  bucket 21: 40%  bucket 22: 10%  bucket 23: 10%  bucket 21: 50%  bucket 22: 20%  bucket 23: 20%  bucket 21: 60%  bucket 22: 30%  bucket 23: 30%  bucket 21: 70%  bucket 23: 40%  bucket 21: 80%  bucket 22: 40%  bucket 23: 50%  bucket 21: 90%  bucket 22: 50%  bucket 23: 60%  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  bucket 22: 60%  bucket 23: 70%  bucket 23: 80%  bucket 22: 70%  bucket 23: 90%  bucket 22: 80%  Sorting block time: 00:00:00Returning block of 211 for bucket 21  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  bucket 22: 90%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 24 of 58  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 24: 20%  bucket 24: 30%  bucket 24: 40%  bucket 24: 50%  bucket 24: 60%  bucket 24: 70%  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 25: 10%  bucket 25: 20%  bucket 25: 30%  bucket 25: 40%  bucket 25: 50%  bucket 25: 60%  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 106 for bucket 25Getting block 26 of 58  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:  bucket 26: 10%Getting block 27 of 58  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  bucket 26: 20%  Entering block accumulator loop for bucket 27:  bucket 26: 30%  bucket 27: 10%  bucket 26: 40%  bucket 27: 20%  bucket 26: 50%  bucket 27: 30%  bucket 26: 60%  bucket 27: 40%  bucket 26: 70%  bucket 27: 50%  bucket 26: 80%  bucket 27: 60%  bucket 26: 90%  bucket 27: 70%  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  bucket 27: 80%  bucket 27: 90%  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 355 for bucket 26  Sorting block time: 00:00:00Returning block of 335 for bucket 27Getting block 28 of 58  Reserving size (388) for bucket 28Getting block 29 of 58  Calculating Z arrays for bucket 28  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 28:  Entering block accumulator loop for bucket 29:  bucket 28: 10%  bucket 29: 10%  bucket 28: 20%  bucket 29: 20%  bucket 28: 30%  bucket 29: 30%  bucket 28: 40%  bucket 29: 40%  bucket 28: 50%  bucket 29: 50%  bucket 28: 60%  bucket 29: 60%  bucket 28: 70%  bucket 29: 70%  bucket 28: 80%  bucket 29: 80%  bucket 28: 90%  bucket 29: 90%  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 28  Sorting block time: 00:00:00Returning block of 290 for bucket 29Getting block 30 of 58  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 30: 20%Getting block 31 of 58  Reserving size (388) for bucket 31Getting block 32 of 58  bucket 30: 30%  Calculating Z arrays for bucket 31  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 32:  bucket 30: 40%  Entering block accumulator loop for bucket 31:  bucket 31: 10%  bucket 32: 10%  bucket 30: 50%  bucket 31: 20%  bucket 32: 20%  bucket 30: 60%  bucket 31: 30%  bucket 31: 40%  bucket 32: 30%  bucket 30: 70%  bucket 31: 50%  bucket 32: 40%  bucket 31: 60%  bucket 30: 80%  bucket 31: 70%  bucket 32: 50%  bucket 30: 90%  bucket 31: 80%  bucket 32: 60%  bucket 30: 100%  bucket 31: 90%  Sorting block of length 345 for bucket 30  (Using difference cover)  bucket 32: 70%  bucket 31: 100%  Sorting block of length 377 for bucket 31  (Using di.. 60%  bucket 24: 20%  bucket 23: 70%  bucket 24: 30%  bucket 23: 80%  bucket 23: 90%  bucket 24: 40%  bucket 23: 100%  Sorting block of length 349 for bucket 23  (Using difference cover)  bucket 24: 50%  bucket 24: 60%  bucket 24: 70%  Sorting block time: 00:00:00Returning block of 350 for bucket 23  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 25 of 57  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 25: 10%  bucket 25: 20%  bucket 25: 30%  bucket 25: 40%  bucket 25: 50%  bucket 25: 60%  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25Getting block 26 of 57  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:  bucket 26: 10%  bucket 26: 20%  bucket 26: 30%  bucket 26: 40%  bucket 26: 50%  bucket 26: 60%  bucket 26: 70%  bucket 26: 80%  bucket 26: 90%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 26Getting block 27 of 57  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 27:  Entering block accumulator loop for bucket 28:  bucket 28: 10%  bucket 27: 10%  bucket 28: 20%  bucket 27: 20%  bucket 28: 30%  bucket 28: 40%  bucket 27: 30%  bucket 28: 50%  bucket 27: 40%  bucket 28: 60%  bucket 28: 70%  bucket 27: 50%  bucket 28: 80%  bucket 27: 60%  bucket 28: 90%  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  bucket 27: 70%  Sorting block time: 00:00:00Returning block of 388 for bucket 28  bucket 27: 80%  bucket 27: 90%  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 360 for bucket 27Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29Getting block 30 of 57  Entering block accumulator loop for bucket 29:  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 29: 10%  bucket 30: 10%  bucket 30: 20%  bucket 29: 20%Getting block 31 of 57  Reserving size (388) for bucket 31  bucket 30: 30%  Calculating Z arrays for bucket 31  bucket 29: 30%  Entering block accumulator loop for bucket 31:  bucket 30: 40%  bucket 29: 40%  bucket 30: 50%  bucket 31: 10%  bucket 29: 50%  bucket 30: 60%  bucket 31: 20%  bucket 30: 70%  bucket 29: 60%  bucket 30: 80%  bucket 31: 30%  bucket 30: 90%  bucket 31: 40%  bucket 29: 70%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  bucket 31: 50%  bucket 29: 80%  bucket 31: 60%  bucket 31: 70%  bucket 29: 90%  bucket 31: 80%  Sorting block time: 00:00:00Returning block of 258 for bucket 30  bucket 31: 90%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 32 of 57  Reserving size (388) for bucket 32Getting block 33 of 57Getting block 34 of 57  Calculating Z arrays for bucket 32  Reserving size (388) for bucket 33  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 33  Calculating Z arrays for bucket 34  Entering block accumulator loop for bucket 32:  Entering block accumulator loop for bucket 33:  Entering block accumulator loop for bucket 34:  bucket 32: 10%  bucket 33: 10%  bucket 32: 20%  bucket 34: 10%  bucket 32: 30%  bucket 33: 20%  bucket 32: 40%  bucket 34: 20%  bucket 32: 50%  bucket 33: 30%  bucket 32: 60%  bucket 34: 30%  bucket 32: 70%  bucket 33: 40%  bucket 32: 80%  bucket 34: 40%  bucket 32: 90%  bucket 33: 50%  bucket 32: 100%  bucket 34: 50%  Sorting block of length 219 for bucket 32  (Using difference cover)  bucket 33: 60%  Sorting block time: 00:00:00  bucket 34: 60%Returning block of 220 for bucket 32  bucket 33: 70%  bucket 34: 70%  bucket 33: 80%  bucket 34: 80%  bucket 33: 90%  bucket 34: 90%  bucket 33: 100%  bucket 34: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  Sorting block time: 00:00:00  Sorting block of length 275 for bucket 34  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 33Returning block of 276 for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35Getting block 36 of 57  Calculating Z arrays for bucket 35  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36  Entering block accumulator loop for bucket 36:  Entering block accumulator loop for bucket 35:  bucket 36: 10%  bucket 35: 10%  bucket 36: 20%  bucket 35: 20%  bucket 36: 30%  bucket 35: 30%  bucket 35: 40%  bucket 36: 40%  bucket 35: 50%  bucket 36: 50%  bucket 35: 60%  bucket 36: 60%  bucket 35: 70%  bucket 36: 70%  bucket 35: 80%  bucket 36: 80%  bucket 35: 90%  bucket 36: 90%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 151 for bucket 36  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 37 of 57  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37Getting block 38 of 57  Entering block accumulator loop for bucket 37:  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38Getting block 39 of 57  Entering block accumulator loop for bucket 38:  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  bucket 37: 10%  bucket 38: 10%  bucket 37: 20%  Entering block accumulator loop for bucket 39:  bucket 38: 20%  bucket 39: 10%  bucket 37: 30%  bucket 38: 30%  bucket 38: 40%  bucket 39: 20%  bucket 38: 50%  bucket 37: 40%  bucket 39: 30%  bucket 38: 60%  bucket 37: 50%  bucket 39: 40%  bucket 37: 60%  bucket 39: 50%  bucket 38: 70%  bucket 37: 70%  bucket 39: 60%  bucket 38: 80%  bucket 37: 80%  bucket 39: 70%  bucket 38: 90%  bucket 37: 90%  bucket 39: 80%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 39: 90%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 338 for bucket 38  Sorting block time: 00:00:00Returning block of 268 for bucket 37  Sorting block time: 00:00:00Returning block of 388 for bucket 39Getting block 40 of 57  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 40:Getting block 41 of 57  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41  bucket 40: 10%  Entering block accumulator loop for bucket 41:  bucket 40: 20%Getting block 42 of 57  bucket 40: 30%  bucket 41: 10%  Reserving size (388) for bucket 42  bucket 40: 40%  Calculating Z arrays for bucket 42  bucket 41: 20%  bucket 40: 50%  Entering block accumulator loop for bucket 42:  bucket 41: 30%  bucket 40: 60%  bucket 42: 10%  bucket 41: 40%  bucket 40: 70%  bucket 42: 20%  bucket 41: 50%  bucket 40: 80%  bucket 42: 30%  bucket 41: 60%  bucket 40: 90%  bucket 42: 40%  bucket 41: 70%  bucket 40: 100%  bucket 42: 50%  bucket 41: 80%  Sorting block of length 379 for bucket 40  (Using difference cover)  bucket 42: 60%  bucket 41: 90%  bucket 42: 70%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 42: 80%  bucket 42: 90%  Sorting block time: 00:00:00Returning block of 380 for bucket 40  bucket 42: 100%  Sorting block of length 188 for bucket 42  Sorting block time: 00:00:00Returning block of 331 for bucket 41  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 43:  bucket 43: 10%  bucket 43: 20%  bucket 43: 30%Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:  bucket 43: 40%  bucket 44: 10%  bucket 43: 50%  bucket 44: 20%  bucket 43: 60%  bucket 44: 30%  bucket 43: 70%  bucket 44: 40%  bucket 43: 80%  bucket 44: 50%  bucket 43: 90%  bucket 44: 60%  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  bucket 44: 70%  bucket 44: 80%  bucket 44: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 322 for bucket 43  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  Entering block accumulator loop for bucket 45:  bucket 45: 10%Getting block 46 of 57  bucket 45: 20%  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46  bucket 45: 30%  Entering block accumulator loop for bucket 46:  bucket 45: 40%  bucket 45: 50%  bucket 46: 10%  bucket 45: 60%  bucket 45: 70%  bucket 46: 20%  bucket 45: 80%  bucket 45: 90%  bucket 46: 30%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  bucket 46: 40%  bucket 46: 50%  Sorting block time: 00:00:00Returning block of 366 for bucket 45  bucket 46: 60%  bucket 46: 70%  bucket 46: 80%  bucket 46: 90%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47  Entering block accumulator loop for bucket 47:Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  bucket 47: 10%  Entering block accumulator loop for bucket 48:  bucket 47: 20%  bucket 47: 30%  bucket 48: 10%  bucket 47: 40%  bucket 48: 20%  bucket 47: 50%  bucket 48: 30%  bucket 47: 60%  bucket 48: 40%  bucket 47: 70%  bucket 48: 50%  bucket 47: 80%  bucket 47: 90%  bucket 48: 60%  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  bucket 48: 70%  bucket 48: 80%  bucket 48: 90%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block time: 00:00:00Returning block of 218 for bucket 47  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  Entering block accumulator loop for bucket 49:  bucket 49: 10%  bucket 49: 20%  bucket 49: 30%  bucket 49: 40%  bucket 49: 50%  bucket 49: 60%  bucket 49: 70%  bucket 49: 80%  bucket 49: 90%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  Sorting block time: 00:00:00Returning block of 113 for bucket 49Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 50:  bucket 50: 10%  bucket 50: 20%  bucket 50: 30%  bucket 50: 40%  bucket 50: 50%  bucket 50: 60%  bucket 50: 70%  bucket 50: 80%  bucket 50: 90%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 50Getting block 51 of 57  Reserving size (388) for bucket 51Getting block 52 of 57  Calculating Z arrays for bucket 51  Reserving size (388) for bucket 52  Calculating Z arrays for bucket 52  Entering block accumulator loop for bucket 51:  Entering block accumulator loop for bucket 52:  bucket 51: 10%  bucket 52: 10%  bucket 51: 20%  bucket 52: 20%  bucket 51: 30%  bucket 52: 30%  bucket 51: 40%  bucket 52: 40%  bucket 51: 50%  bucket 52: 50%  bucket 51: 60%  bucket 52: 60%  bucket 51: 70%  bucket 52: 70%  bucket 51: 80%  bucket 52: 80%  bucket 52: 90%  bucket 51: 90%  bucket 52: 100%  bucket 51: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  Sorting block of length 350 for bucket 51  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 52  Sorting block time: 00:00:00Returning block of 351 for bucket 51Getting block 53 of 57  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  Entering block accumulator loop for bucket 53:  bucket 53: 10%  bucket 53: 20%  bucket 53: 30%  bucket 53: 40%  bucket 53: 50%  bucket 53: 60%  bucket 53: 70%  bucket 53: 80%  bucket 53: 90%  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 54:  bucket 54: 10%  bucket 54: 20%  bucket 54: 30%  bucket 54: 40%  bucket 54: 50%  bucket 54: 60%  bucket 54: 70%  bucket 54: 80%  bucket 54: 90%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  Sorting block time: 00:00:00Returning block of 238 for bucket 54Getting block 55 of 57  Reserving size (388) for bucket 55Getting block 56 of 57  Calculating Z arrays for bucket 55  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 55:  Entering block accumulator loop for bucket 56:  bucket 56: 10%Getting block 57 of 57  bucket 55: 10%  bucket 56: 20%  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  bucket 55: 20%  Entering block accumulator loop for bucket 57:  bucket 56: 30%  bucket 57: 10%  bucket 56: 40%  bucket 55: 30%  bucket 57: 20%  bucket 56: 50%  bucket 55: 40%  bucket 57: 30%  bucket 56: 60%  bucket 55: 50%  bucket 57: 40%  bucket 56: 70%  bucket 55: 60%  bucket 57: 50%  bucket 56: 80%  bucket 57: 60%  bucket 55: 70%  bucket 56: 90%  bucket 57: 70%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  bucket 55: 80%  bucket 57: 80%  bucket 55: 90%  bucket 57: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56  Sorting block time: 00:00:00Returning block of 133 for bucket 57  Sorting block time: 00:00:00Returning block of 345 for bucket 55Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      7 (7.22%) aligned discordantly 1 time    ----    90 pairs aligned 0 times concordantly or discordantly; of these:      180 mates make up the pairs; of these:        156 (86.67%) aligned 0 times        24 (13.33%) aligned exactly 1 time        0 (0.00%) aligned >1 times22.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2 (Test #10)" name="9" time="34.64517664909363">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/1/d/f/dataset_1dfa868a-e0c7-4047-aad9-c36681abdc88.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58  Calculating Z arrays for bucket 1Getting block 6 of 58Getting block 7 of 58Getting block 8 of 58  Reserving size (388) for bucket 2  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6  Entering block accumulator loop for bucket 1:  Reserving size (388) for bucket 7  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 2  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Calculating Z arrays for bucket 7  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 2:  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  bucket 1: 10%  Entering block accumulator loop for bucket 7:  Entering block accumulator loop for bucket 8:  bucket 2: 10%  bucket 1: 20%  bucket 3: 10%  bucket 4: 10%  bucket 5: 10%  bucket 6: 10%  bucket 8: 10%  bucket 2: 20%  bucket 1: 30%  bucket 7: 10%  bucket 3: 20%  bucket 4: 20%  bucket 5: 20%  bucket 6: 20%  bucket 8: 20%  bucket 2: 30%  bucket 1: 40%  bucket 3: 30%  bucket 7: 20%  bucket 4: 30%  bucket 5: 30%  bucket 6: 30%  bucket 2: 40%  bucket 8: 30%  bucket 1: 50%  bucket 3: 40%  bucket 4: 40%  bucket 7: 30%  bucket 5: 40%  bucket 6: 40%  bucket 2: 50%  bucket 3: 50%  bucket 8: 40%  bucket 1: 60%  bucket 4: 50%  bucket 5: 50%  bucket 7: 40%  bucket 6: 50%  bucket 2: 60%  bucket 3: 60%  bucket 8: 50%  bucket 1: 70%  bucket 4: 60%  bucket 5: 60%  bucket 7: 50%  bucket 6: 60%  bucket 2: 70%  bucket 3: 70%  bucket 1: 80%  bucket 4: 70%  bucket 8: 60%  bucket 5: 70%  bucket 6: 70%  bucket 7: 60%  bucket 2: 80%  bucket 3: 80%  bucket 1: 90%  bucket 4: 80%  bucket 5: 80%  bucket 8: 70%  bucket 6: 80%  bucket 7: 70%  bucket 2: 90%  bucket 3: 90%  bucket 1: 100%  bucket 4: 90%  bucket 5: 90%  bucket 8: 80%  bucket 6: 90%  bucket 7: 80%  bucket 2: 100%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 3: 100%  bucket 4: 100%  bucket 5: 100%  bucket 8: 90%  bucket 6: 100%  Sorting block of length 165 for bucket 2  (Using difference cover)  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 7: 90%  Sorting block time: 00:00:00  Sorting block of length 328 for bucket 4  (Using difference cover)  Sorting block time: 00:00:00  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 8: 100%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 7: 100%Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block of length 171 for bucket 8  (Using difference cover)  Sorting block of length 368 for bucket 7  (Using difference cover)Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 172 for bucket 8  Sorting block time: 00:00:00Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 340 for bucket 6Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 9:  bucket 9: 10%  bucket 9: 20%  bucket 9: 30%  bucket 9: 40%  bucket 9: 50%  bucket 9: 60%  bucket 9: 70%  bucket 9: 80%Getting block 10 of 58  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  bucket 9: 90%  Entering block accumulator loop for bucket 10:  bucket 9: 100%Getting block 11 of 58  Sorting block of length 339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00  Reserving size (388) for bucket 11  bucket 10: 10%Returning block of 340 for bucket 9  Calculating Z arrays for bucket 11  bucket 10: 20%  Entering block accumulator loop for bucket 11:  bucket 10: 30%  bucket 11: 10%  bucket 11: 20%  bucket 10: 40%  bucket 11: 30%  bucket 10: 50%  bucket 11: 40%  bucket 11: 50%  bucket 10: 60%  bucket 11: 60%  bucket 10: 70%  bucket 11: 70%  bucket 11: 80%  bucket 10: 80%  bucket 11: 90%  bucket 10: 90%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  Sorting block time: 00:00:00Returning block of 306 for bucket 11  Sorting block time: 00:00:00Returning block of 358 for bucket 10Getting block 12 of 58  Reserving size (388) for bucket 12Getting block 13 of 58  Calculating Z arrays for bucket 12  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13Getting block 14 of 58  Entering block accumulator loop for bucket 13:  Reserving size (388) for bucket 14  Entering block accumulator loop for bucket 12:  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:  bucket 13: 10%  bucket 12: 10%  bucket 14: 10%  bucket 13: 20%  bucket 12: 20%  bucket 13: 30%  bucket 14: 20%  bucket 13: 40%  bucket 12: 30%  bucket 14: 30%  bucket 13: 50%  bucket 12: 40%  bucket 13: 60%  bucket 14: 40%  bucket 13: 70%  bucket 12: 50%  bucket 14: 50%  bucket 13: 80%  bucket 12: 60%  bucket 13: 90%  bucket 14: 60%  bucket 13: 100%  bucket 12: 70%  Sorting block of length 282 for bucket 13  bucket 14: 70%  (Using difference cover)  bucket 12: 80%  bucket 14: 80%  bucket 12: 90%  bucket 14: 90%Getting block 15 of 58  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15  bucket 12: 100%  bucket 14: 100%  Sorting block time: 00:00:00  Entering block accumulator loop for bucket 15:  Sorting block of length 185 for bucket 12  (Using difference cover)  Sorting block of length 339 for bucket 14  (Using difference cover)Returning block of 283 for bucket 13  bucket 15: 10%  bucket 15: 20%  bucket 15: 30%  bucket 15: 40%  Sorting block time: 00:00:00Returning block of 186 for bucket 12  bucket 15: 50%  bucket 15: 60%  bucket 15: 70%  bucket 15: 80%  bucket 15: 90%  bucket 15: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  Sorting block time: 00:00:00Returning block of 242 for bucket 15  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 16 of 58  Reserving size (388) for bucket 16  Calculating Z arrays for bucket 16  Entering block accumulator loop for bucket 16:  bucket 16: 10%  bucket 16: 20%Getting block 17 of 58  Reserving size (388) for bucket 17  bucket 16: 30%  Calculating Z arrays for bucket 17  bucket 16: 40%  Entering block accumulator loop for bucket 17:  bucket 16: 50%  bucket 17: 10%  bucket 16: 60%  bucket 17: 20%  bucket 16: 70%  bucket 17: 30%  bucket 16: 80%  bucket 17: 40%  bucket 16: 90%  bucket 17: 50%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  bucket 17: 60%  bucket 17: 70%  Sorting block time: 00:00:00Returning block of 380 for bucket 16  bucket 17: 80%  bucket 17: 90%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17Getting block 18 of 58  Reserving size (388) for bucket 18Getting block 19 of 58  Calculating Z arrays for bucket 18  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19  Entering block accumulator loop for bucket 18:  Entering block accumulator loop for bucket 19:Getting block 20 of 58  bucket 18: 10%  Reserving size (388) for bucket 20  bucket 19: 10%  Calculating Z arrays for bucket 20  bucket 18: 20%  bucket 19: 20%  Entering block accumulator loop for bucket 20:  bucket 19: 30%  bucket 20: 10%  bucket 18: 30%  bucket 19: 40%  bucket 20: 20%  bucket 19: 50%  bucket 18: 40%  bucket 20: 30%  bucket 19: 60%  bucket 18: 50%  bucket 19: 70%  bucket 18: 60%  bucket 20: 40%  bucket 19: 80%  bucket 18: 70%  bucket 19: 90%  bucket 18: 80%  bucket 20: 50%  bucket 19: 100%  Sorting block of length 334 for bucket 19  (Using difference cover)  bucket 18: 90%  bucket 20: 60%  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  bucket 20: 70%  Sorting block time: 00:00:00  bucket 20: 80%Returning block of 335 for bucket 19  Sorting block time: 00:00:00Returning block of 379 for bucket 18  bucket 20: 90%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  Sorting block time: 00:00:00Returning block of 314 for bucket 20Getting block 21 of 58  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 21:  bucket 21: 10%  bucket 21: 20%  bucket 21: 30%  bucket 21: 40%  bucket 21: 50%Getting block 22 of 58  bucket 21: 60%  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  Entering block accumulator loop for bucket 22:  bucket 21: 70%  bucket 22: 10%  bucket 21: 80%  bucket 21: 90%  bucket 22: 20%  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  bucket 22: 30%  bucket 22: 40%  bucket 22: 50%  bucket 22: 60%  Sorting block time: 00:00:00Returning block of 211 for bucket 21  bucket 22: 70%  bucket 22: 80%  bucket 22: 90%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 23 of 58  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  Entering block accumulator loop for bucket 23:  bucket 23: 10%  bucket 23: 20%  bucket 23: 30%  bucket 23: 40%  bucket 23: 50%  bucket 23: 60%  bucket 23: 70%  bucket 23: 80%  bucket 23: 90%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23Getting block 24 of 58  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 24: 20%  bucket 24: 30%  bucket 24: 40%  bucket 24: 50%  bucket 24: 60%  bucket 24: 70%  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 25: 10%  bucket 25: 20%  bucket 25: 30%  bucket 25: 40%  bucket 25: 50%  bucket 25: 60%  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 106 for bucket 25Getting block 26 of 58  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:  bucket 26: 10%Getting block 27 of 58  bucket 26: 20%  Reserving size (388) for bucket 27Getting block 28 of 58  Calculating Z arrays for bucket 27  bucket 26: 30%  Reserving size (388) for bucket 28Getting block 29 of 58  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 27:  Reserving size (388) for bucket 29  bucket 26: 40%  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 28:  bucket 26: 50%  Entering block accumulator loop for bucket 29:  bucket 27: 10%  bucket 28: 10%  bucket 26: 60%  bucket 27: 20%  bucket 29: 10%  bucket 28: 20%  bucket 26: 70%  bucket 27: 30%  bucket 29: 20%  bucket 28: 30%  bucket 26: 80%  bucket 27: 40%  bucket 29: 30%  bucket 28: 40%  bucket 26: 90%  bucket 27: 50%  bucket 29: 40%  bucket 26: 100%  bucket 28: 50%  Sorting block of length 354 for bucket 26  (Using difference cover)  bucket 27: 60%  bucket 29: 50%  bucket 28: 60%  bucket 27: 70%  bucket 29: 60%  bucket 28: 70%  bucket 27: 80%  Sorting block time: 00:00:00  bucket 29: 70%Returning block of 355 for bucket 26  bucket 28: 80%  bucket 27: 90%  bucket 29: 80%  bucket 28: 90%  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  bucket 29: 90%  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 27  Sorting block time: 00:00:00Returning block of 254 for bucket 28  Sorting block time: 00:00:00Returning block of 290 for bucket 29Getting block 30 of 58  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 30:  bucket 30: 10%  bucket 30: 20%  bucket 30: 30%  bucket 30: 40%  bucket 30: 50%  bucket 30: 60%  bucket 30: 70%  bucket 30: 80%  bucket 30: 90%  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)  Sorting block time: 00:00:00Returning block of 346 for bucket 30Getting block 31 of 58  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31Getting block 32 of 58  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 32:  bucket 32: 10%  bucket 31: 10%  bucket 32: 20%  bucket 31: 20%  bucket 32: 30%  bucket 32: 40%  bucket 31: 30%  bucket 32: 50%  bucket 31: 40%  bucket 32: 60%  bucket 31: 50%  bucket 32: 70%  bucket 31: 60%  bucket 32: 80%  bucket 31: 70%  bucket 32: 90%  buc..me: 00:00:00Returning block of 350 for bucket 23Getting block 24 of 57  Reserving size (388) for bucket 24Getting block 25 of 57  Calculating Z arrays for bucket 24  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 24:  Entering block accumulator loop for bucket 25:  bucket 25: 10%  bucket 24: 10%  bucket 25: 20%  bucket 24: 20%  bucket 25: 30%  bucket 24: 30%  bucket 25: 40%  bucket 24: 40%  bucket 25: 50%  bucket 24: 50%  bucket 25: 60%  bucket 24: 60%  bucket 25: 70%  bucket 24: 70%  bucket 25: 80%  bucket 24: 80%  bucket 25: 90%  bucket 24: 90%  bucket 25: 100%  Sorting block of length 286 for bucket 25  bucket 24: 100%  (Using difference cover)  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 26 of 57  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:Getting block 27 of 57  bucket 26: 10%  Reserving size (388) for bucket 27  bucket 26: 20%  Calculating Z arrays for bucket 27Getting block 28 of 57  Entering block accumulator loop for bucket 27:  Reserving size (388) for bucket 28  bucket 26: 30%  Calculating Z arrays for bucket 28  bucket 26: 40%  bucket 27: 10%  Entering block accumulator loop for bucket 28:  bucket 26: 50%  bucket 27: 20%  bucket 28: 10%  bucket 26: 60%  bucket 27: 30%  bucket 28: 20%  bucket 26: 70%  bucket 27: 40%  bucket 28: 30%  bucket 26: 80%  bucket 27: 50%  bucket 28: 40%  bucket 26: 90%  bucket 27: 60%  bucket 28: 50%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  bucket 27: 70%  bucket 28: 60%  bucket 27: 80%  bucket 28: 70%  bucket 27: 90%  bucket 28: 80%  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  bucket 28: 90%  Sorting block time: 00:00:00Returning block of 385 for bucket 26  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 360 for bucket 27  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 29:  bucket 29: 10%  bucket 29: 20%  bucket 29: 30%  bucket 29: 40%  bucket 29: 50%  bucket 29: 60%  bucket 29: 70%  bucket 29: 80%  bucket 29: 90%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29Getting block 30 of 57  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30Getting block 31 of 57  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 30:  Entering block accumulator loop for bucket 31:  bucket 30: 10%  bucket 30: 20%  bucket 31: 10%  bucket 30: 30%  bucket 31: 20%  bucket 30: 40%  bucket 31: 30%  bucket 30: 50%  bucket 31: 40%  bucket 30: 60%  bucket 31: 50%  bucket 30: 70%  bucket 31: 60%  bucket 30: 80%  bucket 31: 70%  bucket 30: 90%  bucket 31: 80%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  bucket 31: 90%  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  Sorting block time: 00:00:00Returning block of 258 for bucket 30  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 32 of 57  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 32:Getting block 33 of 57  bucket 32: 10%  Reserving size (388) for bucket 33  bucket 32: 20%  Calculating Z arrays for bucket 33  bucket 32: 30%  Entering block accumulator loop for bucket 33:  bucket 32: 40%  bucket 32: 50%  bucket 33: 10%  bucket 32: 60%  bucket 33: 20%  bucket 32: 70%  bucket 33: 30%  bucket 32: 80%  bucket 33: 40%  bucket 32: 90%  bucket 33: 50%  bucket 32: 100%  bucket 33: 60%  Sorting block of length 219 for bucket 32  (Using difference cover)  bucket 33: 70%  bucket 33: 80%  bucket 33: 90%  Sorting block time: 00:00:00Returning block of 220 for bucket 32  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 33Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 34:  Entering block accumulator loop for bucket 35:  bucket 34: 10%  bucket 35: 10%  bucket 34: 20%  bucket 35: 20%  bucket 34: 30%  bucket 35: 30%  bucket 34: 40%  bucket 35: 40%  bucket 34: 50%  bucket 34: 60%  bucket 34: 70%  bucket 35: 50%  bucket 34: 80%  bucket 35: 60%  bucket 34: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  bucket 35: 70%  bucket 35: 80%  bucket 35: 90%  bucket 35: 100%  Sorting block of length 350 for bucket 35  Sorting block time: 00:00:00  (Using difference cover)Returning block of 276 for bucket 34  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36  Entering block accumulator loop for bucket 36:  bucket 36: 10%  bucket 36: 20%  bucket 36: 30%  bucket 36: 40%  bucket 36: 50%  bucket 36: 60%  bucket 36: 70%  bucket 36: 80%  bucket 36: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 151 for bucket 36Getting block 37 of 57  Reserving size (388) for bucket 37Getting block 38 of 57Getting block 39 of 57  Calculating Z arrays for bucket 37  Reserving size (388) for bucket 38  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 38  Calculating Z arrays for bucket 39  Entering block accumulator loop for bucket 37:  Entering block accumulator loop for bucket 38:  Entering block accumulator loop for bucket 39:  bucket 37: 10%  bucket 38: 10%  bucket 39: 10%  bucket 37: 20%  bucket 37: 30%  bucket 38: 20%  bucket 39: 20%  bucket 37: 40%  bucket 39: 30%  bucket 38: 30%  bucket 37: 50%  bucket 39: 40%  bucket 38: 40%  bucket 39: 50%  bucket 37: 60%  bucket 39: 60%  bucket 38: 50%  bucket 37: 70%  bucket 39: 70%  bucket 38: 60%  bucket 37: 80%  bucket 39: 80%  bucket 38: 70%  bucket 37: 90%  bucket 39: 90%  bucket 38: 80%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  bucket 38: 90%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  Sorting block time: 00:00:00Returning block of 268 for bucket 37  Sorting block time: 00:00:00Returning block of 388 for bucket 39  Sorting block time: 00:00:00Returning block of 338 for bucket 38Getting block 40 of 57  Reserving size (388) for bucket 40Getting block 41 of 57  Calculating Z arrays for bucket 40  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41  Entering block accumulator loop for bucket 40:  Entering block accumulator loop for bucket 41:  bucket 41: 10%  bucket 40: 10%  bucket 41: 20%  bucket 40: 20%  bucket 41: 30%  bucket 40: 30%  bucket 41: 40%  bucket 40: 40%  bucket 41: 50%  bucket 40: 50%  bucket 41: 60%  bucket 40: 60%  bucket 41: 70%  bucket 40: 70%  bucket 41: 80%  bucket 40: 80%  bucket 41: 90%  bucket 40: 90%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  Sorting block time: 00:00:00Returning block of 331 for bucket 41  Sorting block time: 00:00:00Returning block of 380 for bucket 40Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42  Entering block accumulator loop for bucket 42:  bucket 42: 10%Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  bucket 42: 20%  Entering block accumulator loop for bucket 43:  bucket 42: 30%  bucket 43: 10%  bucket 42: 40%  bucket 43: 20%  bucket 42: 50%  bucket 43: 30%  bucket 42: 60%  bucket 43: 40%  bucket 42: 70%  bucket 43: 50%  bucket 42: 80%  bucket 43: 60%  bucket 42: 90%  bucket 43: 70%  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  bucket 43: 80%  bucket 43: 90%  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42  Sorting block time: 00:00:00Returning block of 322 for bucket 43Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:Getting block 45 of 57  Reserving size (388) for bucket 45  bucket 44: 10%  Calculating Z arrays for bucket 45  bucket 44: 20%  Entering block accumulator loop for bucket 45:  bucket 44: 30%  bucket 45: 10%  bucket 44: 40%  bucket 45: 20%  bucket 44: 50%  bucket 45: 30%  bucket 44: 60%  bucket 44: 70%  bucket 45: 40%  bucket 44: 80%  bucket 45: 50%  bucket 44: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  bucket 45: 60%  bucket 45: 70%  bucket 45: 80%  Sorting block time: 00:00:00Returning block of 367 for bucket 44  bucket 45: 90%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  Sorting block time: 00:00:00Returning block of 366 for bucket 45Getting block 46 of 57  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46Getting block 47 of 57  Entering block accumulator loop for bucket 46:  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47Getting block 48 of 57  Entering block accumulator loop for bucket 47:  Reserving size (388) for bucket 48  bucket 46: 10%  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 48:  bucket 46: 20%  bucket 47: 10%  bucket 48: 10%  bucket 46: 30%  bucket 47: 20%  bucket 48: 20%  bucket 46: 40%  bucket 48: 30%  bucket 47: 30%  bucket 46: 50%  bucket 48: 40%  bucket 46: 60%  bucket 47: 40%  bucket 48: 50%  bucket 46: 70%  bucket 48: 60%  bucket 47: 50%  bucket 48: 70%  bucket 47: 60%  bucket 46: 80%  bucket 48: 80%  bucket 46: 90%  bucket 48: 90%  bucket 47: 70%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  bucket 47: 80%  bucket 47: 90%  bucket 48: 100%  bucket 47: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block of length 217 for bucket 47  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 46  Sorting block time: 00:00:00Returning block of 218 for bucket 47  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49Getting block 50 of 57  Calculating Z arrays for bucket 49  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 49:  Entering block accumulator loop for bucket 50:  bucket 50: 10%  bucket 49: 10%  bucket 50: 20%  bucket 49: 20%  bucket 50: 30%  bucket 49: 30%  bucket 50: 40%  bucket 49: 40%  bucket 50: 50%  bucket 49: 50%  bucket 50: 60%  bucket 49: 60%  bucket 50: 70%  bucket 49: 70%  bucket 49: 80%  bucket 50: 80%  bucket 49: 90%  bucket 50: 90%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  Sorting block time: 00:00:00Returning block of 113 for bucket 49  Sorting block time: 00:00:00Returning block of 276 for bucket 50Getting block 51 of 57  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51Getting block 52 of 57  Reserving size (388) for bucket 52  Calculating Z arrays for bucket 52  Entering block accumulator loop for bucket 52:  Entering block accumulator loop for bucket 51:  bucket 52: 10%  bucket 51: 10%  bucket 52: 20%  bucket 51: 20%  bucket 52: 30%  bucket 51: 30%  bucket 52: 40%  bucket 51: 40%  bucket 52: 50%  bucket 51: 50%  bucket 52: 60%  bucket 51: 60%  bucket 52: 70%  bucket 51: 70%  bucket 52: 80%  bucket 51: 80%  bucket 52: 90%  bucket 51: 90%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 52  Sorting block time: 00:00:00Returning block of 351 for bucket 51Getting block 53 of 57  Reserving size (388) for bucket 53Getting block 54 of 57  Calculating Z arrays for bucket 53  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 53:  Entering block accumulator loop for bucket 54:  bucket 54: 10%  bucket 53: 10%  bucket 54: 20%  bucket 53: 20%  bucket 54: 30%  bucket 53: 30%  bucket 54: 40%  bucket 53: 40%  bucket 54: 50%  bucket 53: 50%  bucket 54: 60%  bucket 53: 60%  bucket 54: 70%  bucket 53: 70%  bucket 54: 80%  bucket 53: 80%  bucket 54: 90%  bucket 53: 90%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 238 for bucket 54  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 55 of 57  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55  Entering block accumulator loop for bucket 55:  bucket 55: 10%  bucket 55: 20%  bucket 55: 30%  bucket 55: 40%  bucket 55: 50%  bucket 55: 60%  bucket 55: 70%  bucket 55: 80%  bucket 55: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  Sorting block time: 00:00:00Returning block of 345 for bucket 55Getting block 56 of 57  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 56:  bucket 56: 10%  bucket 56: 20%  bucket 56: 30%  bucket 56: 40%  bucket 56: 50%  bucket 56: 60%  bucket 56: 70%  bucket 56: 80%  bucket 56: 90%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2Wrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2Re-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL index100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      7 (7.22%) aligned discordantly 1 time    ----    90 pairs aligned 0 times concordantly or discordantly; of these:      180 mates make up the pairs; of these:        156 (86.67%) aligned 0 times        24 (13.33%) aligned exactly 1 time        0 (0.00%) aligned >1 times22.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa (Test #1)" name="0" time="38.061763525009155">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.052 sec; CPU: 0.011 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 localref.fa /galaxy/server/database/objects/b/1/f/dataset_b1f6b635-1e65-4edb-a96d-c27dcf5975f2.dat[main] Real time: 0.015 sec; CPU: 0.039 sec[bwa_aln_core] convert to sequence coordinate... 0.00 sec[bwa_aln_core] refine gapped alignments... 0.00 sec[bwa_aln_core] print alignments... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa samse localref.fa first.sai /galaxy/server/database/objects/b/1/f/dataset_b1f6b635-1e65-4edb-a96d-c27dcf5975f2.dat[main] Real time: 0.007 sec; CPU: 0.004 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa (Test #2)" name="1" time="35.770994901657104">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.047 sec; CPU: 0.011 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.03 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 localref.fa /galaxy/server/database/objects/f/7/a/dataset_f7aa0572-bd99-4380-9459-dbe2bacaa639.dat[main] Real time: 0.015 sec; CPU: 0.038 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 localref.fa /galaxy/server/database/objects/5/0/e/dataset_50ef33f8-b034-4e13-a4b9-ceeb31b0546a.dat[main] Real time: 0.017 sec; CPU: 0.039 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/f/7/a/dataset_f7aa0572-bd99-4380-9459-dbe2bacaa639.dat /galaxy/server/database/objects/5/0/e/dataset_50ef33f8-b034-4e13-a4b9-ceeb31b0546a.dat[main] Real time: 0.010 sec; CPU: 0.005 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa (Test #3)" name="2" time="37.085200786590576">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.051 sec; CPU: 0.011 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 localref.fa /galaxy/server/database/objects/5/0/a/dataset_50afed62-a95c-400a-b758-10f517a1810b.dat[main] Real time: 0.015 sec; CPU: 0.041 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.03 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 localref.fa /galaxy/server/database/objects/e/2/3/dataset_e23d1dcf-a365-45e8-83c4-cce3c59efd52.dat[main] Real time: 0.015 sec; CPU: 0.035 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/5/0/a/dataset_50afed62-a95c-400a-b758-10f517a1810b.dat /galaxy/server/database/objects/e/2/3/dataset_e23d1dcf-a365-45e8-83c4-cce3c59efd52.dat[main] Real time: 0.012 sec; CPU: 0.006 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa (Test #4)" name="3" time="33.38607454299927">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.056 sec; CPU: 0.012 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 -b -1 localref.fa /galaxy/server/database/objects/2/c/8/dataset_2c8dba0d-f862-4881-8bc6-7922b25cc1d9.dat[main] Real time: 0.028 sec; CPU: 0.042 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.03 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 -b -2 localref.fa /galaxy/server/database/objects/2/c/8/dataset_2c8dba0d-f862-4881-8bc6-7922b25cc1d9.dat[main] Real time: 0.020 sec; CPU: 0.033 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe localref.fa first.sai second.sai /galaxy/server/database/objects/2/c/8/dataset_2c8dba0d-f862-4881-8bc6-7922b25cc1d9.dat /galaxy/server/database/objects/2/c/8/dataset_2c8dba0d-f862-4881-8bc6-7922b25cc1d9.dat[main] Real time: 0.013 sec; CPU: 0.007 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa (Test #5)" name="4" time="38.09873580932617">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.052 sec; CPU: 0.011 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.04 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 localref.fa /galaxy/server/database/objects/5/c/e/dataset_5cec28fd-0a1a-4a01-b349-68cd621c6b9f.dat[main] Real time: 0.017 sec; CPU: 0.041 sec[bwa_aln] 17bp reads: max_diff = 2[bwa_aln] 38bp reads: max_diff = 3[bwa_aln] 64bp reads: max_diff = 4[bwa_aln] 93bp reads: max_diff = 5[bwa_aln] 124bp reads: max_diff = 6[bwa_aln] 157bp reads: max_diff = 7[bwa_aln] 190bp reads: max_diff = 8[bwa_aln] 225bp reads: max_diff = 9[bwa_aln_core] calculate SA coordinate... 0.03 sec[bwa_aln_core] write to the disk... 0.00 sec[bwa_aln_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa aln -t 8 localref.fa /galaxy/server/database/objects/9/6/b/dataset_96b2c8b3-a310-4585-a6e7-fcdd6795fe21.dat[main] Real time: 0.015 sec; CPU: 0.036 sec[bwa_sai2sam_pe_core] convert to sequence coordinate... [infer_isize] fail to infer insert size: too few good pairs[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] changing coordinates of 0 alignments.[bwa_sai2sam_pe_core] align unmapped mate...[bwa_sai2sam_pe_core] time elapses: 0.00 sec[bwa_sai2sam_pe_core] refine gapped alignments... 0.00 sec[bwa_sai2sam_pe_core] print alignments... 0.00 sec[bwa_sai2sam_pe_core] 100 sequences have been processed.[main] Version: 0.7.17-r1188[main] CMD: bwa sampe -r @RG\tID:rg1\tPL:CAPILLARY localref.fa first.sai second.sai /galaxy/server/database/objects/5/c/e/dataset_5cec28fd-0a1a-4a01-b349-68cd621c6b9f.dat /galaxy/server/database/objects/9/6/b/dataset_96b2c8b3-a310-4585-a6e7-fcdd6795fe21.dat[main] Real time: 0.008 sec; CPU: 0.004 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem (Test #1)" name="0" time="40.766552686691284">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.054 sec; CPU: 0.013 sec[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)[M::mem_pestat] mean and std.dev: (192.97, 35.99)[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 8 -v 1 localref.fa /galaxy/server/database/objects/c/f/4/dataset_cf485f69-1fb7-4380-ae58-96947c62c319.dat /galaxy/server/database/objects/d/9/f/dataset_d9f1d766-366c-4e69-a826-2cee0f8dee94.dat[main] Real time: 0.016 sec; CPU: 0.031 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem (Test #2)" name="1" time="34.153804063797">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.058 sec; CPU: 0.014 sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 8 -v 1 localref.fa /galaxy/server/database/objects/1/5/1/dataset_151e50ef-1905-49e7-8bba-90dbdb835d09.dat[main] Real time: 0.017 sec; CPU: 0.020 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem (Test #3)" name="2" time="35.578502893447876">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index localref.fa[main] Real time: 0.054 sec; CPU: 0.011 sec[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)[M::mem_pestat] mean and std.dev: (192.97, 35.99)[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 8 -v 1 localref.fa /galaxy/server/database/objects/5/6/4/dataset_5644873f-6246-4f48-a0e2-1064f135e0bd.dat /galaxy/server/database/objects/0/0/c/dataset_00c9cd4d-7d07-4d44-9783-691a18a2cf16.dat[main] Real time: 0.016 sec; CPU: 0.033 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem (Test #4)" name="3" time="39.1058623790741">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a is localref.fa[main] Real time: 0.060 sec; CPU: 0.012 sec[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (171, 199, 227)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (59, 339)[M::mem_pestat] mean and std.dev: (192.97, 35.99)[M::mem_pestat] low and high boundaries for proper pairs: (3, 395)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[main] Version: 0.7.17-r1188[main] CMD: bwa mem -t 8 -v 1 -R @RG\tID:rg1\tPL:CAPILLARY\tLB:AARDVARK-1 localref.fa /galaxy/server/database/objects/6/9/a/dataset_69ab84ff-cf47-4422-90f9-7fc2fe32d482.dat /galaxy/server/database/objects/a/3/3/dataset_a33697cf-b375-4ca0-87a2-fd4017056979.dat[main] Real time: 0.018 sec; CPU: 0.031 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #1)" name="0" time="47.589295864105225">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "386a8db6ae915871",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/d/e/8/dataset_de8f821b-5f6e-418f-9fcf-3a6e1edb7f49.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/284/working/dataset_d756b66a-2653-450e-95c4-374fa56c41f1_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/284/working/dataset_d756b66a-2653-450e-95c4-374fa56c41f1_files\u0027    --quiet --extract  --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/284/working/dataset_d756b66a-2653-450e-95c4-374fa56c41f1_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/284/working/dataset_d756b66a-2653-450e-95c4-374fa56c41f1_files\u0027/*\\.html output.html",  "command_version": "",  "create_time": "2023-02-07T22:22:28.381613",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-f4nz9",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "1f2143e6cde27e06",  "inputs": {   "input_file": {    "id": "386a8db6ae915871",    "src": "hda",    "uuid": "de8f821b-5f6e-418f-9fcf-3a6e1edb7f49"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675808564.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:22:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675808562.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:22:42"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "32641.0000000",    "title": "Memory Allocated (MB)",    "value": "32641"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "30174247cb68ab94",    "src": "hda",    "uuid": "d756b66a-2653-450e-95c4-374fa56c41f1"   },   "text_file": {    "id": "722716fe9cd1b78d",    "src": "hda",    "uuid": "caed530b-e99f-44d5-bf1b-654df49cb916"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:22:57.754011",  "user_email": "tests@fake.org" }, "output_problems": [  "Output text_file:  different than expected, difference (using diff):\n( /tmp/tmpimjmn9y0fastqc_data.txt v. /tmp/tmp12sptdlafastqc_data.txt )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-##FastQC\t0.11.9\n+##FastQC\t0.11.8\n \u003e\u003eBasic Statistics\tpass\n #Measure\tValue\n Filename\t1000trimmed_fastq\n@@ -420,5 +420,5 @@\n 90-91\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 92-93\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 94-95\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-96-97\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-\u003e\u003eEND_MODULE\n+96-97\t0.47910295616717635\t0.0\t0.0\t0.0\t0.0\n+\u003e\u003eEND_MODULE\n" ], "status": "failure", "test_index": 0, "time_seconds": 47.589295864105225, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #2)" name="1" time="33.64723348617554">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "contaminants": {   "id": "8177125399ce1645",   "src": "hda"  },  "input_file": {   "id": "8872ef9ed04e3951",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/3/f/dataset_53f415e1-4bc9-4e8e-96e1-37bd98323171.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/287/working/dataset_485eaec7-de66-45d6-8de6-ebc298b71d74_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/287/working/dataset_485eaec7-de66-45d6-8de6-ebc298b71d74_files\u0027 --contaminants \u0027/galaxy/server/database/objects/e/0/a/dataset_e0afbeb9-57c3-44f4-b104-33eba92a1982.dat\u0027    --quiet --extract  --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/287/working/dataset_485eaec7-de66-45d6-8de6-ebc298b71d74_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/287/working/dataset_485eaec7-de66-45d6-8de6-ebc298b71d74_files\u0027/*\\.html output.html",  "command_version": "",  "create_time": "2023-02-07T22:23:16.701946",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-2cn8c",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "21810b6dcf34223f",  "inputs": {   "contaminants": {    "id": "8177125399ce1645",    "src": "hda",    "uuid": "e0afbeb9-57c3-44f4-b104-33eba92a1982"   },   "input_file": {    "id": "8872ef9ed04e3951",    "src": "hda",    "uuid": "53f415e1-4bc9-4e8e-96e1-37bd98323171"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675808600.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:23:20"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675808598.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:23:18"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "32641.0000000",    "title": "Memory Allocated (MB)",    "value": "32641"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "9f51d00df89d00be",    "src": "hda",    "uuid": "485eaec7-de66-45d6-8de6-ebc298b71d74"   },   "text_file": {    "id": "aaafbeb33dd7beb1",    "src": "hda",    "uuid": "f3b09fe1-b039-43e8-b57b-be3518c11386"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:23:31.613060",  "user_email": "tests@fake.org" }, "output_problems": [  "Output text_file:  different than expected, difference (using diff):\n( /tmp/tmpmrup47oofastqc_data_contaminants.txt v. /tmp/tmpaf_gl3v5fastqc_data_contaminants.txt )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-##FastQC\t0.11.9\n+##FastQC\t0.11.8\n \u003e\u003eBasic Statistics\tpass\n #Measure\tValue\n Filename\t1000trimmed_fastq\n@@ -420,5 +420,5 @@\n 90-91\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 92-93\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 94-95\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-96-97\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-\u003e\u003eEND_MODULE\n+96-97\t0.47910295616717635\t0.0\t0.0\t0.0\t0.0\n+\u003e\u003eEND_MODULE\n" ], "status": "failure", "test_index": 1, "time_seconds": 33.64723348617554, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #3)" name="2" time="35.58708071708679">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adapters": {   "id": "bf677ecbc3902cd7",   "src": "hda"  },  "input_file": {   "id": "dbaa181a9a6d5479",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/c/4/dataset_3c41619e-3a73-4391-91f8-8e987984396b.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/290/working/dataset_d2c62e2e-b565-498c-a93f-dedc67b1230b_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/290/working/dataset_d2c62e2e-b565-498c-a93f-dedc67b1230b_files\u0027  --adapters \u0027/galaxy/server/database/objects/c/4/3/dataset_c43e1cd2-c05e-40b0-86d1-411f2a3e9341.dat\u0027   --quiet --extract  --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/290/working/dataset_d2c62e2e-b565-498c-a93f-dedc67b1230b_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/290/working/dataset_d2c62e2e-b565-498c-a93f-dedc67b1230b_files\u0027/*\\.html output.html",  "command_version": "",  "create_time": "2023-02-07T22:23:51.743613",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4cfvk",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "30cf94b7c5a9a996",  "inputs": {   "adapters": {    "id": "bf677ecbc3902cd7",    "src": "hda",    "uuid": "c43e1cd2-c05e-40b0-86d1-411f2a3e9341"   },   "input_file": {    "id": "dbaa181a9a6d5479",    "src": "hda",    "uuid": "3c41619e-3a73-4391-91f8-8e987984396b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675808636.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:23:56"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675808633.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:23:53"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "32641.0000000",    "title": "Memory Allocated (MB)",    "value": "32641"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "356a2be9de996da1",    "src": "hda",    "uuid": "d2c62e2e-b565-498c-a93f-dedc67b1230b"   },   "text_file": {    "id": "5be0534d546c6cd7",    "src": "hda",    "uuid": "563372b7-b2d3-450c-beb4-39dc00ce4eea"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:24:07.234666",  "user_email": "tests@fake.org" }, "output_problems": [  "Output text_file:  different than expected, difference (using diff):\n( /tmp/tmppb59u9azfastqc_data_adapters.txt v. /tmp/tmpntq23q6ffastqc_data_adapters.txt )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-##FastQC\t0.11.9\n+##FastQC\t0.11.8\n \u003e\u003eBasic Statistics\tpass\n #Measure\tValue\n Filename\t1000trimmed_fastq\n@@ -369,49 +369,49 @@\n \u003e\u003eAdapter Content\tpass\n #Position\tIllumina Single End Apapter 1\tIllumina Single End Apapter 2\tIllumina Single End PCR Primer 1\tIllumina Single End PCR Primer 2\tIllumina Single End Sequencing Primer\tIllumina Paired End Adapter 1\tIllumina Paired End Adapter 2\tIllumina Paried End PCR Primer 1\tIllumina Paired End PCR Primer 2\tIllumina Paried End Sequencing Primer 1\tIllumina Paired End Sequencing Primer 2\tIllumina DpnII expression Adapter 1\tIllumina DpnII expression Adapter 2\tIllumina DpnII expression PCR Primer 1\tIllumina DpnII expression PCR Primer 2\tIllumina DpnII expression Sequencing Primer\tIllumina NlaIII expression Adapter 1\tIllumina NlaIII expression Adapter 2\tIllumina NlaIII expression PCR Primer 1\tIllumina NlaIII expression PCR Primer 2\tIllumina NlaIII expression Sequencing Primer\tIllumina Small RNA Adapter 1\tIllumina Small RNA Adapter 2\tIllumina Small RNA RT Primer\tIllumina Small RNA PCR Primer 1\tIllumina Small RNA PCR Primer 2\tIllumina Small RNA Sequencing Primer\tIllumina Multiplexing Adapter 1\tIllumina Multiplexing Adapter 2\tIllumina Multiplexing PCR Primer 1.01\tIllumina Multiplexing PCR Primer 2.01\tIllumina Multiplexing Read1 Sequencing Primer\tIllumina Multiplexing Index Sequencing Primer\tIllumina Multiplexing Read2 Sequencing Primer\tIllumina PCR Primer Index 1\tIllumina PCR Primer Index 2\tIllumina PCR Primer Index 3\tIllumina PCR Primer Index 4\tIllumina PCR Primer Index 5\tIllumina PCR Primer Index 6\tIllumina PCR Primer Index 7\tIllumina PCR Primer Index 8\tIllumina PCR Primer Index 9\tIllumina PCR Primer Index 10\tIllumina PCR Primer Index 11\tIllumina PCR Primer Index 12\tIllumina DpnII Gex Adapter 1\tIllumina DpnII Gex Adapter 1.01\tIllumina DpnII Gex Adapter 2\tIllumina DpnII Gex Adapter 2.01\tIllumina DpnII Gex PCR Primer 1\tIllumina DpnII Gex PCR Primer 2\tIllumina DpnII Gex Sequencing Primer\tIllumina NlaIII Gex Adapter 1.01\tIllumina NlaIII Gex Adapter 1.02\tIllumina NlaIII Gex Adapter 2.01\tIllumina NlaIII Gex Adapter 2.02\tIllumina NlaIII Gex PCR Primer 1\tIllumina NlaIII Gex PCR Primer 2\tIllumina NlaIII Gex Sequencing Primer\tIllumina Small RNA RT Primer\tIllumina 5p RNA Adapter\tIllumina RNA Adapter1\tIllumina Small RNA 3p Adapter 1\tIllumina Small RNA PCR Primer 1\tIllumina Small RNA PCR Primer 2\tIllumina Small RNA Sequencing Primer\tTruSeq Universal Adapter\tTruSeq Adapter, Index 1\tTruSeq Adapter, Index 2\tTruSeq Adapter, Index 3\tTruSeq Adapter, Index 4\tTruSeq Adapter, Index 5\tTruSeq Adapter, Index 6\tTruSeq Adapter, Index 7\tTruSeq Adapter, Index 8\tTruSeq Adapter, Index 9\tTruSeq Adapter, Index 10\tTruSeq Adapter, Index 11\tTruSeq Adapter, Index 12\tIllumina RNA RT Primer\tIllumina RNA PCR Primer\tRNA PCR Primer, Index 1\tRNA PCR Primer, Index 2\tRNA PCR Primer, Index 3\tRNA PCR Primer, Index 4\tRNA PCR Primer, Index 5\tRNA PCR Primer, Index 6\tRNA PCR Primer, Index 7\tRNA PCR Primer, Index 8\tRNA PCR Primer, Index 9\tRNA PCR Primer, Index 10\tRNA PCR Primer, Index 11\tRNA PCR Primer, Index 12\tRNA PCR Primer, Index 13\tRNA PCR Primer, Index 14\tRNA PCR Primer, Index 15\tRNA PCR Primer, Index 16\tRNA PCR Primer, Index 17\tRNA PCR Primer, Index 18\tRNA PCR Primer, Index 19\tRNA PCR Primer, Index 20\tRNA PCR Primer, Index 21\tRNA PCR Primer, Index 22\tRNA PCR Primer, Index 23\tRNA PCR Primer, Index 24\tRNA PCR Primer, Index 25\tRNA PCR Primer, Index 26\tRNA PCR Primer, Index 27\tRNA PCR Primer, Index 28\tRNA PCR Primer, Index 29\tRNA PCR Primer, Index 30\tRNA PCR Primer, Index 31\tRNA PCR Primer, Index 32\tRNA PCR Primer, Index 33\tRNA PCR Primer, Index 34\tRNA PCR Primer, Index 35\tRNA PCR Primer, Index 36\tRNA PCR Primer, Index 37\tRNA PCR Primer, Index 38\tRNA PCR Primer, Index 39\tRNA PCR Primer, Index 40\tRNA PCR Primer, Index 41\tRNA PCR Primer, Index 42\tRNA PCR Primer, Index 43\tRNA PCR Primer, Index 44\tRNA PCR Primer, Index 45\tRNA PCR Primer, Index 46\tRNA PCR Primer, Index 47\tRNA PCR Primer, Index 48\tABI Dynabead EcoP Oligo\tABI Solid3 Adapter A\tABI Solid3 Adapter B\tABI Solid3 5\u0027 AMP Primer\tABI Solid3 3\u0027 AMP Primer\tABI Solid3 EF1 alpha Sense Primer\tABI Solid3 EF1 alpha Antisense Primer\tABI Solid3 GAPDH Forward Primer\tABI Solid3 GAPDH Reverse Primer\n 1\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-2\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-3\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-4\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-5\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-6\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-7\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-8\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-9\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-10\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-11\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-12\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-13\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n-14\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n********\n*SNIP *\n********\n+23\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+24\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+25\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+26\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+27\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+28\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+29\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+30\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+31\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+32\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+33\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+34\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+35\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+36\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+37\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+38\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+39\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+40\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+41\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+42\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+43\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+44\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+45\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.020387359836901122\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+46\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.040774719673802244\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\t0.0\n+\u003e\u003eEND_MODULE\n" ], "status": "failure", "test_index": 2, "time_seconds": 35.58708071708679, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #4)" name="3" time="33.82509756088257">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "4ba1f2f3d3ddc22d",   "src": "hda"  },  "limits": {   "id": "62f9d6a1962d9cde",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/8/d/dataset_98d4cf62-566e-4bd1-9a05-3bf3b12f57ec.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/293/working/dataset_2958b770-cb39-453e-b939-e9e857a85cc2_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/293/working/dataset_2958b770-cb39-453e-b939-e9e857a85cc2_files\u0027   --limits \u0027/galaxy/server/database/objects/f/f/2/dataset_ff26b9f0-ec87-4b35-9a2e-21c720b4e9e2.dat\u0027  --quiet --extract  --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/293/working/dataset_2958b770-cb39-453e-b939-e9e857a85cc2_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/293/working/dataset_2958b770-cb39-453e-b939-e9e857a85cc2_files\u0027/*\\.html output.html",  "command_version": "",  "create_time": "2023-02-07T22:24:26.325196",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pp7gg",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "b3094bbe6d72b4c4",  "inputs": {   "input_file": {    "id": "4ba1f2f3d3ddc22d",    "src": "hda",    "uuid": "98d4cf62-566e-4bd1-9a05-3bf3b12f57ec"   },   "limits": {    "id": "62f9d6a1962d9cde",    "src": "hda",    "uuid": "ff26b9f0-ec87-4b35-9a2e-21c720b4e9e2"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675808670.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:24:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675808667.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:24:27"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "32641.0000000",    "title": "Memory Allocated (MB)",    "value": "32641"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "d5f048c7e6003fe0",    "src": "hda",    "uuid": "2958b770-cb39-453e-b939-e9e857a85cc2"   },   "text_file": {    "id": "38c2426254fd6ff5",    "src": "hda",    "uuid": "c282588a-266d-4cfd-8691-95d3fe260eed"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "min_length": "\"\"",   "nogroup": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:24:41.123513",  "user_email": "tests@fake.org" }, "output_problems": [  "Output text_file:  different than expected, difference (using diff):\n( /tmp/tmpbx4upfk8fastqc_data_customlimits.txt v. /tmp/tmp610e70i8fastqc_data_customlimits.txt )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-##FastQC\t0.11.9\n+##FastQC\t0.11.8\n \u003e\u003eBasic Statistics\tpass\n #Measure\tValue\n Filename\t1000trimmed_fastq\n@@ -420,7 +420,7 @@\n 90-91\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 92-93\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 94-95\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-96-97\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n+96-97\t0.47910295616717635\t0.0\t0.0\t0.0\t0.0\n \u003e\u003eEND_MODULE\n \u003e\u003eKmer Content\tpass\n \u003e\u003eEND_MODULE\n" ], "status": "failure", "test_index": 3, "time_seconds": 33.82509756088257, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #5)" name="4" time="35.36021566390991">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "11100ff578a46cdf",   "src": "hda"  },  "kmers": "3",  "limits": {   "id": "56cec50d6f47c990",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/8/7/f/dataset_87f297ac-0cef-4708-bcc7-96d26f1161df.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/296/working/dataset_4b89df18-12d6-4306-a50c-070dd3dbc3a9_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/296/working/dataset_4b89df18-12d6-4306-a50c-070dd3dbc3a9_files\u0027   --limits \u0027/galaxy/server/database/objects/9/c/9/dataset_9c9f2c3a-d288-4b3e-85c4-1882a8866884.dat\u0027  --quiet --extract  --kmers 3 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/296/working/dataset_4b89df18-12d6-4306-a50c-070dd3dbc3a9_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/296/working/dataset_4b89df18-12d6-4306-a50c-070dd3dbc3a9_files\u0027/*\\.html output.html",  "command_version": "",  "create_time": "2023-02-07T22:25:01.635926",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-92xzp",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "fdfea9f32b032f2e",  "inputs": {   "input_file": {    "id": "11100ff578a46cdf",    "src": "hda",    "uuid": "87f297ac-0cef-4708-bcc7-96d26f1161df"   },   "limits": {    "id": "56cec50d6f47c990",    "src": "hda",    "uuid": "9c9f2c3a-d288-4b3e-85c4-1882a8866884"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675808706.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:25:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675808703.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:25:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "32641.0000000",    "title": "Memory Allocated (MB)",    "value": "32641"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "b096fdf0c4f869b8",    "src": "hda",    "uuid": "4b89df18-12d6-4306-a50c-070dd3dbc3a9"   },   "text_file": {    "id": "73f4f6b82e51fb98",    "src": "hda",    "uuid": "4329604b-5365-41c7-9f42-d6d3d7acbfc9"   }  },  "params": {   "__input_ext": "\"fastq\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"3\"",   "min_length": "\"\"",   "nogroup": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:25:16.592550",  "user_email": "tests@fake.org" }, "output_problems": [  "Output text_file:  different than expected, difference (using diff):\n( /tmp/tmpevntv9unfastqc_data_kmer.txt v. /tmp/tmp1ch0sqk7fastqc_data_kmer.txt )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-##FastQC\t0.11.9\n+##FastQC\t0.11.8\n \u003e\u003eBasic Statistics\tpass\n #Measure\tValue\n Filename\t1000trimmed_fastq\n@@ -420,7 +420,7 @@\n 90-91\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 92-93\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 94-95\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-96-97\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n+96-97\t0.47910295616717635\t0.0\t0.0\t0.0\t0.0\n \u003e\u003eEND_MODULE\n \u003e\u003eKmer Content\twarn\n #Sequence\tCount\tPValue\tObs/Exp Max\tMax Obs/Exp Position\n" ], "status": "failure", "test_index": 4, "time_seconds": 35.36021566390991, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #6)" name="5" time="32.34692144393921">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "27e80d5bfa9e104b",   "src": "hda"  },  "min_length": "108" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/0/7/2/dataset_0727dc30-b1dc-41c5-8bdd-c26498ac03b4.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/298/working/dataset_c82bc907-e7fd-49e5-815c-48768899548a_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/298/working/dataset_c82bc907-e7fd-49e5-815c-48768899548a_files\u0027    --quiet --extract --min_length 108  --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/298/working/dataset_c82bc907-e7fd-49e5-815c-48768899548a_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/298/working/dataset_c82bc907-e7fd-49e5-815c-48768899548a_files\u0027/*\\.html output.html",  "command_version": "",  "create_time": "2023-02-07T22:25:35.042280",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-kzfn9",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "d230b52b38af523e",  "inputs": {   "input_file": {    "id": "27e80d5bfa9e104b",    "src": "hda",    "uuid": "0727dc30-b1dc-41c5-8bdd-c26498ac03b4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675808739.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:25:39"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675808737.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:25:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "32641.0000000",    "title": "Memory Allocated (MB)",    "value": "32641"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "7f0c02a21a848c79",    "src": "hda",    "uuid": "c82bc907-e7fd-49e5-815c-48768899548a"   },   "text_file": {    "id": "83fec29fbd2492a2",    "src": "hda",    "uuid": "72f9e925-10a3-4f6c-b9d1-bdfd719f7e58"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"108\"",   "nogroup": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:25:49.187066",  "user_email": "tests@fake.org" }, "output_problems": [  "Output text_file:  different than expected, difference (using diff):\n( /tmp/tmpfjvskynafastqc_data_min_length.txt v. /tmp/tmp7n2lxgtcfastqc_data_min_length.txt )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-##FastQC\t0.11.9\n+##FastQC\t0.11.8\n \u003e\u003eBasic Statistics\tpass\n #Measure\tValue\n Filename\t1000trimmed_fastq\n@@ -420,7 +420,7 @@\n 90-91\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 92-93\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 94-95\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-96-97\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n+96-97\t0.47910295616717635\t0.0\t0.0\t0.0\t0.0\n 98-99\t0.0\t0.0\t0.0\t0.0\t0.0\n 100-101\t0.0\t0.0\t0.0\t0.0\t0.0\n 102-103\t0.0\t0.0\t0.0\t0.0\t0.0\n" ], "status": "failure", "test_index": 5, "time_seconds": 32.34692144393921, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #7)" name="6" time="33.56218338012695">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "c37714b0e60c447c",   "src": "hda"  },  "nogroup": true }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/a/6/dataset_9a690798-1367-4ab4-ab57-b8cb2a268f27.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/300/working/dataset_228a755b-830d-466c-aa63-0a60a258b310_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/300/working/dataset_228a755b-830d-466c-aa63-0a60a258b310_files\u0027    --quiet --extract --nogroup --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/300/working/dataset_228a755b-830d-466c-aa63-0a60a258b310_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/300/working/dataset_228a755b-830d-466c-aa63-0a60a258b310_files\u0027/*\\.html output.html",  "command_version": "",  "create_time": "2023-02-07T22:26:06.303589",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-278mx",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "829742f09ba8458c",  "inputs": {   "input_file": {    "id": "c37714b0e60c447c",    "src": "hda",    "uuid": "9a690798-1367-4ab4-ab57-b8cb2a268f27"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675808771.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:26:11"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675808768.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:26:08"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "32641.0000000",    "title": "Memory Allocated (MB)",    "value": "32641"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "4b546264f68133c3",    "src": "hda",    "uuid": "228a755b-830d-466c-aa63-0a60a258b310"   },   "text_file": {    "id": "d9be795d131e9bb7",    "src": "hda",    "uuid": "00d2dd67-735e-4557-b5ed-ca9a3a513e5a"   }  },  "params": {   "__input_ext": "\"fastq\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "\"true\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:26:22.767260",  "user_email": "tests@fake.org" }, "output_problems": [  "Output text_file:  different than expected, difference (using diff):\n( /tmp/tmp2adz_gsmfastqc_data_nogroup.txt v. /tmp/tmpbll1ps3ifastqc_data_nogroup.txt )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-##FastQC\t0.11.9\n+##FastQC\t0.11.8\n \u003e\u003eBasic Statistics\tpass\n #Measure\tValue\n Filename\t1000trimmed_fastq\n@@ -697,5 +697,5 @@\n 94\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 95\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n 96\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-97\t0.4689092762487258\t0.0\t0.0\t0.0\t0.0\n-\u003e\u003eEND_MODULE\n+97\t0.4892966360856269\t0.0\t0.0\t0.0\t0.0\n+\u003e\u003eEND_MODULE\n" ], "status": "failure", "test_index": 6, "time_seconds": 33.56218338012695, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #8)" name="7" time="26.812294960021973">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "5f7cdca60be1cbef",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/3/c/dataset_23c30807-d1d4-44db-9d34-bfdcf7126165.dat\u0027 \u0027hisat_output_1_bam\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/302/working/dataset_c81b96f6-de8d-4af7-b214-8f66b8a099cc_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/302/working/dataset_c81b96f6-de8d-4af7-b214-8f66b8a099cc_files\u0027    --quiet --extract  --kmers 7 -f \u0027bam\u0027 \u0027hisat_output_1_bam\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/302/working/dataset_c81b96f6-de8d-4af7-b214-8f66b8a099cc_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/302/working/dataset_c81b96f6-de8d-4af7-b214-8f66b8a099cc_files\u0027/*\\.html output.html",  "command_version": null,  "create_time": "2023-02-07T22:26:41.026694",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-wf5kq",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "a23eb1628837e135",  "inputs": {   "input_file": {    "id": "5f7cdca60be1cbef",    "src": "hda",    "uuid": "23c30807-d1d4-44db-9d34-bfdcf7126165"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "1e29f1a21461794a",    "src": "hda",    "uuid": "c81b96f6-de8d-4af7-b214-8f66b8a099cc"   },   "text_file": {    "id": "be58ecc1168d2f6e",    "src": "hda",    "uuid": "d93ed4ef-3073-4ef0-b16a-6081ea2e8b4e"   }  },  "params": {   "__input_ext": "\"bam\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "\"false\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:26:50.076412",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 7, "time_seconds": 26.812294960021973, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.72+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #1)" name="0" time="49.73289966583252">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #2)" name="1" time="35.578564405441284">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #3)" name="2" time="33.52312874794006">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #4)" name="3" time="34.35296010971069">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #5)" name="4" time="35.037291288375854">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #6)" name="5" time="33.87346124649048">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #7)" name="6" time="33.31875681877136">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc (Test #8)" name="7" time="28.361371994018555">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "9027ca6c7529a75b",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/a/f/dataset_1af4bd61-d4f4-44e6-83f5-c9c46acefa70.dat\u0027 \u0027hisat_output_1_bam\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/jobs_directory/000/282/working/dataset_bfaafb73-a9ca-4485-a45a-4dbb4f5e256e_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/jobs_directory/000/282/working/dataset_bfaafb73-a9ca-4485-a45a-4dbb4f5e256e_files\u0027   --threads ${GALAXY_SLOTS:-2} --quiet --extract  --kmers 7 -f \u0027bam\u0027 \u0027hisat_output_1_bam\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/282/working/dataset_bfaafb73-a9ca-4485-a45a-4dbb4f5e256e_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/jobs_directory/000/282/working/dataset_bfaafb73-a9ca-4485-a45a-4dbb4f5e256e_files\u0027/*\\.html output.html",  "command_version": null,  "create_time": "2023-02-07T22:21:59.815611",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-b42f6",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "da16dd769d256860",  "inputs": {   "input_file": {    "id": "9027ca6c7529a75b",    "src": "hda",    "uuid": "1af4bd61-d4f4-44e6-83f5-c9c46acefa70"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "c71ee2a667b1cc75",    "src": "hda",    "uuid": "bfaafb73-a9ca-4485-a45a-4dbb4f5e256e"   },   "text_file": {    "id": "7ac9504c5b52fb01",    "src": "hda",    "uuid": "a296b1ea-b7e6-418f-9c7d-67d8985477b2"   }  },  "params": {   "__input_ext": "\"bam\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "\"false\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:22:10.364399",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 7, "time_seconds": 28.361371994018555, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc", "tool_version": "0.73+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper (Test #1)" name="0" time="33.69817304611206">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_d_wrapper (Test #2)" name="1" time="35.804346561431885">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2 (Test #1)" name="0" time="9.61793565750122">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 9.61793565750122, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2", "tool_version": "1.3.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2 (Test #2)" name="1" time="43.4837372303009">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2 (Test #3)" name="2" time="35.57383441925049">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2 (Test #4)" name="3" time="31.4133517742157">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2 (Test #5)" name="4" time="30.45392680168152">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2 (Test #6)" name="5" time="31.34788942337036">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/devteam/lastz/lastz_wrapper_2 (Test #7)" name="6" time="30.64211869239807">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth (Test #1)" name="0" time="59.19338512420654">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "c73b9a2a2214a125",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "2668e8d52ad50d88",   "src": "hda"  },  "single_or_paired|input_mate2": {   "id": "dcad9d80ee719ac8",   "src": "hda"  },  "single_or_paired|single_or_paired_opts": "paired" }, "job": {  "command_line": "mkdir index_dir \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/2/b/7/dataset_2b7feb10-68e2-455f-9ec4-9abf35635d2b.dat\u0027 index_dir/genome.fa \u0026\u0026 bwameth.py index index_dir/genome.fa \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/8/a/d/dataset_8adc5929-e8c1-411a-ab36-5f3a33573e3b.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/4/b/e/dataset_4be4e82f-7af3-4c33-8c44-93b19340f043.dat\u0027 input_r.fastq.gz \u0026\u0026  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference \u0027index_dir/genome.fa\u0027   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -",  "command_version": "bwa-meth.py 0.2.2",  "create_time": "2023-02-07T23:24:50.204852",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8llgp",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "af5af6d58f26093d",  "inputs": {   "input_mate1": {    "id": "2668e8d52ad50d88",    "src": "hda",    "uuid": "8adc5929-e8c1-411a-ab36-5f3a33573e3b"   },   "input_mate2": {    "id": "dcad9d80ee719ac8",    "src": "hda",    "uuid": "4be4e82f-7af3-4c33-8c44-93b19340f043"   },   "reference": {    "id": "1e66239bc1286ab6",    "src": "hda",    "uuid": "2b7feb10-68e2-455f-9ec4-9abf35635d2b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675812312.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:25:12"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675812310.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:25:10"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "25769.0000000",    "title": "Memory Allocated (MB)",    "value": "25769"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "b2c7680aea7d7176",    "src": "hda",    "uuid": "447b3c4b-5c5b-4f57-a10f-9ae99d9e3f21"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 811, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 809, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 810, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"paired\"}"  },  "state": "ok",  "stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.81 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.18 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.136 sec; CPU: 1.041 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.007 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.107 sec; CPU: 0.038 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.81 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.18 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.136 sec; CPU: 1.041 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.007 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.107 sec; CPU: 0.038 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:25:25.385143",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_3hcbr6qb.sam v. /tmp/history_bam_converted_to_sam_0v60yxp1.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,9 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:chrREF\tLN:900000\n @RG\tID:input_\tSM:input_\n-@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.0\tCL:\"/usr/users/ga002/soranzon/miniconda3/envs/__bwameth@0.2.0/bin/bwameth.py -t 1 --reference index_dir/genome.fa input_f.fastq input_r.fastq\"\n+@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.2\tCL:\"/usr/local/bin/bwameth.py -t 8 --reference index_dir/genome.fa input_f.fastq.gz input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bwa-meth\tVN:1.10\tCL:samtools view -u -\n+@PG\tID:samtools.1\tPN:samtools\tPP:samtools\tVN:1.10\tCL:samtools sort -@ 8 -T /galaxy/server/database/jobs_directory/000/595/tmp -O bam -o output.bam -\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t163\tchrREF\t26002\t60\t101M\t=\t26025\t124\tCAAAATATATCAATCAAAAAAACATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACA\tBBBFFFFFFFFFFIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIFIFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFBFFF\tNM:i:1\tMD:Z:50C50\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:GA\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t83\tchrREF\t26025\t60\t101M\t=\t26002\t-124\tATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACATAATTTCAAAAAAATCAAACACC\tB0\u0027\u0027B\u003c\u003c\u003c00FB7\u003c000\u0027BBB0B\u003c0FFFFFFFFFFFFFFFFFBFFB\u003c7FFIFFFBBB\u003cFFB\u003c\u003c7FFIFFFFFBBFF\u003cIIIIIFFBIIFFFFFFBFFFFBBB\tNM:i:1\tMD:Z:27C73\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:CT\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:6662:24968\t99\tchrREF\t26991\t60\t101M\t=\t26992\t102\tAGGTGTCGTTTAATTGTTTAGGTTTATGGTATTGTGTTTCGTTTTTTTGGTATTTGTGAGGGTAGAATTGTTTTTGGGTTTTAATTTTTTTAAGTATGGGA\tBBBFFFFFFFFFFIIBFFIFBBFFFFIB\u003cFFFI\u003cFBFFFFBFFIIIII77BFFIIBFBFBBBFBBFFFF\u003cBBFFF\u002707BBBBFFFFFFFFFFB0\u003cBF####\tNM:i:0\tMD:Z:101\tMC:Z:101M\tAS:i:101\tXS:i:19\tRG:Z:input_\tYC:Z:CT\tYD:Z:f\n" ], "status": "failure", "test_index": 0, "time_seconds": 59.19338512420654, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.02 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.81 seconds elapse.[bwa_index] Update BWT... 0.02 sec[bwa_index] Pack forward-only FASTA... 0.01 sec[bwa_index] Construct SA from BWT and Occ... 0.18 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 1.136 sec; CPU: 1.041 secconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing: index_dir/genome.fa.bwameth.c2t[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.007 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -[main] Real time: 0.107 sec; CPU: 0.038 secrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 8  index_dir/genome.fa.bwameth.c2t -
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth (Test #2)" name="1" time="50.37960243225098">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "d561d6237d1df2d6",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "aae7738a41ceeacd",   "src": "hdca"  },  "single_or_paired|single_or_paired_opts": "paired_collection" }, "job": {  "command_line": "mkdir index_dir \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/4/b/9/dataset_4b9f2273-cf9d-4c30-a88e-d4f18c0801f1.dat\u0027 index_dir/genome.fa \u0026\u0026 bwameth.py index index_dir/genome.fa \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/6/8/6/dataset_68644e9e-901f-4bf9-83fe-9cb7a7a872f0.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/5/f/6/dataset_5f680fd5-540e-418f-8bc0-d14cc9b18a37.dat\u0027 input_r.fastq.gz \u0026\u0026  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference \u0027index_dir/genome.fa\u0027   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -",  "command_version": "bwa-meth.py 0.2.2",  "create_time": "2023-02-07T23:25:49.529019",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bx7fm",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "17671bf8d2314159",  "inputs": {   "input_mate11": {    "id": "f4af9edcf97e02e5",    "src": "hda",    "uuid": "68644e9e-901f-4bf9-83fe-9cb7a7a872f0"   },   "input_mate12": {    "id": "338482675fb3ba6c",    "src": "hda",    "uuid": "5f680fd5-540e-418f-8bc0-d14cc9b18a37"   },   "reference": {    "id": "5729aa128b65d935",    "src": "hda",    "uuid": "4b9f2273-cf9d-4c30-a88e-d4f18c0801f1"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675812365.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:26:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675812364.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:26:04"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "25769.0000000",    "title": "Memory Allocated (MB)",    "value": "25769"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "8037f10ba14da4f3",    "src": "hda",    "uuid": "e3a14708-bdbf-446b-a10f-2051ed138f5d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 816, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 2, \"input_mate1\": {\"values\": [{\"id\": 28, \"src\": \"hdca\"}]}, \"single_or_paired_opts\": \"paired_collection\"}"  },  "state": "ok",  "stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.83 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.18 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.154 sec; CPU: 1.058 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.025 CPU sec, 0.007 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.111 sec; CPU: 0.034 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.83 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.18 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.154 sec; CPU: 1.058 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.025 CPU sec, 0.007 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.111 sec; CPU: 0.034 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:26:16.156726",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_ag2h4xnh.sam v. /tmp/history_bam_converted_to_sam__9vzzyq6.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,9 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:chrREF\tLN:900000\n @RG\tID:input_\tSM:input_\n-@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.0\tCL:\"/usr/users/ga002/soranzon/miniconda3/envs/__bwameth@0.2.0/bin/bwameth.py -t 1 --reference index_dir/genome.fa input_f.fastq input_r.fastq\"\n+@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.2\tCL:\"/usr/local/bin/bwameth.py -t 8 --reference index_dir/genome.fa input_f.fastq.gz input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bwa-meth\tVN:1.10\tCL:samtools view -u -\n+@PG\tID:samtools.1\tPN:samtools\tPP:samtools\tVN:1.10\tCL:samtools sort -@ 8 -T /galaxy/server/database/jobs_directory/000/600/tmp -O bam -o output.bam -\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t163\tchrREF\t26002\t60\t101M\t=\t26025\t124\tCAAAATATATCAATCAAAAAAACATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACA\tBBBFFFFFFFFFFIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIFIFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFBFFF\tNM:i:1\tMD:Z:50C50\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:GA\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t83\tchrREF\t26025\t60\t101M\t=\t26002\t-124\tATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACATAATTTCAAAAAAATCAAACACC\tB0\u0027\u0027B\u003c\u003c\u003c00FB7\u003c000\u0027BBB0B\u003c0FFFFFFFFFFFFFFFFFBFFB\u003c7FFIFFFBBB\u003cFFB\u003c\u003c7FFIFFFFFBBFF\u003cIIIIIFFBIIFFFFFFBFFFFBBB\tNM:i:1\tMD:Z:27C73\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:CT\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:6662:24968\t99\tchrREF\t26991\t60\t101M\t=\t26992\t102\tAGGTGTCGTTTAATTGTTTAGGTTTATGGTATTGTGTTTCGTTTTTTTGGTATTTGTGAGGGTAGAATTGTTTTTGGGTTTTAATTTTTTTAAGTATGGGA\tBBBFFFFFFFFFFIIBFFIFBBFFFFIB\u003cFFFI\u003cFBFFFFBFFIIIII77BFFIIBFBFBBBFBBFFFF\u003cBBFFF\u002707BBBBFFFFFFFFFFB0\u003cBF####\tNM:i:0\tMD:Z:101\tMC:Z:101M\tAS:i:101\tXS:i:19\tRG:Z:input_\tYC:Z:CT\tYD:Z:f\n" ], "status": "failure", "test_index": 1, "time_seconds": 50.37960243225098, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.02 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.83 seconds elapse.[bwa_index] Update BWT... 0.02 sec[bwa_index] Pack forward-only FASTA... 0.01 sec[bwa_index] Construct SA from BWT and Occ... 0.18 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 1.154 sec; CPU: 1.058 secconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing: index_dir/genome.fa.bwameth.c2t[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.025 CPU sec, 0.007 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -[main] Real time: 0.111 sec; CPU: 0.034 secrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 8  index_dir/genome.fa.bwameth.c2t -
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos (Test #1)" name="0" time="37.864264726638794">
        
            
            <system-out><![CDATA[
            debuggroup summary 0.18s welcome to circos v0.69-8 15 Jun 2019 on Perl 5.026002debuggroup summary 0.18s current working directory /galaxy/server/database/jobs_directory/000/413/workingdebuggroup summary 0.18s command /usr/local/bin/circos -conf circos/conf/circos.conf -noparanoiddebuggroup summary 0.18s loading configuration from file circos/conf/circos.confdebuggroup summary 0.18s found conf file circos/conf/circos.confdebuggroup summary 0.32s debug will appear for these features: output,summarydebuggroup summary 0.32s bitmap output image ./circos.pngdebuggroup summary 0.32s SVG output image ./circos.svgdebuggroup summary 0.32s parsing karyotype and organizing ideogramsdebuggroup summary 0.33s karyotype has 2 chromosomes of total size 56,082debuggroup summary 0.33s applying global and local scalingdebuggroup summary 0.33s allocating image, colors and brushesdebuggroup summary 6.93s drawing 2 ideograms of total size 56,082debuggroup summary 6.93s drawing highlights and ideogramsdebuggroup output 6.94s generating outputdebuggroup output 7.38s created PNG image ./circos.png (40 kb)debuggroup output 7.38s created SVG image ./circos.svg (2 kb)
            ]]></system-out>
            <system-err><![CDATA[
            Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos (Test #2)" name="1" time="48.43437433242798">
        
            
            <system-out><![CDATA[
            debuggroup summary 0.18s welcome to circos v0.69-8 15 Jun 2019 on Perl 5.026002debuggroup summary 0.18s current working directory /galaxy/server/database/jobs_directory/000/418/workingdebuggroup summary 0.18s command /usr/local/bin/circos -conf circos/conf/circos.conf -noparanoiddebuggroup summary 0.18s loading configuration from file circos/conf/circos.confdebuggroup summary 0.18s found conf file circos/conf/circos.confdebuggroup summary 0.36s debug will appear for these features: output,summarydebuggroup summary 0.36s bitmap output image ./circos.pngdebuggroup summary 0.36s SVG output image ./circos.svgdebuggroup summary 0.36s parsing karyotype and organizing ideogramsdebuggroup summary 0.36s karyotype has 2 chromosomes of total size 56,082debuggroup summary 0.37s applying global and local scalingdebuggroup summary 0.37s allocating image, colors and brushesdebuggroup summary 7.51s drawing 2 ideograms of total size 56,082debuggroup summary 7.51s drawing highlights and ideogramsdebuggroup summary 7.57s found conf file /usr/local/bin/../etc/tracks/link.confdebuggroup summary 7.57s process track_0 link circos/conf/../data/links-0.txtdebuggroup summary 7.57s drawing link track_0 z 0debuggroup !circoswarning 7.62s  Data point of type [link] [50000-50500] extended past end of ideogram [ctgA 0-50001]. This data point will be [trimmed].debuggroup !circoswarning 7.62s  Data point of type [link] [51000-51500] extended past end of ideogram [ctgA 0-50001]. This data point will be [hidden].debuggroup summary 7.62s found conf file /usr/local/bin/../etc/tracks/histogram.confdebuggroup summary 7.62s found conf file /usr/local/bin/../etc/tracks/scatter.confdebuggroup summary 7.62s found conf file /usr/local/bin/../etc/tracks/tile.confdebuggroup summary 7.63s processing track_0 histogram circos/conf/../data/data-0.txtdebuggroup summary 7.71s processing track_1 scatter circos/conf/../data/data-1.txtdebuggroup summary 7.86s processing track_2 tile circos/conf/../data/data-2.txtdebuggroup summary 7.88s drawing track_0 histogram z 0 data-0.txt orient outdebuggroup summary 7.90s found conf file /usr/local/bin/../etc/tracks/axis.confdebuggroup summary 8.72s drawing track_1 scatter z 0 data-1.txt orient outdebuggroup summary 8.73s found conf file /usr/local/bin/../etc/tracks/axis.confdebuggroup summary 8.96s drawing track_2 tile z 0 data-2.txt orient outdebuggroup summary 8.96s found conf file /usr/local/bin/../etc/tracks/axis.confdebuggroup !circoswarning 9.17s  Data point of type [tile] [3013-6130] extended past end of ideogram [ctgB 0-6079]. This data point will be [trimmed].debuggroup output 9.17s generating outputdebuggroup output 9.70s created PNG image ./circos.png (539 kb)debuggroup output 9.71s created SVG image ./circos.svg (414 kb)
            ]]></system-out>
            <system-err><![CDATA[
            Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value within %Circos::Error::GROUPERROR in uc at /usr/local/bin/../lib/Circos/Error.pm line 354, <F> line 21.Use of uninitialized value within %Circos::Error::GROUPERROR in uc at /usr/local/bin/../lib/Circos/Error.pm line 354, <F> line 21.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781, <F> line 21.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781, <F> line 1214.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value within %Circos::Error::GROUPERROR in uc at /usr/local/bin/../lib/Circos/Error.pm line 354.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_aln_to_links (Test #1)" name="0" time="27.315692901611328">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_binlinks (Test #1)" name="0" time="31.313470602035522">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_bundlelinks (Test #1)" name="0" time="29.147658824920654">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            num_links 685num_initial_bundles 7num_links_in_initial_bundles 685num_passed_bundles 7 (100.00%)num_links_in_passed_bundles 685 (100.00%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_gc_skew (Test #1)" name="0" time="27.904982089996338">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_interval_to_text (Test #1)" name="0" time="27.5799081325531">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_interval_to_text (Test #2)" name="1" time="28.632699489593506">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_interval_to_tile (Test #1)" name="0" time="47.21509289741516">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_interval_to_tile (Test #2)" name="1" time="28.674429178237915">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_resample (Test #1)" name="0" time="29.58312225341797">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_tableviewer (Test #1)" name="0" time="36.26729726791382">
        
            
            <system-out><![CDATA[
            debuggroup summary 0.18s welcome to circos v0.69-8 15 Jun 2019 on Perl 5.026002debuggroup summary 0.18s current working directory /galaxy/server/database/jobs_directory/000/407/working/circosdebuggroup summary 0.18s command /usr/local/bin/circos -conf etc/circos.confdebuggroup summary 0.18s loading configuration from file etc/circos.confdebuggroup summary 0.18s found conf file etc/circos.confdebuggroup summary 0.34s debug will appear for these features: output,summarydebuggroup summary 0.34s bitmap output image ./circos.pngdebuggroup summary 0.34s SVG output image ./circos.svgdebuggroup summary 0.34s parsing karyotype and organizing ideogramsdebuggroup summary 0.34s karyotype has 5 chromosomes of total size 415debuggroup summary 0.34s applying global and local scalingdebuggroup summary 0.35s allocating image, colors and brushesdebuggroup summary 7.06s drawing 5 ideograms of total size 415debuggroup summary 7.06s drawing highlights and ideogramsdebuggroup summary 7.06s found conf file /usr/local/bin/../etc/tracks/highlight.bg.confdebuggroup summary 7.06s found conf file /usr/local/bin/../etc/tracks/highlight.bg.confdebuggroup summary 7.07s found conf file /usr/local/bin/../etc/tracks/highlight.bg.confdebuggroup summary 7.07s found conf file /usr/local/bin/../etc/tracks/highlight.bg.confdebuggroup summary 7.07s found conf file /usr/local/bin/../etc/tracks/highlight.bg.confdebuggroup summary 7.07s process track_0 highlight /galaxy/server/database/jobs_directory/000/407/working/circos/data/row.txtdebuggroup summary 7.07s process track_1 highlight /galaxy/server/database/jobs_directory/000/407/working/circos/data/col.txtdebuggroup summary 7.07s process track_2 highlight /galaxy/server/database/jobs_directory/000/407/working/circos/data/all.txtdebuggroup summary 7.07s process track_3 highlight /galaxy/server/database/jobs_directory/000/407/working/circos/data/cap.col.txtdebuggroup summary 7.08s process track_4 highlight /galaxy/server/database/jobs_directory/000/407/working/circos/data/cap.row.txtdebuggroup summary 7.41s found conf file /usr/local/bin/../etc/tracks/link.confdebuggroup summary 7.41s process track_0 link /galaxy/server/database/jobs_directory/000/407/working/circos/data/cells.txtdebuggroup summary 7.41s drawing link track_0 z 0debuggroup output 7.52s generating outputdebuggroup output 8.09s created PNG image ./circos.png (664 kb)debuggroup output 8.10s created SVG image ./circos.svg (79 kb)
            ]]></system-out>
            <system-err><![CDATA[
            Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781.Use of uninitialized value in subroutine entry at /usr/local/bin/../lib/Circos/Configuration.pm line 781, <F> line 53.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_wiggle_to_scatter (Test #1)" name="0" time="27.291415691375732">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/circos/circos_wiggle_to_stacked (Test #1)" name="0" time="30.203422784805298">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #1)" name="0" time="31.9370436668396">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Read1 before filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Read1 after filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Filtering result:reads passed filter: 2reads failed due to low quality: 0reads failed due to too many N: 0reads failed due to too short: 0reads with adapter trimmed: 0bases trimmed due to adapters: 0Duplication rate (may be overestimated since this is SE data): 0%JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for R1_fq.fastq -i R1_fq.fastq -o first.fastq fastp v0.20.1, time used: 1 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #2)" name="1" time="33.26315903663635">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Detecting adapter sequence for read2...No adapter detected for read2Read1 before filtering:total reads: 99total bases: 24849Q20 bases: 23268(93.6376%)Q30 bases: 22391(90.1083%)Read2 before filtering:total reads: 99total bases: 24849Q20 bases: 22676(91.2552%)Q30 bases: 21532(86.6514%)Read1 after filtering:total reads: 97total bases: 22942Q20 bases: 21680(94.4992%)Q30 bases: 20981(91.4524%)Read2 aftering filtering:total reads: 97total bases: 22942Q20 bases: 21535(93.8671%)Q30 bases: 20672(90.1055%)Filtering result:reads passed filter: 194reads failed due to low quality: 2reads failed due to too many N: 2reads failed due to too short: 0reads with adapter trimmed: 68bases trimmed due to adapters: 2824Duplication rate: 0%Insert size peak (evaluated by paired-end reads): 308JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for Unnamed Collection.fastq -i Unnamed Collection.fastq -o first.fastq -I Unnamed Collection_R2.fastq -O second.fastq --detect_adapter_for_pe fastp v0.20.1, time used: 0 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #11)" name="10" time="30.494589805603027">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Read1 before filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Read1 after filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Filtering result:reads passed filter: 2reads failed due to low quality: 0reads failed due to too many N: 0reads failed due to too short: 0reads with adapter trimmed: 0bases trimmed due to adapters: 0reads with polyX in 3' end: 0bases trimmed in polyX tail: 0Duplication rate (may be overestimated since this is SE data): 0%JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for R1_fq_gz.fastq.gz -i R1_fq_gz.fastq.gz -o first.fastq.gz -x --poly_x_min_len 10 fastp v0.20.1, time used: 0 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #3)" name="2" time="29.501015186309814">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Read1 before filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Read1 after filtering:total reads: 1total bases: 151Q20 bases: 114(75.4967%)Q30 bases: 98(64.9007%)Filtering result:reads passed filter: 1reads failed due to low quality: 0reads failed due to too many N: 0reads failed due to too short: 1reads with adapter trimmed: 1bases trimmed due to adapters: 139Duplication rate (may be overestimated since this is SE data): 0%JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for R1_fq.fastq -i R1_fq.fastq -o first.fastq --adapter_sequence ATCG fastp v0.20.1, time used: 0 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #4)" name="3" time="29.29497456550598">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Read1 before filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Read1 after filtering:total reads: 2total bases: 286Q20 bases: 246(86.014%)Q30 bases: 226(79.021%)Filtering result:reads passed filter: 2reads failed due to low quality: 0reads failed due to too many N: 0reads failed due to too short: 0reads with adapter trimmed: 0bases trimmed due to adapters: 0Duplication rate (may be overestimated since this is SE data): 0%JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for R1_fq.fastq -i R1_fq.fastq -o first.fastq -U --umi_loc read1 --umi_len 8 fastp v0.20.1, time used: 1 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #5)" name="4" time="28.878811597824097">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Read1 before filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Read1 after filtering:total reads: 2total bases: 278Q20 bases: 239(85.9712%)Q30 bases: 220(79.1367%)Filtering result:reads passed filter: 2reads failed due to low quality: 0reads failed due to too many N: 0reads failed due to too short: 0reads with adapter trimmed: 0bases trimmed due to adapters: 0Duplication rate (may be overestimated since this is SE data): 0%JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for R1_fq.fastq -i R1_fq.fastq -o first.fastq -U --umi_loc read1 --umi_len 12 fastp v0.20.1, time used: 1 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #6)" name="5" time="32.021260023117065">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Detecting adapter sequence for read2...No adapter detected for read2Read1 before filtering:total reads: 99total bases: 24849Q20 bases: 23268(93.6376%)Q30 bases: 22391(90.1083%)Read2 before filtering:total reads: 99total bases: 24849Q20 bases: 22676(91.2552%)Q30 bases: 21532(86.6514%)Read1 after filtering:total reads: 97total bases: 22942Q20 bases: 21680(94.4992%)Q30 bases: 20981(91.4524%)Read2 aftering filtering:total reads: 97total bases: 22942Q20 bases: 21535(93.8671%)Q30 bases: 20672(90.1055%)Filtering result:reads passed filter: 194reads failed due to low quality: 2reads failed due to too many N: 2reads failed due to too short: 0reads with adapter trimmed: 68bases trimmed due to adapters: 2824Duplication rate: 0%Insert size peak (evaluated by paired-end reads): 0JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for bwa-mem-fastq1_fq.fastq -i bwa-mem-fastq1_fq.fastq -o first.fastq -I bwa-mem-fastq2_fq_R2.fastq -O second.fastq --detect_adapter_for_pe fastp v0.20.1, time used: 1 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #7)" name="6" time="32.96942353248596">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Detecting adapter sequence for read2...No adapter detected for read2Read1 before filtering:total reads: 99total bases: 24849Q20 bases: 23268(93.6376%)Q30 bases: 22391(90.1083%)Read2 before filtering:total reads: 99total bases: 24849Q20 bases: 22676(91.2552%)Q30 bases: 21532(86.6514%)Read1 after filtering:total reads: 97total bases: 22166Q20 bases: 20935(94.4464%)Q30 bases: 20255(91.3787%)Read2 aftering filtering:total reads: 97total bases: 22646Q20 bases: 21284(93.9857%)Q30 bases: 20447(90.2897%)Filtering result:reads passed filter: 194reads failed due to low quality: 2reads failed due to too many N: 2reads failed due to too short: 0reads with adapter trimmed: 76bases trimmed due to adapters: 3128Duplication rate: 0%Insert size peak (evaluated by paired-end reads): 243JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for bwa-mem-fastq1_fq.fastq -i bwa-mem-fastq1_fq.fastq -o first.fastq -I bwa-mem-fastq2_fq_R2.fastq -O second.fastq --detect_adapter_for_pe -U --umi_loc read1 --umi_len 8 fastp v0.20.1, time used: 0 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #8)" name="7" time="33.45100212097168">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Detecting adapter sequence for read2...No adapter detected for read2Read1 before filtering:total reads: 99total bases: 24849Q20 bases: 23268(93.6376%)Q30 bases: 22391(90.1083%)Read2 before filtering:total reads: 99total bases: 24849Q20 bases: 22676(91.2552%)Q30 bases: 21532(86.6514%)Read1 after filtering:total reads: 97total bases: 22678Q20 bases: 21439(94.5366%)Q30 bases: 20756(91.5248%)Read2 aftering filtering:total reads: 97total bases: 22166Q20 bases: 20766(93.684%)Q30 bases: 19910(89.8223%)Filtering result:reads passed filter: 194reads failed due to low quality: 2reads failed due to too many N: 2reads failed due to too short: 0reads with adapter trimmed: 68bases trimmed due to adapters: 3096Duplication rate: 0%Insert size peak (evaluated by paired-end reads): 300JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for bwa-mem-fastq1_fq.fastq -i bwa-mem-fastq1_fq.fastq -o first.fastq -I bwa-mem-fastq2_fq_R2.fastq -O second.fastq --detect_adapter_for_pe -U --umi_loc read2 --umi_len 8 fastp v0.20.1, time used: 0 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #9)" name="8" time="30.956570625305176">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Read1 before filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Read1 after filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Filtering result:reads passed filter: 2reads failed due to low quality: 0reads failed due to too many N: 0reads failed due to too short: 0reads with adapter trimmed: 0bases trimmed due to adapters: 0Duplication rate (may be overestimated since this is SE data): 0%JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for R1_fq.fastq -i R1_fq.fastq -o first.fastq fastp v0.20.1, time used: 0 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp (Test #10)" name="9" time="28.75326895713806">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Detecting adapter sequence for read1...No adapter detected for read1Read1 before filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Read1 after filtering:total reads: 2total bases: 302Q20 bases: 262(86.755%)Q30 bases: 241(79.8013%)Filtering result:reads passed filter: 2reads failed due to low quality: 0reads failed due to too many N: 0reads failed due to too short: 0reads with adapter trimmed: 0bases trimmed due to adapters: 0Duplication rate (may be overestimated since this is SE data): 0%JSON report: fastp.jsonHTML report: fastp.htmlfastp --thread 2 --report_title fastp report for R1_fq_gz.fastq.gz -i R1_fq_gz.fastq.gz -o first.fastq.gz --poly_g_min_len 10 -g fastp v0.20.1, time used: 1 seconds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #1)" name="0" time="54.330031871795654">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #2)" name="1" time="30.282071352005005">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #3)" name="2" time="35.47001123428345">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing Default / test-3.bedINFO:jbrowse:Processing Default / test-6.bedWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #4)" name="3" time="58.93653154373169">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing Auto Coloured / A.gffINFO:jbrowse:Processing Auto Coloured / B.gffINFO:jbrowse:Processing Auto Coloured / C.gffINFO:jbrowse:Processing Auto Coloured / D.gffINFO:jbrowse:Processing Ignore Scale / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Realistic / interpro.gffINFO:jbrowse:Processing Realistic / 2.gffWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #5)" name="4" time="32.9371395111084">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing With menu or index / 1.gffINFO:jbrowse:Processing With menu or index / 1.gff
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #6)" name="5" time="31.979467153549194">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing With canvas config / 1.gffWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #7)" name="6" time="31.614312171936035">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing With custom track config / 1.gffWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #8)" name="7" time="31.237452507019043">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing Auto Coloured / merlin-sample.bamWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #9)" name="8" time="116.79801082611084">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "gencode": "1",  "reference_genome|genome_type_select": "indexed",  "standalone": "data",  "uglyTestingHack": "enabled" }, "job": {  "command_line": "mkdir -p /galaxy/server/database/jobs_directory/000/458/working/dataset_928a54a9-8d07-4f20-82ec-a62b4ca9287b_files \u0026\u0026  cp /galaxy/server/database/jobs_directory/000/458/configs/tmpa2o2d8ir /galaxy/server/database/jobs_directory/000/458/working/dataset_928a54a9-8d07-4f20-82ec-a62b4ca9287b_files/galaxy.xml \u0026\u0026  export JBROWSE_SOURCE_DIR=$(dirname $(which prepare-refseqs.pl))/../opt/jbrowse  \u0026\u0026  python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/4542035c1075/jbrowse/jbrowse.py\u0027  --jbrowse ${JBROWSE_SOURCE_DIR} --standalone \u0027data\u0027  --outdir /galaxy/server/database/jobs_directory/000/458/working/dataset_928a54a9-8d07-4f20-82ec-a62b4ca9287b_files /galaxy/server/database/jobs_directory/000/458/configs/tmpa2o2d8ir \u0026\u0026  cp /galaxy/server/database/jobs_directory/000/458/configs/tmpnhxfycat /galaxy/server/database/objects/9/2/8/dataset_928a54a9-8d07-4f20-82ec-a62b4ca9287b.dat;  cp /galaxy/server/database/jobs_directory/000/458/configs/tmpa2o2d8ir /galaxy/server/database/objects/9/2/8/dataset_928a54a9-8d07-4f20-82ec-a62b4ca9287b.dat",  "command_version": "jbrowse.py 0.8.0",  "create_time": "2023-02-07T22:58:16.923210",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dpq46",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "7ceac100f04b2bfe",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "54.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "54 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675810752.0000000",    "title": "Job End Time",    "value": "2023-02-07 22:59:12"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675810698.0000000",    "title": "Job Start Time",    "value": "2023-02-07 22:58:18"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "3019484f0548f0e5",    "src": "hda",    "uuid": "928a54a9-8d07-4f20-82ec-a62b4ca9287b"   }  },  "params": {   "__input_ext": "\"data\"",   "action": "{\"__current_case__\": 0, \"action_select\": \"create\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gencode": "\"1\"",   "jbgen": "{\"aboutDescription\": \"\", \"defaultLocation\": \"\", \"hideGenomeOptions\": \"false\", \"shareLink\": \"true\", \"show_menu\": \"true\", \"show_nav\": \"true\", \"show_overview\": \"true\", \"show_tracklist\": \"true\", \"trackPadding\": \"20\"}",   "plugins": "{\"BlastView\": \"true\", \"ComboTrackSelector\": \"false\", \"GCContent\": \"false\"}",   "reference_genome": "{\"__current_case__\": 0, \"genome_type_select\": \"indexed\", \"genomes\": \"apiMel4\"}",   "standalone": "\"data\"",   "track_groups": "[]",   "uglyTestingHack": "\"enabled\""  },  "state": "ok",  "stderr": "WARNING: No feature names found for indexing, only reference sequence names will be indexed.\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy0",  "tool_stderr": "WARNING: No feature names found for indexing, only reference sequence names will be indexed.\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:00:12.949431",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected\nExpected text \u0027merlin.fa\u0027 in output (\u0027\u003c?xml version=\"1.0\"?\u003e\n\u003croot\u003e\n    \u003cmetadata\u003e\n        \u003cgencode\u003e1\u003c/gencode\u003e\n        \u003cgenomes\u003e\n              \u003cgenome path=\"/cvmfs/data.galaxyproject.org/managed/seq/apiMel4.fa\"\u003e\n                  \u003cmetadata /\u003e\n              \u003c/genome\u003es\n        \u003c/genomes\u003e\n        \u003cgeneral\u003e\n            \u003cdefaultLocation\u003e\u003c/defaultLocation\u003e\n            \u003ctrackPadding\u003e20\u003c/trackPadding\u003e\n\n            \u003cshareLink\u003etrue\u003c/shareLink\u003e\n            \u003caboutDescription\u003e\u003c/aboutDescription\u003e\n            \u003cshow_tracklist\u003etrue\u003c/show_tracklist\u003e\n            \u003cshow_nav\u003etrue\u003c/show_nav\u003e\n            \u003cshow_overview\u003etrue\u003c/show_overview\u003e\n            \u003cshow_menu\u003etrue\u003c/show_menu\u003e\n            \u003chideGenomeOptions\u003efalse\u003c/hideGenomeOptions\u003e\n        \u003c/general\u003e\n        \u003cgalaxyUrl\u003ehttp://localhost:8080\u003c/galaxyUrl\u003e\n    \u003c/metadata\u003e\n    \u003ctracks\u003e\n    \u003c/tracks\u003e\n    \u003cplugins\n        ComboTrackSelector=\"\"\n        Bookmarks=\"\"\n        GCContent=\"\"\n        BlastView=\"True\"\n        theme=\"\"\n        /\u003e\n\u003c/root\u003e\n\u0027)" ], "status": "failure", "test_index": 8, "time_seconds": 116.79801082611084, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse", "tool_version": "1.16.11+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #10)" name="9" time="24.05035638809204">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "gencode": "11",  "reference_genome|genome": {   "id": "8fa165682574014d",   "src": "hda"  },  "reference_genome|genome_type_select": "history",  "standalone": "data",  "track_groups_0|category": "External endpoints",  "track_groups_0|data_tracks_0|data_format|data_format_select": "rest",  "track_groups_0|data_tracks_0|data_format|label": "Rest api",  "track_groups_0|data_tracks_0|data_format|url": "http://example.org.external/rest_api/",  "track_groups_0|data_tracks_1|data_format|data_format_select": "sparql",  "track_groups_0|data_tracks_1|data_format|label": "Sparql endpoint",  "track_groups_0|data_tracks_1|data_format|query": "  DEFINE sql:select-option \u0027order\u0027   prefix rdf:    \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#\u003e   select ?start,          ?end,          IF( ?faldo_type = faldo:ForwardStrandPosition,              1,              IF( ?faldo_type = faldo:ReverseStrandPosition,                  -1,                   0                )            ) as ?strand,          str(?obj_type_name) as ?type,          str(?label) as ?name,          str(?obj_name) as ?description,          ?obj as ?uniqueID,          ?parent as ?parentUniqueID   where {     values ?faldo_type { faldo:ForwardStrandPosition faldo:ReverseStrandPosition faldo:BothStrandsPosition }   }",  "track_groups_0|data_tracks_1|data_format|url": "http://example.org.external/sparql/",  "uglyTestingHack": "enabled" }, "job": {  "command_line": "mkdir -p /galaxy/server/database/jobs_directory/000/460/working/dataset_fcae107b-79a3-44e2-9e6d-03d72d0b08c0_files \u0026\u0026  cp /galaxy/server/database/jobs_directory/000/460/configs/tmp05gapbur /galaxy/server/database/jobs_directory/000/460/working/dataset_fcae107b-79a3-44e2-9e6d-03d72d0b08c0_files/galaxy.xml \u0026\u0026  export JBROWSE_SOURCE_DIR=$(dirname $(which prepare-refseqs.pl))/../opt/jbrowse  \u0026\u0026  python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/4542035c1075/jbrowse/jbrowse.py\u0027  --jbrowse ${JBROWSE_SOURCE_DIR} --standalone \u0027data\u0027  --outdir /galaxy/server/database/jobs_directory/000/460/working/dataset_fcae107b-79a3-44e2-9e6d-03d72d0b08c0_files /galaxy/server/database/jobs_directory/000/460/configs/tmp05gapbur \u0026\u0026  cp /galaxy/server/database/jobs_directory/000/460/configs/tmp_c4iyakv /galaxy/server/database/objects/f/c/a/dataset_fcae107b-79a3-44e2-9e6d-03d72d0b08c0.dat;  cp /galaxy/server/database/jobs_directory/000/460/configs/tmp05gapbur /galaxy/server/database/objects/f/c/a/dataset_fcae107b-79a3-44e2-9e6d-03d72d0b08c0.dat",  "command_version": null,  "create_time": "2023-02-07T23:00:30.284879",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-hkn7t",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "c71ee2a667b1cc75",  "inputs": {   "genome": {    "id": "8fa165682574014d",    "src": "hda",    "uuid": "53c40434-8e52-439b-aeb0-417f8b977f8d"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "c735415b8dc85988",    "src": "hda",    "uuid": "fcae107b-79a3-44e2-9e6d-03d72d0b08c0"   }  },  "params": {   "__input_ext": "\"fasta\"",   "action": "{\"__current_case__\": 0, \"action_select\": \"create\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gencode": "\"11\"",   "jbgen": "{\"aboutDescription\": \"\", \"defaultLocation\": \"\", \"hideGenomeOptions\": \"false\", \"shareLink\": \"true\", \"show_menu\": \"true\", \"show_nav\": \"true\", \"show_overview\": \"true\", \"show_tracklist\": \"true\", \"trackPadding\": \"20\"}",   "plugins": "{\"BlastView\": \"true\", \"ComboTrackSelector\": \"false\", \"GCContent\": \"false\"}",   "reference_genome": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 673, \"src\": \"hda\"}]}, \"genome_type_select\": \"history\"}",   "standalone": "\"data\"",   "track_groups": "[{\"__index__\": 0, \"category\": \"External endpoints\", \"data_tracks\": [{\"__index__\": 0, \"data_format\": {\"__current_case__\": 5, \"data_format_select\": \"rest\", \"jbcolor_scale\": {\"color_score\": {\"__current_case__\": 0, \"color\": {\"__current_case__\": 0, \"color_select\": \"automatic\"}, \"color_score_select\": \"none\"}}, \"jbmenu\": {\"track_menu\": []}, \"jbstyle\": {\"max_height\": \"600\", \"style_classname\": \"feature\", \"style_description\": \"Hit_titles\", \"style_height\": \"600px\", \"style_label\": \"description\"}, \"label\": \"Rest api\", \"override_apollo_drag\": \"False\", \"override_apollo_plugins\": \"False\", \"track_visibility\": \"default_off\", \"url\": \"http://example.org.external/rest_api/\"}}, {\"__index__\": 1, \"data_format\": {\"__current_case__\": 6, \"data_format_select\": \"sparql\", \"jbcolor_scale\": {\"color_score\": {\"__current_case__\": 0, \"color\": {\"__current_case__\": 0, \"color_select\": \"automatic\"}, \"color_score_select\": \"none\"}}, \"jbmenu\": {\"track_menu\": []}, \"jbstyle\": {\"max_height\": \"600\", \"style_classname\": \"feature\", \"style_description\": \"Hit_titles\", \"style_height\": \"600px\", \"style_label\": \"description\"}, \"label\": \"Sparql endpoint\", \"override_apollo_drag\": \"False\", \"override_apollo_plugins\": \"False\", \"query\": \"  DEFINE sql:select-option \u0027order\u0027   prefix rdf:    \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#\u003e   select ?start,          ?end,          IF( ?faldo_type = faldo:ForwardStrandPosition,              1,              IF( ?faldo_type = faldo:ReverseStrandPosition,                  -1,                   0                )            ) as ?strand,          str(?obj_type_name) as ?type,          str(?label) as ?name,          str(?obj_name) as ?description,          ?obj as ?uniqueID,          ?parent as ?parentUniqueID   where {     values ?faldo_type { faldo:ForwardStrandPosition faldo:ReverseStrandPosition faldo:BothStrandsPosition }   }\", \"track_visibility\": \"default_off\", \"url\": \"http://example.org.external/sparql/\"}}]}]",   "uglyTestingHack": "\"enabled\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:00:37.018145",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 9, "time_seconds": 24.05035638809204, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse", "tool_version": "1.16.11+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #1)" name="0" time="28.959192752838135">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #2)" name="1" time="29.501603364944458">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #3)" name="2" time="37.67957305908203">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing Default / test-3.bedINFO:jbrowse:Processing Default / test-6.bedWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #4)" name="3" time="58.92570185661316">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing Auto Coloured / A.gffINFO:jbrowse:Processing Auto Coloured / B.gffINFO:jbrowse:Processing Auto Coloured / C.gffINFO:jbrowse:Processing Auto Coloured / D.gffINFO:jbrowse:Processing Ignore Scale / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Scaled Colour / 1.gffINFO:jbrowse:Processing Realistic / interpro.gffINFO:jbrowse:Processing Realistic / 2.gffWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #5)" name="4" time="16.331283569335938">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 16.331283569335938, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse", "tool_version": "1.16.11+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #6)" name="5" time="32.25106978416443">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing With canvas config / 1.gffWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #7)" name="6" time="16.775587558746338">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 16.775587558746338, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse", "tool_version": "1.16.11+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #8)" name="7" time="31.99020028114319">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing Auto Coloured / merlin-sample.bamWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #9)" name="8" time="108.60871982574463">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "gencode": "1",  "reference_genome|genome_type_select": "indexed",  "standalone": "data",  "uglyTestingHack": "enabled" }, "job": {  "command_line": "mkdir -p /galaxy/server/database/jobs_directory/000/488/working/dataset_23bca413-034c-4f6d-9051-ce5dce7942b6_files \u0026\u0026  cp /galaxy/server/database/jobs_directory/000/488/configs/tmpzz9ppd67 /galaxy/server/database/jobs_directory/000/488/working/dataset_23bca413-034c-4f6d-9051-ce5dce7942b6_files/galaxy.xml \u0026\u0026  export JBROWSE_SOURCE_DIR=$(dirname $(which prepare-refseqs.pl))/../opt/jbrowse  \u0026\u0026  python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/a6e57ff585c0/jbrowse/jbrowse.py\u0027  --jbrowse ${JBROWSE_SOURCE_DIR} --standalone \u0027data\u0027  --outdir /galaxy/server/database/jobs_directory/000/488/working/dataset_23bca413-034c-4f6d-9051-ce5dce7942b6_files /galaxy/server/database/jobs_directory/000/488/configs/tmpzz9ppd67 \u0026\u0026  cp /galaxy/server/database/jobs_directory/000/488/configs/tmpkf48a8pc /galaxy/server/database/objects/2/3/b/dataset_23bca413-034c-4f6d-9051-ce5dce7942b6.dat;  cp /galaxy/server/database/jobs_directory/000/488/configs/tmpzz9ppd67 /galaxy/server/database/objects/2/3/b/dataset_23bca413-034c-4f6d-9051-ce5dce7942b6.dat",  "command_version": "jbrowse.py 0.8.0",  "create_time": "2023-02-07T23:04:51.214538",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4ct8n",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "1e29f1a21461794a",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "45.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "45 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811137.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:05:37"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811092.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:04:52"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "f894f9402352b908",    "src": "hda",    "uuid": "23bca413-034c-4f6d-9051-ce5dce7942b6"   }  },  "params": {   "__input_ext": "\"data\"",   "action": "{\"__current_case__\": 0, \"action_select\": \"create\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gencode": "\"1\"",   "jbgen": "{\"aboutDescription\": \"\", \"defaultLocation\": \"\", \"hideGenomeOptions\": \"false\", \"shareLink\": \"true\", \"show_menu\": \"true\", \"show_nav\": \"true\", \"show_overview\": \"true\", \"show_tracklist\": \"true\", \"trackPadding\": \"20\"}",   "plugins": "{\"BlastView\": \"true\", \"ComboTrackSelector\": \"false\", \"GCContent\": \"false\"}",   "reference_genome": "{\"__current_case__\": 0, \"genome_type_select\": \"indexed\", \"genomes\": \"apiMel4\"}",   "standalone": "\"data\"",   "track_groups": "[]",   "uglyTestingHack": "\"enabled\""  },  "state": "ok",  "stderr": "WARNING: No feature names found for indexing, only reference sequence names will be indexed.\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy1",  "tool_stderr": "WARNING: No feature names found for indexing, only reference sequence names will be indexed.\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:06:39.119305",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected\nExpected text \u0027merlin.fa\u0027 in output (\u0027\u003c?xml version=\"1.0\"?\u003e\n\u003croot\u003e\n    \u003cmetadata\u003e\n        \u003cgencode\u003e1\u003c/gencode\u003e\n        \u003cgenomes\u003e\n              \u003cgenome path=\"/cvmfs/data.galaxyproject.org/managed/seq/apiMel4.fa\"\u003e\n                  \u003cmetadata /\u003e\n              \u003c/genome\u003es\n        \u003c/genomes\u003e\n        \u003cgeneral\u003e\n            \u003cdefaultLocation\u003e\u003c/defaultLocation\u003e\n            \u003ctrackPadding\u003e20\u003c/trackPadding\u003e\n\n            \u003cshareLink\u003etrue\u003c/shareLink\u003e\n            \u003caboutDescription\u003e\u003c/aboutDescription\u003e\n            \u003cshow_tracklist\u003etrue\u003c/show_tracklist\u003e\n            \u003cshow_nav\u003etrue\u003c/show_nav\u003e\n            \u003cshow_overview\u003etrue\u003c/show_overview\u003e\n            \u003cshow_menu\u003etrue\u003c/show_menu\u003e\n            \u003chideGenomeOptions\u003efalse\u003c/hideGenomeOptions\u003e\n        \u003c/general\u003e\n        \u003cgalaxyUrl\u003ehttp://localhost:8080\u003c/galaxyUrl\u003e\n    \u003c/metadata\u003e\n    \u003ctracks\u003e\n    \u003c/tracks\u003e\n    \u003cplugins\n        ComboTrackSelector=\"\"\n        Bookmarks=\"\"\n        GCContent=\"\"\n        BlastView=\"True\"\n        theme=\"\"\n        /\u003e\n\u003c/root\u003e\n\u0027)" ], "status": "failure", "test_index": 8, "time_seconds": 108.60871982574463, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse", "tool_version": "1.16.11+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse (Test #10)" name="9" time="29.686968326568604">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:jbrowse:Processing External endpoints / Rest apiINFO:jbrowse:Processing External endpoints / Sparql endpointWARNING: No feature names found for indexing, only reference sequence names will be indexed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #1)" name="0" time="34.49319124221802">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "fastq_input|analysis_type_selector": "sr",  "fastq_input|fastq_input1": {   "id": "d08877d08deaa076",   "src": "hda"  },  "fastq_input|fastq_input_selector": "single",  "reference_source|ref_file": {   "id": "38ac8ad80d40b82d",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/2/5/3/dataset_2531d757-f8f4-4d23-9e8c-e6a7b40ef37b.dat\u0027 reference.fa \u0026\u0026 minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa \u0027/galaxy/server/database/objects/a/8/2/dataset_a823e89a-6d4c-4403-85f5-10c4b3b941fb.dat\u0027 -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o \u0027/galaxy/server/database/objects/4/2/2/dataset_422ce74f-baf9-4426-96e6-37b3c5563ea5.dat\u0027",  "command_version": "2.17-r941",  "create_time": "2023-02-07T23:08:58.212642",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-mhs7j",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "d8a595aefa69d217",  "inputs": {   "fastq_input1": {    "id": "d08877d08deaa076",    "src": "hda",    "uuid": "a823e89a-6d4c-4403-85f5-10c4b3b941fb"   },   "ref_file": {    "id": "38ac8ad80d40b82d",    "src": "hda",    "uuid": "2531d757-f8f4-4d23-9e8c-e6a7b40ef37b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811343.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:09:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811343.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:09:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "34359.0000000",    "title": "Memory Allocated (MB)",    "value": "34359"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "alignment_output": {    "id": "eace79ecb2174cc3",    "src": "hda",    "uuid": "422ce74f-baf9-4426-96e6-37b3c5563ea5"   }  },  "params": {   "__input_ext": "\"input\"",   "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_input": "{\"__current_case__\": 0, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 711, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"single\"}",   "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}",   "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}",   "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 710, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"  },  "state": "ok",  "stderr": "[M::mm_idx_gen::0.004*1.10] collected minimizers\n[M::mm_idx_gen::0.005*2.24] sorted minimizers\n[M::main::0.005*2.23] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*2.22] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*2.18] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.008*2.07] mapped 100 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/a/8/2/dataset_a823e89a-6d4c-4403-85f5-10c4b3b941fb.dat\n[M::main] Real time: 0.009 sec; CPU: 0.017 sec; Peak RSS: 0.004 GB\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4",  "tool_stderr": "[M::mm_idx_gen::0.004*1.10] collected minimizers\n[M::mm_idx_gen::0.005*2.24] sorted minimizers\n[M::main::0.005*2.23] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*2.22] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*2.18] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.008*2.07] mapped 100 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/a/8/2/dataset_a823e89a-6d4c-4403-85f5-10c4b3b941fb.dat\n[M::main] Real time: 0.009 sec; CPU: 0.017 sec; Peak RSS: 0.004 GB\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:09:14.277674",  "user_email": "tests@fake.org" }, "output_problems": [  "Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_kinisc21.sam v. /tmp/history_bam_converted_to_sam_t02gb0j_.sam )\n--- local_file\n+++ history_data\n@@ -1,171 +1,171 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_19.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t*\t0\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\t*\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:18422:19051/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t*\t0\t0\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t*\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:123\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t*\t0\t0\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\t*\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:200\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:18842:24844/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\t*\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t*\t0\t0\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\t*\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:200\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5983:21093/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1102:7765:18353/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t*\t0\t0\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\t*\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:123\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t*\t0\t0\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\t*\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:142\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:14060:21273/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S156M15S\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTACTGTCTCTTATACAC\t*\tNM:i:1\tms:i:302\tAS:i:302\tnn:i:0\ttp:A:P\tcm:i:22\ts1:i:150\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:14528:12993/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t*\t0\t0\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGAT\t*\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:17657:20856/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t90S161M\t*\t0\t0\tAAAGCGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTAT\t*\tNM:i:1\tms:i:312\tAS:i:312\tnn:i:0\ttp:A:P\tcm:i:22\ts1:i:150\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16480,+,90M161S,60,2;\n-M01368:8:000000000-A3GHV:1:1103:25519:6301/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t18S184M49S\t*\t0\t0\tAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGCATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATTTCGT\t*\tNM:i:2\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:21\ts1:i:157\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1103:6074:6549/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t108S143M\t*\t0\t0\tTAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTG\t*\tNM:i:1\tms:i:276\tAS:i:276\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16462,+,108M143S,60,1;\n-M01368:8:000000000-A3GHV:1:1104:11572:8264/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t*\t0\t0\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\t*\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1104:12288:20635/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t*\t0\t0\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGCCGCAGCATCTGTCTTTGATTCCTGCCT\t*\tNM:i:3\tms:i:262\tAS:i:262\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:109\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1104:13832:4398/1\t0\tgi|251831106|ref|NC_012920.1|\t1\t60\t7S132M112S\t*\t0\t0\tCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCCTGTCTCTTATACACATCTCCGAGCCCACGAGACTAAGGCGAATCTCGTATGCCGTCTTCTGCTTGACAAAAAAAAACACACAACAACCAACACCCAGTAGACTAGTGCGTC\t*\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:123\ts2:i:0\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1110:15519:10008/1\t2064\tgi|251831106|ref|NC_012920.1|\t16503\t12\t67M184H\t*\t0\t0\tGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:124\tAS:i:124\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0149\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,67S184M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1110:16700:6843/1\t2064\tgi|251831106|ref|NC_012920.1|\t16503\t12\t25H67M159H\t*\t0\t0\tGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:124\tAS:i:124\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0149\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,92S159M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:16531/1\t2064\tgi|251831106|ref|NC_012920.1|\t16503\t5\t59M192H\t*\t0\t0\tGGTTCCTACTTCAAGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACA\t*\tNM:i:2\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:31\ts2:i:0\tde:f:0.0339\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,67S184M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:8665:25542/1\t2048\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701/1\t2064\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t*\t0\t0\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:27103:7153/1\t2064\tgi|251831106|ref|NC_012920.1|\t16508\t12\t7H62M182H\t*\t0\t0\tCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:114\tAS:i:114\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0161\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,69S182M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233/1\t2048\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t*\t0\t0\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794/1\t2064\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t*\t0\t0\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:17564:15723/1\t2064\tgi|251831106|ref|NC_012920.1|\t16512\t12\t58M193H\t*\t0\t0\tTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:106\tAS:i:106\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0172\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,58S193M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748/1\t2064\tgi|251831106|ref|NC_012920.1|\t16513\t12\t57M194H\t*\t0\t0\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:18714:24788/1\t2064\tgi|251831106|ref|NC_012920.1|\t16513\t12\t57M194H\t*\t0\t0\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255/1\t2064\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t*\t0\t0\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490/1\t2048\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t*\t0\t0\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050/1\t2064\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t*\t0\t0\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:8763:7859/1\t2064\tgi|251831106|ref|NC_012920.1|\t16519\t19\t51M200H\t*\t0\t0\tGCATAAAGCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:100\tAS:i:100\tnn:i:0\ttp:A:P\tcm:i:4\ts1:i:38\ts2:i:0\tde:f:0.0196\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,51S200M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1113:5741:16959/1\t2064\tgi|251831106|ref|NC_012920.1|\t16519\t11\t51M200H\t*\t0\t0\tTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:92\tAS:i:92\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0196\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,51S200M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:13575:19255/1\t2064\tgi|251831106|ref|NC_012920.1|\t16520\t11\t50M201H\t*\t0\t0\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:16350:22621/1\t2064\tgi|251831106|ref|NC_012920.1|\t16520\t11\t50M201H\t*\t0\t0\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272/1\t2064\tgi|251831106|ref|NC_012920.1|\t16522\t11\t48M203H\t*\t0\t0\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145/1\t2048\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t*\t0\t0\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258/1\t2048\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010/1\t2064\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176/1\t2064\tgi|251831106|ref|NC_012920.1|\t16527\t11\t5H43M203H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048/1\t2064\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t*\t0\t0\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:19224:11655/1\t2048\tgi|251831106|ref|NC_012920.1|\t16530\t11\t40M211H\t*\t0\t0\tAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t*\tNM:i:0\tms:i:80\tAS:i:80\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,40S186M25S,60,2;\trl:i:0\n" ], "status": "failure", "test_index": 0, "time_seconds": 34.49319124221802, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*1.10] collected minimizers[M::mm_idx_gen::0.005*2.24] sorted minimizers[M::main::0.005*2.23] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.005*2.22] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.005*2.18] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.008*2.07] mapped 100 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/a/8/2/dataset_a823e89a-6d4c-4403-85f5-10c4b3b941fb.dat[M::main] Real time: 0.009 sec; CPU: 0.017 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #2)" name="1" time="24.887770652770996">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fastq_input|analysis_type_selector": "sr",  "fastq_input|fastq_input1": {   "id": "9198be67477987ab",   "src": "hda"  },  "fastq_input|fastq_input_selector": "single",  "io_options|output_format": "CRAM",  "reference_source|ref_file": {   "id": "23c57845b5b7352e",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/a/5/6/dataset_a56d67d9-4534-411d-a20f-2f136bc88c69.dat\u0027 reference.fa \u0026\u0026 minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa \u0027/galaxy/server/database/objects/e/b/1/dataset_eb17cec0-ae33-4784-9fd5-4428219e2ed4.dat\u0027 -a | samtools sort -T \"${TMPDIR:-.}\" -@${GALAXY_SLOTS:-2} -O CRAM  --reference reference.fa --output-fmt-option no_ref -o \u0027/galaxy/server/database/objects/6/9/b/dataset_69b96805-935c-47d2-a975-127e626cb15c.dat\u0027",  "command_version": null,  "create_time": "2023-02-07T23:09:32.487338",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-5slsz",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "9afb2384a0adfab0",  "inputs": {   "fastq_input1": {    "id": "9198be67477987ab",    "src": "hda",    "uuid": "eb17cec0-ae33-4784-9fd5-4428219e2ed4"   },   "ref_file": {    "id": "23c57845b5b7352e",    "src": "hda",    "uuid": "a56d67d9-4534-411d-a20f-2f136bc88c69"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "alignment_output": {    "id": "38bae8d800059d18",    "src": "hda",    "uuid": "69b96805-935c-47d2-a975-127e626cb15c"   }  },  "params": {   "__input_ext": "\"input\"",   "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_input": "{\"__current_case__\": 0, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 714, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"single\"}",   "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}",   "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"CRAM\"}",   "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 713, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:09:39.098229",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 24.887770652770996, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #3)" name="2" time="34.3227903842926">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "fastq_input|fastq_input1": {   "id": "31afeac92f3c2672",   "src": "hda"  },  "fastq_input|fastq_input2": {   "id": "1b28334150b31022",   "src": "hda"  },  "fastq_input|fastq_input_selector": "paired",  "reference_source|ref_file": {   "id": "56f9741e5414bb48",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/e/d/1/dataset_ed191437-da48-4c10-a582-17e2e419a20c.dat\u0027 reference.fa \u0026\u0026 minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa \u0027/galaxy/server/database/objects/6/d/6/dataset_6d626c3b-a151-40ca-88eb-03e69d1d0b95.dat\u0027 \u0027/galaxy/server/database/objects/c/1/7/dataset_c172336f-cefb-42e4-a9c0-36c9b3adbe2c.dat\u0027 -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o \u0027/galaxy/server/database/objects/d/0/9/dataset_d09e3a04-41e4-4837-9833-7e45c8c55256.dat\u0027",  "command_version": "2.17-r941",  "create_time": "2023-02-07T23:10:01.450467",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-scrlf",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "7e3319f1d25eedc2",  "inputs": {   "fastq_input1": {    "id": "31afeac92f3c2672",    "src": "hda",    "uuid": "6d626c3b-a151-40ca-88eb-03e69d1d0b95"   },   "fastq_input2": {    "id": "1b28334150b31022",    "src": "hda",    "uuid": "c172336f-cefb-42e4-a9c0-36c9b3adbe2c"   },   "ref_file": {    "id": "56f9741e5414bb48",    "src": "hda",    "uuid": "ed191437-da48-4c10-a582-17e2e419a20c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811403.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:10:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811403.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:10:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "34359.0000000",    "title": "Memory Allocated (MB)",    "value": "34359"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "alignment_output": {    "id": "51beeea95efcf8d5",    "src": "hda",    "uuid": "d09e3a04-41e4-4837-9833-7e45c8c55256"   }  },  "params": {   "__input_ext": "\"input\"",   "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_input": "{\"__current_case__\": 1, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 717, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 718, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}",   "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}",   "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}",   "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 716, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"  },  "state": "ok",  "stderr": "[M::mm_idx_gen::0.004*0.94] collected minimizers\n[M::mm_idx_gen::0.006*1.99] sorted minimizers\n[M::main::0.006*1.98] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*1.98] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.95] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.014*1.99] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/6/d/6/dataset_6d626c3b-a151-40ca-88eb-03e69d1d0b95.dat /galaxy/server/database/objects/c/1/7/dataset_c172336f-cefb-42e4-a9c0-36c9b3adbe2c.dat\n[M::main] Real time: 0.015 sec; CPU: 0.028 sec; Peak RSS: 0.005 GB\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4",  "tool_stderr": "[M::mm_idx_gen::0.004*0.94] collected minimizers\n[M::mm_idx_gen::0.006*1.99] sorted minimizers\n[M::main::0.006*1.98] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*1.98] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.95] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.014*1.99] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/6/d/6/dataset_6d626c3b-a151-40ca-88eb-03e69d1d0b95.dat /galaxy/server/database/objects/c/1/7/dataset_c172336f-cefb-42e4-a9c0-36c9b3adbe2c.dat\n[M::main] Real time: 0.015 sec; CPU: 0.028 sec; Peak RSS: 0.005 GB\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:10:13.713035",  "user_email": "tests@fake.org" }, "output_problems": [  "Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_0j5m5uc4.sam v. /tmp/history_bam_converted_to_sam_ura3wyvd.sam )\n--- local_file\n+++ history_data\n@@ -1,303 +1,301 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_12.dat /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_13.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t73\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t=\t1\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\tBCCCCFFFFFFFGGGGGGGGGGGHHHHGHGHHHHHHHHHGGGGGGHHHHGHHHHHHHHHHGHHHHHHGGHGGHHHGHHHHFHHGHHHHHHHHHGHEHEFFGHHEGGCEFGGFHHHBGHHGHHHHGHFHHHGHGHGHGGCDFDDACGGGGGGGAAFFFFFFFFFBAFFFFFB;FFFFFFADDFFFFFFFFFFEFFFFFFFFFFBFFFFFFFFFFFFFFEFFFFFFFFBFEFFFFEFE;DFFFDFBFF/9BFB\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t133\tgi|251831106|ref|NC_012920.1|\t1\t0\t*\t=\t1\t0\tTCGCCTTACCGCTACTCACCCACGGCGGCCATCAGCCGATACTAAGTTTGGGGTATGGTGGGGGGGATAATGAATTAGGTTGTGGGGGAGGGTTTGTGGTTGAGAGAAACACAAAAAACAATCTTATATATGGGTAGTCGTTTTGTATTGGTTTTTTGTTTTGTTTGTGTTTTGAGTGTCGGTTTAGTTCGGTGTACTAGGGGGGGTGGATGGGGTCGGCTGGTGAGGGGGTCTTAGTGTATTGAGTGTGG\t1\u003e11111@11111A111A100000000////011110//\u003e\u003e/12@1@22B/////1@\u003e21/\u003e\u003e/-----9/;////9////--;-;-;-----;--------9/-/-///9-;-------9//////9/////-//-/9-;-;9--/////99-;--9-:-;----/---/-----////---9-/////--;A-//////---------9/-----;-----/-/-----;--;//////////9;///-\n-M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t10S241M\t=\t1\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tNM:i:1\tms:i:472\tAS:i:472\tnn:i:0\ttp:A:P\tcm:i:34\ts1:i:234\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1101:18422:19051\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1101:25545:21098\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t=\t1\t216\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tNM:i:3\tms:i:246\tAS:i:246\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:119\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1101:5446:12248\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t78S173M\t=\t1\t213\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCDDDCCCCFFFGGGGGGGGGGHHHHHGHHHHHHHHGHHHHHHGHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGGGGHHHHHHHGFGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHGHHHHHHGHGHGHHGGGGGGGGGGGFFFFFFFFFFFFFFAFFFFFFFFFFFFFBFC?.EAFFFFFFFFAFFFFFFFFFFFFFFFEFFFF0FFFFFFF0BFFFFFFFFF?.BDCFFEDA/\tNM:i:1\tms:i:336\tAS:i:336\tnn:i:0\ttp:A:P\tcm:i:25\ts1:i:167\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16492,+,78M173S,36,1;\n-M01368:8:000000000-A3GHV:1:1101:5861:6452\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t236\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,2;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t=\t1\t151\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t\u003eA@AAAAD2ADDFFGGGGGFGGHA?EAEFBEAGHFABFGG5FDF5DB1EEGAFDFB53FF5FH@G5FFEHGHEFHFFHBE333GF43GCGGGGE@0?BFGGB0B?FHGFDGGHHHBFFDEGGHGFFFDFE@\u003c1\u003e@FFFGHHHHFHEFGDABFFGG/@DCE\u003cCG1\u003cGF0/DD000=\u003cDHGBDFDCECE/:AC?-;-;9B/ABBB-AD9BFB99AB?BDFBAD-.9..@;=;;..9..9/9;BEF;A:9/BFF\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t=\t1\t213\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:13809:1733\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t50S179M22S\t=\t1\t179\tNATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATCTGTCTCTTATACACATCTGAC\t#\u003eAABBFFCFFFGGGFGGGGGGGGHHHHHHHHHHHHHHHHHHGHHHGGEGGFFHHHHHHGHGHGHHHHHEHFHGHHHHEFHHGHGGGGGHHHHGHHHHHHHHHGFGHHHHHGHGHGHHGGGCCGGGGFGGGGGGDGGGGFGDGGGFFFFFFEFFFFFFFBAF:9AF//;BEF-DD/FFFFBFFFFFFFFFEBFF?FB;/;//BFFEFFE/::..9;-:B9:FBFFFFFFBFB/9/FFF/B///99/:B///\tNM:i:1\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16520,+,50M201S,11,2;\n-M01368:8:000000000-A3GHV:1:1102:17584:10050\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t52S138M61S\t=\t1\t138\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGATCTTGGGGGGTGG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHGGHHHHHHHHHHHHHHGHHHGGHHHHHHHGGHHHHGGGGGHHHHHHHHHHHHHHGGHHHHHHGHGHGGHGGFGGGGGGGGGGFGGFGGGGGGGGGFFFFFFFFFFEFFCFAAFEFEFFFFFFFCFDFFFFFFEFFFFFFFFFFBFFFFFFF/:BFFFFFFFFFFFFFFFFAFC=@-.;A///B././//////.-9----\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16518,+,52M199S,11,1;\n-M01368:8:000000000-A3GHV:1:1102:18842:24844\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t228\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\tBBBCBFF@CCBBGGGGGGGGGGHHGHGGHHHGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGGHHHHHHHHHHHHHHHHHHHHGGGHGGHHHHHHGHBFGHHHHHHHHBGHHHHHHGHGGGHFGCGGFHHFHFFHHBHHHHFFHFHHHHGGDHGGBC?;@DFBFFFFFFFFFBFFFFFFFFFFFFFF.B?FB.@;;DFFFFFFFFFFFEE-A./BBBFBFBFFF//BFB/BFF/\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t=\t1\t213\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5728:8777\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t179\tCACTTGGGAGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tBBBBBFFBBBBFGGGGGGGDGGHHHHHFHHHGGGGGHHGFHFHHFHHHGGHHHHHHHHHHHHHGHHHHHHFGHHHGGGGHHHHHHHHHGHHHGHHHHFHHHGGHGGHFFHHHHGFHHHHHHHHHHFHFHHHFHFHHHHHGGGGGHGHHHHHGHHHHHHH/FHHHHHGHGGGHHGGFBFFFFFFFFFF;DDFFFFFFF;;BA.=DDBFFFFF;-DFF.EDFFFFFFEF-AFFFFFB;FBFFFBFFFFB9B..\tNM:i:2\tms:i:280\tAS:i:280\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,2;\n-M01368:8:000000000-A3GHV:1:1102:5983:21093\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t177\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tAAABCFCABBCFGGGGGGGGGGHHHHHHGFHHHHHHHHGGHHHGHGHHHGGGGFHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHFHGGHHHHFHGHHEHHHHHHHGHHHHHD@FGGHHHHHFFFHHGGHGH?DHHHHHGHGHEGG/@?ADGFGGFFFFAFFFFFFFFFFFFFFFFFFFFFFFAAFFFFFFDFFFFFFFF;D9BFFFFFFFFFFFFFFFFFEFFFBBFFF0BFFFBBFF0EFFFFFFFA\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:170\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:7765:18353\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t=\t1\t236\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCBCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHGHHHGHHHHHHHHHHHGGGGGGHHHHHHHHHHHHHHHHHHHHGGHGGHHHGHHGHHGHHHHHHHHHCGGFHHHHGHHHHHGCFGGHHGHHHHHHGFHHHGHHHHHHHGHGHGFF/CC?ADAFGFFFFFFFFFFFFFFDFFFFFFFFAFFFFFFFFFFFEDFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFBBFBFBFFFFFFFFFFFFFFFFF?\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t=\t1\t173\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\tCCCCCFFFFFFFGGGGGGGGGGGGGGGHFHHHHHHHHHHHHHHHHGHHHHHHHHGHHHIHHHHHHHGGGGFHHHHHHHHHHHHHHHHHHHGHGGHGGHHHHHHHHHGHHHHHHHHHHHHHHHHHGHHHH/FGGGGHHHHHHHGGEHHHHHGHHHHHHGHGHEFEFGGFFFFFFFFFFFFFFFFFFFFFAFDFFFFFAFFFF;;@FFEFFFFFFFFFFE=?AFFFFFFFFFFFFFFFFFFBFBBBFFFFEFF\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:168\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1105:16787:9771\t2209\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t=\t1\t-16265\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCDCFFFFFFFGGGGGGGGGGGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGFG\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701\t2129\tgi|251831106|ref|NC_012920.1|\t16506\t21\t64M187H\t=\t1\t-16569\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/FB;///BF/.B/FFFFFFFFFFFFFFF9?DDEBFED.DDCFFGFFGGGFF;;0FFFGAGGGGF\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:77\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2209\tgi|251831106|ref|NC_012920.1|\t16508\t12\t62M189H\t=\t1\t-16370\tCTACCTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCCCFFFFFFFGGGGGGGGGGHHHHHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHGHGGHG\tNM:i:2\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0323\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,62S140M49S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2209\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16378\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABBBBFFFFFFFGGGGGGGGGGGGBFHHGG?EEHHGHHHHHHGFHFHHHHGHGHHGGHE\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S134M58S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233\t2145\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16309\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t3AABABFFBFFFGCFGGGGGGGHHHFGCFGGGFFGHHCGHHHGHGHGHBFFHHHEDGGF\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2129\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t=\t1\t-16569\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t;0/FFFBGFBBFCHHHHHHFHHFFGGEACCCDEGGGGFGD1GFHGFGFFEHHHHGGHHH\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:17389:18671\t2193\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAACCCTAAAGAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/:/:;9////A?B.F//B;/./.A9.9;.;:..-?9B9/FB//;///:B/9AC;0FB\tNM:i:2\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:92\ts2:i:0\tde:f:0.0351\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t.9/.BFFBFBEFF;FFFFBF?BEDA:/.ADEFFFFFFEGGGGFCB;99/B;.GFFGF\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:77\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFGFFFGGFFBFBCBHGC.GC?DHHHGDAFFCHHEHGHHHHGFGGHHHGCGHHHH\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2145\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t=\t1\t-16377\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t?A3AA?DFFFFFGGGGGGGFFGHFGCEGGFHHHHHHHHHGHCBGFEGGHHDEGA\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2193\tgi|251831106|ref|NC_012920.1|\t16516\t12\t57H54M140H\t=\t1\t-16569\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFB0000FAFB0GGFGBGGHGGFC::.EEA\u003c@HFDG0HHGGHGBDFGFG\u003cDDFGE\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,111S140M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2129\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t=\t1\t-16569\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFGGGGGGGGGGGHHHGHHGGGHHHHGGGGGHHHHHHFHHHHHHHHHHGGHHHH\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2209\tgi|251831106|ref|NC_012920.1|\t16518\t11\t52M199H\t=\t1\t-16381\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHG\tNM:i:1\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0192\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,52S138M61S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:6074:6549\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t20\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t///A/:/BFFFF9...FFE;.9:.;.CF//B/FBFBBFBFGF/:?DFC90\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:9655:13916\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t21\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t:FBEF;0FFFFFFFBFFFFFEADEFBFFFFFFGGGFGFFBBB/F.GGFC9\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:92\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272\t2129\tgi|251831106|ref|NC_012920.1|\t16522\t20\t48M203H\t=\t1\t-16569\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/.FFFFFBBFBFBFFFEFEEFFFDFFFFFFFB//BBEFFB/.AABBFF\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16406\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tAAABBFFFFFDFGGGGGGGGGGHHHHHHGHHHGFHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S120M86S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t2145\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16275\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16388\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCDDFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S138M68S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258\t2145\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t=\t1\t-16287\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t11\u003e\u003eABFFFFFFGGCGC1BBF1GHHHBHHHHGFHGH1A100AA\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:17657:20856\t2193\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFEFFF?FEFFFFEAA.;AAFFF:0FB0FFBFFFB:A9A90FF\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tHFHHHGAFA\u003c.HFGHGGGGGHGGDDGHHHHFHFHGGFC?HGHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t28\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFFB.FEFAA:EFFE:.;AFBB;FFFFFFFGFF/FEDFGGG\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tGFHHHHHHGGGHGGHGGGGGGHHHFGGGGHHGFHHHF\u003cGGHHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:14540:5315\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCCCACGTTCCCCTTAAATAAGACATCACGATG\t09BFBB:--A=-.A;FEBFFFFFFFFFFFFFFFC//?AA0EFF\tNM:i:1\tms:i:76\tAS:i:76\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:84\ts2:i:0\tde:f:0.0233\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n" ], "status": "failure", "test_index": 2, "time_seconds": 34.3227903842926, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*0.94] collected minimizers[M::mm_idx_gen::0.006*1.99] sorted minimizers[M::main::0.006*1.98] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.98] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.006*1.95] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.014*1.99] mapped 200 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/6/d/6/dataset_6d626c3b-a151-40ca-88eb-03e69d1d0b95.dat /galaxy/server/database/objects/c/1/7/dataset_c172336f-cefb-42e4-a9c0-36c9b3adbe2c.dat[M::main] Real time: 0.015 sec; CPU: 0.028 sec; Peak RSS: 0.005 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #4)" name="3" time="35.9774284362793">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "fastq_input|fastq_input1": {   "id": "b84ce7d52b5ffe03",   "src": "hda"  },  "fastq_input|fastq_input2": {   "id": "8ff8f2345d4174f3",   "src": "hda"  },  "fastq_input|fastq_input_selector": "paired",  "reference_source|ref_file": {   "id": "a92d7743129e13ef",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/d/f/c/dataset_dfc3ccab-8b8d-42a6-aa98-78f330609887.dat\u0027 reference.fa \u0026\u0026 minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa \u0027/galaxy/server/database/objects/b/4/d/dataset_b4d0722a-3d19-45f1-97bd-b22e72c30e03.dat\u0027 \u0027/galaxy/server/database/objects/b/e/f/dataset_befe6c81-6d80-4afd-aa43-286dd8dd7f86.dat\u0027 -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o \u0027/galaxy/server/database/objects/7/c/c/dataset_7cc6147c-fc1a-447b-9df7-d31fa624f748.dat\u0027",  "command_version": "2.17-r941",  "create_time": "2023-02-07T23:10:37.758131",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zxxnv",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "448e14266e15800c",  "inputs": {   "fastq_input1": {    "id": "b84ce7d52b5ffe03",    "src": "hda",    "uuid": "b4d0722a-3d19-45f1-97bd-b22e72c30e03"   },   "fastq_input2": {    "id": "8ff8f2345d4174f3",    "src": "hda",    "uuid": "befe6c81-6d80-4afd-aa43-286dd8dd7f86"   },   "ref_file": {    "id": "a92d7743129e13ef",    "src": "hda",    "uuid": "dfc3ccab-8b8d-42a6-aa98-78f330609887"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811439.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:10:39"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811439.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:10:39"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "34359.0000000",    "title": "Memory Allocated (MB)",    "value": "34359"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "alignment_output": {    "id": "0ceacae6d5aa2276",    "src": "hda",    "uuid": "7cc6147c-fc1a-447b-9df7-d31fa624f748"   }  },  "params": {   "__input_ext": "\"input\"",   "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_input": "{\"__current_case__\": 1, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 721, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 722, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}",   "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}",   "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}",   "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 720, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"  },  "state": "ok",  "stderr": "[M::mm_idx_gen::0.004*1.06] collected minimizers\n[M::mm_idx_gen::0.005*1.93] sorted minimizers\n[M::main::0.005*1.92] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*1.92] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.87] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.012*2.18] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/b/4/d/dataset_b4d0722a-3d19-45f1-97bd-b22e72c30e03.dat /galaxy/server/database/objects/b/e/f/dataset_befe6c81-6d80-4afd-aa43-286dd8dd7f86.dat\n[M::main] Real time: 0.013 sec; CPU: 0.027 sec; Peak RSS: 0.005 GB\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4",  "tool_stderr": "[M::mm_idx_gen::0.004*1.06] collected minimizers\n[M::mm_idx_gen::0.005*1.93] sorted minimizers\n[M::main::0.005*1.92] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.005*1.92] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.87] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.012*2.18] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/b/4/d/dataset_b4d0722a-3d19-45f1-97bd-b22e72c30e03.dat /galaxy/server/database/objects/b/e/f/dataset_befe6c81-6d80-4afd-aa43-286dd8dd7f86.dat\n[M::main] Real time: 0.013 sec; CPU: 0.027 sec; Peak RSS: 0.005 GB\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:10:49.625696",  "user_email": "tests@fake.org" }, "output_problems": [  "Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_xa8wz4a2.sam v. /tmp/history_bam_converted_to_sam_ic7pu54p.sam )\n--- local_file\n+++ history_data\n@@ -1,303 +1,301 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_12.dat /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_13.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t73\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t=\t1\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\tBCCCCFFFFFFFGGGGGGGGGGGHHHHGHGHHHHHHHHHGGGGGGHHHHGHHHHHHHHHHGHHHHHHGGHGGHHHGHHHHFHHGHHHHHHHHHGHEHEFFGHHEGGCEFGGFHHHBGHHGHHHHGHFHHHGHGHGHGGCDFDDACGGGGGGGAAFFFFFFFFFBAFFFFFB;FFFFFFADDFFFFFFFFFFEFFFFFFFFFFBFFFFFFFFFFFFFFEFFFFFFFFBFEFFFFEFE;DFFFDFBFF/9BFB\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t133\tgi|251831106|ref|NC_012920.1|\t1\t0\t*\t=\t1\t0\tTCGCCTTACCGCTACTCACCCACGGCGGCCATCAGCCGATACTAAGTTTGGGGTATGGTGGGGGGGATAATGAATTAGGTTGTGGGGGAGGGTTTGTGGTTGAGAGAAACACAAAAAACAATCTTATATATGGGTAGTCGTTTTGTATTGGTTTTTTGTTTTGTTTGTGTTTTGAGTGTCGGTTTAGTTCGGTGTACTAGGGGGGGTGGATGGGGTCGGCTGGTGAGGGGGTCTTAGTGTATTGAGTGTGG\t1\u003e11111@11111A111A100000000////011110//\u003e\u003e/12@1@22B/////1@\u003e21/\u003e\u003e/-----9/;////9////--;-;-;-----;--------9/-/-///9-;-------9//////9/////-//-/9-;-;9--/////99-;--9-:-;----/---/-----////---9-/////--;A-//////---------9/-----;-----/-/-----;--;//////////9;///-\n-M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t10S241M\t=\t1\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tNM:i:1\tms:i:472\tAS:i:472\tnn:i:0\ttp:A:P\tcm:i:34\ts1:i:234\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1101:18422:19051\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1101:25545:21098\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t=\t1\t216\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tNM:i:3\tms:i:246\tAS:i:246\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:119\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1101:5446:12248\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t78S173M\t=\t1\t213\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCDDDCCCCFFFGGGGGGGGGGHHHHHGHHHHHHHHGHHHHHHGHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGGGGHHHHHHHGFGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHGHHHHHHGHGHGHHGGGGGGGGGGGFFFFFFFFFFFFFFAFFFFFFFFFFFFFBFC?.EAFFFFFFFFAFFFFFFFFFFFFFFFEFFFF0FFFFFFF0BFFFFFFFFF?.BDCFFEDA/\tNM:i:1\tms:i:336\tAS:i:336\tnn:i:0\ttp:A:P\tcm:i:25\ts1:i:167\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16492,+,78M173S,36,1;\n-M01368:8:000000000-A3GHV:1:1101:5861:6452\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t236\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,2;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t=\t1\t151\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t\u003eA@AAAAD2ADDFFGGGGGFGGHA?EAEFBEAGHFABFGG5FDF5DB1EEGAFDFB53FF5FH@G5FFEHGHEFHFFHBE333GF43GCGGGGE@0?BFGGB0B?FHGFDGGHHHBFFDEGGHGFFFDFE@\u003c1\u003e@FFFGHHHHFHEFGDABFFGG/@DCE\u003cCG1\u003cGF0/DD000=\u003cDHGBDFDCECE/:AC?-;-;9B/ABBB-AD9BFB99AB?BDFBAD-.9..@;=;;..9..9/9;BEF;A:9/BFF\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t=\t1\t213\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:13809:1733\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t50S179M22S\t=\t1\t179\tNATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATCTGTCTCTTATACACATCTGAC\t#\u003eAABBFFCFFFGGGFGGGGGGGGHHHHHHHHHHHHHHHHHHGHHHGGEGGFFHHHHHHGHGHGHHHHHEHFHGHHHHEFHHGHGGGGGHHHHGHHHHHHHHHGFGHHHHHGHGHGHHGGGCCGGGGFGGGGGGDGGGGFGDGGGFFFFFFEFFFFFFFBAF:9AF//;BEF-DD/FFFFBFFFFFFFFFEBFF?FB;/;//BFFEFFE/::..9;-:B9:FBFFFFFFBFB/9/FFF/B///99/:B///\tNM:i:1\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16520,+,50M201S,11,2;\n-M01368:8:000000000-A3GHV:1:1102:17584:10050\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t52S138M61S\t=\t1\t138\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGATCTTGGGGGGTGG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHGGHHHHHHHHHHHHHHGHHHGGHHHHHHHGGHHHHGGGGGHHHHHHHHHHHHHHGGHHHHHHGHGHGGHGGFGGGGGGGGGGFGGFGGGGGGGGGFFFFFFFFFFEFFCFAAFEFEFFFFFFFCFDFFFFFFEFFFFFFFFFFBFFFFFFF/:BFFFFFFFFFFFFFFFFAFC=@-.;A///B././//////.-9----\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16518,+,52M199S,11,1;\n-M01368:8:000000000-A3GHV:1:1102:18842:24844\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t228\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\tBBBCBFF@CCBBGGGGGGGGGGHHGHGGHHHGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGGHHHHHHHHHHHHHHHHHHHHGGGHGGHHHHHHGHBFGHHHHHHHHBGHHHHHHGHGGGHFGCGGFHHFHFFHHBHHHHFFHFHHHHGGDHGGBC?;@DFBFFFFFFFFFBFFFFFFFFFFFFFF.B?FB.@;;DFFFFFFFFFFFEE-A./BBBFBFBFFF//BFB/BFF/\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t=\t1\t213\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5728:8777\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t179\tCACTTGGGAGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tBBBBBFFBBBBFGGGGGGGDGGHHHHHFHHHGGGGGHHGFHFHHFHHHGGHHHHHHHHHHHHHGHHHHHHFGHHHGGGGHHHHHHHHHGHHHGHHHHFHHHGGHGGHFFHHHHGFHHHHHHHHHHFHFHHHFHFHHHHHGGGGGHGHHHHHGHHHHHHH/FHHHHHGHGGGHHGGFBFFFFFFFFFF;DDFFFFFFF;;BA.=DDBFFFFF;-DFF.EDFFFFFFEF-AFFFFFB;FBFFFBFFFFB9B..\tNM:i:2\tms:i:280\tAS:i:280\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,2;\n-M01368:8:000000000-A3GHV:1:1102:5983:21093\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t177\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tAAABCFCABBCFGGGGGGGGGGHHHHHHGFHHHHHHHHGGHHHGHGHHHGGGGFHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHFHGGHHHHFHGHHEHHHHHHHGHHHHHD@FGGHHHHHFFFHHGGHGH?DHHHHHGHGHEGG/@?ADGFGGFFFFAFFFFFFFFFFFFFFFFFFFFFFFAAFFFFFFDFFFFFFFF;D9BFFFFFFFFFFFFFFFFFEFFFBBFFF0BFFFBBFF0EFFFFFFFA\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:170\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:7765:18353\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t=\t1\t236\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCBCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHGHHHGHHHHHHHHHHHGGGGGGHHHHHHHHHHHHHHHHHHHHGGHGGHHHGHHGHHGHHHHHHHHHCGGFHHHHGHHHHHGCFGGHHGHHHHHHGFHHHGHHHHHHHGHGHGFF/CC?ADAFGFFFFFFFFFFFFFFDFFFFFFFFAFFFFFFFFFFFEDFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFBBFBFBFFFFFFFFFFFFFFFFF?\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t=\t1\t173\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\tCCCCCFFFFFFFGGGGGGGGGGGGGGGHFHHHHHHHHHHHHHHHHGHHHHHHHHGHHHIHHHHHHHGGGGFHHHHHHHHHHHHHHHHHHHGHGGHGGHHHHHHHHHGHHHHHHHHHHHHHHHHHGHHHH/FGGGGHHHHHHHGGEHHHHHGHHHHHHGHGHEFEFGGFFFFFFFFFFFFFFFFFFFFFAFDFFFFFAFFFF;;@FFEFFFFFFFFFFE=?AFFFFFFFFFFFFFFFFFFBFBBBFFFFEFF\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:168\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1105:16787:9771\t2209\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t=\t1\t-16265\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCDCFFFFFFFGGGGGGGGGGGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGFG\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701\t2129\tgi|251831106|ref|NC_012920.1|\t16506\t21\t64M187H\t=\t1\t-16569\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/FB;///BF/.B/FFFFFFFFFFFFFFF9?DDEBFED.DDCFFGFFGGGFF;;0FFFGAGGGGF\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:77\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2209\tgi|251831106|ref|NC_012920.1|\t16508\t12\t62M189H\t=\t1\t-16370\tCTACCTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCCCFFFFFFFGGGGGGGGGGHHHHHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHGHGGHG\tNM:i:2\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0323\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,62S140M49S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2209\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16378\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABBBBFFFFFFFGGGGGGGGGGGGBFHHGG?EEHHGHHHHHHGFHFHHHHGHGHHGGHE\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S134M58S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233\t2145\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16309\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t3AABABFFBFFFGCFGGGGGGGHHHFGCFGGGFFGHHCGHHHGHGHGHBFFHHHEDGGF\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2129\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t=\t1\t-16569\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t;0/FFFBGFBBFCHHHHHHFHHFFGGEACCCDEGGGGFGD1GFHGFGFFEHHHHGGHHH\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:17389:18671\t2193\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAACCCTAAAGAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/:/:;9////A?B.F//B;/./.A9.9;.;:..-?9B9/FB//;///:B/9AC;0FB\tNM:i:2\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:92\ts2:i:0\tde:f:0.0351\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t.9/.BFFBFBEFF;FFFFBF?BEDA:/.ADEFFFFFFEGGGGFCB;99/B;.GFFGF\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:77\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFGFFFGGFFBFBCBHGC.GC?DHHHGDAFFCHHEHGHHHHGFGGHHHGCGHHHH\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2145\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t=\t1\t-16377\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t?A3AA?DFFFFFGGGGGGGFFGHFGCEGGFHHHHHHHHHGHCBGFEGGHHDEGA\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2193\tgi|251831106|ref|NC_012920.1|\t16516\t12\t57H54M140H\t=\t1\t-16569\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFB0000FAFB0GGFGBGGHGGFC::.EEA\u003c@HFDG0HHGGHGBDFGFG\u003cDDFGE\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,111S140M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2129\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t=\t1\t-16569\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFGGGGGGGGGGGHHHGHHGGGHHHHGGGGGHHHHHHFHHHHHHHHHHGGHHHH\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2209\tgi|251831106|ref|NC_012920.1|\t16518\t11\t52M199H\t=\t1\t-16381\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHG\tNM:i:1\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0192\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,52S138M61S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:6074:6549\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t20\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t///A/:/BFFFF9...FFE;.9:.;.CF//B/FBFBBFBFGF/:?DFC90\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:9655:13916\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t21\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t:FBEF;0FFFFFFFBFFFFFEADEFBFFFFFFGGGFGFFBBB/F.GGFC9\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:92\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272\t2129\tgi|251831106|ref|NC_012920.1|\t16522\t20\t48M203H\t=\t1\t-16569\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/.FFFFFBBFBFBFFFEFEEFFFDFFFFFFFB//BBEFFB/.AABBFF\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16406\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tAAABBFFFFFDFGGGGGGGGGGHHHHHHGHHHGFHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S120M86S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t2145\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16275\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16388\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCDDFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S138M68S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258\t2145\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t=\t1\t-16287\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t11\u003e\u003eABFFFFFFGGCGC1BBF1GHHHBHHHHGFHGH1A100AA\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:17657:20856\t2193\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFEFFF?FEFFFFEAA.;AAFFF:0FB0FFBFFFB:A9A90FF\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tHFHHHGAFA\u003c.HFGHGGGGGHGGDDGHHHHFHFHGGFC?HGHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t28\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFFB.FEFAA:EFFE:.;AFBB;FFFFFFFGFF/FEDFGGG\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tGFHHHHHHGGGHGGHGGGGGGHHHFGGGGHHGFHHHF\u003cGGHHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:14540:5315\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCCCACGTTCCCCTTAAATAAGACATCACGATG\t09BFBB:--A=-.A;FEBFFFFFFFFFFFFFFFC//?AA0EFF\tNM:i:1\tms:i:76\tAS:i:76\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:84\ts2:i:0\tde:f:0.0233\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 35.9774284362793, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*1.06] collected minimizers[M::mm_idx_gen::0.005*1.93] sorted minimizers[M::main::0.005*1.92] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.005*1.92] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.006*1.87] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.012*2.18] mapped 200 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/b/4/d/dataset_b4d0722a-3d19-45f1-97bd-b22e72c30e03.dat /galaxy/server/database/objects/b/e/f/dataset_befe6c81-6d80-4afd-aa43-286dd8dd7f86.dat[M::main] Real time: 0.013 sec; CPU: 0.027 sec; Peak RSS: 0.005 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #5)" name="4" time="35.9510223865509">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "fastq_input|fastq_input1": {   "id": "05c27063986a1d55",   "src": "hdca"  },  "fastq_input|fastq_input_selector": "paired_collection",  "reference_source|ref_file": {   "id": "5b3d94cdffc41037",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/6/3/0/dataset_630d9fed-3a3c-480d-89ce-713d0225c7a4.dat\u0027 reference.fa \u0026\u0026 minimap2 -x sr           -t ${GALAXY_SLOTS:-4} reference.fa \u0027/galaxy/server/database/objects/a/1/f/dataset_a1f1d574-6202-4e2f-bb74-87d427feca11.dat\u0027 \u0027/galaxy/server/database/objects/f/2/4/dataset_f24dbfe9-907d-4214-b3d6-f9cfeb707d0e.dat\u0027 -a | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O BAM -o \u0027/galaxy/server/database/objects/1/1/e/dataset_11ee549c-917b-461d-894e-81c980c17f12.dat\u0027",  "command_version": "2.17-r941",  "create_time": "2023-02-07T23:11:12.814396",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-g26bn",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "b236a9b7eb279a7d",  "inputs": {   "fastq_input11": {    "id": "5a80c7b0aeedc5f4",    "src": "hda",    "uuid": "a1f1d574-6202-4e2f-bb74-87d427feca11"   },   "fastq_input12": {    "id": "68294e4e1fabed97",    "src": "hda",    "uuid": "f24dbfe9-907d-4214-b3d6-f9cfeb707d0e"   },   "ref_file": {    "id": "5b3d94cdffc41037",    "src": "hda",    "uuid": "630d9fed-3a3c-480d-89ce-713d0225c7a4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675811474.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:11:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675811474.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:11:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "34359.0000000",    "title": "Memory Allocated (MB)",    "value": "34359"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "alignment_output": {    "id": "ba0ccb8eaaf1ecbf",    "src": "hda",    "uuid": "11ee549c-917b-461d-894e-81c980c17f12"   }  },  "params": {   "__input_ext": "\"input\"",   "alignment_options": "{\"A\": \"\", \"B\": \"\", \"E\": \"\", \"E2\": \"\", \"O\": \"\", \"O2\": \"\", \"no_end_flt\": \"true\", \"s\": \"\", \"splicing\": {\"__current_case__\": 0, \"splice_mode\": \"preset\"}, \"z\": \"\", \"z2\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_input": "{\"__current_case__\": 2, \"analysis_type_selector\": \"sr\", \"fastq_input1\": {\"values\": [{\"id\": 26, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}",   "indexing_options": "{\"H\": \"false\", \"I\": \"\", \"k\": \"\", \"w\": \"\"}",   "io_options": "{\"K\": \"\", \"L\": \"false\", \"Q\": \"false\", \"Y\": \"false\", \"c\": \"false\", \"cs\": null, \"eqx\": \"false\", \"output_format\": \"BAM\"}",   "mapping_options": "{\"F\": \"\", \"N\": \"\", \"X\": \"false\", \"f\": \"\", \"g\": \"\", \"m\": \"\", \"max_chain_iter\": \"\", \"max_chain_skip\": \"\", \"min_occ_floor\": \"\", \"n\": \"\", \"p\": \"\", \"r\": \"\"}",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 724, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"  },  "state": "ok",  "stderr": "[M::mm_idx_gen::0.004*0.78] collected minimizers\n[M::mm_idx_gen::0.006*1.80] sorted minimizers\n[M::main::0.006*1.80] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*1.80] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.77] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.014*1.99] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/a/1/f/dataset_a1f1d574-6202-4e2f-bb74-87d427feca11.dat /galaxy/server/database/objects/f/2/4/dataset_f24dbfe9-907d-4214-b3d6-f9cfeb707d0e.dat\n[M::main] Real time: 0.015 sec; CPU: 0.028 sec; Peak RSS: 0.005 GB\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2/2.17+galaxy4",  "tool_stderr": "[M::mm_idx_gen::0.004*0.78] collected minimizers\n[M::mm_idx_gen::0.006*1.80] sorted minimizers\n[M::main::0.006*1.80] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.006*1.80] mid_occ = 1000\n[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.006*1.77] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967\n[M::worker_pipeline::0.014*1.99] mapped 200 sequences\n[M::main] Version: 2.17-r941\n[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/a/1/f/dataset_a1f1d574-6202-4e2f-bb74-87d427feca11.dat /galaxy/server/database/objects/f/2/4/dataset_f24dbfe9-907d-4214-b3d6-f9cfeb707d0e.dat\n[M::main] Real time: 0.015 sec; CPU: 0.028 sec; Peak RSS: 0.005 GB\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:11:25.735840",  "user_email": "tests@fake.org" }, "output_problems": [  "Output alignment_output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_cluhc5cm.sam v. /tmp/history_bam_converted_to_sam_tk_4z638.sam )\n--- local_file\n+++ history_data\n@@ -1,303 +1,301 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:gi|251831106|ref|NC_012920.1|\tLN:16569\n-@PG\tID:minimap2\tPN:minimap2\tVN:2.5-r572\tCL:minimap2 -a -x sr -t 1 reference.fa /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_16.dat /private/var/folders/df/6xqpqpcd7h73b6jpx9t6cwhw0000gn/T/tmpChsAAk/files/000/dataset_17.dat\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t73\tgi|251831106|ref|NC_012920.1|\t1\t60\t71S180M\t=\t1\t0\tATCTGGTTCCTACTTCAGGGCCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATT\tBCCCCFFFFFFFGGGGGGGGGGGHHHHGHGHHHHHHHHHGGGGGGHHHHGHHHHHHHHHHGHHHHHHGGHGGHHHGHHHHFHHGHHHHHHHHHGHEHEFFGHHEGGCEFGGFHHHBGHHGHHHHGHFHHHGHGHGHGGCDFDDACGGGGGGGAAFFFFFFFFFBAFFFFFB;FFFFFFADDFFFFFFFFFFEFFFFFFFFFFBFFFFFFFFFFFFFFEFFFFFFFFBFEFFFFEFE;DFFFDFBFF/9BFB\tNM:i:1\tms:i:350\tAS:i:350\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16499,+,71M180S,12,2;\n-M01368:8:000000000-A3GHV:1:1101:6911:8255\t133\tgi|251831106|ref|NC_012920.1|\t1\t0\t*\t=\t1\t0\tTCGCCTTACCGCTACTCACCCACGGCGGCCATCAGCCGATACTAAGTTTGGGGTATGGTGGGGGGGATAATGAATTAGGTTGTGGGGGAGGGTTTGTGGTTGAGAGAAACACAAAAAACAATCTTATATATGGGTAGTCGTTTTGTATTGGTTTTTTGTTTTGTTTGTGTTTTGAGTGTCGGTTTAGTTCGGTGTACTAGGGGGGGTGGATGGGGTCGGCTGGTGAGGGGGTCTTAGTGTATTGAGTGTGG\t1\u003e11111@11111A111A100000000////011110//\u003e\u003e/12@1@22B/////1@\u003e21/\u003e\u003e/-----9/;////9////--;-;-;-----;--------9/-/-///9-;-------9//////9/////-//-/9-;-;9--/////99-;--9-:-;----/---/-----////---9-/////--;A-//////---------9/-----;-----/-/-----;--;//////////9;///-\n-M01368:8:000000000-A3GHV:1:1101:14518:9998\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t10S241M\t=\t1\t242\tCATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTAATTAATGCTTGTAGGACATAATAATAA\tCCCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGFHHHHGGGGGHGFHHHHHHHHHHHHHHHHHHHGHGGEHGGGGCGGGHHGGCGGGGGHHGHHHGGGGGGGG.BFFFGAGADFGAFDGFGGCFFF;DDFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFF09FFFE00;BE@;DABBFFFFFBBFB00;F:9;FFBFFF9BFFFFFFFFFFFFF90/::BFFFBF0\tNM:i:1\tms:i:472\tAS:i:472\tnn:i:0\ttp:A:P\tcm:i:34\ts1:i:234\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1101:18422:19051\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCCCCCFDDDDDFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGHHHHHHHHHGHHHHHHHHHHHHGGHGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHGCGGGHHHHHHHHHHHHHHHHHHHHHHGFDHGFHCFGGGGFGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;FFFFFFFFFFFFFFFFFFFFFFFFFFFFEFBFFFFFFFFFF:FFF.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1101:25545:21098\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t113S138M\t=\t1\t216\tGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTTCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCAACCTATGTCGCAGTATCTGTCTTTGAT\t3AAA34BFFFFFGCGGCGGGCGHHHGHHHHCGHFGHFHGFGGCDGGBD5FGFFFHFHGGGHAEBFGHHHEHGGFHBGGFHHHGGGEEFHHHFHFFHDHGHGHHHHFFHHGGFAEGFFFFFBGHHHFFHHHHHHHFHFHHFHGFHGHGA/\u003c@EFHEHH1GGHFFFHG1\u003e=FGHFHGF.GE//-\u003cBB?9.9BFFFB==AA/FFFFFA-@BA.;;D?F9FAB;---./99BFFFBBAE-.9B/BFB9F/9BFBB\tNM:i:3\tms:i:246\tAS:i:246\tnn:i:0\ttp:A:P\tcm:i:14\ts1:i:119\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16457,+,113M138S,60,1;\n-M01368:8:000000000-A3GHV:1:1101:5446:12248\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t78S173M\t=\t1\t213\tATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTT\tCCDDDCCCCFFFGGGGGGGGGGHHHHHGHHHHHHHHGHHHHHHGHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGGGGHHHHHHHGFGHHHHHHHHHHHHHHHHHGHHHHHGGGGGHHHHHHHHHHHHHHHGHHHHHHGHGHGHHGGGGGGGGGGGFFFFFFFFFFFFFFAFFFFFFFFFFFFFBFC?.EAFFFFFFFFAFFFFFFFFFFFFFFFEFFFF0FFFFFFF0BFFFFFFFFF?.BDCFFEDA/\tNM:i:1\tms:i:336\tAS:i:336\tnn:i:0\ttp:A:P\tcm:i:25\ts1:i:167\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16492,+,78M173S,36,1;\n-M01368:8:000000000-A3GHV:1:1101:5861:6452\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t236\tTTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tBCCCCFBBCCCFGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHHHHHHHHHGGGGHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHHGHHHHHHHHHHHHHHHHHHHGGHHHHGGGGGGEHGHHHHHHHHHHHGHHHHHHGHGHGHGGGGCGGGGGFFFFFFFFFFFFFFFFFFFFFFFF?FFEAF:DAEF9DEFFFFFFF-A.BFFFFFEFFFFEFFFFFFFF0FFEB0FFFFBFFFFFFADEFCF0/.\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:160\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,2;\n-M01368:8:000000000-A3GHV:1:1102:10403:6021\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t121S130M\t=\t1\t151\tCGCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTG\t\u003eA@AAAAD2ADDFFGGGGGFGGHA?EAEFBEAGHFABFGG5FDF5DB1EEGAFDFB53FF5FH@G5FFEHGHEFHFFHBE333GF43GCGGGGE@0?BFGGB0B?FHGFDGGHHHBFFDEGGHGFFFDFE@\u003c1\u003e@FFFGHHHHFHEFGDABFFGG/@DCE\u003cCG1\u003cGF0/DD000=\u003cDHGBDFDCECE/:AC?-;-;9B/ABBB-AD9BFB99AB?BDFBAD-.9..@;=;;..9..9/9;BEF;A:9/BFF\tNM:i:1\tms:i:250\tAS:i:250\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16449,+,121M130S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:10677:23253\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t22S213M16S\t=\t1\t213\tCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTGTCTCTTATACACA\tABBBBFFFFFFFGGGGGGGCGGGHHHHHGHHHHHHHHHGHHHHHHHHHHHGHHHHHGGGGGHGHHHHHHHHHHHHHBGFHHHHGHGHGGHGGGCGGGHHHGGGGGGGHHHGHGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFEDBDFFFFFFFEFFFE0F0FBFFFF0FFFFFFFFFFFFFFFFF:\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:13809:1733\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t50S179M22S\t=\t1\t179\tNATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATCTGTCTCTTATACACATCTGAC\t#\u003eAABBFFCFFFGGGFGGGGGGGGHHHHHHHHHHHHHHHHHHGHHHGGEGGFFHHHHHHGHGHGHHHHHEHFHGHHHHEFHHGHGGGGGHHHHGHHHHHHHHHGFGHHHHHGHGHGHHGGGCCGGGGFGGGGGGDGGGGFGDGGGFFFFFFEFFFFFFFBAF:9AF//;BEF-DD/FFFFBFFFFFFFFFEBFF?FB;/;//BFFEFFE/::..9;-:B9:FBFFFFFFBFB/9/FFF/B///99/:B///\tNM:i:1\tms:i:348\tAS:i:348\tnn:i:0\ttp:A:P\tcm:i:26\ts1:i:169\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16520,+,50M201S,11,2;\n-M01368:8:000000000-A3GHV:1:1102:17584:10050\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t52S138M61S\t=\t1\t138\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATCTGTCTCTTATACACATCTGACGCTGCCGACGAGCGATCTAGTGGAGATCTTGGGGGGTGG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHGGHHHHHHHHHHHHHHGHHHGGHHHHHHHGGHHHHGGGGGHHHHHHHHHHHHHHGGHHHHHHGHGHGGHGGFGGGGGGGGGGFGGFGGGGGGGGGFFFFFFFFFFEFFCFAAFEFEFFFFFFFCFDFFFFFFEFFFFFFFFFFBFFFFFFF/:BFFFFFFFFFFFFFFFFAFC=@-.;A///B././//////.-9----\tNM:i:1\tms:i:266\tAS:i:266\tnn:i:0\ttp:A:P\tcm:i:17\ts1:i:130\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16518,+,52M199S,11,1;\n-M01368:8:000000000-A3GHV:1:1102:18842:24844\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t228\tCACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCT\tBBBCBFF@CCBBGGGGGGGGGGHHGHGGHHHGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHGHHHHHHFHHHHGGGGGHHHHHHHHHHHHHHHHHHHHGGGHGGHHHHHHGHBFGHHHHHHHHBGHHHHHHGHGGGHFGCGGFHHFHFFHHBHHHHFFHFHHHHGGDHGGBC?;@DFBFFFFFFFFFBFFFFFFFFFFFFFF.B?FB.@;;DFFFFFFFFFFFEE-A./BBBFBFBFFF//BFB/BFF/\tNM:i:1\tms:i:282\tAS:i:282\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,1;\n-M01368:8:000000000-A3GHV:1:1102:21788:11027\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t35S213M3S\t=\t1\t213\tGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACGTTCAATATTACAGGCGAACATACTTACTAAAGTGTGTTAATTCTG\tABCCBCCBBFFFGGGGGGGGGGGHGHHHHHHGGHGGHHHHHHHHGHHHHHHHHHHHHHHHHHHGHHHHHFGGGGHHHHHHHHHHHHHHHHHHHHHHGHGHGGFCGGCGGGHHHGGGGGGGGGGGGGGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEF9EFFFFFFFFFFFBFF0FFBBBBFBFBFFFF0\tNM:i:1\tms:i:416\tAS:i:416\tnn:i:0\ttp:A:P\tcm:i:32\ts1:i:201\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:5728:8777\t163\tgi|251831106|ref|NC_012920.1|\t1\t60\t105S146M\t=\t1\t179\tCACTTGGGAGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCC\tBBBBBFFBBBBFGGGGGGGDGGHHHHHFHHHGGGGGHHGFHFHHFHHHGGHHHHHHHHHHHHHGHHHHHHFGHHHGGGGHHHHHHHHHGHHHGHHHHFHHHGGHGGHFFHHHHGFHHHHHHHHHHFHFHHHFHFHHHHHGGGGGHGHHHHHGHHHHHHH/FHHHHHGHGGGHHGGFBFFFFFFFFFF;DDFFFFFFF;;BA.=DDBFFFFF;-DFF.EDFFFFFFEF-AFFFFFB;FBFFFBFFFFB9B..\tNM:i:2\tms:i:280\tAS:i:280\tnn:i:0\ttp:A:P\tcm:i:19\ts1:i:137\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16465,+,105M146S,60,2;\n-M01368:8:000000000-A3GHV:1:1102:5983:21093\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t177\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tAAABCFCABBCFGGGGGGGGGGHHHHHHGFHHHHHHHHGGHHHGHGHHHGGGGFHHHHHHHHGHHHHHHHHHHHHHGGHGGHHHHHHFHGGHHHHFHGHHEHHHHHHHGHHHHHD@FGGHHHHHFFFHHGGHGH?DHHHHHGHGHEGG/@?ADGFGGFFFFAFFFFFFFFFFFFFFFFFFFFFFFAAFFFFFFDFFFFFFFF;D9BFFFFFFFFFFFFFFFFFEFFFBBFFF0BFFFBBFF0EFFFFFFFA\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:170\ts2:i:0\n-M01368:8:000000000-A3GHV:1:1102:7765:18353\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t119S132M\t=\t1\t236\tCTCCGGGCCCATAACACTTGGGGGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTC\tCCDCCCCCCBCFGGGGGGGGGGGGGGGHHHHHHDHHHHHHHHHHHGGGGGHHGHGHHHGHHHHHHFHHHHGHHHHHHGHGHHHGHHHHHGGGGHHHHHHHHHHHHHHHHHHHHHHGGHGGHHHHHHHGFFHHHHHGHHHHHHHHHHHGHHHHHGCFGGHGHFHHGHGHGHHHHGGFHHHHGGGHGBFGCC=BFFFFFFFF-@DFFFFFFFFFFFFFFFFFFFFFFAFFAEF.::FBFBFFE-A9:BFFFF0\tNM:i:1\tms:i:254\tAS:i:254\tnn:i:0\ttp:A:P\tcm:i:16\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16451,+,119M132S,60,1;\n-M01368:8:000000000-A3GHV:1:1103:10405:17879\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t80S171M\t=\t1\t228\tGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATTATTTATCGCACCTACG\tCBCCCFCCCCCFGGGGGGGGGGHHHHHHHHHHHHGHHHGHHHHHHHHHHHGGGGGGHHHHHHHHHHHHHHHHHHHHGGHGGHHHGHHGHHGHHHHHHHHHCGGFHHHHGHHHHHGCFGGHHGHHHHHHGFHHHGHHHHHHHGHGHGFF/CC?ADAFGFFFFFFFFFFFFFFDFFFFFFFFAFFFFFFFFFFFEDFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFBBFBFBFFFFFFFFFFFFFFFFF?\tNM:i:1\tms:i:332\tAS:i:332\tnn:i:0\ttp:A:P\tcm:i:24\ts1:i:223\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16490,+,80M171S,50,1;\n-M01368:8:000000000-A3GHV:1:1103:13493:8205\t99\tgi|251831106|ref|NC_012920.1|\t1\t60\t96S155M\t=\t1\t173\tGTAGCTAAAGTGAACTGTATCCGACATCTGGTTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATGGATCACAGGTCTATCACCCTATTAACCACTCACGGGAGCTCTCCATGCATTTGGTATTTTCGTCTGGGGGGTGTGCACGCGATAGCATTGCGAGACGCTGGAGCCGGAGCACCCTATGTCGCAGTATCTGTCTTTGATTCCTGCCTCATCCTATT\tCCCCCFFFFFFFGGGGGGGGGGGGGGGHFHHHHHHHHHHHHHHHHGHHHHHHHHGHHHIHHHHHHHGGGGFHHHHHHHHHHHHHHHHHHHGHGGHGGHHHHHHHHHGHHHHHHHHHHHHHHHHHGHHHH/FGGGGHHHHHHHGGEHHHHHGHHHHHHGHGHEFEFGGFFFFFFFFFFFFFFFFFFFFFAFDFFFFFAFFFF;;@FFEFFFFFFFFFFE=?AFFFFFFFFFFFFFFFFFFBFBBBFFFFEFF\tNM:i:1\tms:i:300\tAS:i:300\tnn:i:0\ttp:A:P\tcm:i:20\ts1:i:168\ts2:i:0\tSA:Z:gi|251831106|ref|NC_012920.1|,16474,+,96M155S,60,1;\n********\n*SNIP *\n********\n+M01368:8:000000000-A3GHV:1:1105:16787:9771\t2209\tgi|251831106|ref|NC_012920.1|\t16506\t12\t64M187H\t=\t1\t-16265\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCDCFFFFFFFGGGGGGGGGGGHHHHHHHHHHHGGGGHHHHHHHHHHHHHHFHHHHHHHGGFG\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,64S187M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1112:9832:6701\t2129\tgi|251831106|ref|NC_012920.1|\t16506\t21\t64M187H\t=\t1\t-16569\tTCCTACTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/FB;///BF/.B/FFFFFFFFFFFFFFF9?DDEBFED.DDCFFGFFGGGFF;;0FFFGAGGGGF\tNM:i:1\tms:i:118\tAS:i:118\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:77\ts2:i:0\tde:f:0.0156\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,64S187M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2209\tgi|251831106|ref|NC_012920.1|\t16508\t12\t62M189H\t=\t1\t-16370\tCTACCTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCCCFFFFFFFGGGGGGGGGGHHHHHFHHHHGGGGHHHHHHHHHHHHHHHHHHHHGHGGHG\tNM:i:2\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0323\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,62S140M49S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2209\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16378\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABBBBFFFFFFFGGGGGGGGGGGGBFHHGG?EEHHGHHHHHHGFHFHHHHGHGHHGGHE\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S134M58S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:24817:14233\t2145\tgi|251831106|ref|NC_012920.1|\t16511\t12\t59M192H\t=\t1\t-16309\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t3AABABFFBFFFGCFGGGGGGGHHHFGCFGGGFFGHHCGHHHGHGHGHBFFHHHEDGGF\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,59S192M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:23099:3794\t2129\tgi|251831106|ref|NC_012920.1|\t16511\t12\t58H59M134H\t=\t1\t-16569\tCTTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t;0/FFFBGFBBFCHHHHHHFHHFFGGEACCCDEGGGGFGD1GFHGFGFFEHHHHGGHHH\tNM:i:1\tms:i:108\tAS:i:108\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0169\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,117S134M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:17389:18671\t2193\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAACCCTAAAGAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/:/:;9////A?B.F//B;/./.A9.9;.;:..-?9B9/FB//;///:B/9AC;0FB\tNM:i:2\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:92\ts2:i:0\tde:f:0.0351\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1107:14451:26748\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t10\t57M194H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t.9/.BFFBFBEFF;FFFFBF?BEDA:/.ADEFFFFFFEGGGGFCB;99/B;.GFFGF\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:77\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,57S194M,48,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:11270:12255\t2129\tgi|251831106|ref|NC_012920.1|\t16513\t12\t55H57M139H\t=\t1\t-16569\tTCAGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFGFFFGGFFBFBCBHGC.GC?DHHHGDAFFCHHEHGHHHHGFGGHHHGCGHHHH\tNM:i:1\tms:i:104\tAS:i:104\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0175\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,112S139M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2145\tgi|251831106|ref|NC_012920.1|\t16516\t12\t54M197H\t=\t1\t-16377\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t?A3AA?DFFFFFGGGGGGGFFGHFGCEGGFHHHHHHHHHGHCBGFEGGHHDEGA\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,54S143M54S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1109:21978:9490\t2193\tgi|251831106|ref|NC_012920.1|\t16516\t12\t57H54M140H\t=\t1\t-16569\tGGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFB0000FAFB0GGFGBGGHGGFC::.EEA\u003c@HFDG0HHGGHGBDFGFG\u003cDDFGE\tNM:i:1\tms:i:98\tAS:i:98\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0185\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,111S140M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2129\tgi|251831106|ref|NC_012920.1|\t16517\t12\t60H53M138H\t=\t1\t-16569\tGGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFGGGGGGGGGGGHHHGHHGGGHHHHGGGGGHHHHHHFHHHHHHHHHHGGHHHH\tNM:i:1\tms:i:96\tAS:i:96\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0189\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1102:17584:10050\t2209\tgi|251831106|ref|NC_012920.1|\t16518\t11\t52M199H\t=\t1\t-16381\tGTCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tABCCCFFFFFCFGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHGHHHFHGGHG\tNM:i:1\tms:i:94\tAS:i:94\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0192\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,52S138M61S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:6074:6549\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t20\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t///A/:/BFFFF9...FFE;.9:.;.CF//B/FBFBBFBFGF/:?DFC90\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1111:9655:13916\t2193\tgi|251831106|ref|NC_012920.1|\t16520\t21\t50M201H\t=\t1\t-16569\tCATAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t:FBEF;0FFFFFFFBFFFFFEADEFBFFFFFFGGGFGFFBBB/F.GGFC9\tNM:i:1\tms:i:90\tAS:i:90\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:92\ts2:i:0\tde:f:0.02\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,50S201M,60,3;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:21791:23272\t2129\tgi|251831106|ref|NC_012920.1|\t16522\t20\t48M203H\t=\t1\t-16569\tTAAAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t/.FFFFFBBFBFBFFFEFEEFFFDFFFFFFFB//BBEFFB/.AABBFF\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:2\ts1:i:84\ts2:i:0\tde:f:0.0208\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16406\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tAAABBFFFFFDFGGGGGGGGGGHHHHHHGHHHGFHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S120M86S,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1105:7169:17145\t2145\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16275\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tCCCCCFFFFFFFGGGGGGGGGGHHHHHHHHHHHBHHHHHHHGGHG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S206M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2209\tgi|251831106|ref|NC_012920.1|\t16525\t11\t45M206H\t=\t1\t-16388\tAACCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tBCCDDFFFFFFFGGGGGGGGGGHHHHHHHHHHHHHHHHHHHGGGG\tNM:i:1\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0.0222\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,45S138M68S,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:16639:15258\t2145\tgi|251831106|ref|NC_012920.1|\t16527\t11\t43M208H\t=\t1\t-16287\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\t11\u003e\u003eABFFFFFFGGCGC1BBF1GHHHBHHHHGFHGH1A100AA\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,+,43S208M,60,4;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:17657:20856\t2193\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFEFFF?FEFFFFEAA.;AAFFF:0FB0FFBFFFB:A9A90FF\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1103:25465:20010\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t88H43M120H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tHFHHHGAFA\u003c.HFGHGGGGGHGGDDGHHHHFHFHGGFC?HGHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,131S120M,60,2;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1106:15481:16176\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t28\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tFFFFFB.FEFAA:EFFE:.;AFBB;FFFFFFFGFF/FEDFGGG\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:69\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1108:7626:10048\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t11\t70H43M138H\t=\t1\t-16569\tCCTAAATAGCCCACACGTTCCCCTTAAATAAGACATCACGATG\tGFHHHHHHGGGHGGHGGGGGGHHHFGGGGHHGFHHHF\u003cGGHHH\tNM:i:0\tms:i:86\tAS:i:86\tnn:i:0\ttp:A:P\tcm:i:3\ts1:i:34\ts2:i:0\tde:f:0\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,113S138M,60,1;\trl:i:0\n+M01368:8:000000000-A3GHV:1:1114:14540:5315\t2129\tgi|251831106|ref|NC_012920.1|\t16527\t9\t5H43M203H\t=\t1\t-16569\tCCTAAATAGCCCCCACGTTCCCCTTAAATAAGACATCACGATG\t09BFBB:--A=-.A;FEBFFFFFFFFFFFFFFFC//?AA0EFF\tNM:i:1\tms:i:76\tAS:i:76\tnn:i:0\ttp:A:P\tcm:i:1\ts1:i:84\ts2:i:0\tde:f:0.0233\tSA:Z:gi|251831106|ref|NC_012920.1|,1,-,48S203M,60,1;\trl:i:0\n" ], "status": "failure", "test_index": 4, "time_seconds": 35.9510223865509, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*0.78] collected minimizers[M::mm_idx_gen::0.006*1.80] sorted minimizers[M::main::0.006*1.80] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.80] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.006*1.77] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967[M::worker_pipeline::0.014*1.99] mapped 200 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x sr -t 8 -a reference.fa /galaxy/server/database/objects/a/1/f/dataset_a1f1d574-6202-4e2f-bb74-87d427feca11.dat /galaxy/server/database/objects/f/2/4/dataset_f24dbfe9-907d-4214-b3d6-f9cfeb707d0e.dat[M::main] Real time: 0.015 sec; CPU: 0.028 sec; Peak RSS: 0.005 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #6)" name="5" time="19.07980751991272">
        
            <error type="error" message="parameter 'ref_file': an invalid option ('bwa-mem-mt-genome') was selected (valid options: tetNig2canon,canFam1,Tcas_3.0,papAnu2,eschColi_CFT073,27835,oviAri1,gasAcu1,ce4,apiMel2,Homo_sapiens_nuHg19_mtrCRS,calJac1,dp3,Arabidopsis_thaliana_TAIR10,eschColi_K12,equCab2chrM,droWil1,caeJap1,panTro2canon,strePneu_R6,anoCar1,anoCar2,ponAbe2,bosTau8,droEre1,oryLat1,echTel1,ce6,felCat5,panPan1,venter1,pUC18,Sscrofa9.58,tarSyr1,hg38,felCat3,Tcacao_1.0,Zea_mays_B73_RefGen_v2,taeGut1canon,caeRem2,susScr1,geoFor1,priPac1,felCat4canon,panTro3canon,rn4,ci2canon,borEut13,papHam1,oryLat2,burkPseu_1710B,droAna2,pseuAeru_UCBPP_PA14,oryLat2canon,melUnd1,droYak2,CHM13_T2T_v2.0,dasNov3,vicPac1,droAna3,tetNig1,tetNig2,galGal4,dasNov1,monDom5,pseuAeru_PA7,apiMel3,monDom1,phiX,vicPac2,PhumU1,hg19canon,ce8,ce3,hg38female,hg18nohaps,hg19,rn3canon,Xanthomonas_oryzae_PXO99A,hg18chr21,eriEur1,danRer3,droEre2,panTro2,anoGam1,xenTro2,dm3,lMaj5,mm8,bosTau5,nomLeu1,monDom4,triCas2,Xanthomonas_oryzae_KACC10331,Xanthomonas_oryzae_MAFF_311018,apiMel4,sacCer3,ce7,droMoj1,hg18canon,Bombyx_mori_p50T_2.0,speTri2,bosTau2,ce2,sorAra1,aptMan1,gorGor3,felCat4,bosTau4,calJac3,cb3canon,caeJap4,loxAfr3,eschColi_O157H7_EDL933,ci2full,saiBol1,micMur1,sarHar1,mm9canon,susScr2,Arabidopsis_thaliana_TAIR9,galGal2canon,oryCun1,dp4,galGal3,bosTau6,hg_g1k_v37,nomLeu3,droYak1,droAna1,CpipJ1,Homo_sapiens_AK1,Spur_v2.6,tupBel1,galGal3canon,latCha1,ce10,sacCer2,canFam2,mm9female,hg19female,turTru2,bosTauMd3,petMar1,danRer10,hg19_rCRS_pUC18_phiX174,Schizosaccharomyces_pombe_1.1,cb3full,panTro4,hg19chrM,caeJap3,danRer6,Araly1,eschColi_K12_DH10B,droVir3,Ptrichocarpa_156,equCab2,eschColi_O157H7_EC4115,pseuAeru_PAO1,droSec1,tetNig1canon,felCat8,droGri2,mm9,otoGar1,AgamP3,rn5,nomLeu2,burkPseu_1106A,eschColi_APEC_O1,aplCal1,eschColi_O157H7,ce5,gadMor1,ailMel1,rn6,caeRem3,sacCer1,hg19chrX,mm8canon,musFur1,baciSubt,oryza_sativa_japonica_nipponbare_IRGSP4.0,taeGut2,bosTau7,ente638,caeJap2,droSim1,rn4canon,chrPic1,oryCun2,susScr3,ce9,dm6,droVir1,equCab1,canFam3,danRer7,bosTau3,mm7,calJac3canon,danRer4,galGal2,droPer1,caeRem1,droMoj3,hg17,hg38canon,Amel_4.5,Hydra_JCVI,loxAfr1,otoGar3,mm10,xenTro3,melGal1,dipOrd1,AaegL1,caePb1,fr1,droVir2,xenTro1,caePb3,hg17canon,mm7canon,strPur2,danRer2,strPur3,dm2,danRer5,burkPseu_K96243,criGri1,caeRem4,droMoj2,cerSim1,fr2,burkPseu_668,hetGla1,rn3,caePb2,droGri1,rheMac3,bordBron,braFlo1,allMis1,hg18,taeGut1,panTro1,cavPor3,eschColi_O157H7_TW14359,eschColi_K12_W3110,panTro3full,myoLuc2,ornAna1,choHof1,IscaW1,rheMac2,apiMel1,panTro1canon)"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027ref_file\u0027: an invalid option (\u0027bwa-mem-mt-genome\u0027) was selected (valid options: tetNig2canon,canFam1,Tcas_3.0,papAnu2,eschColi_CFT073,27835,oviAri1,gasAcu1,ce4,apiMel2,Homo_sapiens_nuHg19_mtrCRS,calJac1,dp3,Arabidopsis_thaliana_TAIR10,eschColi_K12,equCab2chrM,droWil1,caeJap1,panTro2canon,strePneu_R6,anoCar1,anoCar2,ponAbe2,bosTau8,droEre1,oryLat1,echTel1,ce6,felCat5,panPan1,venter1,pUC18,Sscrofa9.58,tarSyr1,hg38,felCat3,Tcacao_1.0,Zea_mays_B73_RefGen_v2,taeGut1canon,caeRem2,susScr1,geoFor1,priPac1,felCat4canon,panTro3canon,rn4,ci2canon,borEut13,papHam1,oryLat2,burkPseu_1710B,droAna2,pseuAeru_UCBPP_PA14,oryLat2canon,melUnd1,droYak2,CHM13_T2T_v2.0,dasNov3,vicPac1,droAna3,tetNig1,tetNig2,galGal4,dasNov1,monDom5,pseuAeru_PA7,apiMel3,monDom1,phiX,vicPac2,PhumU1,hg19canon,ce8,ce3,hg38female,hg18nohaps,hg19,rn3canon,Xanthomonas_oryzae_PXO99A,hg18chr21,eriEur1,danRer3,droEre2,panTro2,anoGam1,xenTro2,dm3,lMaj5,mm8,bosTau5,nomLeu1,monDom4,triCas2,Xanthomonas_oryzae_KACC10331,Xanthomonas_oryzae_MAFF_311018,apiMel4,sacCer3,ce7,droMoj1,hg18canon,Bombyx_mori_p50T_2.0,speTri2,bosTau2,ce2,sorAra1,aptMan1,gorGor3,felCat4,bosTau4,calJac3,cb3canon,caeJap4,loxAfr3,eschColi_O157H7_EDL933,ci2full,saiBol1,micMur1,sarHar1,mm9canon,susScr2,Arabidopsis_thaliana_TAIR9,galGal2canon,oryCun1,dp4,galGal3,bosTau6,hg_g1k_v37,nomLeu3,droYak1,droAna1,CpipJ1,Homo_sapiens_AK1,Spur_v2.6,tupBel1,galGal3canon,latCha1,ce10,sacCer2,canFam2,mm9female,hg19female,turTru2,bosTauMd3,petMar1,danRer10,hg19_rCRS_pUC18_phiX174,Schizosaccharomyces_pombe_1.1,cb3full,panTro4,hg19chrM,caeJap3,danRer6,Araly1,eschColi_K12_DH10B,droVir3,Ptrichocarpa_156,equCab2,eschColi_O157H7_EC4115,pseuAeru_PAO1,droSec1,tetNig1canon,felCat8,droGri2,mm9,otoGar1,AgamP3,rn5,nomLeu2,burkPseu_1106A,eschColi_APEC_O1,aplCal1,eschColi_O157H7,ce5,gadMor1,ailMel1,rn6,caeRem3,sacCer1,hg19chrX,mm8canon,musFur1,baciSubt,oryza_sativa_japonica_nipponbare_IRGSP4.0,taeGut2,bosTau7,ente638,caeJap2,droSim1,rn4canon,chrPic1,oryCun2,susScr3,ce9,dm6,droVir1,equCab1,canFam3,danRer7,bosTau3,mm7,calJac3canon,danRer4,galGal2,droPer1,caeRem1,droMoj3,hg17,hg38canon,Amel_4.5,Hydra_JCVI,loxAfr1,otoGar3,mm10,xenTro3,melGal1,dipOrd1,AaegL1,caePb1,fr1,droVir2,xenTro1,caePb3,hg17canon,mm7canon,strPur2,danRer2,strPur3,dm2,danRer5,burkPseu_K96243,criGri1,caeRem4,droMoj2,cerSim1,fr2,burkPseu_668,hetGla1,rn3,caePb2,droGri1,rheMac3,bordBron,braFlo1,allMis1,hg18,taeGut1,panTro1,cavPor3,eschColi_O157H7_TW14359,eschColi_K12_W3110,panTro3full,myoLuc2,ornAna1,choHof1,IscaW1,rheMac2,apiMel1,panTro1canon)", "inputs": {  "fastq_input|analysis_type_selector": "sr",  "fastq_input|fastq_input1": {   "id": "8dd4e6ee52ddbb94",   "src": "hda"  },  "fastq_input|fastq_input_selector": "single",  "reference_source|ref_file": "bwa-mem-mt-genome",  "reference_source|reference_source_selector": "cached" }, "status": "error", "test_index": 5, "time_seconds": 19.07980751991272, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #7)" name="6" time="17.707955598831177">
        
            <error type="error" message="parameter 'ref_file': an invalid option ('bwa-mem-mt-genome') was selected (valid options: tetNig2canon,canFam1,Tcas_3.0,papAnu2,eschColi_CFT073,27835,oviAri1,gasAcu1,ce4,apiMel2,Homo_sapiens_nuHg19_mtrCRS,calJac1,dp3,Arabidopsis_thaliana_TAIR10,eschColi_K12,equCab2chrM,droWil1,caeJap1,panTro2canon,strePneu_R6,anoCar1,anoCar2,ponAbe2,bosTau8,droEre1,oryLat1,echTel1,ce6,felCat5,panPan1,venter1,pUC18,Sscrofa9.58,tarSyr1,hg38,felCat3,Tcacao_1.0,Zea_mays_B73_RefGen_v2,taeGut1canon,caeRem2,susScr1,geoFor1,priPac1,felCat4canon,panTro3canon,rn4,ci2canon,borEut13,papHam1,oryLat2,burkPseu_1710B,droAna2,pseuAeru_UCBPP_PA14,oryLat2canon,melUnd1,droYak2,CHM13_T2T_v2.0,dasNov3,vicPac1,droAna3,tetNig1,tetNig2,galGal4,dasNov1,monDom5,pseuAeru_PA7,apiMel3,monDom1,phiX,vicPac2,PhumU1,hg19canon,ce8,ce3,hg38female,hg18nohaps,hg19,rn3canon,Xanthomonas_oryzae_PXO99A,hg18chr21,eriEur1,danRer3,droEre2,panTro2,anoGam1,xenTro2,dm3,lMaj5,mm8,bosTau5,nomLeu1,monDom4,triCas2,Xanthomonas_oryzae_KACC10331,Xanthomonas_oryzae_MAFF_311018,apiMel4,sacCer3,ce7,droMoj1,hg18canon,Bombyx_mori_p50T_2.0,speTri2,bosTau2,ce2,sorAra1,aptMan1,gorGor3,felCat4,bosTau4,calJac3,cb3canon,caeJap4,loxAfr3,eschColi_O157H7_EDL933,ci2full,saiBol1,micMur1,sarHar1,mm9canon,susScr2,Arabidopsis_thaliana_TAIR9,galGal2canon,oryCun1,dp4,galGal3,bosTau6,hg_g1k_v37,nomLeu3,droYak1,droAna1,CpipJ1,Homo_sapiens_AK1,Spur_v2.6,tupBel1,galGal3canon,latCha1,ce10,sacCer2,canFam2,mm9female,hg19female,turTru2,bosTauMd3,petMar1,danRer10,hg19_rCRS_pUC18_phiX174,Schizosaccharomyces_pombe_1.1,cb3full,panTro4,hg19chrM,caeJap3,danRer6,Araly1,eschColi_K12_DH10B,droVir3,Ptrichocarpa_156,equCab2,eschColi_O157H7_EC4115,pseuAeru_PAO1,droSec1,tetNig1canon,felCat8,droGri2,mm9,otoGar1,AgamP3,rn5,nomLeu2,burkPseu_1106A,eschColi_APEC_O1,aplCal1,eschColi_O157H7,ce5,gadMor1,ailMel1,rn6,caeRem3,sacCer1,hg19chrX,mm8canon,musFur1,baciSubt,oryza_sativa_japonica_nipponbare_IRGSP4.0,taeGut2,bosTau7,ente638,caeJap2,droSim1,rn4canon,chrPic1,oryCun2,susScr3,ce9,dm6,droVir1,equCab1,canFam3,danRer7,bosTau3,mm7,calJac3canon,danRer4,galGal2,droPer1,caeRem1,droMoj3,hg17,hg38canon,Amel_4.5,Hydra_JCVI,loxAfr1,otoGar3,mm10,xenTro3,melGal1,dipOrd1,AaegL1,caePb1,fr1,droVir2,xenTro1,caePb3,hg17canon,mm7canon,strPur2,danRer2,strPur3,dm2,danRer5,burkPseu_K96243,criGri1,caeRem4,droMoj2,cerSim1,fr2,burkPseu_668,hetGla1,rn3,caePb2,droGri1,rheMac3,bordBron,braFlo1,allMis1,hg18,taeGut1,panTro1,cavPor3,eschColi_O157H7_TW14359,eschColi_K12_W3110,panTro3full,myoLuc2,ornAna1,choHof1,IscaW1,rheMac2,apiMel1,panTro1canon)"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027ref_file\u0027: an invalid option (\u0027bwa-mem-mt-genome\u0027) was selected (valid options: tetNig2canon,canFam1,Tcas_3.0,papAnu2,eschColi_CFT073,27835,oviAri1,gasAcu1,ce4,apiMel2,Homo_sapiens_nuHg19_mtrCRS,calJac1,dp3,Arabidopsis_thaliana_TAIR10,eschColi_K12,equCab2chrM,droWil1,caeJap1,panTro2canon,strePneu_R6,anoCar1,anoCar2,ponAbe2,bosTau8,droEre1,oryLat1,echTel1,ce6,felCat5,panPan1,venter1,pUC18,Sscrofa9.58,tarSyr1,hg38,felCat3,Tcacao_1.0,Zea_mays_B73_RefGen_v2,taeGut1canon,caeRem2,susScr1,geoFor1,priPac1,felCat4canon,panTro3canon,rn4,ci2canon,borEut13,papHam1,oryLat2,burkPseu_1710B,droAna2,pseuAeru_UCBPP_PA14,oryLat2canon,melUnd1,droYak2,CHM13_T2T_v2.0,dasNov3,vicPac1,droAna3,tetNig1,tetNig2,galGal4,dasNov1,monDom5,pseuAeru_PA7,apiMel3,monDom1,phiX,vicPac2,PhumU1,hg19canon,ce8,ce3,hg38female,hg18nohaps,hg19,rn3canon,Xanthomonas_oryzae_PXO99A,hg18chr21,eriEur1,danRer3,droEre2,panTro2,anoGam1,xenTro2,dm3,lMaj5,mm8,bosTau5,nomLeu1,monDom4,triCas2,Xanthomonas_oryzae_KACC10331,Xanthomonas_oryzae_MAFF_311018,apiMel4,sacCer3,ce7,droMoj1,hg18canon,Bombyx_mori_p50T_2.0,speTri2,bosTau2,ce2,sorAra1,aptMan1,gorGor3,felCat4,bosTau4,calJac3,cb3canon,caeJap4,loxAfr3,eschColi_O157H7_EDL933,ci2full,saiBol1,micMur1,sarHar1,mm9canon,susScr2,Arabidopsis_thaliana_TAIR9,galGal2canon,oryCun1,dp4,galGal3,bosTau6,hg_g1k_v37,nomLeu3,droYak1,droAna1,CpipJ1,Homo_sapiens_AK1,Spur_v2.6,tupBel1,galGal3canon,latCha1,ce10,sacCer2,canFam2,mm9female,hg19female,turTru2,bosTauMd3,petMar1,danRer10,hg19_rCRS_pUC18_phiX174,Schizosaccharomyces_pombe_1.1,cb3full,panTro4,hg19chrM,caeJap3,danRer6,Araly1,eschColi_K12_DH10B,droVir3,Ptrichocarpa_156,equCab2,eschColi_O157H7_EC4115,pseuAeru_PAO1,droSec1,tetNig1canon,felCat8,droGri2,mm9,otoGar1,AgamP3,rn5,nomLeu2,burkPseu_1106A,eschColi_APEC_O1,aplCal1,eschColi_O157H7,ce5,gadMor1,ailMel1,rn6,caeRem3,sacCer1,hg19chrX,mm8canon,musFur1,baciSubt,oryza_sativa_japonica_nipponbare_IRGSP4.0,taeGut2,bosTau7,ente638,caeJap2,droSim1,rn4canon,chrPic1,oryCun2,susScr3,ce9,dm6,droVir1,equCab1,canFam3,danRer7,bosTau3,mm7,calJac3canon,danRer4,galGal2,droPer1,caeRem1,droMoj3,hg17,hg38canon,Amel_4.5,Hydra_JCVI,loxAfr1,otoGar3,mm10,xenTro3,melGal1,dipOrd1,AaegL1,caePb1,fr1,droVir2,xenTro1,caePb3,hg17canon,mm7canon,strPur2,danRer2,strPur3,dm2,danRer5,burkPseu_K96243,criGri1,caeRem4,droMoj2,cerSim1,fr2,burkPseu_668,hetGla1,rn3,caePb2,droGri1,rheMac3,bordBron,braFlo1,allMis1,hg18,taeGut1,panTro1,cavPor3,eschColi_O157H7_TW14359,eschColi_K12_W3110,panTro3full,myoLuc2,ornAna1,choHof1,IscaW1,rheMac2,apiMel1,panTro1canon)", "inputs": {  "alignment_options|A": "2",  "alignment_options|B": "8",  "alignment_options|E": "2",  "alignment_options|E2": "1",  "alignment_options|O": "12",  "alignment_options|O2": "32",  "alignment_options|s": "40",  "alignment_options|z": "400",  "fastq_input|analysis_type_selector": "sr",  "fastq_input|fastq_input1": {   "id": "d4f805d80cff0e45",   "src": "hda"  },  "fastq_input|fastq_input_selector": "single",  "mapping_options|min_occ_floor": "1000",  "reference_source|ref_file": "bwa-mem-mt-genome",  "reference_source|reference_source_selector": "cached" }, "status": "error", "test_index": 6, "time_seconds": 17.707955598831177, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2", "tool_version": "2.17+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #8)" name="7" time="33.91002368927002">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.020*0.95] collected minimizers[M::mm_idx_gen::0.031*2.81] sorted minimizers[M::main::0.031*2.81] loaded/built the index for 25 target sequence(s)[M::mm_mapopt_update::0.033*2.68] mid_occ = 3[M::mm_idx_stat] kmer size: 15; skip: 5; is_hpc: 0; #seq: 25[M::mm_idx_stat::0.035*2.59] distinct minimizers: 80111 (99.87% are singletons); average occurrences: 1.002; average spacing: 2.935[M::worker_pipeline::0.042*2.74] mapped 25 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -x ava-ont -t 8 reference.fa /galaxy/server/database/objects/f/f/1/dataset_ff11105a-5c0b-44ed-bef3-9a3589f5667f.dat[M::main] Real time: 0.046 sec; CPU: 0.119 sec; Peak RSS: 0.012 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/minimap2/minimap2 (Test #9)" name="8" time="28.594311952590942">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*1.08] collected minimizers[M::mm_idx_gen::0.006*2.05] sorted minimizers[M::main::0.006*2.04] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*2.00] mid_occ = 9[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.006*1.97] distinct minimizers: 2920 (98.42% are singletons); average occurrences: 1.022; average spacing: 10.057[M::worker_pipeline::0.051*1.10] mapped 1 sequences[M::main] Version: 2.17-r941[M::main] CMD: minimap2 -DP -k19 -w19 -m200 -t 8 -a reference.fa /galaxy/server/database/objects/4/a/b/dataset_4abb99b3-accc-495e-91bc-fcef7c577e1e.dat[M::main] Real time: 0.053 sec; CPU: 0.058 sec; Peak RSS: 0.011 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #1)" name="0" time="114.38064932823181">
        
            
            <system-out><![CDATA[
            |         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 12/12  
            ]]></system-out>
            <system-err><![CDATA[
              /// MultiQC 🔍 | v1.11|           multiqc | MultiQC Version v1.14 now available!|           multiqc | Report title: Title of the report|           multiqc | Search path : /galaxy/server/database/jobs_directory/000/131/working/multiqc_WDir|          slamdunk | Found 2 reports|          cutadapt | Found 1 reports|          bargraph | Tried to make bar plot, but had no data|           flexbar | Found 1 logs|       trimmomatic | Found 1 logs|         sortmerna | Found 1 logs|             fastp | Found 2 reports|            fastqc | Found 2 reports|           multiqc | Compressing plot data|           multiqc | Report      : report.html|           multiqc | Data        : report_data|           multiqc | Plots       : report_plots|           multiqc | MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #2)" name="1" time="83.1146285533905">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "results_0|software_cond|output_0|input": {   "id": "3fddc75b2ab7c179",   "src": "hda"  },  "results_0|software_cond|output_0|type": "align",  "results_0|software_cond|software": "bismark",  "results_1|software_cond|input": [   {    "id": "e67fe18a2c3a6cf1",    "src": "hda"   },   {    "id": "070ed9a4f99406f0",    "src": "hda"   }  ],  "results_1|software_cond|software": "bowtie2",  "results_2|software_cond|input": [   {    "id": "1d80fdfb30cb6142",    "src": "hda"   },   {    "id": "f76db907003d7b2e",    "src": "hda"   }  ],  "results_2|software_cond|software": "hisat2",  "results_3|software_cond|input": [   {    "id": "3b40ebb6868fc455",    "src": "hda"   },   {    "id": "3b40ebb6868fc455",    "src": "hda"   },   {    "id": "55c723324004ccdf",    "src": "hda"   }  ],  "results_3|software_cond|software": "hicexplorer",  "results_4|software_cond|input": [   {    "id": "4686f4dac28a3c00",    "src": "hda"   },   {    "id": "cea973d452a9a23d",    "src": "hda"   }  ],  "results_4|software_cond|software": "kallisto",  "results_5|software_cond|input": [   {    "id": "17cf5ee93af1e292",    "src": "hda"   },   {    "id": "e1393b1ff7a750cb",    "src": "hda"   }  ],  "results_5|software_cond|software": "macs2",  "results_6|software_cond|output_0|type|input": {   "id": "17c790f556e74bdb",   "src": "hda"  },  "results_6|software_cond|output_0|type|type": "log",  "results_6|software_cond|output_1|type|input": {   "id": "6a7147aa38db0a19",   "src": "hda"  },  "results_6|software_cond|output_1|type|type": "genecounts",  "results_6|software_cond|software": "star",  "results_7|software_cond|input": {   "id": "ed3bd39026049853",   "src": "hda"  },  "results_7|software_cond|software": "tophat",  "saveLog": false }, "job": {  "command_line": "die() { echo \"$@\" 1\u003e\u00262 ; exit 1; } \u0026\u0026  mkdir multiqc_WDir \u0026\u0026   mkdir multiqc_WDir/bismark_0 \u0026\u0026    mkdir \u0027multiqc_WDir/bismark_0/align_0\u0027 \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/8/7/0/dataset_87022fc6-a90c-4fac-8711-4fad3ee8260f.dat\u0027 \u0027multiqc_WDir/bismark_0/align_0/bismark_txt_SE_report.txt\u0027 \u0026\u0026  mkdir multiqc_WDir/bowtie2_1 \u0026\u0026        grep -q \u0027% overall alignment rate\u0027 /galaxy/server/database/objects/a/5/8/dataset_a588f5da-35f7-492e-9363-7da30f7de801.dat || die \"Module \u0027bowtie2: \u0027% overall alignment rate\u0027 not found in the file \u0027bowtie2_1_txt\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/a/5/8/dataset_a588f5da-35f7-492e-9363-7da30f7de801.dat\u0027 \u0027multiqc_WDir/bowtie2_1/bowtie2_1_txt\u0027  \u0026\u0026       grep -q \u0027% overall alignment rate\u0027 /galaxy/server/database/objects/9/d/a/dataset_9dad6788-ddf2-4d7c-a241-1f41661081df.dat || die \"Module \u0027bowtie2: \u0027% overall alignment rate\u0027 not found in the file \u0027bowtie2_2_txt\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/9/d/a/dataset_9dad6788-ddf2-4d7c-a241-1f41661081df.dat\u0027 \u0027multiqc_WDir/bowtie2_1/bowtie2_2_txt\u0027  \u0026\u0026   mkdir multiqc_WDir/hisat2_2 \u0026\u0026        grep -q \u0027HISAT2 summary stats:\u0027 /galaxy/server/database/objects/6/9/4/dataset_694352b3-cc65-4e6d-a065-70d48ac59924.dat || die \"Module \u0027hisat2: \u0027HISAT2 summary stats:\u0027 not found in the file \u0027hisat2_1_txt\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/6/9/4/dataset_694352b3-cc65-4e6d-a065-70d48ac59924.dat\u0027 \u0027multiqc_WDir/hisat2_2/hisat2_1_txt\u0027  \u0026\u0026       grep -q \u0027HISAT2 summary stats:\u0027 /galaxy/server/database/objects/f/3/5/dataset_f352e9a7-05b6-4fbe-9a01-ec128252922d.dat || die \"Module \u0027hisat2: \u0027HISAT2 summary stats:\u0027 not found in the file \u0027hisat2_2_txt\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/f/3/5/dataset_f352e9a7-05b6-4fbe-9a01-ec128252922d.dat\u0027 \u0027multiqc_WDir/hisat2_2/hisat2_2_txt\u0027  \u0026\u0026   mkdir multiqc_WDir/hicexplorer_3 \u0026\u0026        grep -q \u0027Min rest. site distance\u0027 /galaxy/server/database/objects/b/3/a/dataset_b3ad01ad-b58b-4639-a34b-c24b80f3c5e4.dat || die \"Module \u0027hicexplorer: \u0027Min rest. site distance\u0027 not found in the file \u0027hicexplorer1_log\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/b/3/a/dataset_b3ad01ad-b58b-4639-a34b-c24b80f3c5e4.dat\u0027 \u0027multiqc_WDir/hicexplorer_3/hicexplorer1_log\u0027  \u0026\u0026       grep -q \u0027Min rest. site distance\u0027 /galaxy/server/database/objects/b/3/a/dataset_b3ad01ad-b58b-4639-a34b-c24b80f3c5e4.dat || die \"Module \u0027hicexplorer: \u0027Min rest. site distance\u0027 not found in the file \u0027hicexplorer1_log\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/b/3/a/dataset_b3ad01ad-b58b-4639-a34b-c24b80f3c5e4.dat\u0027 \u0027multiqc_WDir/hicexplorer_3/hicexplorer1_log_1\u0027  \u0026\u0026       grep -q \u0027Min rest. site distance\u0027 /galaxy/server/database/objects/1/5/e/dataset_15eb5456-ca79-49d2-a835-f2934a18704c.dat || die \"Module \u0027hicexplorer: \u0027Min rest. site distance\u0027 not found in the file \u0027hicexplorer2_log\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/1/5/e/dataset_15eb5456-ca79-49d2-a835-f2934a18704c.dat\u0027 \u0027multiqc_WDir/hicexplorer_3/hicexplorer2_log\u0027  \u0026\u0026   mkdir multiqc_WDir/kallisto_4 \u0026\u0026        grep -q \u0027finding pseudoalignments for the reads\u0027 /galaxy/server/database/objects/e/3/d/dataset_e3dcf846-ce8c-4e6d-8785-30b1249477db.dat || die \"Module \u0027kallisto: \u0027finding pseudoalignments for the reads\u0027 not found in the file \u0027kallisto_1_txt\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/3/d/dataset_e3dcf846-ce8c-4e6d-8785-30b1249477db.dat\u0027 \u0027multiqc_WDir/kallisto_4/kallisto_1_txt\u0027  \u0026\u0026       grep -q \u0027finding pseudoalignments for the reads\u0027 /galaxy/server/database/objects/b/f/e/dataset_bfee8a3b-3297-4b42-8694-699101c09d00.dat || die \"Module \u0027kallisto: \u0027finding pseudoalignments for the reads\u0027 not found in the file \u0027kallisto_2_txt\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/b/f/e/dataset_bfee8a3b-3297-4b42-8694-699101c09d00.dat\u0027 \u0027multiqc_WDir/kallisto_4/kallisto_2_txt\u0027  \u0026\u0026   mkdir multiqc_WDir/macs2_5 \u0026\u0026    grep -q \"# This file is generated by MACS\" /galaxy/server/database/objects/a/7/7/dataset_a77e6c9e-249e-4d6b-a56e-d6ec34c8cbca.dat || die \"\u0027# This file is generated by MACS\u0027 not found in the file\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/a/7/7/dataset_a77e6c9e-249e-4d6b-a56e-d6ec34c8cbca.dat\u0027 \u0027multiqc_WDir/macs2_5/macs_1_txt_peaks.xls\u0027 \u0026\u0026    grep -q \"# This file is generated by MACS\" /galaxy/server/database/objects/b/1/d/dataset_b1dca3ea-f889-40b6-9d82-acb278e44f2d.dat || die \"\u0027# This file is generated by MACS\u0027 not found in the file\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/b/1/d/dataset_b1dca3ea-f889-40b6-9d82-acb278e44f2d.dat\u0027 \u0027multiqc_WDir/macs2_5/macs_2_txt_peaks.xls\u0027 \u0026\u0026 mkdir multiqc_WDir/star_6 \u0026\u0026    mkdir \u0027multiqc_WDir/star_6/log_0\u0027 \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/b/1/3/dataset_b13d5dd3-9e04-4c94-a19c-944c38dfa5f4.dat\u0027 \u0027multiqc_WDir/star_6/log_0/star_log_txt_Log.final.out\u0027 \u0026\u0026   mkdir \u0027multiqc_WDir/star_6/genecounts_1\u0027 \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/7/6/c/dataset_76c093a9-f1b2-4bf0-a46c-c7803486b739.dat\u0027 \u0027multiqc_WDir/star_6/genecounts_1/star_counts_txt_ReadsPerGene.out.tab\u0027 \u0026\u0026  mkdir multiqc_WDir/tophat_7 \u0026\u0026    ln -s \u0027/galaxy/server/database/objects/5/d/1/dataset_5d1e5182-dc21-45a6-a0e4-d959870dad3a.dat\u0027 \u0027multiqc_WDir/tophat_7/tophat_txtalign_summary.txt\u0027 \u0026\u0026  multiqc multiqc_WDir --filename \u0027report\u0027",  "command_version": null,  "create_time": "2023-02-07T22:01:44.270446",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-8dctx",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "0f44021ab0d7b54d",  "inputs": {   "results_0|software_cond|output_0|input": {    "id": "3fddc75b2ab7c179",    "src": "hda",    "uuid": "87022fc6-a90c-4fac-8711-4fad3ee8260f"   },   "results_0|software_cond|output_0|input1": {    "id": "3fddc75b2ab7c179",    "src": "hda",    "uuid": "87022fc6-a90c-4fac-8711-4fad3ee8260f"   },   "results_1|input": {    "id": "e67fe18a2c3a6cf1",    "src": "hda",    "uuid": "a588f5da-35f7-492e-9363-7da30f7de801"   },   "results_1|input1": {    "id": "e67fe18a2c3a6cf1",    "src": "hda",    "uuid": "a588f5da-35f7-492e-9363-7da30f7de801"   },   "results_1|input2": {    "id": "070ed9a4f99406f0",    "src": "hda",    "uuid": "9dad6788-ddf2-4d7c-a241-1f41661081df"   },   "results_2|input": {    "id": "1d80fdfb30cb6142",    "src": "hda",    "uuid": "694352b3-cc65-4e6d-a065-70d48ac59924"   },   "results_2|input1": {    "id": "1d80fdfb30cb6142",    "src": "hda",    "uuid": "694352b3-cc65-4e6d-a065-70d48ac59924"   },   "results_2|input2": {    "id": "f76db907003d7b2e",    "src": "hda",    "uuid": "f352e9a7-05b6-4fbe-9a01-ec128252922d"   },   "results_3|input": {    "id": "3b40ebb6868fc455",    "src": "hda",    "uuid": "b3ad01ad-b58b-4639-a34b-c24b80f3c5e4"   },   "results_3|input1": {    "id": "3b40ebb6868fc455",    "src": "hda",    "uuid": "b3ad01ad-b58b-4639-a34b-c24b80f3c5e4"   },   "results_3|input2": {    "id": "3b40ebb6868fc455",    "src": "hda",    "uuid": "b3ad01ad-b58b-4639-a34b-c24b80f3c5e4"   },   "results_3|input3": {    "id": "55c723324004ccdf",    "src": "hda",    "uuid": "15eb5456-ca79-49d2-a835-f2934a18704c"   },   "results_4|input": {    "id": "4686f4dac28a3c00",    "src": "hda",    "uuid": "e3dcf846-ce8c-4e6d-8785-30b1249477db"   },   "results_4|input1": {    "id": "4686f4dac28a3c00",    "src": "hda",    "uuid": "e3dcf846-ce8c-4e6d-8785-30b1249477db"   },   "results_4|input2": {    "id": "cea973d452a9a23d",    "src": "hda",    "uuid": "bfee8a3b-3297-4b42-8694-699101c09d00"   },   "results_5|input": {    "id": "17cf5ee93af1e292",    "src": "hda",    "uuid": "a77e6c9e-249e-4d6b-a56e-d6ec34c8cbca"   },   "results_5|input1": {    "id": "17cf5ee93af1e292",    "src": "hda",    "uuid": "a77e6c9e-249e-4d6b-a56e-d6ec34c8cbca"   },   "results_5|input2": {    "id": "e1393b1ff7a750cb",    "src": "hda",    "uuid": "b1dca3ea-f889-40b6-9d82-acb278e44f2d"   },   "results_6|software_cond|output_0|input": {    "id": "17c790f556e74bdb",    "src": "hda",    "uuid": "b13d5dd3-9e04-4c94-a19c-944c38dfa5f4"   },   "results_6|software_cond|output_0|input1": {    "id": "17c790f556e74bdb",    "src": "hda",    "uuid": "b13d5dd3-9e04-4c94-a19c-944c38dfa5f4"   },   "results_6|software_cond|output_1|input": {    "id": "6a7147aa38db0a19",    "src": "hda",    "uuid": "76c093a9-f1b2-4bf0-a46c-c7803486b739"   },   "results_6|software_cond|output_1|input1": {    "id": "6a7147aa38db0a19",    "src": "hda",    "uuid": "76c093a9-f1b2-4bf0-a46c-c7803486b739"   },   "results_7|input": {    "id": "ed3bd39026049853",    "src": "hda",    "uuid": "5d1e5182-dc21-45a6-a0e4-d959870dad3a"   },   "results_7|input1": {    "id": "ed3bd39026049853",    "src": "hda",    "uuid": "5d1e5182-dc21-45a6-a0e4-d959870dad3a"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {   "stats": {    "id": "64b09f70f908b401",    "src": "hdca"   }  },  "outputs": {   "html_report": {    "id": "d227d3c131993b89",    "src": "hda",    "uuid": "22eff82d-4b9a-4ae6-9cf6-1711734a7ec3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "comment": "\"\"",   "dbkey": "\"?\"",   "export": "\"false\"",   "flat": "\"false\"",   "results": "[{\"__index__\": 0, \"software_cond\": {\"__current_case__\": 2, \"output\": [{\"__index__\": 0, \"input\": {\"values\": [{\"id\": 259, \"src\": \"hda\"}]}, \"type\": \"align\"}], \"software\": \"bismark\"}}, {\"__index__\": 1, \"software_cond\": {\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 260, \"src\": \"hda\"}, {\"id\": 261, \"src\": \"hda\"}]}, \"software\": \"bowtie2\"}}, {\"__index__\": 2, \"software_cond\": {\"__current_case__\": 13, \"input\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}, {\"id\": 263, \"src\": \"hda\"}]}, \"software\": \"hisat2\"}}, {\"__index__\": 3, \"software_cond\": {\"__current_case__\": 12, \"input\": {\"values\": [{\"id\": 264, \"src\": \"hda\"}, {\"id\": 264, \"src\": \"hda\"}, {\"id\": 265, \"src\": \"hda\"}]}, \"software\": \"hicexplorer\"}}, {\"__index__\": 4, \"software_cond\": {\"__current_case__\": 15, \"input\": {\"values\": [{\"id\": 266, \"src\": \"hda\"}, {\"id\": 267, \"src\": \"hda\"}]}, \"software\": \"kallisto\"}}, {\"__index__\": 5, \"software_cond\": {\"__current_case__\": 16, \"input\": {\"values\": [{\"id\": 268, \"src\": \"hda\"}, {\"id\": 269, \"src\": \"hda\"}]}, \"software\": \"macs2\"}}, {\"__index__\": 6, \"software_cond\": {\"__current_case__\": 28, \"output\": [{\"__index__\": 0, \"type\": {\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 270, \"src\": \"hda\"}]}, \"type\": \"log\"}}, {\"__index__\": 1, \"type\": {\"__current_case__\": 1, \"input\": {\"values\": [{\"id\": 271, \"src\": \"hda\"}]}, \"type\": \"genecounts\"}}], \"software\": \"star\"}}, {\"__index__\": 7, \"software_cond\": {\"__current_case__\": 29, \"input\": {\"values\": [{\"id\": 272, \"src\": \"hda\"}]}, \"software\": \"tophat\"}}]",   "saveLog": "\"false\"",   "title": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:01:55.680956",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy0, exit_code: None, stderr: .",  "Output collection \u0027stats\u0027: expected to have 11 elements, but it had 0." ], "status": "failure", "test_index": 1, "time_seconds": 83.1146285533905, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc", "tool_version": "1.11+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #3)" name="2" time="58.882521867752075">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 58.882521867752075, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc", "tool_version": "1.11+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #4)" name="3" time="115.45082449913025">
        
            
            <system-out><![CDATA[
            ::::::::::::::/galaxy/server/database/objects/b/d/9/dataset_bd99de7d-1b81-4f69-b7b9-c321c3d6733c.dat::::::::::::::2502.98928676082438882504.55428676082439602506.11928676082433922507.68428676082426322509.24928676082422002510.81428676082422882512.37928676082426642513.94428676082424802515.50928676082423202517.07428676082425282518.63928676082433762520.20428676082442402521.76928676082446962523.33328676082445602524.89828676082441122526.46328676082439362528.02828676082437362529.59328676082429122531.15828676082423602532.72328676082431282534.28828676082438802535.85328676082441042537.41828676082442562538.98328676082446642540.54828676082446002542.11328676082442242543.67828676082441202545.24328676082443282546.80828676082445362548.37328676082448722549.93828676082445922551.50328676082436002553.06828676082428722554.63328676082435282556.19728676082440722557.76228676082433602559.32728676082416322560.89228676082407522562.45728676082404722564.02228676082397922565.58728676082390962567.15228676082396962568.71728676082411522570.28228676082418962571.84728676082415682573.41228676082414482574.97728676082423362576.54228676082434322578.10728676082437202579.67228676082433522581.23728676082435282582.80228676082557202584.36728676082741842585.93228676082919922587.497286760821058882589.062286760821145122590.626286760821202722592.191286760821236402593.756286760821220242595.321286760821155042596.886286760821067362598.45128676082978642600.01628676082876402601.58128676082773122603.14628676082679522604.71128676082594642606.27628676082506242607.84128676082436722609.40628676082439202610.97128676082438802612.53628676082440242614.10128676082441922615.66628676082443522617.23128676082440482618.79628676082433122620.4002803902421282622.00450588418410322623.60789985113406962625.2124745374412642626.81716666296420002628.42193807791427922630.02675063237438802631.63156617644450642633.23634656023458722634.84105363384456962636.44564924738449922638.05009525096437762639.65435349467426082641.25838582864416562642.86215410296413282644.46562016774413602646.06874587309415202647.67149306911492002649.2738236059822962650.875699333591270322652.477082102261783682654.077933762042318082655.678216163012851202657.27789115533344642658.875899059193698562660.474245233473871362662.071869573763933442663.669306786683959042665.267031980273954562666.864917606753919362668.462836118373966082670.060659967334190082671.658261605884652802673.255513486235263362674.852288060625866242676.448457781276254722678.043895100416423042679.638472470276513922681.232062343076642562682.826331583216720642684.416239291726644482686.001358058236420482687.581948411086117762689.15827087865772162690.730585989115374082692.298153131764899842693.863237257734372482695.425095445223855362696.983988222563362562698.540176118062871042700.093919660082405122701.645479376922010242703.195115796941666562704.743089448441370882706.289660859771177202707.83509055926985842709.37963907523815762710.92356693602667602712.46713466996534402714.01060280537419842715.55423187058378082717.09813305014374642718.64227188502378322720.18669043818383282721.73143077261387202723.27653495129389922724.82204503719391202726.36701510869389682727.91346287142387282729.46044270343389122731.00799666769389842732.55616682718386402734.10499524488375842735.65452398377366082737.20479510683363122738.75585067703369202740.30773275734375922741.86048341076528642743.41414470024762802744.968758688781014482746.524367439351257122748.081013014921476482749.638737478481645442751.197582892991740802752.757591321451765122754.318804826821732482755.881265472081648002757.445015320221521282759.009095948361371522760.575549500211214882762.143418416991061602763.71274476166916402765.28357059722780562766.85593798664669682768.42988899288630722770.00546567894726802771.582710107791000802773.161664342411504642774.742370445772273282776.324870480853257602777.909206510634355202779.495420598085424642781.083554806196365442782.673651197937081602784.265751836287589122785.862230810597902082787.46137897888052482789.061205067847971842790.656547639677621122792.247886784587089922793.835432625836437762795.422439172295744002797.009115162565024642798.596685147714359042800.186373678793700482801.77841392763042562803.372121187782400642804.967343193141870722806.56392767751453442808.161722374691125922809.76057501852863122811.36033334282666882812.9608450814526002814.56195796808422642816.16351973668390562817.76537812102389202819.36738085492389122820.9693756722383282822.57121030668375682824.17273249218371042825.77378996252373842827.37320803523384322828.97287981685405842830.57163018206419202832.16930686469413362833.76575759855392002835.36083011745374002836.95437215523365602838.54623144569365602840.13625572267367282841.72429271997368082843.31019017143372162844.89379581084381762846.47495737205387362848.05352258887384162849.62933919511379842851.20225492459383202852.77211751114386482854.33877468858382642855.90207419072379122857.46186375138383442859.01799110439390642860.57030398356393202862.11766206308388642863.66189187661385202865.20185051505382562866.73738571223370882868.26834520196353122869.79948751649334562871.33550080546324882872.87612722882322002874.4211089465322962875.97018811845329602877.5231069046342242879.07960746489350322880.63943195926347762882.20232254765339122883.76802139335042885.33627064625337682886.90681247633340722888.47938904019347682890.05374249777352482891.62961500899352482893.20674873382346082894.78387717236341442896.36275941013342162897.94212950607348882899.5217296201353602901.10130191218353682902.68058854224349282904.25933167022349202905.83727345606356322907.4141560597368802908.98972164108371602910.56371236013357522912.1358703768339362913.70593785103332722915.27239902125366802916.83419636666478002918.39175940831591842919.94551766722702482921.49590066445802162923.04333792104881042924.58825895802925682926.13109329645945762927.67227045736943842929.21123626907916722930.75038801093853282932.28917086394770642933.82801434915686962935.36734798761609602936.90760130035531842938.44920380841455362939.99258503284388082941.53817449469330402943.08640171498343762944.63769621478348402946.19064610336341362947.74354970432332562949.29640186015331762950.84919741336337282952.40193120644346562953.95459808188350002955.5071928822346002957.05971044989334242958.61214562743324722960.16449325734320322961.71575635663328162963.26791348294334322964.8199675924330722966.37191352751317042967.92374613077308082969.47546024467316642971.02705071172332482972.57851237441340002974.12984007525335522975.68102865672329362977.23207296132326242978.78296783157325122980.33370810994329442981.88428863895338722983.43470426108344082984.98494981884337042986.53502015473335922988.08491011124352322989.63461453087371202991.18412825612365602992.73344612949348322994.28256299347339362995.83048403819343762997.37918354758349442998.92766657837356403000.47592797306358643002.02396257416352883003.57176522416343923005.11933076555377283006.66665404083407603008.21372989252410483009.76045391304384483011.30673336694347683012.85258060488354803014.39800797751356883015.94302783547355123017.48765252941354163019.03189440998356483020.57576582784364643022.11927913362376963023.66244667799387683025.20528081158388163026.74779388504382803028.28901291088377123029.83092110147378643031.372545276376323032.9138977851363043034.45499097944355443035.99583720966352243037.53644882641355843039.07683818033357363040.61701762208357123042.15699950231351443043.69679617167349923045.23641998079349443046.77588328035344243048.31519842097332163049.85437775332404003051.39343362804473763052.93237839577521363054.47122440718544803056.0099840129544403057.5486695636522883059.08729340991664083060.62586790248780563062.16342231011873523063.70193515897939683065.24043569815962163066.7789362783933203068.31753117451885923069.85631402629840803071.39529623095796963072.93448918581742403074.47390428815691203076.0135529353653283077.55344652456629923079.09359645324609283080.63401411864581443082.17471091808545043083.71569824885504403085.25698750826461763086.79859009363422563088.34051740225388403089.88278083144395923091.4253917785392803092.96836164074373203094.51071553496357763096.05443717193353923097.59855190873359603099.14307114265366083100.68800627101372963102.2333686911376883103.77916980023376803105.32542099572372723106.87213367487362403108.41931923499350563109.96698907338342643111.51515458735349843113.0638271742358243114.61301823126371923116.16273915581380163117.71300134517382323119.26381619664377603120.81519510754373763122.36714947517369203123.91969069683363043125.47283016984361203127.02558628348370243128.57995605062377523130.13495825374374403131.69060429015369043133.24690555716369443134.80387345206370643136.36151937218368723137.91985471481364243139.47889087727357443141.03863925685350163142.59911125088662403144.160318256641283523145.722271671462243843147.284982892643505283148.848463317484897923150.412724343296203523151.977777367387166083153.543633787067648003155.110304999637654403156.67780240247384323158.245458762847020803159.812623938846634243161.378334007126334723162.944628167666594563164.510542218836752003166.076113193546935683167.641378124717062403169.206374045246963843170.771137988056725763172.335706986066529923173.900118072166353923175.464408279296045443177.028614640355601283178.592774188255163523180.15692395594768643181.721100976234348803183.285342282143888003184.849684906543444483186.414165882363047683187.978822242492683523189.543691019862375043191.108809247372140163192.674213957951948803194.2389416081764483195.805030141231617283197.371516232591524483198.9384369151466883200.505829221371423363202.073730184621377923203.642176837651333763205.211206213381291523206.780855344731267203208.35116126461258163209.922161005911250323211.493891601571232083213.066390084491202643214.63969348761150403216.213838843791083443217.788863185991027523219.3648035471990243220.94169696004948163222.51958045772892883224.09849107306840003225.67846583896984003227.259541788351096643228.840744583371154163230.424133235671168643232.008734146531145443233.594584348861090963235.18172087557996403236.77018075957902243238.36000103379821683239.95121873112731043241.54387088449988243243.13799452681363843244.733626690971741443246.330804409922080003247.929564716552339843249.529944643772481283251.131981224512527363252.735711491682504323254.339712589472446083255.942607277452360963257.544501011582259843259.145499247822094083260.745707442121916803262.344209186781723523263.943154001481511683265.541625074731897603267.13972786252661123268.737567820753450883270.335250405434126083271.93288107254658563273.529606807815079043275.124733742235400323276.718606049235541123278.311567902315501443279.903963474945352323281.495644004425205123283.086255475115038083284.675834181094774403286.264416416464352643287.852038475293852803289.438736651693340803291.024547239733678723292.60950653355077123294.193650827096518403295.777016414597841923297.358628558589182723298.9405460557510475523300.5217937059111586563302.1024078031212497923303.6824246414813204483305.2618805150913660163306.8408117180113731843308.4192545443513537283309.9972452881913286403311.5748202436113066243313.152015704712805123314.7288679655612631043316.3054133202612400643317.881688062912154883319.4577284875511991043321.0335708883211709443322.6092515592811228163324.1848067945210552323325.760272888149996803327.3353434089402243328.909671348928672643330.48222692547725443332.05499652566631683333.6269498665504003335.198062381074872323336.768309505285918723338.337666673116824963339.906109319047546243341.473612877558049283343.040152783118366083344.605704470218663043346.170243373318823043347.73374492698892803349.296184565458882563350.856954216678668163352.415540074788273923353.972058974067777283355.526627748817270403357.079363233296784643358.630382261796291203360.17980166865780483361.7277382885242883363.274308954264710403364.818643449724163203366.362833398763600643367.906007822853024003369.448283556292491523370.989777433352952323372.530606288314380163374.070886955455922563375.610736269067374083377.150271063428586243378.689608172819383683380.228864431519829763381.7681566738110152323383.3076017339710572803384.847316446310956803386.3874176450611223043387.9280221645511289603389.4692468390311110403391.011208502810588163392.554023990139966083394.097810135329422723395.642683772638886403397.187773417728201603398.735171660647444483400.284007823886746883401.834398741726096003403.386461248445435523404.940312178335703043406.496068365665925123408.053846644725989123409.61376384985950083411.175936815165884163412.74048237515759363414.307517363895513603415.877158615825200643417.449522965174912643419.024219788474614403420.600722288544282243422.178943039143936643423.758794614013600003425.340189586923230723426.92304053162876163428.50726002182580483430.092760631282341123431.678440709082102403433.266240599391866883434.855059386081660803436.444809642911485443438.035403943621340163439.626754861961303283441.218774971691399683442.811376846551600003444.404473060281990403445.997976186652350083447.59179879942700803449.185853472273043203450.780052779033350403452.37430929343563523453.968535589163713923455.562644240043794563457.156547819793807363458.750158902173753603460.343390060923682563461.936153869793565443463.528362902543375363465.118640610233107843466.708747666512807043468.297710292232505603469.885571898622227203471.472375896881982723473.058165698241768323474.64298471391581443476.226876355081411203477.8098840331396483479.392051158861406723480.973421143891392003482.554037399291352323484.133943336291283123485.713182366081194083487.29179789991096643488.869833348961000323490.44733212446902643492.02433763762930243493.60089329966980723495.177042521791025283496.753086451381047123498.328893146281034963499.903738187671667203501.480205498212939523503.057113000054659203504.63428531556634243506.211547066868492803507.788722876459980803509.3656373665811110403510.9421151595511980803512.5179808776812544003514.0930591432812800003515.6671745786512948483517.2401518061112989443518.8118154479612881923520.3833430203612661763521.9560069446512518403523.5297742009112328963525.1046117692411975683526.6804866297111525123528.2573657624311217923529.8352161474810900483531.4140047649410440963532.992688923899861123534.573254399689386883536.154659069258980483537.73686991278556163539.31985391018044163540.903578041547532803542.488009287127038723544.073114626926551683545.658861041036048003547.245215509545566083548.832145012545169283550.419616530114846083552.007597042354542083553.596053529344259203555.184952971174032643556.774262347923882243558.363948639693761283559.953978826573626243561.544319888643461763563.1349388063334403564.725802558723226243566.31687812693113603567.907115664622988163569.498515721372897283571.090028554952816003572.681621145442696963574.273260472932519043575.86491351752309123577.456547259252119683579.048128678272140803580.639624754632170243582.231002468442158723583.822228799772103043585.413270728722033283587.004095235382240003588.594669299832392323590.1849599..3392.8768690521111315203394.4667852276810798083396.056244293610189443397.645228710339466243399.232706088228680323400.820688919297895683402.40814449387205763403.99505527226533763405.581403714985864323407.16717228265188483408.752343435535417603410.336899634255704323411.920823339215872643413.50409701095825283415.086703109795626883416.668624096345402883418.249842431025158403419.83034057434890883421.410100986664612483422.989106128574350083424.567338460494053123426.144780442893720963427.721414536253385603429.297223201043079683430.872188897722780163432.445288547242467843434.018516255782161283435.590848388831908483437.167787947941726723438.753732966491575683440.347008452751420803441.945939414961269363443.548850861371298483445.154067800251340803446.759915239831612163448.364718188381959683449.966801654152263043451.564490645382506883453.156110170342702723454.739985237262874243456.314440854423054723457.877802030053236483459.428393772413379843460.972218177133406723462.516372972883281283464.060826617513054083465.605547568892844163467.149517023512693123468.694677841512540803470.240011359962326403471.785486036732074883473.331070329661833603474.87673269661598083476.422441595411364483477.968165483951463683479.513872820061511043481.059532061611504643482.605111666431459843484.150580092391400323485.695905797341315843487.241057239141232403488.786002875631142963490.330711164671044003491.87515056411917843493.41928953181910883494.96309652562964643496.50654000339994083498.04958842297993523499.59073375471230163501.132945784392232323502.677872453473636483504.224626161965374083505.773140213347257603507.323347911088979203508.8751825586610299523510.4285774595411258883511.9834659172212026883513.5397812351612636163515.0974567168312979203516.6564256657113066243518.2166213852713015043519.77797717913015043521.3404263503613066243522.9039022028213066243524.4683380398712866563526.0336671649812497923527.5998228816211985923529.1667384932711397123530.734347303410828803532.3025826154810485123533.8703751434610318083535.4396630760910110083537.009377463729705603538.579451609829152003540.149818817878515843541.720412391347880323543.291165633717312003544.862011848446816643546.432884339036317443548.003716408935835523549.574441361635412483551.14499250065027203552.715303129314648323554.285306551254316163555.854936069874066563557.424124988673853443558.99280661113644163560.560914240663454723562.12838118083296003563.695140735023168003565.261126206773071363566.825271089733001603568.389226619932908163569.951689395132737283571.512661645052504963573.072145599392265603574.630143487892091523576.186657540261975683577.741689986222012163579.295243055492076803580.847318977782135683582.397919982822133123583.947048300332040323585.494706160011879683587.04089579161843203588.585619424821907843590.128879289371938563591.670677614971955203593.211016631361956483594.749898568241908483596.287325655341813763597.823300122371694083599.357824199061562243600.889920975791409283602.421551884141232403603.951739089871056803605.48048482271901283607.00779131237779283608.53366078857671443610.05809548103577283611.58109761947849523613.10266943361272323614.622813153151774083616.141531007842334723617.658825227382921603619.174698041493448323620.689151679893831043622.20218837234034563623.713810348444101763625.224019838034090243626.732819070784061443628.240210276423918083629.746195684673677443631.257542033643443843632.777472824023202563634.304082210232934403635.832549471992677123637.359023067582385283638.87965145532034563640.399293050881651203641.925096569141289683643.456645916971299043644.99352500131334403646.535317729051345283648.081608007111593603649.631979742422307203651.186016841873153923652.74330321244106243654.30342276095100163655.865959394295998723657.430497019496643203658.996619543417064963660.563910872977427203662.131954915077795203663.700335576648034563665.268636764588110723666.835440839858080003668.402335516677950723669.967902706477667203671.531726316197296003673.093390252726879363674.652478422986396163676.208574733895829763677.761263092365298563679.323553688894830723680.901993030284431363682.486469497864058883684.066871472973715843685.633087336963354243687.189320310583007363688.746504107432721923690.304622848172501123691.863660653462284803693.423601643962069123694.984429940321889283696.546129663191736323698.108684933231776643699.671080631991922563701.235298837032000643702.800324961362014723704.366143125642011523705.932737450511998723707.500092056631980163709.068191064661913603710.637018595261802243712.206558769081651203713.776795706781502083715.347713529011340163716.919296356421148163718.49152830969907763720.06439350945671763721.63787607637676963723.2119601311856403724.78662979431008643726.361869186631124963727.937662428731187363729.513993641271208963731.09084694491210723732.668206460281178403734.245047944111106323735.823371946861023763737.40215453346933523738.98137982459847203740.56103194088760403742.14109500301744403743.72155313162789523745.30239044737792723746.88359107091768083748.46513912291732563750.04701872402691523751.62921399489652883753.21170905618621443754.79448802855604163756.37753503264598403757.96083418913603043759.54436961866611363761.12812544188615683762.71208577947609683764.29623475206593203765.88055648032574083767.4640225918550243769.04864210834517283770.63338675265465603772.21824064541407603773.80318790725358083775.38821265884384963776.97329902084408563778.5584311139457603780.14359305867511843781.72876897582527203783.31394298599516883784.89909920985504563786.48422176804569763788.06929478123644483789.65430237007714803791.23922865522771283792.82405775733822723794.40877379706856003795.99336089506854883797.577803172816243799.16208474852750483800.74618974528659523802.32909026307544003803.91279460048429843805.49627473024351363807.07951477301321443808.66249884945355123810.24521108022474483811.82763558596682883813.40975648734963523814.991557905011268243816.573023959621560963818.154138771841799043819.734886462321985283821.315251151712117123822.895216960672199043824.474768009862221443826.053888419932184323827.632562311542096003829.210773805341952643830.788507021991771523832.365746082141583363833.942475106461413123835.517945894051238483837.094442637881062803838.67095770774891123840.24749080167745363841.8240416177629683843.40060985387552243844.97719520822504163846.55379737878506803848.1304160636515043849.7070509607509763851.28370176813485523852.86036818393505203854.43704990612509443856.01374663275492243857.59045806186451603859.16718389147399203860.74392381963344563862.32067754438300243863.89744476375265683865.47422517578241043867.0510184785220883868.62782436996207683870.20363499278202003871.78046514825204403873.35730698676208403874.93416020634211923876.51102450504256963878.08789958088321043879.6647851319374003881.24168085615418163882.81858645166441843884.39550161646437843885.9724260486412643887.5493594461377843889.12630150701339443890.70325192937300563892.28021041121263443893.85717665056223923895.43415034547182243897.01113119397140833898.5881188941117143900.16511314389111373901.74211364139102163903.3181124109595593904.8951244944595233906.47214191997102083908.04916438552116743909.62619158916127583911.20322322891134213912.78025900282139643914.35729860892147483915.93434174525157223917.51138810985164963919.08843740074171043920.66548931598175043922.2425435536173763923.81959981163164643925.3966577881147973926.97371718107131373928.55077768856120263930.12783900862118213931.70490083927118413933.28196287856114903934.85902482452108333936.43507866832103523938.0121395222798793939.58919937721102363941.16625793116106083942.74331488216112923944.32036992825119223945.89742276746118203947.47447309783110863949.05152061741116413950.62856502422120863952.2056060163120503953.78264329169118813955.35967654843117863956.93670548455117783958.51372979809115113960.09074918709109483961.66776334958101203963.2447719836193893964.8217747872184633966.3987714584175983967.9757616952572353969.5527451957776703971.12871400763110433972.70568313441145383974.28264461918170163975.85959815996182323977.4365434548188323979.01348020174186323980.59040809881172403982.16732684405150803983.74423613549133943985.32113567117124353986.89802514914116613988.47490426742111743990.05177272406138823991.62863021708162243993.20547644454179283994.78231110446196403996.35913389488210563997.93594451384218803999.51274265937219604001.08952802952216964002.66630032231208244004.24205172645194964005.8187969675183444007.3955282255178804008.97224519849174804010.5489475845164964012.12563508159152354013.70230738777142784015.27896420109135484016.85560521959127114018.4322301413124214020.00883866426152274021.58543048651190564023.16200530608230004024.73856282101272724026.31510272934322884027.8916247291375844029.46812851834422404031.04461379508449044032.62108025737454244034.19752760324440164035.77395553073417444037.35036373788387924038.92574465238352404040.50211252604355524042.07845977366409204043.65478609327457844045.23109118292488724046.80737474064502404048.38363646447494564049.95987605244461524051.5360932026518404053.11228761297560724054.68845399697582564056.26458848254577844057.84069288953533844059.4167690378459204060.99281874721376164062.56884383761304484064.14484612887255444065.72082744082225524067.29678959334202964068.87273440628179364070.44866369949161454072.02357232199151394073.59947604232143114075.17536970134131654076.75125511888123384078.32713411482119964079.903008509119454081.47888012129117964083.05475077153117754084.63062227959119234086.20649646532121584087.78237514858121684089.35826014922121904090.93415328709123004092.51005638207126794094.08597125399144154095.66189972272175764097.23784360811211124098.81380473002245684100.38978490831269524101.96578596283272084103.54180971343261204105.11785797998248884106.6929254971234644108.26902823653208404109.84516095031169364111.42132545829298804112.99752358033623604114.573757136291146884116.150027946011867524117.726337829372718724119.302688606213646084120.879082096394598404122.455520119775431044124.03200449626043524125.608537045546367364127.185119587646448644128.761753942376289924130.338441929575901444131.91518536915276164133.491986080824426244135.068845884583426564136.645766600252458244138.222750047671685124139.798807667441141284141.37597099195774964142.9532295589509444144.53058058354321924146.10802128113198644147.68554886694125294149.2631605562382374150.8408535642557604152.4186251062740944153.9964723975529024155.5743926533421884157.1523830889218524158.7304409195316844160.3085633604417194161.8867476269218224163.4649909342119824165.0432904975821364166.621643532322294168.2000472536123124169.7784988767925224171.3569956170927254172.9355346897827514174.5131046216425544176.0917199822728394177.6703693228430684179.2490498586229114180.8277588048624694182.4064933768319344183.9852507897916204185.5640282589915334187.1428229996912724188.7216322271710914190.300453156679684191.8792830034610804193.458118982816224195.0369583099519594196.6157982001620104198.1946358687119284199.7734685308518484201.3522934018318004202.9311076969319414204.509908631428304206.0886934205139924207.6664504900648894209.2451946489856084210.8239143100861014212.4026066886463404213.9812689999164274215.5598984591665514217.1384922816464894218.7170476826262374220.2955618773557054221.874032081160324223.4524555091370694225.0308293766973294226.6091508990568474228.1741508990558124229.7391508990547424231.3041508990539294232.8691508990532464234.4341508990529734235.9991508990526204237.5641508990522964239.1291508990522144240.6941508990522214242.2581508990521124243.8231508990517874245.3881508990515944246.9531508990515934248.5181508990516044250.0831508990514174251.6481508990512644253.2131508990512294254.7781508990513074256.3431508990513034257.9081508990512474259.4731508990512324261.0381508990512254262.6031508990511734264.1681508990510664265.733150899059894267.298150899058844268.863150899058264270.428150899057654271.993150899058194273.558150899059084275.122150899059594276.687150899059334278.252150899059034279.817150899058624281.382150899057854282.947150899056924284.512150899055674286.077150899054054287.642150899053004289.207150899052934290.772150899053444292.337150899053234293.902150899053344295.467150899053434297.032150899052954298.597150899052644300.162150899052514301.727150899052304303.292150899052164304.857150899051704306.422150899051454307.987150899051454309.551150899051454311.116150899051624312.681150899051904314.246150899051734315.811150899051594317.376150899051564318.941150899051604320.506150899051664322.071150899051904323.636150899052164325.201150899052684326.766150899052984328.331150899053664329.896150899054424331.461150899054404333.026150899053104334.591150899052844336.156150899052604337.721150899052804339.286150899052954340.851150899052304342.415150899052304343.980150899052054345.545150899052034347.110150899052294348.675150899052244350.240150899052134351.805150899052424353.370150899052434354.935150899052304356.500150899052054358.065150899051884359.630150899051504361.195150899051804362.760150899052094364.325150899052184365.890150899052284367.455150899052754369.020150899053264370.585150899053364372.150150899053274373.715150899052704375.280150899052374376.844150899053174378.409150899052974379.974150899052924381.539150899052824383.104150899052654384.669150899052444386.234150899052544387.799150899052424389.364150899052454390.929150899052824392.494150899052724394.059150899052614395.624150899052674397.189150899052964398.754150899053114400.319150899053594401.884150899054974403.449150899055744405.014150899055514406.579150899054734408.144150899054054409.708150899054194411.273150899053884412.838150899053834414.403150899053944415.968150899054384417.533150899055834419.098150899057054420.663150899057364422.228150899057364423.793150899057994425.358150899058824426.923150899058654428.488150899058204430.053150899058154431.618150899059104433.183150899059594434.748150899059464436.313150899059554437.878150899059504439.443150899059824441.0081508990510304442.5731508990511274444.1371508990512184445.7021508990513054447.2671508990513634448.8321508990515324450.3971508990516944451.9621508990518844453.5271508990521564455.0921508990526564456.6571508990533284458.2221508990538274459.7871508990539694461.3521508990540554462.9171508990542624464.4821508990544944466.0471508990545014467.6121508990544044469.1771508990543164470.7421508990542904472.3071508990542324473.8721508990542154475.4371508990544434477.0011508990548384478.5661508990549204480.1311508990542944481.6961508990534374483.2611508990530964484.8261508990533124486.3911508990534264487.9561508990530854489.5211508990527504491.0861508990526964492.6511508990529204494.2161508990531194495.7811508990533224497.3461508990534634498.9111508990533134500.4761508990531844502.0411508990532174503.6061508990532404505.1711508990532884506.7361508990535824508.301150899053963|         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 2/2  
            ]]></system-out>
            <system-err><![CDATA[
              /// MultiQC 🔍 | v1.11|           multiqc | MultiQC Version v1.14 now available!|           multiqc | Search path : /galaxy/server/database/jobs_directory/000/179/working/multiqc_WDir|    custom_content | section_0: Found 2 samples (linegraph)|           multiqc | Compressing plot data|           multiqc | Report      : report.html|           multiqc | Data        : report_data|           multiqc | MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #5)" name="4" time="46.010711908340454">
        
            
            <system-out><![CDATA[
            |         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 2/2  
            ]]></system-out>
            <system-err><![CDATA[
              /// MultiQC 🔍 | v1.11|           multiqc | MultiQC Version v1.14 now available!|           multiqc | Report title: Title of the report|           multiqc | Search path : /galaxy/server/database/jobs_directory/000/182/working/multiqc_WDir|            fastqc | Found 2 reports|           multiqc | Compressing plot data|           multiqc | Report      : report.html|           multiqc | Data        : report_data|           multiqc | Plots       : report_plots|           multiqc | MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #6)" name="5" time="28.421250581741333">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "comment": "Commment for the report",  "results_0|software_cond|input": {   "id": "e60ec4f9946be3c0",   "src": "hda"  },  "results_0|software_cond|software": "pycoqc",  "title": "Title of the report" }, "job": {  "command_line": "die() { echo \"$@\" 1\u003e\u00262 ; exit 1; } \u0026\u0026  mkdir multiqc_WDir \u0026\u0026   mkdir multiqc_WDir/pycoqc_0 \u0026\u0026        grep -q \u0027\"pycoqc\":\u0027 /galaxy/server/database/objects/b/f/7/dataset_bf791731-6747-4e42-b1fb-bbde8f139321.dat || die \"Module \u0027pycoqc: \u0027\"pycoqc\":\u0027 not found in the file \u0027pycoqc_json\u0027\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/b/f/7/dataset_bf791731-6747-4e42-b1fb-bbde8f139321.dat\u0027 \u0027multiqc_WDir/pycoqc_0/pycoqc_json\u0027  \u0026\u0026    multiqc multiqc_WDir --filename \u0027report\u0027  --title \u0027Title of the report\u0027 --comment \u0027Commment for the report\u0027",  "command_version": null,  "create_time": "2023-02-07T22:05:54.625927",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-hscjr",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "8ae35e1a494e4b2d",  "inputs": {   "results_0|input": {    "id": "e60ec4f9946be3c0",    "src": "hda",    "uuid": "bf791731-6747-4e42-b1fb-bbde8f139321"   },   "results_0|input1": {    "id": "e60ec4f9946be3c0",    "src": "hda",    "uuid": "bf791731-6747-4e42-b1fb-bbde8f139321"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {   "stats": {    "id": "7c912e471957f346",    "src": "hdca"   }  },  "outputs": {   "html_report": {    "id": "d5c5d3e41ba0b7bc",    "src": "hda",    "uuid": "c55a5d70-1551-41f8-b847-57912b432616"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "comment": "\"Commment for the report\"",   "dbkey": "\"?\"",   "export": "\"false\"",   "flat": "\"false\"",   "results": "[{\"__index__\": 0, \"software_cond\": {\"__current_case__\": 19, \"input\": {\"values\": [{\"id\": 321, \"src\": \"hda\"}]}, \"software\": \"pycoqc\"}}]",   "saveLog": "\"false\"",   "title": "\"Title of the report\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:06:04.837518",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy0, exit_code: None, stderr: .",  "Output collection \u0027stats\u0027: expected to have 2 elements, but it had 0." ], "status": "failure", "test_index": 5, "time_seconds": 28.421250581741333, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc", "tool_version": "1.11+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #1)" name="0" time="95.43709754943848">
        
            
            <system-out><![CDATA[
            Searching 7 files..
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.5[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Report title: Title of the report[INFO   ]         multiqc : Searching 'multiqc_WDir'[INFO   ]        cutadapt : Found 1 reports[INFO   ]         flexbar : Found 1 logs[INFO   ]     trimmomatic : Found 1 logs[INFO   ]       sortmerna : Found 1 logs[INFO   ]          fastqc : Found 2 reports[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #2)" name="1" time="80.72792720794678">
        
            
            <system-out><![CDATA[
            Searching 13 files..
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.5[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Searching 'multiqc_WDir'[INFO   ]         bismark : Found 1 bismark alignment reports[INFO   ]        kallisto : Found 2 reports[INFO   ]            star : Found 1 reports and 1 gene count files[INFO   ]          hisat2 : Found 2 reports[INFO   ]          tophat : Found 1 reports[INFO   ]         bowtie2 : Found 2 reports[INFO   ]        cutadapt : Found 4 reports[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #3)" name="2" time="69.96266913414001">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 69.96266913414001, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc", "tool_version": "1.5.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #4)" name="3" time="92.09537267684937">
        
            
            <system-out><![CDATA[
            ::::::::::::::/galaxy/server/database/objects/d/2/1/dataset_d21d0358-764b-460d-9854-153d92412623.dat::::::::::::::2502.98928676082438882504.55428676082439602506.11928676082433922507.68428676082426322509.24928676082422002510.81428676082422882512.37928676082426642513.94428676082424802515.50928676082423202517.07428676082425282518.63928676082433762520.20428676082442402521.76928676082446962523.33328676082445602524.89828676082441122526.46328676082439362528.02828676082437362529.59328676082429122531.15828676082423602532.72328676082431282534.28828676082438802535.85328676082441042537.41828676082442562538.98328676082446642540.54828676082446002542.11328676082442242543.67828676082441202545.24328676082443282546.80828676082445362548.37328676082448722549.93828676082445922551.50328676082436002553.06828676082428722554.63328676082435282556.19728676082440722557.76228676082433602559.32728676082416322560.89228676082407522562.45728676082404722564.02228676082397922565.58728676082390962567.15228676082396962568.71728676082411522570.28228676082418962571.84728676082415682573.41228676082414482574.97728676082423362576.54228676082434322578.10728676082437202579.67228676082433522581.23728676082435282582.80228676082557202584.36728676082741842585.93228676082919922587.497286760821058882589.062286760821145122590.626286760821202722592.191286760821236402593.756286760821220242595.321286760821155042596.886286760821067362598.45128676082978642600.01628676082876402601.58128676082773122603.14628676082679522604.71128676082594642606.27628676082506242607.84128676082436722609.40628676082439202610.97128676082438802612.53628676082440242614.10128676082441922615.66628676082443522617.23128676082440482618.79628676082433122620.4002803902421282622.00450588418410322623.60789985113406962625.2124745374412642626.81716666296420002628.42193807791427922630.02675063237438802631.63156617644450642633.23634656023458722634.84105363384456962636.44564924738449922638.05009525096437762639.65435349467426082641.25838582864416562642.86215410296413282644.46562016774413602646.06874587309415202647.67149306911492002649.2738236059822962650.875699333591270322652.477082102261783682654.077933762042318082655.678216163012851202657.27789115533344642658.875899059193698562660.474245233473871362662.071869573763933442663.669306786683959042665.267031980273954562666.864917606753919362668.462836118373966082670.060659967334190082671.658261605884652802673.255513486235263362674.852288060625866242676.448457781276254722678.043895100416423042679.638472470276513922681.232062343076642562682.826331583216720642684.416239291726644482686.001358058236420482687.581948411086117762689.15827087865772162690.730585989115374082692.298153131764899842693.863237257734372482695.425095445223855362696.983988222563362562698.540176118062871042700.093919660082405122701.645479376922010242703.195115796941666562704.743089448441370882706.289660859771177202707.83509055926985842709.37963907523815762710.92356693602667602712.46713466996534402714.01060280537419842715.55423187058378082717.09813305014374642718.64227188502378322720.18669043818383282721.73143077261387202723.27653495129389922724.82204503719391202726.36701510869389682727.91346287142387282729.46044270343389122731.00799666769389842732.55616682718386402734.10499524488375842735.65452398377366082737.20479510683363122738.75585067703369202740.30773275734375922741.86048341076528642743.41414470024762802744.968758688781014482746.524367439351257122748.081013014921476482749.638737478481645442751.197582892991740802752.757591321451765122754.318804826821732482755.881265472081648002757.445015320221521282759.009095948361371522760.575549500211214882762.143418416991061602763.71274476166916402765.28357059722780562766.85593798664669682768.42988899288630722770.00546567894726802771.582710107791000802773.161664342411504642774.742370445772273282776.324870480853257602777.909206510634355202779.495420598085424642781.083554806196365442782.673651197937081602784.265751836287589122785.862230810597902082787.46137897888052482789.061205067847971842790.656547639677621122792.247886784587089922793.835432625836437762795.422439172295744002797.009115162565024642798.596685147714359042800.186373678793700482801.77841392763042562803.372121187782400642804.967343193141870722806.56392767751453442808.161722374691125922809.76057501852863122811.36033334282666882812.9608450814526002814.56195796808422642816.16351973668390562817.76537812102389202819.36738085492389122820.9693756722383282822.57121030668375682824.17273249218371042825.77378996252373842827.37320803523384322828.97287981685405842830.57163018206419202832.16930686469413362833.76575759855392002835.36083011745374002836.95437215523365602838.54623144569365602840.13625572267367282841.72429271997368082843.31019017143372162844.89379581084381762846.47495737205387362848.05352258887384162849.62933919511379842851.20225492459383202852.77211751114386482854.33877468858382642855.90207419072379122857.46186375138383442859.01799110439390642860.57030398356393202862.11766206308388642863.66189187661385202865.20185051505382562866.73738571223370882868.26834520196353122869.79948751649334562871.33550080546324882872.87612722882322002874.4211089465322962875.97018811845329602877.5231069046342242879.07960746489350322880.63943195926347762882.20232254765339122883.76802139335042885.33627064625337682886.90681247633340722888.47938904019347682890.05374249777352482891.62961500899352482893.20674873382346082894.78387717236341442896.36275941013342162897.94212950607348882899.5217296201353602901.10130191218353682902.68058854224349282904.25933167022349202905.83727345606356322907.4141560597368802908.98972164108371602910.56371236013357522912.1358703768339362913.70593785103332722915.27239902125366802916.83419636666478002918.39175940831591842919.94551766722702482921.49590066445802162923.04333792104881042924.58825895802925682926.13109329645945762927.67227045736943842929.21123626907916722930.75038801093853282932.28917086394770642933.82801434915686962935.36734798761609602936.90760130035531842938.44920380841455362939.99258503284388082941.53817449469330402943.08640171498343762944.63769621478348402946.19064610336341362947.74354970432332562949.29640186015331762950.84919741336337282952.40193120644346562953.95459808188350002955.5071928822346002957.05971044989334242958.61214562743324722960.16449325734320322961.71575635663328162963.26791348294334322964.8199675924330722966.37191352751317042967.92374613077308082969.47546024467316642971.02705071172332482972.57851237441340002974.12984007525335522975.68102865672329362977.23207296132326242978.78296783157325122980.33370810994329442981.88428863895338722983.43470426108344082984.98494981884337042986.53502015473335922988.08491011124352322989.63461453087371202991.18412825612365602992.73344612949348322994.28256299347339362995.83048403819343762997.37918354758349442998.92766657837356403000.47592797306358643002.02396257416352883003.57176522416343923005.11933076555377283006.66665404083407603008.21372989252410483009.76045391304384483011.30673336694347683012.85258060488354803014.39800797751356883015.94302783547355123017.48765252941354163019.03189440998356483020.57576582784364643022.11927913362376963023.66244667799387683025.20528081158388163026.74779388504382803028.28901291088377123029.83092110147378643031.372545276376323032.9138977851363043034.45499097944355443035.99583720966352243037.53644882641355843039.07683818033357363040.61701762208357123042.15699950231351443043.69679617167349923045.23641998079349443046.77588328035344243048.31519842097332163049.85437775332404003051.39343362804473763052.93237839577521363054.47122440718544803056.0099840129544403057.5486695636522883059.08729340991664083060.62586790248780563062.16342231011873523063.70193515897939683065.24043569815962163066.7789362783933203068.31753117451885923069.85631402629840803071.39529623095796963072.93448918581742403074.47390428815691203076.0135529353653283077.55344652456629923079.09359645324609283080.63401411864581443082.17471091808545043083.71569824885504403085.25698750826461763086.79859009363422563088.34051740225388403089.88278083144395923091.4253917785392803092.96836164074373203094.51071553496357763096.05443717193353923097.59855190873359603099.14307114265366083100.68800627101372963102.2333686911376883103.77916980023376803105.32542099572372723106.87213367487362403108.41931923499350563109.96698907338342643111.51515458735349843113.0638271742358243114.61301823126371923116.16273915581380163117.71300134517382323119.26381619664377603120.81519510754373763122.36714947517369203123.91969069683363043125.47283016984361203127.02558628348370243128.57995605062377523130.13495825374374403131.69060429015369043133.24690555716369443134.80387345206370643136.36151937218368723137.91985471481364243139.47889087727357443141.03863925685350163142.59911125088662403144.160318256641283523145.722271671462243843147.284982892643505283148.848463317484897923150.412724343296203523151.977777367387166083153.543633787067648003155.110304999637654403156.67780240247384323158.245458762847020803159.812623938846634243161.378334007126334723162.944628167666594563164.510542218836752003166.076113193546935683167.641378124717062403169.206374045246963843170.771137988056725763172.335706986066529923173.900118072166353923175.464408279296045443177.028614640355601283178.592774188255163523180.15692395594768643181.721100976234348803183.285342282143888003184.849684906543444483186.414165882363047683187.978822242492683523189.543691019862375043191.108809247372140163192.674213957951948803194.2389416081764483195.805030141231617283197.371516232591524483198.9384369151466883200.505829221371423363202.073730184621377923203.642176837651333763205.211206213381291523206.780855344731267203208.35116126461258163209.922161005911250323211.493891601571232083213.066390084491202643214.63969348761150403216.213838843791083443217.788863185991027523219.3648035471990243220.94169696004948163222.51958045772892883224.09849107306840003225.67846583896984003227.259541788351096643228.840744583371154163230.424133235671168643232.008734146531145443233.594584348861090963235.18172087557996403236.77018075957902243238.36000103379821683239.95121873112731043241.54387088449988243243.13799452681363843244.733626690971741443246.330804409922080003247.929564716552339843249.529944643772481283251.131981224512527363252.735711491682504323254.339712589472446083255.942607277452360963257.544501011582259843259.145499247822094083260.745707442121916803262.344209186781723523263.943154001481511683265.541625074731897603267.13972786252661123268.737567820753450883270.335250405434126083271.93288107254658563273.529606807815079043275.124733742235400323276.718606049235541123278.311567902315501443279.903963474945352323281.495644004425205123283.086255475115038083284.675834181094774403286.264416416464352643287.852038475293852803289.438736651693340803291.024547239733678723292.60950653355077123294.193650827096518403295.777016414597841923297.358628558589182723298.9405460557510475523300.5217937059111586563302.1024078031212497923303.6824246414813204483305.2618805150913660163306.8408117180113731843308.4192545443513537283309.9972452881913286403311.5748202436113066243313.152015704712805123314.7288679655612631043316.3054133202612400643317.881688062912154883319.4577284875511991043321.0335708883211709443322.6092515592811228163324.1848067945210552323325.760272888149996803327.3353434089402243328.909671348928672643330.48222692547725443332.05499652566631683333.6269498665504003335.198062381074872323336.768309505285918723338.337666673116824963339.906109319047546243341.473612877558049283343.040152783118366083344.605704470218663043346.170243373318823043347.73374492698892803349.296184565458882563350.856954216678668163352.415540074788273923353.972058974067777283355.526627748817270403357.079363233296784643358.630382261796291203360.17980166865780483361.7277382885242883363.274308954264710403364.818643449724163203366.362833398763600643367.906007822853024003369.448283556292491523370.989777433352952323372.530606288314380163374.070886955455922563375.610736269067374083377.150271063428586243378.689608172819383683380.228864431519829763381.7681566738110152323383.3076017339710572803384.847316446310956803386.3874176450611223043387.9280221645511289603389.4692468390311110403391.011208502810588163392.554023990139966083394.097810135329422723395.642683772638886403397.187773417728201603398.735171660647444483400.284007823886746883401.834398741726096003403.386461248445435523404.940312178335703043406.496068365665925123408.053846644725989123409.61376384985950083411.175936815165884163412.74048237515759363414.307517363895513603415.877158615825200643417.449522965174912643419.024219788474614403420.600722288544282243422.178943039143936643423.758794614013600003425.340189586923230723426.92304053162876163428.50726002182580483430.092760631282341123431.678440709082102403433.266240599391866883434.855059386081660803436.444809642911485443438.035403943621340163439.626754861961303283441.218774971691399683442.811376846551600003444.404473060281990403445.997976186652350083447.59179879942700803449.185853472273043203450.780052779033350403452.37430929343563523453.968535589163713923455.562644240043794563457.156547819793807363458.750158902173753603460.343390060923682563461.936153869793565443463.528362902543375363465.118640610233107843466.708747666512807043468.297710292232505603469.885571898622227203471.472375896881982723473.058165698241768323474.64298471391581443476.226876355081411203477.8098840331396483479.392051158861406723480.973421143891392003482.554037399291352323484.133943336291283123485.713182366081194083487.29179789991096643488.869833348961000323490.44733212446902643492.02433763762930243493.60089329966980723495.177042521791025283496.753086451381047123498.328893146281034963499.903738187671667203501.480205498212939523503.057113000054659203504.63428531556634243506.211547066868492803507.788722876459980803509.3656373665811110403510.9421151595511980803512.5179808776812544003514.0930591432812800003515.6671745786512948483517.2401518061112989443518.8118154479612881923520.3833430203612661763521.9560069446512518403523.5297742009112328963525.1046117692411975683526.6804866297111525123528.2573657624311217923529.8352161474810900483531.4140047649410440963532.992688923899861123534.573254399689386883536.154659069258980483537.73686991278556163539.31985391018044163540.903578041547532803542.488009287127038723544.073114626926551683545.658861041036048003547.245215509545566083548.832145012545169283550.419616530114846083552.007597042354542083553.596053529344259203555.184952971174032643556.774262347923882243558.363948639693761283559.953978826573626243561.544319888643461763563.1349388063334403564.725802558723226243566.31687812693113603567.907115664622988163569.498515721372897283571.090028554952816003572.681621145442696963574.273260472932519043575.86491351752309123577.456547259252119683579.048128678272140803580.639624754632170243582.231002468442158723583.822228799772103043585.413270728722033283587.004095235382240003588.594669299832392323590.1849599..11550723384.9210454129211776003386.5129840438311811843388.1045532627411863043389.6957355301111863043391.2865133064111699203392.8768690521111315203394.4667852276810798083396.056244293610189443397.645228710339466243399.232706088228680323400.820688919297895683402.40814449387205763403.99505527226533763405.581403714985864323407.16717228265188483408.752343435535417603410.336899634255704323411.920823339215872643413.50409701095825283415.086703109795626883416.668624096345402883418.249842431025158403419.83034057434890883421.410100986664612483422.989106128574350083424.567338460494053123426.144780442893720963427.721414536253385603429.297223201043079683430.872188897722780163432.445288547242467843434.018516255782161283435.590848388831908483437.167787947941726723438.753732966491575683440.347008452751420803441.945939414961269363443.548850861371298483445.154067800251340803446.759915239831612163448.364718188381959683449.966801654152263043451.564490645382506883453.156110170342702723454.739985237262874243456.314440854423054723457.877802030053236483459.428393772413379843460.972218177133406723462.516372972883281283464.060826617513054083465.605547568892844163467.149517023512693123468.694677841512540803470.240011359962326403471.785486036732074883473.331070329661833603474.87673269661598083476.422441595411364483477.968165483951463683479.513872820061511043481.059532061611504643482.605111666431459843484.150580092391400323485.695905797341315843487.241057239141232403488.786002875631142963490.330711164671044003491.87515056411917843493.41928953181910883494.96309652562964643496.50654000339994083498.04958842297993523499.59073375471230163501.132945784392232323502.677872453473636483504.224626161965374083505.773140213347257603507.323347911088979203508.8751825586610299523510.4285774595411258883511.9834659172212026883513.5397812351612636163515.0974567168312979203516.6564256657113066243518.2166213852713015043519.77797717913015043521.3404263503613066243522.9039022028213066243524.4683380398712866563526.0336671649812497923527.5998228816211985923529.1667384932711397123530.734347303410828803532.3025826154810485123533.8703751434610318083535.4396630760910110083537.009377463729705603538.579451609829152003540.149818817878515843541.720412391347880323543.291165633717312003544.862011848446816643546.432884339036317443548.003716408935835523549.574441361635412483551.14499250065027203552.715303129314648323554.285306551254316163555.854936069874066563557.424124988673853443558.99280661113644163560.560914240663454723562.12838118083296003563.695140735023168003565.261126206773071363566.825271089733001603568.389226619932908163569.951689395132737283571.512661645052504963573.072145599392265603574.630143487892091523576.186657540261975683577.741689986222012163579.295243055492076803580.847318977782135683582.397919982822133123583.947048300332040323585.494706160011879683587.04089579161843203588.585619424821907843590.128879289371938563591.670677614971955203593.211016631361956483594.749898568241908483596.287325655341813763597.823300122371694083599.357824199061562243600.889920975791409283602.421551884141232403603.951739089871056803605.48048482271901283607.00779131237779283608.53366078857671443610.05809548103577283611.58109761947849523613.10266943361272323614.622813153151774083616.141531007842334723617.658825227382921603619.174698041493448323620.689151679893831043622.20218837234034563623.713810348444101763625.224019838034090243626.732819070784061443628.240210276423918083629.746195684673677443631.257542033643443843632.777472824023202563634.304082210232934403635.832549471992677123637.359023067582385283638.87965145532034563640.399293050881651203641.925096569141289683643.456645916971299043644.99352500131334403646.535317729051345283648.081608007111593603649.631979742422307203651.186016841873153923652.74330321244106243654.30342276095100163655.865959394295998723657.430497019496643203658.996619543417064963660.563910872977427203662.131954915077795203663.700335576648034563665.268636764588110723666.835440839858080003668.402335516677950723669.967902706477667203671.531726316197296003673.093390252726879363674.652478422986396163676.208574733895829763677.761263092365298563679.323553688894830723680.901993030284431363682.486469497864058883684.066871472973715843685.633087336963354243687.189320310583007363688.746504107432721923690.304622848172501123691.863660653462284803693.423601643962069123694.984429940321889283696.546129663191736323698.108684933231776643699.671080631991922563701.235298837032000643702.800324961362014723704.366143125642011523705.932737450511998723707.500092056631980163709.068191064661913603710.637018595261802243712.206558769081651203713.776795706781502083715.347713529011340163716.919296356421148163718.49152830969907763720.06439350945671763721.63787607637676963723.2119601311856403724.78662979431008643726.361869186631124963727.937662428731187363729.513993641271208963731.09084694491210723732.668206460281178403734.245047944111106323735.823371946861023763737.40215453346933523738.98137982459847203740.56103194088760403742.14109500301744403743.72155313162789523745.30239044737792723746.88359107091768083748.46513912291732563750.04701872402691523751.62921399489652883753.21170905618621443754.79448802855604163756.37753503264598403757.96083418913603043759.54436961866611363761.12812544188615683762.71208577947609683764.29623475206593203765.88055648032574083767.4640225918550243769.04864210834517283770.63338675265465603772.21824064541407603773.80318790725358083775.38821265884384963776.97329902084408563778.5584311139457603780.14359305867511843781.72876897582527203783.31394298599516883784.89909920985504563786.48422176804569763788.06929478123644483789.65430237007714803791.23922865522771283792.82405775733822723794.40877379706856003795.99336089506854883797.577803172816243799.16208474852750483800.74618974528659523802.32909026307544003803.91279460048429843805.49627473024351363807.07951477301321443808.66249884945355123810.24521108022474483811.82763558596682883813.40975648734963523814.991557905011268243816.573023959621560963818.154138771841799043819.734886462321985283821.315251151712117123822.895216960672199043824.474768009862221443826.053888419932184323827.632562311542096003829.210773805341952643830.788507021991771523832.365746082141583363833.942475106461413123835.517945894051238483837.094442637881062803838.67095770774891123840.24749080167745363841.8240416177629683843.40060985387552243844.97719520822504163846.55379737878506803848.1304160636515043849.7070509607509763851.28370176813485523852.86036818393505203854.43704990612509443856.01374663275492243857.59045806186451603859.16718389147399203860.74392381963344563862.32067754438300243863.89744476375265683865.47422517578241043867.0510184785220883868.62782436996207683870.20363499278202003871.78046514825204403873.35730698676208403874.93416020634211923876.51102450504256963878.08789958088321043879.6647851319374003881.24168085615418163882.81858645166441843884.39550161646437843885.9724260486412643887.5493594461377843889.12630150701339443890.70325192937300563892.28021041121263443893.85717665056223923895.43415034547182243897.01113119397140833898.5881188941117143900.16511314389111373901.74211364139102163903.3181124109595593904.8951244944595233906.47214191997102083908.04916438552116743909.62619158916127583911.20322322891134213912.78025900282139643914.35729860892147483915.93434174525157223917.51138810985164963919.08843740074171043920.66548931598175043922.2425435536173763923.81959981163164643925.3966577881147973926.97371718107131373928.55077768856120263930.12783900862118213931.70490083927118413933.28196287856114903934.85902482452108333936.43507866832103523938.0121395222798793939.58919937721102363941.16625793116106083942.74331488216112923944.32036992825119223945.89742276746118203947.47447309783110863949.05152061741116413950.62856502422120863952.2056060163120503953.78264329169118813955.35967654843117863956.93670548455117783958.51372979809115113960.09074918709109483961.66776334958101203963.2447719836193893964.8217747872184633966.3987714584175983967.9757616952572353969.5527451957776703971.12871400763110433972.70568313441145383974.28264461918170163975.85959815996182323977.4365434548188323979.01348020174186323980.59040809881172403982.16732684405150803983.74423613549133943985.32113567117124353986.89802514914116613988.47490426742111743990.05177272406138823991.62863021708162243993.20547644454179283994.78231110446196403996.35913389488210563997.93594451384218803999.51274265937219604001.08952802952216964002.66630032231208244004.24205172645194964005.8187969675183444007.3955282255178804008.97224519849174804010.5489475845164964012.12563508159152354013.70230738777142784015.27896420109135484016.85560521959127114018.4322301413124214020.00883866426152274021.58543048651190564023.16200530608230004024.73856282101272724026.31510272934322884027.8916247291375844029.46812851834422404031.04461379508449044032.62108025737454244034.19752760324440164035.77395553073417444037.35036373788387924038.92574465238352404040.50211252604355524042.07845977366409204043.65478609327457844045.23109118292488724046.80737474064502404048.38363646447494564049.95987605244461524051.5360932026518404053.11228761297560724054.68845399697582564056.26458848254577844057.84069288953533844059.4167690378459204060.99281874721376164062.56884383761304484064.14484612887255444065.72082744082225524067.29678959334202964068.87273440628179364070.44866369949161454072.02357232199151394073.59947604232143114075.17536970134131654076.75125511888123384078.32713411482119964079.903008509119454081.47888012129117964083.05475077153117754084.63062227959119234086.20649646532121584087.78237514858121684089.35826014922121904090.93415328709123004092.51005638207126794094.08597125399144154095.66189972272175764097.23784360811211124098.81380473002245684100.38978490831269524101.96578596283272084103.54180971343261204105.11785797998248884106.6929254971234644108.26902823653208404109.84516095031169364111.42132545829298804112.99752358033623604114.573757136291146884116.150027946011867524117.726337829372718724119.302688606213646084120.879082096394598404122.455520119775431044124.03200449626043524125.608537045546367364127.185119587646448644128.761753942376289924130.338441929575901444131.91518536915276164133.491986080824426244135.068845884583426564136.645766600252458244138.222750047671685124139.798807667441141284141.37597099195774964142.9532295589509444144.53058058354321924146.10802128113198644147.68554886694125294149.2631605562382374150.8408535642557604152.4186251062740944153.9964723975529024155.5743926533421884157.1523830889218524158.7304409195316844160.3085633604417194161.8867476269218224163.4649909342119824165.0432904975821364166.621643532322294168.2000472536123124169.7784988767925224171.3569956170927254172.9355346897827514174.5131046216425544176.0917199822728394177.6703693228430684179.2490498586229114180.8277588048624694182.4064933768319344183.9852507897916204185.5640282589915334187.1428229996912724188.7216322271710914190.300453156679684191.8792830034610804193.458118982816224195.0369583099519594196.6157982001620104198.1946358687119284199.7734685308518484201.3522934018318004202.9311076969319414204.509908631428304206.0886934205139924207.6664504900648894209.2451946489856084210.8239143100861014212.4026066886463404213.9812689999164274215.5598984591665514217.1384922816464894218.7170476826262374220.2955618773557054221.874032081160324223.4524555091370694225.0308293766973294226.6091508990568474228.1741508990558124229.7391508990547424231.3041508990539294232.8691508990532464234.4341508990529734235.9991508990526204237.5641508990522964239.1291508990522144240.6941508990522214242.2581508990521124243.8231508990517874245.3881508990515944246.9531508990515934248.5181508990516044250.0831508990514174251.6481508990512644253.2131508990512294254.7781508990513074256.3431508990513034257.9081508990512474259.4731508990512324261.0381508990512254262.6031508990511734264.1681508990510664265.733150899059894267.298150899058844268.863150899058264270.428150899057654271.993150899058194273.558150899059084275.122150899059594276.687150899059334278.252150899059034279.817150899058624281.382150899057854282.947150899056924284.512150899055674286.077150899054054287.642150899053004289.207150899052934290.772150899053444292.337150899053234293.902150899053344295.467150899053434297.032150899052954298.597150899052644300.162150899052514301.727150899052304303.292150899052164304.857150899051704306.422150899051454307.987150899051454309.551150899051454311.116150899051624312.681150899051904314.246150899051734315.811150899051594317.376150899051564318.941150899051604320.506150899051664322.071150899051904323.636150899052164325.201150899052684326.766150899052984328.331150899053664329.896150899054424331.461150899054404333.026150899053104334.591150899052844336.156150899052604337.721150899052804339.286150899052954340.851150899052304342.415150899052304343.980150899052054345.545150899052034347.110150899052294348.675150899052244350.240150899052134351.805150899052424353.370150899052434354.935150899052304356.500150899052054358.065150899051884359.630150899051504361.195150899051804362.760150899052094364.325150899052184365.890150899052284367.455150899052754369.020150899053264370.585150899053364372.150150899053274373.715150899052704375.280150899052374376.844150899053174378.409150899052974379.974150899052924381.539150899052824383.104150899052654384.669150899052444386.234150899052544387.799150899052424389.364150899052454390.929150899052824392.494150899052724394.059150899052614395.624150899052674397.189150899052964398.754150899053114400.319150899053594401.884150899054974403.449150899055744405.014150899055514406.579150899054734408.144150899054054409.708150899054194411.273150899053884412.838150899053834414.403150899053944415.968150899054384417.533150899055834419.098150899057054420.663150899057364422.228150899057364423.793150899057994425.358150899058824426.923150899058654428.488150899058204430.053150899058154431.618150899059104433.183150899059594434.748150899059464436.313150899059554437.878150899059504439.443150899059824441.0081508990510304442.5731508990511274444.1371508990512184445.7021508990513054447.2671508990513634448.8321508990515324450.3971508990516944451.9621508990518844453.5271508990521564455.0921508990526564456.6571508990533284458.2221508990538274459.7871508990539694461.3521508990540554462.9171508990542624464.4821508990544944466.0471508990545014467.6121508990544044469.1771508990543164470.7421508990542904472.3071508990542324473.8721508990542154475.4371508990544434477.0011508990548384478.5661508990549204480.1311508990542944481.6961508990534374483.2611508990530964484.8261508990533124486.3911508990534264487.9561508990530854489.5211508990527504491.0861508990526964492.6511508990529204494.2161508990531194495.7811508990533224497.3461508990534634498.9111508990533134500.4761508990531844502.0411508990532174503.6061508990532404505.1711508990532884506.7361508990535824508.301150899053963Searching 2 files..
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.5[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Searching 'multiqc_WDir'[INFO   ]  custom_content : section_0: Found 2 samples (linegraph)[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #1)" name="0" time="133.34318614006042">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.9[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Report title: Title of the report[INFO   ]         multiqc : Searching   : /galaxy/server/database/jobs_directory/000/66/working/multiqc_WDir[INFO   ]        slamdunk : Found 2 reports[INFO   ]        cutadapt : Found 1 reports[WARNING]        bargraph : Tried to make bar plot, but had no data[INFO   ]         flexbar : Found 1 logs[INFO   ]     trimmomatic : Found 1 logs[INFO   ]       sortmerna : Found 1 logs[INFO   ]           fastp : Found 2 reports[INFO   ]          fastqc : Found 2 reports[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : Plots       : report_plots[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #2)" name="1" time="96.25932097434998">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.9[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Searching   : /galaxy/server/database/jobs_directory/000/81/working/multiqc_WDir[INFO   ]           macs2 : Found 2 logs[INFO   ]         bismark : Found 1 alignment reports[INFO   ]     hicexplorer : Found 3 reports[INFO   ]        kallisto : Found 2 reports[INFO   ]            star : Found 1 reports and 1 gene count files[INFO   ]          hisat2 : Found 2 reports[INFO   ]          tophat : Found 1 reports[INFO   ]         bowtie2 : Found 2 reports[INFO   ]        cutadapt : Found 4 reports[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #3)" name="2" time="48.407968044281006">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 48.407968044281006, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc", "tool_version": "1.9+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #4)" name="3" time="113.8995897769928">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "results_0|software_cond|description": "Sum of intensity (Y) of the most intense peaks at each retention time(X)",  "results_0|software_cond|input": [   {    "id": "3d5092d4d7f0549a",    "src": "hda"   },   {    "id": "665682d4d9dded71",    "src": "hda"   }  ],  "results_0|software_cond|plot_type": "linegraph",  "results_0|software_cond|section_name": "BPC",  "results_0|software_cond|software": "custom_content",  "results_0|software_cond|title": "Base peak chromatogram",  "results_0|software_cond|xlab": "Retention Time",  "results_0|software_cond|ylab": "Base Peak Intensity" }, "job": {  "command_line": "die() { echo \"$@\" 1\u003e\u00262 ; exit 1; } \u0026\u0026  mkdir multiqc_WDir \u0026\u0026   mkdir multiqc_WDir/custom_content_0 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/4/3/b/dataset_43b29100-6e60-47a0-94f8-7645b03739ce.dat\u0027 \u0027multiqc_WDir/custom_content_0/file_0_0\u0027 \u0026\u0026 more /galaxy/server/database/objects/4/3/b/dataset_43b29100-6e60-47a0-94f8-7645b03739ce.dat \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/d/8/2/dataset_d827c589-1a1f-43c8-bb27-4a51eb6af9ce.dat\u0027 \u0027multiqc_WDir/custom_content_0/file_0_1\u0027 \u0026\u0026 more /galaxy/server/database/objects/d/8/2/dataset_d827c589-1a1f-43c8-bb27-4a51eb6af9ce.dat \u0026\u0026  multiqc multiqc_WDir --filename \"report\"      --config \u0027/galaxy/server/database/jobs_directory/000/114/configs/tmpbfkajln2\u0027",  "command_version": "multiqc, version 1.9",  "create_time": "2023-02-07T21:56:55.723219",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dsp7s",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "6527899d377d7803",  "inputs": {   "results_0|input": {    "id": "3d5092d4d7f0549a",    "src": "hda",    "uuid": "43b29100-6e60-47a0-94f8-7645b03739ce"   },   "results_0|input1": {    "id": "3d5092d4d7f0549a",    "src": "hda",    "uuid": "43b29100-6e60-47a0-94f8-7645b03739ce"   },   "results_0|input2": {    "id": "665682d4d9dded71",    "src": "hda",    "uuid": "d827c589-1a1f-43c8-bb27-4a51eb6af9ce"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675807025.0000000",    "title": "Job End Time",    "value": "2023-02-07 21:57:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675807021.0000000",    "title": "Job Start Time",    "value": "2023-02-07 21:57:01"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "stats": {    "id": "7e96f08730eb75c7",    "src": "hdca"   }  },  "outputs": {   "__new_primary_file_stats|sources__": {    "id": "85838a73c6a709dc",    "src": "hda",    "uuid": "0c629608-8895-41d9-a641-b4f843684c0b"   },   "html_report": {    "id": "e94f3a96f4ede86f",    "src": "hda",    "uuid": "3b17b7b7-0c4b-463e-a9ac-ee3562112001"   }  },  "params": {   "__input_ext": "\"tabular\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "comment": "\"\"",   "dbkey": "\"?\"",   "export": "\"false\"",   "flat": "\"false\"",   "results": "[{\"__index__\": 0, \"software_cond\": {\"__current_case__\": 32, \"description\": \"Sum of intensity (Y) of the most intense peaks at each retention time(X)\", \"input\": {\"values\": [{\"id\": 186, \"src\": \"hda\"}, {\"id\": 187, \"src\": \"hda\"}]}, \"plot_type\": \"linegraph\", \"section_name\": \"BPC\", \"software\": \"custom_content\", \"title\": \"Base peak chromatogram\", \"xlab\": \"Retention Time\", \"ylab\": \"Base Peak Intensity\"}}]",   "saveLog": "\"false\"",   "title": "\"\""  },  "state": "ok",  "stderr": "[WARNING]         multiqc : MultiQC Version v1.14 now available!\n[INFO   ]         multiqc : This is MultiQC v1.9\n[INFO   ]         multiqc : Template    : default\n[INFO   ]         multiqc : Searching   : /galaxy/server/database/jobs_directory/000/114/working/multiqc_WDir\n[INFO   ]  custom_content : section_0: Found 2 samples (linegraph)\n[INFO   ]         multiqc : Compressing plot data\n[INFO   ]         multiqc : Report      : report.html\n[INFO   ]         multiqc : Data        : report_data\n[INFO   ]         multiqc : MultiQC complete\n",  "stdout": "::::::::::::::\n/galaxy/server/database/objects/4/3/b/dataset_43b29100-6e60-47a0-94f8-7645b03739ce.dat\n::::::::::::::\n2502.98928676082\t43888\n2504.55428676082\t43960\n2506.11928676082\t43392\n2507.68428676082\t42632\n2509.24928676082\t42200\n2510.81428676082\t42288\n2512.37928676082\t42664\n2513.94428676082\t42480\n2515.50928676082\t42320\n2517.07428676082\t42528\n2518.63928676082\t43376\n2520.20428676082\t44240\n2521.76928676082\t44696\n2523.33328676082\t44560\n2524.89828676082\t44112\n2526.46328676082\t43936\n2528.02828676082\t43736\n2529.59328676082\t42912\n2531.15828676082\t42360\n2532.72328676082\t43128\n2534.28828676082\t43880\n2535.85328676082\t44104\n2537.41828676082\t44256\n2538.98328676082\t44664\n2540.54828676082\t44600\n2542.11328676082\t44224\n2543.67828676082\t44120\n2545.24328676082\t44328\n2546.80828676082\t44536\n2548.37328676082\t44872\n2549.93828676082\t44592\n2551.50328676082\t43600\n2553.06828676082\t42872\n2554.63328676082\t43528\n2556.19728676082\t44072\n2557.76228676082\t43360\n2559.32728676082\t41632\n2560.89228676082\t40752\n2562.45728676082\t40472\n2564.02228676082\t39792\n2565.58728676082\t39096\n2567.15228676082\t39696\n2568.71728676082\t41152\n2570.28228676082\t41896\n2571.84728676082\t41568\n2573.41228676082\t41448\n2574.97728676082\t42336\n2576.54228676082\t43432\n2578.10728676082\t43720\n2579.67228676082\t43352\n2581.23728676082\t43528\n2582.80228676082\t55720\n2584.36728676082\t74184\n2585.93228676082\t91992\n2587.49728676082\t105888\n2589.06228676082\t114512\n2590.62628676082\t120272\n2592.19128676082\t123640\n2593.75628676082\t122024\n2595.32128676082\t115504\n2596.88628676082\t106736\n2598.45128676082\t97864\n2600.01628676082\t87640\n2601.58128676082\t77312\n2603.14628676082\t67952\n2604.71128676082\t59464\n2606.27628676082\t50624\n2607.84128676082\t43672\n2609.40628676082\t43920\n2610.97128676082\t43880\n2612.53628676082\t44024\n2614.10128676082\t44192\n2615.66628676082\t44352\n2617.23128676082\t44048\n2618.79628676082\t43312\n2620.4002803902\t42128\n2622.00450588418\t41032\n2623.60789985113\t40696\n2625.2124745374\t41264\n2626.81716666296\t42000\n2628.42193807791\t42792\n2630.02675063237\t43880\n2631.63156617644\t45064\n2633.23634656023\t45872\n2634.84105363384\t45696\n2636.44564924738\t44992\n2638.05009525096\t43776\n2639.65435349467\t42608\n2641.25838582864\t41656\n2642.86215410296\t41328\n2644.46562016774\t41360\n2646.06874587309\t41520\n2647.67149306911\t49200\n2649.2738236059\t82296\n2650.87569933359\t127032\n2652.47708210226\t178368\n2654.07793376204\t231808\n2655.67821616301\t285120\n2657.2778911553\t334464\n2658.87589905919\t369856\n2660.47424523347\t387136\n2662.07186957376\t393344\n2663.66930678668\t395904\n2665.26703198027\t395456\n2666.86491760675\t391936\n2668.46283611837\t396608\n2670.06065996733\t419008\n2671.65826160588\t465280\n2673.25551348623\t526336\n2674.85228806062\t586624\n2676.44845778127\t625472\n2678.04389510041\t642304\n2679.63847247027\t651392\n2681.23206234307\t664256\n2682.82633158321\t672064\n2684.41623929172\t664448\n2686.00135805823\t642048\n2687.58194841108\t611776\n2689.1582708786\t577216\n2690.73058598911\t537408\n2692.29815313176\t489984\n2693.86323725773\t437248\n2695.42509544522\t385536\n2696.98398822256\t336256\n2698.54017611806\t287104\n2700.09391966008\t240512\n2701.64547937692\t201024\n2703.19511579694\t166656\n2704.74308944844\t137088\n2706.28966085977\t117720\n2707.83509055926\t98584\n2709.37963907523\t81576\n2710.92356693602\t66760\n2712.46713466996\t53440\n2714.01060280537\t41984\n2715.55423187058\t37808\n2717.09813305014\t37464\n2718.64227188502\t37832\n2720.18669043818\t38328\n2721.73143077261\t38720\n2723.27653495129\t38992\n2724.82204503719\t39120\n2726.36701510869\t38968\n2727.91346287142\t38728\n2729.46044270343\t38912\n2731.00799666769\t38984\n2732.55616682718\t38640\n2734.10499524488\t37584\n2735.65452398377\t36608\n2737.20479510683\t36312\n2738.75585067703\t36920\n2740.30773275734\t37592\n2741.86048341076\t52864\n2743.41414470024\t76280\n2744.96875868878\t101448\n2746.52436743935\t125712\n2748.08101301492\t147648\n2749.63873747848\t164544\n2751.19758289299\t174080\n2752.75759132145\t176512\n2754.31880482682\t173248\n2755.88126547208\t164800\n2757.44501532022\t152128\n2759.00909594836\t137152\n2760.57554950021\t121488\n2762.14341841699\t106160\n2763.71274476166\t91640\n2765.28357059722\t78056\n2766.85593798664\t66968\n2768.42988899288\t63072\n2770.00546567894\t72680\n2771.58271010779\t100080\n2773.16166434241\t150464\n2774.74237044577\t227328\n2776.32487048085\t325760\n2777.90920651063\t435520\n2779.49542059808\t542464\n2781.08355480619\t636544\n2782.67365119793\t708160\n2784.26575183628\t758912\n2785.86223081059\t790208\n2787.4613789788\t805248\n2789.06120506784\t797184\n2790.65654763967\t762112\n2792.24788678458\t708992\n2793.83543262583\t643776\n2795.42243917229\t574400\n2797.00911516256\t502464\n2798.59668514771\t435904\n2800.18637367879\t370048\n2801.7784139276\t304256\n2803.37212118778\t240064\n2804.96734319314\t187072\n2806.5639276775\t145344\n2808.16172237469\t112592\n2809.76057501852\t86312\n2811.36033334282\t66688\n2812.9608450814\t52600\n2814.56195796808\t42264\n2816.16351973668\t39056\n2817.76537812102\t38920\n2819.36738085492\t38912\n2820.9693756722\t38328\n2822.57121030668\t37568\n2824.17273249218\t37104\n2825.77378996252\t37384\n2827.37320803523\t38432\n2828.97287981685\t40584\n2830.57163018206\t41920\n2832.16930686469\t41336\n2833.76575759855\t39200\n2835.36083011745\t37400\n2836.95437215523\t36560\n2838.54623144569\t36560\n2840.13625572267\t36728\n2841.72429271997\t36808\n2843.31019017143\t37216\n2844.89379581084\t38176\n2846.47495737205\t38736\n2848.05352258887\t38416\n2849.62933919511\t37984\n2851.20225492459\t38320\n2852.77211751114\t38648\n2854.33877468858\t38264\n2855.90207419072\t37912\n2857.46186375138\t38344\n2859.01799110439\t39064\n2860.57030398356\t39320\n2862.11766206308\t38864\n2863.66189187661\t38520\n2865.20185051505\t38256\n2866.73738571223\t37088\n2868.26834520196\t35312\n2869.79948751649\t33456\n2871.33550080546\t32488\n2872.87612722882\t32200\n2874.4211089465\t32296\n2875.97018811845\t32960\n2877.5231069046\t34224\n2879.07960746489\t35032\n2880.63943195926\t34776\n2882.20232254765\t33912\n2883.76802139\t33504\n2885.33627064625\t33768\n2886.90681247633\t34072\n2888.47938904019\t34768\n2890.05374249777\t35248\n2891.62961500899\t35248\n2893.20674873382\t34608\n2894.78387717236\t34144\n2896.36275941013\t34216\n2897.94212950607\t34888\n2899.5217296201\t35360\n2901.10130191218\t35368\n2902.68058854224\t34928\n2904.25933167022\t34920\n2905.83727345606\t35632\n2907.4141560597\t36880\n2908.98972164108\t37160\n2910.56371236013\t35752\n2912.1358703768\t33936\n2913.70593785103\t33272\n2915.27239902125\t36680\n2916.83419636666\t47800\n2918.39175940831\t59184\n2919.94551766722\t70248\n2921.49590066445\t80216\n2923.04333792104\t88104\n2924.58825895802\t92568\n2926.13109329645\t94576\n2927.67227045736\t94384\n2929.21123626907\t91672\n2930.75038801093\t85328\n2932.28917086394\t77064\n2933.82801434915\t68696\n2935.36734798761\t60960\n2936.90760130035\t53184\n2938.44920380841\t45536\n2939.99258503284\t38808\n2941.53817449469\t33040\n2943.08640171498\t34376\n2944.63769621478\t34840\n2946.19064610336\t34136\n2947.74354970432\t33256\n2949.29640186015\t33176\n2950.84919741336\t33728\n2952.40193120644\t34656\n2953.95459808188\t35000\n2955.5071928822\t34600\n2957.05971044989\t33424\n2958.61214562743\t32472\n2960.16449325734\t32032\n2961.71575635663\t32816\n2963.26791348294\t33432\n2964.8199675924\t33072\n2966.37191352751\t31704\n2967.92374613077\t30808\n2969.47546024467\t31664\n2971.02705071172\t33248\n2972.57851237441\t34000\n2974.12984007525\t33552\n2975.68102865672\t32936\n2977.23207296132\t32624\n2978.78296783157\t32512\n2980.33370810994\t32944\n2981.88428863895\t33872\n2983.43470426108\t34408\n2984.98494981884\t33704\n2986.53502015473\t33592\n2988.08491011124\t35232\n2989.63461453087\t37120\n2991.18412825612\t36560\n2992.73344612949\t34832\n2994.28256299347\t33936\n2995.83048403819\t34376\n2997.37918354758\t34944\n2998.92766657837\t35640\n3000.47592797306\t35864\n3002.02396257416\t35288\n3003.57176522416\t34392\n3005.11933076555\t37728\n3006.66665404083\t40760\n3008.21372989252\t41048\n3009.76045391304\t38448\n3011.30673336694\t34768\n3012.85258060488\t35480\n3014.39800797751\t35688\n3015.94302783547\t35512\n3017.48765252941\t35416\n3019.03189440998\t35648\n3020.57576582784\t36464\n3022.11927913362\t37696\n3023.66244667799\t38768\n3025.20528081158\t38816\n3026.74779388504\t38280\n3028.28901291088\t37712\n3029.83092110147\t37864\n3031.372545276\t37632\n3032.9138977851\t36304\n3034.45499097944\t35544\n3035.99583720966\t35224\n3037.53644882641\t35584\n3039.07683818033\t35736\n3040.61701762208\t35712\n3042.15699950231\t35144\n3043.69679617167\t34992\n3045.23641998079\t34944\n3046.77588328035\t34424\n3048.31519842097\t33216\n3049.85437775332\t40400\n3051.39343362804\t47376\n3052.93237839577\t52136\n3054.47122440718\t54480\n3056.0099840129\t54440\n3057.5486695636\t52288\n3059.08729340991\t66408\n3060.62586790248\t78056\n3062.16342231011\t87352\n3063.70193515897\t93968\n3065.24043569815\t96216\n3066.7789362783\t93320\n3068.31753117451\t88592\n3069.85631402629\t84080\n3071.39529623095\t79696\n3072.93448918581\t74240\n3074.47390428815\t69120\n3076.0135529353\t65328\n3077.55344652456\t62992\n3079.09359645324\t60928\n3080.63401411864\t58144\n3082.17471091808\t54504\n3083.71569824885\t50440\n3085.25698750826\t46176\n3086.79859009363\t42256\n3088.34051740225\t38840\n3089.88278083144\t39592\n3091.4253917785\t39280\n3092.96836164074\t37320\n3094.51071553496\t35776\n3096.05443717193\t35392\n3097.59855190873\t35960\n3099.14307114265\t36608\n3100.68800627101\t37296\n3102.2333686911\t37688\n3103.77916980023\t37680\n3105.32542099572\t37272\n3106.87213367487\t36240\n3108.41931923499\t35056\n3109.96698907338\t34264\n3111.51515458735\t34984\n3113.0638271742\t35824\n3114.61301823126\t37192\n3116.16273915581\t38016\n3117.71300134517\t38232\n3119.26381619664\t37760\n3120.81519510754\t37376\n3122.36714947517\t36920\n3123.91969069683\t36304\n3125.47283016984\t36120\n3127.02558628348\t37024\n3128.57995605062\t37752\n3130.13495825374\t37440\n3131.69060429015\t36904\n3133.24690555716\t36944\n3134.80387345206\t37064\n3136.36151937218\t36872\n3137.91985471481\t36424\n3139.47889087727\t35744\n3141.03863925685\t35016\n3142.59911125088\t66240\n3144.16031825664\t128352\n3145.72227167146\t224384\n3147.28498289264\t350528\n3148.84846331748\t489792\n3150.41272434329\t620352\n3151.97777736738\t716608\n3153.54363378706\t764800\n3155.11030499963\t765440\n3156.6778024024\t738432\n3158.24545876284\t702080\n3159.81262393884\t663424\n3161.37833400712\t633472\n3162.94462816766\t659456\n3164.51054221883\t675200\n3166.07611319354\t693568\n3167.64137812471\t706240\n3169.20637404524\t696384\n3170.77113798805\t672576\n3172.33570698606\t652992\n3173.90011807216\t635392\n3175.46440827929\t604544\n3177.02861464035\t560128\n3178.59277418825\t516352\n3180.1569239559\t476864\n3181.72110097623\t434880\n3183.28534228214\t388800\n3184.84968490654\t344448\n3186.41416588236\t304768\n3187.97882224249\t268352\n3189.54369101986\t237504\n3191.10880924737\t214016\n3192.67421395795\t194880\n3194.238941608\t176448\n3195.80503014123\t161728\n3197.37151623259\t152448\n3198.938436915\t146688\n3200.50582922137\t142336\n3202.07373018462\t137792\n3203.64217683765\t133376\n3205.21120621338\t129152\n3206.78085534473\t126720\n3208.3511612646\t125816\n3209.92216100591\t125032\n3211.49389160157\t123208\n3213.06639008449\t120264\n3214.6396934876\t115040\n3216.21383884379\t108344\n3217.78886318599\t102752\n3219.3648035471\t99024\n3220.94169696004\t94816\n3222.51958045772\t89288\n3224.09849107306\t84000\n3225.67846583896\t98400\n3227.25954178835\t109664\n3228.84074458337\t115416\n3230.42413323567\t116864\n3232.00873414653\t114544\n3233.59458434886\t109096\n3235.18172087557\t99640\n3236.77018075957\t90224\n3238.36000103379\t82168\n3239.95121873112\t73104\n3241.54387088449\t98824\n3243.1379945268\t136384\n3244.73362669097\t174144\n3246.33080440992\t208000\n3247.92956471655\t233984\n3249.52994464377\t248128\n3251.13198122451\t252736\n3252.73571149168\t250432\n3254.33971258947\t244608\n3255.94260727745\t236096\n3257.54450101158\t225984\n3259.14549924782\t209408\n3260.74570744212\t191680\n3262.34420918678\t172352\n3263.94315400148\t151168\n3265.54162507473\t189760\n3267.1397278625\t266112\n3268.73756782075\t345088\n3270.33525040543\t412608\n3271.9328810725\t465856\n3273.52960680781\t507904\n3275.12473374223\t540032\n3276.71860604923\t554112\n3278.31156790231\t550144\n3279.90396347494\t535232\n3281.49564400442\t520512\n3283.08625547511\t503808\n3284.67583418109\t477440\n3286.26441641646\t435264\n3287.85203847529\t385280\n3289.43873665169\t334080\n3291.02454723973\t367872\n3292.6095065335\t507712\n3294.19365082709\t651840\n3295.77701641459\t784192\n3297.35862855858\t918272\n3298.94054605575\t1047552\n3300.52179370591\t1158656\n3302.10240780312\t1249792\n3303.68242464148\t1320448\n3305.26188051509\t1366016\n3306.84081171801\t1373184\n3308.41925454435\t1353728\n3309.99724528819\t1328640\n3311.57482024361\t1306624\n3313.1520157047\t1280512\n3314.72886796556\t1263104\n3316.30541332026\t1240064\n3317.8816880629\t1215488\n3319.45772848755\t1199104\n3321.03357088832\t1170944\n3322.60925155928\t1122816\n3324.18480679452\t1055232\n3325.76027288814\t999680\n3327.335343408\t940224\n3328.90967134892\t867264\n3330.4822269254\t772544\n3332.0549965256\t663168\n3333.626949866\t550400\n3335.19806238107\t487232\n3336.76830950528\t591872\n3338.33766667311\t682496\n3339.90610931904\t754624\n3341.47361287755\t804928\n3343.04015278311\t836608\n3344.60570447021\t866304\n3346.17024337331\t882304\n3347.7337449269\t889280\n3349.29618456545\t888256\n3350.85695421667\t866816\n3352.41554007478\t827392\n3353.97205897406\t777728\n3355.52662774881\t727040\n3357.07936323329\t678464\n3358.63038226179\t629120\n3360.1798016686\t578048\n3361.727738288\t524288\n3363.27430895426\t471040\n3364.81864344972\t416320\n3366.36283339876\t360064\n3367.90600782285\t302400\n3369.44828355629\t249152\n3370.98977743335\t295232\n3372.53060628831\t438016\n3374.07088695545\t592256\n3375.61073626906\t737408\n3377.15027106342\t858624\n3378.68960817281\t938368\n3380.22886443151\t982976\n3381.76815667381\t1015232\n3383.30760173397\t1057280\n3384.8473164463\t1095680\n3386.38741764506\t1122304\n3387.92802216455\t1128960\n3389.46924683903\t1111040\n3391.0112085028\t1058816\n3392.55402399013\t996608\n3394.09781013532\t942272\n3395.64268377263\t888640\n3397.18777341772\t820160\n3398.73517166064\t744448\n3400.28400782388\t674688\n3401.83439874172\t609600\n3403.38646124844\t543552\n3404.94031217833\t570304\n3406.49606836566\t592512\n3408.05384664472\t598912\n3409.6137638498\t595008\n3411.17593681516\t588416\n3412.7404823751\t575936\n3414.30751736389\t551360\n3415.87715861582\t520064\n3417.44952296517\t491264\n3419.02421978847\t461440\n3420.60072228854\t428224\n3422.17894303914\t393664\n3423.75879461401\t360000\n3425.34018958692\t323072\n3426.9230405316\t287616\n3428.5072600218\t258048\n3430.09276063128\t234112\n3431.67844070908\t210240\n3433.26624059939\t186688\n3434.85505938608\t166080\n3436.44480964291\t148544\n3438.03540394362\t134016\n3439.62675486196\t130328\n3441.21877497169\t139968\n3442.81137684655\t160000\n3444.40447306028\t199040\n3445.99797618665\t235008\n3447.5917987994\t270080\n3449.18585347227\t304320\n3450.78005277903\t335040\n3452.3743092934\t356352\n3453.96853558916\t371392\n3455.56264424004\t379456\n3457.15654781979\t380736\n3458.75015890217\t375360\n3460.34339006092\t368256\n3461.93615386979\t356544\n3463.52836290254\t337536\n3465.11864061023\t310784\n3466.70874766651\t280704\n3468.29771029223\t250560\n3469.88557189862\t222720\n3471.47237589688\t198272\n3473.05816569824\t176832\n3474.6429847139\t158144\n3476.22687635508\t141120\n3477.809884033\t139648\n3479.39205115886\t140672\n3480.97342114389\t139200\n3482.55403739929\t135232\n3484.13394333629\t128312\n3485.71318236608\t119408\n3487.2917978999\t109664\n3488.86983334896\t100032\n3490.44733212446\t90264\n3492.02433763762\t93024\n3493.60089329966\t98072\n3495.17704252179\t102528\n3496.75308645138\t104712\n3498.32889314628\t103496\n3499.90373818767\t166720\n3501.48020549821\t293952\n3503.05711300005\t465920\n3504.6342853155\t663424\n3506.21154706686\t849280\n3507.78872287645\t998080\n3509.36563736658\t1111040\n3510.94211515955\t1198080\n3512.51798087768\t1254400\n3514.09305914328\t1280000\n3515.66717457865\t1294848\n3517.24015180611\t1298944\n3518.81181544796\t1288192\n3520.38334302036\t1266176\n3521.95600694465\t1251840\n3523.52977420091\t1232896\n3525.10461176924\t1197568\n3526.68048662971\t1152512\n3528.25736576243\t1121792\n3529.83521614748\t1090048\n3531.41400476494\t1044096\n3532.99268892389\t986112\n3534.57325439968\t938688\n3536.15465906925\t898048\n3537.7368699127\t855616\n3539.3198539101\t804416\n3540.90357804154\t753280\n3542.48800928712\t703872\n3544.07311462692\t655168\n3545.65886104103\t604800\n3547.24521550954\t556608\n3548.83214501254\t516928\n3550.41961653011\t484608\n3552.00759704235\t454208\n3553.59605352934\t425920\n3555.18495297117\t403264\n3556.77426234792\t388224\n3558.36394863969\t376128\n3559.95397882657\t362624\n3561.54431988864\t346176\n3563.134938806\t333440\n3564.72580255872\t322624\n3566.3168781269\t311360\n3567.90711566462\t298816\n3569.49851572137\t289728\n3571.09002855495\t281600\n3572.68162114544\t269696\n3574.27326047293\t251904\n3575.8649135175\t230912\n3577.45654725925\t211968\n3579.04812867827\t214080\n3580.63962475463\t217024\n3582.23100246844\t215872\n3583.82222879977\t210304\n3585.41327072872\t203328\n3587.00409523538\t224000\n3588.59466929983\t239232\n3590.1849599\n..\n336\n3383.32875490952\t1155072\n3384.92104541292\t1177600\n3386.51298404383\t1181184\n3388.10455326274\t1186304\n3389.69573553011\t1186304\n3391.28651330641\t1169920\n3392.87686905211\t1131520\n3394.46678522768\t1079808\n3396.0562442936\t1018944\n3397.64522871033\t946624\n3399.23270608822\t868032\n3400.82068891929\t789568\n3402.4081444938\t720576\n3403.9950552722\t653376\n3405.58140371498\t586432\n3407.1671722826\t518848\n3408.75234343553\t541760\n3410.33689963425\t570432\n3411.92082333921\t587264\n3413.5040970109\t582528\n3415.08670310979\t562688\n3416.66862409634\t540288\n3418.24984243102\t515840\n3419.8303405743\t489088\n3421.41010098666\t461248\n3422.98910612857\t435008\n3424.56733846049\t405312\n3426.14478044289\t372096\n3427.72141453625\t338560\n3429.29722320104\t307968\n3430.87218889772\t278016\n3432.44528854724\t246784\n3434.01851625578\t216128\n3435.59084838883\t190848\n3437.16778794794\t172672\n3438.75373296649\t157568\n3440.34700845275\t142080\n3441.94593941496\t126936\n3443.54885086137\t129848\n3445.15406780025\t134080\n3446.75991523983\t161216\n3448.36471818838\t195968\n3449.96680165415\t226304\n3451.56449064538\t250688\n3453.15611017034\t270272\n3454.73998523726\t287424\n3456.31444085442\t305472\n3457.87780203005\t323648\n3459.42839377241\t337984\n3460.97221817713\t340672\n3462.51637297288\t328128\n3464.06082661751\t305408\n3465.60554756889\t284416\n3467.14951702351\t269312\n3468.69467784151\t254080\n3470.24001135996\t232640\n3471.78548603673\t207488\n3473.33107032966\t183360\n3474.8767326966\t159808\n3476.42244159541\t136448\n3477.96816548395\t146368\n3479.51387282006\t151104\n3481.05953206161\t150464\n3482.60511166643\t145984\n3484.15058009239\t140032\n3485.69590579734\t131584\n3487.24105723914\t123240\n3488.78600287563\t114296\n3490.33071116467\t104400\n3491.87515056411\t91784\n3493.41928953181\t91088\n3494.96309652562\t96464\n3496.50654000339\t99408\n3498.04958842297\t99352\n3499.5907337547\t123016\n3501.13294578439\t223232\n3502.67787245347\t363648\n3504.22462616196\t537408\n3505.77314021334\t725760\n3507.32334791108\t897920\n3508.87518255866\t1029952\n3510.42857745954\t1125888\n3511.98346591722\t1202688\n3513.53978123516\t1263616\n3515.09745671683\t1297920\n3516.65642566571\t1306624\n3518.21662138527\t1301504\n3519.777977179\t1301504\n3521.34042635036\t1306624\n3522.90390220282\t1306624\n3524.46833803987\t1286656\n3526.03366716498\t1249792\n3527.59982288162\t1198592\n3529.16673849327\t1139712\n3530.7343473034\t1082880\n3532.30258261548\t1048512\n3533.87037514346\t1031808\n3535.43966307609\t1011008\n3537.00937746372\t970560\n3538.57945160982\t915200\n3540.14981881787\t851584\n3541.72041239134\t788032\n3543.29116563371\t731200\n3544.86201184844\t681664\n3546.43288433903\t631744\n3548.00371640893\t583552\n3549.57444136163\t541248\n3551.1449925006\t502720\n3552.71530312931\t464832\n3554.28530655125\t431616\n3555.85493606987\t406656\n3557.42412498867\t385344\n3558.9928066111\t364416\n3560.56091424066\t345472\n3562.1283811808\t329600\n3563.69514073502\t316800\n3565.26112620677\t307136\n3566.82527108973\t300160\n3568.38922661993\t290816\n3569.95168939513\t273728\n3571.51266164505\t250496\n3573.07214559939\t226560\n3574.63014348789\t209152\n3576.18665754026\t197568\n3577.74168998622\t201216\n3579.29524305549\t207680\n3580.84731897778\t213568\n3582.39791998282\t213312\n3583.94704830033\t204032\n3585.49470616001\t187968\n3587.0408957916\t184320\n3588.58561942482\t190784\n3590.12887928937\t193856\n3591.67067761497\t195520\n3593.21101663136\t195648\n3594.74989856824\t190848\n3596.28732565534\t181376\n3597.82330012237\t169408\n3599.35782419906\t156224\n3600.88992097579\t140928\n3602.42155188414\t123240\n3603.95173908987\t105680\n3605.48048482271\t90128\n3607.00779131237\t77928\n3608.53366078857\t67144\n3610.05809548103\t57728\n3611.58109761947\t84952\n3613.1026694336\t127232\n3614.62281315315\t177408\n3616.14153100784\t233472\n3617.65882522738\t292160\n3619.17469804149\t344832\n3620.68915167989\t383104\n3622.2021883723\t403456\n3623.71381034844\t410176\n3625.22401983803\t409024\n3626.73281907078\t406144\n3628.24021027642\t391808\n3629.74619568467\t367744\n3631.25754203364\t344384\n3632.77747282402\t320256\n3634.30408221023\t293440\n3635.83254947199\t267712\n3637.35902306758\t238528\n3638.8796514553\t203456\n3640.39929305088\t165120\n3641.92509656914\t128968\n3643.45664591697\t129904\n3644.9935250013\t133440\n3646.53531772905\t134528\n3648.08160800711\t159360\n3649.63197974242\t230720\n3651.18601684187\t315392\n3652.7433032124\t410624\n3654.3034227609\t510016\n3655.86595939429\t599872\n3657.43049701949\t664320\n3658.99661954341\t706496\n3660.56391087297\t742720\n3662.13195491507\t779520\n3663.70033557664\t803456\n3665.26863676458\t811072\n3666.83544083985\t808000\n3668.40233551667\t795072\n3669.96790270647\t766720\n3671.53172631619\t729600\n3673.09339025272\t687936\n3674.65247842298\t639616\n3676.20857473389\t582976\n3677.76126309236\t529856\n3679.32355368889\t483072\n3680.90199303028\t443136\n3682.48646949786\t405888\n3684.06687147297\t371584\n3685.63308733696\t335424\n3687.18932031058\t300736\n3688.74650410743\t272192\n3690.30462284817\t250112\n3691.86366065346\t228480\n3693.42360164396\t206912\n3694.98442994032\t188928\n3696.54612966319\t173632\n3698.10868493323\t177664\n3699.67108063199\t192256\n3701.23529883703\t200064\n3702.80032496136\t201472\n3704.36614312564\t201152\n3705.93273745051\t199872\n3707.50009205663\t198016\n3709.06819106466\t191360\n3710.63701859526\t180224\n3712.20655876908\t165120\n3713.77679570678\t150208\n3715.34771352901\t134016\n3716.91929635642\t114816\n3718.49152830969\t90776\n3720.06439350945\t67176\n3721.63787607637\t67696\n3723.2119601311\t85640\n3724.7866297943\t100864\n3726.36186918663\t112496\n3727.93766242873\t118736\n3729.51399364127\t120896\n3731.0908469449\t121072\n3732.66820646028\t117840\n3734.24504794411\t110632\n3735.82337194686\t102376\n3737.40215453346\t93352\n3738.98137982459\t84720\n3740.56103194088\t76040\n3742.14109500301\t74440\n3743.72155313162\t78952\n3745.30239044737\t79272\n3746.88359107091\t76808\n3748.46513912291\t73256\n3750.04701872402\t69152\n3751.62921399489\t65288\n3753.21170905618\t62144\n3754.79448802855\t60416\n3756.37753503264\t59840\n3757.96083418913\t60304\n3759.54436961866\t61136\n3761.12812544188\t61568\n3762.71208577947\t60968\n3764.29623475206\t59320\n3765.88055648032\t57408\n3767.4640225918\t55024\n3769.04864210834\t51728\n3770.63338675265\t46560\n3772.21824064541\t40760\n3773.80318790725\t35808\n3775.38821265884\t38496\n3776.97329902084\t40856\n3778.5584311139\t45760\n3780.14359305867\t51184\n3781.72876897582\t52720\n3783.31394298599\t51688\n3784.89909920985\t50456\n3786.48422176804\t56976\n3788.06929478123\t64448\n3789.65430237007\t71480\n3791.23922865522\t77128\n3792.82405775733\t82272\n3794.40877379706\t85600\n3795.99336089506\t85488\n3797.577803172\t81624\n3799.16208474852\t75048\n3800.74618974528\t65952\n3802.32909026307\t54400\n3803.91279460048\t42984\n3805.49627473024\t35136\n3807.07951477301\t32144\n3808.66249884945\t35512\n3810.24521108022\t47448\n3811.82763558596\t68288\n3813.40975648734\t96352\n3814.99155790501\t126824\n3816.57302395962\t156096\n3818.15413877184\t179904\n3819.73488646232\t198528\n3821.31525115171\t211712\n3822.89521696067\t219904\n3824.47476800986\t222144\n3826.05388841993\t218432\n3827.63256231154\t209600\n3829.21077380534\t195264\n3830.78850702199\t177152\n3832.36574608214\t158336\n3833.94247510646\t141312\n3835.51794589405\t123848\n3837.09444263788\t106280\n3838.67095770774\t89112\n3840.24749080167\t74536\n3841.8240416177\t62968\n3843.40060985387\t55224\n3844.97719520822\t50416\n3846.55379737878\t50680\n3848.1304160636\t51504\n3849.7070509607\t50976\n3851.28370176813\t48552\n3852.86036818393\t50520\n3854.43704990612\t50944\n3856.01374663275\t49224\n3857.59045806186\t45160\n3859.16718389147\t39920\n3860.74392381963\t34456\n3862.32067754438\t30024\n3863.89744476375\t26568\n3865.47422517578\t24104\n3867.0510184785\t22088\n3868.62782436996\t20768\n3870.20363499278\t20200\n3871.78046514825\t20440\n3873.35730698676\t20840\n3874.93416020634\t21192\n3876.51102450504\t25696\n3878.08789958088\t32104\n3879.6647851319\t37400\n3881.24168085615\t41816\n3882.81858645166\t44184\n3884.39550161646\t43784\n3885.9724260486\t41264\n3887.5493594461\t37784\n3889.12630150701\t33944\n3890.70325192937\t30056\n3892.28021041121\t26344\n3893.85717665056\t22392\n3895.43415034547\t18224\n3897.01113119397\t14083\n3898.5881188941\t11714\n3900.16511314389\t11137\n3901.74211364139\t10216\n3903.31811241095\t9559\n3904.89512449445\t9523\n3906.47214191997\t10208\n3908.04916438552\t11674\n3909.62619158916\t12758\n3911.20322322891\t13421\n3912.78025900282\t13964\n3914.35729860892\t14748\n3915.93434174525\t15722\n3917.51138810985\t16496\n3919.08843740074\t17104\n3920.66548931598\t17504\n3922.2425435536\t17376\n3923.81959981163\t16464\n3925.3966577881\t14797\n3926.97371718107\t13137\n3928.55077768856\t12026\n3930.12783900862\t11821\n3931.70490083927\t11841\n3933.28196287856\t11490\n3934.85902482452\t10833\n3936.43507866832\t10352\n3938.01213952227\t9879\n3939.58919937721\t10236\n3941.16625793116\t10608\n3942.74331488216\t11292\n3944.32036992825\t11922\n3945.89742276746\t11820\n3947.47447309783\t11086\n3949.05152061741\t11641\n3950.62856502422\t12086\n3952.2056060163\t12050\n3953.78264329169\t11881\n3955.35967654843\t11786\n3956.93670548455\t11778\n3958.51372979809\t11511\n3960.09074918709\t10948\n3961.66776334958\t10120\n3963.24477198361\t9389\n3964.82177478721\t8463\n3966.39877145841\t7598\n3967.97576169525\t7235\n3969.55274519577\t7670\n3971.12871400763\t11043\n3972.70568313441\t14538\n3974.28264461918\t17016\n3975.85959815996\t18232\n3977.4365434548\t18832\n3979.01348020174\t18632\n3980.59040809881\t17240\n3982.16732684405\t15080\n3983.74423613549\t13394\n3985.32113567117\t12435\n3986.89802514914\t11661\n3988.47490426742\t11174\n3990.05177272406\t13882\n3991.62863021708\t16224\n3993.20547644454\t17928\n3994.78231110446\t19640\n3996.35913389488\t21056\n3997.93594451384\t21880\n3999.51274265937\t21960\n4001.08952802952\t21696\n4002.66630032231\t20824\n4004.24205172645\t19496\n4005.8187969675\t18344\n4007.3955282255\t17880\n4008.97224519849\t17480\n4010.5489475845\t16496\n4012.12563508159\t15235\n4013.70230738777\t14278\n4015.27896420109\t13548\n4016.85560521959\t12711\n4018.4322301413\t12421\n4020.00883866426\t15227\n4021.58543048651\t19056\n4023.16200530608\t23000\n4024.73856282101\t27272\n4026.31510272934\t32288\n4027.8916247291\t37584\n4029.46812851834\t42240\n4031.04461379508\t44904\n4032.62108025737\t45424\n4034.19752760324\t44016\n4035.77395553073\t41744\n4037.35036373788\t38792\n4038.92574465238\t35240\n4040.50211252604\t35552\n4042.07845977366\t40920\n4043.65478609327\t45784\n4045.23109118292\t48872\n4046.80737474064\t50240\n4048.38363646447\t49456\n4049.95987605244\t46152\n4051.5360932026\t51840\n4053.11228761297\t56072\n4054.68845399697\t58256\n4056.26458848254\t57784\n4057.84069288953\t53384\n4059.4167690378\t45920\n4060.99281874721\t37616\n4062.56884383761\t30448\n4064.14484612887\t25544\n4065.72082744082\t22552\n4067.29678959334\t20296\n4068.87273440628\t17936\n4070.44866369949\t16145\n4072.02357232199\t15139\n4073.59947604232\t14311\n4075.17536970134\t13165\n4076.75125511888\t12338\n4078.32713411482\t11996\n4079.903008509\t11945\n4081.47888012129\t11796\n4083.05475077153\t11775\n4084.63062227959\t11923\n4086.20649646532\t12158\n4087.78237514858\t12168\n4089.35826014922\t12190\n4090.93415328709\t12300\n4092.51005638207\t12679\n4094.08597125399\t14415\n4095.66189972272\t17576\n4097.23784360811\t21112\n4098.81380473002\t24568\n4100.38978490831\t26952\n4101.96578596283\t27208\n4103.54180971343\t26120\n4105.11785797998\t24888\n4106.6929254971\t23464\n4108.26902823653\t20840\n4109.84516095031\t16936\n4111.42132545829\t29880\n4112.99752358033\t62360\n4114.57375713629\t114688\n4116.15002794601\t186752\n4117.72633782937\t271872\n4119.30268860621\t364608\n4120.87908209639\t459840\n4122.45552011977\t543104\n4124.0320044962\t604352\n4125.60853704554\t636736\n4127.18511958764\t644864\n4128.76175394237\t628992\n4130.33844192957\t590144\n4131.9151853691\t527616\n4133.49198608082\t442624\n4135.06884588458\t342656\n4136.64576660025\t245824\n4138.22275004767\t168512\n4139.79880766744\t114128\n4141.37597099195\t77496\n4142.9532295589\t50944\n4144.53058058354\t32192\n4146.10802128113\t19864\n4147.68554886694\t12529\n4149.26316055623\t8237\n4150.84085356425\t5760\n4152.41862510627\t4094\n4153.99647239755\t2902\n4155.57439265334\t2188\n4157.15238308892\t1852\n4158.73044091953\t1684\n4160.30856336044\t1719\n4161.88674762692\t1822\n4163.46499093421\t1982\n4165.04329049758\t2136\n4166.6216435323\t2229\n4168.20004725361\t2312\n4169.77849887679\t2522\n4171.35699561709\t2725\n4172.93553468978\t2751\n4174.51310462164\t2554\n4176.09171998227\t2839\n4177.67036932284\t3068\n4179.24904985862\t2911\n4180.82775880486\t2469\n4182.40649337683\t1934\n4183.98525078979\t1620\n4185.56402825899\t1533\n4187.14282299969\t1272\n4188.72163222717\t1091\n4190.30045315667\t968\n4191.87928300346\t1080\n4193.4581189828\t1622\n4195.03695830995\t1959\n4196.61579820016\t2010\n4198.19463586871\t1928\n4199.77346853085\t1848\n4201.35229340183\t1800\n4202.93110769693\t1941\n4204.5099086314\t2830\n4206.08869342051\t3992\n4207.66645049006\t4889\n4209.24519464898\t5608\n4210.82391431008\t6101\n4212.40260668864\t6340\n4213.98126899991\t6427\n4215.55989845916\t6551\n4217.13849228164\t6489\n4218.71704768262\t6237\n4220.29556187735\t5705\n4221.8740320811\t6032\n4223.45245550913\t7069\n4225.03082937669\t7329\n4226.60915089905\t6847\n4228.17415089905\t5812\n4229.73915089905\t4742\n4231.30415089905\t3929\n4232.86915089905\t3246\n4234.43415089905\t2973\n4235.99915089905\t2620\n4237.56415089905\t2296\n4239.12915089905\t2214\n4240.69415089905\t2221\n4242.25815089905\t2112\n4243.82315089905\t1787\n4245.38815089905\t1594\n4246.95315089905\t1593\n4248.51815089905\t1604\n4250.08315089905\t1417\n4251.64815089905\t1264\n4253.21315089905\t1229\n4254.77815089905\t1307\n4256.34315089905\t1303\n4257.90815089905\t1247\n4259.47315089905\t1232\n4261.03815089905\t1225\n4262.60315089905\t1173\n4264.16815089905\t1066\n4265.73315089905\t989\n4267.29815089905\t884\n4268.86315089905\t826\n4270.42815089905\t765\n4271.99315089905\t819\n4273.55815089905\t908\n4275.12215089905\t959\n4276.68715089905\t933\n4278.25215089905\t903\n4279.81715089905\t862\n4281.38215089905\t785\n4282.94715089905\t692\n4284.51215089905\t567\n4286.07715089905\t405\n4287.64215089905\t300\n4289.20715089905\t293\n4290.77215089905\t344\n4292.33715089905\t323\n4293.90215089905\t334\n4295.46715089905\t343\n4297.03215089905\t295\n4298.59715089905\t264\n4300.16215089905\t251\n4301.72715089905\t230\n4303.29215089905\t216\n4304.85715089905\t170\n4306.42215089905\t145\n4307.98715089905\t145\n4309.55115089905\t145\n4311.11615089905\t162\n4312.68115089905\t190\n4314.24615089905\t173\n4315.81115089905\t159\n4317.37615089905\t156\n4318.94115089905\t160\n4320.50615089905\t166\n4322.07115089905\t190\n4323.63615089905\t216\n4325.20115089905\t268\n4326.76615089905\t298\n4328.33115089905\t366\n4329.89615089905\t442\n4331.46115089905\t440\n4333.02615089905\t310\n4334.59115089905\t284\n4336.15615089905\t260\n4337.72115089905\t280\n4339.28615089905\t295\n4340.85115089905\t230\n4342.41515089905\t230\n4343.98015089905\t205\n4345.54515089905\t203\n4347.11015089905\t229\n4348.67515089905\t224\n4350.24015089905\t213\n4351.80515089905\t242\n4353.37015089905\t243\n4354.93515089905\t230\n4356.50015089905\t205\n4358.06515089905\t188\n4359.63015089905\t150\n4361.19515089905\t180\n4362.76015089905\t209\n4364.32515089905\t218\n4365.89015089905\t228\n4367.45515089905\t275\n4369.02015089905\t326\n4370.58515089905\t336\n4372.15015089905\t327\n4373.71515089905\t270\n4375.28015089905\t237\n4376.84415089905\t317\n4378.40915089905\t297\n4379.97415089905\t292\n4381.53915089905\t282\n4383.10415089905\t265\n4384.66915089905\t244\n4386.23415089905\t254\n4387.79915089905\t242\n4389.36415089905\t245\n4390.92915089905\t282\n4392.49415089905\t272\n4394.05915089905\t261\n4395.62415089905\t267\n4397.18915089905\t296\n4398.75415089905\t311\n4400.31915089905\t359\n4401.88415089905\t497\n4403.44915089905\t574\n4405.01415089905\t551\n4406.57915089905\t473\n4408.14415089905\t405\n4409.70815089905\t419\n4411.27315089905\t388\n4412.83815089905\t383\n4414.40315089905\t394\n4415.96815089905\t438\n4417.53315089905\t583\n4419.09815089905\t705\n4420.66315089905\t736\n4422.22815089905\t736\n4423.79315089905\t799\n4425.35815089905\t882\n4426.92315089905\t865\n4428.48815089905\t820\n4430.05315089905\t815\n4431.61815089905\t910\n4433.18315089905\t959\n4434.74815089905\t946\n4436.31315089905\t955\n4437.87815089905\t950\n4439.44315089905\t982\n4441.00815089905\t1030\n4442.57315089905\t1127\n4444.13715089905\t1218\n4445.70215089905\t1305\n4447.26715089905\t1363\n4448.83215089905\t1532\n4450.39715089905\t1694\n4451.96215089905\t1884\n4453.52715089905\t2156\n4455.09215089905\t2656\n4456.65715089905\t3328\n4458.22215089905\t3827\n4459.78715089905\t3969\n4461.35215089905\t4055\n4462.91715089905\t4262\n4464.48215089905\t4494\n4466.04715089905\t4501\n4467.61215089905\t4404\n4469.17715089905\t4316\n4470.74215089905\t4290\n4472.30715089905\t4232\n4473.87215089905\t4215\n4475.43715089905\t4443\n4477.00115089905\t4838\n4478.56615089905\t4920\n4480.13115089905\t4294\n4481.69615089905\t3437\n4483.26115089905\t3096\n4484.82615089905\t3312\n4486.39115089905\t3426\n4487.95615089905\t3085\n4489.52115089905\t2750\n4491.08615089905\t2696\n4492.65115089905\t2920\n4494.21615089905\t3119\n4495.78115089905\t3322\n4497.34615089905\t3463\n4498.91115089905\t3313\n4500.47615089905\t3184\n4502.04115089905\t3217\n4503.60615089905\t3240\n4505.17115089905\t3288\n4506.73615089905\t3582\n4508.30115089905\t3963\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9+galaxy1",  "tool_stderr": "[WARNING]         multiqc : MultiQC Version v1.14 now available!\n[INFO   ]         multiqc : This is MultiQC v1.9\n[INFO   ]         multiqc : Template    : default\n[INFO   ]         multiqc : Searching   : /galaxy/server/database/jobs_directory/000/114/working/multiqc_WDir\n[INFO   ]  custom_content : section_0: Found 2 samples (linegraph)\n[INFO   ]         multiqc : Compressing plot data\n[INFO   ]         multiqc : Report      : report.html\n[INFO   ]         multiqc : Data        : report_data\n[INFO   ]         multiqc : MultiQC complete\n",  "tool_stdout": "::::::::::::::\n/galaxy/server/database/objects/4/3/b/dataset_43b29100-6e60-47a0-94f8-7645b03739ce.dat\n::::::::::::::\n2502.98928676082\t43888\n2504.55428676082\t43960\n2506.11928676082\t43392\n2507.68428676082\t42632\n2509.24928676082\t42200\n2510.81428676082\t42288\n2512.37928676082\t42664\n2513.94428676082\t42480\n2515.50928676082\t42320\n2517.07428676082\t42528\n2518.63928676082\t43376\n2520.20428676082\t44240\n2521.76928676082\t44696\n2523.33328676082\t44560\n2524.89828676082\t44112\n2526.46328676082\t43936\n2528.02828676082\t43736\n2529.59328676082\t42912\n2531.15828676082\t42360\n2532.72328676082\t43128\n2534.28828676082\t43880\n2535.85328676082\t44104\n2537.41828676082\t44256\n2538.98328676082\t44664\n2540.54828676082\t44600\n2542.11328676082\t44224\n2543.67828676082\t44120\n2545.24328676082\t44328\n2546.80828676082\t44536\n2548.37328676082\t44872\n2549.93828676082\t44592\n2551.50328676082\t43600\n2553.06828676082\t42872\n2554.63328676082\t43528\n2556.19728676082\t44072\n2557.76228676082\t43360\n2559.32728676082\t41632\n2560.89228676082\t40752\n2562.45728676082\t40472\n2564.02228676082\t39792\n2565.58728676082\t39096\n2567.15228676082\t39696\n2568.71728676082\t41152\n2570.28228676082\t41896\n2571.84728676082\t41568\n2573.41228676082\t41448\n2574.97728676082\t42336\n2576.54228676082\t43432\n2578.10728676082\t43720\n2579.67228676082\t43352\n2581.23728676082\t43528\n2582.80228676082\t55720\n2584.36728676082\t74184\n2585.93228676082\t91992\n2587.49728676082\t105888\n2589.06228676082\t114512\n2590.62628676082\t120272\n2592.19128676082\t123640\n2593.75628676082\t122024\n2595.32128676082\t115504\n2596.88628676082\t106736\n2598.45128676082\t97864\n2600.01628676082\t87640\n2601.58128676082\t77312\n2603.14628676082\t67952\n2604.71128676082\t59464\n2606.27628676082\t50624\n2607.84128676082\t43672\n2609.40628676082\t43920\n2610.97128676082\t43880\n2612.53628676082\t44024\n2614.10128676082\t44192\n2615.66628676082\t44352\n2617.23128676082\t44048\n2618.79628676082\t43312\n2620.4002803902\t42128\n2622.00450588418\t41032\n2623.60789985113\t40696\n2625.2124745374\t41264\n2626.81716666296\t42000\n2628.42193807791\t42792\n2630.02675063237\t43880\n2631.63156617644\t45064\n2633.23634656023\t45872\n2634.84105363384\t45696\n2636.44564924738\t44992\n2638.05009525096\t43776\n2639.65435349467\t42608\n2641.25838582864\t41656\n2642.86215410296\t41328\n2644.46562016774\t41360\n2646.06874587309\t41520\n2647.67149306911\t49200\n2649.2738236059\t82296\n2650.87569933359\t127032\n2652.47708210226\t178368\n2654.07793376204\t231808\n2655.67821616301\t285120\n2657.2778911553\t334464\n2658.87589905919\t369856\n2660.47424523347\t387136\n2662.07186957376\t393344\n2663.66930678668\t395904\n2665.26703198027\t395456\n2666.86491760675\t391936\n2668.46283611837\t396608\n2670.06065996733\t419008\n2671.65826160588\t465280\n2673.25551348623\t526336\n2674.85228806062\t586624\n2676.44845778127\t625472\n2678.04389510041\t642304\n2679.63847247027\t651392\n2681.23206234307\t664256\n2682.82633158321\t672064\n2684.41623929172\t664448\n2686.00135805823\t642048\n2687.58194841108\t611776\n2689.1582708786\t577216\n2690.73058598911\t537408\n2692.29815313176\t489984\n2693.86323725773\t437248\n2695.42509544522\t385536\n2696.98398822256\t336256\n2698.54017611806\t287104\n2700.09391966008\t240512\n2701.64547937692\t201024\n2703.19511579694\t166656\n2704.74308944844\t137088\n2706.28966085977\t117720\n2707.83509055926\t98584\n2709.37963907523\t81576\n2710.92356693602\t66760\n2712.46713466996\t53440\n2714.01060280537\t41984\n2715.55423187058\t37808\n2717.09813305014\t37464\n2718.64227188502\t37832\n2720.18669043818\t38328\n2721.73143077261\t38720\n2723.27653495129\t38992\n2724.82204503719\t39120\n2726.36701510869\t38968\n2727.91346287142\t38728\n2729.46044270343\t38912\n2731.00799666769\t38984\n2732.55616682718\t38640\n2734.10499524488\t37584\n2735.65452398377\t36608\n2737.20479510683\t36312\n2738.75585067703\t36920\n2740.30773275734\t37592\n2741.86048341076\t52864\n2743.41414470024\t76280\n2744.96875868878\t101448\n2746.52436743935\t125712\n2748.08101301492\t147648\n2749.63873747848\t164544\n2751.19758289299\t174080\n2752.75759132145\t176512\n2754.31880482682\t173248\n2755.88126547208\t164800\n2757.44501532022\t152128\n2759.00909594836\t137152\n2760.57554950021\t121488\n2762.14341841699\t106160\n2763.71274476166\t91640\n2765.28357059722\t78056\n2766.85593798664\t66968\n2768.42988899288\t63072\n2770.00546567894\t72680\n2771.58271010779\t100080\n2773.16166434241\t150464\n2774.74237044577\t227328\n2776.32487048085\t325760\n2777.90920651063\t435520\n2779.49542059808\t542464\n2781.08355480619\t636544\n2782.67365119793\t708160\n2784.26575183628\t758912\n2785.86223081059\t790208\n2787.4613789788\t805248\n2789.06120506784\t797184\n2790.65654763967\t762112\n2792.24788678458\t708992\n2793.83543262583\t643776\n2795.42243917229\t574400\n2797.00911516256\t502464\n2798.59668514771\t435904\n2800.18637367879\t370048\n2801.7784139276\t304256\n2803.37212118778\t240064\n2804.96734319314\t187072\n2806.5639276775\t145344\n2808.16172237469\t112592\n2809.76057501852\t86312\n2811.36033334282\t66688\n2812.9608450814\t52600\n2814.56195796808\t42264\n2816.16351973668\t39056\n2817.76537812102\t38920\n2819.36738085492\t38912\n2820.9693756722\t38328\n2822.57121030668\t37568\n2824.17273249218\t37104\n2825.77378996252\t37384\n2827.37320803523\t38432\n2828.97287981685\t40584\n2830.57163018206\t41920\n2832.16930686469\t41336\n2833.76575759855\t39200\n2835.36083011745\t37400\n2836.95437215523\t36560\n2838.54623144569\t36560\n2840.13625572267\t36728\n2841.72429271997\t36808\n2843.31019017143\t37216\n2844.89379581084\t38176\n2846.47495737205\t38736\n2848.05352258887\t38416\n2849.62933919511\t37984\n2851.20225492459\t38320\n2852.77211751114\t38648\n2854.33877468858\t38264\n2855.90207419072\t37912\n2857.46186375138\t38344\n2859.01799110439\t39064\n2860.57030398356\t39320\n2862.11766206308\t38864\n2863.66189187661\t38520\n2865.20185051505\t38256\n2866.73738571223\t37088\n2868.26834520196\t35312\n2869.79948751649\t33456\n2871.33550080546\t32488\n2872.87612722882\t32200\n2874.4211089465\t32296\n2875.97018811845\t32960\n2877.5231069046\t34224\n2879.07960746489\t35032\n2880.63943195926\t34776\n2882.20232254765\t33912\n2883.76802139\t33504\n2885.33627064625\t33768\n2886.90681247633\t34072\n2888.47938904019\t34768\n2890.05374249777\t35248\n2891.62961500899\t35248\n2893.20674873382\t34608\n2894.78387717236\t34144\n2896.36275941013\t34216\n2897.94212950607\t34888\n2899.5217296201\t35360\n2901.10130191218\t35368\n2902.68058854224\t34928\n2904.25933167022\t34920\n2905.83727345606\t35632\n2907.4141560597\t36880\n2908.98972164108\t37160\n2910.56371236013\t35752\n2912.1358703768\t33936\n2913.70593785103\t33272\n2915.27239902125\t36680\n2916.83419636666\t47800\n2918.39175940831\t59184\n2919.94551766722\t70248\n2921.49590066445\t80216\n2923.04333792104\t88104\n2924.58825895802\t92568\n2926.13109329645\t94576\n2927.67227045736\t94384\n2929.21123626907\t91672\n2930.75038801093\t85328\n2932.28917086394\t77064\n2933.82801434915\t68696\n2935.36734798761\t60960\n2936.90760130035\t53184\n2938.44920380841\t45536\n2939.99258503284\t38808\n2941.53817449469\t33040\n2943.08640171498\t34376\n2944.63769621478\t34840\n2946.19064610336\t34136\n2947.74354970432\t33256\n2949.29640186015\t33176\n2950.84919741336\t33728\n2952.40193120644\t34656\n2953.95459808188\t35000\n2955.5071928822\t34600\n2957.05971044989\t33424\n2958.61214562743\t32472\n2960.16449325734\t32032\n2961.71575635663\t32816\n2963.26791348294\t33432\n2964.8199675924\t33072\n2966.37191352751\t31704\n2967.92374613077\t30808\n2969.47546024467\t31664\n2971.02705071172\t33248\n2972.57851237441\t34000\n2974.12984007525\t33552\n2975.68102865672\t32936\n2977.23207296132\t32624\n2978.78296783157\t32512\n2980.33370810994\t32944\n2981.88428863895\t33872\n2983.43470426108\t34408\n2984.98494981884\t33704\n2986.53502015473\t33592\n2988.08491011124\t35232\n2989.63461453087\t37120\n2991.18412825612\t36560\n2992.73344612949\t34832\n2994.28256299347\t33936\n2995.83048403819\t34376\n2997.37918354758\t34944\n2998.92766657837\t35640\n3000.47592797306\t35864\n3002.02396257416\t35288\n3003.57176522416\t34392\n3005.11933076555\t37728\n3006.66665404083\t40760\n3008.21372989252\t41048\n3009.76045391304\t38448\n3011.30673336694\t34768\n3012.85258060488\t35480\n3014.39800797751\t35688\n3015.94302783547\t35512\n3017.48765252941\t35416\n3019.03189440998\t35648\n3020.57576582784\t36464\n3022.11927913362\t37696\n3023.66244667799\t38768\n3025.20528081158\t38816\n3026.74779388504\t38280\n3028.28901291088\t37712\n3029.83092110147\t37864\n3031.372545276\t37632\n3032.9138977851\t36304\n3034.45499097944\t35544\n3035.99583720966\t35224\n3037.53644882641\t35584\n3039.07683818033\t35736\n3040.61701762208\t35712\n3042.15699950231\t35144\n3043.69679617167\t34992\n3045.23641998079\t34944\n3046.77588328035\t34424\n3048.31519842097\t33216\n3049.85437775332\t40400\n3051.39343362804\t47376\n3052.93237839577\t52136\n3054.47122440718\t54480\n3056.0099840129\t54440\n3057.5486695636\t52288\n3059.08729340991\t66408\n3060.62586790248\t78056\n3062.16342231011\t87352\n3063.70193515897\t93968\n3065.24043569815\t96216\n3066.7789362783\t93320\n3068.31753117451\t88592\n3069.85631402629\t84080\n3071.39529623095\t79696\n3072.93448918581\t74240\n3074.47390428815\t69120\n3076.0135529353\t65328\n3077.55344652456\t62992\n3079.09359645324\t60928\n3080.63401411864\t58144\n3082.17471091808\t54504\n3083.71569824885\t50440\n3085.25698750826\t46176\n3086.79859009363\t42256\n3088.34051740225\t38840\n3089.88278083144\t39592\n3091.4253917785\t39280\n3092.96836164074\t37320\n3094.51071553496\t35776\n3096.05443717193\t35392\n3097.59855190873\t35960\n3099.14307114265\t36608\n3100.68800627101\t37296\n3102.2333686911\t37688\n3103.77916980023\t37680\n3105.32542099572\t37272\n3106.87213367487\t36240\n3108.41931923499\t35056\n3109.96698907338\t34264\n3111.51515458735\t34984\n3113.0638271742\t35824\n3114.61301823126\t37192\n3116.16273915581\t38016\n3117.71300134517\t38232\n3119.26381619664\t37760\n3120.81519510754\t37376\n3122.36714947517\t36920\n3123.91969069683\t36304\n3125.47283016984\t36120\n3127.02558628348\t37024\n3128.57995605062\t37752\n3130.13495825374\t37440\n3131.69060429015\t36904\n3133.24690555716\t36944\n3134.80387345206\t37064\n3136.36151937218\t36872\n3137.91985471481\t36424\n3139.47889087727\t35744\n3141.03863925685\t35016\n3142.59911125088\t66240\n3144.16031825664\t128352\n3145.72227167146\t224384\n3147.28498289264\t350528\n3148.84846331748\t489792\n3150.41272434329\t620352\n3151.97777736738\t716608\n3153.54363378706\t764800\n3155.11030499963\t765440\n3156.6778024024\t738432\n3158.24545876284\t702080\n3159.81262393884\t663424\n3161.37833400712\t633472\n3162.94462816766\t659456\n3164.51054221883\t675200\n3166.07611319354\t693568\n3167.64137812471\t706240\n3169.20637404524\t696384\n3170.77113798805\t672576\n3172.33570698606\t652992\n3173.90011807216\t635392\n3175.46440827929\t604544\n3177.02861464035\t560128\n3178.59277418825\t516352\n3180.1569239559\t476864\n3181.72110097623\t434880\n3183.28534228214\t388800\n3184.84968490654\t344448\n3186.41416588236\t304768\n3187.97882224249\t268352\n3189.54369101986\t237504\n3191.10880924737\t214016\n3192.67421395795\t194880\n3194.238941608\t176448\n3195.80503014123\t161728\n3197.37151623259\t152448\n3198.938436915\t146688\n3200.50582922137\t142336\n3202.07373018462\t137792\n3203.64217683765\t133376\n3205.21120621338\t129152\n3206.78085534473\t126720\n3208.3511612646\t125816\n3209.92216100591\t125032\n3211.49389160157\t123208\n3213.06639008449\t120264\n3214.6396934876\t115040\n3216.21383884379\t108344\n3217.78886318599\t102752\n3219.3648035471\t99024\n3220.94169696004\t94816\n3222.51958045772\t89288\n3224.09849107306\t84000\n3225.67846583896\t98400\n3227.25954178835\t109664\n3228.84074458337\t115416\n3230.42413323567\t116864\n3232.00873414653\t114544\n3233.59458434886\t109096\n3235.18172087557\t99640\n3236.77018075957\t90224\n3238.36000103379\t82168\n3239.95121873112\t73104\n3241.54387088449\t98824\n3243.1379945268\t136384\n3244.73362669097\t174144\n3246.33080440992\t208000\n3247.92956471655\t233984\n3249.52994464377\t248128\n3251.13198122451\t252736\n3252.73571149168\t250432\n3254.33971258947\t244608\n3255.94260727745\t236096\n3257.54450101158\t225984\n3259.14549924782\t209408\n3260.74570744212\t191680\n3262.34420918678\t172352\n3263.94315400148\t151168\n3265.54162507473\t189760\n3267.1397278625\t266112\n3268.73756782075\t345088\n3270.33525040543\t412608\n3271.9328810725\t465856\n3273.52960680781\t507904\n3275.12473374223\t540032\n3276.71860604923\t554112\n3278.31156790231\t550144\n3279.90396347494\t535232\n3281.49564400442\t520512\n3283.08625547511\t503808\n3284.67583418109\t477440\n3286.26441641646\t435264\n3287.85203847529\t385280\n3289.43873665169\t334080\n3291.02454723973\t367872\n3292.6095065335\t507712\n3294.19365082709\t651840\n3295.77701641459\t784192\n3297.35862855858\t918272\n3298.94054605575\t1047552\n3300.52179370591\t1158656\n3302.10240780312\t1249792\n3303.68242464148\t1320448\n3305.26188051509\t1366016\n3306.84081171801\t1373184\n3308.41925454435\t1353728\n3309.99724528819\t1328640\n3311.57482024361\t1306624\n3313.1520157047\t1280512\n3314.72886796556\t1263104\n3316.30541332026\t1240064\n3317.8816880629\t1215488\n3319.45772848755\t1199104\n3321.03357088832\t1170944\n3322.60925155928\t1122816\n3324.18480679452\t1055232\n3325.76027288814\t999680\n3327.335343408\t940224\n3328.90967134892\t867264\n3330.4822269254\t772544\n3332.0549965256\t663168\n3333.626949866\t550400\n3335.19806238107\t487232\n3336.76830950528\t591872\n3338.33766667311\t682496\n3339.90610931904\t754624\n3341.47361287755\t804928\n3343.04015278311\t836608\n3344.60570447021\t866304\n3346.17024337331\t882304\n3347.7337449269\t889280\n3349.29618456545\t888256\n3350.85695421667\t866816\n3352.41554007478\t827392\n3353.97205897406\t777728\n3355.52662774881\t727040\n3357.07936323329\t678464\n3358.63038226179\t629120\n3360.1798016686\t578048\n3361.727738288\t524288\n3363.27430895426\t471040\n3364.81864344972\t416320\n3366.36283339876\t360064\n3367.90600782285\t302400\n3369.44828355629\t249152\n3370.98977743335\t295232\n3372.53060628831\t438016\n3374.07088695545\t592256\n3375.61073626906\t737408\n3377.15027106342\t858624\n3378.68960817281\t938368\n3380.22886443151\t982976\n3381.76815667381\t1015232\n3383.30760173397\t1057280\n3384.8473164463\t1095680\n3386.38741764506\t1122304\n3387.92802216455\t1128960\n3389.46924683903\t1111040\n3391.0112085028\t1058816\n3392.55402399013\t996608\n3394.09781013532\t942272\n3395.64268377263\t888640\n3397.18777341772\t820160\n3398.73517166064\t744448\n3400.28400782388\t674688\n3401.83439874172\t609600\n3403.38646124844\t543552\n3404.94031217833\t570304\n3406.49606836566\t592512\n3408.05384664472\t598912\n3409.6137638498\t595008\n3411.17593681516\t588416\n3412.7404823751\t575936\n3414.30751736389\t551360\n3415.87715861582\t520064\n3417.44952296517\t491264\n3419.02421978847\t461440\n3420.60072228854\t428224\n3422.17894303914\t393664\n3423.75879461401\t360000\n3425.34018958692\t323072\n3426.9230405316\t287616\n3428.5072600218\t258048\n3430.09276063128\t234112\n3431.67844070908\t210240\n3433.26624059939\t186688\n3434.85505938608\t166080\n3436.44480964291\t148544\n3438.03540394362\t134016\n3439.62675486196\t130328\n3441.21877497169\t139968\n3442.81137684655\t160000\n3444.40447306028\t199040\n3445.99797618665\t235008\n3447.5917987994\t270080\n3449.18585347227\t304320\n3450.78005277903\t335040\n3452.3743092934\t356352\n3453.96853558916\t371392\n3455.56264424004\t379456\n3457.15654781979\t380736\n3458.75015890217\t375360\n3460.34339006092\t368256\n3461.93615386979\t356544\n3463.52836290254\t337536\n3465.11864061023\t310784\n3466.70874766651\t280704\n3468.29771029223\t250560\n3469.88557189862\t222720\n3471.47237589688\t198272\n3473.05816569824\t176832\n3474.6429847139\t158144\n3476.22687635508\t141120\n3477.809884033\t139648\n3479.39205115886\t140672\n3480.97342114389\t139200\n3482.55403739929\t135232\n3484.13394333629\t128312\n3485.71318236608\t119408\n3487.2917978999\t109664\n3488.86983334896\t100032\n3490.44733212446\t90264\n3492.02433763762\t93024\n3493.60089329966\t98072\n3495.17704252179\t102528\n3496.75308645138\t104712\n3498.32889314628\t103496\n3499.90373818767\t166720\n3501.48020549821\t293952\n3503.05711300005\t465920\n3504.6342853155\t663424\n3506.21154706686\t849280\n3507.78872287645\t998080\n3509.36563736658\t1111040\n3510.94211515955\t1198080\n3512.51798087768\t1254400\n3514.09305914328\t1280000\n3515.66717457865\t1294848\n3517.24015180611\t1298944\n3518.81181544796\t1288192\n3520.38334302036\t1266176\n3521.95600694465\t1251840\n3523.52977420091\t1232896\n3525.10461176924\t1197568\n3526.68048662971\t1152512\n3528.25736576243\t1121792\n3529.83521614748\t1090048\n3531.41400476494\t1044096\n3532.99268892389\t986112\n3534.57325439968\t938688\n3536.15465906925\t898048\n3537.7368699127\t855616\n3539.3198539101\t804416\n3540.90357804154\t753280\n3542.48800928712\t703872\n3544.07311462692\t655168\n3545.65886104103\t604800\n3547.24521550954\t556608\n3548.83214501254\t516928\n3550.41961653011\t484608\n3552.00759704235\t454208\n3553.59605352934\t425920\n3555.18495297117\t403264\n3556.77426234792\t388224\n3558.36394863969\t376128\n3559.95397882657\t362624\n3561.54431988864\t346176\n3563.134938806\t333440\n3564.72580255872\t322624\n3566.3168781269\t311360\n3567.90711566462\t298816\n3569.49851572137\t289728\n3571.09002855495\t281600\n3572.68162114544\t269696\n3574.27326047293\t251904\n3575.8649135175\t230912\n3577.45654725925\t211968\n3579.04812867827\t214080\n3580.63962475463\t217024\n3582.23100246844\t215872\n3583.82222879977\t210304\n3585.41327072872\t203328\n3587.00409523538\t224000\n3588.59466929983\t239232\n3590.1849599\n..\n336\n3383.32875490952\t1155072\n3384.92104541292\t1177600\n3386.51298404383\t1181184\n3388.10455326274\t1186304\n3389.69573553011\t1186304\n3391.28651330641\t1169920\n3392.87686905211\t1131520\n3394.46678522768\t1079808\n3396.0562442936\t1018944\n3397.64522871033\t946624\n3399.23270608822\t868032\n3400.82068891929\t789568\n3402.4081444938\t720576\n3403.9950552722\t653376\n3405.58140371498\t586432\n3407.1671722826\t518848\n3408.75234343553\t541760\n3410.33689963425\t570432\n3411.92082333921\t587264\n3413.5040970109\t582528\n3415.08670310979\t562688\n3416.66862409634\t540288\n3418.24984243102\t515840\n3419.8303405743\t489088\n3421.41010098666\t461248\n3422.98910612857\t435008\n3424.56733846049\t405312\n3426.14478044289\t372096\n3427.72141453625\t338560\n3429.29722320104\t307968\n3430.87218889772\t278016\n3432.44528854724\t246784\n3434.01851625578\t216128\n3435.59084838883\t190848\n3437.16778794794\t172672\n3438.75373296649\t157568\n3440.34700845275\t142080\n3441.94593941496\t126936\n3443.54885086137\t129848\n3445.15406780025\t134080\n3446.75991523983\t161216\n3448.36471818838\t195968\n3449.96680165415\t226304\n3451.56449064538\t250688\n3453.15611017034\t270272\n3454.73998523726\t287424\n3456.31444085442\t305472\n3457.87780203005\t323648\n3459.42839377241\t337984\n3460.97221817713\t340672\n3462.51637297288\t328128\n3464.06082661751\t305408\n3465.60554756889\t284416\n3467.14951702351\t269312\n3468.69467784151\t254080\n3470.24001135996\t232640\n3471.78548603673\t207488\n3473.33107032966\t183360\n3474.8767326966\t159808\n3476.42244159541\t136448\n3477.96816548395\t146368\n3479.51387282006\t151104\n3481.05953206161\t150464\n3482.60511166643\t145984\n3484.15058009239\t140032\n3485.69590579734\t131584\n3487.24105723914\t123240\n3488.78600287563\t114296\n3490.33071116467\t104400\n3491.87515056411\t91784\n3493.41928953181\t91088\n3494.96309652562\t96464\n3496.50654000339\t99408\n3498.04958842297\t99352\n3499.5907337547\t123016\n3501.13294578439\t223232\n3502.67787245347\t363648\n3504.22462616196\t537408\n3505.77314021334\t725760\n3507.32334791108\t897920\n3508.87518255866\t1029952\n3510.42857745954\t1125888\n3511.98346591722\t1202688\n3513.53978123516\t1263616\n3515.09745671683\t1297920\n3516.65642566571\t1306624\n3518.21662138527\t1301504\n3519.777977179\t1301504\n3521.34042635036\t1306624\n3522.90390220282\t1306624\n3524.46833803987\t1286656\n3526.03366716498\t1249792\n3527.59982288162\t1198592\n3529.16673849327\t1139712\n3530.7343473034\t1082880\n3532.30258261548\t1048512\n3533.87037514346\t1031808\n3535.43966307609\t1011008\n3537.00937746372\t970560\n3538.57945160982\t915200\n3540.14981881787\t851584\n3541.72041239134\t788032\n3543.29116563371\t731200\n3544.86201184844\t681664\n3546.43288433903\t631744\n3548.00371640893\t583552\n3549.57444136163\t541248\n3551.1449925006\t502720\n3552.71530312931\t464832\n3554.28530655125\t431616\n3555.85493606987\t406656\n3557.42412498867\t385344\n3558.9928066111\t364416\n3560.56091424066\t345472\n3562.1283811808\t329600\n3563.69514073502\t316800\n3565.26112620677\t307136\n3566.82527108973\t300160\n3568.38922661993\t290816\n3569.95168939513\t273728\n3571.51266164505\t250496\n3573.07214559939\t226560\n3574.63014348789\t209152\n3576.18665754026\t197568\n3577.74168998622\t201216\n3579.29524305549\t207680\n3580.84731897778\t213568\n3582.39791998282\t213312\n3583.94704830033\t204032\n3585.49470616001\t187968\n3587.0408957916\t184320\n3588.58561942482\t190784\n3590.12887928937\t193856\n3591.67067761497\t195520\n3593.21101663136\t195648\n3594.74989856824\t190848\n3596.28732565534\t181376\n3597.82330012237\t169408\n3599.35782419906\t156224\n3600.88992097579\t140928\n3602.42155188414\t123240\n3603.95173908987\t105680\n3605.48048482271\t90128\n3607.00779131237\t77928\n3608.53366078857\t67144\n3610.05809548103\t57728\n3611.58109761947\t84952\n3613.1026694336\t127232\n3614.62281315315\t177408\n3616.14153100784\t233472\n3617.65882522738\t292160\n3619.17469804149\t344832\n3620.68915167989\t383104\n3622.2021883723\t403456\n3623.71381034844\t410176\n3625.22401983803\t409024\n3626.73281907078\t406144\n3628.24021027642\t391808\n3629.74619568467\t367744\n3631.25754203364\t344384\n3632.77747282402\t320256\n3634.30408221023\t293440\n3635.83254947199\t267712\n3637.35902306758\t238528\n3638.8796514553\t203456\n3640.39929305088\t165120\n3641.92509656914\t128968\n3643.45664591697\t129904\n3644.9935250013\t133440\n3646.53531772905\t134528\n3648.08160800711\t159360\n3649.63197974242\t230720\n3651.18601684187\t315392\n3652.7433032124\t410624\n3654.3034227609\t510016\n3655.86595939429\t599872\n3657.43049701949\t664320\n3658.99661954341\t706496\n3660.56391087297\t742720\n3662.13195491507\t779520\n3663.70033557664\t803456\n3665.26863676458\t811072\n3666.83544083985\t808000\n3668.40233551667\t795072\n3669.96790270647\t766720\n3671.53172631619\t729600\n3673.09339025272\t687936\n3674.65247842298\t639616\n3676.20857473389\t582976\n3677.76126309236\t529856\n3679.32355368889\t483072\n3680.90199303028\t443136\n3682.48646949786\t405888\n3684.06687147297\t371584\n3685.63308733696\t335424\n3687.18932031058\t300736\n3688.74650410743\t272192\n3690.30462284817\t250112\n3691.86366065346\t228480\n3693.42360164396\t206912\n3694.98442994032\t188928\n3696.54612966319\t173632\n3698.10868493323\t177664\n3699.67108063199\t192256\n3701.23529883703\t200064\n3702.80032496136\t201472\n3704.36614312564\t201152\n3705.93273745051\t199872\n3707.50009205663\t198016\n3709.06819106466\t191360\n3710.63701859526\t180224\n3712.20655876908\t165120\n3713.77679570678\t150208\n3715.34771352901\t134016\n3716.91929635642\t114816\n3718.49152830969\t90776\n3720.06439350945\t67176\n3721.63787607637\t67696\n3723.2119601311\t85640\n3724.7866297943\t100864\n3726.36186918663\t112496\n3727.93766242873\t118736\n3729.51399364127\t120896\n3731.0908469449\t121072\n3732.66820646028\t117840\n3734.24504794411\t110632\n3735.82337194686\t102376\n3737.40215453346\t93352\n3738.98137982459\t84720\n3740.56103194088\t76040\n3742.14109500301\t74440\n3743.72155313162\t78952\n3745.30239044737\t79272\n3746.88359107091\t76808\n3748.46513912291\t73256\n3750.04701872402\t69152\n3751.62921399489\t65288\n3753.21170905618\t62144\n3754.79448802855\t60416\n3756.37753503264\t59840\n3757.96083418913\t60304\n3759.54436961866\t61136\n3761.12812544188\t61568\n3762.71208577947\t60968\n3764.29623475206\t59320\n3765.88055648032\t57408\n3767.4640225918\t55024\n3769.04864210834\t51728\n3770.63338675265\t46560\n3772.21824064541\t40760\n3773.80318790725\t35808\n3775.38821265884\t38496\n3776.97329902084\t40856\n3778.5584311139\t45760\n3780.14359305867\t51184\n3781.72876897582\t52720\n3783.31394298599\t51688\n3784.89909920985\t50456\n3786.48422176804\t56976\n3788.06929478123\t64448\n3789.65430237007\t71480\n3791.23922865522\t77128\n3792.82405775733\t82272\n3794.40877379706\t85600\n3795.99336089506\t85488\n3797.577803172\t81624\n3799.16208474852\t75048\n3800.74618974528\t65952\n3802.32909026307\t54400\n3803.91279460048\t42984\n3805.49627473024\t35136\n3807.07951477301\t32144\n3808.66249884945\t35512\n3810.24521108022\t47448\n3811.82763558596\t68288\n3813.40975648734\t96352\n3814.99155790501\t126824\n3816.57302395962\t156096\n3818.15413877184\t179904\n3819.73488646232\t198528\n3821.31525115171\t211712\n3822.89521696067\t219904\n3824.47476800986\t222144\n3826.05388841993\t218432\n3827.63256231154\t209600\n3829.21077380534\t195264\n3830.78850702199\t177152\n3832.36574608214\t158336\n3833.94247510646\t141312\n3835.51794589405\t123848\n3837.09444263788\t106280\n3838.67095770774\t89112\n3840.24749080167\t74536\n3841.8240416177\t62968\n3843.40060985387\t55224\n3844.97719520822\t50416\n3846.55379737878\t50680\n3848.1304160636\t51504\n3849.7070509607\t50976\n3851.28370176813\t48552\n3852.86036818393\t50520\n3854.43704990612\t50944\n3856.01374663275\t49224\n3857.59045806186\t45160\n3859.16718389147\t39920\n3860.74392381963\t34456\n3862.32067754438\t30024\n3863.89744476375\t26568\n3865.47422517578\t24104\n3867.0510184785\t22088\n3868.62782436996\t20768\n3870.20363499278\t20200\n3871.78046514825\t20440\n3873.35730698676\t20840\n3874.93416020634\t21192\n3876.51102450504\t25696\n3878.08789958088\t32104\n3879.6647851319\t37400\n3881.24168085615\t41816\n3882.81858645166\t44184\n3884.39550161646\t43784\n3885.9724260486\t41264\n3887.5493594461\t37784\n3889.12630150701\t33944\n3890.70325192937\t30056\n3892.28021041121\t26344\n3893.85717665056\t22392\n3895.43415034547\t18224\n3897.01113119397\t14083\n3898.5881188941\t11714\n3900.16511314389\t11137\n3901.74211364139\t10216\n3903.31811241095\t9559\n3904.89512449445\t9523\n3906.47214191997\t10208\n3908.04916438552\t11674\n3909.62619158916\t12758\n3911.20322322891\t13421\n3912.78025900282\t13964\n3914.35729860892\t14748\n3915.93434174525\t15722\n3917.51138810985\t16496\n3919.08843740074\t17104\n3920.66548931598\t17504\n3922.2425435536\t17376\n3923.81959981163\t16464\n3925.3966577881\t14797\n3926.97371718107\t13137\n3928.55077768856\t12026\n3930.12783900862\t11821\n3931.70490083927\t11841\n3933.28196287856\t11490\n3934.85902482452\t10833\n3936.43507866832\t10352\n3938.01213952227\t9879\n3939.58919937721\t10236\n3941.16625793116\t10608\n3942.74331488216\t11292\n3944.32036992825\t11922\n3945.89742276746\t11820\n3947.47447309783\t11086\n3949.05152061741\t11641\n3950.62856502422\t12086\n3952.2056060163\t12050\n3953.78264329169\t11881\n3955.35967654843\t11786\n3956.93670548455\t11778\n3958.51372979809\t11511\n3960.09074918709\t10948\n3961.66776334958\t10120\n3963.24477198361\t9389\n3964.82177478721\t8463\n3966.39877145841\t7598\n3967.97576169525\t7235\n3969.55274519577\t7670\n3971.12871400763\t11043\n3972.70568313441\t14538\n3974.28264461918\t17016\n3975.85959815996\t18232\n3977.4365434548\t18832\n3979.01348020174\t18632\n3980.59040809881\t17240\n3982.16732684405\t15080\n3983.74423613549\t13394\n3985.32113567117\t12435\n3986.89802514914\t11661\n3988.47490426742\t11174\n3990.05177272406\t13882\n3991.62863021708\t16224\n3993.20547644454\t17928\n3994.78231110446\t19640\n3996.35913389488\t21056\n3997.93594451384\t21880\n3999.51274265937\t21960\n4001.08952802952\t21696\n4002.66630032231\t20824\n4004.24205172645\t19496\n4005.8187969675\t18344\n4007.3955282255\t17880\n4008.97224519849\t17480\n4010.5489475845\t16496\n4012.12563508159\t15235\n4013.70230738777\t14278\n4015.27896420109\t13548\n4016.85560521959\t12711\n4018.4322301413\t12421\n4020.00883866426\t15227\n4021.58543048651\t19056\n4023.16200530608\t23000\n4024.73856282101\t27272\n4026.31510272934\t32288\n4027.8916247291\t37584\n4029.46812851834\t42240\n4031.04461379508\t44904\n4032.62108025737\t45424\n4034.19752760324\t44016\n4035.77395553073\t41744\n4037.35036373788\t38792\n4038.92574465238\t35240\n4040.50211252604\t35552\n4042.07845977366\t40920\n4043.65478609327\t45784\n4045.23109118292\t48872\n4046.80737474064\t50240\n4048.38363646447\t49456\n4049.95987605244\t46152\n4051.5360932026\t51840\n4053.11228761297\t56072\n4054.68845399697\t58256\n4056.26458848254\t57784\n4057.84069288953\t53384\n4059.4167690378\t45920\n4060.99281874721\t37616\n4062.56884383761\t30448\n4064.14484612887\t25544\n4065.72082744082\t22552\n4067.29678959334\t20296\n4068.87273440628\t17936\n4070.44866369949\t16145\n4072.02357232199\t15139\n4073.59947604232\t14311\n4075.17536970134\t13165\n4076.75125511888\t12338\n4078.32713411482\t11996\n4079.903008509\t11945\n4081.47888012129\t11796\n4083.05475077153\t11775\n4084.63062227959\t11923\n4086.20649646532\t12158\n4087.78237514858\t12168\n4089.35826014922\t12190\n4090.93415328709\t12300\n4092.51005638207\t12679\n4094.08597125399\t14415\n4095.66189972272\t17576\n4097.23784360811\t21112\n4098.81380473002\t24568\n4100.38978490831\t26952\n4101.96578596283\t27208\n4103.54180971343\t26120\n4105.11785797998\t24888\n4106.6929254971\t23464\n4108.26902823653\t20840\n4109.84516095031\t16936\n4111.42132545829\t29880\n4112.99752358033\t62360\n4114.57375713629\t114688\n4116.15002794601\t186752\n4117.72633782937\t271872\n4119.30268860621\t364608\n4120.87908209639\t459840\n4122.45552011977\t543104\n4124.0320044962\t604352\n4125.60853704554\t636736\n4127.18511958764\t644864\n4128.76175394237\t628992\n4130.33844192957\t590144\n4131.9151853691\t527616\n4133.49198608082\t442624\n4135.06884588458\t342656\n4136.64576660025\t245824\n4138.22275004767\t168512\n4139.79880766744\t114128\n4141.37597099195\t77496\n4142.9532295589\t50944\n4144.53058058354\t32192\n4146.10802128113\t19864\n4147.68554886694\t12529\n4149.26316055623\t8237\n4150.84085356425\t5760\n4152.41862510627\t4094\n4153.99647239755\t2902\n4155.57439265334\t2188\n4157.15238308892\t1852\n4158.73044091953\t1684\n4160.30856336044\t1719\n4161.88674762692\t1822\n4163.46499093421\t1982\n4165.04329049758\t2136\n4166.6216435323\t2229\n4168.20004725361\t2312\n4169.77849887679\t2522\n4171.35699561709\t2725\n4172.93553468978\t2751\n4174.51310462164\t2554\n4176.09171998227\t2839\n4177.67036932284\t3068\n4179.24904985862\t2911\n4180.82775880486\t2469\n4182.40649337683\t1934\n4183.98525078979\t1620\n4185.56402825899\t1533\n4187.14282299969\t1272\n4188.72163222717\t1091\n4190.30045315667\t968\n4191.87928300346\t1080\n4193.4581189828\t1622\n4195.03695830995\t1959\n4196.61579820016\t2010\n4198.19463586871\t1928\n4199.77346853085\t1848\n4201.35229340183\t1800\n4202.93110769693\t1941\n4204.5099086314\t2830\n4206.08869342051\t3992\n4207.66645049006\t4889\n4209.24519464898\t5608\n4210.82391431008\t6101\n4212.40260668864\t6340\n4213.98126899991\t6427\n4215.55989845916\t6551\n4217.13849228164\t6489\n4218.71704768262\t6237\n4220.29556187735\t5705\n4221.8740320811\t6032\n4223.45245550913\t7069\n4225.03082937669\t7329\n4226.60915089905\t6847\n4228.17415089905\t5812\n4229.73915089905\t4742\n4231.30415089905\t3929\n4232.86915089905\t3246\n4234.43415089905\t2973\n4235.99915089905\t2620\n4237.56415089905\t2296\n4239.12915089905\t2214\n4240.69415089905\t2221\n4242.25815089905\t2112\n4243.82315089905\t1787\n4245.38815089905\t1594\n4246.95315089905\t1593\n4248.51815089905\t1604\n4250.08315089905\t1417\n4251.64815089905\t1264\n4253.21315089905\t1229\n4254.77815089905\t1307\n4256.34315089905\t1303\n4257.90815089905\t1247\n4259.47315089905\t1232\n4261.03815089905\t1225\n4262.60315089905\t1173\n4264.16815089905\t1066\n4265.73315089905\t989\n4267.29815089905\t884\n4268.86315089905\t826\n4270.42815089905\t765\n4271.99315089905\t819\n4273.55815089905\t908\n4275.12215089905\t959\n4276.68715089905\t933\n4278.25215089905\t903\n4279.81715089905\t862\n4281.38215089905\t785\n4282.94715089905\t692\n4284.51215089905\t567\n4286.07715089905\t405\n4287.64215089905\t300\n4289.20715089905\t293\n4290.77215089905\t344\n4292.33715089905\t323\n4293.90215089905\t334\n4295.46715089905\t343\n4297.03215089905\t295\n4298.59715089905\t264\n4300.16215089905\t251\n4301.72715089905\t230\n4303.29215089905\t216\n4304.85715089905\t170\n4306.42215089905\t145\n4307.98715089905\t145\n4309.55115089905\t145\n4311.11615089905\t162\n4312.68115089905\t190\n4314.24615089905\t173\n4315.81115089905\t159\n4317.37615089905\t156\n4318.94115089905\t160\n4320.50615089905\t166\n4322.07115089905\t190\n4323.63615089905\t216\n4325.20115089905\t268\n4326.76615089905\t298\n4328.33115089905\t366\n4329.89615089905\t442\n4331.46115089905\t440\n4333.02615089905\t310\n4334.59115089905\t284\n4336.15615089905\t260\n4337.72115089905\t280\n4339.28615089905\t295\n4340.85115089905\t230\n4342.41515089905\t230\n4343.98015089905\t205\n4345.54515089905\t203\n4347.11015089905\t229\n4348.67515089905\t224\n4350.24015089905\t213\n4351.80515089905\t242\n4353.37015089905\t243\n4354.93515089905\t230\n4356.50015089905\t205\n4358.06515089905\t188\n4359.63015089905\t150\n4361.19515089905\t180\n4362.76015089905\t209\n4364.32515089905\t218\n4365.89015089905\t228\n4367.45515089905\t275\n4369.02015089905\t326\n4370.58515089905\t336\n4372.15015089905\t327\n4373.71515089905\t270\n4375.28015089905\t237\n4376.84415089905\t317\n4378.40915089905\t297\n4379.97415089905\t292\n4381.53915089905\t282\n4383.10415089905\t265\n4384.66915089905\t244\n4386.23415089905\t254\n4387.79915089905\t242\n4389.36415089905\t245\n4390.92915089905\t282\n4392.49415089905\t272\n4394.05915089905\t261\n4395.62415089905\t267\n4397.18915089905\t296\n4398.75415089905\t311\n4400.31915089905\t359\n4401.88415089905\t497\n4403.44915089905\t574\n4405.01415089905\t551\n4406.57915089905\t473\n4408.14415089905\t405\n4409.70815089905\t419\n4411.27315089905\t388\n4412.83815089905\t383\n4414.40315089905\t394\n4415.96815089905\t438\n4417.53315089905\t583\n4419.09815089905\t705\n4420.66315089905\t736\n4422.22815089905\t736\n4423.79315089905\t799\n4425.35815089905\t882\n4426.92315089905\t865\n4428.48815089905\t820\n4430.05315089905\t815\n4431.61815089905\t910\n4433.18315089905\t959\n4434.74815089905\t946\n4436.31315089905\t955\n4437.87815089905\t950\n4439.44315089905\t982\n4441.00815089905\t1030\n4442.57315089905\t1127\n4444.13715089905\t1218\n4445.70215089905\t1305\n4447.26715089905\t1363\n4448.83215089905\t1532\n4450.39715089905\t1694\n4451.96215089905\t1884\n4453.52715089905\t2156\n4455.09215089905\t2656\n4456.65715089905\t3328\n4458.22215089905\t3827\n4459.78715089905\t3969\n4461.35215089905\t4055\n4462.91715089905\t4262\n4464.48215089905\t4494\n4466.04715089905\t4501\n4467.61215089905\t4404\n4469.17715089905\t4316\n4470.74215089905\t4290\n4472.30715089905\t4232\n4473.87215089905\t4215\n4475.43715089905\t4443\n4477.00115089905\t4838\n4478.56615089905\t4920\n4480.13115089905\t4294\n4481.69615089905\t3437\n4483.26115089905\t3096\n4484.82615089905\t3312\n4486.39115089905\t3426\n4487.95615089905\t3085\n4489.52115089905\t2750\n4491.08615089905\t2696\n4492.65115089905\t2920\n4494.21615089905\t3119\n4495.78115089905\t3322\n4497.34615089905\t3463\n4498.91115089905\t3313\n4500.47615089905\t3184\n4502.04115089905\t3217\n4503.60615089905\t3240\n4505.17115089905\t3288\n4506.73615089905\t3582\n4508.30115089905\t3963\n",  "traceback": null,  "update_time": "2023-02-07T21:57:16.902344",  "user_email": "tests@fake.org" }, "output_problems": [  "Output html_report: Test output file (report_manual_custom_content.html) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 113.8995897769928, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            ::::::::::::::/galaxy/server/database/objects/4/3/b/dataset_43b29100-6e60-47a0-94f8-7645b03739ce.dat::::::::::::::2502.98928676082438882504.55428676082439602506.11928676082433922507.68428676082426322509.24928676082422002510.81428676082422882512.37928676082426642513.94428676082424802515.50928676082423202517.07428676082425282518.63928676082433762520.20428676082442402521.76928676082446962523.33328676082445602524.89828676082441122526.46328676082439362528.02828676082437362529.59328676082429122531.15828676082423602532.72328676082431282534.28828676082438802535.85328676082441042537.41828676082442562538.98328676082446642540.54828676082446002542.11328676082442242543.67828676082441202545.24328676082443282546.80828676082445362548.37328676082448722549.93828676082445922551.50328676082436002553.06828676082428722554.63328676082435282556.19728676082440722557.76228676082433602559.32728676082416322560.89228676082407522562.45728676082404722564.02228676082397922565.58728676082390962567.15228676082396962568.71728676082411522570.28228676082418962571.84728676082415682573.41228676082414482574.97728676082423362576.54228676082434322578.10728676082437202579.67228676082433522581.23728676082435282582.80228676082557202584.36728676082741842585.93228676082919922587.497286760821058882589.062286760821145122590.626286760821202722592.191286760821236402593.756286760821220242595.321286760821155042596.886286760821067362598.45128676082978642600.01628676082876402601.58128676082773122603.14628676082679522604.71128676082594642606.27628676082506242607.84128676082436722609.40628676082439202610.97128676082438802612.53628676082440242614.10128676082441922615.66628676082443522617.23128676082440482618.79628676082433122620.4002803902421282622.00450588418410322623.60789985113406962625.2124745374412642626.81716666296420002628.42193807791427922630.02675063237438802631.63156617644450642633.23634656023458722634.84105363384456962636.44564924738449922638.05009525096437762639.65435349467426082641.25838582864416562642.86215410296413282644.46562016774413602646.06874587309415202647.67149306911492002649.2738236059822962650.875699333591270322652.477082102261783682654.077933762042318082655.678216163012851202657.27789115533344642658.875899059193698562660.474245233473871362662.071869573763933442663.669306786683959042665.267031980273954562666.864917606753919362668.462836118373966082670.060659967334190082671.658261605884652802673.255513486235263362674.852288060625866242676.448457781276254722678.043895100416423042679.638472470276513922681.232062343076642562682.826331583216720642684.416239291726644482686.001358058236420482687.581948411086117762689.15827087865772162690.730585989115374082692.298153131764899842693.863237257734372482695.425095445223855362696.983988222563362562698.540176118062871042700.093919660082405122701.645479376922010242703.195115796941666562704.743089448441370882706.289660859771177202707.83509055926985842709.37963907523815762710.92356693602667602712.46713466996534402714.01060280537419842715.55423187058378082717.09813305014374642718.64227188502378322720.18669043818383282721.73143077261387202723.27653495129389922724.82204503719391202726.36701510869389682727.91346287142387282729.46044270343389122731.00799666769389842732.55616682718386402734.10499524488375842735.65452398377366082737.20479510683363122738.75585067703369202740.30773275734375922741.86048341076528642743.41414470024762802744.968758688781014482746.524367439351257122748.081013014921476482749.638737478481645442751.197582892991740802752.757591321451765122754.318804826821732482755.881265472081648002757.445015320221521282759.009095948361371522760.575549500211214882762.143418416991061602763.71274476166916402765.28357059722780562766.85593798664669682768.42988899288630722770.00546567894726802771.582710107791000802773.161664342411504642774.742370445772273282776.324870480853257602777.909206510634355202779.495420598085424642781.083554806196365442782.673651197937081602784.265751836287589122785.862230810597902082787.46137897888052482789.061205067847971842790.656547639677621122792.247886784587089922793.835432625836437762795.422439172295744002797.009115162565024642798.596685147714359042800.186373678793700482801.77841392763042562803.372121187782400642804.967343193141870722806.56392767751453442808.161722374691125922809.76057501852863122811.36033334282666882812.9608450814526002814.56195796808422642816.16351973668390562817.76537812102389202819.36738085492389122820.9693756722383282822.57121030668375682824.17273249218371042825.77378996252373842827.37320803523384322828.97287981685405842830.57163018206419202832.16930686469413362833.76575759855392002835.36083011745374002836.95437215523365602838.54623144569365602840.13625572267367282841.72429271997368082843.31019017143372162844.89379581084381762846.47495737205387362848.05352258887384162849.62933919511379842851.20225492459383202852.77211751114386482854.33877468858382642855.90207419072379122857.46186375138383442859.01799110439390642860.57030398356393202862.11766206308388642863.66189187661385202865.20185051505382562866.73738571223370882868.26834520196353122869.79948751649334562871.33550080546324882872.87612722882322002874.4211089465322962875.97018811845329602877.5231069046342242879.07960746489350322880.63943195926347762882.20232254765339122883.76802139335042885.33627064625337682886.90681247633340722888.47938904019347682890.05374249777352482891.62961500899352482893.20674873382346082894.78387717236341442896.36275941013342162897.94212950607348882899.5217296201353602901.10130191218353682902.68058854224349282904.25933167022349202905.83727345606356322907.4141560597368802908.98972164108371602910.56371236013357522912.1358703768339362913.70593785103332722915.27239902125366802916.83419636666478002918.39175940831591842919.94551766722702482921.49590066445802162923.04333792104881042924.58825895802925682926.13109329645945762927.67227045736943842929.21123626907916722930.75038801093853282932.28917086394770642933.82801434915686962935.36734798761609602936.90760130035531842938.44920380841455362939.99258503284388082941.53817449469330402943.08640171498343762944.63769621478348402946.19064610336341362947.74354970432332562949.29640186015331762950.84919741336337282952.40193120644346562953.95459808188350002955.5071928822346002957.05971044989334242958.61214562743324722960.16449325734320322961.71575635663328162963.26791348294334322964.8199675924330722966.37191352751317042967.92374613077308082969.47546024467316642971.02705071172332482972.57851237441340002974.12984007525335522975.68102865672329362977.23207296132326242978.78296783157325122980.33370810994329442981.88428863895338722983.43470426108344082984.98494981884337042986.53502015473335922988.08491011124352322989.63461453087371202991.18412825612365602992.73344612949348322994.28256299347339362995.83048403819343762997.37918354758349442998.92766657837356403000.47592797306358643002.02396257416352883003.57176522416343923005.11933076555377283006.66665404083407603008.21372989252410483009.76045391304384483011.30673336694347683012.85258060488354803014.39800797751356883015.94302783547355123017.48765252941354163019.03189440998356483020.57576582784364643022.11927913362376963023.66244667799387683025.20528081158388163026.74779388504382803028.28901291088377123029.83092110147378643031.372545276376323032.9138977851363043034.45499097944355443035.99583720966352243037.53644882641355843039.07683818033357363040.61701762208357123042.15699950231351443043.69679617167349923045.23641998079349443046.77588328035344243048.31519842097332163049.85437775332404003051.39343362804473763052.93237839577521363054.47122440718544803056.0099840129544403057.5486695636522883059.08729340991664083060.62586790248780563062.16342231011873523063.70193515897939683065.24043569815962163066.7789362783933203068.31753117451885923069.85631402629840803071.39529623095796963072.93448918581742403074.47390428815691203076.0135529353653283077.55344652456629923079.09359645324609283080.63401411864581443082.17471091808545043083.71569824885504403085.25698750826461763086.79859009363422563088.34051740225388403089.88278083144395923091.4253917785392803092.96836164074373203094.51071553496357763096.05443717193353923097.59855190873359603099.14307114265366083100.68800627101372963102.2333686911376883103.77916980023376803105.32542099572372723106.87213367487362403108.41931923499350563109.96698907338342643111.51515458735349843113.0638271742358243114.61301823126371923116.16273915581380163117.71300134517382323119.26381619664377603120.81519510754373763122.36714947517369203123.91969069683363043125.47283016984361203127.02558628348370243128.57995605062377523130.13495825374374403131.69060429015369043133.24690555716369443134.80387345206370643136.36151937218368723137.91985471481364243139.47889087727357443141.03863925685350163142.59911125088662403144.160318256641283523145.722271671462243843147.284982892643505283148.848463317484897923150.412724343296203523151.977777367387166083153.543633787067648003155.110304999637654403156.67780240247384323158.245458762847020803159.812623938846634243161.378334007126334723162.944628167666594563164.510542218836752003166.076113193546935683167.641378124717062403169.206374045246963843170.771137988056725763172.335706986066529923173.900118072166353923175.464408279296045443177.028614640355601283178.592774188255163523180.15692395594768643181.721100976234348803183.285342282143888003184.849684906543444483186.414165882363047683187.978822242492683523189.543691019862375043191.108809247372140163192.674213957951948803194.2389416081764483195.805030141231617283197.371516232591524483198.9384369151466883200.505829221371423363202.073730184621377923203.642176837651333763205.211206213381291523206.780855344731267203208.35116126461258163209.922161005911250323211.493891601571232083213.066390084491202643214.63969348761150403216.213838843791083443217.788863185991027523219.3648035471990243220.94169696004948163222.51958045772892883224.09849107306840003225.67846583896984003227.259541788351096643228.840744583371154163230.424133235671168643232.008734146531145443233.594584348861090963235.18172087557996403236.77018075957902243238.36000103379821683239.95121873112731043241.54387088449988243243.13799452681363843244.733626690971741443246.330804409922080003247.929564716552339843249.529944643772481283251.131981224512527363252.735711491682504323254.339712589472446083255.942607277452360963257.544501011582259843259.145499247822094083260.745707442121916803262.344209186781723523263.943154001481511683265.541625074731897603267.13972786252661123268.737567820753450883270.335250405434126083271.93288107254658563273.529606807815079043275.124733742235400323276.718606049235541123278.311567902315501443279.903963474945352323281.495644004425205123283.086255475115038083284.675834181094774403286.264416416464352643287.852038475293852803289.438736651693340803291.024547239733678723292.60950653355077123294.193650827096518403295.777016414597841923297.358628558589182723298.9405460557510475523300.5217937059111586563302.1024078031212497923303.6824246414813204483305.2618805150913660163306.8408117180113731843308.4192545443513537283309.9972452881913286403311.5748202436113066243313.152015704712805123314.7288679655612631043316.3054133202612400643317.881688062912154883319.4577284875511991043321.0335708883211709443322.6092515592811228163324.1848067945210552323325.760272888149996803327.3353434089402243328.909671348928672643330.48222692547725443332.05499652566631683333.6269498665504003335.198062381074872323336.768309505285918723338.337666673116824963339.906109319047546243341.473612877558049283343.040152783118366083344.605704470218663043346.170243373318823043347.73374492698892803349.296184565458882563350.856954216678668163352.415540074788273923353.972058974067777283355.526627748817270403357.079363233296784643358.630382261796291203360.17980166865780483361.7277382885242883363.274308954264710403364.818643449724163203366.362833398763600643367.906007822853024003369.448283556292491523370.989777433352952323372.530606288314380163374.070886955455922563375.610736269067374083377.150271063428586243378.689608172819383683380.228864431519829763381.7681566738110152323383.3076017339710572803384.847316446310956803386.3874176450611223043387.9280221645511289603389.4692468390311110403391.011208502810588163392.554023990139966083394.097810135329422723395.642683772638886403397.187773417728201603398.735171660647444483400.284007823886746883401.834398741726096003403.386461248445435523404.940312178335703043406.496068365665925123408.053846644725989123409.61376384985950083411.175936815165884163412.74048237515759363414.307517363895513603415.877158615825200643417.449522965174912643419.024219788474614403420.600722288544282243422.178943039143936643423.758794614013600003425.340189586923230723426.92304053162876163428.50726002182580483430.092760631282341123431.678440709082102403433.266240599391866883434.855059386081660803436.444809642911485443438.035403943621340163439.626754861961303283441.218774971691399683442.811376846551600003444.404473060281990403445.997976186652350083447.59179879942700803449.185853472273043203450.780052779033350403452.37430929343563523453.968535589163713923455.562644240043794563457.156547819793807363458.750158902173753603460.343390060923682563461.936153869793565443463.528362902543375363465.118640610233107843466.708747666512807043468.297710292232505603469.885571898622227203471.472375896881982723473.058165698241768323474.64298471391581443476.226876355081411203477.8098840331396483479.392051158861406723480.973421143891392003482.554037399291352323484.133943336291283123485.713182366081194083487.29179789991096643488.869833348961000323490.44733212446902643492.02433763762930243493.60089329966980723495.177042521791025283496.753086451381047123498.328893146281034963499.903738187671667203501.480205498212939523503.057113000054659203504.63428531556634243506.211547066868492803507.788722876459980803509.3656373665811110403510.9421151595511980803512.5179808776812544003514.0930591432812800003515.6671745786512948483517.2401518061112989443518.8118154479612881923520.3833430203612661763521.9560069446512518403523.5297742009112328963525.1046117692411975683526.6804866297111525123528.2573657624311217923529.8352161474810900483531.4140047649410440963532.992688923899861123534.573254399689386883536.154659069258980483537.73686991278556163539.31985391018044163540.903578041547532803542.488009287127038723544.073114626926551683545.658861041036048003547.245215509545566083548.832145012545169283550.419616530114846083552.007597042354542083553.596053529344259203555.184952971174032643556.774262347923882243558.363948639693761283559.953978826573626243561.544319888643461763563.1349388063334403564.725802558723226243566.31687812693113603567.907115664622988163569.498515721372897283571.090028554952816003572.681621145442696963574.273260472932519043575.86491351752309123577.456547259252119683579.048128678272140803580.639624754632170243582.231002468442158723583.822228799772103043585.413270728722033283587.004095235382240003588.594669299832392323590.1849599..3363383.3287549095211550723384.9210454129211776003386.5129840438311811843388.1045532627411863043389.6957355301111863043391.2865133064111699203392.8768690521111315203394.4667852276810798083396.056244293610189443397.645228710339466243399.232706088228680323400.820688919297895683402.40814449387205763403.99505527226533763405.581403714985864323407.16717228265188483408.752343435535417603410.336899634255704323411.920823339215872643413.50409701095825283415.086703109795626883416.668624096345402883418.249842431025158403419.83034057434890883421.410100986664612483422.989106128574350083424.567338460494053123426.144780442893720963427.721414536253385603429.297223201043079683430.872188897722780163432.445288547242467843434.018516255782161283435.590848388831908483437.167787947941726723438.753732966491575683440.347008452751420803441.945939414961269363443.548850861371298483445.154067800251340803446.759915239831612163448.364718188381959683449.966801654152263043451.564490645382506883453.156110170342702723454.739985237262874243456.314440854423054723457.877802030053236483459.428393772413379843460.972218177133406723462.516372972883281283464.060826617513054083465.605547568892844163467.149517023512693123468.694677841512540803470.240011359962326403471.785486036732074883473.331070329661833603474.87673269661598083476.422441595411364483477.968165483951463683479.513872820061511043481.059532061611504643482.605111666431459843484.150580092391400323485.695905797341315843487.241057239141232403488.786002875631142963490.330711164671044003491.87515056411917843493.41928953181910883494.96309652562964643496.50654000339994083498.04958842297993523499.59073375471230163501.132945784392232323502.677872453473636483504.224626161965374083505.773140213347257603507.323347911088979203508.8751825586610299523510.4285774595411258883511.9834659172212026883513.5397812351612636163515.0974567168312979203516.6564256657113066243518.2166213852713015043519.77797717913015043521.3404263503613066243522.9039022028213066243524.4683380398712866563526.0336671649812497923527.5998228816211985923529.1667384932711397123530.734347303410828803532.3025826154810485123533.8703751434610318083535.4396630760910110083537.009377463729705603538.579451609829152003540.149818817878515843541.720412391347880323543.291165633717312003544.862011848446816643546.432884339036317443548.003716408935835523549.574441361635412483551.14499250065027203552.715303129314648323554.285306551254316163555.854936069874066563557.424124988673853443558.99280661113644163560.560914240663454723562.12838118083296003563.695140735023168003565.261126206773071363566.825271089733001603568.389226619932908163569.951689395132737283571.512661645052504963573.072145599392265603574.630143487892091523576.186657540261975683577.741689986222012163579.295243055492076803580.847318977782135683582.397919982822133123583.947048300332040323585.494706160011879683587.04089579161843203588.585619424821907843590.128879289371938563591.670677614971955203593.211016631361956483594.749898568241908483596.287325655341813763597.823300122371694083599.357824199061562243600.889920975791409283602.421551884141232403603.951739089871056803605.48048482271901283607.00779131237779283608.53366078857671443610.05809548103577283611.58109761947849523613.10266943361272323614.622813153151774083616.141531007842334723617.658825227382921603619.174698041493448323620.689151679893831043622.20218837234034563623.713810348444101763625.224019838034090243626.732819070784061443628.240210276423918083629.746195684673677443631.257542033643443843632.777472824023202563634.304082210232934403635.832549471992677123637.359023067582385283638.87965145532034563640.399293050881651203641.925096569141289683643.456645916971299043644.99352500131334403646.535317729051345283648.081608007111593603649.631979742422307203651.186016841873153923652.74330321244106243654.30342276095100163655.865959394295998723657.430497019496643203658.996619543417064963660.563910872977427203662.131954915077795203663.700335576648034563665.268636764588110723666.835440839858080003668.402335516677950723669.967902706477667203671.531726316197296003673.093390252726879363674.652478422986396163676.208574733895829763677.761263092365298563679.323553688894830723680.901993030284431363682.486469497864058883684.066871472973715843685.633087336963354243687.189320310583007363688.746504107432721923690.304622848172501123691.863660653462284803693.423601643962069123694.984429940321889283696.546129663191736323698.108684933231776643699.671080631991922563701.235298837032000643702.800324961362014723704.366143125642011523705.932737450511998723707.500092056631980163709.068191064661913603710.637018595261802243712.206558769081651203713.776795706781502083715.347713529011340163716.919296356421148163718.49152830969907763720.06439350945671763721.63787607637676963723.2119601311856403724.78662979431008643726.361869186631124963727.937662428731187363729.513993641271208963731.09084694491210723732.668206460281178403734.245047944111106323735.823371946861023763737.40215453346933523738.98137982459847203740.56103194088760403742.14109500301744403743.72155313162789523745.30239044737792723746.88359107091768083748.46513912291732563750.04701872402691523751.62921399489652883753.21170905618621443754.79448802855604163756.37753503264598403757.96083418913603043759.54436961866611363761.12812544188615683762.71208577947609683764.29623475206593203765.88055648032574083767.4640225918550243769.04864210834517283770.63338675265465603772.21824064541407603773.80318790725358083775.38821265884384963776.97329902084408563778.5584311139457603780.14359305867511843781.72876897582527203783.31394298599516883784.89909920985504563786.48422176804569763788.06929478123644483789.65430237007714803791.23922865522771283792.82405775733822723794.40877379706856003795.99336089506854883797.577803172816243799.16208474852750483800.74618974528659523802.32909026307544003803.91279460048429843805.49627473024351363807.07951477301321443808.66249884945355123810.24521108022474483811.82763558596682883813.40975648734963523814.991557905011268243816.573023959621560963818.154138771841799043819.734886462321985283821.315251151712117123822.895216960672199043824.474768009862221443826.053888419932184323827.632562311542096003829.210773805341952643830.788507021991771523832.365746082141583363833.942475106461413123835.517945894051238483837.094442637881062803838.67095770774891123840.24749080167745363841.8240416177629683843.40060985387552243844.97719520822504163846.55379737878506803848.1304160636515043849.7070509607509763851.28370176813485523852.86036818393505203854.43704990612509443856.01374663275492243857.59045806186451603859.16718389147399203860.74392381963344563862.32067754438300243863.89744476375265683865.47422517578241043867.0510184785220883868.62782436996207683870.20363499278202003871.78046514825204403873.35730698676208403874.93416020634211923876.51102450504256963878.08789958088321043879.6647851319374003881.24168085615418163882.81858645166441843884.39550161646437843885.9724260486412643887.5493594461377843889.12630150701339443890.70325192937300563892.28021041121263443893.85717665056223923895.43415034547182243897.01113119397140833898.5881188941117143900.16511314389111373901.74211364139102163903.3181124109595593904.8951244944595233906.47214191997102083908.04916438552116743909.62619158916127583911.20322322891134213912.78025900282139643914.35729860892147483915.93434174525157223917.51138810985164963919.08843740074171043920.66548931598175043922.2425435536173763923.81959981163164643925.3966577881147973926.97371718107131373928.55077768856120263930.12783900862118213931.70490083927118413933.28196287856114903934.85902482452108333936.43507866832103523938.0121395222798793939.58919937721102363941.16625793116106083942.74331488216112923944.32036992825119223945.89742276746118203947.47447309783110863949.05152061741116413950.62856502422120863952.2056060163120503953.78264329169118813955.35967654843117863956.93670548455117783958.51372979809115113960.09074918709109483961.66776334958101203963.2447719836193893964.8217747872184633966.3987714584175983967.9757616952572353969.5527451957776703971.12871400763110433972.70568313441145383974.28264461918170163975.85959815996182323977.4365434548188323979.01348020174186323980.59040809881172403982.16732684405150803983.74423613549133943985.32113567117124353986.89802514914116613988.47490426742111743990.05177272406138823991.62863021708162243993.20547644454179283994.78231110446196403996.35913389488210563997.93594451384218803999.51274265937219604001.08952802952216964002.66630032231208244004.24205172645194964005.8187969675183444007.3955282255178804008.97224519849174804010.5489475845164964012.12563508159152354013.70230738777142784015.27896420109135484016.85560521959127114018.4322301413124214020.00883866426152274021.58543048651190564023.16200530608230004024.73856282101272724026.31510272934322884027.8916247291375844029.46812851834422404031.04461379508449044032.62108025737454244034.19752760324440164035.77395553073417444037.35036373788387924038.92574465238352404040.50211252604355524042.07845977366409204043.65478609327457844045.23109118292488724046.80737474064502404048.38363646447494564049.95987605244461524051.5360932026518404053.11228761297560724054.68845399697582564056.26458848254577844057.84069288953533844059.4167690378459204060.99281874721376164062.56884383761304484064.14484612887255444065.72082744082225524067.29678959334202964068.87273440628179364070.44866369949161454072.02357232199151394073.59947604232143114075.17536970134131654076.75125511888123384078.32713411482119964079.903008509119454081.47888012129117964083.05475077153117754084.63062227959119234086.20649646532121584087.78237514858121684089.35826014922121904090.93415328709123004092.51005638207126794094.08597125399144154095.66189972272175764097.23784360811211124098.81380473002245684100.38978490831269524101.96578596283272084103.54180971343261204105.11785797998248884106.6929254971234644108.26902823653208404109.84516095031169364111.42132545829298804112.99752358033623604114.573757136291146884116.150027946011867524117.726337829372718724119.302688606213646084120.879082096394598404122.455520119775431044124.03200449626043524125.608537045546367364127.185119587646448644128.761753942376289924130.338441929575901444131.91518536915276164133.491986080824426244135.068845884583426564136.645766600252458244138.222750047671685124139.798807667441141284141.37597099195774964142.9532295589509444144.53058058354321924146.10802128113198644147.68554886694125294149.2631605562382374150.8408535642557604152.4186251062740944153.9964723975529024155.5743926533421884157.1523830889218524158.7304409195316844160.3085633604417194161.8867476269218224163.4649909342119824165.0432904975821364166.621643532322294168.2000472536123124169.7784988767925224171.3569956170927254172.9355346897827514174.5131046216425544176.0917199822728394177.6703693228430684179.2490498586229114180.8277588048624694182.4064933768319344183.9852507897916204185.5640282589915334187.1428229996912724188.7216322271710914190.300453156679684191.8792830034610804193.458118982816224195.0369583099519594196.6157982001620104198.1946358687119284199.7734685308518484201.3522934018318004202.9311076969319414204.509908631428304206.0886934205139924207.6664504900648894209.2451946489856084210.8239143100861014212.4026066886463404213.9812689999164274215.5598984591665514217.1384922816464894218.7170476826262374220.2955618773557054221.874032081160324223.4524555091370694225.0308293766973294226.6091508990568474228.1741508990558124229.7391508990547424231.3041508990539294232.8691508990532464234.4341508990529734235.9991508990526204237.5641508990522964239.1291508990522144240.6941508990522214242.2581508990521124243.8231508990517874245.3881508990515944246.9531508990515934248.5181508990516044250.0831508990514174251.6481508990512644253.2131508990512294254.7781508990513074256.3431508990513034257.9081508990512474259.4731508990512324261.0381508990512254262.6031508990511734264.1681508990510664265.733150899059894267.298150899058844268.863150899058264270.428150899057654271.993150899058194273.558150899059084275.122150899059594276.687150899059334278.252150899059034279.817150899058624281.382150899057854282.947150899056924284.512150899055674286.077150899054054287.642150899053004289.207150899052934290.772150899053444292.337150899053234293.902150899053344295.467150899053434297.032150899052954298.597150899052644300.162150899052514301.727150899052304303.292150899052164304.857150899051704306.422150899051454307.987150899051454309.551150899051454311.116150899051624312.681150899051904314.246150899051734315.811150899051594317.376150899051564318.941150899051604320.506150899051664322.071150899051904323.636150899052164325.201150899052684326.766150899052984328.331150899053664329.896150899054424331.461150899054404333.026150899053104334.591150899052844336.156150899052604337.721150899052804339.286150899052954340.851150899052304342.415150899052304343.980150899052054345.545150899052034347.110150899052294348.675150899052244350.240150899052134351.805150899052424353.370150899052434354.935150899052304356.500150899052054358.065150899051884359.630150899051504361.195150899051804362.760150899052094364.325150899052184365.890150899052284367.455150899052754369.020150899053264370.585150899053364372.150150899053274373.715150899052704375.280150899052374376.844150899053174378.409150899052974379.974150899052924381.539150899052824383.104150899052654384.669150899052444386.234150899052544387.799150899052424389.364150899052454390.929150899052824392.494150899052724394.059150899052614395.624150899052674397.189150899052964398.754150899053114400.319150899053594401.884150899054974403.449150899055744405.014150899055514406.579150899054734408.144150899054054409.708150899054194411.273150899053884412.838150899053834414.403150899053944415.968150899054384417.533150899055834419.098150899057054420.663150899057364422.228150899057364423.793150899057994425.358150899058824426.923150899058654428.488150899058204430.053150899058154431.618150899059104433.183150899059594434.748150899059464436.313150899059554437.878150899059504439.443150899059824441.0081508990510304442.5731508990511274444.1371508990512184445.7021508990513054447.2671508990513634448.8321508990515324450.3971508990516944451.9621508990518844453.5271508990521564455.0921508990526564456.6571508990533284458.2221508990538274459.7871508990539694461.3521508990540554462.9171508990542624464.4821508990544944466.0471508990545014467.6121508990544044469.1771508990543164470.7421508990542904472.3071508990542324473.8721508990542154475.4371508990544434477.0011508990548384478.5661508990549204480.1311508990542944481.6961508990534374483.2611508990530964484.8261508990533124486.3911508990534264487.9561508990530854489.5211508990527504491.0861508990526964492.6511508990529204494.2161508990531194495.7811508990533224497.3461508990534634498.9111508990533134500.4761508990531844502.0411508990532174503.6061508990532404505.1711508990532884506.7361508990535824508.301150899053963
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.9[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Searching   : /galaxy/server/database/jobs_directory/000/114/working/multiqc_WDir[INFO   ]  custom_content : section_0: Found 2 samples (linegraph)[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #5)" name="4" time="46.558674812316895">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.9[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Report title: Title of the report[INFO   ]         multiqc : Searching   : /galaxy/server/database/jobs_directory/000/117/working/multiqc_WDir[INFO   ]          fastqc : Found 2 reports[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : Plots       : report_plots[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc (Test #6)" name="5" time="34.0082631111145">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [WARNING]         multiqc : MultiQC Version v1.14 now available![INFO   ]         multiqc : This is MultiQC v1.9[INFO   ]         multiqc : Template    : default[INFO   ]         multiqc : Report title: Title of the report[INFO   ]         multiqc : Searching   : /galaxy/server/database/jobs_directory/000/119/working/multiqc_WDir[INFO   ]          pycoqc : Found 1 reports[INFO   ]         multiqc : Compressing plot data[INFO   ]         multiqc : Report      : report.html[INFO   ]         multiqc : Data        : report_data[INFO   ]         multiqc : MultiQC complete
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/mummer_mummerplot/mummer_mummerplot (Test #1)" name="0" time="40.161627531051636">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file /galaxy/server/database/objects/1/8/e/dataset_18e65fe8-e5c9-4de5-b3b8-b83ea2cd689b.datWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/mummer_nucmer/mummer_nucmer (Test #1)" name="0" time="128.14298748970032">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #1)" name="0" time="94.76827549934387">
        
            
            <system-out><![CDATA[
            [x-axis]where = top[hic_section_1_0]file = 1_0.h5file_type = hic_matrixtitle = Kc DpnII (Li et al. 2015)depth = 200000colormap = RdYlBu_rtransform = log1pscale_factor = 1.0rasterize = true[tads_1_0]file = /galaxy/server/database/objects/a/c/1/dataset_ac1e5950-f833-4a39-a0e4-b5e78013bbe0.datfile_type = domainsborder_color = blackcolor = noneoverlay_previous = share-y[spacer]height = 0.05[chrom states_3]file = /galaxy/server/database/objects/f/c/7/dataset_fc738b70-3383-471b-87b7-20ba84839194.dattitle = TAD statecolor = bed_rgbborder_color = #000000display = collapsedheight = 0.5line_width = 0.5file_type = bed[bedgraph_matrix_4]file = /galaxy/server/database/objects/9/1/e/dataset_91ec5db8-ec3e-4fd8-a1c8-b0dba73f0403.dattitle = TAD separation score (Ramirez et al.)height = 10.0type = matrixfile_type = bedgraph_matrixcolormap = viridis[spacer]height = 1.0[bedgraph_6]file = /galaxy/server/database/objects/b/3/3/dataset_b33e482a-18d3-4e72-8e7d-9923cb6a0ae0.dattitle = bedgraphcolor = bluealpha = 1.0height = 4.0show_data_range = falsegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloverlay_previous = no[bigwig_7]file = /galaxy/server/database/objects/8/0/4/dataset_804fd31a-cccf-4fcc-ba30-ecc5c8e52c05.dattitle = rep 1 test fillcolor = bluealpha = 1.0height = 4.0summary_method = meannans_to_zeros = falsetype = fillshow_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = no[bigwig_8]file = /galaxy/server/database/objects/8/0/4/dataset_804fd31a-cccf-4fcc-ba30-ecc5c8e52c05.dattitle = rep 1 test linecolor = redalpha = 1.0height = 4.0summary_method = meannans_to_zeros = falsetype = line:1.0show_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = no[bigwig_9]file = /galaxy/server/database/objects/8/0/4/dataset_804fd31a-cccf-4fcc-ba30-ecc5c8e52c05.dattitle = rep 1 test lw=0.2color = redalpha = 1.0height = 4.0summary_method = meannans_to_zeros = falsetype = line:0.1show_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = no[bigwig_10]file = /galaxy/server/database/objects/8/0/4/dataset_804fd31a-cccf-4fcc-ba30-ecc5c8e52c05.dattitle = rep 1 test point:0.5color = blackalpha = 1.0height = 4.0summary_method = meannans_to_zeros = falsetype = points:0.5show_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = no[spacer]height = 0.5[genes_12_0]file = /galaxy/server/database/objects/e/9/1/dataset_e91f30d3-6473-4d7b-bda9-ff7fd712601d.dattitle = genescolor = #000000border_color = #000000style = flybaseheight_utr = 1.0color_utr = greyarrowhead_included = falsedisplay = stackedheight = 5.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedfontsize = 10global_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[spacer]height = 1.0[genes_14_0]file = /galaxy/server/database/objects/e/9/1/dataset_e91f30d3-6473-4d7b-bda9-ff7fd712601d.dattitle = max num rows 3color = #000000border_color = #000000style = flybaseheight_utr = 1.0color_utr = greyarrowhead_included = falsedisplay = stackedheight = 3.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedfontsize = 8gene_rows = 3global_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[spacer]height = 1.0[genes_16_0]file = /galaxy/server/database/objects/8/3/6/dataset_8369e82f-fe6e-42bc-b5aa-a7fcb1e669c1.dattitle = bed6 global max rowcolor = #000000border_color = #000000style = flybaseheight_utr = 1.0color_utr = greyarrowhead_included = falsedisplay = stackedheight = 20.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedfontsize = 10global_max_row = truemax_labels = 60line_width = 0.5overlay_previous = no[vlines_17]file = /galaxy/server/database/objects/a/c/1/dataset_ac1e5950-f833-4a39-a0e4-b5e78013bbe0.datline_width = 0.5type = vlines
            ]]></system-out>
            <system-err><![CDATA[
              0%|          | 0/11 [00:00<?, ?it/s]100%|██████████| 11/11 [00:00<00:00, 12564.64it/s]INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [hic_section_1_0]WARNING:hicmatrix.HiCMatrix:Bin size is not homogeneous.                                       Median 1889INFO:pygenometracks.tracksClass:initialize 3. [tads_1_0]  0%|          | 0/12 [00:00<?, ?it/s]100%|██████████| 12/12 [00:00<00:00, 16889.81it/s]INFO:pygenometracks.tracksClass:initialize 4. [spacer]INFO:pygenometracks.tracksClass:initialize 5. [chrom states_3]  0%|          | 0/12 [00:00<?, ?it/s]100%|██████████| 12/12 [00:00<00:00, 15434.42it/s]INFO:pygenometracks.tracksClass:initialize 6. [bedgraph_matrix_4]  0%|          | 0/718 [00:00<?, ?it/s]100%|██████████| 718/718 [00:00<00:00, 30682.73it/s]INFO:pygenometracks.tracksClass:initialize 7. [spacer]INFO:pygenometracks.tracksClass:initialize 8. [bedgraph_6]  0%|          | 0/1380 [00:00<?, ?it/s]100%|██████████| 1380/1380 [00:00<00:00, 30781.59it/s]INFO:pygenometracks.tracksClass:initialize 9. [bigwig_7]INFO:pygenometracks.tracksClass:initialize 10. [bigwig_8]INFO:pygenometracks.tracksClass:initialize 11. [bigwig_9]INFO:pygenometracks.tracksClass:initialize 12. [bigwig_10]INFO:pygenometracks.tracksClass:initialize 13. [spacer]INFO:pygenometracks.tracksClass:initialize 14. [genes_12_0]  0%|          | 0/45 [00:00<?, ?it/s]100%|██████████| 45/45 [00:00<00:00, 18274.95it/s]INFO:pygenometracks.tracksClass:initialize 15. [spacer]INFO:pygenometracks.tracksClass:initialize 16. [genes_14_0]  0%|          | 0/45 [00:00<?, ?it/s]100%|██████████| 45/45 [00:00<00:00, 19287.11it/s]INFO:pygenometracks.tracksClass:initialize 17. [spacer]INFO:pygenometracks.tracksClass:initialize 18. [genes_16_0]  0%|          | 0/334 [00:00<?, ?it/s]100%|██████████| 334/334 [00:00<00:00, 27999.47it/s]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:1.9516470432281494DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 75.0031162937345. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [hic_section_1_0]INFO:pygenometracks.tracks.GenomeTrack:setting min, max values for track 2. [hic_section_1_0] to: 1.0, 221.45366637097922INFO:pygenometracks.tracksClass:plotting 3. [tads_1_0]INFO:pygenometracks.tracksClass:plotting 4. [spacer]INFO:pygenometracks.tracksClass:plotting 5. [chrom states_3]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 1.08,-0.08INFO:pygenometracks.tracksClass:plotting 6. [bedgraph_matrix_4]INFO:pygenometracks.tracksClass:plotting 7. [spacer]INFO:pygenometracks.tracksClass:plotting 8. [bedgraph_6]INFO:pygenometracks.tracksClass:plotting 9. [bigwig_7]INFO:pygenometracks.tracksClass:plotting 10. [bigwig_8]INFO:pygenometracks.tracksClass:plotting 11. [bigwig_9]INFO:pygenometracks.tracksClass:plotting 12. [bigwig_10]INFO:pygenometracks.tracksClass:plotting 13. [spacer]INFO:pygenometracks.tracksClass:plotting 14. [genes_12_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 21.78,-0.08INFO:pygenometracks.tracksClass:plotting 15. [spacer]INFO:pygenometracks.tracksClass:plotting 16. [genes_14_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 7.9799999999999995,-0.08INFO:pygenometracks.tracksClass:plotting 17. [spacer]INFO:pygenometracks.tracksClass:plotting 18. [genes_16_0]DEBUG:pygenometracks.tracks.GenomeTrack:max number of rows set to {'chrX': 16}DEBUG:pygenometracks.tracks.GenomeTrack:ylim 37.879999999999995,-0.08
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #2)" name="1" time="18.56568145751953">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 18.56568145751953, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks", "tool_version": "3.6"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #11)" name="10" time="37.68689012527466">
        
            
            <system-out><![CDATA[
            [x-axis]where = top[hic_section_1_0]file = 1_0.h5file_type = hic_matrixtitle = Kc DpnII (Li et al. 2015)depth = 100000colormap = RdYlBu_rtransform = log1pshow_masked_bins = truescale_factor = 2.0rasterize = true[spacer]height = 0.05[bedgraph_matrix_3]file = /galaxy/server/database/objects/1/e/4/dataset_1e479b95-5f78-490f-8172-537da71c2a0e.dattitle = TAD separation score (Ramirez et al.)height = 10.0type = linesfile_type = bedgraph_matrixshow_data_range = trueplot_horizontal_lines = truepos_score_in_bin = block[bedgraph_matrix_4]file = /galaxy/server/database/objects/1/e/4/dataset_1e479b95-5f78-490f-8172-537da71c2a0e.dattitle = TAD separation score (Ramirez et al.)height = 10.0type = linesfile_type = bedgraph_matrixshow_data_range = falseplot_horizontal_lines = falsepos_score_in_bin = center
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [hic_section_1_0]WARNING:hicmatrix.HiCMatrix:Bin size is not homogeneous.                                       Median 1843INFO:pygenometracks.tracksClass:initialize 3. [spacer]INFO:pygenometracks.tracksClass:initialize 4. [bedgraph_matrix_3]  0%|          | 0/248 [00:00<?, ?it/s]100%|██████████| 248/248 [00:00<00:00, 32675.36it/s]INFO:pygenometracks.tracksClass:initialize 5. [bedgraph_matrix_4]  0%|          | 0/248 [00:00<?, ?it/s]100%|██████████| 248/248 [00:00<00:00, 31353.61it/s]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:1.3673169612884521DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 34.98746332643692. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [hic_section_1_0]INFO:pygenometracks.tracks.GenomeTrack:setting min, max values for track 2. [hic_section_1_0] to: 5.280204679651788, 401.67185920883367INFO:pygenometracks.tracksClass:plotting 3. [spacer]INFO:pygenometracks.tracksClass:plotting 4. [bedgraph_matrix_3]INFO:pygenometracks.tracksClass:plotting 5. [bedgraph_matrix_4]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #12)" name="11" time="74.50771045684814">
        
            
            <system-out><![CDATA[
            [x-axis]where = top[hic_section_1_0]file = 1_0.h5file_type = hic_matrixtitle = Kc DpnII (Li et al. 2015)depth = 190000colormap = Purplestransform = noscale_factor = 1.0rasterize = true[links_2]file = /galaxy/server/database/objects/a/d/b/dataset_adbfe17c-055e-429f-a227-0e02865cf020.datheight = 1.5color = redalpha = 1.0line_width = 10.0line_style = solidlinks_type = loopscompact_arcs_level = 0use_middle = falseoverlay_previous = share-yfile_type = links[links_3]file = /galaxy/server/database/objects/a/d/b/dataset_adbfe17c-055e-429f-a227-0e02865cf020.dattitle = test.arcsheight = 5.0max_value = 5.0color = hotalpha = 1.0line_width = 0.5line_style = solidlinks_type = arcscompact_arcs_level = 0use_middle = falseorientation = invertedoverlay_previous = nofile_type = links
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [hic_section_1_0]WARNING:hicmatrix.HiCMatrix:Bin size is not homogeneous.                                       Median 1889INFO:pygenometracks.tracksClass:initialize 3. [links_2]  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 8283.68it/s]INFO:pygenometracks.tracksClass:initialize 4. [links_3]  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 4205.52it/s]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:1.5523381233215332DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 18.39367526649805. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [hic_section_1_0]INFO:pygenometracks.tracks.GenomeTrack:setting min, max values for track 2. [hic_section_1_0] to: 0.0, 211.1892663148672INFO:pygenometracks.tracksClass:plotting 3. [links_2]DEBUG:pygenometracks.tracks.GenomeTrack:3 were links plottedINFO:pygenometracks.tracksClass:plotting 4. [links_3]DEBUG:pygenometracks.tracks.GenomeTrack:3 were links plotted
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #13)" name="12" time="26.369868993759155">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "image_file_format": "png",  "region": "chrX:3000000-3300000",  "tracks_0|track_file_style_conditional|color_link|color": "#000000",  "tracks_0|track_file_style_conditional|color_link|color_link_select": "manually",  "tracks_0|track_file_style_conditional|title": "default",  "tracks_0|track_file_style_conditional|track_file_style_selector": "link_track_option",  "tracks_0|track_file_style_conditional|track_input_link": {   "id": "bb4a16af688eef49",   "src": "hda"  },  "tracks_1|track_file_style_conditional|color_link|color": "#000000",  "tracks_1|track_file_style_conditional|color_link|color_link_select": "manually",  "tracks_1|track_file_style_conditional|title": "ylim 20kb",  "tracks_1|track_file_style_conditional|track_file_style_selector": "link_track_option",  "tracks_1|track_file_style_conditional|track_input_link": {   "id": "bb4a16af688eef49",   "src": "hda"  },  "tracks_1|track_file_style_conditional|ylim": "20000",  "tracks_2|track_file_style_conditional|color_link|color": "#000000",  "tracks_2|track_file_style_conditional|color_link|color_link_select": "manually",  "tracks_2|track_file_style_conditional|compact_arcs_level": "1",  "tracks_2|track_file_style_conditional|title": "compacted",  "tracks_2|track_file_style_conditional|track_file_style_selector": "link_track_option",  "tracks_2|track_file_style_conditional|track_input_link": {   "id": "bb4a16af688eef49",   "src": "hda"  },  "tracks_3|track_file_style_conditional|color_link|color": "#000000",  "tracks_3|track_file_style_conditional|color_link|color_link_select": "manually",  "tracks_3|track_file_style_conditional|compact_arcs_level": "2",  "tracks_3|track_file_style_conditional|title": "highly compacted",  "tracks_3|track_file_style_conditional|track_file_style_selector": "link_track_option",  "tracks_3|track_file_style_conditional|track_input_link": {   "id": "bb4a16af688eef49",   "src": "hda"  } }, "job": {  "command_line": "sed \u0027/^$/d\u0027 \u0027/galaxy/server/database/jobs_directory/000/381/configs/tmpoq8gys9p\u0027 \u0026\u0026 pyGenomeTracks --tracks \u0027/galaxy/server/database/jobs_directory/000/381/configs/tmpoq8gys9p\u0027 --region \u0027chrX:3000000-3300000\u0027 --width 40.0 --fontSize 12 --dpi 72 --trackLabelFraction 0.05 --trackLabelHAlign left --outFileName plot.png  \u0026\u0026 mv plot.png plot",  "command_version": null,  "create_time": "2023-02-07T22:41:29.673268",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-l9dt2",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "83e681845c0ef2a6",  "inputs": {   "tracks_0|track_input_link": {    "id": "bb4a16af688eef49",    "src": "hda",    "uuid": "a4602d42-4ef6-4e97-a04c-8d6f631d796c"   },   "tracks_1|track_input_link": {    "id": "bb4a16af688eef49",    "src": "hda",    "uuid": "a4602d42-4ef6-4e97-a04c-8d6f631d796c"   },   "tracks_2|track_input_link": {    "id": "bb4a16af688eef49",    "src": "hda",    "uuid": "a4602d42-4ef6-4e97-a04c-8d6f631d796c"   },   "tracks_3|track_input_link": {    "id": "bb4a16af688eef49",    "src": "hda",    "uuid": "a4602d42-4ef6-4e97-a04c-8d6f631d796c"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "81c67553647b1545",    "src": "hda",    "uuid": "53ca2abc-5506-4802-b0fd-9fe6de48b763"   }  },  "params": {   "__input_ext": "\"bed\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "global_args": "{\"decreasingXAxis\": \"false\", \"dpi\": \"72\", \"fontsize\": \"12\", \"height\": \"\", \"plotWidth\": \"\", \"title\": \"\", \"trackLabelFraction\": \"0.05\", \"trackLabelHAlign\": \"left\", \"width\": \"40.0\"}",   "image_file_format": "\"png\"",   "region": "\"chrX:3000000-3300000\"",   "tracks": "[{\"__index__\": 0, \"track_file_style_conditional\": {\"__current_case__\": 3, \"alpha\": \"1.0\", \"color_link\": {\"__current_case__\": 0, \"color\": \"#000000\", \"color_link_select\": \"manually\"}, \"compact_arcs_level\": \"0\", \"height\": \"1.5\", \"invert_orientation\": \"false\", \"line_style\": \"solid\", \"line_width\": \"0.5\", \"links_type\": \"arcs\", \"max_value\": \"\", \"min_value\": \"\", \"overlay_select\": \"no\", \"spacer_height\": \"\", \"title\": \"default\", \"track_file_style_selector\": \"link_track_option\", \"track_input_link\": {\"values\": [{\"id\": 590, \"src\": \"hda\"}]}, \"use_middle\": \"false\", \"ylim\": \"\"}}, {\"__index__\": 1, \"track_file_style_conditional\": {\"__current_case__\": 3, \"alpha\": \"1.0\", \"color_link\": {\"__current_case__\": 0, \"color\": \"#000000\", \"color_link_select\": \"manually\"}, \"compact_arcs_level\": \"0\", \"height\": \"1.5\", \"invert_orientation\": \"false\", \"line_style\": \"solid\", \"line_width\": \"0.5\", \"links_type\": \"arcs\", \"max_value\": \"\", \"min_value\": \"\", \"overlay_select\": \"no\", \"spacer_height\": \"\", \"title\": \"ylim 20kb\", \"track_file_style_selector\": \"link_track_option\", \"track_input_link\": {\"values\": [{\"id\": 590, \"src\": \"hda\"}]}, \"use_middle\": \"false\", \"ylim\": \"20000.0\"}}, {\"__index__\": 2, \"track_file_style_conditional\": {\"__current_case__\": 3, \"alpha\": \"1.0\", \"color_link\": {\"__current_case__\": 0, \"color\": \"#000000\", \"color_link_select\": \"manually\"}, \"compact_arcs_level\": \"1\", \"height\": \"1.5\", \"invert_orientation\": \"false\", \"line_style\": \"solid\", \"line_width\": \"0.5\", \"links_type\": \"arcs\", \"max_value\": \"\", \"min_value\": \"\", \"overlay_select\": \"no\", \"spacer_height\": \"\", \"title\": \"compacted\", \"track_file_style_selector\": \"link_track_option\", \"track_input_link\": {\"values\": [{\"id\": 590, \"src\": \"hda\"}]}, \"use_middle\": \"false\", \"ylim\": \"\"}}, {\"__index__\": 3, \"track_file_style_conditional\": {\"__current_case__\": 3, \"alpha\": \"1.0\", \"color_link\": {\"__current_case__\": 0, \"color\": \"#000000\", \"color_link_select\": \"manually\"}, \"compact_arcs_level\": \"2\", \"height\": \"1.5\", \"invert_orientation\": \"false\", \"line_style\": \"solid\", \"line_width\": \"0.5\", \"links_type\": \"arcs\", \"max_value\": \"\", \"min_value\": \"\", \"overlay_select\": \"no\", \"spacer_height\": \"\", \"title\": \"highly compacted\", \"track_file_style_selector\": \"link_track_option\", \"track_input_link\": {\"values\": [{\"id\": 590, \"src\": \"hda\"}]}, \"use_middle\": \"false\", \"ylim\": \"\"}}]"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks/3.6",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:41:38.648879",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks/3.6, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks/3.6, exit_code: None, stderr: ." ], "status": "failure", "test_index": 12, "time_seconds": 26.369868993759155, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks", "tool_version": "3.6"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #14)" name="13" time="17.87010622024536">
        
            
            <system-out><![CDATA[
            [spacer]height = 1.0[scale_bar]title = defaultcolor = #000000alpha = 1.0line_width = 0.5where = leftfile_type = scalebar[spacer]height = 1.0[scale_bar]title = scalebar where = right x_center = 3200000 size = 100002 fontsize = 8 line_width =2 color = red alpha = 0.5color = redalpha = 0.5line_width = 2.0x_center = 3200000size = 100002where = rightfontsize = 8.0file_type = scalebar[spacer]height = 4.0
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [spacer]INFO:pygenometracks.tracksClass:initialize 2. [scale_bar]INFO:pygenometracks.tracksClass:initialize 3. [spacer]INFO:pygenometracks.tracksClass:initialize 4. [scale_bar]INFO:pygenometracks.tracksClass:initialize 5. [spacer]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.002141237258911133DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 7.446808510638299. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [spacer]INFO:pygenometracks.tracksClass:plotting 2. [scale_bar]INFO:pygenometracks.tracksClass:plotting 3. [spacer]INFO:pygenometracks.tracksClass:plotting 4. [scale_bar]INFO:pygenometracks.tracksClass:plotting 5. [spacer]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #15)" name="14" time="32.5822479724884">
        
            
            <system-out><![CDATA[
            [x-axis]where = bottom[genes_1_0]file = /galaxy/server/database/objects/a/7/e/dataset_a7eb65d5-b0fa-490f-863b-b51ad5807e4d.dattitle = flybasecolor = #000000border_color = #000000style = flybaseheight_utr = 1.0color_utr = greyarrowhead_included = falsedisplay = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[genes_2_0]file = /galaxy/server/database/objects/a/7/e/dataset_a7eb65d5-b0fa-490f-863b-b51ad5807e4d.dattitle = UCSCcolor = #000000border_color = #000000style = UCSCarrow_interval = 10display = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[genes_3_0]file = /galaxy/server/database/objects/a/7/e/dataset_a7eb65d5-b0fa-490f-863b-b51ad5807e4d.dattitle = tssarrowcolor = #000000border_color = #000000style = tssarrowheight_utr = 1.0color_utr = greydisplay = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[genes_4_0]file = /galaxy/server/database/objects/a/7/e/dataset_a7eb65d5-b0fa-490f-863b-b51ad5807e4d.dattitle = tssarrow 5kbcolor = #000000border_color = #000000style = tssarrowheight_utr = 1.0color_utr = greyarrow_length = 5000display = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [genes_1_0]  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 15463.82it/s]INFO:pygenometracks.tracksClass:initialize 3. [genes_2_0]  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 17156.96it/s]INFO:pygenometracks.tracksClass:initialize 4. [genes_3_0]  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 17413.38it/s]INFO:pygenometracks.tracksClass:initialize 5. [genes_4_0]  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 17464.14it/s]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.21535062789916992DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 44.547872340425535. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [genes_1_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 14.879999999999999,-0.08INFO:pygenometracks.tracksClass:plotting 3. [genes_2_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 14.879999999999999,-0.08INFO:pygenometracks.tracksClass:plotting 4. [genes_3_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 14.879999999999999,-0.08INFO:pygenometracks.tracksClass:plotting 5. [genes_4_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 14.879999999999999,-0.08
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #16)" name="15" time="34.4995059967041">
        
            
            <system-out><![CDATA[
            [bigwig_0]file = /galaxy/server/database/objects/e/4/6/dataset_e463d244-b3b2-4c0d-8f5c-04b56392a9e2.dattitle = (bigwig color=blue 2000 bins) overlayed with (bigwig mean color=red alpha = 0.5 max over 300 bins)color = #00b0f0alpha = 1.0height = 7.0summary_method = meannans_to_zeros = falsenumber_of_bins = 2000type = fillshow_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = no[bigwig_1]file = /galaxy/server/database/objects/e/4/6/dataset_e463d244-b3b2-4c0d-8f5c-04b56392a9e2.datcolor = #ff0000alpha = 0.5height = 1.5summary_method = meannans_to_zeros = falsenumber_of_bins = 300type = fillshow_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = share-y[x-axis]where = bottom
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [bigwig_0]INFO:pygenometracks.tracksClass:initialize 2. [bigwig_1]INFO:pygenometracks.tracksClass:initialize 3. [x-axis]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.00674891471862793DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 9.441489361702128. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [bigwig_0]INFO:pygenometracks.tracksClass:plotting 2. [bigwig_1]INFO:pygenometracks.tracksClass:plotting 3. [x-axis]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #17)" name="16" time="36.32011532783508">
        
            
            <system-out><![CDATA[
            [bedgraph_0]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = blue transform = nocolor = bluealpha = 1.0height = 5.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloverlay_previous = no[bedgraph_1]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = blue transform = logcolor = bluealpha = 1.0height = 5.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = logy_axis_values = transformedlog_pseudocount = 0.0overlay_previous = no[bedgraph_2]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = red transform = log min_value = 1color = redalpha = 1.0height = 5.0min_value = 1.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = logy_axis_values = transformedlog_pseudocount = 0.0overlay_previous = no[bedgraph_3]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = green transform = log log_pseudocount = 2 min_value = 0color = greenalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = logy_axis_values = transformedlog_pseudocount = 2.0overlay_previous = no[bedgraph_4]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = green operation = log(2+file) min_value = 0.7color = greenalpha = 1.0height = 5.0min_value = 0.7show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloperation = log(2+file)overlay_previous = no[bedgraph_5]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = black transform = log2 log_pseudocount = 1 min_value = 0color = blackalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = log2y_axis_values = transformedlog_pseudocount = 1.0overlay_previous = no[bedgraph_6]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = black operation = log2(1+file) min_value = 0color = blackalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloperation = log2(1+file)overlay_previous = no[bedgraph_7]file = /galaxy/server/database/objects/a/2/5/dataset_a2576981-205a-4a46-a564-6223f157b284.dattitle = bedgraph color = black transform = log2 log_pseudocount = 1 min_value = 0 y_axis_values = originalcolor = blackalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = log2y_axis_values = originallog_pseudocount = 1.0overlay_previous = no[x-axis]where = bottom
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [bedgraph_0]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 30166.77it/s]INFO:pygenometracks.tracksClass:initialize 2. [bedgraph_1]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 30659.09it/s]INFO:pygenometracks.tracksClass:initialize 3. [bedgraph_2]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 30231.38it/s]INFO:pygenometracks.tracksClass:initialize 4. [bedgraph_3]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 29845.64it/s]INFO:pygenometracks.tracksClass:initialize 5. [bedgraph_4]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 29372.98it/s]INFO:pygenometracks.tracksClass:initialize 6. [bedgraph_5]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 30119.60it/s]INFO:pygenometracks.tracksClass:initialize 7. [bedgraph_6]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 30490.61it/s]INFO:pygenometracks.tracksClass:initialize 8. [bedgraph_7]  0%|          | 0/2016 [00:00<?, ?it/s] 34%|███▍      | 688/2016 [00:00<00:00, 5842.77it/s]100%|██████████| 2016/2016 [00:00<00:00, 12588.31it/s]INFO:pygenometracks.tracksClass:initialize 9. [x-axis]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:1.5047216415405273DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 44.547872340425535. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [bedgraph_0]INFO:pygenometracks.tracksClass:plotting 2. [bedgraph_1]INFO:pygenometracks.tracksClass:plotting 3. [bedgraph_2]INFO:pygenometracks.tracksClass:plotting 4. [bedgraph_3]INFO:pygenometracks.tracksClass:plotting 5. [bedgraph_4]INFO:pygenometracks.tracksClass:plotting 6. [bedgraph_5]INFO:pygenometracks.tracksClass:plotting 7. [bedgraph_6]INFO:pygenometracks.tracksClass:plotting 8. [bedgraph_7]INFO:pygenometracks.tracksClass:plotting 9. [x-axis]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #18)" name="17" time="38.33513903617859">
        
            
            <system-out><![CDATA[
            [x-axis]where = top[bedgraph_1]file = /galaxy/server/database/objects/c/9/3/dataset_c93fd189-00a9-4e61-90cb-8dd12bfbac89.dattitle = file summary_method = mean number_of_bins=20color = bluealpha = 1.0height = 4.0min_value = 0.0max_value = 30.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = fillsummary_method = meannumber_of_bins = 20overlay_previous = no[bedgraph_2]file = /galaxy/server/database/objects/2/5/1/dataset_251a29d1-35ff-4a2c-95a8-442d3334f78e.dattitle = second_file summary_method = meancolor = redalpha = 1.0height = 4.0min_value = 0.0max_value = 30.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = fillsummary_method = meanoverlay_previous = no[spacer]height = 0.5[bedgraph_3]file = /galaxy/server/database/objects/c/9/3/dataset_c93fd189-00a9-4e61-90cb-8dd12bfbac89.dattitle = operation = log1p(file) (no summary_method)color = bluealpha = 1.0height = 4.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloperation = log1p(file)overlay_previous = no[spacer]height = 0.5[bedgraph_4]file = /galaxy/server/database/objects/c/9/3/dataset_c93fd189-00a9-4e61-90cb-8dd12bfbac89.dattitle = operation = file - second_filecolor = bluealpha = 1.0negative_color = redheight = 8.0min_value = -30.0max_value = 30.0show_data_range = truegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloperation = file - second_filesecond_file = /galaxy/server/database/objects/2/5/1/dataset_251a29d1-35ff-4a2c-95a8-442d3334f78e.datoverlay_previous = no
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [bedgraph_1]  0%|          | 0/589 [00:00<?, ?it/s]100%|██████████| 589/589 [00:00<00:00, 32564.99it/s]INFO:pygenometracks.tracksClass:initialize 3. [bedgraph_2]  0%|          | 0/14367 [00:00<?, ?it/s] 21%|██        | 3018/14367 [00:00<00:00, 30174.56it/s] 41%|████      | 5830/14367 [00:00<00:00, 29524.83it/s] 60%|█████▉    | 8580/14367 [00:00<00:00, 28884.89it/s] 78%|███████▊  | 11255/14367 [00:00<00:00, 28207.81it/s] 96%|█████████▌| 13788/14367 [00:00<00:00, 27277.07it/s]100%|██████████| 14367/14367 [00:00<00:00, 23869.46it/s]INFO:pygenometracks.tracksClass:initialize 4. [spacer]INFO:pygenometracks.tracksClass:initialize 5. [bedgraph_3]  0%|          | 0/589 [00:00<?, ?it/s]100%|██████████| 589/589 [00:00<00:00, 34464.43it/s]INFO:pygenometracks.tracksClass:initialize 6. [spacer]INFO:pygenometracks.tracksClass:initialize 7. [bedgraph_4]WARNING:pygenometracks.tracks.GenomeTrack:When an operation is computed between 2 files a summary_method needs to be used. Will use mean.  0%|          | 0/589 [00:00<?, ?it/s]100%|██████████| 589/589 [00:00<00:00, 34801.86it/s]  0%|          | 0/14367 [00:00<?, ?it/s] 19%|█▉        | 2767/14367 [00:00<00:00, 27669.43it/s] 38%|███▊      | 5500/14367 [00:00<00:00, 27565.91it/s] 57%|█████▋    | 8222/14367 [00:00<00:00, 27458.79it/s] 76%|███████▌  | 10863/14367 [00:00<00:00, 27132.73it/s] 93%|█████████▎| 13419/14367 [00:00<00:00, 26640.65it/s]100%|██████████| 14367/14367 [00:00<00:00, 26782.96it/s]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:1.4941518306732178DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 24.335106382978726. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [bedgraph_1]INFO:pygenometracks.tracksClass:plotting 3. [bedgraph_2]INFO:pygenometracks.tracksClass:plotting 4. [spacer]INFO:pygenometracks.tracksClass:plotting 5. [bedgraph_3]INFO:pygenometracks.tracksClass:plotting 6. [spacer]INFO:pygenometracks.tracksClass:plotting 7. [bedgraph_4]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #19)" name="18" time="38.3994038105011">
        
            
            <system-out><![CDATA[
            [bedgraph_0]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = blue transform = nocolor = bluealpha = 1.0height = 5.0show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloverlay_previous = no[bedgraph_1]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = blue transform = logcolor = bluealpha = 1.0height = 5.0show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = logy_axis_values = transformedlog_pseudocount = 0.0overlay_previous = no[bedgraph_2]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = red transform = log min_value = 1color = redalpha = 1.0height = 5.0min_value = 1.0show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = logy_axis_values = transformedlog_pseudocount = 0.0overlay_previous = no[bedgraph_3]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = green transform = log log_pseudocount = 2 min_value = 0color = greenalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = logy_axis_values = transformedlog_pseudocount = 2.0overlay_previous = no[bedgraph_4]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = green operation = log(2+file) min_value = 0.7color = greenalpha = 1.0height = 5.0min_value = 0.7show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloperation = log(2+file)overlay_previous = no[bedgraph_5]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = black transform = log2 log_pseudocount = 1 min_value = 0color = blackalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = log2y_axis_values = transformedlog_pseudocount = 1.0overlay_previous = no[bedgraph_6]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = black operation = log2(1+file) min_value = 0color = blackalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filloperation = log2(1+file)overlay_previous = no[bedgraph_7]file = /galaxy/server/database/objects/3/9/e/dataset_39eece4c-d422-4ebf-b7fb-34e2303012fb.dattitle = bedgraph color = black transform = log2 log_pseudocount = 1 min_value = 0 y_axis_values = originalcolor = blackalpha = 1.0height = 5.0min_value = 0.0show_data_range = truegrid = truenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = filltransform = log2y_axis_values = originallog_pseudocount = 1.0overlay_previous = no[x-axis]where = bottom
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [bedgraph_0]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 29612.76it/s]INFO:pygenometracks.tracksClass:initialize 2. [bedgraph_1]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 27839.31it/s]INFO:pygenometracks.tracksClass:initialize 3. [bedgraph_2]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 29694.92it/s]INFO:pygenometracks.tracksClass:initialize 4. [bedgraph_3]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 27100.27it/s]INFO:pygenometracks.tracksClass:initialize 5. [bedgraph_4]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 29819.43it/s]INFO:pygenometracks.tracksClass:initialize 6. [bedgraph_5]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 29359.01it/s]INFO:pygenometracks.tracksClass:initialize 7. [bedgraph_6]  0%|          | 0/2016 [00:00<?, ?it/s]100%|██████████| 2016/2016 [00:00<00:00, 29354.01it/s]INFO:pygenometracks.tracksClass:initialize 8. [bedgraph_7]  0%|          | 0/2016 [00:00<?, ?it/s] 34%|███▍      | 688/2016 [00:00<00:00, 5806.85it/s]100%|██████████| 2016/2016 [00:00<00:00, 12365.12it/s]INFO:pygenometracks.tracksClass:initialize 9. [x-axis]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:1.527845859527588DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 44.547872340425535. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [bedgraph_0]INFO:pygenometracks.tracksClass:plotting 2. [bedgraph_1]INFO:pygenometracks.tracksClass:plotting 3. [bedgraph_2]INFO:pygenometracks.tracksClass:plotting 4. [bedgraph_3]INFO:pygenometracks.tracksClass:plotting 5. [bedgraph_4]INFO:pygenometracks.tracksClass:plotting 6. [bedgraph_5]INFO:pygenometracks.tracksClass:plotting 7. [bedgraph_6]INFO:pygenometracks.tracksClass:plotting 8. [bedgraph_7]INFO:pygenometracks.tracksClass:plotting 9. [x-axis]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #20)" name="19" time="12.244882822036743">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 19, "time_seconds": 12.244882822036743, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks", "tool_version": "3.6"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #3)" name="2" time="25.079732656478882">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 25.079732656478882, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks", "tool_version": "3.6"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #21)" name="20" time="19.68035078048706">
        
            
            <system-out><![CDATA[
            [scale_bar]title = scalebar where = rightcolor = #000000alpha = 1.0line_width = 0.5where = leftfile_type = scalebar[spacer]height = 0.5[scale_bar]title = scalebar scalebar_start_position = 3200000color = #000000alpha = 1.0line_width = 0.5scalebar_start_position = 3200000where = leftfile_type = scalebar[spacer]height = 0.5[scale_bar]title = scalebar scalebar_start_position = 3200000 scalebar_end_position = 3250000color = #000000alpha = 1.0line_width = 0.5scalebar_start_position = 3250000where = leftfile_type = scalebar[spacer]height = 0.5[scale_bar]title = scalebar scalebar_start_position = 3200000 x_center = 3250000color = #000000alpha = 1.0line_width = 0.5x_center = 3250000scalebar_start_position = 3200000where = leftfile_type = scalebar[spacer]height = 0.5[scale_bar]title = scalebar scalebar_start_position = 3200000 size = 50000color = #000000alpha = 1.0line_width = 0.5size = 50000scalebar_start_position = 3200000where = leftfile_type = scalebar[spacer]height = 0.5[scale_bar]title = scalebar scalebar_end_position = 3200000 size = 50000color = #000000alpha = 1.0line_width = 0.5size = 50000scalebar_end_position = 3200000where = leftfile_type = scalebar[spacer]height = 0.5[x-axis]where = bottom
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [scale_bar]INFO:pygenometracks.tracksClass:initialize 2. [spacer]INFO:pygenometracks.tracksClass:initialize 3. [scale_bar]INFO:pygenometracks.tracksClass:initialize 4. [spacer]INFO:pygenometracks.tracksClass:initialize 5. [scale_bar]INFO:pygenometracks.tracksClass:initialize 6. [spacer]INFO:pygenometracks.tracksClass:initialize 7. [scale_bar]INFO:pygenometracks.tracksClass:initialize 8. [spacer]INFO:pygenometracks.tracksClass:initialize 9. [scale_bar]INFO:pygenometracks.tracksClass:initialize 10. [spacer]INFO:pygenometracks.tracksClass:initialize 11. [scale_bar]INFO:pygenometracks.tracksClass:initialize 12. [spacer]INFO:pygenometracks.tracksClass:initialize 13. [x-axis]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.0034830570220947266DEBUG:pygenometracks.tracksClass:Figure size in cm is 19.806493506493506 x 8.377659574468085. Dpi is set to 20INFO:pygenometracks.tracksClass:plotting 1. [scale_bar]INFO:pygenometracks.tracksClass:plotting 2. [spacer]INFO:pygenometracks.tracksClass:plotting 3. [scale_bar]INFO:pygenometracks.tracksClass:plotting 4. [spacer]INFO:pygenometracks.tracksClass:plotting 5. [scale_bar]INFO:pygenometracks.tracksClass:plotting 6. [spacer]INFO:pygenometracks.tracksClass:plotting 7. [scale_bar]INFO:pygenometracks.tracksClass:plotting 8. [spacer]INFO:pygenometracks.tracksClass:plotting 9. [scale_bar]INFO:pygenometracks.tracksClass:plotting 10. [spacer]INFO:pygenometracks.tracksClass:plotting 11. [scale_bar]INFO:pygenometracks.tracksClass:plotting 12. [spacer]INFO:pygenometracks.tracksClass:plotting 13. [x-axis]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #4)" name="3" time="45.24066185951233">
        
            
            <system-out><![CDATA[
            [bigwig_0]file = /galaxy/server/database/objects/c/7/a/dataset_c7a6a74d-0e53-463f-9686-c018e3ed9227.dattitle = (bigwig color=blue 2000 bins) overlayed with (bigwig mean color=red alpha = 0.5 max over 300 bins)color = #00b0f0alpha = 1.0height = 7.0summary_method = meannans_to_zeros = falsenumber_of_bins = 2000type = fillshow_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = no[bigwig_1]file = /galaxy/server/database/objects/c/7/a/dataset_c7a6a74d-0e53-463f-9686-c018e3ed9227.datcolor = #ff0000alpha = 0.5height = 1.5summary_method = meannans_to_zeros = falsenumber_of_bins = 300type = fillshow_data_range = falsegrid = falsefile_type = bigwigoverlay_previous = share-y[x-axis]where = bottom
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [bigwig_0]INFO:pygenometracks.tracksClass:initialize 2. [bigwig_1]INFO:pygenometracks.tracksClass:initialize 3. [x-axis]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.006154298782348633DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 9.441489361702128. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [bigwig_0]INFO:pygenometracks.tracksClass:plotting 2. [bigwig_1]INFO:pygenometracks.tracksClass:plotting 3. [x-axis]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #5)" name="4" time="17.156819820404053">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 17.156819820404053, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks", "tool_version": "3.6"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #6)" name="5" time="33.49907350540161">
        
            
            <system-out><![CDATA[
            [narrow_peak_0_0]file = /galaxy/server/database/objects/8/a/c/dataset_8ac8d74e-6159-4aa2-a2f3-888ee6070930.dattitle = boxcolor = #9bbb59type = boxuse_summit = trueheight = 4.0line_width = 1.0show_labels = truefile_type = narrow_peakoverlay_previous = no[narrow_peak_1_0]file = /galaxy/server/database/objects/8/a/c/dataset_8ac8d74e-6159-4aa2-a2f3-888ee6070930.dattitle = box line_width = 2color = #9bbb59type = boxuse_summit = trueheight = 4.0line_width = 2.0show_labels = truefile_type = narrow_peakoverlay_previous = no[narrow_peak_2_0]file = /galaxy/server/database/objects/8/a/c/dataset_8ac8d74e-6159-4aa2-a2f3-888ee6070930.dattitle = peak width 3color = #c0504dtype = peakuse_summit = trueshow_data_range = truewidth_adjust = 3.0max_value = 50.0height = 4.0line_width = 1.0show_labels = falsefile_type = narrow_peakoverlay_previous = no[spacer]height = 0.5[narrow_peak_3_0]file = /galaxy/server/database/objects/8/a/c/dataset_8ac8d74e-6159-4aa2-a2f3-888ee6070930.dattitle = peak no data rangecolor = #000000type = peakuse_summit = falseshow_data_range = falsewidth_adjust = 1.5height = 4.0line_width = 1.0show_labels = truefile_type = narrow_peakoverlay_previous = no[x-axis]where = bottom
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [narrow_peak_0_0]  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 6678.83it/s]INFO:pygenometracks.tracksClass:initialize 2. [narrow_peak_1_0]  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 7923.75it/s]INFO:pygenometracks.tracksClass:initialize 3. [narrow_peak_2_0]  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 8294.60it/s]INFO:pygenometracks.tracksClass:initialize 4. [spacer]INFO:pygenometracks.tracksClass:initialize 5. [narrow_peak_3_0]  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 3862.16it/s]INFO:pygenometracks.tracksClass:initialize 6. [x-axis]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.17332816123962402DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 19.547872340425535. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [narrow_peak_0_0]INFO:pygenometracks.tracksClass:plotting 2. [narrow_peak_1_0]INFO:pygenometracks.tracksClass:plotting 3. [narrow_peak_2_0]INFO:pygenometracks.tracksClass:plotting 4. [spacer]INFO:pygenometracks.tracksClass:plotting 5. [narrow_peak_3_0]INFO:pygenometracks.tracksClass:plotting 6. [x-axis]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #7)" name="6" time="11.393381357192993">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 11.393381357192993, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks", "tool_version": "3.6"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #8)" name="7" time="32.62888550758362">
        
            
            <system-out><![CDATA[
            [x-axis]where = top[genes_1_0]file = /galaxy/server/database/objects/6/9/e/dataset_69e04834-8af8-474d-b621-2d8478475540.dattitle = dm3_genes.bedcolor = #000000border_color = #000000style = UCSCarrow_interval = 2display = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = truemax_labels = 15line_width = 0.5overlay_previous = no[genes_2_0]file = /galaxy/server/database/objects/6/9/e/dataset_69e04834-8af8-474d-b621-2d8478475540.dattitle = genes.bed.gzcolor = #000000border_color = #000000style = UCSCarrow_interval = 10display = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = falsemax_labels = 60line_width = 2.0overlay_previous = no
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [genes_1_0]  0%|          | 0/2717 [00:00<?, ?it/s] 70%|██████▉   | 1900/2717 [00:00<00:00, 18995.44it/s]100%|██████████| 2717/2717 [00:00<00:00, 18807.79it/s]INFO:pygenometracks.tracksClass:initialize 3. [genes_2_0]  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 18188.66it/s]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.20502400398254395DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 23.27127659574468. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [genes_1_0]DEBUG:pygenometracks.tracks.GenomeTrack:max number of rows set to {'chrX': 35, 'chrXHet': 8}DEBUG:pygenometracks.tracks.GenomeTrack:ylim 81.58,-0.08INFO:pygenometracks.tracksClass:plotting 3. [genes_2_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 14.879999999999999,-0.08
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #9)" name="8" time="35.80164170265198">
        
            
            <system-out><![CDATA[
            [x-axis]where = top[genes_1_0]file = /galaxy/server/database/objects/1/3/d/dataset_13dc271e-3425-486b-ac20-a1a906ae43f3.datprefered_name = transcript_namemerge_transcripts = falsetitle = testcolor = #000000border_color = #000000style = flybaseheight_utr = 1.0color_utr = greyarrowhead_included = falsedisplay = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = gtfglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[spacer]height = 1.0[genes_2_0]file = /galaxy/server/database/objects/d/a/7/dataset_da78aeb6-8195-4bb2-9abb-3b41ea198ff5.dattitle = testcolor = redborder_color = #000000style = UCSCarrow_interval = 2display = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[spacer]height = 1.0[genes_3_0]file = /galaxy/server/database/objects/1/3/d/dataset_13dc271e-3425-486b-ac20-a1a906ae43f3.datprefered_name = transcript_namemerge_transcripts = falsetitle = testcolor = redborder_color = #000000style = flybaseheight_utr = 1.0color_utr = greyarrowhead_included = truedisplay = stackedheight = 10.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = gtfglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[spacer]height = 1.0[vlines_4]file = /galaxy/server/database/objects/d/a/7/dataset_da78aeb6-8195-4bb2-9abb-3b41ea198ff5.datline_width = 0.5type = vlines
            ]]></system-out>
            <system-err><![CDATA[
              0%|          | 0/8 [00:00<?, ?it/s]100%|██████████| 8/8 [00:00<00:00, 14152.02it/s]INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [genes_1_0]0 of 120 (0%)2 of 120 (1%)3 of 120 (2%)4 of 120 (3%)5 of 120 (4%)6 of 120 (5%)8 of 120 (6%)9 of 120 (7%)10 of 120 (8%)11 of 120 (9%)12 of 120 (10%)14 of 120 (11%)15 of 120 (12%)16 of 120 (13%)17 of 120 (14%)18 of 120 (15%)20 of 120 (16%)21 of 120 (17%)22 of 120 (18%)23 of 120 (19%)24 of 120 (20%)26 of 120 (21%)27 of 120 (22%)28 of 120 (23%)29 of 120 (24%)30 of 120 (25%)32 of 120 (26%)33 of 120 (27%)34 of 120 (28%)35 of 120 (29%)36 of 120 (30%)38 of 120 (31%)39 of 120 (32%)40 of 120 (33%)41 of 120 (34%)42 of 120 (35%)44 of 120 (36%)45 of 120 (37%)46 of 120 (38%)47 of 120 (39%)48 of 120 (40%)50 of 120 (41%)51 of 120 (42%)52 of 120 (43%)53 of 120 (44%)54 of 120 (45%)56 of 120 (46%)57 of 120 (47%)58 of 120 (48%)59 of 120 (49%)60 of 120 (50%)62 of 120 (51%)63 of 120 (52%)64 of 120 (53%)65 of 120 (54%)66 of 120 (55%)68 of 120 (56%)69 of 120 (57%)70 of 120 (58%)71 of 120 (59%)72 of 120 (60%)74 of 120 (61%)75 of 120 (62%)76 of 120 (63%)77 of 120 (64%)78 of 120 (65%)80 of 120 (66%)81 of 120 (67%)82 of 120 (68%)83 of 120 (69%)84 of 120 (70%)86 of 120 (71%)87 of 120 (72%)88 of 120 (73%)89 of 120 (74%)90 of 120 (75%)92 of 120 (76%)93 of 120 (77%)94 of 120 (78%)95 of 120 (79%)96 of 120 (80%)98 of 120 (81%)99 of 120 (82%)100 of 120 (83%)101 of 120 (84%)102 of 120 (85%)  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 1029.74it/s]INFO:pygenometracks.tracksClass:initialize 3. [spacer]INFO:pygenometracks.tracksClass:initialize 4. [genes_2_0]  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 23045.63it/s]INFO:pygenometracks.tracksClass:initialize 5. [spacer]INFO:pygenometracks.tracksClass:initialize 6. [genes_3_0]0 of 120 (0%)2 of 120 (1%)3 of 120 (2%)4 of 120 (3%)5 of 120 (4%)6 of 120 (5%)8 of 120 (6%)9 of 120 (7%)10 of 120 (8%)11 of 120 (9%)12 of 120 (10%)14 of 120 (11%)15 of 120 (12%)16 of 120 (13%)17 of 120 (14%)18 of 120 (15%)20 of 120 (16%)21 of 120 (17%)22 of 120 (18%)23 of 120 (19%)24 of 120 (20%)26 of 120 (21%)27 of 120 (22%)28 of 120 (23%)29 of 120 (24%)30 of 120 (25%)32 of 120 (26%)33 of 120 (27%)34 of 120 (28%)35 of 120 (29%)36 of 120 (30%)38 of 120 (31%)39 of 120 (32%)40 of 120 (33%)41 of 120 (34%)42 of 120 (35%)44 of 120 (36%)45 of 120 (37%)46 of 120 (38%)47 of 120 (39%)48 of 120 (40%)50 of 120 (41%)51 of 120 (42%)52 of 120 (43%)53 of 120 (44%)54 of 120 (45%)56 of 120 (46%)57 of 120 (47%)58 of 120 (48%)59 of 120 (49%)60 of 120 (50%)62 of 120 (51%)63 of 120 (52%)64 of 120 (53%)65 of 120 (54%)66 of 120 (55%)68 of 120 (56%)69 of 120 (57%)70 of 120 (58%)71 of 120 (59%)72 of 120 (60%)74 of 120 (61%)75 of 120 (62%)76 of 120 (63%)77 of 120 (64%)78 of 120 (65%)80 of 120 (66%)81 of 120 (67%)82 of 120 (68%)83 of 120 (69%)84 of 120 (70%)86 of 120 (71%)87 of 120 (72%)88 of 120 (73%)89 of 120 (74%)90 of 120 (75%)92 of 120 (76%)93 of 120 (77%)94 of 120 (78%)95 of 120 (79%)96 of 120 (80%)98 of 120 (81%)99 of 120 (82%)100 of 120 (83%)101 of 120 (84%)102 of 120 (85%)  0%|          | 0/30 [00:00<?, ?it/s]100%|██████████| 30/30 [00:00<00:00, 1026.99it/s]INFO:pygenometracks.tracksClass:initialize 7. [spacer]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.5862765312194824DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 37.101063829787236. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [genes_1_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 12.58,-0.08INFO:pygenometracks.tracksClass:plotting 3. [spacer]INFO:pygenometracks.tracksClass:plotting 4. [genes_2_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 12.58,-0.08INFO:pygenometracks.tracksClass:plotting 5. [spacer]INFO:pygenometracks.tracksClass:plotting 6. [genes_3_0]DEBUG:pygenometracks.tracks.GenomeTrack:ylim 12.58,-0.08INFO:pygenometracks.tracksClass:plotting 7. [spacer]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/pygenometracks/pygenomeTracks (Test #10)" name="9" time="37.74069595336914">
        
            
            <system-out><![CDATA[
            [x-axis]where = top[genes_1_0]file = /galaxy/server/database/objects/7/d/a/dataset_7dacb58b-ab7d-4624-9000-055d7ee7329f.dattitle = domains.bedcolor = yellowborder_color = #000000style = flybaseheight_utr = 1.0color_utr = greyarrowhead_included = falsedisplay = trianglesheight = 6.0labels = trueall_labels_inside = falselabels_in_margin = falsefile_type = bedglobal_max_row = falsemax_labels = 60line_width = 0.5overlay_previous = no[spacer]height = 1.0[bedgraph_2]file = /galaxy/server/database/objects/1/2/b/dataset_12b0cbe9-2b78-4b22-adac-057c0956acc1.dattitle = bedgraphcolor = bluealpha = 1.0height = 4.0show_data_range = falsegrid = falsenans_to_zeros = falseuse_middle = falsefile_type = bedgraphtype = line:0.5overlay_previous = no[bedgraph_3]file = /galaxy/server/database/objects/1/2/b/dataset_12b0cbe9-2b78-4b22-adac-057c0956acc1.dattitle = bedgraphcolor = bluealpha = 1.0height = 4.0show_data_range = falsegrid = falsenans_to_zeros = falseuse_middle = truefile_type = bedgraphtype = line:0.5overlay_previous = no
            ]]></system-out>
            <system-err><![CDATA[
            INFO:pygenometracks.tracksClass:initialize 1. [x-axis]INFO:pygenometracks.tracksClass:initialize 2. [genes_1_0]  0%|          | 0/4 [00:00<?, ?it/s]100%|██████████| 4/4 [00:00<00:00, 7653.84it/s]INFO:pygenometracks.tracksClass:initialize 3. [spacer]INFO:pygenometracks.tracksClass:initialize 4. [bedgraph_2]  0%|          | 0/268 [00:00<?, ?it/s]100%|██████████| 268/268 [00:00<00:00, 34161.18it/s]INFO:pygenometracks.tracksClass:initialize 5. [bedgraph_3]  0%|          | 0/268 [00:00<?, ?it/s]100%|██████████| 268/268 [00:00<00:00, 32808.17it/s]INFO:pygenometracks.tracksClass:time initializing track(s):INFO:pygenometracks.tracksClass:0.16500401496887207DEBUG:pygenometracks.tracksClass:Figure size in cm is 40.0 x 17.95212765957447. Dpi is set to 72INFO:pygenometracks.tracksClass:plotting 1. [x-axis]INFO:pygenometracks.tracksClass:plotting 2. [genes_1_0]INFO:pygenometracks.tracksClass:plotting 3. [spacer]INFO:pygenometracks.tracksClass:plotting 4. [bedgraph_2]INFO:pygenometracks.tracksClass:plotting 5. [bedgraph_3]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #1)" name="0" time="63.16846704483032">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "output_params|outSAMattributes": "All",  "output_params|outSAMstrandField": "intronMotif",  "output_params|output_select": "yes",  "params|settingsType": "default",  "refGenomeSource|geneSource": "history",  "refGenomeSource|genomeFastaFiles": {   "id": "7829d7ee202c4c2b",   "src": "hda"  },  "singlePaired|input1": {   "id": "61a08c3c4c2d09de",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "job": {  "command_line": "mkdir -p tempstargenomedir \u0026\u0026 STAR --runMode genomeGenerate --genomeDir \u0027tempstargenomedir\u0027 --genomeFastaFiles \u0027/galaxy/server/database/objects/2/3/6/dataset_2363e0c5-e38e-47a8-a414-24fb56d75ee8.dat\u0027 --runThreadN ${GALAXY_SLOTS:-4} \u0026\u0026  STAR --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir \u0027tempstargenomedir\u0027  --readFilesIn \u0027/galaxy/server/database/objects/1/7/4/dataset_1745a0c1-925d-467e-ab96-1c57e18da3b7.dat\u0027   --outSAMtype BAM SortedByCoordinate    --outSAMattributes All --outSAMstrandField intronMotif --outFilterIntronMotifs None",  "command_version": "",  "create_time": "2023-02-07T23:39:03.599428",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-z8b2h",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "8dec506c100fbf51",  "inputs": {   "genomeFastaFiles": {    "id": "7829d7ee202c4c2b",    "src": "hda",    "uuid": "2363e0c5-e38e-47a8-a414-24fb56d75ee8"   },   "input1": {    "id": "61a08c3c4c2d09de",    "src": "hda",    "uuid": "1745a0c1-925d-467e-ab96-1c57e18da3b7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "28.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "28 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675813175.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:39:35"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675813147.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:39:07"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "mapped_reads": {    "id": "e5dd0404804cd54a",    "src": "hda",    "uuid": "fd27ed54-e899-4704-9c70-47872ab4aa07"   },   "output_log": {    "id": "560794cfed746500",    "src": "hda",    "uuid": "fa924d1d-d5f7-4545-bbcf-6de8d908e7b0"   },   "splice_junctions": {    "id": "0524b0a3bd8c6da9",    "src": "hda",    "uuid": "dabcc31e-67e5-4ff3-b4a6-11546957035f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_params": "{\"__current_case__\": 0, \"outFilterIntronMotifs\": \"None\", \"outSAMattributes\": \"All\", \"outSAMstrandField\": \"intronMotif\", \"output_params2\": {\"__current_case__\": 1, \"output_select2\": \"no\"}, \"output_select\": \"yes\"}",   "params": "{\"__current_case__\": 0, \"settingsType\": \"default\"}",   "quantMode": "\"false\"",   "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 910, \"src\": \"hda\"}]}, \"sjdbGTFfile\": null, \"sjdbOverhang\": \"100\"}",   "singlePaired": "{\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 909, \"src\": \"hda\"}]}, \"sPaired\": \"single\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Feb 07 23:39:07 ..... started STAR run\nFeb 07 23:39:07 ... starting to generate Genome files\nFeb 07 23:39:07 ... starting to sort Suffix Array. This may take a long time...\nFeb 07 23:39:07 ... sorting Suffix Array chunks and saving them to disk...\nFeb 07 23:39:07 ... loading chunks from disk, packing SA...\nFeb 07 23:39:07 ... finished generating suffix array\nFeb 07 23:39:07 ... generating Suffix Array index\nFeb 07 23:39:14 ... completed Suffix Array index\nFeb 07 23:39:14 ... writing Genome to disk ...\nFeb 07 23:39:14 ... writing Suffix Array to disk ...\nFeb 07 23:39:14 ... writing SAindex to disk\nFeb 07 23:39:32 ..... finished successfully\nFeb 07 23:39:32 ..... started STAR run\nFeb 07 23:39:32 ..... loading genome\nFeb 07 23:39:33 ..... started mapping\nFeb 07 23:39:35 ..... started sorting BAM\nFeb 07 23:39:35 ..... finished successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2",  "tool_stderr": "",  "tool_stdout": "Feb 07 23:39:07 ..... started STAR run\nFeb 07 23:39:07 ... starting to generate Genome files\nFeb 07 23:39:07 ... starting to sort Suffix Array. This may take a long time...\nFeb 07 23:39:07 ... sorting Suffix Array chunks and saving them to disk...\nFeb 07 23:39:07 ... loading chunks from disk, packing SA...\nFeb 07 23:39:07 ... finished generating suffix array\nFeb 07 23:39:07 ... generating Suffix Array index\nFeb 07 23:39:14 ... completed Suffix Array index\nFeb 07 23:39:14 ... writing Genome to disk ...\nFeb 07 23:39:14 ... writing Suffix Array to disk ...\nFeb 07 23:39:14 ... writing SAindex to disk\nFeb 07 23:39:32 ..... finished successfully\nFeb 07 23:39:32 ..... started STAR run\nFeb 07 23:39:32 ..... loading genome\nFeb 07 23:39:33 ..... started mapping\nFeb 07 23:39:35 ..... started sorting BAM\nFeb 07 23:39:35 ..... finished successfully\n",  "traceback": null,  "update_time": "2023-02-07T23:39:46.515038",  "user_email": "tests@fake.org" }, "output_problems": [  "Output mapped_reads:  different than expected, difference (using sim_size):\n( /tmp/tmpqlt04jsernastar_test_mapped_reads.bam v. /tmp/tmpp6t_s3fkrnastar_test_mapped_reads.bam )\nFiles /tmp/tmpqlt04jsernastar_test_mapped_reads.bam=6447b but /tmp/tmpp6t_s3fkrnastar_test_mapped_reads.bam=7312b - compare by size (delta=634) failed" ], "status": "failure", "test_index": 0, "time_seconds": 63.16846704483032, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.5.2b-2"}
                ]]></error>
            
            <system-out><![CDATA[
            Feb 07 23:39:07 ..... started STAR runFeb 07 23:39:07 ... starting to generate Genome filesFeb 07 23:39:07 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:39:07 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:39:07 ... loading chunks from disk, packing SA...Feb 07 23:39:07 ... finished generating suffix arrayFeb 07 23:39:07 ... generating Suffix Array indexFeb 07 23:39:14 ... completed Suffix Array indexFeb 07 23:39:14 ... writing Genome to disk ...Feb 07 23:39:14 ... writing Suffix Array to disk ...Feb 07 23:39:14 ... writing SAindex to diskFeb 07 23:39:32 ..... finished successfullyFeb 07 23:39:32 ..... started STAR runFeb 07 23:39:32 ..... loading genomeFeb 07 23:39:33 ..... started mappingFeb 07 23:39:35 ..... started sorting BAMFeb 07 23:39:35 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #2)" name="1" time="68.9408848285675">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "output_params|outSAMattributes": "All",  "output_params|outSAMstrandField": "intronMotif",  "output_params|output_select": "yes",  "params|settingsType": "default",  "quantMode": true,  "refGenomeSource|geneSource": "history",  "refGenomeSource|genomeFastaFiles": {   "id": "7db830da62ee2894",   "src": "hda"  },  "refGenomeSource|sjdbGTFfile": {   "id": "ad1d19f8a2fc3a7f",   "src": "hda"  },  "refGenomeSource|sjdbOverhang": "75",  "singlePaired|input1": {   "id": "215ab16342b3c589",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "job": {  "command_line": "mkdir -p tempstargenomedir \u0026\u0026 STAR --runMode genomeGenerate --genomeDir \u0027tempstargenomedir\u0027 --genomeFastaFiles \u0027/galaxy/server/database/objects/6/7/f/dataset_67f2f2ea-9a27-4ad5-90b6-899400e5bc2d.dat\u0027 --sjdbGTFfile \u0027/galaxy/server/database/objects/e/d/5/dataset_ed555feb-2a70-43eb-9da6-d5c1743c852a.dat\u0027 --sjdbOverhang \u002775\u0027 --runThreadN ${GALAXY_SLOTS:-4} \u0026\u0026  STAR --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir \u0027tempstargenomedir\u0027 --sjdbGTFfile \u0027/galaxy/server/database/objects/e/d/5/dataset_ed555feb-2a70-43eb-9da6-d5c1743c852a.dat\u0027 --sjdbOverhang \u002775\u0027  --readFilesIn \u0027/galaxy/server/database/objects/e/0/f/dataset_e0f64901-7739-4753-abf3-fd62fc0344c7.dat\u0027   --outSAMtype BAM SortedByCoordinate   --quantMode GeneCounts  --outSAMattributes All --outSAMstrandField intronMotif --outFilterIntronMotifs None",  "command_version": "",  "create_time": "2023-02-07T23:40:11.788810",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-j9j9m",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "3019484f0548f0e5",  "inputs": {   "genomeFastaFiles": {    "id": "7db830da62ee2894",    "src": "hda",    "uuid": "67f2f2ea-9a27-4ad5-90b6-899400e5bc2d"   },   "input1": {    "id": "215ab16342b3c589",    "src": "hda",    "uuid": "e0f64901-7739-4753-abf3-fd62fc0344c7"   },   "sjdbGTFfile": {    "id": "ad1d19f8a2fc3a7f",    "src": "hda",    "uuid": "ed555feb-2a70-43eb-9da6-d5c1743c852a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "25.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "25 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675813239.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:40:39"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675813214.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:40:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "mapped_reads": {    "id": "e743aef382139207",    "src": "hda",    "uuid": "901dca31-52d9-4ce7-a36d-f0a451ad8e4f"   },   "output_log": {    "id": "97866d0e2d66a9a5",    "src": "hda",    "uuid": "1a3fedf4-090b-4a6b-838d-a5afb2c9bd14"   },   "reads_per_gene": {    "id": "3aa8311540743737",    "src": "hda",    "uuid": "b7e27d1c-3fad-4b2f-a2ac-e4fce479ed53"   },   "splice_junctions": {    "id": "88723dad0ce5d550",    "src": "hda",    "uuid": "9801db97-72b3-4d92-ac24-41281d4718f1"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_params": "{\"__current_case__\": 0, \"outFilterIntronMotifs\": \"None\", \"outSAMattributes\": \"All\", \"outSAMstrandField\": \"intronMotif\", \"output_params2\": {\"__current_case__\": 1, \"output_select2\": \"no\"}, \"output_select\": \"yes\"}",   "params": "{\"__current_case__\": 0, \"settingsType\": \"default\"}",   "quantMode": "\"true\"",   "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 915, \"src\": \"hda\"}]}, \"sjdbGTFfile\": {\"values\": [{\"id\": 916, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"75\"}",   "singlePaired": "{\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 914, \"src\": \"hda\"}]}, \"sPaired\": \"single\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Feb 07 23:40:14 ..... started STAR run\nFeb 07 23:40:14 ... starting to generate Genome files\nFeb 07 23:40:14 ... starting to sort Suffix Array. This may take a long time...\nFeb 07 23:40:14 ... sorting Suffix Array chunks and saving them to disk...\nFeb 07 23:40:14 ... loading chunks from disk, packing SA...\nFeb 07 23:40:14 ... finished generating suffix array\nFeb 07 23:40:14 ... generating Suffix Array index\nFeb 07 23:40:18 ... completed Suffix Array index\nFeb 07 23:40:18 ..... processing annotations GTF\nFeb 07 23:40:19 ... writing Genome to disk ...\nFeb 07 23:40:19 ... writing Suffix Array to disk ...\nFeb 07 23:40:19 ... writing SAindex to disk\nFeb 07 23:40:35 ..... finished successfully\nFeb 07 23:40:35 ..... started STAR run\nFeb 07 23:40:35 ..... loading genome\nFeb 07 23:40:36 ..... processing annotations GTF\nFeb 07 23:40:36 ..... started mapping\nFeb 07 23:40:38 ..... started sorting BAM\nFeb 07 23:40:39 ..... finished successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2",  "tool_stderr": "",  "tool_stdout": "Feb 07 23:40:14 ..... started STAR run\nFeb 07 23:40:14 ... starting to generate Genome files\nFeb 07 23:40:14 ... starting to sort Suffix Array. This may take a long time...\nFeb 07 23:40:14 ... sorting Suffix Array chunks and saving them to disk...\nFeb 07 23:40:14 ... loading chunks from disk, packing SA...\nFeb 07 23:40:14 ... finished generating suffix array\nFeb 07 23:40:14 ... generating Suffix Array index\nFeb 07 23:40:18 ... completed Suffix Array index\nFeb 07 23:40:18 ..... processing annotations GTF\nFeb 07 23:40:19 ... writing Genome to disk ...\nFeb 07 23:40:19 ... writing Suffix Array to disk ...\nFeb 07 23:40:19 ... writing SAindex to disk\nFeb 07 23:40:35 ..... finished successfully\nFeb 07 23:40:35 ..... started STAR run\nFeb 07 23:40:35 ..... loading genome\nFeb 07 23:40:36 ..... processing annotations GTF\nFeb 07 23:40:36 ..... started mapping\nFeb 07 23:40:38 ..... started sorting BAM\nFeb 07 23:40:39 ..... finished successfully\n",  "traceback": null,  "update_time": "2023-02-07T23:40:55.424039",  "user_email": "tests@fake.org" }, "output_problems": [  "Output mapped_reads:  different than expected, difference (using sim_size):\n( /tmp/tmpftot2nwsrnastar_test_mapped_reads.bam v. /tmp/tmpjz92nnfsrnastar_test_mapped_reads.bam )\nFiles /tmp/tmpftot2nwsrnastar_test_mapped_reads.bam=6447b but /tmp/tmpjz92nnfsrnastar_test_mapped_reads.bam=7398b - compare by size (delta=634) failed" ], "status": "failure", "test_index": 1, "time_seconds": 68.9408848285675, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.5.2b-2"}
                ]]></error>
            
            <system-out><![CDATA[
            Feb 07 23:40:14 ..... started STAR runFeb 07 23:40:14 ... starting to generate Genome filesFeb 07 23:40:14 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:40:14 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:40:14 ... loading chunks from disk, packing SA...Feb 07 23:40:14 ... finished generating suffix arrayFeb 07 23:40:14 ... generating Suffix Array indexFeb 07 23:40:18 ... completed Suffix Array indexFeb 07 23:40:18 ..... processing annotations GTFFeb 07 23:40:19 ... writing Genome to disk ...Feb 07 23:40:19 ... writing Suffix Array to disk ...Feb 07 23:40:19 ... writing SAindex to diskFeb 07 23:40:35 ..... finished successfullyFeb 07 23:40:35 ..... started STAR runFeb 07 23:40:35 ..... loading genomeFeb 07 23:40:36 ..... processing annotations GTFFeb 07 23:40:36 ..... started mappingFeb 07 23:40:38 ..... started sorting BAMFeb 07 23:40:39 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #3)" name="2" time="86.94906497001648">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "output_params|outFilterIntronMotifs": "RemoveNoncanonical",  "output_params|outSAMattributes": "All",  "output_params|outSAMstrandField": "intronMotif",  "output_params|output_params2|outFilterScoreMinOverLread": "0.9",  "output_params|output_params2|output_select2": "yes",  "output_params|output_select": "yes",  "params|seed|seedSearchStartLmax": "25",  "params|settingsType": "full",  "refGenomeSource|geneSource": "history",  "refGenomeSource|genomeFastaFiles": {   "id": "72572988189a9a7f",   "src": "hda"  },  "singlePaired|input1": {   "id": "7aced3063351673c",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "job": {  "command_line": "mkdir -p tempstargenomedir \u0026\u0026 STAR --runMode genomeGenerate --genomeDir \u0027tempstargenomedir\u0027 --genomeFastaFiles \u0027/galaxy/server/database/objects/e/b/6/dataset_eb6ce2aa-9b86-4bf0-af43-5201a9b572af.dat\u0027 --runThreadN ${GALAXY_SLOTS:-4} \u0026\u0026  STAR --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir \u0027tempstargenomedir\u0027  --readFilesIn \u0027/galaxy/server/database/objects/5/b/7/dataset_5b770614-7494-4fa7-967e-33f2077f01b5.dat\u0027   --outSAMtype BAM SortedByCoordinate    --outSAMattributes All --outSAMstrandField intronMotif --outFilterIntronMotifs RemoveNoncanonical --outSAMunmapped None --outSAMprimaryFlag OneBestScore --outSAMmapqUnique \"255\" --outFilterType Normal --outFilterMultimapScoreRange \"1\" --outFilterMultimapNmax \"10\" --outFilterMismatchNmax \"10\" --outFilterMismatchNoverLmax \"0.3\" --outFilterMismatchNoverReadLmax \"1.0\" --outFilterScoreMin \"0\" --outFilterScoreMinOverLread \"0.9\" --outFilterMatchNmin \"0\" --outFilterMatchNminOverLread \"0.66\"   --seedSearchStartLmax \"25\" --seedSearchStartLmaxOverLread \"1.0\" --seedSearchLmax \"0\" --seedMultimapNmax \"10000\" --seedPerReadNmax \"1000\" --seedPerWindowNmax \"50\" --seedNoneLociPerWindow \"10\"  --alignIntronMin \"21\" --alignIntronMax \"0\" --alignMatesGapMax \"0\" --alignSJoverhangMin \"5\" --alignSJDBoverhangMin \"3\" --alignSplicedMateMapLmin \"0\" --alignSplicedMateMapLminOverLmate \"0.66\" --alignWindowsPerReadNmax \"10000\" --alignTranscriptsPerWindowNmax \"100\" --alignTranscriptsPerReadNmax \"10000\" --alignEndsType Local  --twopassMode \"None\"   --limitBAMsortRAM \"0\" --limitOutSJoneRead \"1000\" --limitOutSJcollapsed \"1000000\" --limitSjdbInsertNsj \"1000000\"",  "command_version": null,  "create_time": "2023-02-07T23:41:15.032323",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-ffwng",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "e9925a4107846bd5",  "inputs": {   "genomeFastaFiles": {    "id": "72572988189a9a7f",    "src": "hda",    "uuid": "eb6ce2aa-9b86-4bf0-af43-5201a9b572af"   },   "input1": {    "id": "7aced3063351673c",    "src": "hda",    "uuid": "5b770614-7494-4fa7-967e-33f2077f01b5"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "mapped_reads": {    "id": "c44c47e544c29155",    "src": "hda",    "uuid": "ff267e12-b724-4a7b-88e3-e952f792e557"   },   "output_log": {    "id": "16d13e5a0ad2b043",    "src": "hda",    "uuid": "f7216c86-d35c-4faa-96da-48815b24657e"   },   "splice_junctions": {    "id": "e2817e035d878a8c",    "src": "hda",    "uuid": "6ea535a7-5543-4555-a93c-8f5f85e9188a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_params": "{\"__current_case__\": 0, \"outFilterIntronMotifs\": \"RemoveNoncanonical\", \"outSAMattributes\": \"All\", \"outSAMstrandField\": \"intronMotif\", \"output_params2\": {\"__current_case__\": 0, \"outFilterMatchNmin\": \"0\", \"outFilterMatchNminOverLread\": \"0.66\", \"outFilterMismatchNmax\": \"10\", \"outFilterMismatchNoverLmax\": \"0.3\", \"outFilterMismatchNoverReadLmax\": \"1.0\", \"outFilterMultimapNmax\": \"10\", \"outFilterMultimapScoreRange\": \"1\", \"outFilterScoreMin\": \"0\", \"outFilterScoreMinOverLread\": \"0.9\", \"outFilterType\": \"false\", \"outSAMmapqUnique\": \"255\", \"outSAMprimaryFlag\": \"false\", \"outSAMunmapped\": \"false\", \"output_select2\": \"yes\"}, \"output_select\": \"yes\"}",   "params": "{\"__current_case__\": 2, \"align\": {\"alignEndsType\": \"false\", \"alignIntronMax\": \"0\", \"alignIntronMin\": \"21\", \"alignMatesGapMax\": \"0\", \"alignSJDBoverhangMin\": \"3\", \"alignSJoverhangMin\": \"5\", \"alignSplicedMateMapLmin\": \"0\", \"alignSplicedMateMapLminOverLmate\": \"0.66\", \"alignTranscriptsPerReadNmax\": \"10000\", \"alignTranscriptsPerWindowNmax\": \"100\", \"alignWindowsPerReadNmax\": \"10000\"}, \"chim\": {\"__current_case__\": 1, \"chim_select\": \"no\"}, \"limits\": {\"limitBAMsortRAM\": \"0\", \"limitOutSJcollapsed\": \"1000000\", \"limitOutSJoneRead\": \"1000\", \"limitSjdbInsertNsj\": \"1000000\"}, \"seed\": {\"seedMultimapNmax\": \"10000\", \"seedNoneLociPerWindow\": \"10\", \"seedPerReadNmax\": \"1000\", \"seedPerWindowNmax\": \"50\", \"seedSearchLmax\": \"0\", \"seedSearchStartLmax\": \"25\", \"seedSearchStartLmaxOverLread\": \"1.0\"}, \"settingsType\": \"full\", \"twopass\": {\"twopass1readsN\": \"-1\", \"twopassMode\": \"false\"}}",   "quantMode": "\"false\"",   "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 922, \"src\": \"hda\"}]}, \"sjdbGTFfile\": null, \"sjdbOverhang\": \"100\"}",   "singlePaired": "{\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 921, \"src\": \"hda\"}]}, \"sPaired\": \"single\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:42:22.981722",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 86.94906497001648, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.5.2b-2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #4)" name="3" time="62.21189212799072">
        
            
            <system-out><![CDATA[
            Feb 07 23:42:45 ..... started STAR runFeb 07 23:42:45 ... starting to generate Genome filesFeb 07 23:42:45 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:42:45 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:42:45 ... loading chunks from disk, packing SA...Feb 07 23:42:45 ... finished generating suffix arrayFeb 07 23:42:45 ... generating Suffix Array indexFeb 07 23:42:50 ... completed Suffix Array indexFeb 07 23:42:50 ... writing Genome to disk ...Feb 07 23:42:50 ... writing Suffix Array to disk ...Feb 07 23:42:50 ... writing SAindex to diskFeb 07 23:43:08 ..... finished successfullyFeb 07 23:43:08 ..... started STAR runFeb 07 23:43:08 ..... loading genomeFeb 07 23:43:10 ..... started 1st pass mappingFeb 07 23:43:12 ..... finished 1st pass mappingFeb 07 23:43:12 ..... started mappingFeb 07 23:43:14 ..... started sorting BAMFeb 07 23:43:14 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_header_read] EOF marker is absent. The input is probably truncated.[samopen] SAM header is present: 2 sequences.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #5)" name="4" time="59.8499071598053">
        
            
            <system-out><![CDATA[
            Feb 07 23:43:47 ..... started STAR runFeb 07 23:43:47 ... starting to generate Genome filesFeb 07 23:43:47 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:43:47 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:43:47 ... loading chunks from disk, packing SA...Feb 07 23:43:47 ... finished generating suffix arrayFeb 07 23:43:47 ... generating Suffix Array indexFeb 07 23:43:52 ... completed Suffix Array indexFeb 07 23:43:52 ... writing Genome to disk ...Feb 07 23:43:52 ... writing Suffix Array to disk ...Feb 07 23:43:52 ... writing SAindex to diskFeb 07 23:44:07 ..... finished successfullyFeb 07 23:44:08 ..... started STAR runFeb 07 23:44:08 ..... loading genomeFeb 07 23:44:10 ..... started 1st pass mappingFeb 07 23:44:12 ..... finished 1st pass mappingFeb 07 23:44:12 ..... started mappingFeb 07 23:44:14 ..... started sorting BAMFeb 07 23:44:14 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_header_read] EOF marker is absent. The input is probably truncated.[samopen] SAM header is present: 2 sequences.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #6)" name="5" time="59.54115056991577">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "output_params|outFilterIntronMotifs": "RemoveNoncanonical",  "output_params|outSAMattributes": "All",  "output_params|outSAMstrandField": "intronMotif",  "output_params|output_params2|output_select2": "yes",  "output_params|output_select": "yes",  "params|settingsType": "full",  "refGenomeSource|geneSource": "history",  "refGenomeSource|genomeFastaFiles": {   "id": "850379c06e5c4f2c",   "src": "hda"  },  "singlePaired|input1": {   "id": "e76f4d0839b74889",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "job": {  "command_line": "mkdir -p tempstargenomedir \u0026\u0026 STAR --runMode genomeGenerate --genomeDir \u0027tempstargenomedir\u0027 --genomeFastaFiles \u0027/galaxy/server/database/objects/6/8/d/dataset_68d078e9-4f5a-4b42-b835-2d4629268441.dat\u0027 --runThreadN ${GALAXY_SLOTS:-4} \u0026\u0026  STAR --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir \u0027tempstargenomedir\u0027  --readFilesIn \u0027/galaxy/server/database/objects/5/f/8/dataset_5f886427-085b-439e-83c2-f5f86f5f5a77.dat\u0027   --outSAMtype BAM SortedByCoordinate    --outSAMattributes All --outSAMstrandField intronMotif --outFilterIntronMotifs RemoveNoncanonical --outSAMunmapped None --outSAMprimaryFlag OneBestScore --outSAMmapqUnique \"255\" --outFilterType Normal --outFilterMultimapScoreRange \"1\" --outFilterMultimapNmax \"10\" --outFilterMismatchNmax \"10\" --outFilterMismatchNoverLmax \"0.3\" --outFilterMismatchNoverReadLmax \"1.0\" --outFilterScoreMin \"0\" --outFilterScoreMinOverLread \"0.66\" --outFilterMatchNmin \"0\" --outFilterMatchNminOverLread \"0.66\"   --seedSearchStartLmax \"50\" --seedSearchStartLmaxOverLread \"1.0\" --seedSearchLmax \"0\" --seedMultimapNmax \"10000\" --seedPerReadNmax \"1000\" --seedPerWindowNmax \"50\" --seedNoneLociPerWindow \"10\"  --alignIntronMin \"21\" --alignIntronMax \"0\" --alignMatesGapMax \"0\" --alignSJoverhangMin \"5\" --alignSJDBoverhangMin \"3\" --alignSplicedMateMapLmin \"0\" --alignSplicedMateMapLminOverLmate \"0.66\" --alignWindowsPerReadNmax \"10000\" --alignTranscriptsPerWindowNmax \"100\" --alignTranscriptsPerReadNmax \"10000\" --alignEndsType Local  --twopassMode \"None\"   --limitBAMsortRAM \"0\" --limitOutSJoneRead \"1000\" --limitOutSJcollapsed \"1000000\" --limitSjdbInsertNsj \"1000000\"",  "command_version": "",  "create_time": "2023-02-07T23:44:46.622020",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-n8558",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "9199deb7fbec164d",  "inputs": {   "genomeFastaFiles": {    "id": "850379c06e5c4f2c",    "src": "hda",    "uuid": "68d078e9-4f5a-4b42-b835-2d4629268441"   },   "input1": {    "id": "e76f4d0839b74889",    "src": "hda",    "uuid": "5f886427-085b-439e-83c2-f5f86f5f5a77"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "26.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "26 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675813514.0000000",    "title": "Job End Time",    "value": "2023-02-07 23:45:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675813488.0000000",    "title": "Job Start Time",    "value": "2023-02-07 23:44:48"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "mapped_reads": {    "id": "cb21100f10869777",    "src": "hda",    "uuid": "a59e9837-a9ae-4618-9d80-b1b8aa30112a"   },   "output_log": {    "id": "4d18bc43523127a6",    "src": "hda",    "uuid": "22f7b8ab-4945-42b4-9898-b262ebea72b6"   },   "splice_junctions": {    "id": "3017e2ca31d19f00",    "src": "hda",    "uuid": "fd57e6c5-c65a-4940-a195-eacb35a74442"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_params": "{\"__current_case__\": 0, \"outFilterIntronMotifs\": \"RemoveNoncanonical\", \"outSAMattributes\": \"All\", \"outSAMstrandField\": \"intronMotif\", \"output_params2\": {\"__current_case__\": 0, \"outFilterMatchNmin\": \"0\", \"outFilterMatchNminOverLread\": \"0.66\", \"outFilterMismatchNmax\": \"10\", \"outFilterMismatchNoverLmax\": \"0.3\", \"outFilterMismatchNoverReadLmax\": \"1.0\", \"outFilterMultimapNmax\": \"10\", \"outFilterMultimapScoreRange\": \"1\", \"outFilterScoreMin\": \"0\", \"outFilterScoreMinOverLread\": \"0.66\", \"outFilterType\": \"false\", \"outSAMmapqUnique\": \"255\", \"outSAMprimaryFlag\": \"false\", \"outSAMunmapped\": \"false\", \"output_select2\": \"yes\"}, \"output_select\": \"yes\"}",   "params": "{\"__current_case__\": 2, \"align\": {\"alignEndsType\": \"false\", \"alignIntronMax\": \"0\", \"alignIntronMin\": \"21\", \"alignMatesGapMax\": \"0\", \"alignSJDBoverhangMin\": \"3\", \"alignSJoverhangMin\": \"5\", \"alignSplicedMateMapLmin\": \"0\", \"alignSplicedMateMapLminOverLmate\": \"0.66\", \"alignTranscriptsPerReadNmax\": \"10000\", \"alignTranscriptsPerWindowNmax\": \"100\", \"alignWindowsPerReadNmax\": \"10000\"}, \"chim\": {\"__current_case__\": 1, \"chim_select\": \"no\"}, \"limits\": {\"limitBAMsortRAM\": \"0\", \"limitOutSJcollapsed\": \"1000000\", \"limitOutSJoneRead\": \"1000\", \"limitSjdbInsertNsj\": \"1000000\"}, \"seed\": {\"seedMultimapNmax\": \"10000\", \"seedNoneLociPerWindow\": \"10\", \"seedPerReadNmax\": \"1000\", \"seedPerWindowNmax\": \"50\", \"seedSearchLmax\": \"0\", \"seedSearchStartLmax\": \"50\", \"seedSearchStartLmaxOverLread\": \"1.0\"}, \"settingsType\": \"full\", \"twopass\": {\"twopass1readsN\": \"-1\", \"twopassMode\": \"false\"}}",   "quantMode": "\"false\"",   "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 941, \"src\": \"hda\"}]}, \"sjdbGTFfile\": null, \"sjdbOverhang\": \"100\"}",   "singlePaired": "{\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 940, \"src\": \"hda\"}]}, \"sPaired\": \"single\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Feb 07 23:44:48 ..... started STAR run\nFeb 07 23:44:48 ... starting to generate Genome files\nFeb 07 23:44:48 ... starting to sort Suffix Array. This may take a long time...\nFeb 07 23:44:48 ... sorting Suffix Array chunks and saving them to disk...\nFeb 07 23:44:48 ... loading chunks from disk, packing SA...\nFeb 07 23:44:48 ... finished generating suffix array\nFeb 07 23:44:48 ... generating Suffix Array index\nFeb 07 23:44:53 ... completed Suffix Array index\nFeb 07 23:44:53 ... writing Genome to disk ...\nFeb 07 23:44:53 ... writing Suffix Array to disk ...\nFeb 07 23:44:53 ... writing SAindex to disk\nFeb 07 23:45:09 ..... finished successfully\nFeb 07 23:45:09 ..... started STAR run\nFeb 07 23:45:09 ..... loading genome\nFeb 07 23:45:11 ..... started mapping\nFeb 07 23:45:13 ..... started sorting BAM\nFeb 07 23:45:14 ..... finished successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2",  "tool_stderr": "",  "tool_stdout": "Feb 07 23:44:48 ..... started STAR run\nFeb 07 23:44:48 ... starting to generate Genome files\nFeb 07 23:44:48 ... starting to sort Suffix Array. This may take a long time...\nFeb 07 23:44:48 ... sorting Suffix Array chunks and saving them to disk...\nFeb 07 23:44:48 ... loading chunks from disk, packing SA...\nFeb 07 23:44:48 ... finished generating suffix array\nFeb 07 23:44:48 ... generating Suffix Array index\nFeb 07 23:44:53 ... completed Suffix Array index\nFeb 07 23:44:53 ... writing Genome to disk ...\nFeb 07 23:44:53 ... writing Suffix Array to disk ...\nFeb 07 23:44:53 ... writing SAindex to disk\nFeb 07 23:45:09 ..... finished successfully\nFeb 07 23:45:09 ..... started STAR run\nFeb 07 23:45:09 ..... loading genome\nFeb 07 23:45:11 ..... started mapping\nFeb 07 23:45:13 ..... started sorting BAM\nFeb 07 23:45:14 ..... finished successfully\n",  "traceback": null,  "update_time": "2023-02-07T23:45:24.798579",  "user_email": "tests@fake.org" }, "output_problems": [  "Output mapped_reads:  different than expected, difference (using sim_size):\n( /tmp/tmpeed6ibabrnastar_test_mapped_reads.bam v. /tmp/tmp7jk3bta4rnastar_test_mapped_reads.bam )\nFiles /tmp/tmpeed6ibabrnastar_test_mapped_reads.bam=6447b but /tmp/tmp7jk3bta4rnastar_test_mapped_reads.bam=7769b - compare by size (delta=634) failed" ], "status": "failure", "test_index": 5, "time_seconds": 59.54115056991577, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.5.2b-2"}
                ]]></error>
            
            <system-out><![CDATA[
            Feb 07 23:44:48 ..... started STAR runFeb 07 23:44:48 ... starting to generate Genome filesFeb 07 23:44:48 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:44:48 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:44:48 ... loading chunks from disk, packing SA...Feb 07 23:44:48 ... finished generating suffix arrayFeb 07 23:44:48 ... generating Suffix Array indexFeb 07 23:44:53 ... completed Suffix Array indexFeb 07 23:44:53 ... writing Genome to disk ...Feb 07 23:44:53 ... writing Suffix Array to disk ...Feb 07 23:44:53 ... writing SAindex to diskFeb 07 23:45:09 ..... finished successfullyFeb 07 23:45:09 ..... started STAR runFeb 07 23:45:09 ..... loading genomeFeb 07 23:45:11 ..... started mappingFeb 07 23:45:13 ..... started sorting BAMFeb 07 23:45:14 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #1)" name="0" time="34.62207746505737">
        
            
            <system-out><![CDATA[
            Feb 07 23:45:46 ..... started STAR runFeb 07 23:45:46 ... starting to generate Genome filesFeb 07 23:45:47 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:45:47 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:45:47 ... loading chunks from disk, packing SA...Feb 07 23:45:47 ... finished generating suffix arrayFeb 07 23:45:47 ... generating Suffix Array indexFeb 07 23:45:47 ... completed Suffix Array indexFeb 07 23:45:47 ... writing Genome to disk ...Feb 07 23:45:47 ... writing Suffix Array to disk ...Feb 07 23:45:47 ... writing SAindex to diskFeb 07 23:45:47 ..... finished successfullyFeb 07 23:45:47 ..... started STAR runFeb 07 23:45:47 ..... loading genomeFeb 07 23:45:47 ..... started mappingFeb 07 23:45:48 ..... finished mappingFeb 07 23:45:48 ..... started sorting BAMFeb 07 23:45:48 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #2)" name="1" time="15.875999927520752">
        
            <error type="error" message="parameter 'genomeDir': requires a value, but no legal values defined"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027genomeDir\u0027: requires a value, but no legal values defined", "inputs": {  "algo|params|settingsType": "default",  "oformat|outSAMattributes": [   "NH",   "HI",   "AS",   "nM",   "NM",   "MD",   "jM",   "jI",   "MC",   "ch"  ],  "oformat|outSAMmapqUnique": "255",  "refGenomeSource|GTFconditional|GTFselect": "with-gtf",  "refGenomeSource|GTFconditional|genomeDir": "001",  "refGenomeSource|geneSource": "indexed",  "singlePaired|input1": {   "id": "12b8bba14793a796",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "status": "error", "test_index": 1, "time_seconds": 15.875999927520752, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.7.8a+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #11)" name="10" time="15.820319175720215">
        
            <error type="error" message="parameter 'genomeDir': requires a value, but no legal values defined"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027genomeDir\u0027: requires a value, but no legal values defined", "inputs": {  "algo|params|settingsType": "full",  "filter|basic_filters": [   "exclude_unmapped",   "--outFilterIntronMotifs RemoveNoncanonical"  ],  "filter|output_params2|output_select2": "yes",  "oformat|outSAMattributes": [   "NH",   "HI",   "AS",   "nM",   "NM",   "MD",   "jM",   "jI",   "MC",   "ch"  ],  "oformat|outSAMmapqUnique": "255",  "refGenomeSource|GTFconditional|GTFselect": "with-gtf",  "refGenomeSource|GTFconditional|genomeDir": "001",  "refGenomeSource|geneSource": "indexed",  "singlePaired|input1": {   "id": "57fae2be6f66ad5a",   "src": "hda"  },  "singlePaired|sPaired": "single",  "twopass|twopassMode": "Basic" }, "status": "error", "test_index": 10, "time_seconds": 15.820319175720215, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.7.8a+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #12)" name="11" time="11.19260573387146">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 11.19260573387146, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.7.8a+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #13)" name="12" time="63.66802930831909">
        
            
            <system-out><![CDATA[
            Feb 07 23:51:40 ..... started STAR runFeb 07 23:51:40 ... starting to generate Genome filesFeb 07 23:51:40 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:51:40 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:51:40 ... loading chunks from disk, packing SA...Feb 07 23:51:40 ... finished generating suffix arrayFeb 07 23:51:40 ... generating Suffix Array indexFeb 07 23:51:45 ... completed Suffix Array indexFeb 07 23:51:45 ... writing Genome to disk ...Feb 07 23:51:45 ... writing Suffix Array to disk ...Feb 07 23:51:45 ... writing SAindex to diskFeb 07 23:52:03 ..... finished successfullyFeb 07 23:52:03 ..... started STAR runFeb 07 23:52:03 ..... loading genomeFeb 07 23:52:05 ..... started mappingFeb 07 23:52:07 ..... finished mappingFeb 07 23:52:08 ..... started sorting BAMFeb 07 23:52:08 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 14 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #14)" name="13" time="32.78585481643677">
        
            
            <system-out><![CDATA[
            Feb 07 23:52:40 ..... started STAR runFeb 07 23:52:40 ... starting to generate Genome filesFeb 07 23:52:40 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:52:40 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:52:40 ... loading chunks from disk, packing SA...Feb 07 23:52:40 ... finished generating suffix arrayFeb 07 23:52:40 ... generating Suffix Array indexFeb 07 23:52:40 ... completed Suffix Array indexFeb 07 23:52:40 ... writing Genome to disk ...Feb 07 23:52:40 ... writing Suffix Array to disk ...Feb 07 23:52:40 ... writing SAindex to diskFeb 07 23:52:40 ..... finished successfullyFeb 07 23:52:40 ..... started STAR runFeb 07 23:52:40 ..... loading genomeFeb 07 23:52:40 ..... started mappingFeb 07 23:52:41 ..... finished mappingFeb 07 23:52:41 ..... started sorting BAMFeb 07 23:52:42 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 10 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #3)" name="2" time="40.62554717063904">
        
            
            <system-out><![CDATA[
            Feb 07 23:46:42 ..... started STAR runFeb 07 23:46:42 ... starting to generate Genome filesFeb 07 23:46:42 ..... processing annotations GTFFeb 07 23:46:42 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:46:42 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:46:42 ... loading chunks from disk, packing SA...Feb 07 23:46:42 ... finished generating suffix arrayFeb 07 23:46:42 ... generating Suffix Array indexFeb 07 23:46:42 ... completed Suffix Array indexFeb 07 23:46:42 ... writing Genome to disk ...Feb 07 23:46:42 ... writing Suffix Array to disk ...Feb 07 23:46:42 ... writing SAindex to diskFeb 07 23:46:42 ..... finished successfullyFeb 07 23:46:42 ..... started STAR runFeb 07 23:46:42 ..... loading genomeFeb 07 23:46:42 ..... started mappingFeb 07 23:46:43 ..... finished mappingFeb 07 23:46:43 ..... started sorting BAMFeb 07 23:46:44 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #4)" name="3" time="37.90926170349121">
        
            
            <system-out><![CDATA[
            Feb 07 23:47:21 ..... started STAR runFeb 07 23:47:21 ... starting to generate Genome filesFeb 07 23:47:21 ..... processing annotations GTFFeb 07 23:47:21 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:47:21 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:47:21 ... loading chunks from disk, packing SA...Feb 07 23:47:21 ... finished generating suffix arrayFeb 07 23:47:21 ... generating Suffix Array indexFeb 07 23:47:21 ... completed Suffix Array indexFeb 07 23:47:21 ... writing Genome to disk ...Feb 07 23:47:21 ... writing Suffix Array to disk ...Feb 07 23:47:21 ... writing SAindex to diskFeb 07 23:47:21 ..... finished successfullyFeb 07 23:47:21 ..... started STAR runFeb 07 23:47:21 ..... loading genomeFeb 07 23:47:21 ..... started mappingFeb 07 23:47:22 ..... finished mappingFeb 07 23:47:22 ..... started sorting BAMFeb 07 23:47:22 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #5)" name="4" time="33.89140343666077">
        
            
            <system-out><![CDATA[
            Feb 07 23:47:55 ..... started STAR runFeb 07 23:47:55 ... starting to generate Genome filesFeb 07 23:47:55 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:47:55 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:47:55 ... loading chunks from disk, packing SA...Feb 07 23:47:55 ... finished generating suffix arrayFeb 07 23:47:55 ... generating Suffix Array indexFeb 07 23:47:55 ... completed Suffix Array indexFeb 07 23:47:55 ... writing Genome to disk ...Feb 07 23:47:55 ... writing Suffix Array to disk ...Feb 07 23:47:55 ... writing SAindex to diskFeb 07 23:47:55 ..... finished successfullyFeb 07 23:47:55 ..... started STAR runFeb 07 23:47:55 ..... loading genomeFeb 07 23:47:55 ..... started mappingFeb 07 23:47:56 ..... finished mappingFeb 07 23:47:56 ..... started sorting BAMFeb 07 23:47:57 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #6)" name="5" time="38.0530743598938">
        
            
            <system-out><![CDATA[
            Feb 07 23:48:30 ..... started STAR runFeb 07 23:48:30 ... starting to generate Genome filesFeb 07 23:48:30 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:48:30 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:48:30 ... loading chunks from disk, packing SA...Feb 07 23:48:30 ... finished generating suffix arrayFeb 07 23:48:30 ... generating Suffix Array indexFeb 07 23:48:30 ... completed Suffix Array indexFeb 07 23:48:30 ... writing Genome to disk ...Feb 07 23:48:30 ... writing Suffix Array to disk ...Feb 07 23:48:30 ... writing SAindex to diskFeb 07 23:48:30 ..... finished successfullyFeb 07 23:48:30 ..... started STAR runFeb 07 23:48:30 ..... loading genomeFeb 07 23:48:30 ..... started mappingFeb 07 23:48:31 ..... finished mappingFeb 07 23:48:31 ..... started sorting BAMFeb 07 23:48:31 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=960, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #7)" name="6" time="47.815948486328125">
        
            
            <system-out><![CDATA[
            Feb 07 23:49:10 ..... started STAR runFeb 07 23:49:10 ... starting to generate Genome filesFeb 07 23:49:10 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:49:10 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:49:10 ... loading chunks from disk, packing SA...Feb 07 23:49:10 ... finished generating suffix arrayFeb 07 23:49:10 ... generating Suffix Array indexFeb 07 23:49:10 ... completed Suffix Array indexFeb 07 23:49:10 ... writing Genome to disk ...Feb 07 23:49:10 ... writing Suffix Array to disk ...Feb 07 23:49:10 ... writing SAindex to diskFeb 07 23:49:10 ..... finished successfullyFeb 07 23:49:10 ..... started STAR runFeb 07 23:49:10 ..... loading genomeFeb 07 23:49:10 ..... started mappingFeb 07 23:49:16 ..... finished mappingFeb 07 23:49:16 ..... started sorting BAMFeb 07 23:49:16 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=960, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #8)" name="7" time="18.237077236175537">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 18.237077236175537, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.7.8a+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #9)" name="8" time="39.65552282333374">
        
            
            <system-out><![CDATA[
            Feb 07 23:50:15 ..... started STAR runFeb 07 23:50:16 ... starting to generate Genome filesFeb 07 23:50:16 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:50:16 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:50:16 ... loading chunks from disk, packing SA...Feb 07 23:50:16 ... finished generating suffix arrayFeb 07 23:50:16 ... generating Suffix Array indexFeb 07 23:50:16 ... completed Suffix Array indexFeb 07 23:50:16 ... writing Genome to disk ...Feb 07 23:50:16 ... writing Suffix Array to disk ...Feb 07 23:50:16 ... writing SAindex to diskFeb 07 23:50:16 ..... finished successfullyFeb 07 23:50:16 ..... started STAR runFeb 07 23:50:16 ..... loading genomeFeb 07 23:50:16 ..... started 1st pass mappingFeb 07 23:50:18 ..... finished 1st pass mappingFeb 07 23:50:18 ..... inserting junctions into the genome indicesFeb 07 23:50:18 ..... started mappingFeb 07 23:50:20 ..... finished mappingFeb 07 23:50:20 ..... started sorting BAMFeb 07 23:50:21 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #10)" name="9" time="16.493978261947632">
        
            <error type="error" message="parameter 'genomeDir': an invalid option ('000') was selected (valid options: dm3,hg19chrX,ce10,sacCer2,CHM13_T2T_v2.0,mm10,rn5,apiMel4,rn6,dm6,sacCer3,hg19,hg38,ce9,Amel_4.5,mm9)"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027genomeDir\u0027: an invalid option (\u0027000\u0027) was selected (valid options: dm3,hg19chrX,ce10,sacCer2,CHM13_T2T_v2.0,mm10,rn5,apiMel4,rn6,dm6,sacCer3,hg19,hg38,ce9,Amel_4.5,mm9)", "inputs": {  "algo|params|settingsType": "full",  "filter|basic_filters": [   "exclude_unmapped",   "--outFilterIntronMotifs RemoveNoncanonical"  ],  "filter|output_params2|output_select2": "yes",  "oformat|outSAMattributes": [   "NH",   "HI",   "AS",   "nM",   "NM",   "MD",   "jM",   "jI",   "MC",   "ch"  ],  "oformat|outSAMmapqUnique": "255",  "refGenomeSource|GTFconditional|GTFselect": "without-gtf",  "refGenomeSource|GTFconditional|genomeDir": "000",  "refGenomeSource|geneSource": "indexed",  "singlePaired|input1": {   "id": "7bbc1b76a588d6d6",   "src": "hda"  },  "singlePaired|sPaired": "single",  "twopass|twopassMode": "Basic" }, "status": "error", "test_index": 9, "time_seconds": 16.493978261947632, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.7.8a+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #1)" name="0" time="38.268359422683716">
        
            
            <system-out><![CDATA[
            Feb 07 23:31:23 ..... started STAR runFeb 07 23:31:23 ... starting to generate Genome filesFeb 07 23:31:23 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:31:23 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:31:23 ... loading chunks from disk, packing SA...Feb 07 23:31:23 ... finished generating suffix arrayFeb 07 23:31:23 ... generating Suffix Array indexFeb 07 23:31:23 ... completed Suffix Array indexFeb 07 23:31:23 ... writing Genome to disk ...Feb 07 23:31:23 ... writing Suffix Array to disk ...Feb 07 23:31:23 ... writing SAindex to diskFeb 07 23:31:23 ..... finished successfullyFeb 07 23:31:23 ..... started STAR runFeb 07 23:31:23 ..... loading genomeFeb 07 23:31:23 ..... started mappingFeb 07 23:31:25 ..... finished mappingFeb 07 23:31:25 ..... started sorting BAMFeb 07 23:31:25 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #2)" name="1" time="16.221623420715332">
        
            <error type="error" message="parameter 'genomeDir': requires a value, but no legal values defined"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027genomeDir\u0027: requires a value, but no legal values defined", "inputs": {  "algo|params|settingsType": "default",  "oformat|outSAMattributes": [   "NH",   "HI",   "AS",   "nM",   "NM",   "MD",   "jM",   "jI",   "MC",   "ch"  ],  "oformat|outSAMmapqUnique": "255",  "refGenomeSource|GTFconditional|GTFselect": "with-gtf",  "refGenomeSource|GTFconditional|genomeDir": "001",  "refGenomeSource|geneSource": "indexed",  "singlePaired|input1": {   "id": "661f78569a005aae",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "status": "error", "test_index": 1, "time_seconds": 16.221623420715332, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #11)" name="10" time="38.41356587409973">
        
            
            <system-out><![CDATA[
            Feb 07 23:36:47 ..... started STAR runFeb 07 23:36:47 ... starting to generate Genome filesFeb 07 23:36:47 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:36:47 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:36:47 ... loading chunks from disk, packing SA...Feb 07 23:36:47 ... finished generating suffix arrayFeb 07 23:36:47 ... generating Suffix Array indexFeb 07 23:36:47 ... completed Suffix Array indexFeb 07 23:36:47 ... writing Genome to disk ...Feb 07 23:36:47 ... writing Suffix Array to disk ...Feb 07 23:36:47 ... writing SAindex to diskFeb 07 23:36:47 ..... finished successfullyFeb 07 23:36:47 ..... started STAR runFeb 07 23:36:47 ..... loading genomeFeb 07 23:36:47 ..... inserting junctions into the genome indicesFeb 07 23:36:47 ..... started mappingFeb 07 23:36:48 ..... finished mappingFeb 07 23:36:48 ..... started sorting BAMFeb 07 23:36:48 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #12)" name="11" time="63.807031869888306">
        
            
            <system-out><![CDATA[
            Feb 07 23:37:21 ..... started STAR runFeb 07 23:37:21 ... starting to generate Genome filesFeb 07 23:37:21 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:37:21 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:37:21 ... loading chunks from disk, packing SA...Feb 07 23:37:21 ... finished generating suffix arrayFeb 07 23:37:21 ... generating Suffix Array indexFeb 07 23:37:26 ... completed Suffix Array indexFeb 07 23:37:26 ... writing Genome to disk ...Feb 07 23:37:26 ... writing Suffix Array to disk ...Feb 07 23:37:26 ... writing SAindex to diskFeb 07 23:37:42 ..... finished successfullyFeb 07 23:37:42 ..... started STAR runFeb 07 23:37:42 ..... loading genomeFeb 07 23:37:46 ..... started mappingFeb 07 23:37:50 ..... finished mappingFeb 07 23:37:50 ..... started sorting BAMFeb 07 23:37:51 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 14 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #13)" name="12" time="39.5188410282135">
        
            
            <system-out><![CDATA[
            Feb 07 23:38:28 ..... started STAR runFeb 07 23:38:28 ... starting to generate Genome filesFeb 07 23:38:28 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:38:28 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:38:28 ... loading chunks from disk, packing SA...Feb 07 23:38:28 ... finished generating suffix arrayFeb 07 23:38:28 ... generating Suffix Array indexFeb 07 23:38:28 ... completed Suffix Array indexFeb 07 23:38:28 ... writing Genome to disk ...Feb 07 23:38:28 ... writing Suffix Array to disk ...Feb 07 23:38:28 ... writing SAindex to diskFeb 07 23:38:28 ..... finished successfullyFeb 07 23:38:28 ..... started STAR runFeb 07 23:38:28 ..... loading genomeFeb 07 23:38:28 ..... started mappingFeb 07 23:38:31 ..... finished mappingFeb 07 23:38:31 ..... started sorting BAMFeb 07 23:38:31 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 10 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #3)" name="2" time="38.378281593322754">
        
            
            <system-out><![CDATA[
            Feb 07 23:32:18 ..... started STAR runFeb 07 23:32:18 ... starting to generate Genome filesFeb 07 23:32:18 ..... processing annotations GTFFeb 07 23:32:18 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:32:18 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:32:18 ... loading chunks from disk, packing SA...Feb 07 23:32:18 ... finished generating suffix arrayFeb 07 23:32:18 ... generating Suffix Array indexFeb 07 23:32:18 ... completed Suffix Array indexFeb 07 23:32:18 ... writing Genome to disk ...Feb 07 23:32:18 ... writing Suffix Array to disk ...Feb 07 23:32:18 ... writing SAindex to diskFeb 07 23:32:18 ..... finished successfullyFeb 07 23:32:18 ..... started STAR runFeb 07 23:32:18 ..... loading genomeFeb 07 23:32:18 ..... started mappingFeb 07 23:32:19 ..... finished mappingFeb 07 23:32:20 ..... started sorting BAMFeb 07 23:32:20 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #4)" name="3" time="37.61522340774536">
        
            
            <system-out><![CDATA[
            Feb 07 23:32:57 ..... started STAR runFeb 07 23:32:57 ... starting to generate Genome filesFeb 07 23:32:57 ..... processing annotations GTFFeb 07 23:32:57 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:32:57 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:32:57 ... loading chunks from disk, packing SA...Feb 07 23:32:57 ... finished generating suffix arrayFeb 07 23:32:57 ... generating Suffix Array indexFeb 07 23:32:57 ... completed Suffix Array indexFeb 07 23:32:57 ... writing Genome to disk ...Feb 07 23:32:57 ... writing Suffix Array to disk ...Feb 07 23:32:57 ... writing SAindex to diskFeb 07 23:32:57 ..... finished successfullyFeb 07 23:32:57 ..... started STAR runFeb 07 23:32:57 ..... loading genomeFeb 07 23:32:57 ..... started mappingFeb 07 23:32:58 ..... finished mappingFeb 07 23:32:58 ..... started sorting BAMFeb 07 23:32:59 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #5)" name="4" time="34.22045660018921">
        
            
            <system-out><![CDATA[
            Feb 07 23:33:31 ..... started STAR runFeb 07 23:33:31 ... starting to generate Genome filesFeb 07 23:33:31 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:33:31 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:33:31 ... loading chunks from disk, packing SA...Feb 07 23:33:31 ... finished generating suffix arrayFeb 07 23:33:31 ... generating Suffix Array indexFeb 07 23:33:31 ... completed Suffix Array indexFeb 07 23:33:31 ... writing Genome to disk ...Feb 07 23:33:31 ... writing Suffix Array to disk ...Feb 07 23:33:31 ... writing SAindex to diskFeb 07 23:33:31 ..... finished successfullyFeb 07 23:33:31 ..... started STAR runFeb 07 23:33:31 ..... loading genomeFeb 07 23:33:31 ..... started mappingFeb 07 23:33:32 ..... finished mappingFeb 07 23:33:32 ..... started sorting BAMFeb 07 23:33:32 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #6)" name="5" time="34.88771200180054">
        
            
            <system-out><![CDATA[
            Feb 07 23:34:07 ..... started STAR runFeb 07 23:34:07 ... starting to generate Genome filesFeb 07 23:34:07 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:34:07 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:34:07 ... loading chunks from disk, packing SA...Feb 07 23:34:07 ... finished generating suffix arrayFeb 07 23:34:07 ... generating Suffix Array indexFeb 07 23:34:07 ... completed Suffix Array indexFeb 07 23:34:07 ... writing Genome to disk ...Feb 07 23:34:07 ... writing Suffix Array to disk ...Feb 07 23:34:07 ... writing SAindex to diskFeb 07 23:34:07 ..... finished successfullyFeb 07 23:34:07 ..... started STAR runFeb 07 23:34:07 ..... loading genomeFeb 07 23:34:07 ..... started mappingFeb 07 23:34:08 ..... finished mappingFeb 07 23:34:08 ..... started sorting BAMFeb 07 23:34:08 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=960, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #7)" name="6" time="34.09005665779114">
        
            
            <system-out><![CDATA[
            Feb 07 23:34:41 ..... started STAR runFeb 07 23:34:41 ... starting to generate Genome filesFeb 07 23:34:41 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:34:41 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:34:41 ... loading chunks from disk, packing SA...Feb 07 23:34:41 ... finished generating suffix arrayFeb 07 23:34:41 ... generating Suffix Array indexFeb 07 23:34:41 ... completed Suffix Array indexFeb 07 23:34:41 ... writing Genome to disk ...Feb 07 23:34:41 ... writing Suffix Array to disk ...Feb 07 23:34:41 ... writing SAindex to diskFeb 07 23:34:41 ..... finished successfullyFeb 07 23:34:41 ..... started STAR runFeb 07 23:34:41 ..... loading genomeFeb 07 23:34:41 ..... started mappingFeb 07 23:34:42 ..... finished mappingFeb 07 23:34:42 ..... started sorting BAMFeb 07 23:34:42 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=960, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #8)" name="7" time="33.901883602142334">
        
            
            <system-out><![CDATA[
            Feb 07 23:35:14 ..... started STAR runFeb 07 23:35:14 ... starting to generate Genome filesFeb 07 23:35:14 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:35:14 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:35:14 ... loading chunks from disk, packing SA...Feb 07 23:35:14 ... finished generating suffix arrayFeb 07 23:35:14 ... generating Suffix Array indexFeb 07 23:35:14 ... completed Suffix Array indexFeb 07 23:35:14 ... writing Genome to disk ...Feb 07 23:35:14 ... writing Suffix Array to disk ...Feb 07 23:35:14 ... writing SAindex to diskFeb 07 23:35:14 ..... finished successfullyFeb 07 23:35:14 ..... started STAR runFeb 07 23:35:14 ..... loading genomeFeb 07 23:35:14 ..... started mappingFeb 07 23:35:15 ..... finished mappingFeb 07 23:35:15 ..... started sorting BAMFeb 07 23:35:15 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #9)" name="8" time="36.66233849525452">
        
            
            <system-out><![CDATA[
            Feb 07 23:35:49 ..... started STAR runFeb 07 23:35:49 ... starting to generate Genome filesFeb 07 23:35:49 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:35:49 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:35:49 ... loading chunks from disk, packing SA...Feb 07 23:35:49 ... finished generating suffix arrayFeb 07 23:35:49 ... generating Suffix Array indexFeb 07 23:35:49 ... completed Suffix Array indexFeb 07 23:35:49 ... writing Genome to disk ...Feb 07 23:35:49 ... writing Suffix Array to disk ...Feb 07 23:35:49 ... writing SAindex to diskFeb 07 23:35:49 ..... finished successfullyFeb 07 23:35:49 ..... started STAR runFeb 07 23:35:49 ..... loading genomeFeb 07 23:35:49 ..... started 1st pass mappingFeb 07 23:35:50 ..... finished 1st pass mappingFeb 07 23:35:50 ..... inserting junctions into the genome indicesFeb 07 23:35:50 ..... started mappingFeb 07 23:35:52 ..... finished mappingFeb 07 23:35:52 ..... started sorting BAMFeb 07 23:35:52 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            !!!!! WARNING: --genomeSAindexNbases 5 is too large for the genome size=650, which may cause seg-fault at the mapping step. Re-run genome generation with recommended --genomeSAindexNbases 3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star (Test #10)" name="9" time="17.671683073043823">
        
            <error type="error" message="parameter 'genomeDir': an invalid option ('000') was selected (valid options: dm3,hg19chrX,ce10,sacCer2,CHM13_T2T_v2.0,mm10,rn5,apiMel4,rn6,dm6,sacCer3,hg19,hg38,ce9,Amel_4.5,mm9)"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027genomeDir\u0027: an invalid option (\u0027000\u0027) was selected (valid options: dm3,hg19chrX,ce10,sacCer2,CHM13_T2T_v2.0,mm10,rn5,apiMel4,rn6,dm6,sacCer3,hg19,hg38,ce9,Amel_4.5,mm9)", "inputs": {  "algo|params|settingsType": "full",  "filter|basic_filters": [   "exclude_unmapped",   "--outFilterIntronMotifs RemoveNoncanonical"  ],  "filter|output_params2|output_select2": "yes",  "oformat|outSAMattributes": [   "NH",   "HI",   "AS",   "nM",   "NM",   "MD",   "jM",   "jI",   "MC",   "ch"  ],  "oformat|outSAMmapqUnique": "255",  "refGenomeSource|GTFconditional|GTFselect": "without-gtf",  "refGenomeSource|GTFconditional|genomeDir": "000",  "refGenomeSource|geneSource": "indexed",  "singlePaired|input1": {   "id": "286843adb326c65a",   "src": "hda"  },  "singlePaired|sPaired": "single",  "twopass|twopassMode": "Basic" }, "status": "error", "test_index": 9, "time_seconds": 17.671683073043823, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #1)" name="0" time="87.04915261268616">
        
            
            <system-out><![CDATA[
            Feb 07 23:53:38 ..... started STAR runFeb 07 23:53:38 ... starting to generate Genome filesFeb 07 23:53:38 ..... processing annotations GTFFeb 07 23:53:38 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:53:38 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:53:38 ... loading chunks from disk, packing SA...Feb 07 23:53:38 ... finished generating suffix arrayFeb 07 23:53:38 ... generating Suffix Array indexFeb 07 23:53:38 ... completed Suffix Array indexFeb 07 23:53:38 ..... inserting junctions into the genome indicesFeb 07 23:53:38 ... writing Genome to disk ...Feb 07 23:53:38 ... writing Suffix Array to disk ...Feb 07 23:53:38 ... writing SAindex to diskFeb 07 23:53:38 ..... finished successfullyFeb 07 23:53:38 ..... started STAR runFeb 07 23:53:38 ..... loading genomeFeb 07 23:53:38 ..... started mappingFeb 07 23:54:08 ..... finished mappingFeb 07 23:54:08 ..... started Solo countingFeb 07 23:54:08 ..... finished Solo countingFeb 07 23:54:08 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #2)" name="1" time="86.48095965385437">
        
            
            <system-out><![CDATA[
            Feb 07 23:55:04 ..... started STAR runFeb 07 23:55:04 ... starting to generate Genome filesFeb 07 23:55:04 ..... processing annotations GTFFeb 07 23:55:05 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:55:05 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:55:05 ... loading chunks from disk, packing SA...Feb 07 23:55:05 ... finished generating suffix arrayFeb 07 23:55:05 ... generating Suffix Array indexFeb 07 23:55:05 ... completed Suffix Array indexFeb 07 23:55:05 ..... inserting junctions into the genome indicesFeb 07 23:55:05 ... writing Genome to disk ...Feb 07 23:55:05 ... writing Suffix Array to disk ...Feb 07 23:55:05 ... writing SAindex to diskFeb 07 23:55:05 ..... finished successfullyFeb 07 23:55:05 ..... started STAR runFeb 07 23:55:05 ..... loading genomeFeb 07 23:55:05 ..... started mappingFeb 07 23:55:34 ..... finished mappingFeb 07 23:55:34 ..... started Solo countingFeb 07 23:55:34 ..... finished Solo countingFeb 07 23:55:34 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #3)" name="2" time="146.1786675453186">
        
            
            <system-out><![CDATA[
            Feb 07 23:56:33 ..... started STAR runFeb 07 23:56:34 ... starting to generate Genome filesFeb 07 23:56:34 ..... processing annotations GTFFeb 07 23:56:34 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:56:34 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:56:34 ... loading chunks from disk, packing SA...Feb 07 23:56:34 ... finished generating suffix arrayFeb 07 23:56:34 ... generating Suffix Array indexFeb 07 23:56:34 ... completed Suffix Array indexFeb 07 23:56:34 ..... inserting junctions into the genome indicesFeb 07 23:56:34 ... writing Genome to disk ...Feb 07 23:56:34 ... writing Suffix Array to disk ...Feb 07 23:56:34 ... writing SAindex to diskFeb 07 23:56:34 ..... finished successfullyFeb 07 23:56:34 ..... started STAR runFeb 07 23:56:34 ..... loading genomeFeb 07 23:56:34 ..... started mappingFeb 07 23:58:01 ..... finished mappingFeb 07 23:58:01 ..... started Solo countingFeb 07 23:58:02 ..... finished Solo countingFeb 07 23:58:02 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #4)" name="3" time="9.715838432312012">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 9.715838432312012, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #5)" name="4" time="113.00931549072266">
        
            
            <system-out><![CDATA[
            Feb 07 23:59:28 ..... started STAR runFeb 07 23:59:28 ... starting to generate Genome filesFeb 07 23:59:28 ..... processing annotations GTFFeb 07 23:59:28 ... starting to sort Suffix Array. This may take a long time...Feb 07 23:59:28 ... sorting Suffix Array chunks and saving them to disk...Feb 07 23:59:28 ... loading chunks from disk, packing SA...Feb 07 23:59:28 ... finished generating suffix arrayFeb 07 23:59:28 ... generating Suffix Array indexFeb 07 23:59:28 ... completed Suffix Array indexFeb 07 23:59:28 ..... inserting junctions into the genome indicesFeb 07 23:59:28 ... writing Genome to disk ...Feb 07 23:59:28 ... writing Suffix Array to disk ...Feb 07 23:59:28 ... writing SAindex to diskFeb 07 23:59:28 ..... finished successfullyFeb 07 23:59:28 ..... started STAR runFeb 07 23:59:28 ..... loading genomeFeb 07 23:59:28 ..... started mappingFeb 08 00:00:02 ..... finished mappingFeb 08 00:00:02 ..... started Solo countingFeb 08 00:00:02 ..... finished Solo countingFeb 08 00:00:02 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #6)" name="5" time="30.063623666763306">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 30.063623666763306, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #7)" name="6" time="67.28607106208801">
        
            
            <system-out><![CDATA[
            Feb 08 00:01:39 ..... started STAR runFeb 08 00:01:39 ... starting to generate Genome filesFeb 08 00:01:39 ..... processing annotations GTFFeb 08 00:01:39 ... starting to sort Suffix Array. This may take a long time...Feb 08 00:01:39 ... sorting Suffix Array chunks and saving them to disk...Feb 08 00:01:39 ... loading chunks from disk, packing SA...Feb 08 00:01:39 ... finished generating suffix arrayFeb 08 00:01:39 ... generating Suffix Array indexFeb 08 00:01:39 ... completed Suffix Array indexFeb 08 00:01:39 ..... inserting junctions into the genome indicesFeb 08 00:01:39 ... writing Genome to disk ...Feb 08 00:01:39 ... writing Suffix Array to disk ...Feb 08 00:01:39 ... writing SAindex to diskFeb 08 00:01:39 ..... finished successfullyFeb 08 00:01:39 ..... started STAR runFeb 08 00:01:40 ..... loading genomeFeb 08 00:01:40 ..... started mappingFeb 08 00:01:41 ..... finished mappingFeb 08 00:01:41 ..... started Solo countingFeb 08 00:01:41 ..... finished Solo countingFeb 08 00:01:41 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo (Test #8)" name="7" time="32.53222060203552">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 32.53222060203552, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #1)" name="0" time="107.58070707321167">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #2)" name="1" time="32.71022319793701">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #3)" name="2" time="31.49932861328125">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #4)" name="3" time="35.63970589637756">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #5)" name="4" time="36.58307480812073">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #6)" name="5" time="32.36741256713867">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #1)" name="0" time="43.8120698928833">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #2)" name="1" time="34.300877809524536">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #3)" name="2" time="34.0818874835968">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #4)" name="3" time="39.349985122680664">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #5)" name="4" time="39.477376222610474">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract (Test #6)" name="5" time="35.37746024131775">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by extract --extract-method=string --bc-pattern=NNNNNNCCCCCC --stdin=input_read1.gz --read2-in=input_read2.gz --stdout out1.gz --read2-out=out2.gz False --log2stderr# job started at Tue Feb  7 21:47:04 2023 on gxy-5ddvx-zcg9s -- 0045eee7-baba-4249-a915-d23eb32e3780# pid: 24, system: Linux 5.10.161+ #1 SMP Thu Jan 5 22:49:42 UTC 2023 x86_64# blacklist                               : None# compresslevel                           : 6# correct_umi_threshold                   : 0# either_read                             : False# either_read_resolve                     : discard# error_correct_cell                      : False# extract_method                          : string# filter_cell_barcode                     : None# filter_cell_barcodes                    : False# filter_umi                              : None# filtered_out                            : None# filtered_out2                           : None# ignore_suffix                           : False# log2stderr                              : True# loglevel                                : 1# pattern                                 : NNNNNNCCCCCC# pattern2                                : None# prime3                                  : None# quality_encoding                        : None# quality_filter_mask                     : None# quality_filter_threshold                : None# random_seed                             : None# read2_in                                : input_read2.gz# read2_out                               : out2.gz# read2_stdout                            : False# reads_subset                            : None# reconcile                               : False# retain_umi                              : None# short_help                              : None# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input_read1.gz' encoding='ascii'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='out1.gz' encoding='ascii'># timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_correct_log                         : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# whitelist                               : None2023-02-07 21:47:04,444 INFO Starting barcode extraction2023-02-07 21:47:04,453 INFO Input Reads: 502023-02-07 21:47:04,453 INFO Reads output: 50# job finished in 0 seconds at Tue Feb  7 21:47:04 2023 --  1.36  0.22  0.00  0.00 -- 0045eee7-baba-4249-a915-d23eb32e3780
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot (Test #1)" name="0" time="59.99463248252869">
        
            
            <system-out><![CDATA[
            null device           1 Session information:R version 3.5.1 (2018-07-02)Platform: x86_64-conda_cos6-linux-gnu (64-bit)Running under: Buildroot 2014.02Matrix products: defaultBLAS/LAPACK: /usr/local/lib/R/lib/libRblas.solocale:[1] Cattached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] bindrcpp_0.2.2 ggrepel_0.8.0  ggplot2_3.1.0  getopt_1.20.2  dplyr_0.7.8   loaded via a namespace (and not attached): [1] Rcpp_1.0.0       digest_0.6.18    withr_2.1.2      crayon_1.3.4     [5] assertthat_0.2.0 plyr_1.8.4       grid_3.5.1       R6_2.3.0         [9] gtable_0.2.0     magrittr_1.5     scales_1.0.0     pillar_1.3.1    [13] rlang_0.3.1      lazyeval_0.2.1   labeling_0.3     glue_1.3.0      [17] munsell_0.5.0    purrr_0.2.5      compiler_3.5.1   colorspace_1.4-0[21] pkgconfig_2.0.2  bindr_0.1.1      tidyselect_0.2.5 tibble_2.0.1    
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot (Test #2)" name="1" time="30.70737862586975">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fdr_col": "4",  "input": {   "id": "a786de0cf1a3620f",   "src": "hda"  },  "label_col": "1",  "labels|label_file": {   "id": "e39fa71e6c5c0ec4",   "src": "hda"  },  "labels|label_select": "file",  "lfc_col": "2",  "lfc_thresh": "0",  "pval_col": "3" }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/73b8cb5bddcd/volcanoplot/volcanoplot.R\u0027  -i \u0027/galaxy/server/database/objects/9/a/d/dataset_9adc25a5-9d13-44c3-bbc9-f5670decd512.dat\u0027 -a 4 -p 3 -c 2 -l 1 -s 0.05 -x 0.0 -f \u0027/galaxy/server/database/objects/8/8/a/dataset_88a2b4ee-9ecc-4235-8a59-1915e532b225.dat\u0027 -b -z \u0027Down,Not Sig,Up\u0027",  "command_version": null,  "create_time": "2023-02-07T23:08:27.678578",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-kcv7h",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "f31a35fdc3ef011c",  "inputs": {   "input": {    "id": "a786de0cf1a3620f",    "src": "hda",    "uuid": "9adc25a5-9d13-44c3-bbc9-f5670decd512"   },   "label_file": {    "id": "e39fa71e6c5c0ec4",    "src": "hda",    "uuid": "88a2b4ee-9ecc-4235-8a59-1915e532b225"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "plot": {    "id": "8aa041bd15b29be5",    "src": "hda",    "uuid": "36d504f6-b1b5-4648-b6d4-b60cc5997347"   }  },  "params": {   "__input_ext": "\"tabular\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fdr_col": "\"4\"",   "label_col": "\"1\"",   "labels": "{\"__current_case__\": 1, \"label_file\": {\"values\": [{\"id\": 708, \"src\": \"hda\"}]}, \"label_select\": \"file\"}",   "lfc_col": "\"2\"",   "lfc_thresh": "\"0.0\"",   "plot_options": "{\"boxes\": \"true\", \"legend\": null, \"legend_labs\": \"Down,Not Sig,Up\", \"title\": null, \"xlab\": null, \"xmax\": \"\", \"xmin\": \"\", \"ylab\": null, \"ymax\": \"\"}",   "pval_col": "\"3\"",   "signif_thresh": "\"0.05\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T23:08:39.865382",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 30.70737862586975, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot", "tool_version": "0.0.3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id (Test #1)" name="0" time="48.316839933395386">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id (Test #2)" name="1" time="32.49837327003479">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some of your identifiers had white space in them, using first word only. e.g.:gi|16127999|ref|NP_414546.1| hypothetical protein b0005 [Escherichia coli str. K-12 substr. MG1655]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id (Test #3)" name="2" time="31.22078824043274">
        
            
            <system-out><![CDATA[
            Have 1 unique identifiers from listGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id (Test #4)" name="3" time="30.404463052749634">
        
            
            <system-out><![CDATA[
            Have 2 unique identifiers from listGenerating matching FASTQ file
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id (Test #5)" name="4" time="32.64024758338928">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/b/d/7/dataset_bd77ebbb-48cb-4cc5-9fd6-a291d4dc92c7.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03WTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04WTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04WTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05WTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05WTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07WTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08WTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09WTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09WTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10WTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10WTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11WTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11WTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12WTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12WTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14WTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14WTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15WTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16WTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16WTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17WTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18WTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18WTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20WTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20WTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21WTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22WTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22WTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23WTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24WTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01WTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01WTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02WTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02WTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03WTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04WTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06WTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07WTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07WTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08WTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09WTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10WTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10WTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11WTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12WTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12WTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13WTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14WTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15WTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16WTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16WTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17WTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17WTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18WTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20WTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20WTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21WTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21WTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22WTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23WTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23WTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01WTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04WTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04WTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05WTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05WTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06WTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06WTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07WTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08WTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08WTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09WTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09WTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10WTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10WTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11WTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11WTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12WTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12WTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13WTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14WTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14WTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15WTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15WTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16WTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17WTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17WTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19WTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20WTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20WTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22WTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22WTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24WTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01WTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01WTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02WTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02WTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03WTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04WTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06WTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07WTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08WTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08WTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09WTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09WTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10WTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11WTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12WTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13WTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14WTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14WTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15WTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15WTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16WTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16WTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17WTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17WTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18WTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19WTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19WTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20WTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20WTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21WTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22WTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23WTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24WTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24WTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01WTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01WTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02WTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03WTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03WTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04WTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04WTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05WTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06WTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06WTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07WTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07WTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08WTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08WTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09WTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10WTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10WTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11WTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12WTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12WTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13WTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13WTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14WTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14WTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15WTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15WTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16WTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17WTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17WTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18WTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18WTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21WTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21WTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22WTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22WTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23WTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23WTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24WTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24WTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01WTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01WTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02WTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03WTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04WTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05WTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06WTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08WTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09WTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09WTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10WTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10WTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11WTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12WTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14WTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14WTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15WTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16WTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17WTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18WTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18WTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19WTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19WTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20WTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20WTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21WTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21WTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22WTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22WTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23WTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24WTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01WTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01WTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id (Test #6)" name="5" time="33.447598934173584">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/4/8/e/dataset_48e9247f-a694-43e0-8fa8-14b781ce679c.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03.p1kpIBFWTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04.p1kpIBFWTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04.q1kpIBRWTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05.p1kpIBFWTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05.q1kpIBRWTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07.p1kpIBFWTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08.p1kpIBFWTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09.p1kpIBFWTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09.q1kpIBRWTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10.p1kpIBFWTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10.q1kpIBRWTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11.p1kpIBFWTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11.q1kpIBRWTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12.p1kpIBFWTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12.q1kpIBRWTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14.p1kpIBFWTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14.q1kpIBRWTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15.p1kpIBFWTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16.p1kpIBFWTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16.q1kpIBRWTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17.p1kpIBFWTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18.p1kpIBFWTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18.q1kpIBRWTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20.p1kpIBFWTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20.q1kpIBRWTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21.q1kpIBRWTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22.p1kpIBFWTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22.q1kpIBRWTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23.p1kpIBFWTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24.q1kpIBRWTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01.p1kpIBFWTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01.q1kpIBRWTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02.p1kpIBFWTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02.q1kpIBRWTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03.q1kpIBRWTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04.p1kpIBFWTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06.p1kpIBFWTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07.p1kpIBFWTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07.q1kpIBRWTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08.p1kpIBFWTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09.p1kpIBFWTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10.p1kpIBFWTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10.q1kpIBRWTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11.q1kpIBRWTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12.p1kpIBFWTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12.q1kpIBRWTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13.p1kpIBFWTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14.p1kpIBFWTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15.q1kpIBRWTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16.p1kpIBFWTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16.q1kpIBRWTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17.p1kpIBFWTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17.q1kpIBRWTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18.p1kpIBFWTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20.p1kpIBFWTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20.q1kpIBRWTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21.p1kpIBFWTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21.q1kpIBRWTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22.p1kpIBFWTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23.p1kpIBFWTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23.q1kpIBRWTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01.q1kpIBRWTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04.p1kpIBFWTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04.q1kpIBRWTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05.p1kpIBFWTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05.q1kpIBRWTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06.p1kpIBFWTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06.q1kpIBRWTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07.p1kpIBFWTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08.p1kpIBFWTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08.q1kpIBRWTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09.p1kpIBFWTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09.q1kpIBRWTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10.p1kpIBFWTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10.q1kpIBRWTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11.p1kpIBFWTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11.q1kpIBRWTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12.p1kpIBFWTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12.q1kpIBRWTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13.p1kpIBFWTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14.p1kpIBFWTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14.q1kpIBRWTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15.p1kpIBFWTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15.q1kpIBRWTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16.p1kpIBFWTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17.p1kpIBFWTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17.q1kpIBRWTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19.p1kpIBFWTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20.p1kpIBFWTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20.q1kpIBRWTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22.p1kpIBFWTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22.q1kpIBRWTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24.p1kpIBFWTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01.p1kpIBFWTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01.q1kpIBRWTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02.p1kpIBFWTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02.q1kpIBRWTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03.p1kpIBFWTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04.p1kpIBFWTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06.p1kpIBFWTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07.p1kpIBFWTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08.p1kpIBFWTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08.q1kpIBRWTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09.p1kpIBFWTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09.q1kpIBRWTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10.p1kpIBFWTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11.p1kpIBFWTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12.p1kpIBFWTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13.p1kpIBFWTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14.p1kpIBFWTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14.q1kpIBRWTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15.p1kpIBFWTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15.q1kpIBRWTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16.p1kpIBFWTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16.q1kpIBRWTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17.p1kpIBFWTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17.q1kpIBRWTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18.p1kpIBFWTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19.p1kpIBFWTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19.q1kpIBRWTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20.p1kpIBFWTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20.q1kpIBRWTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21.p1kpIBFWTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22.p1kpIBFWTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23.p1kpIBFWTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24.p1kpIBFWTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24.q1kpIBRWTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01.p1kpIBFWTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01.q1kpIBRWTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02.p1kpIBFWTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03.p1kpIBFWTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03.q1kpIBRWTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04.p1kpIBFWTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04.q1kpIBRWTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05.p1kpIBFWTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06.p1kpIBFWTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06.q1kpIBRWTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07.p1kpIBFWTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07.q1kpIBRWTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08.p1kpIBFWTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08.q1kpIBRWTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09.p1kpIBFWTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10.p1kpIBFWTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10.q1kpIBRWTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11.p1kpIBFWTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12.p1kpIBFWTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12.q1kpIBRWTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13.p1kpIBFWTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13.q1kpIBRWTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14.p1kpIBFWTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14.q1kpIBRWTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15.p1kpIBFWTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15.q1kpIBRWTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16.p1kpIBFWTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17.p1kpIBFWTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17.q1kpIBRWTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18.p1kpIBFWTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18.q1kpIBRWTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21.p1kpIBFWTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21.q1kpIBRWTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22.p1kpIBFWTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22.q1kpIBRWTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23.p1kpIBFWTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23.q1kpIBRWTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24.p1kpIBFWTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24.q1kpIBRWTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01.p1kpIBFWTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01.q1kpIBRWTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02.p1kpIBFWTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03.p1kpIBFWTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04.q1kpIBRWTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05.p1kpIBFWTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06.p1kpIBFWTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08.p1kpIBFWTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09.p1kpIBFWTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09.q1kpIBRWTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10.p1kpIBFWTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10.q1kpIBRWTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11.p1kpIBFWTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12.p1kpIBFWTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14.p1kpIBFWTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14.q1kpIBRWTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15.p1kpIBFWTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16.p1kpIBFWTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17.p1kpIBFWTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18.p1kpIBFWTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18.q1kpIBRWTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19.p1kpIBFWTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19.q1kpIBRWTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20.p1kpIBFWTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20.q1kpIBRWTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21.p1kpIBFWTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21.q1kpIBRWTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22.p1kpIBFWTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22.q1kpIBRWTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23.p1kpIBFWTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24.q1kpIBRWTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01.p1kpIBFWTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01.q1kpIBRWTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02.p1kpIBF
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #1)" name="0" time="45.295960426330566">
        
            
            <system-out><![CDATA[
            TrimmomaticSE: Started with arguments: -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #2)" name="1" time="29.130784511566162">
        
            
            <system-out><![CDATA[
            TrimmomaticSE: Started with arguments: -threads 1 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #11)" name="10" time="28.80743408203125">
        
            
            <system-out><![CDATA[
            TrimmomaticSE: Started with arguments: -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #12)" name="11" time="30.720714569091797">
        
            
            <system-out><![CDATA[
            TrimmomaticPE: Started with arguments: -threads 1 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #13)" name="12" time="32.29546809196472">
        
            
            <system-out><![CDATA[
            TrimmomaticPE: Started with arguments: -threads 1 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/335/configs/tmpmpueon42:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #3)" name="2" time="31.676337718963623">
        
            
            <system-out><![CDATA[
            TrimmomaticPE: Started with arguments: -threads 1 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #4)" name="3" time="32.38759684562683">
        
            
            <system-out><![CDATA[
            TrimmomaticPE: Started with arguments: -threads 1 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #5)" name="4" time="24.405543327331543">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "readtype|fastq_r1_in": {   "id": "dab2ca75c4c864ab",   "src": "hda"  },  "readtype|fastq_r2_in": {   "id": "448e14266e15800c",   "src": "hda"  },  "readtype|single_or_paired": "pair_of_files" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/6/9/4/dataset_6944d8dc-1ddb-4785-b626-875b28b2c69e.dat\u0027 fastq_r1.\u0027fastqillumina\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/b/f/dataset_ebf93298-ce89-4ac0-a896-f94cb4bdb653.dat\u0027 fastq_r2.\u0027fastqillumina\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.\u0027fastqillumina\u0027 fastq_r2.\u0027fastqillumina\u0027 fastq_out_r1_paired.\u0027fastqillumina\u0027 fastq_out_r1_unpaired.\u0027fastqillumina\u0027 fastq_out_r2_paired.\u0027fastqillumina\u0027 fastq_out_r2_unpaired.\u0027fastqillumina\u0027 SLIDINGWINDOW:4:20 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out_r1_paired.\u0027fastqillumina\u0027 \u0027/galaxy/server/database/objects/4/1/a/dataset_41a5ac14-832b-4224-a256-303eca025bd9.dat\u0027 \u0026\u0026 mv fastq_out_r1_unpaired.\u0027fastqillumina\u0027 \u0027/galaxy/server/database/objects/d/4/3/dataset_d433d997-ad4f-42eb-91fd-84b959b1e1c5.dat\u0027 \u0026\u0026 mv fastq_out_r2_paired.\u0027fastqillumina\u0027 \u0027/galaxy/server/database/objects/1/4/d/dataset_14d9689d-12ce-4c95-8cf1-78b0b20b0464.dat\u0027 \u0026\u0026 mv fastq_out_r2_unpaired.\u0027fastqillumina\u0027 \u0027/galaxy/server/database/objects/4/f/a/dataset_4fa32a49-e6e9-435b-ab30-574fb5ed1c3a.dat\u0027",  "command_version": null,  "create_time": "2023-02-07T22:29:27.329535",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-cbjvf",  "galaxy_version": "22.05",  "history_id": "5ec18ad6be350a9d",  "id": "471a53186e8d18f0",  "inputs": {   "fastq_r1_in": {    "id": "dab2ca75c4c864ab",    "src": "hda",    "uuid": "6944d8dc-1ddb-4785-b626-875b28b2c69e"   },   "fastq_r2_in": {    "id": "448e14266e15800c",    "src": "hda",    "uuid": "ebf93298-ce89-4ac0-a896-f94cb4bdb653"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out_r1_paired": {    "id": "49dcdbd225e78b08",    "src": "hda",    "uuid": "41a5ac14-832b-4224-a256-303eca025bd9"   },   "fastq_out_r1_unpaired": {    "id": "5606a19f41b199ac",    "src": "hda",    "uuid": "d433d997-ad4f-42eb-91fd-84b959b1e1c5"   },   "fastq_out_r2_paired": {    "id": "27034a8af50678c6",    "src": "hda",    "uuid": "14d9689d-12ce-4c95-8cf1-78b0b20b0464"   },   "fastq_out_r2_unpaired": {    "id": "b236a9b7eb279a7d",    "src": "hda",    "uuid": "4fa32a49-e6e9-435b-ab30-574fb5ed1c3a"   }  },  "params": {   "__input_ext": "\"fastqillumina\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": \"false\"}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "\"false\"",   "output_logs": "\"false\"",   "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 508, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 509, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-07T22:29:33.033842",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 24.405543327331543, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #6)" name="5" time="32.92401480674744">
        
            
            <system-out><![CDATA[
            TrimmomaticPE: Started with arguments: -threads 1 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #7)" name="6" time="28.916462182998657">
        
            
            <system-out><![CDATA[
            TrimmomaticSE: Started with arguments: -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #8)" name="7" time="33.39462351799011">
        
            
            <system-out><![CDATA[
            TrimmomaticPE: Started with arguments: -threads 1 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #9)" name="8" time="16.108030557632446">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 16.108030557632446, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic (Test #10)" name="9" time="29.24805498123169">
        
            
            <system-out><![CDATA[
            TrimmomaticSE: Started with arguments: -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>