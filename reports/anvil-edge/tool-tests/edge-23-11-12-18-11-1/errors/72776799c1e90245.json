{
    "model_class": "Job",
    "id": "72776799c1e90245",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-11-12T18:52:48.428147",
    "create_time": "2023-11-12T18:52:43.017804",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy2",
    "history_id": "d940de88d9411f32",
    "external_id": "gxy-66gst",
    "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   ln -s '/galaxy/server/database/objects/9/4/c/dataset_94c0ed02-9ab7-4570-8608-a55a0dd690f7.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/7/c/6/metadata_7c6c13b7-1d4c-4c82-9b61-ca30b84c9b47.dat' infile.bai &&   ln -s '/galaxy/server/database/objects/7/8/6/dataset_786eeadf-dad1-4a70-8f46-f8d8585976a7.dat' reference.fa && samtools faidx reference.fa &&  samtools stats   --ref-seq 'reference.fa'     -@ $addthreads infile   > 'XXXX'  && mkdir split && name=`cat 'XXXX' | grep '\\^SN' | cut -d'.' -f 1 | sed 's/^# //'` && awk '/\\^/{out=0} /\\^SN/{out=1} {if(out==1){print $0}}' 'XXXX' | sed 's/Use `grep .*` to extract this part.//' | sed 's/SN\\t//' > \"split/$name.tab\" && name=`cat 'XXXX' | grep '\\^MPC' | cut -d'.' -f 1 | sed 's/^# //'` && awk '/\\^/{out=0} /\\^MPC/{out=1} {if(out==1){print $0}}' 'XXXX' | sed 's/Use `grep .*` to extract this part.//' | sed 's/MPC\\t//' > \"split/$name.tab\" && name=`cat 'XXXX' | grep '\\^GCC' | cut -d'.' -f 1 | sed 's/^# //'` && awk '/\\^/{out=0} /\\^GCC/{out=1} {if(out==1){print $0}}' 'XXXX' | sed 's/Use `grep .*` to extract this part.//' | sed 's/GCC\\t//' > \"split/$name.tab\"",
    "traceback": null,
    "params": {
        "__input_ext": "\"bam\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "cov_threshold": "\"\"",
        "remove_overlaps": "false",
        "sparse": "false",
        "cond_region": "{\"__current_case__\": 0, \"select_region\": \"no\"}",
        "addref_cond": "{\"__current_case__\": 2, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 172, \"src\": \"hda\"}]}}",
        "trim_quality": "\"\"",
        "most_inserts": "\"\"",
        "read_length": "\"\"",
        "insert_size": "\"\"",
        "gc_depth": "\"\"",
        "filter_by_flags": "{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}",
        "split_output_cond": "{\"__current_case__\": 1, \"generate_tables\": [\"SN\", \"MPC\", \"GCC\"], \"split_output_selector\": \"yes\"}",
        "remove_dups": "false",
        "coverage_cond": "{\"__current_case__\": 0, \"coverage_select\": \"no\"}"
    },
    "inputs": {
        "input": {
            "id": "a531b64216a0415f",
            "src": "hda",
            "uuid": "94c0ed02-9ab7-4570-8608-a55a0dd690f7"
        },
        "addref_cond|ref": {
            "id": "11a1664fb16a799b",
            "src": "hda",
            "uuid": "786eeadf-dad1-4a70-8f46-f8d8585976a7"
        }
    },
    "outputs": {},
    "output_collections": {
        "output_collection": {
            "id": "f1e606278471f063",
            "src": "hdca"
        }
    },
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": null,
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
