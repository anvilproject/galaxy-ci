{
    "model_class": "Job",
    "id": "d8c1f9c5b0386f58",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-03-22T07:17:24.839356",
    "create_time": "2024-03-22T07:16:52.216035",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "179d0405759e990d",
    "external_id": "gxy-gzm58",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/6/e/0/dataset_6e067b22-ab16-4e35-acdc-f6cb5be8eb37.dat' && cp '/galaxy/server/database/objects/c/9/7/dataset_c976532d-f8ed-4593-af5e-eca7eeb7433d.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/1/5/7/dataset_157e2827-959c-4ccf-87ab-0a0a4b151a7b.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/d/8/f/dataset_d8f0fdf8-4868-4df8-9c90-f8a18c145470.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 55: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 310, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 311, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 309, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "2ac2d3cfcc6ec29e",
            "src": "hda",
            "uuid": "d8f0fdf8-4868-4df8-9c90-f8a18c145470"
        },
        "pairstraight|file2": {
            "id": "fec6f836e76c9fad",
            "src": "hda",
            "uuid": "157e2827-959c-4ccf-87ab-0a0a4b151a7b"
        },
        "pairstraight|file1": {
            "id": "71b39b68a31bf8e1",
            "src": "hda",
            "uuid": "c976532d-f8ed-4593-af5e-eca7eeb7433d"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "c1561c972173e34e",
            "src": "hda",
            "uuid": "6e067b22-ab16-4e35-acdc-f6cb5be8eb37"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "18c9662be66371bd",
            "src": "hda",
            "uuid": "6fa8da41-fb61-4ec4-84a0-4ec5eb8c39bc"
        },
        "observed_bias_3p": {
            "id": "79f2b08f59e6659f",
            "src": "hda",
            "uuid": "b7437539-90bd-4804-a5e8-ed4e41eca24f"
        },
        "observed_bias": {
            "id": "54add488026753ac",
            "src": "hda",
            "uuid": "6df5a44e-09e9-4b4f-94f8-471726f7a0c0"
        },
        "expected_bias": {
            "id": "52f75d5b5d87cd1c",
            "src": "hda",
            "uuid": "97b64b46-d54a-4b90-8da7-39a034e31411"
        },
        "whitelist_txt": {
            "id": "c813b3ff3f224441",
            "src": "hda",
            "uuid": "570147a4-4cb8-4d92-bd5f-fb938388f991"
        },
        "featureDump_txt": {
            "id": "1e83833cddd086f9",
            "src": "hda",
            "uuid": "27e19cea-080b-43ab-b69b-de3fccda11fd"
        },
        "quants_tier_mat": {
            "id": "22d3862e7069e99a",
            "src": "hda",
            "uuid": "063eda5a-5031-404b-b7a5-01408913f79e"
        },
        "quants_mat_rows_txt": {
            "id": "8a563db9552d93b3",
            "src": "hda",
            "uuid": "3adc988b-0f2e-4845-b5b9-6601043bd04a"
        },
        "quants_mat_cols_txt": {
            "id": "a2d4b7da103c0b62",
            "src": "hda",
            "uuid": "41043f4d-a67e-4184-a6e6-8c37e430af3f"
        },
        "raw_cb_frequency_txt": {
            "id": "570c6c2b79c3f131",
            "src": "hda",
            "uuid": "5d9eb787-3d8d-4cc4-8060-0ed4a7ba7408"
        },
        "quants_mat_mtx": {
            "id": "17f3c369238547f7",
            "src": "hda",
            "uuid": "1ea80452-f355-4e0e-b41c-29c287b7036d"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
