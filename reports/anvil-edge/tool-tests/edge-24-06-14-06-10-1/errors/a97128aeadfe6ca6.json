{
    "model_class": "Job",
    "id": "a97128aeadfe6ca6",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-06-14T07:14:04.814183",
    "create_time": "2024-06-14T07:13:33.387080",
    "galaxy_version": "23.1",
    "command_version": "",
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "22613252a4fc10bd",
    "external_id": "gxy-2l72j",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/c/f/3/dataset_cf38e501-bf53-48ab-989c-c5cb40c30b3b.dat' && cp '/galaxy/server/database/objects/c/5/c/dataset_c5cd1ddc-f486-4f61-8410-3c2d50ba1333.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/4/c/7/dataset_4c726ef6-4235-4e81-87dc-acb02a265c80.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/d/a/8/dataset_da818170-472e-499d-b095-f1b0b1a6f701.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 64: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 305, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 306, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 304, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "1d528e8b40a5f28d",
            "src": "hda",
            "uuid": "da818170-472e-499d-b095-f1b0b1a6f701"
        },
        "pairstraight|file2": {
            "id": "5ba2fe6cd19e2492",
            "src": "hda",
            "uuid": "4c726ef6-4235-4e81-87dc-acb02a265c80"
        },
        "pairstraight|file1": {
            "id": "b8cce026ca147a38",
            "src": "hda",
            "uuid": "c5cd1ddc-f486-4f61-8410-3c2d50ba1333"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "9521486d780536f5",
            "src": "hda",
            "uuid": "cf38e501-bf53-48ab-989c-c5cb40c30b3b"
        }
    },
    "outputs": {
        "raw_cb_frequency_txt": {
            "id": "8248ad6078613e29",
            "src": "hda",
            "uuid": "de6285bb-4309-4fc0-bbc9-3fd50a9e71a3"
        },
        "quants_mat_cols_txt": {
            "id": "7f1554f318a8a641",
            "src": "hda",
            "uuid": "0af3a1ba-c29e-4928-8560-0a4a12f82dd2"
        },
        "quants_mat_rows_txt": {
            "id": "0b20ae6cb6c01711",
            "src": "hda",
            "uuid": "4c0c2623-5b93-4d8f-ad94-c44eb3131aba"
        },
        "quants_tier_mat": {
            "id": "fe1f9525f1c62320",
            "src": "hda",
            "uuid": "ef646b3c-c34d-431b-a70f-f6e4b52f34b4"
        },
        "featureDump_txt": {
            "id": "c677df9555b73e71",
            "src": "hda",
            "uuid": "67e71241-5868-41d7-9a3c-ccbd8d4dd567"
        },
        "whitelist_txt": {
            "id": "b952ffd497efdcfd",
            "src": "hda",
            "uuid": "33eb5931-ad05-4ac0-894b-d67b9790b341"
        },
        "expected_bias": {
            "id": "7c189706401265da",
            "src": "hda",
            "uuid": "b1e35534-848a-488b-9873-1c252524f58f"
        },
        "observed_bias": {
            "id": "147b6a5c486c3f84",
            "src": "hda",
            "uuid": "661b74f1-662d-4c9a-8d88-7be5dfbf58fa"
        },
        "observed_bias_3p": {
            "id": "ea9e85b33451b733",
            "src": "hda",
            "uuid": "dfb80b13-0162-4c69-bb98-d2cbc650ffb4"
        },
        "flenDist_txt": {
            "id": "fa8a70b96c750fd9",
            "src": "hda",
            "uuid": "b4b1b094-2e9f-49fa-98c0-c1b5619596cf"
        },
        "quants_mat_mtx": {
            "id": "7074ed603ba2a78c",
            "src": "hda",
            "uuid": "165a73ee-d7d0-405e-9b7b-d85ea2f9357e"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
