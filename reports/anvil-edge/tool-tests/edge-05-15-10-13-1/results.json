{"version": "0.1", "suitename": "Ephemeris tool tests targeting http://35.231.127.11:8000/galaxy/", "results": {"total": 223, "errors": 31, "failures": 0, "skips": 0}, "tests": [{"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 29.824123859405518, "inputs": {"bamFile1": {"src": "hda", "id": "b1ada3b1b0e75ca4"}, "bamFile2": {"src": "hda", "id": "b1ada3b1b0e75ca4"}, "binSize": "5", "comparison|type": "ratio", "outFileFormat": "bedgraph", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "a354a335986aa871", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:38:08.198978", "create_time": "2023-05-15T11:37:55.362302", "galaxy_version": "23.0", "command_version": "bamCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-87czc", "command_line": "ln -s '/galaxy/server/database/objects/4/7/a/dataset_47aea6fc-6160-49be-847a-d9cf69049ace.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/c/0/metadata_ac0009fd-08f2-4985-a300-74a23606b767.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/4/7/a/dataset_47aea6fc-6160-49be-847a-d9cf69049ace.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/c/0/metadata_ac0009fd-08f2-4985-a300-74a23606b767.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/8/b/d/dataset_8bd39ab7-e487-48c6-a146-288499f93f59.dat' --outFileFormat 'bedgraph'  --binSize 5  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "region": "\"\"", "outFileFormat": "\"bedgraph\"", "exactScaling": "false", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "binSize": "\"5\""}, "inputs": {"bamFile1": {"id": "b1ada3b1b0e75ca4", "src": "hda", "uuid": "47aea6fc-6160-49be-847a-d9cf69049ace"}, "bamFile2": {"id": "b1ada3b1b0e75ca4", "src": "hda", "uuid": "47aea6fc-6160-49be-847a-d9cf69049ace"}}, "outputs": {"outFileName": {"id": "f1ace1396b83c45b", "src": "hda", "uuid": "8bd39ab7-e487-48c6-a146-288499f93f59"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:37:58", "plugin": "core", "name": "end_epoch", "raw_value": "1684150678.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:37:57", "plugin": "core", "name": "start_epoch", "raw_value": "1684150677.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 28.555983781814575, "inputs": {"bamFile1": {"src": "hda", "id": "c154bb7efefc9b37"}, "bamFile2": {"src": "hda", "id": "c154bb7efefc9b37"}, "binSize": "10", "comparison|type": "ratio", "outFileFormat": "bigwig", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "f68593d2740a1194", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:38:35.724937", "create_time": "2023-05-15T11:38:22.187969", "galaxy_version": "23.0", "command_version": "bamCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-z8j8v", "command_line": "ln -s '/galaxy/server/database/objects/6/4/7/dataset_6474dc4c-9a41-4333-a915-4e91c0bc659c.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/9/9/4/metadata_994abea1-a5b8-4f7f-a768-0da51b0b94bc.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/6/4/7/dataset_6474dc4c-9a41-4333-a915-4e91c0bc659c.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/9/9/4/metadata_994abea1-a5b8-4f7f-a768-0da51b0b94bc.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/1/f/2/dataset_1f2711fe-b158-4378-ae43-1c8ac125ccd3.dat' --outFileFormat 'bigwig'  --binSize 10  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1       --minMappingQuality '1'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"blackListFileName\": null, \"centerReads\": false, \"doExtendCustom\": {\"__current_case__\": 0, \"doExtend\": \"no\"}, \"ignoreDuplicates\": false, \"ignoreForNormalization\": \"\", \"maxFragmentLength\": \"0\", \"minFragmentLength\": \"0\", \"minMappingQuality\": \"1\", \"samFlagExclude\": \"\", \"samFlagInclude\": \"\", \"showAdvancedOpt\": \"yes\", \"skipNAs\": false, \"skipZeroOverZero\": \"\", \"smoothLength\": \"\"}", "region": "\"\"", "outFileFormat": "\"bigwig\"", "exactScaling": "false", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "binSize": "\"10\""}, "inputs": {"bamFile2": {"id": "c154bb7efefc9b37", "src": "hda", "uuid": "6474dc4c-9a41-4333-a915-4e91c0bc659c"}, "bamFile1": {"id": "c154bb7efefc9b37", "src": "hda", "uuid": "6474dc4c-9a41-4333-a915-4e91c0bc659c"}}, "outputs": {"outFileName": {"id": "cd4740995ed2a917", "src": "hda", "uuid": "1f2711fe-b158-4378-ae43-1c8ac125ccd3"}}, "output_collections": {}, "tool_stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:38:26", "plugin": "core", "name": "end_epoch", "raw_value": "1684150706.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:38:26", "plugin": "core", "name": "start_epoch", "raw_value": "1684150706.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 35.2534601688385, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "c154bb7efefc9b37"}, "histogram": true, "plotTitle": "Test Plot"}, "job": {"model_class": "Job", "id": "2b872ae8bd9c2feb", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:38:43.111236", "create_time": "2023-05-15T11:38:24.964329", "galaxy_version": "23.0", "command_version": "bamPEFragmentSize 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-d55xh", "command_line": "ln -s '/galaxy/server/database/objects/6/4/7/dataset_6474dc4c-9a41-4333-a915-4e91c0bc659c.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/9/9/4/metadata_994abea1-a5b8-4f7f-a768-0da51b0b94bc.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --histogram '/galaxy/server/database/objects/7/b/1/dataset_7b183315-c61b-44d6-bfc0-b6734de51c25.dat' --plotFileFormat 'png' --plotTitle 'Test Plot' > '/galaxy/server/database/objects/2/0/8/dataset_2084973f-5aaf-4cd4-9ff2-a16f6665c810.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "plotTitle": "\"Test Plot\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "true", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 685, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"bamfiles1": {"id": "c154bb7efefc9b37", "src": "hda", "uuid": "6474dc4c-9a41-4333-a915-4e91c0bc659c"}, "bamfiles": {"id": "c154bb7efefc9b37", "src": "hda", "uuid": "6474dc4c-9a41-4333-a915-4e91c0bc659c"}}, "outputs": {"fragLengths": {"id": "0dac0c10304aecb8", "src": "hda", "uuid": "b436f57d-3471-498f-b716-75370b2704e0"}, "table": {"id": "2add5d3a0a07b4a2", "src": "hda", "uuid": "d1011df4-d2f7-4656-9d55-b286974880ad"}, "histogram_outfile": {"id": "99c8c5ca750b68f9", "src": "hda", "uuid": "7b183315-c61b-44d6-bfc0-b6734de51c25"}, "outfile": {"id": "d405f9873fc42903", "src": "hda", "uuid": "2084973f-5aaf-4cd4-9ff2-a16f6665c810"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:38:33", "plugin": "core", "name": "end_epoch", "raw_value": "1684150713.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:38:30", "plugin": "core", "name": "start_epoch", "raw_value": "1684150710.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 29.362643480300903, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "fc9cb178661fb3ac"}, "advancedOpt|table": true, "advancedOpt|outRawFragmentLengths": true, "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "e3b5cedc8289c34f", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:39:04.782943", "create_time": "2023-05-15T11:38:50.470663", "galaxy_version": "23.0", "command_version": "bamPEFragmentSize 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-5cv4c", "command_line": "ln -s '/galaxy/server/database/objects/4/a/2/dataset_4a248bfc-384e-438c-931c-6242076b86f8.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/b/d/e/metadata_bdeee363-df42-406e-8b15-e200abaac8e6.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --plotTitle '' --binSize '1000' --distanceBetweenBins '1000000'  --maxFragmentLength '0'     --table '/galaxy/server/database/objects/3/0/c/dataset_30cf1df5-5bba-49be-bd13-715d75ad6467.dat' --outRawFragmentLengths '/galaxy/server/database/objects/a/f/d/dataset_afd90dce-2836-41cd-8cee-e705a8d67493.dat' > '/galaxy/server/database/objects/1/3/e/dataset_13e2e356-b91a-4988-94e8-02f05f4ba69a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"binSize\": \"1000\", \"blackListFileName\": null, \"distanceBetweenBins\": \"1000000\", \"logScale\": false, \"maxFragmentLength\": \"0\", \"outRawFragmentLengths\": true, \"showAdvancedOpt\": \"yes\", \"table\": true}", "plotTitle": "\"\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "false", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 691, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"bamfiles1": {"id": "fc9cb178661fb3ac", "src": "hda", "uuid": "4a248bfc-384e-438c-931c-6242076b86f8"}, "bamfiles": {"id": "fc9cb178661fb3ac", "src": "hda", "uuid": "4a248bfc-384e-438c-931c-6242076b86f8"}}, "outputs": {"fragLengths": {"id": "db8bc2acbaa9dd9d", "src": "hda", "uuid": "afd90dce-2836-41cd-8cee-e705a8d67493"}, "table": {"id": "b211e7fc09fdf9d5", "src": "hda", "uuid": "30cf1df5-5bba-49be-bd13-715d75ad6467"}, "outfile": {"id": "cf70fe6f2f85939c", "src": "hda", "uuid": "13e2e356-b91a-4988-94e8-02f05f4ba69a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:38:55", "plugin": "core", "name": "end_epoch", "raw_value": "1684150735.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:38:52", "plugin": "core", "name": "start_epoch", "raw_value": "1684150732.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 26.162256717681885, "inputs": {"bigwigFile1": {"src": "hda", "id": "da119390fbed281b"}, "bigwigFile2": {"src": "hda", "id": "da119390fbed281b"}, "comparison|comparison_select": "ratio", "outFileFormat": "bigwig", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "bffe87fdbc44be80", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:39:09.690987", "create_time": "2023-05-15T11:38:58.583857", "galaxy_version": "23.0", "command_version": "bigwigCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-jr9lb", "command_line": "bigwigCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bigwig1 '/galaxy/server/database/objects/8/0/4/dataset_80489d9f-ed0d-4470-a638-77a2540af80a.dat' --bigwig2 '/galaxy/server/database/objects/8/0/4/dataset_80489d9f-ed0d-4470-a638-77a2540af80a.dat'  --outFileName '/galaxy/server/database/objects/c/2/9/dataset_c29b9be1-1f8f-41a5-8972-a56c0a90aad4.dat' --outFileFormat 'bigwig'  --operation ratio  --pseudocount 1 1", "traceback": null, "params": {"__input_ext": "\"bigwig\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "region": "\"\"", "outFileFormat": "\"bigwig\"", "comparison": "{\"__current_case__\": 1, \"comparison_select\": \"ratio\", \"pseudocount\": \"1 1\"}"}, "inputs": {"bigwigFile2": {"id": "da119390fbed281b", "src": "hda", "uuid": "80489d9f-ed0d-4470-a638-77a2540af80a"}, "bigwigFile1": {"id": "da119390fbed281b", "src": "hda", "uuid": "80489d9f-ed0d-4470-a638-77a2540af80a"}}, "outputs": {"outFileName": {"id": "ca73ee8acbbe97a0", "src": "hda", "uuid": "c29b9be1-1f8f-41a5-8972-a56c0a90aad4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:39:00", "plugin": "core", "name": "end_epoch", "raw_value": "1684150740.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:39:00", "plugin": "core", "name": "start_epoch", "raw_value": "1684150740.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 30.149558305740356, "inputs": {"bigwigFile1": {"src": "hda", "id": "884e5a7a2a4c9ecf"}, "bigwigFile2": {"src": "hda", "id": "884e5a7a2a4c9ecf"}, "comparison|comparison_select": "ratio", "outFileFormat": "bedgraph", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "aea07db6a57ac9a8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:39:35.376481", "create_time": "2023-05-15T11:39:22.798041", "galaxy_version": "23.0", "command_version": "bigwigCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-zkpls", "command_line": "bigwigCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bigwig1 '/galaxy/server/database/objects/6/8/a/dataset_68a2159d-7f1b-48f9-a305-6fedd1d68689.dat' --bigwig2 '/galaxy/server/database/objects/6/8/a/dataset_68a2159d-7f1b-48f9-a305-6fedd1d68689.dat'  --outFileName '/galaxy/server/database/objects/a/a/2/dataset_aa2aa1c2-f53c-48f3-8cbe-d3142ecfb381.dat' --outFileFormat 'bedgraph'  --operation ratio  --pseudocount 1 1", "traceback": null, "params": {"__input_ext": "\"bigwig\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "region": "\"\"", "outFileFormat": "\"bedgraph\"", "comparison": "{\"__current_case__\": 1, \"comparison_select\": \"ratio\", \"pseudocount\": \"1 1\"}"}, "inputs": {"bigwigFile2": {"id": "884e5a7a2a4c9ecf", "src": "hda", "uuid": "68a2159d-7f1b-48f9-a305-6fedd1d68689"}, "bigwigFile1": {"id": "884e5a7a2a4c9ecf", "src": "hda", "uuid": "68a2159d-7f1b-48f9-a305-6fedd1d68689"}}, "outputs": {"outFileName": {"id": "59db7bea7693481a", "src": "hda", "uuid": "aa2aa1c2-f53c-48f3-8cbe-d3142ecfb381"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:39:26", "plugin": "core", "name": "end_epoch", "raw_value": "1684150766.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:39:25", "plugin": "core", "name": "start_epoch", "raw_value": "1684150765.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_gc_bias/deeptools_compute_gc_bias/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_gc_bias/deeptools_compute_gc_bias", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 16.820659160614014, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 70.80615663528442, "inputs": {"regionsFiles_0|regionsFile": {"src": "hda", "id": "1a718688d96c89e8"}, "multibigwig_conditional|bigwigfiles": {"src": "hda", "id": "250055991a6acb3d"}, "mode|beforeRegionStartLength": "10", "mode|afterRegionStartLength": "10", "mode|mode_select": "reference-point", "advancedOpt|binSize": "10", "advancedOpt|sortUsing": "sum", "advancedOpt|averageTypeBins": "sum", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "070f20a6feddff8b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:37:07.413362", "create_time": "2023-05-15T11:36:18.920590", "galaxy_version": "23.0", "command_version": "computeMatrix 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-742wq", "command_line": "ln -f -s '/galaxy/server/database/objects/b/1/e/dataset_b1ec7b8f-75fe-4897-a75e-aeaaab528c83.dat' 'bamCoverage_result4.bw_0.bw' &&    ln -f -s '/galaxy/server/database/objects/a/e/6/dataset_ae6e6fcd-fb70-46ce-86ff-edfaa327699a.dat' 'computeMatrix1_bed_0.bed' &&  computeMatrix  reference-point --regionsFileName 'computeMatrix1_bed_0.bed'  --scoreFileName 'bamCoverage_result4.bw_0.bw'  --outFileName '/galaxy/server/database/objects/9/6/d/dataset_96df29ba-1ddd-4b29-992b-7ac8b67733c7.dat' --samplesLabel 'bamCoverage_result4.bw'  --numberOfProcessors \"${GALAXY_SLOTS:-4}\"   --referencePoint TSS  --beforeRegionStartLength 10 --afterRegionStartLength 10  --sortRegions 'keep' --sortUsing 'sum' --averageTypeBins 'sum'   --binSize 10     --transcriptID transcript --exonID exon --transcript_id_designator transcript_id", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"averageTypeBins\": \"sum\", \"binSize\": \"10\", \"blackListFileName\": null, \"exonID\": \"exon\", \"maxThreshold\": \"\", \"metagene\": false, \"minThreshold\": \"\", \"missingDataAsZero\": false, \"scale\": \"\", \"showAdvancedOpt\": \"yes\", \"skipZeros\": false, \"sortRegions\": \"keep\", \"sortUsing\": \"sum\", \"transcriptID\": \"transcript\", \"transcript_id_designator\": \"transcript_id\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}", "mode": "{\"__current_case__\": 1, \"afterRegionStartLength\": \"10\", \"beforeRegionStartLength\": \"10\", \"mode_select\": \"reference-point\", \"nanAfterEnd\": false, \"referencePoint\": \"TSS\"}", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibigwig_conditional": "{\"__current_case__\": 0, \"bigwigfiles\": {\"values\": [{\"id\": 670, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "regionsFiles": "[{\"__index__\": 0, \"regionsFile\": {\"values\": [{\"id\": 669, \"src\": \"hda\"}]}}]"}, "inputs": {"bigwigfiles1": {"id": "250055991a6acb3d", "src": "hda", "uuid": "b1ec7b8f-75fe-4897-a75e-aeaaab528c83"}, "bigwigfiles": {"id": "250055991a6acb3d", "src": "hda", "uuid": "b1ec7b8f-75fe-4897-a75e-aeaaab528c83"}, "regionsFiles_0|regionsFile": {"id": "1a718688d96c89e8", "src": "hda", "uuid": "ae6e6fcd-fb70-46ce-86ff-edfaa327699a"}}, "outputs": {"outFileName": {"id": "c51a087349fbc6a5", "src": "hda", "uuid": "96df29ba-1ddd-4b29-992b-7ac8b67733c7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:36:51", "plugin": "core", "name": "end_epoch", "raw_value": "1684150611.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:36:50", "plugin": "core", "name": "start_epoch", "raw_value": "1684150610.0000000"}, {"title": "Memory Allocated (MB)", "value": "32212", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32212.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 75.43940091133118, "inputs": {"regionsFiles_0|regionsFile": {"src": "hda", "id": "ab7e2e718c1d1de1"}, "multibigwig_conditional|bigwigfiles": {"src": "hda", "id": "df20bf213769478e"}, "mode|beforeRegionStartLength": "10", "mode|afterRegionStartLength": "10", "mode|mode_select": "reference-point", "advancedOpt|binSize": "10", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "ef1be09505014369", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:37:13.064454", "create_time": "2023-05-15T11:36:20.966324", "galaxy_version": "23.0", "command_version": "computeMatrix 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-2m7nf", "command_line": "ln -f -s '/galaxy/server/database/objects/b/0/d/dataset_b0d3e59a-60cd-47c5-b8d9-ab02f9c67e2e.dat' 'computeMatrix2.bw_0.bw' &&    ln -f -s '/galaxy/server/database/objects/9/e/c/dataset_9ec43433-3aa3-4c99-8c27-e7bc0f5d5683.dat' 'computeMatrix2_bed_0.bed' &&  computeMatrix  reference-point --regionsFileName 'computeMatrix2_bed_0.bed'  --scoreFileName 'computeMatrix2.bw_0.bw'  --outFileName '/galaxy/server/database/objects/4/6/0/dataset_460a2ff8-3620-4150-95ac-57831ee28049.dat' --samplesLabel 'computeMatrix2.bw'  --numberOfProcessors \"${GALAXY_SLOTS:-4}\"   --referencePoint TSS  --beforeRegionStartLength 10 --afterRegionStartLength 10  --sortRegions 'keep' --sortUsing 'mean' --averageTypeBins 'mean'   --binSize 10     --transcriptID transcript --exonID exon --transcript_id_designator transcript_id", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"averageTypeBins\": \"mean\", \"binSize\": \"10\", \"blackListFileName\": null, \"exonID\": \"exon\", \"maxThreshold\": \"\", \"metagene\": false, \"minThreshold\": \"\", \"missingDataAsZero\": false, \"scale\": \"\", \"showAdvancedOpt\": \"yes\", \"skipZeros\": false, \"sortRegions\": \"keep\", \"sortUsing\": \"mean\", \"transcriptID\": \"transcript\", \"transcript_id_designator\": \"transcript_id\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}", "mode": "{\"__current_case__\": 1, \"afterRegionStartLength\": \"10\", \"beforeRegionStartLength\": \"10\", \"mode_select\": \"reference-point\", \"nanAfterEnd\": false, \"referencePoint\": \"TSS\"}", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibigwig_conditional": "{\"__current_case__\": 0, \"bigwigfiles\": {\"values\": [{\"id\": 672, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "regionsFiles": "[{\"__index__\": 0, \"regionsFile\": {\"values\": [{\"id\": 671, \"src\": \"hda\"}]}}]"}, "inputs": {"bigwigfiles1": {"id": "df20bf213769478e", "src": "hda", "uuid": "b0d3e59a-60cd-47c5-b8d9-ab02f9c67e2e"}, "bigwigfiles": {"id": "df20bf213769478e", "src": "hda", "uuid": "b0d3e59a-60cd-47c5-b8d9-ab02f9c67e2e"}, "regionsFiles_0|regionsFile": {"id": "ab7e2e718c1d1de1", "src": "hda", "uuid": "9ec43433-3aa3-4c99-8c27-e7bc0f5d5683"}}, "outputs": {"outFileName": {"id": "a30252d23410a76a", "src": "hda", "uuid": "460a2ff8-3620-4150-95ac-57831ee28049"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:37:02", "plugin": "core", "name": "end_epoch", "raw_value": "1684150622.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:37:01", "plugin": "core", "name": "start_epoch", "raw_value": "1684150621.0000000"}, {"title": "Memory Allocated (MB)", "value": "32212", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32212.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix", "tool_version": "3.3.2.0.0", "test_index": 2, "time_seconds": 30.340255737304688, "inputs": {"regionsFiles_0|regionsFile": {"src": "hda", "id": "58f083b01ed59b2f"}, "multibigwig_conditional|bigwigfiles": {"src": "hda", "id": "7b8fe319ce006f72"}, "mode|mode_select": "scale-regions", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "5987e0894e408335", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:37:37.878663", "create_time": "2023-05-15T11:37:25.860229", "galaxy_version": "23.0", "command_version": "computeMatrix 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-nblsd", "command_line": "ln -f -s '/galaxy/server/database/objects/b/c/e/dataset_bcec057b-04ce-4605-8bcb-50f174854313.dat' 'computeMatrix2.bw_0.bw' &&    ln -f -s '/galaxy/server/database/objects/0/e/b/dataset_0eb93d08-8ab0-42ce-826d-db2a034ff2a8.dat' 'computeMatrix2_bed_0.bed' &&  computeMatrix  scale-regions --regionsFileName 'computeMatrix2_bed_0.bed'  --scoreFileName 'computeMatrix2.bw_0.bw'  --outFileName '/galaxy/server/database/objects/9/e/2/dataset_9e296c64-a8c6-4044-b069-d9be9953c09c.dat' --samplesLabel 'computeMatrix2.bw'  --numberOfProcessors \"${GALAXY_SLOTS:-4}\"   --regionBodyLength 500   --sortRegions 'keep' --sortUsing 'mean' --averageTypeBins 'mean'   --binSize 50     --transcriptID transcript --exonID exon --transcript_id_designator transcript_id", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"averageTypeBins\": \"mean\", \"binSize\": \"50\", \"blackListFileName\": null, \"exonID\": \"exon\", \"maxThreshold\": \"\", \"metagene\": false, \"minThreshold\": \"\", \"missingDataAsZero\": false, \"scale\": \"\", \"showAdvancedOpt\": \"yes\", \"skipZeros\": false, \"sortRegions\": \"keep\", \"sortUsing\": \"mean\", \"transcriptID\": \"transcript\", \"transcript_id_designator\": \"transcript_id\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}", "mode": "{\"__current_case__\": 0, \"mode_select\": \"scale-regions\", \"regionBodyLength\": \"500\", \"regionStartLength\": {\"__current_case__\": 0, \"regionStartLength_select\": \"no\"}}", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibigwig_conditional": "{\"__current_case__\": 0, \"bigwigfiles\": {\"values\": [{\"id\": 676, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "regionsFiles": "[{\"__index__\": 0, \"regionsFile\": {\"values\": [{\"id\": 675, \"src\": \"hda\"}]}}]"}, "inputs": {"bigwigfiles1": {"id": "7b8fe319ce006f72", "src": "hda", "uuid": "bcec057b-04ce-4605-8bcb-50f174854313"}, "bigwigfiles": {"id": "7b8fe319ce006f72", "src": "hda", "uuid": "bcec057b-04ce-4605-8bcb-50f174854313"}, "regionsFiles_0|regionsFile": {"id": "58f083b01ed59b2f", "src": "hda", "uuid": "0eb93d08-8ab0-42ce-826d-db2a034ff2a8"}}, "outputs": {"outFileName": {"id": "397b019dc8a5777d", "src": "hda", "uuid": "9e296c64-a8c6-4044-b069-d9be9953c09c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...\n", "job_stdout": "", "job_stderr": "", "stderr": "A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:37:28", "plugin": "core", "name": "end_epoch", "raw_value": "1684150648.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:37:27", "plugin": "core", "name": "start_epoch", "raw_value": "1684150647.0000000"}, {"title": "Memory Allocated (MB)", "value": "32212", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32212.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_correct_gc_bias/deeptools_correct_gc_bias/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_correct_gc_bias/deeptools_correct_gc_bias", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 39.22454261779785, "inputs": {"GCbiasFrequenciesFile": {"src": "hda", "id": "b5c66daa6820cba8"}, "bamInput": {"src": "hda", "id": "9b3ff96b53c8e97c"}, "source|input1": {"src": "hda", "id": "e71f2e79cc2c7e6e"}, "source|ref_source": "history", "effectiveGenomeSize|effectiveGenomeSize": "10050", "effectiveGenomeSize|effectiveGenomeSize_opt": "specific"}, "job": {"model_class": "Job", "id": "cb77b650fb9ff65a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:40:05.704346", "create_time": "2023-05-15T11:39:47.190256", "galaxy_version": "23.0", "command_version": "correctGCBias 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_correct_gc_bias/deeptools_correct_gc_bias/3.3.2.0.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-48ppk", "command_line": "ln -s '/galaxy/server/database/objects/5/d/9/dataset_5d9f632a-a803-43df-9ddd-8fa093a9dbbe.dat' local_bamInput.bam && ln -s '/galaxy/server/database/objects/_metadata_files/9/f/7/metadata_9f711ddc-b6d1-451d-a1a3-6ba0d51a5dae.dat' local_bamInput.bam.bai &&  correctGCBias --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile local_bamInput.bam --GCbiasFrequenciesFile '/galaxy/server/database/objects/d/4/d/dataset_d4d7c12c-5bb7-4914-97a4-cc242a939a53.dat'   --genome /galaxy/server/database/objects/9/4/1/dataset_941bdabe-77cf-4460-9ee1-70d6ed2f71a8.dat   --effectiveGenomeSize 10050  --correctedFile corrected.bam", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "region": "\"\"", "effectiveGenomeSize": "{\"__current_case__\": 0, \"effectiveGenomeSize\": \"10050\", \"effectiveGenomeSize_opt\": \"specific\"}", "source": "{\"__current_case__\": 1, \"input1\": {\"values\": [{\"id\": 703, \"src\": \"hda\"}]}, \"ref_source\": \"history\"}"}, "inputs": {"input1": {"id": "e71f2e79cc2c7e6e", "src": "hda", "uuid": "941bdabe-77cf-4460-9ee1-70d6ed2f71a8"}, "bamInput": {"id": "9b3ff96b53c8e97c", "src": "hda", "uuid": "5d9f632a-a803-43df-9ddd-8fa093a9dbbe"}, "GCbiasFrequenciesFile": {"id": "b5c66daa6820cba8", "src": "hda", "uuid": "d4d7c12c-5bb7-4914-97a4-cc242a939a53"}}, "outputs": {"outFileName": {"id": "03c1a532bcea1bfb", "src": "hda", "uuid": "db0ccffc-ab96-4fca-bffe-292912dfcec5"}}, "output_collections": {}, "tool_stdout": "applying correction\ngenome partition size for multiprocessing: 319326\nusing region None\n{'chr2L': 'chr2L'} {'chr2L': 'chr2L'}\nusing 8 processors for 73 number of tasks\nconcatenating (sorted) intermediate BAMs\nindexing BAM\nSam for chr2L 6705846 7025172 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:6705846-7025172\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7025172 7344498 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7025172-7344498\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7344498 7663824 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7344498-7663824\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8621802 8941128 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:8621802-8941128\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8941128 9260454 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:8941128-9260454\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9260454 9579780 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:9260454-9579780\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15327648 15646974 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:15327648-15646974\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15646974 15966300 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:15646974-15966300\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15966300 16285626 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:15966300-16285626\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5747868 6067194 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:5747868-6067194\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6067194 6386520 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6067194-6386520\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6386520 6705846 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6386520-6705846\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12453714 12773040 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:12453714-12773040\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12773040 13092366 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:12773040-13092366\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13092366 13411692 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:13092366-13411692\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19159560 19478886 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19159560-19478886\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19478886 19798212 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19478886-19798212\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19798212 20117538 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19798212-20117538\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3831912 4151238 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:3831912-4151238\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4151238 4470564 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4151238-4470564\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4470564 4789890 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4470564-4789890\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10537758 10857084 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10537758-10857084\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10857084 11176410 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10857084-11176410\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11176410 11495736 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:11176410-11495736\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18201582 18520908 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:18201582-18520908\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18520908 18840234 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:18520908-18840234\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18840234 19159560 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:18840234-19159560\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 957978 1277304 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:957978-1277304\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1277304 1596630 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1277304-1596630\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1596630 1915956 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1596630-1915956\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13411692 13731018 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13411692-13731018\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13731018 14050344 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13731018-14050344\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14050344 14369670 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:14050344-14369670\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20117538 20436864 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:20117538-20436864\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20436864 20756190 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:20436864-20756190\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20756190 21075516 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:20756190-21075516\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22991472 23011544 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:22991472-23011544\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1915956 2235282 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:1915956-2235282\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2235282 2554608 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2235282-2554608\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2554608 2873934 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2554608-2873934\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11495736 11815062 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:11495736-11815062\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11815062 12134388 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:11815062-12134388\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12134388 12453714 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:12134388-12453714\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16285626 16604952 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:16285626-16604952\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16604952 16924278 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:16604952-16924278\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16924278 17243604 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:16924278-17243604\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21075516 21394842 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:21075516-21394842\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21394842 21714168 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:21394842-21714168\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21714168 22033494 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:21714168-22033494\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4789890 5109216 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:4789890-5109216\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5109216 5428542 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5109216-5428542\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5428542 5747868 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5428542-5747868\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9579780 9899106 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:9579780-9899106\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9899106 10218432 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:9899106-10218432\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10218432 10537758 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:10218432-10537758\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17243604 17562930 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:17243604-17562930\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17562930 17882256 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:17562930-17882256\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17882256 18201582 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:17882256-18201582\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22033494 22352820 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22033494-22352820\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22352820 22672146 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22352820-22672146\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22672146 22991472 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22672146-22991472\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 0 319326 \nForkPoolWorker-1,  processing 12589 (18624.4 per sec) reads @ chr2L:0-319326\nduplicated reads removed 426 of 12589 (3.38) \nSam for chr2L 319326 638652 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:319326-638652\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 638652 957978 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:638652-957978\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2873934 3193260 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:2873934-3193260\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3193260 3512586 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3193260-3512586\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3512586 3831912 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3512586-3831912\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7663824 7983150 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:7663824-7983150\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7983150 8302476 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:7983150-8302476\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8302476 8621802 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:8302476-8621802\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14369670 14688996 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:14369670-14688996\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14688996 15008322 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:14688996-15008322\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15008322 15327648 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:15008322-15327648\nduplicated reads removed 0 of 0 (0.00) \n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "applying correction\ngenome partition size for multiprocessing: 319326\nusing region None\n{'chr2L': 'chr2L'} {'chr2L': 'chr2L'}\nusing 8 processors for 73 number of tasks\nconcatenating (sorted) intermediate BAMs\nindexing BAM\nSam for chr2L 6705846 7025172 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:6705846-7025172\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7025172 7344498 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7025172-7344498\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7344498 7663824 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7344498-7663824\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8621802 8941128 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:8621802-8941128\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8941128 9260454 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:8941128-9260454\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9260454 9579780 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:9260454-9579780\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15327648 15646974 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:15327648-15646974\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15646974 15966300 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:15646974-15966300\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15966300 16285626 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:15966300-16285626\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5747868 6067194 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:5747868-6067194\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6067194 6386520 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6067194-6386520\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6386520 6705846 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6386520-6705846\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12453714 12773040 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:12453714-12773040\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12773040 13092366 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:12773040-13092366\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13092366 13411692 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:13092366-13411692\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19159560 19478886 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19159560-19478886\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19478886 19798212 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19478886-19798212\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19798212 20117538 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19798212-20117538\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3831912 4151238 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:3831912-4151238\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4151238 4470564 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4151238-4470564\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4470564 4789890 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4470564-4789890\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10537758 10857084 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10537758-10857084\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10857084 11176410 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10857084-11176410\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11176410 11495736 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:11176410-11495736\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18201582 18520908 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:18201582-18520908\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18520908 18840234 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:18520908-18840234\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18840234 19159560 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:18840234-19159560\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 957978 1277304 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:957978-1277304\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1277304 1596630 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1277304-1596630\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1596630 1915956 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1596630-1915956\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13411692 13731018 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13411692-13731018\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13731018 14050344 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13731018-14050344\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14050344 14369670 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:14050344-14369670\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20117538 20436864 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:20117538-20436864\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20436864 20756190 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:20436864-20756190\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20756190 21075516 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:20756190-21075516\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22991472 23011544 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:22991472-23011544\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1915956 2235282 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:1915956-2235282\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2235282 2554608 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2235282-2554608\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2554608 2873934 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2554608-2873934\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11495736 11815062 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:11495736-11815062\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11815062 12134388 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:11815062-12134388\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12134388 12453714 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:12134388-12453714\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16285626 16604952 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:16285626-16604952\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16604952 16924278 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:16604952-16924278\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16924278 17243604 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:16924278-17243604\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21075516 21394842 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:21075516-21394842\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21394842 21714168 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:21394842-21714168\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21714168 22033494 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:21714168-22033494\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4789890 5109216 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:4789890-5109216\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5109216 5428542 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5109216-5428542\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5428542 5747868 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5428542-5747868\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9579780 9899106 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:9579780-9899106\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9899106 10218432 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:9899106-10218432\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10218432 10537758 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:10218432-10537758\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17243604 17562930 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:17243604-17562930\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17562930 17882256 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:17562930-17882256\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17882256 18201582 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:17882256-18201582\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22033494 22352820 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22033494-22352820\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22352820 22672146 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22352820-22672146\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22672146 22991472 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22672146-22991472\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 0 319326 \nForkPoolWorker-1,  processing 12589 (18624.4 per sec) reads @ chr2L:0-319326\nduplicated reads removed 426 of 12589 (3.38) \nSam for chr2L 319326 638652 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:319326-638652\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 638652 957978 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:638652-957978\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2873934 3193260 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:2873934-3193260\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3193260 3512586 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3193260-3512586\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3512586 3831912 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3512586-3831912\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7663824 7983150 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:7663824-7983150\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7983150 8302476 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:7983150-8302476\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8302476 8621802 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:8302476-8621802\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14369670 14688996 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:14369670-14688996\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14688996 15008322 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:14688996-15008322\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15008322 15327648 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:15008322-15327648\nduplicated reads removed 0 of 0 (0.00) \n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "8 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "8.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:39:56", "plugin": "core", "name": "end_epoch", "raw_value": "1684150796.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:39:48", "plugin": "core", "name": "start_epoch", "raw_value": "1684150788.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap", "tool_version": "3.3.2.0.1", "test_index": 0, "time_seconds": 25.159010648727417, "inputs": {"matrixFile": {"src": "hda", "id": "c4ccd15a6e1771f9"}}, "job": {"model_class": "Job", "id": "79fbf9324bf046e7", "state": "error", "exit_code": null, "update_time": "2023-05-15T11:37:38.397349", "create_time": "2023-05-15T11:37:30.918165", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1", "history_id": "f3392d7459007ad8", "external_id": "gxy-jlqlw", "command_line": "plotHeatmap --matrixFile '/galaxy/server/database/objects/d/7/7/dataset_d774ce0b-96d2-41dd-8bd3-4d758e6a817b.dat' --outFileName '/galaxy/server/database/objects/7/a/d/dataset_7ad20625-2506-498f-9690-5293f8d28e45.dat'  --plotFileFormat 'png'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}"}, "inputs": {"matrixFile": {"id": "c4ccd15a6e1771f9", "src": "hda", "uuid": "d774ce0b-96d2-41dd-8bd3-4d758e6a817b"}}, "outputs": {"outFileName": {"id": "f85d28e65ef48d61", "src": "hda", "uuid": "7ad20625-2506-498f-9690-5293f8d28e45"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap", "tool_version": "3.3.2.0.1", "test_index": 1, "time_seconds": 29.211002588272095, "inputs": {"matrixFile": {"src": "hda", "id": "1ce060017ea60e33"}, "advancedOpt|whatToShow": "heatmap and colorbar", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "5f8ecf87f6fe919d", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:38:07.170608", "create_time": "2023-05-15T11:37:54.170432", "galaxy_version": "23.0", "command_version": "plotHeatmap 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1", "history_id": "f3392d7459007ad8", "external_id": "gxy-mvjhd", "command_line": "plotHeatmap --matrixFile '/galaxy/server/database/objects/e/c/f/dataset_ecfca8ed-2234-4e19-aef9-e25d837ecb15.dat' --outFileName '/galaxy/server/database/objects/e/6/4/dataset_e64dbd44-4d7a-444a-9cd1-b829e6305d6f.dat'  --plotFileFormat 'png'  --sortRegions 'descend'  --sortUsing 'mean'  --averageTypeSummaryPlot 'mean'  --plotType 'lines'  --missingDataColor 'black'   --alpha '1.0'    --xAxisLabel 'distance from TSS (bp)' --yAxisLabel 'genes'  --heatmapWidth 7.5 --heatmapHeight 25.0  --whatToShow 'heatmap and colorbar'  --startLabel 'TSS' --endLabel 'TES'  --refPointLabel 'TSS'     --legendLocation 'best'  --labelRotation '0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"alpha\": \"1.0\", \"averageTypeSummaryPlot\": \"mean\", \"colorList\": \"\", \"colorMapRepeat\": [], \"endLabel\": \"TES\", \"heatmapHeight\": \"25.0\", \"heatmapWidth\": \"7.5\", \"labelRotation\": \"0\", \"legendLocation\": \"best\", \"missingDataColor\": \"black\", \"perGroup\": false, \"plotTitle\": \"\", \"plotType\": \"lines\", \"referencePointLabel\": \"TSS\", \"regionsLabel\": null, \"samplesLabel\": null, \"showAdvancedOpt\": \"yes\", \"sortRegions\": \"descend\", \"sortUsing\": \"mean\", \"startLabel\": \"TSS\", \"used_multiple_regions\": {\"__current_case__\": 1, \"used_multiple_regions_options\": \"yes\"}, \"whatToShow\": \"heatmap and colorbar\", \"xAxisLabel\": \"distance from TSS (bp)\", \"yAxisLabel\": \"genes\", \"yMax\": \"\", \"yMin\": \"\", \"zMax\": \"\", \"zMin\": \"\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}"}, "inputs": {"matrixFile": {"id": "1ce060017ea60e33", "src": "hda", "uuid": "ecfca8ed-2234-4e19-aef9-e25d837ecb15"}}, "outputs": {"outFileName": {"id": "71e27d826c189b02", "src": "hda", "uuid": "e64dbd44-4d7a-444a-9cd1-b829e6305d6f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:37:57", "plugin": "core", "name": "end_epoch", "raw_value": "1684150677.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:37:56", "plugin": "core", "name": "start_epoch", "raw_value": "1684150676.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon", "tool_version": "1.4.13", "test_index": 0, "time_seconds": 68.58687210083008, "inputs": {"reads": {"src": "hda", "id": "54e3c2e26611306e"}, "overlaps": {"src": "hda", "id": "2b63230010eb9d10"}, "corrected_reads": {"src": "hda", "id": "6eebc344ed60b6f6"}, "u": true, "f": true, "w": "800", "e": "0.2"}, "job": {"model_class": "Job", "id": "2a5bbb9d982fecdd", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:42:37.574573", "create_time": "2023-05-15T10:41:52.439726", "galaxy_version": "23.0", "command_version": "v1.4.13", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13", "history_id": "f3392d7459007ad8", "external_id": "gxy-h68xd", "command_line": "ln -s '/galaxy/server/database/objects/7/9/7/dataset_797f4f69-7aa3-4cd2-9938-4d112006575a.dat' reads.fasta && ln -s '/galaxy/server/database/objects/4/8/6/dataset_486dc4a7-8616-4a8f-b596-98c06ea4bdb7.dat' overlaps.sam && ln -s '/galaxy/server/database/objects/b/3/2/dataset_b32f0b11-4ae6-49db-902c-7598251c7077.dat' corrected_reads.fasta &&  racon reads.fasta overlaps.sam corrected_reads.fasta -t ${GALAXY_SLOTS:-4} -u -f -w 800 -q 10.0 -e 0.2 -m 5 -x -4 -g -8 > racon_polished_consensus.fa", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "g": "\"-8\"", "x": "\"-4\"", "m": "\"5\"", "e": "\"0.2\"", "q": "\"10.0\"", "w": "\"800\"", "f": "true", "u": "true"}, "inputs": {"reads": {"id": "54e3c2e26611306e", "src": "hda", "uuid": "797f4f69-7aa3-4cd2-9938-4d112006575a"}, "overlaps": {"id": "2b63230010eb9d10", "src": "hda", "uuid": "486dc4a7-8616-4a8f-b596-98c06ea4bdb7"}, "corrected_reads": {"id": "6eebc344ed60b6f6", "src": "hda", "uuid": "b32f0b11-4ae6-49db-902c-7598251c7077"}}, "outputs": {"consensus": {"id": "0617e52ae28da257", "src": "hda", "uuid": "80d43e79-6bd7-47ca-a238-7c9fed02e35f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[racon::Polisher::initialize] loaded target sequences 0.001158 s\n[racon::Polisher::initialize] loaded sequences 0.010987 s\n[racon::Polisher::initialize] loaded overlaps 0.010980 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.005879 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.005902 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.005909 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.005915 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.005922 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.005929 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.005934 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.005939 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.005945 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.005951 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.005957 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.005963 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.005970 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.005979 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.005986 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.005992 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.005997 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.006003 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.006009 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.006101 s\n[racon::Polisher::initialize] transformed data into windows 0.000363 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.122151 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.122210 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.124773 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.124794 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.134406 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.142087 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.152211 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.177193 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.207309 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.227545 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.299362 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.299457 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.336800 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.354821 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.355002 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.382560 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.382717 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.401831 s\r[racon::Polisher::polish] generating consensus [===================>] 0.444126 s\r[racon::Polisher::polish] generating consensus [====================] 0.444248 s\n[racon::Polisher::] total = 0.477634 s\n", "job_stdout": "", "job_stderr": "", "stderr": "[racon::Polisher::initialize] loaded target sequences 0.001158 s\n[racon::Polisher::initialize] loaded sequences 0.010987 s\n[racon::Polisher::initialize] loaded overlaps 0.010980 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.005879 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.005902 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.005909 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.005915 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.005922 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.005929 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.005934 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.005939 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.005945 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.005951 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.005957 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.005963 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.005970 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.005979 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.005986 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.005992 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.005997 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.006003 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.006009 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.006101 s\n[racon::Polisher::initialize] transformed data into windows 0.000363 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.122151 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.122210 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.124773 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.124794 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.134406 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.142087 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.152211 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.177193 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.207309 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.227545 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.299362 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.299457 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.336800 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.354821 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.355002 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.382560 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.382717 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.401831 s\r[racon::Polisher::polish] generating consensus [===================>] 0.444126 s\r[racon::Polisher::polish] generating consensus [====================] 0.444248 s\n[racon::Polisher::] total = 0.477634 s\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:42:26", "plugin": "core", "name": "end_epoch", "raw_value": "1684147346.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:42:26", "plugin": "core", "name": "start_epoch", "raw_value": "1684147346.0000000"}, {"title": "Memory Allocated (MB)", "value": "38654", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "38654.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon", "tool_version": "1.4.13", "test_index": 1, "time_seconds": 52.9024817943573, "inputs": {"reads": {"src": "hda", "id": "54e3c2e26611306e"}, "overlaps": {"src": "hda", "id": "2ba1fbf9412e661d"}, "corrected_reads": {"src": "hda", "id": "6eebc344ed60b6f6"}}, "job": {"model_class": "Job", "id": "65a39d70c2367b5e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:42:41.897854", "create_time": "2023-05-15T10:42:09.178214", "galaxy_version": "23.0", "command_version": "v1.4.13", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13", "history_id": "f3392d7459007ad8", "external_id": "gxy-qwcz7", "command_line": "ln -s '/galaxy/server/database/objects/7/9/7/dataset_797f4f69-7aa3-4cd2-9938-4d112006575a.dat' reads.fasta && ln -s '/galaxy/server/database/objects/5/4/4/dataset_54417b43-46cc-458b-8fb1-cfe84b56b276.dat' overlaps.paf && ln -s '/galaxy/server/database/objects/b/3/2/dataset_b32f0b11-4ae6-49db-902c-7598251c7077.dat' corrected_reads.fasta &&  racon reads.fasta overlaps.paf corrected_reads.fasta -t ${GALAXY_SLOTS:-4}   -w 500 -q 10.0 -e 0.3 -m 5 -x -4 -g -8 > racon_polished_consensus.fa", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "g": "\"-8\"", "x": "\"-4\"", "m": "\"5\"", "e": "\"0.3\"", "q": "\"10.0\"", "w": "\"500\"", "f": "false", "u": "false"}, "inputs": {"reads": {"id": "54e3c2e26611306e", "src": "hda", "uuid": "797f4f69-7aa3-4cd2-9938-4d112006575a"}, "overlaps": {"id": "2ba1fbf9412e661d", "src": "hda", "uuid": "54417b43-46cc-458b-8fb1-cfe84b56b276"}, "corrected_reads": {"id": "6eebc344ed60b6f6", "src": "hda", "uuid": "b32f0b11-4ae6-49db-902c-7598251c7077"}}, "outputs": {"consensus": {"id": "0a530a99999fdc6f", "src": "hda", "uuid": "a6dce36b-4e19-4586-bc72-c7acf14d0bf1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[racon::Polisher::initialize] loaded target sequences 0.000290 s\n[racon::Polisher::initialize] loaded sequences 0.009046 s\n[racon::Polisher::initialize] loaded overlaps 0.001083 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.021222 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.033528 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.040371 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.043208 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.055706 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.055727 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.060119 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.064120 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.074096 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.076622 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.076635 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.084237 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.096139 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.096161 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.105437 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.108028 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.115069 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.118143 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.123143 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.136927 s\n[racon::Polisher::initialize] transformed data into windows 0.000285 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.020305 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.022066 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.033542 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.033752 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.038518 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.041928 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.045707 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.050792 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.055442 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.066604 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.080916 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.087060 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.115822 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.121744 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.139477 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.153065 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.161445 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.162735 s\r[racon::Polisher::polish] generating consensus [===================>] 0.178013 s\r[racon::Polisher::polish] generating consensus [====================] 0.231075 s\n[racon::Polisher::] total = 0.380710 s\n", "job_stdout": "", "job_stderr": "", "stderr": "[racon::Polisher::initialize] loaded target sequences 0.000290 s\n[racon::Polisher::initialize] loaded sequences 0.009046 s\n[racon::Polisher::initialize] loaded overlaps 0.001083 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.021222 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.033528 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.040371 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.043208 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.055706 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.055727 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.060119 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.064120 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.074096 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.076622 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.076635 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.084237 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.096139 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.096161 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.105437 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.108028 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.115069 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.118143 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.123143 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.136927 s\n[racon::Polisher::initialize] transformed data into windows 0.000285 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.020305 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.022066 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.033542 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.033752 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.038518 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.041928 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.045707 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.050792 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.055442 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.066604 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.080916 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.087060 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.115822 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.121744 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.139477 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.153065 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.161445 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.162735 s\r[racon::Polisher::polish] generating consensus [===================>] 0.178013 s\r[racon::Polisher::polish] generating consensus [====================] 0.231075 s\n[racon::Polisher::] total = 0.380710 s\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:42:32", "plugin": "core", "name": "end_epoch", "raw_value": "1684147352.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:42:31", "plugin": "core", "name": "start_epoch", "raw_value": "1684147351.0000000"}, {"title": "Memory Allocated (MB)", "value": "38654", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "38654.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 0, "time_seconds": 11.265285730361938, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 1, "time_seconds": 39.273805379867554, "inputs": {"split_parms|input": {"src": "hda", "id": "cec01badaa324966"}, "split_parms|top": "2", "split_parms|split_by|select_mode|numnew": "2", "split_parms|split_by|select_mode|mode": "numnew", "split_parms|split_by|newfilenames": "test", "split_parms|split_by|select_split_by": "row", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "d856bfabbeebe1ba", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:27:40.227348", "create_time": "2023-05-15T11:27:16.105192", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-gg9mv", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/f/8/0/dataset_f80c7a90-8a40-464b-9e09-84e464c67e95.dat' --ftype 'tabular' --top '2' --by 'row' --numnew '2' --file_names 'test' --file_ext 'tabular'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 557, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 1, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"select_split_by\": \"row\"}, \"top\": \"2\"}"}, "inputs": {"input": {"id": "cec01badaa324966", "src": "hda", "uuid": "f80c7a90-8a40-464b-9e09-84e464c67e95"}}, "outputs": {"__new_primary_file_list_output_tab|test_000001.tabular__": {"id": "5808b4aaad6f63b2", "src": "hda", "uuid": "fa736a97-0d4d-408f-837d-0a463ba7f74e"}, "__new_primary_file_list_output_tab|test_000000.tabular__": {"id": "ba2bee604fd27bcc", "src": "hda", "uuid": "f7a48f34-786c-47b9-a6c0-3e5ac81c8853"}}, "output_collections": {"list_output_tab": {"id": "8340433fc5d7670a", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:27:31", "plugin": "core", "name": "end_epoch", "raw_value": "1684150051.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:27:30", "plugin": "core", "name": "start_epoch", "raw_value": "1684150050.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-10", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 10, "time_seconds": 25.858264207839966, "inputs": {"split_parms|input": {"src": "hda", "id": "a354a335986aa871"}, "split_parms|split_method|record_length": "4", "split_parms|split_method|select_split_method": "number", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "2a17dac4aeb1fde7", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:29:35.170164", "create_time": "2023-05-15T11:29:24.307676", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-nbrqf", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/d/3/c/dataset_d3c874b8-d5aa-48b0-a653-cb7035684f63.dat' --ftype 'generic' --generic_num 4 --numnew '2' --file_names 'test' --file_ext 'fastq'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 606, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 1, \"record_length\": \"4\", \"select_split_method\": \"number\"}}"}, "inputs": {"input": {"id": "a354a335986aa871", "src": "hda", "uuid": "d3c874b8-d5aa-48b0-a653-cb7035684f63"}}, "outputs": {"__new_primary_file_list_output_generic|test_000001__": {"id": "2b872ae8bd9c2feb", "src": "hda", "uuid": "b4a6c5a1-e73c-40a5-b38d-92566cef7c61"}, "__new_primary_file_list_output_generic|test_000000__": {"id": "f68593d2740a1194", "src": "hda", "uuid": "aec5a2a2-c551-422c-99c8-bd9675381231"}}, "output_collections": {"list_output_generic": {"id": "2b46732da70a8e07", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:29:26", "plugin": "core", "name": "end_epoch", "raw_value": "1684150166.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:29:26", "plugin": "core", "name": "start_epoch", "raw_value": "1684150166.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-11", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 11, "time_seconds": 28.239134788513184, "inputs": {"split_parms|input": {"src": "hda", "id": "d7e2d777d786981f"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "rand", "split_parms|select_allocate|seed": "1010", "split_parms|select_allocate|allocate": "random", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "bcf8144e85d558fd", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:30:02.531412", "create_time": "2023-05-15T11:29:49.938291", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-7fnmw", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/1/b/6/dataset_1b6b627e-b7a3-4caf-b399-f952f55bd02c.dat' --ftype 'fasta' --numnew '2' --rand --seed '1010' --file_names 'rand' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 612, \"src\": \"hda\"}]}, \"newfilenames\": \"rand\", \"select_allocate\": {\"__current_case__\": 0, \"allocate\": \"random\", \"seed\": \"1010\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "d7e2d777d786981f", "src": "hda", "uuid": "1b6b627e-b7a3-4caf-b399-f952f55bd02c"}}, "outputs": {"__new_primary_file_list_output_fasta|rand_000001.fasta__": {"id": "bffe87fdbc44be80", "src": "hda", "uuid": "31f74176-7ab9-460a-b7df-0c7ef3059062"}, "__new_primary_file_list_output_fasta|rand_000000.fasta__": {"id": "e3b5cedc8289c34f", "src": "hda", "uuid": "d2b8eff8-189b-4880-ab0d-b2c04a109eff"}}, "output_collections": {"list_output_fasta": {"id": "1680dc1512de0831", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:29:52", "plugin": "core", "name": "end_epoch", "raw_value": "1684150192.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:29:52", "plugin": "core", "name": "start_epoch", "raw_value": "1684150192.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-12", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 12, "time_seconds": 28.492839813232422, "inputs": {"split_parms|input": {"src": "hda", "id": "d7e2d777d786981f"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "fasta_batch", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "1c70cebd0bf8e0be", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:30:03.587667", "create_time": "2023-05-15T11:29:51.235066", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-scccd", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/1/b/6/dataset_1b6b627e-b7a3-4caf-b399-f952f55bd02c.dat' --ftype 'fasta' --numnew '2' --batch --file_names 'fasta_batch' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 612, \"src\": \"hda\"}]}, \"newfilenames\": \"fasta_batch\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "d7e2d777d786981f", "src": "hda", "uuid": "1b6b627e-b7a3-4caf-b399-f952f55bd02c"}}, "outputs": {"__new_primary_file_list_output_fasta|fasta_batch_000001.fasta__": {"id": "7ea9da7fef05a84d", "src": "hda", "uuid": "affe2d3c-2177-4bdc-a1b8-f02dfecd34a7"}, "__new_primary_file_list_output_fasta|fasta_batch_000000.fasta__": {"id": "ad33d89fcc26ac0f", "src": "hda", "uuid": "56c1719e-4832-4344-8c21-193af33b372f"}}, "output_collections": {"list_output_fasta": {"id": "e34a4d5b1b64805b", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:29:53", "plugin": "core", "name": "end_epoch", "raw_value": "1684150193.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:29:53", "plugin": "core", "name": "start_epoch", "raw_value": "1684150193.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-13", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 13, "time_seconds": 27.610832452774048, "inputs": {"split_parms|input": {"src": "hda", "id": "aea07db6a57ac9a8"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "txt"}, "job": {"model_class": "Job", "id": "70b75747f62c42f0", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:30:30.062022", "create_time": "2023-05-15T11:30:18.268147", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-gd8pq", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/d/a/3/dataset_da3fcce4-b239-479d-b887-255b7d28e619.dat' --ftype 'txt' --numnew '2' --file_names 'test' --file_ext 'txt'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 5, \"input\": {\"values\": [{\"id\": 618, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"txt\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "aea07db6a57ac9a8", "src": "hda", "uuid": "da3fcce4-b239-479d-b887-255b7d28e619"}}, "outputs": {"__new_primary_file_list_output_txt|test_000001.txt__": {"id": "fd31615bbc5af35e", "src": "hda", "uuid": "b224e1f6-e0c0-4019-96a2-022a6f42ad0a"}, "__new_primary_file_list_output_txt|test_000000.txt__": {"id": "737532e405d7f436", "src": "hda", "uuid": "d340d09e-bbb4-47b9-8612-a717b9e6afe4"}}, "output_collections": {"list_output_txt": {"id": "4ece47c9817555bc", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:30:21", "plugin": "core", "name": "end_epoch", "raw_value": "1684150221.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:30:21", "plugin": "core", "name": "start_epoch", "raw_value": "1684150221.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-14", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 14, "time_seconds": 28.554046630859375, "inputs": {"split_parms|input": {"src": "hda", "id": "aea07db6a57ac9a8"}, "split_parms|split_method|generic_regex": "^.*", "split_parms|split_method|select_split_method": "regex", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "1eaa7fc38751c20c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:30:32.212212", "create_time": "2023-05-15T11:30:19.770097", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-t9h52", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/d/a/3/dataset_da3fcce4-b239-479d-b887-255b7d28e619.dat' --ftype 'generic' --generic_re '^.*' --numnew '2' --file_names 'test' --file_ext 'txt'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 618, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 0, \"generic_regex\": \"^.*\", \"select_split_method\": \"regex\", \"split_after\": \"false\"}}"}, "inputs": {"input": {"id": "aea07db6a57ac9a8", "src": "hda", "uuid": "da3fcce4-b239-479d-b887-255b7d28e619"}}, "outputs": {"__new_primary_file_list_output_generic|test_000001__": {"id": "977da240e49f0991", "src": "hda", "uuid": "25868ea6-4e7d-4964-ae09-1b525c089c5c"}, "__new_primary_file_list_output_generic|test_000000__": {"id": "cb77b650fb9ff65a", "src": "hda", "uuid": "3647f24a-ab9f-4048-aecf-9c71afc3ebb4"}}, "output_collections": {"list_output_generic": {"id": "104099964b28c400", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:30:22", "plugin": "core", "name": "end_epoch", "raw_value": "1684150222.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:30:22", "plugin": "core", "name": "start_epoch", "raw_value": "1684150222.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-15", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 15, "time_seconds": 27.70290184020996, "inputs": {"split_parms|input": {"src": "hda", "id": "7921c26759957077"}, "split_parms|split_method|generic_regex": "^>.*", "split_parms|split_method|select_split_method": "regex", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "rand", "split_parms|select_allocate|seed": "1010", "split_parms|select_allocate|allocate": "random", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "70c51b96fea2d681", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:30:57.897876", "create_time": "2023-05-15T11:30:45.745150", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-296z8", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/5/d/3/dataset_5d30e1df-4adb-492e-b6c3-332d9e1c31d0.dat' --ftype 'generic' --generic_re '^>.*' --numnew '2' --rand --seed '1010' --file_names 'rand' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 621, \"src\": \"hda\"}]}, \"newfilenames\": \"rand\", \"select_allocate\": {\"__current_case__\": 0, \"allocate\": \"random\", \"seed\": \"1010\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 0, \"generic_regex\": \"^>.*\", \"select_split_method\": \"regex\", \"split_after\": \"false\"}}"}, "inputs": {"input": {"id": "7921c26759957077", "src": "hda", "uuid": "5d30e1df-4adb-492e-b6c3-332d9e1c31d0"}}, "outputs": {"__new_primary_file_list_output_generic|rand_000001__": {"id": "3702d47b75398586", "src": "hda", "uuid": "0d3e090e-08f5-473f-b106-20ad191a4224"}, "__new_primary_file_list_output_generic|rand_000000__": {"id": "321fcf2c0fc8701a", "src": "hda", "uuid": "da212167-2093-41bd-8707-1e8ad99df02a"}}, "output_collections": {"list_output_generic": {"id": "9988da97bc58e2f7", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:30:48", "plugin": "core", "name": "end_epoch", "raw_value": "1684150248.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:30:47", "plugin": "core", "name": "start_epoch", "raw_value": "1684150247.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-16", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 16, "time_seconds": 27.81014084815979, "inputs": {"split_parms|input": {"src": "hda", "id": "c1535b84d40c0a9b"}, "split_parms|select_mode|numnew": "10", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "mol", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "sdf"}, "job": {"model_class": "Job", "id": "f649b8a14c71e9ab", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:30:59.839974", "create_time": "2023-05-15T11:30:48.819630", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-nj9rn", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/8/f/f/dataset_8ffaf53a-51ec-4058-b9a6-faa2751d5013.dat' --ftype 'sdf' --numnew '10' --batch --file_names 'mol' --file_ext 'sdf'", "traceback": null, "params": {"__input_ext": "\"sdf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 4, \"input\": {\"values\": [{\"id\": 624, \"src\": \"hda\"}]}, \"newfilenames\": \"mol\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"sdf\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"10\"}}"}, "inputs": {"input": {"id": "c1535b84d40c0a9b", "src": "hda", "uuid": "8ffaf53a-51ec-4058-b9a6-faa2751d5013"}}, "outputs": {"__new_primary_file_list_output_sdf|mol_000002.sdf__": {"id": "01590b148a92feab", "src": "hda", "uuid": "df7e5ea9-38c8-4d1e-bf51-ee06b2909d2a"}, "__new_primary_file_list_output_sdf|mol_000001.sdf__": {"id": "af2143d23ebc3552", "src": "hda", "uuid": "a7f37a0a-8809-479d-9878-afebc5aea28b"}, "__new_primary_file_list_output_sdf|mol_000000.sdf__": {"id": "afae652a7fc02c17", "src": "hda", "uuid": "9c91dbfd-577e-43a0-a9bc-66e6b52b50a3"}}, "output_collections": {"list_output_sdf": {"id": "d844693f771599d7", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:30:51", "plugin": "core", "name": "end_epoch", "raw_value": "1684150251.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:30:51", "plugin": "core", "name": "start_epoch", "raw_value": "1684150251.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-17", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 17, "time_seconds": 95.34925127029419, "inputs": {"split_parms|input": {"src": "hda", "id": "2fc9f7c45b9e30da"}, "split_parms|select_mode|chunksize": "1", "split_parms|select_mode|mode": "chunk", "split_parms|newfilenames": "mol", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "sdf"}, "job": {"model_class": "Job", "id": "ba965a455965133e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:32:33.044591", "create_time": "2023-05-15T11:31:13.897355", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-jtw9x", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/5/0/f/dataset_50fd02d1-c88e-4794-ba92-8abba6541255.dat' --ftype 'sdf' --chunksize 1 --batch --file_names 'mol' --file_ext 'sdf'", "traceback": null, "params": {"__input_ext": "\"sdf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 4, \"input\": {\"values\": [{\"id\": 627, \"src\": \"hda\"}]}, \"newfilenames\": \"mol\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"sdf\", \"select_mode\": {\"__current_case__\": 0, \"chunksize\": \"1\", \"mode\": \"chunk\"}}"}, "inputs": {"input": {"id": "2fc9f7c45b9e30da", "src": "hda", "uuid": "50fd02d1-c88e-4794-ba92-8abba6541255"}}, "outputs": {"__new_primary_file_list_output_sdf|mol_000002.sdf__": {"id": "c50de9375cba8a98", "src": "hda", "uuid": "334e7ffd-8f75-4197-b1bf-20f79c08a6b3"}, "__new_primary_file_list_output_sdf|mol_000001.sdf__": {"id": "dc3d68027245da47", "src": "hda", "uuid": "e208477f-2c99-4d6e-8334-0aa7950310c0"}, "__new_primary_file_list_output_sdf|mol_000000.sdf__": {"id": "69ebe00206106f25", "src": "hda", "uuid": "003ab128-b2ef-4c88-b2ad-183b76b8769f"}}, "output_collections": {"list_output_sdf": {"id": "ce6bf8f2761e1d8c", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:32:23", "plugin": "core", "name": "end_epoch", "raw_value": "1684150343.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:32:23", "plugin": "core", "name": "start_epoch", "raw_value": "1684150343.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-18", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 18, "time_seconds": 96.90308856964111, "inputs": {"split_parms|input": {"src": "hda", "id": "f6b3ca5978f16d97"}, "split_parms|split_method|generic_regex": "^[^>].*", "split_parms|split_method|split_after": "true", "split_parms|split_method|select_split_method": "regex", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "rand", "split_parms|select_allocate|seed": "1010", "split_parms|select_allocate|allocate": "random", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "db2245eefb2fae2b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:32:36.912749", "create_time": "2023-05-15T11:31:16.838985", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-5l89p", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/8/1/4/dataset_814ab3de-cbb8-4892-8f22-1fd075c6b0be.dat' --ftype 'generic' --generic_re '^[^>].*' --split_after --numnew '2' --rand --seed '1010' --file_names 'rand' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 631, \"src\": \"hda\"}]}, \"newfilenames\": \"rand\", \"select_allocate\": {\"__current_case__\": 0, \"allocate\": \"random\", \"seed\": \"1010\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 0, \"generic_regex\": \"^[^>].*\", \"select_split_method\": \"regex\", \"split_after\": \"true\"}}"}, "inputs": {"input": {"id": "f6b3ca5978f16d97", "src": "hda", "uuid": "814ab3de-cbb8-4892-8f22-1fd075c6b0be"}}, "outputs": {"__new_primary_file_list_output_generic|rand_000001__": {"id": "cc2c5875c88aef50", "src": "hda", "uuid": "4b8b9ad9-d6b8-4e6b-b88b-0b4e80663dd3"}, "__new_primary_file_list_output_generic|rand_000000__": {"id": "50839c656931d044", "src": "hda", "uuid": "2779bb3d-9ec3-4e8f-8d2c-d460668f1fd4"}}, "output_collections": {"list_output_generic": {"id": "064b83d410df795c", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:32:28", "plugin": "core", "name": "end_epoch", "raw_value": "1684150348.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:32:27", "plugin": "core", "name": "start_epoch", "raw_value": "1684150347.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 2, "time_seconds": 28.022858381271362, "inputs": {"split_parms|input": {"src": "hda", "id": "db2245eefb2fae2b"}, "split_parms|top": "2", "split_parms|split_by|select_mode|numnew": "2", "split_parms|split_by|select_mode|mode": "numnew", "split_parms|split_by|newfilenames": "batch_tab", "split_parms|split_by|select_allocate|allocate": "batch", "split_parms|split_by|select_split_by": "row", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "5104234c4621b673", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:27:45.454625", "create_time": "2023-05-15T11:27:33.666498", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-6t9g9", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/e/9/2/dataset_e9249dc0-aaca-4df9-9ad6-e67938f0abcd.dat' --ftype 'tabular' --top '2' --by 'row' --numnew '2' --batch --file_names 'batch_tab' --file_ext 'tabular'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 559, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 1, \"newfilenames\": \"batch_tab\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"select_split_by\": \"row\"}, \"top\": \"2\"}"}, "inputs": {"input": {"id": "db2245eefb2fae2b", "src": "hda", "uuid": "e9249dc0-aaca-4df9-9ad6-e67938f0abcd"}}, "outputs": {"__new_primary_file_list_output_tab|batch_tab_000001.tabular__": {"id": "9afe8faa3818859f", "src": "hda", "uuid": "fc5dd6a3-f778-47d1-b658-4c05d9f2e2d5"}, "__new_primary_file_list_output_tab|batch_tab_000000.tabular__": {"id": "efa611e057f0c43a", "src": "hda", "uuid": "a3d6baac-a9cd-4723-9f87-1acec07431a0"}}, "output_collections": {"list_output_tab": {"id": "8e3606a5fa57712d", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:27:35", "plugin": "core", "name": "end_epoch", "raw_value": "1684150055.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:27:35", "plugin": "core", "name": "start_epoch", "raw_value": "1684150055.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 3, "time_seconds": 26.945627450942993, "inputs": {"split_parms|input": {"src": "hda", "id": "e25c34258cd2b465"}, "split_parms|top": "2", "split_parms|split_by|select_mode|chunksize": "2", "split_parms|split_by|select_mode|mode": "chunk", "split_parms|split_by|newfilenames": "batch_tab", "split_parms|split_by|select_allocate|allocate": "batch", "split_parms|split_by|select_split_by": "row", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "d2884457c3f93de1", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:28:07.074339", "create_time": "2023-05-15T11:27:55.047364", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-7ckjn", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/0/8/2/dataset_08279b8a-d63b-4c8e-9b54-33996500fccc.dat' --ftype 'tabular' --top '2' --by 'row' --chunksize 2 --batch --file_names 'batch_tab' --file_ext 'tabular'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 562, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 1, \"newfilenames\": \"batch_tab\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_mode\": {\"__current_case__\": 0, \"chunksize\": \"2\", \"mode\": \"chunk\"}, \"select_split_by\": \"row\"}, \"top\": \"2\"}"}, "inputs": {"input": {"id": "e25c34258cd2b465", "src": "hda", "uuid": "08279b8a-d63b-4c8e-9b54-33996500fccc"}}, "outputs": {"__new_primary_file_list_output_tab|batch_tab_000001.tabular__": {"id": "9b7d23cdcc4c7fa0", "src": "hda", "uuid": "f47fc82d-24a7-4fcd-b4f3-1a4bce2b243a"}, "__new_primary_file_list_output_tab|batch_tab_000000.tabular__": {"id": "f933ac78a2aea8c3", "src": "hda", "uuid": "b781ec5b-735b-4980-b405-ac7637795a1e"}}, "output_collections": {"list_output_tab": {"id": "fa4e520151c475ea", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:27:57", "plugin": "core", "name": "end_epoch", "raw_value": "1684150077.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:27:57", "plugin": "core", "name": "start_epoch", "raw_value": "1684150077.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 4, "time_seconds": 29.87349534034729, "inputs": {"split_parms|input": {"src": "hda", "id": "e9e15b87a017a547"}, "split_parms|select_mode|numnew": "24", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "chr", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "txt"}, "job": {"model_class": "Job", "id": "ea1571a72f2d54ce", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:28:10.772385", "create_time": "2023-05-15T11:27:59.974891", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-9w557", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/d/0/5/dataset_d05f982b-38a4-4124-8aa3-13f2dc702107.dat' --ftype 'txt' --numnew '24' --batch --file_names 'chr' --file_ext 'txt'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 5, \"input\": {\"values\": [{\"id\": 565, \"src\": \"hda\"}]}, \"newfilenames\": \"chr\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"txt\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"24\"}}"}, "inputs": {"input": {"id": "e9e15b87a017a547", "src": "hda", "uuid": "d05f982b-38a4-4124-8aa3-13f2dc702107"}}, "outputs": {"__new_primary_file_list_output_txt|chr_000023.txt__": {"id": "74d4e1fd7cf0eeca", "src": "hda", "uuid": "8f1bd10f-1642-4bec-8620-3ff0397f82e2"}, "__new_primary_file_list_output_txt|chr_000022.txt__": {"id": "49645b0bb399f38e", "src": "hda", "uuid": "6ea0942a-a89c-4145-ac63-4a1aaf7c5cad"}, "__new_primary_file_list_output_txt|chr_000021.txt__": {"id": "e8ad9d5c730123e1", "src": "hda", "uuid": "1cfdbf98-bd2b-43b4-b1c9-085c1d605236"}, "__new_primary_file_list_output_txt|chr_000020.txt__": {"id": "3ba0eae08b2df3cc", "src": "hda", "uuid": "6d2ab5df-83ee-4465-96ac-e2f07d0768ca"}, "__new_primary_file_list_output_txt|chr_000019.txt__": {"id": "0d0632d7d329fded", "src": "hda", "uuid": "de473099-871d-46d2-97c5-043dbc78b57e"}, "__new_primary_file_list_output_txt|chr_000018.txt__": {"id": "192e0157bb47cabe", "src": "hda", "uuid": "a30b52c0-2a13-41c5-a532-5641ab82f48c"}, "__new_primary_file_list_output_txt|chr_000017.txt__": {"id": "9ae04624f0700489", "src": "hda", "uuid": "889abbe1-072a-4efe-b5f0-db67e9a0674c"}, "__new_primary_file_list_output_txt|chr_000016.txt__": {"id": "20edea43ac9d4edd", "src": "hda", "uuid": "fb521d97-5d2d-4a43-bbe1-7d6a42994dbe"}, "__new_primary_file_list_output_txt|chr_000015.txt__": {"id": "df5ff66e1ec1b432", "src": "hda", "uuid": "65ce0df9-9f3e-436d-9386-c1d1d1836b44"}, "__new_primary_file_list_output_txt|chr_000014.txt__": {"id": "36c08479691245c6", "src": "hda", "uuid": "f795229a-22ae-44f6-9372-bef79fe8b55f"}, "__new_primary_file_list_output_txt|chr_000013.txt__": {"id": "17733e488ed446fa", "src": "hda", "uuid": "adef5741-f9a8-456a-bad6-727a24ea3230"}, "__new_primary_file_list_output_txt|chr_000012.txt__": {"id": "583946a99eb24026", "src": "hda", "uuid": "55578f85-1450-4ec2-821c-5326fa4fcabb"}, "__new_primary_file_list_output_txt|chr_000011.txt__": {"id": "8f003eba481fe045", "src": "hda", "uuid": "f759746b-f5a5-4fcc-a74e-7c7fe3dfe827"}, "__new_primary_file_list_output_txt|chr_000010.txt__": {"id": "ea1c38d6c1ce40a4", "src": "hda", "uuid": "574ffcbf-fc4e-4822-a39b-5e1fe9f36cd6"}, "__new_primary_file_list_output_txt|chr_000009.txt__": {"id": "5c415e00b12d5ad8", "src": "hda", "uuid": "ea8b9edb-a8e0-4bb5-ad72-dcd7c457cff8"}, "__new_primary_file_list_output_txt|chr_000008.txt__": {"id": "863acb05afb29c11", "src": "hda", "uuid": "61029d73-eaae-4023-8aac-51dadfe63336"}, "__new_primary_file_list_output_txt|chr_000007.txt__": {"id": "20b3c460a1bc5c8c", "src": "hda", "uuid": "7ac04636-3c9b-432f-991a-1586ad896db5"}, "__new_primary_file_list_output_txt|chr_000006.txt__": {"id": "dd84e98cbb8d9620", "src": "hda", "uuid": "87765be9-6a2c-4810-a2be-9a7a6e9d200b"}, "__new_primary_file_list_output_txt|chr_000005.txt__": {"id": "24543bc5cb8d3936", "src": "hda", "uuid": "0decc75e-7c31-4ee8-8f8f-62c3a3812a23"}, "__new_primary_file_list_output_txt|chr_000004.txt__": {"id": "afb7e54f8648421c", "src": "hda", "uuid": "13933df8-a8cb-4821-9e11-f3e19b7fd8f7"}, "__new_primary_file_list_output_txt|chr_000003.txt__": {"id": "f09cae9dbb92804a", "src": "hda", "uuid": "409c1b5a-2563-4264-aadf-a8e04882e50a"}, "__new_primary_file_list_output_txt|chr_000002.txt__": {"id": "5328f446ac948af4", "src": "hda", "uuid": "a6098c87-4ec6-4957-bbe8-8a0ec15dbfd7"}, "__new_primary_file_list_output_txt|chr_000001.txt__": {"id": "b13e7fe45d676d92", "src": "hda", "uuid": "249ec4eb-52c5-4c06-a366-943406e5749a"}, "__new_primary_file_list_output_txt|chr_000000.txt__": {"id": "ef8aedaad5e2d032", "src": "hda", "uuid": "e9923e22-2077-4063-b7d0-2b31db42d038"}}, "output_collections": {"list_output_txt": {"id": "2a7c82257688f15a", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:28:01", "plugin": "core", "name": "end_epoch", "raw_value": "1684150081.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:28:01", "plugin": "core", "name": "start_epoch", "raw_value": "1684150081.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 5, "time_seconds": 28.300461292266846, "inputs": {"split_parms|input": {"src": "hda", "id": "4560e83d5d437ee5"}, "split_parms|top": "1", "split_parms|split_by|id_col": "10", "split_parms|split_by|match_regex": "(.*)\\.mgf", "split_parms|split_by|sub_regex": "\\1.tab", "split_parms|split_by|select_split_by": "col", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "62f1bb36fe40930e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:28:35.026086", "create_time": "2023-05-15T11:28:22.875337", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-mkfwb", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/e/e/8/dataset_ee8f90bc-6543-432f-b62c-f705bf99c850.dat' --ftype 'tabular' --top '1' --by 'col' --id_column '10' --match '(.*)__backslash__.mgf' --sub '__backslash__1.tab'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 568, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 0, \"id_col\": \"10\", \"match_regex\": \"(.*)\\\\.mgf\", \"select_split_by\": \"col\", \"sub_regex\": \"\\\\1.tab\"}, \"top\": \"1\"}"}, "inputs": {"input": {"id": "4560e83d5d437ee5", "src": "hda", "uuid": "ee8f90bc-6543-432f-b62c-f705bf99c850"}}, "outputs": {"__new_primary_file_list_output_tab|file4.tab__": {"id": "ef1be09505014369", "src": "hda", "uuid": "9ee65562-50f2-4e5e-82cd-ab9ee7ac2e07"}, "__new_primary_file_list_output_tab|file3.tab__": {"id": "070f20a6feddff8b", "src": "hda", "uuid": "fb7d7d79-3762-479e-b7a5-0c28fadd9289"}, "__new_primary_file_list_output_tab|file2.tab__": {"id": "cc07833b38fe9b06", "src": "hda", "uuid": "bea36def-8d24-4cb4-bcf4-9e861c27a439"}, "__new_primary_file_list_output_tab|file1.tab__": {"id": "2a8604af895f174d", "src": "hda", "uuid": "8a6d84a9-46da-4ab7-bad4-e272801717eb"}}, "output_collections": {"list_output_tab": {"id": "2664b84c8b58328a", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:28:26", "plugin": "core", "name": "end_epoch", "raw_value": "1684150106.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:28:25", "plugin": "core", "name": "start_epoch", "raw_value": "1684150105.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 6, "time_seconds": 25.094494104385376, "inputs": {"split_parms|input": {"src": "hda", "id": "1806fd52b1a84015"}, "split_parms|select_mode|numnew": "3", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "demo", "split_parms|select_ftype": "mgf"}, "job": {"model_class": "Job", "id": "89c00d0d5ebf6eaf", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:28:40.204893", "create_time": "2023-05-15T11:28:29.992074", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-rgkwh", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/f/c/9/dataset_fc93f4e6-c1a6-4c0f-badc-24c9dd58829e.dat' --ftype 'mgf' --numnew '3' --file_names 'demo' --file_ext 'mgf'", "traceback": null, "params": {"__input_ext": "\"mgf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 1, \"input\": {\"values\": [{\"id\": 593, \"src\": \"hda\"}]}, \"newfilenames\": \"demo\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"mgf\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"3\"}}"}, "inputs": {"input": {"id": "1806fd52b1a84015", "src": "hda", "uuid": "fc93f4e6-c1a6-4c0f-badc-24c9dd58829e"}}, "outputs": {"__new_primary_file_list_output_mgf|demo_000002.mgf__": {"id": "5987e0894e408335", "src": "hda", "uuid": "c321ffad-df27-4a0c-b72b-b95cdfebf46b"}, "__new_primary_file_list_output_mgf|demo_000001.mgf__": {"id": "1bd11bffb42d105d", "src": "hda", "uuid": "06ac2413-ab5c-4ec4-9729-345986edee20"}, "__new_primary_file_list_output_mgf|demo_000000.mgf__": {"id": "3a5ce38986881625", "src": "hda", "uuid": "8c66ed3e-4562-4789-b623-1e52e382f090"}}, "output_collections": {"list_output_mgf": {"id": "23d04a169d8f3b4e", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:28:32", "plugin": "core", "name": "end_epoch", "raw_value": "1684150112.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:28:32", "plugin": "core", "name": "start_epoch", "raw_value": "1684150112.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 7, "time_seconds": 26.03036141395569, "inputs": {"split_parms|input": {"src": "hda", "id": "79fbf9324bf046e7"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "96f44d763bae52ed", "state": "error", "exit_code": null, "update_time": "2023-05-15T11:29:01.984148", "create_time": "2023-05-15T11:28:50.849894", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-6q9vv", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/0/1/5/dataset_015634e6-bd9b-4726-a280-4262341679ea.dat' --ftype 'fasta' --numnew '2' --file_names 'test' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 602, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "79fbf9324bf046e7", "src": "hda", "uuid": "015634e6-bd9b-4726-a280-4262341679ea"}}, "outputs": {}, "output_collections": {"list_output_fasta": {"id": "adfea3056a61ef95", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0, exit_code: None, stderr: .", "Output collection 'list_output_fasta': failed to find identifier 'test_000000.fasta' in the tool generated elements []"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 8, "time_seconds": 28.638156414031982, "inputs": {"split_parms|input": {"src": "hda", "id": "79fbf9324bf046e7"}, "split_parms|select_mode|chunksize": "3", "split_parms|select_mode|mode": "chunk", "split_parms|newfilenames": "test", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "626e0f7e61005534", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:29:09.128687", "create_time": "2023-05-15T11:28:56.731700", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-45pls", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/0/1/5/dataset_015634e6-bd9b-4726-a280-4262341679ea.dat' --ftype 'fasta' --chunksize 3 --file_names 'test' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 602, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 0, \"chunksize\": \"3\", \"mode\": \"chunk\"}}"}, "inputs": {"input": {"id": "79fbf9324bf046e7", "src": "hda", "uuid": "015634e6-bd9b-4726-a280-4262341679ea"}}, "outputs": {"__new_primary_file_list_output_fasta|test_000001.fasta__": {"id": "5f8ecf87f6fe919d", "src": "hda", "uuid": "9d9c1fb6-43e3-4379-9e7f-94d064e75e12"}, "__new_primary_file_list_output_fasta|test_000000.fasta__": {"id": "39e8fdc85a795c5a", "src": "hda", "uuid": "ee8a3597-b813-4ddc-956c-c0fdee7ebfcd"}}, "output_collections": {"list_output_fasta": {"id": "807a292ad5de0509", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:28:59", "plugin": "core", "name": "end_epoch", "raw_value": "1684150139.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:28:59", "plugin": "core", "name": "start_epoch", "raw_value": "1684150139.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-9", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 9, "time_seconds": 32.46422100067139, "inputs": {"split_parms|input": {"src": "hda", "id": "a354a335986aa871"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "fastq"}, "job": {"model_class": "Job", "id": "6c8b4eed33b97ec7", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:29:34.308846", "create_time": "2023-05-15T11:29:16.858639", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-b5swv", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/d/3/c/dataset_d3c874b8-d5aa-48b0-a653-cb7035684f63.dat' --ftype 'fastq' --numnew '2' --file_names 'test' --file_ext 'fastq'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 2, \"input\": {\"values\": [{\"id\": 606, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"fastq\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "a354a335986aa871", "src": "hda", "uuid": "d3c874b8-d5aa-48b0-a653-cb7035684f63"}}, "outputs": {"__new_primary_file_list_output_fastq|test_000001.fastq__": {"id": "f9adf8586527f765", "src": "hda", "uuid": "15902c82-8b5f-462e-ad5d-d6d8d3234135"}, "__new_primary_file_list_output_fastq|test_000000.fastq__": {"id": "9dee0c5389605669", "src": "hda", "uuid": "76901e80-7a10-4364-b4e0-4a503cfc7a94"}}, "output_collections": {"list_output_fastq": {"id": "4481181790fe7030", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:29:25", "plugin": "core", "name": "end_epoch", "raw_value": "1684150165.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:29:25", "plugin": "core", "name": "start_epoch", "raw_value": "1684150165.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 40.99394154548645, "inputs": {"inputA": {"src": "hda", "id": "5adbeccf7ffdf838"}, "names|beds": [{"src": "hda", "id": "a6e74cf819210faf"}, {"src": "hda", "id": "2ff59c252066523b"}, {"src": "hda", "id": "c5469db973e2c433"}], "names|names_select": "no"}, "job": {"model_class": "Job", "id": "290d6ae87379e22f", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:55:41.345636", "create_time": "2023-05-15T10:55:30.148781", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-fmb26", "command_line": "bedtools annotate -i '/galaxy/server/database/objects/0/6/4/dataset_064dc61e-acc7-4783-abe9-9e5321e4e4a3.dat' -files '/galaxy/server/database/objects/b/5/7/dataset_b576c1f1-cf46-49d6-b531-e2e52f9321db.dat' '/galaxy/server/database/objects/1/2/6/dataset_126a855e-ef92-42d7-935a-2f29e4abb37f.dat' '/galaxy/server/database/objects/a/2/c/dataset_a2c4c3b0-5f8e-4ec5-99a0-4fbb31c9a42b.dat' -names 'annotateBed2.bed' 'annotateBed3.bed' 'annotateBed4.bed'    > '/galaxy/server/database/objects/8/0/9/dataset_8091b6a9-0d8a-403c-9e12-5d609c386e9c.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "both": "false", "counts": "false", "strand": "\"\"", "names": "{\"__current_case__\": 1, \"beds\": {\"values\": [{\"id\": 216, \"src\": \"hda\"}, {\"id\": 217, \"src\": \"hda\"}, {\"id\": 218, \"src\": \"hda\"}]}, \"names_select\": \"no\"}"}, "inputs": {"inputA": {"id": "5adbeccf7ffdf838", "src": "hda", "uuid": "064dc61e-acc7-4783-abe9-9e5321e4e4a3"}, "beds": {"id": "a6e74cf819210faf", "src": "hda", "uuid": "b576c1f1-cf46-49d6-b531-e2e52f9321db"}, "beds1": {"id": "a6e74cf819210faf", "src": "hda", "uuid": "b576c1f1-cf46-49d6-b531-e2e52f9321db"}, "beds2": {"id": "2ff59c252066523b", "src": "hda", "uuid": "126a855e-ef92-42d7-935a-2f29e4abb37f"}, "beds3": {"id": "c5469db973e2c433", "src": "hda", "uuid": "a2c4c3b0-5f8e-4ec5-99a0-4fbb31c9a42b"}}, "outputs": {"output": {"id": "11f48682ecc604b4", "src": "hda", "uuid": "8091b6a9-0d8a-403c-9e12-5d609c386e9c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:55:32", "plugin": "core", "name": "end_epoch", "raw_value": "1684148132.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:55:32", "plugin": "core", "name": "start_epoch", "raw_value": "1684148132.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0+galaxy2", "test_index": 0, "time_seconds": 31.22574472427368, "inputs": {"input": {"src": "hda", "id": "d0f5065773512b72"}, "option": "", "tag": ""}, "job": {"model_class": "Job", "id": "26fcdb6ffd86723c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:13:12.332900", "create_time": "2023-05-15T11:12:57.098183", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-r4rhb", "command_line": "ln -s '/galaxy/server/database/objects/6/1/6/dataset_6167cbf8-b7b6-4f68-a273-535b7632b680.dat' ./input.bam &&  bedtools bamtobed    -i ./input.bam > '/galaxy/server/database/objects/2/f/c/dataset_2fc742ab-9ad1-40f1-8058-7268f5f5b39a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "d0f5065773512b72", "src": "hda", "uuid": "6167cbf8-b7b6-4f68-a273-535b7632b680"}}, "outputs": {"output": {"id": "93ffd9dd0604f1cb", "src": "hda", "uuid": "2fc742ab-9ad1-40f1-8058-7268f5f5b39a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:13:02", "plugin": "core", "name": "end_epoch", "raw_value": "1684149182.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:13:02", "plugin": "core", "name": "start_epoch", "raw_value": "1684149182.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0+galaxy2", "test_index": 1, "time_seconds": 28.443146467208862, "inputs": {"input": {"src": "hda", "id": "d0f5065773512b72"}, "option": "", "tag": "NM"}, "job": {"model_class": "Job", "id": "f6861dbb7d5a3980", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:13:11.202646", "create_time": "2023-05-15T11:12:57.850636", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-vgzk6", "command_line": "ln -s '/galaxy/server/database/objects/6/1/6/dataset_6167cbf8-b7b6-4f68-a273-535b7632b680.dat' ./input.bam &&  bedtools bamtobed    -tag 'NM' -i ./input.bam > '/galaxy/server/database/objects/4/1/d/dataset_41daa6ce-daee-4f62-bbd6-fbbd55e6ac10.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"NM\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "d0f5065773512b72", "src": "hda", "uuid": "6167cbf8-b7b6-4f68-a273-535b7632b680"}}, "outputs": {"output": {"id": "f2ca9c73ea51a03e", "src": "hda", "uuid": "41daa6ce-daee-4f62-bbd6-fbbd55e6ac10"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:13:01", "plugin": "core", "name": "end_epoch", "raw_value": "1684149181.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:13:01", "plugin": "core", "name": "start_epoch", "raw_value": "1684149181.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0+galaxy2", "test_index": 2, "time_seconds": 31.865946531295776, "inputs": {"input": {"src": "hda", "id": "13477f6b5544dbe8"}, "option": "-bedpe", "tag": ""}, "job": {"model_class": "Job", "id": "2cf997c96e5285d3", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:13:43.160626", "create_time": "2023-05-15T11:13:29.355478", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-5k7db", "command_line": "samtools sort -n -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" '/galaxy/server/database/objects/3/f/0/dataset_3f013278-847f-41ac-99a5-4ac5801267b2.dat' > ./input.bam &&  bedtools bamtobed -bedpe   -i ./input.bam > '/galaxy/server/database/objects/c/e/9/dataset_ce99aa4f-6354-41bd-9d8c-3e156ca6dbac.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"\"", "ed_score": "false", "split": "false", "option": "\"-bedpe\""}, "inputs": {"input": {"id": "13477f6b5544dbe8", "src": "hda", "uuid": "3f013278-847f-41ac-99a5-4ac5801267b2"}}, "outputs": {"output": {"id": "c53714a42a8f4bfc", "src": "hda", "uuid": "ce99aa4f-6354-41bd-9d8c-3e156ca6dbac"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:13:33", "plugin": "core", "name": "end_epoch", "raw_value": "1684149213.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:13:33", "plugin": "core", "name": "start_epoch", "raw_value": "1684149213.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 29.49363875389099, "inputs": {"input": {"src": "hda", "id": "8cf3d315d846e751"}, "option": "", "tag": ""}, "job": {"model_class": "Job", "id": "1df7b842760586c2", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:53:19.766606", "create_time": "2023-05-15T10:53:09.169730", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-jh56n", "command_line": "ln -s '/galaxy/server/database/objects/6/c/1/dataset_6c17d929-d150-4768-a3f9-6df4d223dd0b.dat' ./input.bam &&  bedtools bamtobed    -i ./input.bam > '/galaxy/server/database/objects/d/a/6/dataset_da667e5d-5919-410b-b1ba-ba2bfc96acff.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "8cf3d315d846e751", "src": "hda", "uuid": "6c17d929-d150-4768-a3f9-6df4d223dd0b"}}, "outputs": {"output": {"id": "f7cc9f3b4ce0227d", "src": "hda", "uuid": "da667e5d-5919-410b-b1ba-ba2bfc96acff"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:53:10", "plugin": "core", "name": "end_epoch", "raw_value": "1684147990.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:53:10", "plugin": "core", "name": "start_epoch", "raw_value": "1684147990.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 28.691416263580322, "inputs": {"input": {"src": "hda", "id": "32fcd1c4f6e38c7a"}, "option": "", "tag": "NM"}, "job": {"model_class": "Job", "id": "b6c14e997c8b2346", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:53:48.487550", "create_time": "2023-05-15T10:53:36.565636", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-958dj", "command_line": "ln -s '/galaxy/server/database/objects/5/f/2/dataset_5f239f5c-6b91-4051-9e62-f67c92c4da0f.dat' ./input.bam &&  bedtools bamtobed    -tag 'NM' -i ./input.bam > '/galaxy/server/database/objects/0/5/8/dataset_0583532a-6873-4592-a402-610149a1257b.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"NM\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "32fcd1c4f6e38c7a", "src": "hda", "uuid": "5f239f5c-6b91-4051-9e62-f67c92c4da0f"}}, "outputs": {"output": {"id": "870147d7a253306c", "src": "hda", "uuid": "0583532a-6873-4592-a402-610149a1257b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:53:38", "plugin": "core", "name": "end_epoch", "raw_value": "1684148018.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:53:38", "plugin": "core", "name": "start_epoch", "raw_value": "1684148018.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 30.587711095809937, "inputs": {"input": {"src": "hda", "id": "9bd1ef4bad3a9109"}}, "job": {"model_class": "Job", "id": "374a12413f671f0c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:59:42.032707", "create_time": "2023-05-15T10:59:30.804997", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-4jblf", "command_line": "bed12ToBed6 -i '/galaxy/server/database/objects/5/3/2/dataset_5327d133-94dd-4ca2-a1da-d8281b840d29.dat' > '/galaxy/server/database/objects/1/a/c/dataset_1ac42d6c-d06f-43be-8959-b5ba56eb7e65.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input": {"id": "9bd1ef4bad3a9109", "src": "hda", "uuid": "5327d133-94dd-4ca2-a1da-d8281b840d29"}}, "outputs": {"output": {"id": "5bdef2910ff153b2", "src": "hda", "uuid": "1ac42d6c-d06f-43be-8959-b5ba56eb7e65"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:59:32", "plugin": "core", "name": "end_epoch", "raw_value": "1684148372.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:59:32", "plugin": "core", "name": "start_epoch", "raw_value": "1684148372.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 34.484731674194336, "inputs": {"input": {"src": "hda", "id": "d856bfabbeebe1ba"}, "genome_file_opts|genome": {"src": "hda", "id": "a7560a39acc9f1d3"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "b990867f0638824e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:24:13.899449", "create_time": "2023-05-15T11:23:59.865263", "galaxy_version": "23.0", "command_version": "bedtools v2.27.1", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-spdgb", "command_line": "bedtools bedpetobam -mapq 255 -i '/galaxy/server/database/objects/4/e/9/dataset_4e9f3812-5216-4bec-bda6-1cb8e386459a.dat'  -g '/galaxy/server/database/objects/c/6/2/dataset_c6224155-2bb0-432d-8c02-c38f1c9f3057.dat'  > '/galaxy/server/database/objects/0/f/7/dataset_0f797820-e74b-41bb-a330-cabf1dd5e0d1.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mapq": "\"255\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 526, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "a7560a39acc9f1d3", "src": "hda", "uuid": "c6224155-2bb0-432d-8c02-c38f1c9f3057"}, "input": {"id": "d856bfabbeebe1ba", "src": "hda", "uuid": "4e9f3812-5216-4bec-bda6-1cb8e386459a"}}, "outputs": {"output": {"id": "863a0c8f2bba8b08", "src": "hda", "uuid": "0f797820-e74b-41bb-a330-cabf1dd5e0d1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:24:03", "plugin": "core", "name": "end_epoch", "raw_value": "1684149843.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:24:03", "plugin": "core", "name": "start_epoch", "raw_value": "1684149843.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 41.3752555847168, "inputs": {"input": {"src": "hda", "id": "c1d2c40daaa1b960"}, "genome_file_opts|genome": {"src": "hda", "id": "2cf997c96e5285d3"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "feb670556124583d", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:10:50.902428", "create_time": "2023-05-15T11:10:30.491972", "galaxy_version": "23.0", "command_version": "bedtools v2.27.1", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-fv8vg", "command_line": "bedtools bedpetobam -mapq 255 -i '/galaxy/server/database/objects/5/c/1/dataset_5c160edb-ce8f-46cc-b567-313a297b2e3a.dat' -g '/galaxy/server/database/objects/c/e/3/dataset_ce3034d5-8b37-45f9-a0a0-5fdf5f24d453.dat'  > '/galaxy/server/database/objects/9/4/e/dataset_94e685df-63a0-46ca-91ec-19d0ae5c94e9.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mapq": "\"255\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 382, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "c1d2c40daaa1b960", "src": "hda", "uuid": "5c160edb-ce8f-46cc-b567-313a297b2e3a"}, "genome": {"id": "2cf997c96e5285d3", "src": "hda", "uuid": "ce3034d5-8b37-45f9-a0a0-5fdf5f24d453"}}, "outputs": {"output": {"id": "aa1f4a50ae15bb21", "src": "hda", "uuid": "94e685df-63a0-46ca-91ec-19d0ae5c94e9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:10:40", "plugin": "core", "name": "end_epoch", "raw_value": "1684149040.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:10:40", "plugin": "core", "name": "start_epoch", "raw_value": "1684149040.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 11.507234811782837, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 35.353936195373535, "inputs": {"input": {"src": "hda", "id": "80dbd7760956be44"}, "genome_file_opts|genome": {"src": "hda", "id": "c37dc360d826ba29"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "cde3aa2827b2eb39", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:55:34.387189", "create_time": "2023-05-15T10:55:22.675462", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-hw7rt", "command_line": "bedtools bedtobam  -mapq 255 -g '/galaxy/server/database/objects/9/e/2/dataset_9e2476b0-bafa-4e6e-8206-77df3509e1b3.dat'  -i '/galaxy/server/database/objects/1/1/7/dataset_11710389-c89f-4dc2-a814-bb49163fdec5.dat' > '/galaxy/server/database/objects/b/7/6/dataset_b7604527-5340-45a1-a2e2-e9bf6de70b61.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mapq": "\"255\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 214, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bed12": "false"}, "inputs": {"input": {"id": "80dbd7760956be44", "src": "hda", "uuid": "11710389-c89f-4dc2-a814-bb49163fdec5"}, "genome": {"id": "c37dc360d826ba29", "src": "hda", "uuid": "9e2476b0-bafa-4e6e-8206-77df3509e1b3"}}, "outputs": {"output": {"id": "4c1aba1da789046d", "src": "hda", "uuid": "b7604527-5340-45a1-a2e2-e9bf6de70b61"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:55:25", "plugin": "core", "name": "end_epoch", "raw_value": "1684148125.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:55:24", "plugin": "core", "name": "start_epoch", "raw_value": "1684148124.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 27.059288024902344, "inputs": {"input": {"src": "hda", "id": "7155200961a0a498"}}, "job": {"model_class": "Job", "id": "d6346db6937162d8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:56:01.696065", "create_time": "2023-05-15T10:55:49.841923", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-mh8nj", "command_line": "bedToIgv -i '/galaxy/server/database/objects/1/3/6/dataset_1368940c-2dcf-4bba-88b1-e593175eadad.dat'   -slop 0 -img png > '/galaxy/server/database/objects/c/7/b/dataset_c7bb8eb8-2549-45ea-bd1e-2aeb18ccc08e.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "img": "\"png\"", "slop": "\"0\"", "name": "false", "clps": "false", "sort": "\"\""}, "inputs": {"input": {"id": "7155200961a0a498", "src": "hda", "uuid": "1368940c-2dcf-4bba-88b1-e593175eadad"}}, "outputs": {"output": {"id": "dd5442b4da2c893d", "src": "hda", "uuid": "c7bb8eb8-2549-45ea-bd1e-2aeb18ccc08e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:55:52", "plugin": "core", "name": "end_epoch", "raw_value": "1684148152.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:55:52", "plugin": "core", "name": "start_epoch", "raw_value": "1684148152.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 47.62199568748474, "inputs": {"inputA": {"src": "hda", "id": "fbd7f46d3c0c48d8"}, "overlap_with|inputB": {"src": "hda", "id": "248ad8ba4018fd3c"}, "overlap_with|source": "history"}, "job": {"model_class": "Job", "id": "b3156d0eaf518c40", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:46:26.840499", "create_time": "2023-05-15T10:46:15.388911", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-zvjjl", "command_line": "closestBed    -mdb each -t all -k 1 -a '/galaxy/server/database/objects/b/1/b/dataset_b1bdf6f6-9a1b-4184-9f34-a1dec896c240.dat' -b '/galaxy/server/database/objects/e/0/f/dataset_e0f51298-c121-44a6-b90a-ac33f9ff23a9.dat' > '/galaxy/server/database/objects/7/7/4/dataset_774aa757-328d-41c9-baa7-1f59553dc205.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "false", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 122, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "fbd7f46d3c0c48d8", "src": "hda", "uuid": "b1bdf6f6-9a1b-4184-9f34-a1dec896c240"}, "inputB": {"id": "248ad8ba4018fd3c", "src": "hda", "uuid": "e0f51298-c121-44a6-b90a-ac33f9ff23a9"}, "inputB1": {"id": "248ad8ba4018fd3c", "src": "hda", "uuid": "e0f51298-c121-44a6-b90a-ac33f9ff23a9"}}, "outputs": {"output": {"id": "10451fa461bcbe02", "src": "hda", "uuid": "774aa757-328d-41c9-baa7-1f59553dc205"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:46:17", "plugin": "core", "name": "end_epoch", "raw_value": "1684147577.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:46:17", "plugin": "core", "name": "start_epoch", "raw_value": "1684147577.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 42.50438690185547, "inputs": {"inputA": {"src": "hda", "id": "bc023ea42c39313a"}, "overlap_with|inputB": [{"src": "hda", "id": "487d034a196d0987"}, {"src": "hda", "id": "a2cb7159985ecc65"}], "overlap_with|source": "history", "addition": true}, "job": {"model_class": "Job", "id": "40b61321291c0523", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:47:07.236028", "create_time": "2023-05-15T10:46:53.108909", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-5th7d", "command_line": "closestBed  -d  -mdb each -t all -k 1 -a '/galaxy/server/database/objects/a/d/c/dataset_adcde5b7-44bd-441b-83a3-64341c0bc2bb.dat' -b '/galaxy/server/database/objects/0/d/b/dataset_0dbfa076-bf92-43bf-9c4a-cbbc123b77ce.dat' '/galaxy/server/database/objects/d/1/0/dataset_d10b80ab-99a9-4ea4-af8d-49f0f36cdad8.dat' > '/galaxy/server/database/objects/a/c/1/dataset_ac10dac4-1d75-4f4e-a04a-ea8eb2de404b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "true", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}, {\"id\": 130, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "bc023ea42c39313a", "src": "hda", "uuid": "adcde5b7-44bd-441b-83a3-64341c0bc2bb"}, "inputB": {"id": "487d034a196d0987", "src": "hda", "uuid": "0dbfa076-bf92-43bf-9c4a-cbbc123b77ce"}, "inputB1": {"id": "487d034a196d0987", "src": "hda", "uuid": "0dbfa076-bf92-43bf-9c4a-cbbc123b77ce"}, "inputB2": {"id": "a2cb7159985ecc65", "src": "hda", "uuid": "d10b80ab-99a9-4ea4-af8d-49f0f36cdad8"}}, "outputs": {"output": {"id": "1ca29ec66c605ead", "src": "hda", "uuid": "ac10dac4-1d75-4f4e-a04a-ea8eb2de404b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:46:58", "plugin": "core", "name": "end_epoch", "raw_value": "1684147618.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:46:58", "plugin": "core", "name": "start_epoch", "raw_value": "1684147618.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 42.50073313713074, "inputs": {"inputA": {"src": "hda", "id": "bc023ea42c39313a"}, "overlap_with|inputB": [{"src": "hda", "id": "487d034a196d0987"}, {"src": "hda", "id": "a2cb7159985ecc65"}], "overlap_with|source": "history", "addition": true, "mdb": "all"}, "job": {"model_class": "Job", "id": "e2e1d905c42f51c1", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:47:09.248035", "create_time": "2023-05-15T10:46:56.801297", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-frk5q", "command_line": "closestBed  -d  -mdb all -t all -k 1 -a '/galaxy/server/database/objects/a/d/c/dataset_adcde5b7-44bd-441b-83a3-64341c0bc2bb.dat' -b '/galaxy/server/database/objects/0/d/b/dataset_0dbfa076-bf92-43bf-9c4a-cbbc123b77ce.dat' '/galaxy/server/database/objects/d/1/0/dataset_d10b80ab-99a9-4ea4-af8d-49f0f36cdad8.dat' > '/galaxy/server/database/objects/a/8/0/dataset_a807d792-4f04-447c-9c2f-4f32c69b9ed6.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"all\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "true", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}, {\"id\": 130, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "bc023ea42c39313a", "src": "hda", "uuid": "adcde5b7-44bd-441b-83a3-64341c0bc2bb"}, "inputB": {"id": "487d034a196d0987", "src": "hda", "uuid": "0dbfa076-bf92-43bf-9c4a-cbbc123b77ce"}, "inputB1": {"id": "487d034a196d0987", "src": "hda", "uuid": "0dbfa076-bf92-43bf-9c4a-cbbc123b77ce"}, "inputB2": {"id": "a2cb7159985ecc65", "src": "hda", "uuid": "d10b80ab-99a9-4ea4-af8d-49f0f36cdad8"}}, "outputs": {"output": {"id": "ac918cd15f244f54", "src": "hda", "uuid": "a807d792-4f04-447c-9c2f-4f32c69b9ed6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:46:59", "plugin": "core", "name": "end_epoch", "raw_value": "1684147619.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:46:59", "plugin": "core", "name": "start_epoch", "raw_value": "1684147619.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 16.827805757522583, "inputs": {"inputA": {"src": "hda", "id": "ac453eb95449d088"}, "overlap_with|inputB": {"src": "hda", "id": "8c4797a97733de9c"}, "overlap_with|source": "history", "addition2|addition2_select": "ref"}, "execution_problem": "parameter 'inputA': the previously selected dataset has entered an unusable state", "dynamic_param_error": false, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 11.284343004226685, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 5, "time_seconds": 31.863595008850098, "inputs": {"inputA": {"src": "hda", "id": "a75405d6dbb527e6"}, "overlap_with|inputB": {"src": "hda", "id": "4e1f9ae4174bfa9b"}, "overlap_with|source": "history", "k": "3"}, "job": {"model_class": "Job", "id": "ec51df06c367b9f5", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:47:52.576186", "create_time": "2023-05-15T10:47:39.818819", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-24qdx", "command_line": "closestBed    -mdb each -t all -k 3 -a '/galaxy/server/database/objects/3/8/5/dataset_3854dad0-2c88-4301-8b78-dfdca539e1e0.dat' -b '/galaxy/server/database/objects/9/3/2/dataset_932604e6-0818-4f66-a5bb-9717dc8853f7.dat' > '/galaxy/server/database/objects/d/2/c/dataset_d2c634de-3824-497d-9a3b-e873200aa742.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"3\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "false", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 138, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "a75405d6dbb527e6", "src": "hda", "uuid": "3854dad0-2c88-4301-8b78-dfdca539e1e0"}, "inputB": {"id": "4e1f9ae4174bfa9b", "src": "hda", "uuid": "932604e6-0818-4f66-a5bb-9717dc8853f7"}, "inputB1": {"id": "4e1f9ae4174bfa9b", "src": "hda", "uuid": "932604e6-0818-4f66-a5bb-9717dc8853f7"}}, "outputs": {"output": {"id": "4130bfe9731614f2", "src": "hda", "uuid": "d2c634de-3824-497d-9a3b-e873200aa742"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:47:43", "plugin": "core", "name": "end_epoch", "raw_value": "1684147663.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:47:43", "plugin": "core", "name": "start_epoch", "raw_value": "1684147663.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 6, "time_seconds": 16.254961729049683, "inputs": {"inputA": {"src": "hda", "id": "a75405d6dbb527e6"}, "overlap_with|source": "data_table", "k": "3"}, "execution_problem": "parameter 'table': an invalid option (None) was selected, please verify", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 27.730456352233887, "inputs": {"inputA": {"src": "hda", "id": "c2571f08b015cda7"}}, "job": {"model_class": "Job", "id": "73a01243e977d670", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:52:19.607715", "create_time": "2023-05-15T10:52:06.912334", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-zw9qp", "command_line": "bedtools cluster  -d 0 -i '/galaxy/server/database/objects/8/1/e/dataset_81ede334-77e2-4be7-99c0-5c7de77e8cb2.dat' > '/galaxy/server/database/objects/d/8/4/dataset_d84c6497-32f0-4757-95c4-8bb69e630b09.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "distance": "\"0\"", "strand": "false"}, "inputs": {"inputA": {"id": "c2571f08b015cda7", "src": "hda", "uuid": "81ede334-77e2-4be7-99c0-5c7de77e8cb2"}}, "outputs": {"output": {"id": "290d6ae87379e22f", "src": "hda", "uuid": "d84c6497-32f0-4757-95c4-8bb69e630b09"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:52:10", "plugin": "core", "name": "end_epoch", "raw_value": "1684147930.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:52:10", "plugin": "core", "name": "start_epoch", "raw_value": "1684147930.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 33.269577741622925, "inputs": {"input": {"src": "hda", "id": "c9b341d0ac4f525a"}, "genome_file_opts|genome": {"src": "hda", "id": "559d1c5f93499914"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "3a675b78c3880e56", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:23:00.290423", "create_time": "2023-05-15T11:22:46.982648", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-h22j5", "command_line": "complementBed -i '/galaxy/server/database/objects/d/a/6/dataset_da608d28-a1b4-405e-91f9-d945ef6974d6.dat'  -g '/galaxy/server/database/objects/7/0/0/dataset_70075703-2119-4cfc-b603-15e27a332f66.dat'  > '/galaxy/server/database/objects/e/6/4/dataset_e6419ed4-7aac-419f-aa49-51001e5d5825.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 513, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "559d1c5f93499914", "src": "hda", "uuid": "70075703-2119-4cfc-b603-15e27a332f66"}, "input": {"id": "c9b341d0ac4f525a", "src": "hda", "uuid": "da608d28-a1b4-405e-91f9-d945ef6974d6"}}, "outputs": {"output": {"id": "2eb5bcc5242aedd1", "src": "hda", "uuid": "e6419ed4-7aac-419f-aa49-51001e5d5825"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:22:50", "plugin": "core", "name": "end_epoch", "raw_value": "1684149770.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:22:49", "plugin": "core", "name": "start_epoch", "raw_value": "1684149769.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 30.89924383163452, "inputs": {"input": {"src": "hda", "id": "46dd16845f3a602f"}, "genome_file_opts|genome": {"src": "hda", "id": "bd19e334cf5cc1ee"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "3bb2a51f94418034", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:44:13.221445", "create_time": "2023-05-15T10:44:02.799556", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-2s85s", "command_line": "complementBed -i '/galaxy/server/database/objects/6/0/4/dataset_60440dd3-a33b-4033-99b1-44fd3076aa22.dat' -g '/galaxy/server/database/objects/f/a/c/dataset_face785d-1f8e-4c77-a3ba-17c019c107db.dat'  > '/galaxy/server/database/objects/0/8/9/dataset_08988b2f-a28e-4514-9b00-678c91704024.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 94, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "46dd16845f3a602f", "src": "hda", "uuid": "60440dd3-a33b-4033-99b1-44fd3076aa22"}, "genome": {"id": "bd19e334cf5cc1ee", "src": "hda", "uuid": "face785d-1f8e-4c77-a3ba-17c019c107db"}}, "outputs": {"output": {"id": "13c8618e88b2d57a", "src": "hda", "uuid": "08988b2f-a28e-4514-9b00-678c91704024"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:44:04", "plugin": "core", "name": "end_epoch", "raw_value": "1684147444.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:44:04", "plugin": "core", "name": "start_epoch", "raw_value": "1684147444.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 39.83530020713806, "inputs": {"inputA": {"src": "hda", "id": "24f32125984de19a"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "9e310517f1843806"}}, "job": {"model_class": "Job", "id": "e73ba72fce0ae7ee", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:50:38.238711", "create_time": "2023-05-15T10:50:15.653812", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-fzz86", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/7/2/2/dataset_7227e50c-28d6-4176-bc56-24f1b0165458.dat' -b '/galaxy/server/database/objects/5/1/3/dataset_5133fdb4-aaa4-41c4-8db7-0d3ee558f1f6.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/2/9/d/dataset_29d13257-cab4-4772-ab08-10d8ed524b99.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 164, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "24f32125984de19a", "src": "hda", "uuid": "7227e50c-28d6-4176-bc56-24f1b0165458"}, "inputB": {"id": "9e310517f1843806", "src": "hda", "uuid": "5133fdb4-aaa4-41c4-8db7-0d3ee558f1f6"}}, "outputs": {"output": {"id": "da6ef68c2c144303", "src": "hda", "uuid": "29d13257-cab4-4772-ab08-10d8ed524b99"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:50:28", "plugin": "core", "name": "end_epoch", "raw_value": "1684147828.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:50:28", "plugin": "core", "name": "start_epoch", "raw_value": "1684147828.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 39.94994640350342, "inputs": {"inputA": {"src": "hda", "id": "ec3a591c22af18d8"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "b6c14e997c8b2346"}, "sorted": true}, "job": {"model_class": "Job", "id": "c2877b601cf1e983", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:50:39.340276", "create_time": "2023-05-15T10:50:21.112865", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-lj4zj", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/2/3/e/dataset_23e433d9-dfa7-425c-9e53-c85ad9f698db.dat' -b '/galaxy/server/database/objects/2/7/f/dataset_27f0115b-5ae8-4642-b068-c0fdca189ed6.dat'   -sorted -g <(samtools view -H /galaxy/server/database/objects/2/7/f/dataset_27f0115b-5ae8-4642-b068-c0fdca189ed6.dat | tr ':' '\\t' | grep SN | cut -f 3,5)   | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/6/b/9/dataset_6b999ef8-5918-4f71-8ebe-fb9393d5bb4d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "true", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 166, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "ec3a591c22af18d8", "src": "hda", "uuid": "23e433d9-dfa7-425c-9e53-c85ad9f698db"}, "inputB": {"id": "b6c14e997c8b2346", "src": "hda", "uuid": "27f0115b-5ae8-4642-b068-c0fdca189ed6"}}, "outputs": {"output": {"id": "7fcf56918b74ad7b", "src": "hda", "uuid": "6b999ef8-5918-4f71-8ebe-fb9393d5bb4d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:50:29", "plugin": "core", "name": "end_epoch", "raw_value": "1684147829.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:50:29", "plugin": "core", "name": "start_epoch", "raw_value": "1684147829.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 29.143609046936035, "inputs": {"inputA": {"src": "hda", "id": "1a5a2a91892ccb7e"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "18ac891b6ba2da4b"}, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "sorted": true}, "job": {"model_class": "Job", "id": "a75405d6dbb527e6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:51:07.536770", "create_time": "2023-05-15T10:50:55.672495", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-mh27s", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/9/f/1/dataset_9f1c3e0f-08a0-4aab-9a0c-4d54e0535982.dat' -b '/galaxy/server/database/objects/b/7/a/dataset_b7a37fa6-020d-4b26-b331-3adf476ef805.dat'   -sorted -g <(samtools view -H /galaxy/server/database/objects/b/7/a/dataset_b7a37fa6-020d-4b26-b331-3adf476ef805.dat | tr ':' '\\t' | grep SN | cut -f 3,5)   | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/e/5/a/dataset_e5ae9c53-2ba3-4b15-815d-0d3fb9e618ea.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "true", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 170, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "1a5a2a91892ccb7e", "src": "hda", "uuid": "9f1c3e0f-08a0-4aab-9a0c-4d54e0535982"}, "inputB": {"id": "18ac891b6ba2da4b", "src": "hda", "uuid": "b7a37fa6-020d-4b26-b331-3adf476ef805"}, "inputB1": {"id": "18ac891b6ba2da4b", "src": "hda", "uuid": "b7a37fa6-020d-4b26-b331-3adf476ef805"}}, "outputs": {"output": {"id": "2b0d5b0840f82470", "src": "hda", "uuid": "e5ae9c53-2ba3-4b15-815d-0d3fb9e618ea"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:50:57", "plugin": "core", "name": "end_epoch", "raw_value": "1684147857.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:50:57", "plugin": "core", "name": "start_epoch", "raw_value": "1684147857.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 33.42959189414978, "inputs": {"inputA": {"src": "hda", "id": "226aa83658c06def"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "0b16331abec7c8a5"}, "overlap_b": "1"}, "job": {"model_class": "Job", "id": "4130bfe9731614f2", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:51:12.880879", "create_time": "2023-05-15T10:51:01.695607", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-kvl6c", "command_line": "bedtools coverage     -F 1.0   -a '/galaxy/server/database/objects/6/d/f/dataset_6dfdd893-9048-4b20-8704-2e13a00f8f4d.dat' -b '/galaxy/server/database/objects/c/c/7/dataset_cc757301-9b5a-49da-a1ad-45a79c826f3e.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/4/b/3/dataset_4b32bf6c-f5a4-4863-b536-36917e178b2a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"1.0\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 172, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "226aa83658c06def", "src": "hda", "uuid": "6dfdd893-9048-4b20-8704-2e13a00f8f4d"}, "inputB": {"id": "0b16331abec7c8a5", "src": "hda", "uuid": "cc757301-9b5a-49da-a1ad-45a79c826f3e"}}, "outputs": {"output": {"id": "b5a7d818b33b6c23", "src": "hda", "uuid": "4b32bf6c-f5a4-4863-b536-36917e178b2a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:51:03", "plugin": "core", "name": "end_epoch", "raw_value": "1684147863.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:51:03", "plugin": "core", "name": "start_epoch", "raw_value": "1684147863.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 35.18582057952881, "inputs": {"inputA": {"src": "hda", "id": "fb2a90ca5add7e1d"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "9d811397a11ed361"}, "overlap_a": "1E-5", "reciprocal_overlap": true}, "job": {"model_class": "Job", "id": "614d335e12c3a227", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:51:42.515013", "create_time": "2023-05-15T10:51:29.692197", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-trfvf", "command_line": "bedtools coverage     -f 1e-05 -r  -a '/galaxy/server/database/objects/a/0/d/dataset_a0d54216-e21a-46c9-b710-d12470d29492.dat' -b '/galaxy/server/database/objects/5/e/d/dataset_5ed48d13-b6ac-4f9a-ac14-20d91a8fab11.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/1/5/c/dataset_15ccfdc3-244f-4ff1-bc3b-eaa56b6b322c.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "true", "overlap_b": "\"\"", "overlap_a": "\"1e-05\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 176, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "fb2a90ca5add7e1d", "src": "hda", "uuid": "a0d54216-e21a-46c9-b710-d12470d29492"}, "inputB": {"id": "9d811397a11ed361", "src": "hda", "uuid": "5ed48d13-b6ac-4f9a-ac14-20d91a8fab11"}}, "outputs": {"output": {"id": "0bf340b0cdc906d0", "src": "hda", "uuid": "15ccfdc3-244f-4ff1-bc3b-eaa56b6b322c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:51:32", "plugin": "core", "name": "end_epoch", "raw_value": "1684147892.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:51:32", "plugin": "core", "name": "start_epoch", "raw_value": "1684147892.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 5, "time_seconds": 38.82716608047485, "inputs": {"inputA": {"src": "hda", "id": "a9b35252183cba3b"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "129f72a52a8940cd"}, {"src": "hda", "id": "77031b8f5b0cf026"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "sorted": true}, "job": {"model_class": "Job", "id": "4c101d74b775c46c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:51:51.967452", "create_time": "2023-05-15T10:51:39.697945", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-crl2p", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/6/d/d/dataset_6dd7c230-e3b6-4b26-a1c6-753a4fc951d6.dat' -b '/galaxy/server/database/objects/7/e/5/dataset_7e5bb81e-77de-4d41-bf08-5603f93501ef.dat' '/galaxy/server/database/objects/5/1/f/dataset_51ff5d97-3ca1-4100-afc7-4caf686c6153.dat'   -sorted -g <(samtools view -H /galaxy/server/database/objects/7/e/5/dataset_7e5bb81e-77de-4d41-bf08-5603f93501ef.dat | tr ':' '\\t' | grep SN | cut -f 3,5)   | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/0/9/e/dataset_09ed2f7d-4c39-4c19-bd38-2d4750be977f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "true", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 178, \"src\": \"hda\"}, {\"id\": 179, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "a9b35252183cba3b", "src": "hda", "uuid": "6dd7c230-e3b6-4b26-a1c6-753a4fc951d6"}, "inputB": {"id": "129f72a52a8940cd", "src": "hda", "uuid": "7e5bb81e-77de-4d41-bf08-5603f93501ef"}, "inputB1": {"id": "129f72a52a8940cd", "src": "hda", "uuid": "7e5bb81e-77de-4d41-bf08-5603f93501ef"}, "inputB2": {"id": "77031b8f5b0cf026", "src": "hda", "uuid": "51ff5d97-3ca1-4100-afc7-4caf686c6153"}}, "outputs": {"output": {"id": "50554b6b63f2432a", "src": "hda", "uuid": "09ed2f7d-4c39-4c19-bd38-2d4750be977f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:51:41", "plugin": "core", "name": "end_epoch", "raw_value": "1684147901.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:51:41", "plugin": "core", "name": "start_epoch", "raw_value": "1684147901.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 6, "time_seconds": 29.171323537826538, "inputs": {"inputA": {"src": "hda", "id": "b41004281615f36b"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "7653be0d9ad4ba0e"}}, "job": {"model_class": "Job", "id": "78f349af5967ab52", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:52:11.760661", "create_time": "2023-05-15T10:52:00.699025", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-fdwpm", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/3/c/3/dataset_3c3340e7-a4b8-4aef-a650-1635706b5d5f.dat' -b '/galaxy/server/database/objects/0/8/a/dataset_08a16967-73d3-445f-8f93-c9afe6beb044.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/2/8/2/dataset_282b4640-efca-4930-9146-e00b3fd6456b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 183, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "b41004281615f36b", "src": "hda", "uuid": "3c3340e7-a4b8-4aef-a650-1635706b5d5f"}, "inputB": {"id": "7653be0d9ad4ba0e", "src": "hda", "uuid": "08a16967-73d3-445f-8f93-c9afe6beb044"}}, "outputs": {"output": {"id": "cde3aa2827b2eb39", "src": "hda", "uuid": "282b4640-efca-4930-9146-e00b3fd6456b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:52:02", "plugin": "core", "name": "end_epoch", "raw_value": "1684147922.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:52:02", "plugin": "core", "name": "start_epoch", "raw_value": "1684147922.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 31.476138830184937, "inputs": {"input": {"src": "hda", "id": "4d1df31c5e9bb7c3"}, "cols": "5"}, "job": {"model_class": "Job", "id": "a9b35252183cba3b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:54:59.016677", "create_time": "2023-05-15T10:54:45.274602", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-vx82k", "command_line": "bedtools expand -c '5' -i '/galaxy/server/database/objects/e/f/d/dataset_efdc694b-3c1e-4f5a-a477-2d8ee2eeceaa.dat' > '/galaxy/server/database/objects/c/e/0/dataset_ce09344a-9af7-4efc-9392-cef81edbab71.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "cols": "\"5\""}, "inputs": {"input": {"id": "4d1df31c5e9bb7c3", "src": "hda", "uuid": "efdc694b-3c1e-4f5a-a477-2d8ee2eeceaa"}}, "outputs": {"output": {"id": "6103fb7bb81c03f6", "src": "hda", "uuid": "ce09344a-9af7-4efc-9392-cef81edbab71"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:54:50", "plugin": "core", "name": "end_epoch", "raw_value": "1684148090.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:54:50", "plugin": "core", "name": "start_epoch", "raw_value": "1684148090.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 29.867973566055298, "inputs": {"input": {"src": "hda", "id": "4d1df31c5e9bb7c3"}, "cols": "4,5"}, "job": {"model_class": "Job", "id": "129f72a52a8940cd", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:55:00.189129", "create_time": "2023-05-15T10:54:48.180392", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-z6678", "command_line": "bedtools expand -c '4,5' -i '/galaxy/server/database/objects/e/f/d/dataset_efdc694b-3c1e-4f5a-a477-2d8ee2eeceaa.dat' > '/galaxy/server/database/objects/0/0/a/dataset_00a3d001-6b24-4828-bd26-ccbf45c2d466.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "cols": "\"4,5\""}, "inputs": {"input": {"id": "4d1df31c5e9bb7c3", "src": "hda", "uuid": "efdc694b-3c1e-4f5a-a477-2d8ee2eeceaa"}}, "outputs": {"output": {"id": "36fc19e925686ba6", "src": "hda", "uuid": "00a3d001-6b24-4828-bd26-ccbf45c2d466"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:54:51", "plugin": "core", "name": "end_epoch", "raw_value": "1684148091.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:54:51", "plugin": "core", "name": "start_epoch", "raw_value": "1684148091.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 38.33316922187805, "inputs": {"inputA": {"src": "hda", "id": "64895cc097f3d2dd"}, "inputB": {"src": "hda", "id": "01025ef962915b7f"}, "genome_file_opts|genome": {"src": "hda", "id": "8387b79c96cf9502"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "7b3b604befef6c5b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:23:37.352708", "create_time": "2023-05-15T11:23:23.864307", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-lvrf7", "command_line": "bedtools fisher   -a '/galaxy/server/database/objects/a/a/b/dataset_aabc97f6-2110-4bf6-8062-af4dc4beff22.dat' -b '/galaxy/server/database/objects/f/2/d/dataset_f2df9e96-fcb0-4761-a14c-80349517ab71.dat'    -g '/galaxy/server/database/objects/c/d/b/dataset_cdb226a1-2ce2-4fb5-9549-285671aed2cb.dat'    > '/galaxy/server/database/objects/7/c/d/dataset_7cd20541-af43-48f2-855e-a0d2d820f0a0.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "m": "false", "reciprocal": "\"\"", "overlap": "\"\"", "split": "false", "strand": "\"\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 518, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "8387b79c96cf9502", "src": "hda", "uuid": "cdb226a1-2ce2-4fb5-9549-285671aed2cb"}, "inputB": {"id": "01025ef962915b7f", "src": "hda", "uuid": "f2df9e96-fcb0-4761-a14c-80349517ab71"}, "inputA": {"id": "64895cc097f3d2dd", "src": "hda", "uuid": "aabc97f6-2110-4bf6-8062-af4dc4beff22"}}, "outputs": {"output": {"id": "2a52979ab6f38a66", "src": "hda", "uuid": "7cd20541-af43-48f2-855e-a0d2d820f0a0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:23:27", "plugin": "core", "name": "end_epoch", "raw_value": "1684149807.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:23:27", "plugin": "core", "name": "start_epoch", "raw_value": "1684149807.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 38.20053958892822, "inputs": {"inputA": {"src": "hda", "id": "b2e5f40756393f5c"}, "inputB": {"src": "hda", "id": "4615dee97dee034d"}, "genome_file_opts|genome": {"src": "hda", "id": "5c42ba778755ef10"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "6904ce3293b46475", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:11:49.936506", "create_time": "2023-05-15T11:11:34.419129", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-5h68h", "command_line": "bedtools fisher   -a '/galaxy/server/database/objects/2/5/7/dataset_2578222e-bfb1-45c1-8ba0-00c7212ccd91.dat' -b '/galaxy/server/database/objects/8/6/5/dataset_8652a12d-39b4-4fbb-bab7-3921a96f0a11.dat'   -g '/galaxy/server/database/objects/2/7/2/dataset_272e7947-c5d5-47d2-9354-ade0db6044df.dat'    > '/galaxy/server/database/objects/1/8/0/dataset_18012daa-fa6a-48cc-941a-241b514e3965.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "m": "false", "reciprocal": "\"\"", "overlap": "\"\"", "split": "false", "strand": "\"\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 392, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "b2e5f40756393f5c", "src": "hda", "uuid": "2578222e-bfb1-45c1-8ba0-00c7212ccd91"}, "inputB": {"id": "4615dee97dee034d", "src": "hda", "uuid": "8652a12d-39b4-4fbb-bab7-3921a96f0a11"}, "genome": {"id": "5c42ba778755ef10", "src": "hda", "uuid": "272e7947-c5d5-47d2-9354-ade0db6044df"}}, "outputs": {"output": {"id": "01d2dcad1482d831", "src": "hda", "uuid": "18012daa-fa6a-48cc-941a-241b514e3965"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:11:37", "plugin": "core", "name": "end_epoch", "raw_value": "1684149097.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:11:37", "plugin": "core", "name": "start_epoch", "raw_value": "1684149097.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 39.00011706352234, "inputs": {"input": {"src": "hda", "id": "3b5b0dfa7132af0b"}, "genome_file_opts|genome": {"src": "hda", "id": "27f9d3d32652adfe"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|b": "5", "addition|addition_select": "b"}, "job": {"model_class": "Job", "id": "79970a7522e8616e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:23:39.223619", "create_time": "2023-05-15T11:23:26.396891", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-wdglg", "command_line": "flankBed    -g '/galaxy/server/database/objects/e/8/0/dataset_e80280f2-204e-45f4-b3c8-2a08b345d934.dat'  -i '/galaxy/server/database/objects/3/3/2/dataset_3329e923-fff7-4670-81c1-7e3a6259e0f4.dat'  -b 5 > '/galaxy/server/database/objects/f/b/f/dataset_fbfe07e8-76a1-45bb-96db-93c569791ac9.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 520, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "27f9d3d32652adfe", "src": "hda", "uuid": "e80280f2-204e-45f4-b3c8-2a08b345d934"}, "input": {"id": "3b5b0dfa7132af0b", "src": "hda", "uuid": "3329e923-fff7-4670-81c1-7e3a6259e0f4"}}, "outputs": {"output": {"id": "2b5e123f993b9ba6", "src": "hda", "uuid": "fbfe07e8-76a1-45bb-96db-93c569791ac9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:23:29", "plugin": "core", "name": "end_epoch", "raw_value": "1684149809.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:23:29", "plugin": "core", "name": "start_epoch", "raw_value": "1684149809.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 15.213361024856567, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 32.60181164741516, "inputs": {"input": {"src": "hda", "id": "9b0c3ade46f698fd"}, "genome_file_opts|genome": {"src": "hda", "id": "4e4dbbf118257dd8"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|b": "5", "addition|addition_select": "b"}, "job": {"model_class": "Job", "id": "50fffc0b4a84b73d", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:00:14.761775", "create_time": "2023-05-15T11:00:03.557605", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-2772z", "command_line": "flankBed   -g '/galaxy/server/database/objects/2/7/d/dataset_27dbcc35-5613-4d1f-a1c9-931594529f53.dat'  -i '/galaxy/server/database/objects/2/e/a/dataset_2ea351f7-2087-494e-a228-ef9fe3c47448.dat'  -b 5 > '/galaxy/server/database/objects/0/1/f/dataset_01f81d6f-cc6a-4103-bd3f-0ce91299d3aa.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 268, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "9b0c3ade46f698fd", "src": "hda", "uuid": "2ea351f7-2087-494e-a228-ef9fe3c47448"}, "genome": {"id": "4e4dbbf118257dd8", "src": "hda", "uuid": "27dbcc35-5613-4d1f-a1c9-931594529f53"}}, "outputs": {"output": {"id": "c3b5de45b003ef81", "src": "hda", "uuid": "01f81d6f-cc6a-4103-bd3f-0ce91299d3aa"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:00:05", "plugin": "core", "name": "end_epoch", "raw_value": "1684148405.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:00:05", "plugin": "core", "name": "start_epoch", "raw_value": "1684148405.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 31.05053448677063, "inputs": {"input": {"src": "hda", "id": "483c1a1316a96e83"}, "genome_file_opts|genome": {"src": "hda", "id": "e6de23433b0446cc"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|l": "2", "addition|r": "3", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "86d07535accaa424", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:00:42.118181", "create_time": "2023-05-15T11:00:31.378702", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-pzssb", "command_line": "flankBed   -g '/galaxy/server/database/objects/3/5/0/dataset_3502910c-2825-4b05-a13e-4f84825c9d49.dat'  -i '/galaxy/server/database/objects/c/7/6/dataset_c767da82-dab1-4640-b7f2-3c50cb7ca61f.dat'  -l 2 -r 3 > '/galaxy/server/database/objects/f/1/4/dataset_f146b442-3893-4042-b909-14d46f97d272.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 272, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "483c1a1316a96e83", "src": "hda", "uuid": "c767da82-dab1-4640-b7f2-3c50cb7ca61f"}, "genome": {"id": "e6de23433b0446cc", "src": "hda", "uuid": "3502910c-2825-4b05-a13e-4f84825c9d49"}}, "outputs": {"output": {"id": "cdfd88ebd0f7f6b2", "src": "hda", "uuid": "f146b442-3893-4042-b909-14d46f97d272"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:00:32", "plugin": "core", "name": "end_epoch", "raw_value": "1684148432.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:00:32", "plugin": "core", "name": "start_epoch", "raw_value": "1684148432.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 32.926345109939575, "inputs": {"input_type|input": {"src": "hda", "id": "c4bb0af2a3f0cca5"}, "input_type|genome_file_opts|genome": {"src": "hda", "id": "f89ff86940f195ad"}, "input_type|genome_file_opts|genome_file_opts_selector": "hist", "input_type|input_type_select": "bed", "report|report_select": "hist"}, "job": {"model_class": "Job", "id": "eb480f6d89d82a19", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:11:24.062275", "create_time": "2023-05-15T11:11:12.060548", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-t78xh", "command_line": "bedtools genomecov  -i '/galaxy/server/database/objects/7/5/f/dataset_75f7d5ca-5edd-4940-887a-20395409a3a4.dat' -g '/galaxy/server/database/objects/b/b/7/dataset_bb74dcb1-e884-4a61-b295-18a394f8c29c.dat'      -max 0     > '/galaxy/server/database/objects/e/d/f/dataset_edf653fc-b993-4569-9e40-7823cd7e03fb.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "three": "false", "five": "false", "dz": "false", "d": "false", "strand": "\"\"", "split": "false", "report": "{\"__current_case__\": 1, \"max\": \"0\", \"report_select\": \"hist\"}", "input_type": "{\"__current_case__\": 0, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 387, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"input\": {\"values\": [{\"id\": 386, \"src\": \"hda\"}]}, \"input_type_select\": \"bed\"}"}, "inputs": {"input": {"id": "c4bb0af2a3f0cca5", "src": "hda", "uuid": "75f7d5ca-5edd-4940-887a-20395409a3a4"}, "input_type|genome": {"id": "f89ff86940f195ad", "src": "hda", "uuid": "bb74dcb1-e884-4a61-b295-18a394f8c29c"}}, "outputs": {"output": {"id": "a2fe6047044cb785", "src": "hda", "uuid": "edf653fc-b993-4569-9e40-7823cd7e03fb"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:11:14", "plugin": "core", "name": "end_epoch", "raw_value": "1684149074.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:11:13", "plugin": "core", "name": "start_epoch", "raw_value": "1684149073.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 31.358723163604736, "inputs": {"input": {"src": "hda", "id": "5104234c4621b673"}, "fasta_source|fasta": {"src": "hda", "id": "e63924a6367761d3"}, "nameOnly": false, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "4176a7a3e9be3c9f", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:24:24.116213", "create_time": "2023-05-15T11:24:11.111848", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-95fpv", "command_line": "ln -s '/galaxy/server/database/objects/f/5/4/dataset_f540d1d5-872c-43b6-b213-1f5c931e1498.dat' 'input.fasta' && bedtools getfasta      -fi 'input.fasta' -bed '/galaxy/server/database/objects/3/5/9/dataset_359b74b5-f21b-4be5-b6be-fd19d4149753.dat' -fo '/galaxy/server/database/objects/e/3/e/dataset_e3e7db6e-34d8-45bc-b144-553bce7d93a3.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "nameOnly": "false", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 528, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "e63924a6367761d3", "src": "hda", "uuid": "f540d1d5-872c-43b6-b213-1f5c931e1498"}, "input": {"id": "5104234c4621b673", "src": "hda", "uuid": "359b74b5-f21b-4be5-b6be-fd19d4149753"}}, "outputs": {"output": {"id": "d2884457c3f93de1", "src": "hda", "uuid": "e3e7db6e-34d8-45bc-b144-553bce7d93a3"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:24:13", "plugin": "core", "name": "end_epoch", "raw_value": "1684149853.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:24:13", "plugin": "core", "name": "start_epoch", "raw_value": "1684149853.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 39.48124170303345, "inputs": {"input": {"src": "hda", "id": "41a3e3a106176902"}, "fasta_source|fasta": {"src": "hda", "id": "62f1bb36fe40930e"}, "nameOnly": false, "tab": true, "split": false}, "job": {"model_class": "Job", "id": "f4c939ea9f91509e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:24:53.452861", "create_time": "2023-05-15T11:24:32.603324", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-jp9q4", "command_line": "ln -s '/galaxy/server/database/objects/e/a/d/dataset_eadee0be-d870-4bf1-ac77-4ffe1b41a473.dat' 'input.fasta' && bedtools getfasta   -tab   -fi 'input.fasta' -bed '/galaxy/server/database/objects/8/a/0/dataset_8a00a882-37f2-4f39-976a-f6f2f4939859.dat' -fo '/galaxy/server/database/objects/2/0/9/dataset_2099d886-0fe4-491d-b2e4-abc1ab0b8fe4.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "true", "nameOnly": "false", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 534, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "62f1bb36fe40930e", "src": "hda", "uuid": "eadee0be-d870-4bf1-ac77-4ffe1b41a473"}, "input": {"id": "41a3e3a106176902", "src": "hda", "uuid": "8a00a882-37f2-4f39-976a-f6f2f4939859"}}, "outputs": {"output": {"id": "89c00d0d5ebf6eaf", "src": "hda", "uuid": "2099d886-0fe4-491d-b2e4-abc1ab0b8fe4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:24:43", "plugin": "core", "name": "end_epoch", "raw_value": "1684149883.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:24:43", "plugin": "core", "name": "start_epoch", "raw_value": "1684149883.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 30.482609033584595, "inputs": {"input": {"src": "hda", "id": "41a3e3a106176902"}, "fasta_source|fasta": {"src": "hda", "id": "62f1bb36fe40930e"}, "name": true, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "c2fae8b87df672c6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:24:54.565224", "create_time": "2023-05-15T11:24:41.115550", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-vfv7n", "command_line": "ln -s '/galaxy/server/database/objects/e/a/d/dataset_eadee0be-d870-4bf1-ac77-4ffe1b41a473.dat' 'input.fasta' && bedtools getfasta -name     -fi 'input.fasta' -bed '/galaxy/server/database/objects/8/a/0/dataset_8a00a882-37f2-4f39-976a-f6f2f4939859.dat' -fo '/galaxy/server/database/objects/e/c/c/dataset_eccb340b-811e-4a88-b9cf-89fb9709fab8.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "nameOnly": "false", "name": "true", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 534, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "62f1bb36fe40930e", "src": "hda", "uuid": "eadee0be-d870-4bf1-ac77-4ffe1b41a473"}, "input": {"id": "41a3e3a106176902", "src": "hda", "uuid": "8a00a882-37f2-4f39-976a-f6f2f4939859"}}, "outputs": {"output": {"id": "23387d69b9841375", "src": "hda", "uuid": "eccb340b-811e-4a88-b9cf-89fb9709fab8"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:24:45", "plugin": "core", "name": "end_epoch", "raw_value": "1684149885.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:24:45", "plugin": "core", "name": "start_epoch", "raw_value": "1684149885.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 3, "time_seconds": 34.241093158721924, "inputs": {"input": {"src": "hda", "id": "626e0f7e61005534"}, "fasta_source|fasta": {"src": "hda", "id": "96f44d763bae52ed"}, "nameOnly": true, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "5db2113e24b72843", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:25:27.452107", "create_time": "2023-05-15T11:25:12.691725", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-dnszg", "command_line": "ln -s '/galaxy/server/database/objects/6/e/4/dataset_6e4011e0-4f5f-4711-a684-e7f39ee993d4.dat' 'input.fasta' && bedtools getfasta  -nameOnly    -fi 'input.fasta' -bed '/galaxy/server/database/objects/0/c/f/dataset_0cf911a4-90fc-425a-90e1-ffe362ef0b38.dat' -fo '/galaxy/server/database/objects/d/f/f/dataset_dffabe99-4458-4d8e-bbff-dfd7d06638d7.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "nameOnly": "true", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 538, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "96f44d763bae52ed", "src": "hda", "uuid": "6e4011e0-4f5f-4711-a684-e7f39ee993d4"}, "input": {"id": "626e0f7e61005534", "src": "hda", "uuid": "0cf911a4-90fc-425a-90e1-ffe362ef0b38"}}, "outputs": {"output": {"id": "3e22b556755f0077", "src": "hda", "uuid": "dffabe99-4458-4d8e-bbff-dfd7d06638d7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:25:18", "plugin": "core", "name": "end_epoch", "raw_value": "1684149918.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:25:18", "plugin": "core", "name": "start_epoch", "raw_value": "1684149918.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 4, "time_seconds": 19.205116510391235, "inputs": {"input": {"src": "hda", "id": "626e0f7e61005534"}, "fasta_source|fasta_id": "testid", "fasta_source|fasta_source_selector": "preloaded", "nameOnly": true, "tab": false, "split": false}, "execution_problem": "parameter 'fasta_id': an invalid option ('testid') was selected (valid options: galGal4,bosTau2,dasNov3,oryza_sativa_japonica_nipponbare_IRGSP4.0,droSec1,strPur2,caeRem4,caeJap3,eschColi_K12_W3110,mm10,loxAfr3,micMur1,Hydra_JCVI,panTro1,Bombyx_mori_p50T_2.0,vicPac2,equCab2,ce3,echTel1,hg_g1k_v37,xenTro3,panPan1,burkPseu_K96243,musFur1,triCas2,CpipJ1,aplCal1,melGal1,aptMan1,bosTauMd3,pseuAeru_PAO1,strPur3,melUnd1,caePb3,gadMor1,ce9,Tcacao_1.0,baciSubt,priPac1,oviAri1,burkPseu_1106A,droWil1,anoCar2,Xanthomonas_oryzae_PXO99A,droAna3,mm9,monDom4,dipOrd1,ce2,danRer10,eschColi_O157H7_EC4115,braFlo1,Arabidopsis_thaliana_TAIR9,turTru2,allMis1,caeRem2,chrPic1,susScr3,gasAcu1,cb3,speTri2,bosTau5,cavPor3,canFam1,nomLeu1,eschColi_CFT073,eschColi_K12_DH10B,caeJap1,saiBol1,susScr2,AgamP3,droVir2,papHam1,hg18,ente638,panTro4,rn3,tarSyr1,ce8,papAnu2,droEre2,pseuAeru_PA7,strePneu_R6,Araly1,hetGla1,bordBron,Sscrofa9.58,oryCun2,oryCun1,sacCer3,oryLat2,rn4,cerSim1,dm6,apiMel4,ce6,xenTro1,hg38,ce5,apiMel1,felCat4,canFam2,eschColi_O157H7_EDL933,caeJap2,bosTau6,gorGor3,ce10,caeJap4,caeRem1,apiMel2,sacCer2,rheMac2,ce7,burkPseu_1710B,bosTau8,vicPac1,AaegL1,calJac3,danRer5,eschColi_APEC_O1,eschColi_O157H7,droYak2,tupBel1,venter1,Spur_v2.6,PhumU1,felCat5,Schizosaccharomyces_pombe_1.1,nomLeu3,27835,calJac1,apiMel3,monDom1,caePb1,droVir3,Homo_sapiens_AK1,burkPseu_668,ci2,sorAra1,loxAfr1,caePb2,dm3,Homo_sapiens_nuHg19_mtrCRS,canFam3,felCat3,phiX,dasNov1,mm8,geoFor1,droMoj3,myoLuc2,eschColi_K12,pseuAeru_UCBPP_PA14,anoCar1,taeGut1,choHof1,sarHar1,Zea_mays_B73_RefGen_v2,Tcas_3.0,caeRem3,petMar1,otoGar1,IscaW1,susScr1,droSim1,Arabidopsis_thaliana_TAIR10,panTro2,ponAbe2,Amel_4.5,dp4,hg19,Xanthomonas_oryzae_MAFF_311018,eschColi_O157H7_TW14359,xenTro2,nomLeu2,monDom5,rn5,borEut13,hg19_rCRS_pUC18_phiX174,otoGar3,felCat8,Xanthomonas_oryzae_KACC10331,ornAna1,droGri2,danRer6,galGal3,rn6,bosTau4,bosTau3,droPer1,bosTau7,Ptrichocarpa_156,ce4,rheMac3,ailMel1,panTro3,danRer7)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 26.765926122665405, "inputs": {"input": {"src": "hda", "id": "d078477881f6f85a"}, "fasta_source|fasta": {"src": "hda", "id": "f3e2d0624b475896"}, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "3176eb3974ed704f", "state": "error", "exit_code": null, "update_time": "2023-05-15T10:59:39.184446", "create_time": "2023-05-15T10:59:32.965591", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-tv49s", "command_line": "bedtools getfasta     -fi '/galaxy/server/database/objects/0/7/e/dataset_07e967e8-1fbe-4327-9366-f2f4231b5d80.dat' -bed '/galaxy/server/database/objects/d/2/c/dataset_d2cfe671-dc2c-41c2-bb51-0fe687416056.dat' -fo '/galaxy/server/database/objects/2/5/7/dataset_257c983a-ceb3-4c89-a551-61f281ea8929.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"input": {"id": "d078477881f6f85a", "src": "hda", "uuid": "d2cfe671-dc2c-41c2-bb51-0fe687416056"}, "fasta": {"id": "f3e2d0624b475896", "src": "hda", "uuid": "07e967e8-1fbe-4327-9366-f2f4231b5d80"}}, "outputs": {"output": {"id": "afe89ca54eeac167", "src": "hda", "uuid": "257c983a-ceb3-4c89-a551-61f281ea8929"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 31.978299856185913, "inputs": {"input": {"src": "hda", "id": "19a647f21a745ea0"}, "fasta_source|fasta": {"src": "hda", "id": "fdd92db4cd5766db"}, "tab": true, "split": false}, "job": {"model_class": "Job", "id": "e752db74a80fef29", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:00:10.865414", "create_time": "2023-05-15T10:59:59.484339", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-nzx6j", "command_line": "bedtools getfasta  -tab   -fi '/galaxy/server/database/objects/e/8/5/dataset_e85de188-0ea8-4617-afe3-5914d827ad86.dat' -bed '/galaxy/server/database/objects/d/c/0/dataset_dc0384bc-76a3-4af9-9c6f-35ba41b071df.dat' -fo '/galaxy/server/database/objects/6/8/4/dataset_684ab5d9-021c-490c-a348-a3e4d4f70552.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "true", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 266, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"input": {"id": "19a647f21a745ea0", "src": "hda", "uuid": "dc0384bc-76a3-4af9-9c6f-35ba41b071df"}, "fasta": {"id": "fdd92db4cd5766db", "src": "hda", "uuid": "e85de188-0ea8-4617-afe3-5914d827ad86"}}, "outputs": {"output": {"id": "0dd3499407901279", "src": "hda", "uuid": "684ab5d9-021c-490c-a348-a3e4d4f70552"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file /galaxy/server/database/objects/e/8/5/dataset_e85de188-0ea8-4617-afe3-5914d827ad86.dat.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file /galaxy/server/database/objects/e/8/5/dataset_e85de188-0ea8-4617-afe3-5914d827ad86.dat.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:00:01", "plugin": "core", "name": "end_epoch", "raw_value": "1684148401.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:00:01", "plugin": "core", "name": "start_epoch", "raw_value": "1684148401.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 42.22498035430908, "inputs": {"inputA": {"src": "hda", "id": "2aada5281caad53a"}, "cols": "9", "group": "1,2,3", "operation": "sum"}, "job": {"model_class": "Job", "id": "33189c5bc0dcae59", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:10:09.384942", "create_time": "2023-05-15T11:09:46.962751", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-r9n82", "command_line": "bedtools groupby -i '/galaxy/server/database/objects/1/4/0/dataset_140fcb2d-98cb-4e45-aeee-04b51391e3fd.dat' -g '1,2,3' -c '9' -o sum > '/galaxy/server/database/objects/0/2/5/dataset_0256d983-0199-4bd2-8011-4f71ff00efb7.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operation": "\"sum\"", "group": "\"1,2,3\"", "cols": "\"9\""}, "inputs": {"inputA": {"id": "2aada5281caad53a", "src": "hda", "uuid": "140fcb2d-98cb-4e45-aeee-04b51391e3fd"}}, "outputs": {"output": {"id": "622443460f49237c", "src": "hda", "uuid": "0256d983-0199-4bd2-8011-4f71ff00efb7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:09:59", "plugin": "core", "name": "end_epoch", "raw_value": "1684148999.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:09:59", "plugin": "core", "name": "start_epoch", "raw_value": "1684148999.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 27.410011053085327, "inputs": {"inputA": {"src": "hda", "id": "2aada5281caad53a"}, "cols": "9", "group": "1,2,3", "operation": "min"}, "job": {"model_class": "Job", "id": "d6fc87629341985c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:10:09.390036", "create_time": "2023-05-15T11:09:57.082373", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-hjg5b", "command_line": "bedtools groupby -i '/galaxy/server/database/objects/1/4/0/dataset_140fcb2d-98cb-4e45-aeee-04b51391e3fd.dat' -g '1,2,3' -c '9' -o min > '/galaxy/server/database/objects/0/d/7/dataset_0d74da92-dda0-4948-90ed-a35760ad4821.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operation": "\"min\"", "group": "\"1,2,3\"", "cols": "\"9\""}, "inputs": {"inputA": {"id": "2aada5281caad53a", "src": "hda", "uuid": "140fcb2d-98cb-4e45-aeee-04b51391e3fd"}}, "outputs": {"output": {"id": "de484f45b95019c1", "src": "hda", "uuid": "0d74da92-dda0-4948-90ed-a35760ad4821"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:09:59", "plugin": "core", "name": "end_epoch", "raw_value": "1684148999.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:09:59", "plugin": "core", "name": "start_epoch", "raw_value": "1684148999.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 27.509495973587036, "inputs": {"inputA": {"src": "hda", "id": "2bec017defadd22d"}, "cols": "9", "group": "1-4", "operation": "median"}, "job": {"model_class": "Job", "id": "f0eb7d41d5ce3ca4", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:10:36.927378", "create_time": "2023-05-15T11:10:25.922905", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-khl97", "command_line": "bedtools groupby -i '/galaxy/server/database/objects/3/1/2/dataset_312982a8-93e1-46b6-96f4-bd7aea2fb473.dat' -g '1-4' -c '9' -o median > '/galaxy/server/database/objects/c/3/7/dataset_c370f640-ec9f-4282-9286-9e36f7c86639.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operation": "\"median\"", "group": "\"1-4\"", "cols": "\"9\""}, "inputs": {"inputA": {"id": "2bec017defadd22d", "src": "hda", "uuid": "312982a8-93e1-46b6-96f4-bd7aea2fb473"}}, "outputs": {"output": {"id": "55d1688c16664bd5", "src": "hda", "uuid": "c370f640-ec9f-4282-9286-9e36f7c86639"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:10:27", "plugin": "core", "name": "end_epoch", "raw_value": "1684149027.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:10:27", "plugin": "core", "name": "start_epoch", "raw_value": "1684149027.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 29.054067611694336, "inputs": {"inputA": {"src": "hda", "id": "31a5ca464ec9650b"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c4b247916ed55af9"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate"}, "job": {"model_class": "Job", "id": "0304c289cbab15e0", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:15:14.775713", "create_time": "2023-05-15T11:15:03.278421", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-pfhzx", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/5/3/dataset_053fe7b6-e66c-4175-be6b-1b64a7e80317.dat'  -b '/galaxy/server/database/objects/a/f/a/dataset_afa28ef0-2576-492f-9428-8b0536cb0785.dat'                > '/galaxy/server/database/objects/e/6/d/dataset_e6d56029-127d-488e-b89b-a1c2aaa5192a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 430, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "31a5ca464ec9650b", "src": "hda", "uuid": "053fe7b6-e66c-4175-be6b-1b64a7e80317"}, "inputB": {"id": "c4b247916ed55af9", "src": "hda", "uuid": "afa28ef0-2576-492f-9428-8b0536cb0785"}}, "outputs": {"output": {"id": "f41e14fa72211491", "src": "hda", "uuid": "e6d56029-127d-488e-b89b-a1c2aaa5192a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:15:05", "plugin": "core", "name": "end_epoch", "raw_value": "1684149305.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:15:05", "plugin": "core", "name": "start_epoch", "raw_value": "1684149305.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 51.259236335754395, "inputs": {"inputA": {"src": "hda", "id": "8ccb6fb13a602e3f"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "c25494d346327c3c"}, {"src": "hda", "id": "0f0c3a446f7175fc"}, {"src": "hda", "id": "e959cad147580722"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce"}, "job": {"model_class": "Job", "id": "f561c11150a78c76", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:15:56.907810", "create_time": "2023-05-15T11:15:40.106776", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-hbwf7", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/6/2/dataset_862173a4-7385-43bd-8471-a8f6fdd4a19c.dat'  -b '/galaxy/server/database/objects/0/7/3/dataset_073553b3-4e8c-455d-b594-0d6ff7aff030.dat' '/galaxy/server/database/objects/0/b/9/dataset_0b970a44-7e75-49b2-9593-09157de15c98.dat' '/galaxy/server/database/objects/8/4/2/dataset_842cad59-5893-43af-aa87-c52020d3e4fb.dat'                 > '/galaxy/server/database/objects/3/9/1/dataset_391f8ef9-46a7-4faa-aec2-0848cd27d7eb.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 438, \"src\": \"hda\"}, {\"id\": 439, \"src\": \"hda\"}, {\"id\": 440, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputB3": {"id": "e959cad147580722", "src": "hda", "uuid": "842cad59-5893-43af-aa87-c52020d3e4fb"}, "inputB2": {"id": "0f0c3a446f7175fc", "src": "hda", "uuid": "0b970a44-7e75-49b2-9593-09157de15c98"}, "inputB1": {"id": "c25494d346327c3c", "src": "hda", "uuid": "073553b3-4e8c-455d-b594-0d6ff7aff030"}, "inputB": {"id": "c25494d346327c3c", "src": "hda", "uuid": "073553b3-4e8c-455d-b594-0d6ff7aff030"}, "inputA": {"id": "8ccb6fb13a602e3f", "src": "hda", "uuid": "862173a4-7385-43bd-8471-a8f6fdd4a19c"}}, "outputs": {"output": {"id": "be6e07a05394e8c0", "src": "hda", "uuid": "391f8ef9-46a7-4faa-aec2-0848cd27d7eb"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:15:47", "plugin": "core", "name": "end_epoch", "raw_value": "1684149347.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:15:47", "plugin": "core", "name": "start_epoch", "raw_value": "1684149347.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-10", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 10, "time_seconds": 36.69241118431091, "inputs": {"inputA": {"src": "hda", "id": "f69e8761ad00cdc0"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "e42593aa23a7095b"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wo"}, "job": {"model_class": "Job", "id": "0f0c3a446f7175fc", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:18:51.801014", "create_time": "2023-05-15T11:18:33.918345", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-dpxn6", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/a/5/d/dataset_a5df09c4-0d95-4b20-b8e4-68966b8d6690.dat'  -b '/galaxy/server/database/objects/6/6/e/dataset_66efc9af-b920-41e7-a809-9489f3623446.dat'      -wo          > '/galaxy/server/database/objects/6/b/b/dataset_6bb2a273-41b3-4620-a684-0dc375852e22.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wo\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 472, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "e42593aa23a7095b", "src": "hda", "uuid": "66efc9af-b920-41e7-a809-9489f3623446"}, "inputA": {"id": "f69e8761ad00cdc0", "src": "hda", "uuid": "a5df09c4-0d95-4b20-b8e4-68966b8d6690"}}, "outputs": {"output": {"id": "0dfbcf68fa05f230", "src": "hda", "uuid": "6bb2a273-41b3-4620-a684-0dc375852e22"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:18:42", "plugin": "core", "name": "end_epoch", "raw_value": "1684149522.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:18:42", "plugin": "core", "name": "start_epoch", "raw_value": "1684149522.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-11", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 11, "time_seconds": 36.6669237613678, "inputs": {"inputA": {"src": "hda", "id": "f69e8761ad00cdc0"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "e42593aa23a7095b"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wao"}, "job": {"model_class": "Job", "id": "e959cad147580722", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:18:55.511136", "create_time": "2023-05-15T11:18:40.685582", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-rjfln", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/a/5/d/dataset_a5df09c4-0d95-4b20-b8e4-68966b8d6690.dat'  -b '/galaxy/server/database/objects/6/6/e/dataset_66efc9af-b920-41e7-a809-9489f3623446.dat'      -wao          > '/galaxy/server/database/objects/5/e/6/dataset_5e615c70-b6f5-42fa-8315-b6571b1089f2.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wao\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 472, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "e42593aa23a7095b", "src": "hda", "uuid": "66efc9af-b920-41e7-a809-9489f3623446"}, "inputA": {"id": "f69e8761ad00cdc0", "src": "hda", "uuid": "a5df09c4-0d95-4b20-b8e4-68966b8d6690"}}, "outputs": {"output": {"id": "6b5a69d1a4805e35", "src": "hda", "uuid": "5e615c70-b6f5-42fa-8315-b6571b1089f2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:18:45", "plugin": "core", "name": "end_epoch", "raw_value": "1684149525.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:18:45", "plugin": "core", "name": "start_epoch", "raw_value": "1684149525.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-12", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 12, "time_seconds": 37.46750807762146, "inputs": {"inputA": {"src": "hda", "id": "309e5739939fdc9c"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "344a4fcd00385bce"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "once": true}, "job": {"model_class": "Job", "id": "c1b8eae0933d51ba", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:19:29.081424", "create_time": "2023-05-15T11:19:11.555122", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-s6xqm", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/5/6/dataset_8563475a-c1b9-4042-86bc-6689e7085796.dat'  -b '/galaxy/server/database/objects/3/0/1/dataset_301e7f3f-9445-428e-a390-6aa62484ece1.dat'    -u            > '/galaxy/server/database/objects/a/a/0/dataset_aa0a4819-bf76-4507-835f-daea012fa3c5.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "true", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 478, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "344a4fcd00385bce", "src": "hda", "uuid": "301e7f3f-9445-428e-a390-6aa62484ece1"}, "inputA": {"id": "309e5739939fdc9c", "src": "hda", "uuid": "8563475a-c1b9-4042-86bc-6689e7085796"}}, "outputs": {"output": {"id": "18d9f1acaf808878", "src": "hda", "uuid": "aa0a4819-bf76-4507-835f-daea012fa3c5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:19:18", "plugin": "core", "name": "end_epoch", "raw_value": "1684149558.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:19:18", "plugin": "core", "name": "start_epoch", "raw_value": "1684149558.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-13", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 13, "time_seconds": 36.85978651046753, "inputs": {"inputA": {"src": "hda", "id": "309e5739939fdc9c"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "344a4fcd00385bce"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "count": true}, "job": {"model_class": "Job", "id": "b826e930f110c9e1", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:19:32.371734", "create_time": "2023-05-15T11:19:17.208159", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-cd6k4", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/5/6/dataset_8563475a-c1b9-4042-86bc-6689e7085796.dat'  -b '/galaxy/server/database/objects/3/0/1/dataset_301e7f3f-9445-428e-a390-6aa62484ece1.dat'               -c > '/galaxy/server/database/objects/b/4/2/dataset_b4209936-b4b7-49c4-acc7-e698217abf6f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "true", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 478, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "344a4fcd00385bce", "src": "hda", "uuid": "301e7f3f-9445-428e-a390-6aa62484ece1"}, "inputA": {"id": "309e5739939fdc9c", "src": "hda", "uuid": "8563475a-c1b9-4042-86bc-6689e7085796"}}, "outputs": {"output": {"id": "edaf137ba79cb608", "src": "hda", "uuid": "b4209936-b4b7-49c4-acc7-e698217abf6f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:19:22", "plugin": "core", "name": "end_epoch", "raw_value": "1684149562.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:19:22", "plugin": "core", "name": "start_epoch", "raw_value": "1684149562.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-14", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 14, "time_seconds": 32.301464319229126, "inputs": {"inputA": {"src": "hda", "id": "3a675b78c3880e56"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "9c82cf316745543f"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "invert": true}, "job": {"model_class": "Job", "id": "0664866e8cfc9b9a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:20:01.673080", "create_time": "2023-05-15T11:19:50.374963", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-4swm2", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/7/2/b/dataset_72bce329-19c8-4614-bd99-0ecb18bb0870.dat'  -b '/galaxy/server/database/objects/9/8/5/dataset_985b6988-d21c-4773-8321-ad473586831b.dat'   -v             > '/galaxy/server/database/objects/0/c/d/dataset_0cd37375-9f6c-482e-a325-a31aab0572f2.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 482, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "9c82cf316745543f", "src": "hda", "uuid": "985b6988-d21c-4773-8321-ad473586831b"}, "inputA": {"id": "3a675b78c3880e56", "src": "hda", "uuid": "72bce329-19c8-4614-bd99-0ecb18bb0870"}}, "outputs": {"output": {"id": "deb0ce40f8a9e747", "src": "hda", "uuid": "0cd37375-9f6c-482e-a325-a31aab0572f2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:19:52", "plugin": "core", "name": "end_epoch", "raw_value": "1684149592.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:19:52", "plugin": "core", "name": "start_epoch", "raw_value": "1684149592.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-15", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 15, "time_seconds": 33.303261041641235, "inputs": {"inputA": {"src": "hda", "id": "dec1b42db94c95e1"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "9bd67a5aaba98aee"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "86192e74a0daf1bb", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:20:05.593497", "create_time": "2023-05-15T11:19:54.409715", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-rc8kk", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/d/f/6/dataset_df636247-ce3e-4819-84d7-c0b43ea7542b.dat'  -b '/galaxy/server/database/objects/6/9/2/dataset_6923ea7a-b557-427c-8395-90f14144e28d.dat'   -f 0.5      -wa -wb          > '/galaxy/server/database/objects/e/d/6/dataset_ed69f2d0-93c7-435e-967e-a25eb673522e.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 484, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "9bd67a5aaba98aee", "src": "hda", "uuid": "6923ea7a-b557-427c-8395-90f14144e28d"}, "inputA": {"id": "dec1b42db94c95e1", "src": "hda", "uuid": "df636247-ce3e-4819-84d7-c0b43ea7542b"}}, "outputs": {"output": {"id": "dd935ab9115a4506", "src": "hda", "uuid": "ed69f2d0-93c7-435e-967e-a25eb673522e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:19:56", "plugin": "core", "name": "end_epoch", "raw_value": "1684149596.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:19:56", "plugin": "core", "name": "start_epoch", "raw_value": "1684149596.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-16", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 16, "time_seconds": 37.05349135398865, "inputs": {"inputA": {"src": "hda", "id": "c925a9ac4b439be3"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c0fed3dd67fe0c74"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|reciprocal": "-r", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "196e664cc6e60c61", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:20:38.860877", "create_time": "2023-05-15T11:20:22.431591", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-bljrj", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/8/d/dataset_e8d91c45-0e98-4007-880f-68266466cacb.dat'  -b '/galaxy/server/database/objects/2/4/5/dataset_24509439-c177-4509-88f4-127e0a35df70.dat'   -f 0.5 -r    -wa -wb          > '/galaxy/server/database/objects/b/8/4/dataset_b84b01ab-9cfc-4e15-b789-3bf3c8ea053e.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 0, \"reciprocal\": \"-r\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 490, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "c0fed3dd67fe0c74", "src": "hda", "uuid": "24509439-c177-4509-88f4-127e0a35df70"}, "inputA": {"id": "c925a9ac4b439be3", "src": "hda", "uuid": "e8d91c45-0e98-4007-880f-68266466cacb"}}, "outputs": {"output": {"id": "23769e6f26505ded", "src": "hda", "uuid": "b84b01ab-9cfc-4e15-b789-3bf3c8ea053e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:20:29", "plugin": "core", "name": "end_epoch", "raw_value": "1684149629.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:20:29", "plugin": "core", "name": "start_epoch", "raw_value": "1684149629.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-17", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 17, "time_seconds": 37.38434362411499, "inputs": {"inputA": {"src": "hda", "id": "c925a9ac4b439be3"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c0fed3dd67fe0c74"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "c455722a882167b8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:20:43.261280", "create_time": "2023-05-15T11:20:27.787712", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-k8bbj", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/8/d/dataset_e8d91c45-0e98-4007-880f-68266466cacb.dat'  -b '/galaxy/server/database/objects/2/4/5/dataset_24509439-c177-4509-88f4-127e0a35df70.dat'   -f 0.5  -F 0.5     -wa -wb          > '/galaxy/server/database/objects/2/f/a/dataset_2fad23f3-56e4-49c6-a560-db9ee1399699.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 490, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "c0fed3dd67fe0c74", "src": "hda", "uuid": "24509439-c177-4509-88f4-127e0a35df70"}, "inputA": {"id": "c925a9ac4b439be3", "src": "hda", "uuid": "e8d91c45-0e98-4007-880f-68266466cacb"}}, "outputs": {"output": {"id": "3579826fe60d3600", "src": "hda", "uuid": "2fad23f3-56e4-49c6-a560-db9ee1399699"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:20:33", "plugin": "core", "name": "end_epoch", "raw_value": "1684149633.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:20:33", "plugin": "core", "name": "start_epoch", "raw_value": "1684149633.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-18", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 18, "time_seconds": 31.811567783355713, "inputs": {"inputA": {"src": "hda", "id": "27bf80bf7d7a6275"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "e57bbbe9a343aa79"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|reciprocal_cond|disjoint": true, "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "5816ad4ae5c3cd13", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:21:10.696045", "create_time": "2023-05-15T11:20:58.929917", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-zh9w7", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/2/c/a/dataset_2ca42524-71e9-497f-b074-0b12c0e3091e.dat'  -b '/galaxy/server/database/objects/7/c/f/dataset_7cf89ef0-2274-472e-9b40-515be701a6ab.dat'   -f 0.5  -F 0.5 -e    -wa -wb          > '/galaxy/server/database/objects/9/d/a/dataset_9da8e7ae-1d49-4697-8027-d3d9d6bbf664.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": true, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 494, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "e57bbbe9a343aa79", "src": "hda", "uuid": "7cf89ef0-2274-472e-9b40-515be701a6ab"}, "inputA": {"id": "27bf80bf7d7a6275", "src": "hda", "uuid": "2ca42524-71e9-497f-b074-0b12c0e3091e"}}, "outputs": {"output": {"id": "7c4d5f8551e2a3ed", "src": "hda", "uuid": "9da8e7ae-1d49-4697-8027-d3d9d6bbf664"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:21:00", "plugin": "core", "name": "end_epoch", "raw_value": "1684149660.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:21:00", "plugin": "core", "name": "start_epoch", "raw_value": "1684149660.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-19", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 19, "time_seconds": 32.497578620910645, "inputs": {"inputA": {"src": "hda", "id": "b990867f0638824e"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "4176a7a3e9be3c9f"}, "overlap_mode": "-wa", "split": false}, "job": {"model_class": "Job", "id": "6058500daeca56dc", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:21:15.736239", "create_time": "2023-05-15T11:21:04.946616", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-h96pt", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/c/b/3/dataset_cb3eab7f-3c89-4166-a52c-779502a93d30.dat'  -b '/galaxy/server/database/objects/3/0/c/dataset_30c3c961-0331-4e80-8d08-e9e318cf1d23.dat'      -wa          > '/galaxy/server/database/objects/d/8/5/dataset_d856ecfd-aaba-491b-a5e9-707a3ec37985.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wa\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 496, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "4176a7a3e9be3c9f", "src": "hda", "uuid": "30c3c961-0331-4e80-8d08-e9e318cf1d23"}, "inputA": {"id": "b990867f0638824e", "src": "hda", "uuid": "cb3eab7f-3c89-4166-a52c-779502a93d30"}}, "outputs": {"output": {"id": "df74c34beb527a37", "src": "hda", "uuid": "d856ecfd-aaba-491b-a5e9-707a3ec37985"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:21:06", "plugin": "core", "name": "end_epoch", "raw_value": "1684149666.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:21:06", "plugin": "core", "name": "start_epoch", "raw_value": "1684149666.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 46.255083084106445, "inputs": {"inputA": {"src": "hda", "id": "8ccb6fb13a602e3f"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "c25494d346327c3c"}, {"src": "hda", "id": "0f0c3a446f7175fc"}, {"src": "hda", "id": "e959cad147580722"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "d0f5065773512b72", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:16:01.034785", "create_time": "2023-05-15T11:15:45.620849", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-t9sjn", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/6/2/dataset_862173a4-7385-43bd-8471-a8f6fdd4a19c.dat'  -b '/galaxy/server/database/objects/0/7/3/dataset_073553b3-4e8c-455d-b594-0d6ff7aff030.dat' '/galaxy/server/database/objects/0/b/9/dataset_0b970a44-7e75-49b2-9593-09157de15c98.dat' '/galaxy/server/database/objects/8/4/2/dataset_842cad59-5893-43af-aa87-c52020d3e4fb.dat'       -wa -wb   -sorted       > '/galaxy/server/database/objects/5/5/1/dataset_551401d9-b2f1-4697-a59d-a3b086d805ee.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 438, \"src\": \"hda\"}, {\"id\": 439, \"src\": \"hda\"}, {\"id\": 440, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputB3": {"id": "e959cad147580722", "src": "hda", "uuid": "842cad59-5893-43af-aa87-c52020d3e4fb"}, "inputB2": {"id": "0f0c3a446f7175fc", "src": "hda", "uuid": "0b970a44-7e75-49b2-9593-09157de15c98"}, "inputB1": {"id": "c25494d346327c3c", "src": "hda", "uuid": "073553b3-4e8c-455d-b594-0d6ff7aff030"}, "inputB": {"id": "c25494d346327c3c", "src": "hda", "uuid": "073553b3-4e8c-455d-b594-0d6ff7aff030"}, "inputA": {"id": "8ccb6fb13a602e3f", "src": "hda", "uuid": "862173a4-7385-43bd-8471-a8f6fdd4a19c"}}, "outputs": {"output": {"id": "87a3d68f6ea217d6", "src": "hda", "uuid": "551401d9-b2f1-4697-a59d-a3b086d805ee"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:15:50", "plugin": "core", "name": "end_epoch", "raw_value": "1684149350.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:15:50", "plugin": "core", "name": "start_epoch", "raw_value": "1684149350.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-20", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 20, "time_seconds": 35.87392520904541, "inputs": {"inputA": {"src": "hda", "id": "f4c939ea9f91509e"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c2fae8b87df672c6"}, "overlap_mode": ["-wa", "-wb"], "split": false}, "job": {"model_class": "Job", "id": "57730a5590ebc185", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:21:46.354128", "create_time": "2023-05-15T11:21:30.413197", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-vvg5t", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/d/5/dataset_0d54011d-d901-4dad-9b8b-6b3aa58ee784.dat'  -b '/galaxy/server/database/objects/d/8/9/dataset_d897afcd-a9b4-4c59-92a4-b3a06e64ac47.dat'      -wa -wb          > '/galaxy/server/database/objects/b/f/0/dataset_bf01eec1-9bd2-4ac8-b057-c0089933e0bf.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 502, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "c2fae8b87df672c6", "src": "hda", "uuid": "d897afcd-a9b4-4c59-92a4-b3a06e64ac47"}, "inputA": {"id": "f4c939ea9f91509e", "src": "hda", "uuid": "0d54011d-d901-4dad-9b8b-6b3aa58ee784"}}, "outputs": {"output": {"id": "d7f4c57181421725", "src": "hda", "uuid": "bf01eec1-9bd2-4ac8-b057-c0089933e0bf"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:21:37", "plugin": "core", "name": "end_epoch", "raw_value": "1684149697.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:21:37", "plugin": "core", "name": "start_epoch", "raw_value": "1684149697.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-21", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 21, "time_seconds": 34.67029523849487, "inputs": {"inputA": {"src": "hda", "id": "f4c939ea9f91509e"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c2fae8b87df672c6"}, "split": false, "invert": true}, "job": {"model_class": "Job", "id": "403e9f7fc2bc3ac8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:21:50.418235", "create_time": "2023-05-15T11:21:35.595462", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-m8l5d", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/d/5/dataset_0d54011d-d901-4dad-9b8b-6b3aa58ee784.dat'  -b '/galaxy/server/database/objects/d/8/9/dataset_d897afcd-a9b4-4c59-92a4-b3a06e64ac47.dat'   -v             > '/galaxy/server/database/objects/5/8/4/dataset_58465f38-a7d6-4d71-83d3-cf086f0fd78d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 502, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "c2fae8b87df672c6", "src": "hda", "uuid": "d897afcd-a9b4-4c59-92a4-b3a06e64ac47"}, "inputA": {"id": "f4c939ea9f91509e", "src": "hda", "uuid": "0d54011d-d901-4dad-9b8b-6b3aa58ee784"}}, "outputs": {"output": {"id": "4585c55f4d399e6b", "src": "hda", "uuid": "58465f38-a7d6-4d71-83d3-cf086f0fd78d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:21:40", "plugin": "core", "name": "end_epoch", "raw_value": "1684149700.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:21:40", "plugin": "core", "name": "start_epoch", "raw_value": "1684149700.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 3, "time_seconds": 49.42386221885681, "inputs": {"inputA": {"src": "hda", "id": "7289eb9affaa677d"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "cc4e6ce1f5b78d3f"}, {"src": "hda", "id": "4ad644a14444cc58"}, {"src": "hda", "id": "871d1568e422ca21"}], "reduce_or_iterate|names": true, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "1beefd29694a2337", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:16:46.329161", "create_time": "2023-05-15T11:16:26.473553", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-kgj7w", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/d/6/e/dataset_d6e187fa-ff61-4759-9ae6-4211de2394bd.dat'  -b '/galaxy/server/database/objects/9/9/6/dataset_9968679e-55f7-4550-851a-2cc910446bd5.dat' '/galaxy/server/database/objects/7/4/b/dataset_74b0acdf-721c-46d8-9bbe-bb86ace5ac20.dat' '/galaxy/server/database/objects/3/b/c/dataset_3bc90d6f-016a-4e01-a60f-608a61a30886.dat'  -names 'intersect-d1_bed' 'intersect-d2_bed' 'intersect-d3_bed'      -wa -wb   -sorted       > '/galaxy/server/database/objects/c/c/0/dataset_cc02d88c-671b-43f0-81f2-b7fae17b0e80.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 448, \"src\": \"hda\"}, {\"id\": 449, \"src\": \"hda\"}, {\"id\": 450, \"src\": \"hda\"}]}, \"names\": true, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputB3": {"id": "871d1568e422ca21", "src": "hda", "uuid": "3bc90d6f-016a-4e01-a60f-608a61a30886"}, "inputB2": {"id": "4ad644a14444cc58", "src": "hda", "uuid": "74b0acdf-721c-46d8-9bbe-bb86ace5ac20"}, "inputB1": {"id": "cc4e6ce1f5b78d3f", "src": "hda", "uuid": "9968679e-55f7-4550-851a-2cc910446bd5"}, "inputB": {"id": "cc4e6ce1f5b78d3f", "src": "hda", "uuid": "9968679e-55f7-4550-851a-2cc910446bd5"}, "inputA": {"id": "7289eb9affaa677d", "src": "hda", "uuid": "d6e187fa-ff61-4759-9ae6-4211de2394bd"}}, "outputs": {"output": {"id": "0664866e8cfc9b9a", "src": "hda", "uuid": "cc02d88c-671b-43f0-81f2-b7fae17b0e80"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:16:36", "plugin": "core", "name": "end_epoch", "raw_value": "1684149396.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:16:36", "plugin": "core", "name": "start_epoch", "raw_value": "1684149396.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 4, "time_seconds": 49.137510538101196, "inputs": {"inputA": {"src": "hda", "id": "7289eb9affaa677d"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "cc4e6ce1f5b78d3f"}, {"src": "hda", "id": "4ad644a14444cc58"}, {"src": "hda", "id": "871d1568e422ca21"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "invert": true, "sorted": true}, "job": {"model_class": "Job", "id": "9f339ccafec1911e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:16:50.450472", "create_time": "2023-05-15T11:16:34.377987", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-k2s65", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/d/6/e/dataset_d6e187fa-ff61-4759-9ae6-4211de2394bd.dat'  -b '/galaxy/server/database/objects/9/9/6/dataset_9968679e-55f7-4550-851a-2cc910446bd5.dat' '/galaxy/server/database/objects/7/4/b/dataset_74b0acdf-721c-46d8-9bbe-bb86ace5ac20.dat' '/galaxy/server/database/objects/3/b/c/dataset_3bc90d6f-016a-4e01-a60f-608a61a30886.dat'    -v      -sorted       > '/galaxy/server/database/objects/f/8/e/dataset_f8e23311-3a87-4c65-b5c2-8a7196b8c2fe.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 448, \"src\": \"hda\"}, {\"id\": 449, \"src\": \"hda\"}, {\"id\": 450, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputB3": {"id": "871d1568e422ca21", "src": "hda", "uuid": "3bc90d6f-016a-4e01-a60f-608a61a30886"}, "inputB2": {"id": "4ad644a14444cc58", "src": "hda", "uuid": "74b0acdf-721c-46d8-9bbe-bb86ace5ac20"}, "inputB1": {"id": "cc4e6ce1f5b78d3f", "src": "hda", "uuid": "9968679e-55f7-4550-851a-2cc910446bd5"}, "inputB": {"id": "cc4e6ce1f5b78d3f", "src": "hda", "uuid": "9968679e-55f7-4550-851a-2cc910446bd5"}, "inputA": {"id": "7289eb9affaa677d", "src": "hda", "uuid": "d6e187fa-ff61-4759-9ae6-4211de2394bd"}}, "outputs": {"output": {"id": "86192e74a0daf1bb", "src": "hda", "uuid": "f8e23311-3a87-4c65-b5c2-8a7196b8c2fe"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:16:40", "plugin": "core", "name": "end_epoch", "raw_value": "1684149400.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:16:40", "plugin": "core", "name": "start_epoch", "raw_value": "1684149400.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 5, "time_seconds": 16.498109102249146, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 6, "time_seconds": 46.85092353820801, "inputs": {"inputA": {"src": "hda", "id": "ac3a7a4d31a2966f"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c9663ae32776a953"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wa"}, "job": {"model_class": "Job", "id": "882fd816fe2283cd", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:17:37.430336", "create_time": "2023-05-15T11:17:22.629743", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-rwptl", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/3/e/dataset_03e15f24-9907-438a-99a5-3e02bf2b8592.dat'  -b '/galaxy/server/database/objects/7/7/f/dataset_77f18687-3ff7-4255-aa51-fe3a788f631f.dat'      -wa          > '/galaxy/server/database/objects/b/6/3/dataset_b63e579d-ad8a-491d-9305-c9fe58676a63.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wa\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 460, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "c9663ae32776a953", "src": "hda", "uuid": "77f18687-3ff7-4255-aa51-fe3a788f631f"}, "inputA": {"id": "ac3a7a4d31a2966f", "src": "hda", "uuid": "03e15f24-9907-438a-99a5-3e02bf2b8592"}}, "outputs": {"output": {"id": "f8258d208b147fce", "src": "hda", "uuid": "b63e579d-ad8a-491d-9305-c9fe58676a63"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:17:28", "plugin": "core", "name": "end_epoch", "raw_value": "1684149448.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:17:28", "plugin": "core", "name": "start_epoch", "raw_value": "1684149448.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 7, "time_seconds": 37.4312047958374, "inputs": {"inputA": {"src": "hda", "id": "ac3a7a4d31a2966f"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c9663ae32776a953"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wb"}, "job": {"model_class": "Job", "id": "b87a842f0e1deeb8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:17:40.411982", "create_time": "2023-05-15T11:17:26.052178", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-v9nvv", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/3/e/dataset_03e15f24-9907-438a-99a5-3e02bf2b8592.dat'  -b '/galaxy/server/database/objects/7/7/f/dataset_77f18687-3ff7-4255-aa51-fe3a788f631f.dat'      -wb          > '/galaxy/server/database/objects/d/b/5/dataset_db5c589e-2801-4922-b2f3-f5ad0d897752.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wb\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 460, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "c9663ae32776a953", "src": "hda", "uuid": "77f18687-3ff7-4255-aa51-fe3a788f631f"}, "inputA": {"id": "ac3a7a4d31a2966f", "src": "hda", "uuid": "03e15f24-9907-438a-99a5-3e02bf2b8592"}}, "outputs": {"output": {"id": "73c32d19105e3606", "src": "hda", "uuid": "db5c589e-2801-4922-b2f3-f5ad0d897752"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:17:31", "plugin": "core", "name": "end_epoch", "raw_value": "1684149451.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:17:31", "plugin": "core", "name": "start_epoch", "raw_value": "1684149451.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 8, "time_seconds": 37.61419868469238, "inputs": {"inputA": {"src": "hda", "id": "757268f96bcc0e7a"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "1d560e980d44d475"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"]}, "job": {"model_class": "Job", "id": "9379f77d8b76deb0", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:18:14.945315", "create_time": "2023-05-15T11:17:55.177182", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-58k26", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/5/2/dataset_85222c07-8cc3-4fea-a9b3-511004c4f21d.dat'  -b '/galaxy/server/database/objects/6/7/5/dataset_6758fd73-fe04-4ba3-958a-cdbe1cc07ab3.dat'      -wa -wb          > '/galaxy/server/database/objects/f/4/6/dataset_f464d3aa-0bb5-47cb-b50f-1fa581b51202.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 466, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "1d560e980d44d475", "src": "hda", "uuid": "6758fd73-fe04-4ba3-958a-cdbe1cc07ab3"}, "inputA": {"id": "757268f96bcc0e7a", "src": "hda", "uuid": "85222c07-8cc3-4fea-a9b3-511004c4f21d"}}, "outputs": {"output": {"id": "1bcd6d1dee067a78", "src": "hda", "uuid": "f464d3aa-0bb5-47cb-b50f-1fa581b51202"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:18:05", "plugin": "core", "name": "end_epoch", "raw_value": "1684149485.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:18:05", "plugin": "core", "name": "start_epoch", "raw_value": "1684149485.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-9", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 9, "time_seconds": 38.173651933670044, "inputs": {"inputA": {"src": "hda", "id": "757268f96bcc0e7a"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "1d560e980d44d475"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-loj"}, "job": {"model_class": "Job", "id": "935c49b3ab021d77", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:18:18.826989", "create_time": "2023-05-15T11:18:02.791660", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-5j9rl", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/5/2/dataset_85222c07-8cc3-4fea-a9b3-511004c4f21d.dat'  -b '/galaxy/server/database/objects/6/7/5/dataset_6758fd73-fe04-4ba3-958a-cdbe1cc07ab3.dat'      -loj          > '/galaxy/server/database/objects/9/1/0/dataset_9102b2a7-f967-4916-9ca3-4361ddf9bc84.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-loj\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 466, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "1d560e980d44d475", "src": "hda", "uuid": "6758fd73-fe04-4ba3-958a-cdbe1cc07ab3"}, "inputA": {"id": "757268f96bcc0e7a", "src": "hda", "uuid": "85222c07-8cc3-4fea-a9b3-511004c4f21d"}}, "outputs": {"output": {"id": "288f3de39e804494", "src": "hda", "uuid": "9102b2a7-f967-4916-9ca3-4361ddf9bc84"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:18:08", "plugin": "core", "name": "end_epoch", "raw_value": "1684149488.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:18:08", "plugin": "core", "name": "start_epoch", "raw_value": "1684149488.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 38.04627275466919, "inputs": {"inputA": {"src": "hda", "id": "4aaad3fd3fd5d9c4"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "7ec8b65e4c8107dd"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate"}, "job": {"model_class": "Job", "id": "f3e2d0624b475896", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:02:19.285239", "create_time": "2023-05-15T11:02:00.599348", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-44zck", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/9/8/dataset_e983f031-e35b-4375-81af-aa86d8074c61.dat'  -b '/galaxy/server/database/objects/3/a/0/dataset_3a0a6c08-c6ca-43c4-be44-ee583dac3008.dat'              > '/galaxy/server/database/objects/6/b/7/dataset_6b7bcb94-27e2-441e-b0fc-a0af766c87e1.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 291, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "4aaad3fd3fd5d9c4", "src": "hda", "uuid": "e983f031-e35b-4375-81af-aa86d8074c61"}, "inputB": {"id": "7ec8b65e4c8107dd", "src": "hda", "uuid": "3a0a6c08-c6ca-43c4-be44-ee583dac3008"}}, "outputs": {"output": {"id": "fba5a4acdfd356e3", "src": "hda", "uuid": "6b7bcb94-27e2-441e-b0fc-a0af766c87e1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:02:08", "plugin": "core", "name": "end_epoch", "raw_value": "1684148528.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:02:07", "plugin": "core", "name": "start_epoch", "raw_value": "1684148527.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 43.4790575504303, "inputs": {"inputA": {"src": "hda", "id": "ae9ee4a4e1863b29"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "9725c7144dc2b2a2"}, {"src": "hda", "id": "851c1c1f3df217f0"}, {"src": "hda", "id": "22907506f7bb6380"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce"}, "job": {"model_class": "Job", "id": "5bdef2910ff153b2", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:02:35.240401", "create_time": "2023-05-15T11:02:18.143396", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-rgcw7", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/a/7/8/dataset_a784b585-b048-48fb-997b-dbd308d2d802.dat'  -b '/galaxy/server/database/objects/4/c/5/dataset_4c5c2da0-c20d-4d4b-af24-540ba6fb340c.dat' '/galaxy/server/database/objects/a/2/d/dataset_a2d2cc8b-1cd6-4a9d-acc3-861eb130b7ab.dat' '/galaxy/server/database/objects/e/a/8/dataset_ea83745f-32b1-43fd-bdfc-f4970722aa6c.dat'               > '/galaxy/server/database/objects/f/7/e/dataset_f7ef7f0d-9d52-4182-ad06-32c18250cd87.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 293, \"src\": \"hda\"}, {\"id\": 294, \"src\": \"hda\"}, {\"id\": 295, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "ae9ee4a4e1863b29", "src": "hda", "uuid": "a784b585-b048-48fb-997b-dbd308d2d802"}, "inputB": {"id": "9725c7144dc2b2a2", "src": "hda", "uuid": "4c5c2da0-c20d-4d4b-af24-540ba6fb340c"}, "inputB1": {"id": "9725c7144dc2b2a2", "src": "hda", "uuid": "4c5c2da0-c20d-4d4b-af24-540ba6fb340c"}, "inputB2": {"id": "851c1c1f3df217f0", "src": "hda", "uuid": "a2d2cc8b-1cd6-4a9d-acc3-861eb130b7ab"}, "inputB3": {"id": "22907506f7bb6380", "src": "hda", "uuid": "ea83745f-32b1-43fd-bdfc-f4970722aa6c"}}, "outputs": {"output": {"id": "36ab9bf39beab5df", "src": "hda", "uuid": "f7ef7f0d-9d52-4182-ad06-32c18250cd87"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:02:22", "plugin": "core", "name": "end_epoch", "raw_value": "1684148542.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:02:22", "plugin": "core", "name": "start_epoch", "raw_value": "1684148542.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-10", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 10, "time_seconds": 36.841734170913696, "inputs": {"inputA": {"src": "hda", "id": "e0b17775726ad330"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "0d796d9e4949c107"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wo"}, "job": {"model_class": "Job", "id": "d43640fdc01c6038", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:05:51.094929", "create_time": "2023-05-15T11:05:33.998623", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-8swsw", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/a/5/dataset_8a5e6bee-888c-4eb7-8ebe-a97d5f0eb524.dat'  -b '/galaxy/server/database/objects/0/b/2/dataset_0b2f5586-f968-4de5-b36b-605a678437bf.dat'      -wo        > '/galaxy/server/database/objects/b/1/e/dataset_b1efb968-f7f4-44e3-b736-c41bfad74ac9.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wo\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 333, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "e0b17775726ad330", "src": "hda", "uuid": "8a5e6bee-888c-4eb7-8ebe-a97d5f0eb524"}, "inputB": {"id": "0d796d9e4949c107", "src": "hda", "uuid": "0b2f5586-f968-4de5-b36b-605a678437bf"}}, "outputs": {"output": {"id": "46d2c01bcf172524", "src": "hda", "uuid": "b1efb968-f7f4-44e3-b736-c41bfad74ac9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:05:40", "plugin": "core", "name": "end_epoch", "raw_value": "1684148740.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:05:40", "plugin": "core", "name": "start_epoch", "raw_value": "1684148740.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-11", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 11, "time_seconds": 36.49411869049072, "inputs": {"inputA": {"src": "hda", "id": "e0b17775726ad330"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "0d796d9e4949c107"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wao"}, "job": {"model_class": "Job", "id": "fa6f9a198be68620", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:05:54.971834", "create_time": "2023-05-15T11:05:39.837085", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-njzqz", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/a/5/dataset_8a5e6bee-888c-4eb7-8ebe-a97d5f0eb524.dat'  -b '/galaxy/server/database/objects/0/b/2/dataset_0b2f5586-f968-4de5-b36b-605a678437bf.dat'      -wao        > '/galaxy/server/database/objects/6/c/4/dataset_6c41584b-797a-4cc9-8c9d-a32cbb580395.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wao\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 333, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "e0b17775726ad330", "src": "hda", "uuid": "8a5e6bee-888c-4eb7-8ebe-a97d5f0eb524"}, "inputB": {"id": "0d796d9e4949c107", "src": "hda", "uuid": "0b2f5586-f968-4de5-b36b-605a678437bf"}}, "outputs": {"output": {"id": "50cb71a638399b76", "src": "hda", "uuid": "6c41584b-797a-4cc9-8c9d-a32cbb580395"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:05:45", "plugin": "core", "name": "end_epoch", "raw_value": "1684148745.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:05:45", "plugin": "core", "name": "start_epoch", "raw_value": "1684148745.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-12", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 12, "time_seconds": 37.188711166381836, "inputs": {"inputA": {"src": "hda", "id": "8d42eb108caa543b"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "4fa9623d42210650"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "once": true}, "job": {"model_class": "Job", "id": "e63f16a5cc0969f4", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:06:28.373457", "create_time": "2023-05-15T11:06:08.813237", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-45cz7", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/a/5/7/dataset_a578c875-f2d2-4e88-a263-7a13a51bba37.dat'  -b '/galaxy/server/database/objects/4/2/5/dataset_4252f793-98d1-4c72-aa91-560807a4b008.dat'    -u          > '/galaxy/server/database/objects/2/c/a/dataset_2ca33066-e406-4b79-bca7-4a74115997cb.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "true", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 339, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "8d42eb108caa543b", "src": "hda", "uuid": "a578c875-f2d2-4e88-a263-7a13a51bba37"}, "inputB": {"id": "4fa9623d42210650", "src": "hda", "uuid": "4252f793-98d1-4c72-aa91-560807a4b008"}}, "outputs": {"output": {"id": "23a8e3d00a54e03d", "src": "hda", "uuid": "2ca33066-e406-4b79-bca7-4a74115997cb"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:06:18", "plugin": "core", "name": "end_epoch", "raw_value": "1684148778.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:06:18", "plugin": "core", "name": "start_epoch", "raw_value": "1684148778.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-13", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 13, "time_seconds": 37.55839443206787, "inputs": {"inputA": {"src": "hda", "id": "8d42eb108caa543b"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "4fa9623d42210650"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "count": true}, "job": {"model_class": "Job", "id": "a5c23a6a9741000e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:06:32.494659", "create_time": "2023-05-15T11:06:17.252113", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-njtf5", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/a/5/7/dataset_a578c875-f2d2-4e88-a263-7a13a51bba37.dat'  -b '/galaxy/server/database/objects/4/2/5/dataset_4252f793-98d1-4c72-aa91-560807a4b008.dat'             -c > '/galaxy/server/database/objects/5/2/9/dataset_52995b17-da01-49b3-a820-a3e537a088e7.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "true", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 339, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "8d42eb108caa543b", "src": "hda", "uuid": "a578c875-f2d2-4e88-a263-7a13a51bba37"}, "inputB": {"id": "4fa9623d42210650", "src": "hda", "uuid": "4252f793-98d1-4c72-aa91-560807a4b008"}}, "outputs": {"output": {"id": "fc365cd2d76975f9", "src": "hda", "uuid": "52995b17-da01-49b3-a820-a3e537a088e7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:06:22", "plugin": "core", "name": "end_epoch", "raw_value": "1684148782.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:06:22", "plugin": "core", "name": "start_epoch", "raw_value": "1684148782.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-14", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 14, "time_seconds": 32.40639352798462, "inputs": {"inputA": {"src": "hda", "id": "9e3f396485151021"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "887c4cb4232c3980"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "invert": true}, "job": {"model_class": "Job", "id": "dc9a14ff77ead44d", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:07:00.866674", "create_time": "2023-05-15T11:06:49.212666", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-gmlvx", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/3/f/c/dataset_3fcbd157-b898-4258-a0be-0ed3c5b9cda0.dat'  -b '/galaxy/server/database/objects/1/a/b/dataset_1ab852d0-404b-4926-9c95-7183f791bc0d.dat'   -v           > '/galaxy/server/database/objects/d/2/c/dataset_d2c96dad-b56b-4daa-b0bc-04a2cd04c18c.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "9e3f396485151021", "src": "hda", "uuid": "3fcbd157-b898-4258-a0be-0ed3c5b9cda0"}, "inputB": {"id": "887c4cb4232c3980", "src": "hda", "uuid": "1ab852d0-404b-4926-9c95-7183f791bc0d"}}, "outputs": {"output": {"id": "76941827bf56c3f3", "src": "hda", "uuid": "d2c96dad-b56b-4daa-b0bc-04a2cd04c18c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:06:51", "plugin": "core", "name": "end_epoch", "raw_value": "1684148811.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:06:51", "plugin": "core", "name": "start_epoch", "raw_value": "1684148811.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-15", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 15, "time_seconds": 32.71471619606018, "inputs": {"inputA": {"src": "hda", "id": "33189c5bc0dcae59"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "d6fc87629341985c"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "d19345d2aefcf494", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:07:05.151229", "create_time": "2023-05-15T11:06:54.529341", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-4hz7w", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/5/a/dataset_e5a90304-1d39-4f95-b998-4714a21cb400.dat'  -b '/galaxy/server/database/objects/3/2/7/dataset_32725bcc-c1e4-4ddf-ba83-dd2964848225.dat'   -f 0.5      -wa -wb        > '/galaxy/server/database/objects/6/a/2/dataset_6a202ea6-4003-41b8-9490-a35abef1c5d8.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 345, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "33189c5bc0dcae59", "src": "hda", "uuid": "e5a90304-1d39-4f95-b998-4714a21cb400"}, "inputB": {"id": "d6fc87629341985c", "src": "hda", "uuid": "32725bcc-c1e4-4ddf-ba83-dd2964848225"}}, "outputs": {"output": {"id": "7bac28d788dadb2d", "src": "hda", "uuid": "6a202ea6-4003-41b8-9490-a35abef1c5d8"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:06:56", "plugin": "core", "name": "end_epoch", "raw_value": "1684148816.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:06:56", "plugin": "core", "name": "start_epoch", "raw_value": "1684148816.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-16", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 16, "time_seconds": 42.69329643249512, "inputs": {"inputA": {"src": "hda", "id": "feb670556124583d"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "39c4bce460b57c52"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|reciprocal": "-r", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "f9fd0431e8f2c716", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:07:43.722941", "create_time": "2023-05-15T11:07:21.371131", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-l8z9t", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/3/0/0/dataset_3000127b-7d67-4f2d-9740-7d858d62e8d8.dat'  -b '/galaxy/server/database/objects/e/9/8/dataset_e981bd91-98f9-4ec8-83e3-efffa665b7fd.dat'   -f 0.5 -r    -wa -wb        > '/galaxy/server/database/objects/0/7/6/dataset_07658072-0b99-441c-b7fc-34e3c11448d4.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 0, \"reciprocal\": \"-r\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 351, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "feb670556124583d", "src": "hda", "uuid": "3000127b-7d67-4f2d-9740-7d858d62e8d8"}, "inputB": {"id": "39c4bce460b57c52", "src": "hda", "uuid": "e981bd91-98f9-4ec8-83e3-efffa665b7fd"}}, "outputs": {"output": {"id": "0449a805e2d17563", "src": "hda", "uuid": "07658072-0b99-441c-b7fc-34e3c11448d4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:07:33", "plugin": "core", "name": "end_epoch", "raw_value": "1684148853.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:07:33", "plugin": "core", "name": "start_epoch", "raw_value": "1684148853.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-17", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 17, "time_seconds": 34.04340720176697, "inputs": {"inputA": {"src": "hda", "id": "feb670556124583d"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "39c4bce460b57c52"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "72df6652169e84b9", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:07:39.307896", "create_time": "2023-05-15T11:07:26.741596", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-fxvg4", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/3/0/0/dataset_3000127b-7d67-4f2d-9740-7d858d62e8d8.dat'  -b '/galaxy/server/database/objects/e/9/8/dataset_e981bd91-98f9-4ec8-83e3-efffa665b7fd.dat'   -f 0.5  -F 0.5     -wa -wb        > '/galaxy/server/database/objects/3/f/b/dataset_3fbf2945-7ac8-40fd-a64a-a3cfc95821e0.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 351, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "feb670556124583d", "src": "hda", "uuid": "3000127b-7d67-4f2d-9740-7d858d62e8d8"}, "inputB": {"id": "39c4bce460b57c52", "src": "hda", "uuid": "e981bd91-98f9-4ec8-83e3-efffa665b7fd"}}, "outputs": {"output": {"id": "b01fa00a9ccbeb1b", "src": "hda", "uuid": "3fbf2945-7ac8-40fd-a64a-a3cfc95821e0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:07:30", "plugin": "core", "name": "end_epoch", "raw_value": "1684148850.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:07:30", "plugin": "core", "name": "start_epoch", "raw_value": "1684148850.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-18", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 18, "time_seconds": 34.70603394508362, "inputs": {"inputA": {"src": "hda", "id": "6c0a10df2fd72034"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "eb480f6d89d82a19"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|reciprocal_cond|disjoint": true, "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "6493cc76339950dc", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:08:13.939624", "create_time": "2023-05-15T11:07:57.947279", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-p77wl", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/5/f/dataset_e5fabf3c-e6c6-495a-aa44-61b7e5625346.dat'  -b '/galaxy/server/database/objects/f/1/3/dataset_f13df580-a400-4b8b-b394-90fb2a64ad79.dat'   -f 0.5  -F 0.5 -e    -wa -wb        > '/galaxy/server/database/objects/3/b/0/dataset_3b0fed97-3581-422d-9dec-519126699675.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": true, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 355, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "6c0a10df2fd72034", "src": "hda", "uuid": "e5fabf3c-e6c6-495a-aa44-61b7e5625346"}, "inputB": {"id": "eb480f6d89d82a19", "src": "hda", "uuid": "f13df580-a400-4b8b-b394-90fb2a64ad79"}}, "outputs": {"output": {"id": "d59bddf9c95088bd", "src": "hda", "uuid": "3b0fed97-3581-422d-9dec-519126699675"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:08:02", "plugin": "core", "name": "end_epoch", "raw_value": "1684148882.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:08:02", "plugin": "core", "name": "start_epoch", "raw_value": "1684148882.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-19", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 19, "time_seconds": 10.349351644515991, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 53.40212368965149, "inputs": {"inputA": {"src": "hda", "id": "bbf4d6b1c196f0d9"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "06d052d43eca5fa8"}, {"src": "hda", "id": "af6f792370f7d38c"}, {"src": "hda", "id": "c27893df4ede4070"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "e6de23433b0446cc", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:03:12.721852", "create_time": "2023-05-15T11:02:46.325250", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-scqlf", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/c/3/dataset_0c3a34ed-511b-4167-8748-74508e66c43e.dat'  -b '/galaxy/server/database/objects/d/d/0/dataset_dd0b665b-092d-4713-91b6-b5cabc216efe.dat' '/galaxy/server/database/objects/4/b/5/dataset_4b5dbe43-ff64-4eaf-a60e-ea00d89a955a.dat' '/galaxy/server/database/objects/f/2/0/dataset_f20647a7-f6a9-41d0-834e-1ad6766c3dd0.dat'       -wa -wb   -sorted     > '/galaxy/server/database/objects/c/6/4/dataset_c64b2b0a-653b-42e9-8988-de2b0b4f1797.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 303, \"src\": \"hda\"}, {\"id\": 304, \"src\": \"hda\"}, {\"id\": 305, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "bbf4d6b1c196f0d9", "src": "hda", "uuid": "0c3a34ed-511b-4167-8748-74508e66c43e"}, "inputB": {"id": "06d052d43eca5fa8", "src": "hda", "uuid": "dd0b665b-092d-4713-91b6-b5cabc216efe"}, "inputB1": {"id": "06d052d43eca5fa8", "src": "hda", "uuid": "dd0b665b-092d-4713-91b6-b5cabc216efe"}, "inputB2": {"id": "af6f792370f7d38c", "src": "hda", "uuid": "4b5dbe43-ff64-4eaf-a60e-ea00d89a955a"}, "inputB3": {"id": "c27893df4ede4070", "src": "hda", "uuid": "f20647a7-f6a9-41d0-834e-1ad6766c3dd0"}}, "outputs": {"output": {"id": "e63f16a5cc0969f4", "src": "hda", "uuid": "c64b2b0a-653b-42e9-8988-de2b0b4f1797"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:03:03", "plugin": "core", "name": "end_epoch", "raw_value": "1684148583.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:03:03", "plugin": "core", "name": "start_epoch", "raw_value": "1684148583.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-20", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 20, "time_seconds": 27.733463525772095, "inputs": {"inputA": {"src": "hda", "id": "a95b42393d88d4b3"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "a7f5cd81a6a5b7e0"}, "overlap_mode": ["-wa", "-wb"], "split": false}, "job": {"model_class": "Job", "id": "2eebffaf63478680", "state": "error", "exit_code": null, "update_time": "2023-05-15T11:08:22.093029", "create_time": "2023-05-15T11:08:14.159223", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-xnxn5", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/5/9/7/dataset_59726137-dee6-4ef0-9804-99194527916d.dat'  -b '/galaxy/server/database/objects/5/b/7/dataset_5b7fe908-6d5f-4060-98aa-592cfc531a4d.dat'      -wa -wb        > '/galaxy/server/database/objects/6/2/d/dataset_62d73e77-42ac-42db-8913-0293bf525cf1.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 359, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "a95b42393d88d4b3", "src": "hda", "uuid": "59726137-dee6-4ef0-9804-99194527916d"}, "inputB": {"id": "a7f5cd81a6a5b7e0", "src": "hda", "uuid": "5b7fe908-6d5f-4060-98aa-592cfc531a4d"}}, "outputs": {"output": {"id": "6904ce3293b46475", "src": "hda", "uuid": "62d73e77-42ac-42db-8913-0293bf525cf1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-21", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 21, "time_seconds": 32.10323619842529, "inputs": {"inputA": {"src": "hda", "id": "2f17f877f0e3b3a6"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "e3fbd950db9030ea"}, "split": false, "invert": true}, "job": {"model_class": "Job", "id": "e0b17775726ad330", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:08:46.345137", "create_time": "2023-05-15T11:08:34.476266", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-jj929", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/c/4/b/dataset_c4b878d5-c4cc-4343-9ca6-26d67aa3ca29.dat'  -b '/galaxy/server/database/objects/7/4/2/dataset_74233e6d-ee38-4e8c-b024-d9cdbdb22f6a.dat'   -v           > '/galaxy/server/database/objects/2/3/9/dataset_239f97d4-f111-4d26-b95a-d6b52305e194.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 363, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "2f17f877f0e3b3a6", "src": "hda", "uuid": "c4b878d5-c4cc-4343-9ca6-26d67aa3ca29"}, "inputB": {"id": "e3fbd950db9030ea", "src": "hda", "uuid": "74233e6d-ee38-4e8c-b024-d9cdbdb22f6a"}}, "outputs": {"output": {"id": "03562bca74b16772", "src": "hda", "uuid": "239f97d4-f111-4d26-b95a-d6b52305e194"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:08:36", "plugin": "core", "name": "end_epoch", "raw_value": "1684148916.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:08:36", "plugin": "core", "name": "start_epoch", "raw_value": "1684148916.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 41.40532970428467, "inputs": {"inputA": {"src": "hda", "id": "bbf4d6b1c196f0d9"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "06d052d43eca5fa8"}, {"src": "hda", "id": "af6f792370f7d38c"}, {"src": "hda", "id": "c27893df4ede4070"}], "reduce_or_iterate|names": true, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "7c2eb01a6fc4d426", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:03:16.982427", "create_time": "2023-05-15T11:03:02.391774", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-g84xm", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/c/3/dataset_0c3a34ed-511b-4167-8748-74508e66c43e.dat'  -b '/galaxy/server/database/objects/d/d/0/dataset_dd0b665b-092d-4713-91b6-b5cabc216efe.dat' '/galaxy/server/database/objects/4/b/5/dataset_4b5dbe43-ff64-4eaf-a60e-ea00d89a955a.dat' '/galaxy/server/database/objects/f/2/0/dataset_f20647a7-f6a9-41d0-834e-1ad6766c3dd0.dat'  -names 'intersect-d1_bed' 'intersect-d2_bed' 'intersect-d3_bed'      -wa -wb   -sorted     > '/galaxy/server/database/objects/2/4/9/dataset_2492f5ef-22b3-478d-af0f-939e030a4959.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 303, \"src\": \"hda\"}, {\"id\": 304, \"src\": \"hda\"}, {\"id\": 305, \"src\": \"hda\"}]}, \"names\": true, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "bbf4d6b1c196f0d9", "src": "hda", "uuid": "0c3a34ed-511b-4167-8748-74508e66c43e"}, "inputB": {"id": "06d052d43eca5fa8", "src": "hda", "uuid": "dd0b665b-092d-4713-91b6-b5cabc216efe"}, "inputB1": {"id": "06d052d43eca5fa8", "src": "hda", "uuid": "dd0b665b-092d-4713-91b6-b5cabc216efe"}, "inputB2": {"id": "af6f792370f7d38c", "src": "hda", "uuid": "4b5dbe43-ff64-4eaf-a60e-ea00d89a955a"}, "inputB3": {"id": "c27893df4ede4070", "src": "hda", "uuid": "f20647a7-f6a9-41d0-834e-1ad6766c3dd0"}}, "outputs": {"output": {"id": "a5c23a6a9741000e", "src": "hda", "uuid": "2492f5ef-22b3-478d-af0f-939e030a4959"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:03:07", "plugin": "core", "name": "end_epoch", "raw_value": "1684148587.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:03:07", "plugin": "core", "name": "start_epoch", "raw_value": "1684148587.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 47.32091760635376, "inputs": {"inputA": {"src": "hda", "id": "dc9a14ff77ead44d"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "d19345d2aefcf494"}, {"src": "hda", "id": "56d0658f87daaa26"}, {"src": "hda", "id": "0150a5b350f5033f"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "invert": true, "sorted": true}, "job": {"model_class": "Job", "id": "b2b9b4c4deaa3f50", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:04:00.139484", "create_time": "2023-05-15T11:03:38.030777", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-d7mxm", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/9/0/2/dataset_90240f16-b468-4a1b-be2f-f602563a0026.dat'  -b '/galaxy/server/database/objects/0/6/b/dataset_06bbcb13-7dee-47a3-a14e-60ba7c0ccbad.dat' '/galaxy/server/database/objects/c/8/3/dataset_c837f008-8518-4082-adc9-dfa10178f45b.dat' '/galaxy/server/database/objects/f/f/b/dataset_ffbeb75e-4efd-4c02-a636-6596a909c0ac.dat'    -v      -sorted     > '/galaxy/server/database/objects/d/f/c/dataset_dfc6b842-dc64-41fc-8a8a-c759c88db51b.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 313, \"src\": \"hda\"}, {\"id\": 314, \"src\": \"hda\"}, {\"id\": 315, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "dc9a14ff77ead44d", "src": "hda", "uuid": "90240f16-b468-4a1b-be2f-f602563a0026"}, "inputB": {"id": "d19345d2aefcf494", "src": "hda", "uuid": "06bbcb13-7dee-47a3-a14e-60ba7c0ccbad"}, "inputB1": {"id": "d19345d2aefcf494", "src": "hda", "uuid": "06bbcb13-7dee-47a3-a14e-60ba7c0ccbad"}, "inputB2": {"id": "56d0658f87daaa26", "src": "hda", "uuid": "c837f008-8518-4082-adc9-dfa10178f45b"}, "inputB3": {"id": "0150a5b350f5033f", "src": "hda", "uuid": "ffbeb75e-4efd-4c02-a636-6596a909c0ac"}}, "outputs": {"output": {"id": "3858a3d6e1a3012b", "src": "hda", "uuid": "dfc6b842-dc64-41fc-8a8a-c759c88db51b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:03:51", "plugin": "core", "name": "end_epoch", "raw_value": "1684148631.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:03:51", "plugin": "core", "name": "start_epoch", "raw_value": "1684148631.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 5, "time_seconds": 47.56686353683472, "inputs": {"inputA": {"src": "hda", "id": "dc9a14ff77ead44d"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "d19345d2aefcf494"}, {"src": "hda", "id": "56d0658f87daaa26"}, {"src": "hda", "id": "0150a5b350f5033f"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "1.0", "fraction_cond|fraction_select": "specify", "sorted": true}, "job": {"model_class": "Job", "id": "95d60e42c236cdd6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:04:04.424241", "create_time": "2023-05-15T11:03:49.594937", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-5s2cr", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/9/0/2/dataset_90240f16-b468-4a1b-be2f-f602563a0026.dat'  -b '/galaxy/server/database/objects/0/6/b/dataset_06bbcb13-7dee-47a3-a14e-60ba7c0ccbad.dat' '/galaxy/server/database/objects/c/8/3/dataset_c837f008-8518-4082-adc9-dfa10178f45b.dat' '/galaxy/server/database/objects/f/f/b/dataset_ffbeb75e-4efd-4c02-a636-6596a909c0ac.dat'    -f 1.0      -wa -wb   -sorted     > '/galaxy/server/database/objects/f/7/3/dataset_f738b9e0-8827-4c53-bbff-000f3275952f.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"1.0\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 313, \"src\": \"hda\"}, {\"id\": 314, \"src\": \"hda\"}, {\"id\": 315, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "dc9a14ff77ead44d", "src": "hda", "uuid": "90240f16-b468-4a1b-be2f-f602563a0026"}, "inputB": {"id": "d19345d2aefcf494", "src": "hda", "uuid": "06bbcb13-7dee-47a3-a14e-60ba7c0ccbad"}, "inputB1": {"id": "d19345d2aefcf494", "src": "hda", "uuid": "06bbcb13-7dee-47a3-a14e-60ba7c0ccbad"}, "inputB2": {"id": "56d0658f87daaa26", "src": "hda", "uuid": "c837f008-8518-4082-adc9-dfa10178f45b"}, "inputB3": {"id": "0150a5b350f5033f", "src": "hda", "uuid": "ffbeb75e-4efd-4c02-a636-6596a909c0ac"}}, "outputs": {"output": {"id": "b349b3508cfce8f5", "src": "hda", "uuid": "f738b9e0-8827-4c53-bbff-000f3275952f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:03:54", "plugin": "core", "name": "end_epoch", "raw_value": "1684148634.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:03:54", "plugin": "core", "name": "start_epoch", "raw_value": "1684148634.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 6, "time_seconds": 36.53427457809448, "inputs": {"inputA": {"src": "hda", "id": "29a4a49453d8c421"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "e438647174dafdc0"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wa"}, "job": {"model_class": "Job", "id": "dae421c01ce59ff2", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:04:36.664456", "create_time": "2023-05-15T11:04:18.391967", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-f8wnv", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/9/7/dataset_e977b83b-16c2-4416-a861-19ee818645e1.dat'  -b '/galaxy/server/database/objects/f/3/5/dataset_f354cf39-d81f-4484-b5fe-a8b835ff20bc.dat'      -wa        > '/galaxy/server/database/objects/a/b/c/dataset_abc53e92-b772-4a85-8c24-87fb416c2d61.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wa\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 321, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "29a4a49453d8c421", "src": "hda", "uuid": "e977b83b-16c2-4416-a861-19ee818645e1"}, "inputB": {"id": "e438647174dafdc0", "src": "hda", "uuid": "f354cf39-d81f-4484-b5fe-a8b835ff20bc"}}, "outputs": {"output": {"id": "85c9562102d3e0ca", "src": "hda", "uuid": "abc53e92-b772-4a85-8c24-87fb416c2d61"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:04:27", "plugin": "core", "name": "end_epoch", "raw_value": "1684148667.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:04:27", "plugin": "core", "name": "start_epoch", "raw_value": "1684148667.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 7, "time_seconds": 35.07419013977051, "inputs": {"inputA": {"src": "hda", "id": "29a4a49453d8c421"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "e438647174dafdc0"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wb"}, "job": {"model_class": "Job", "id": "15d3f246ea676a05", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:04:39.585090", "create_time": "2023-05-15T11:04:25.789389", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-fvfz5", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/9/7/dataset_e977b83b-16c2-4416-a861-19ee818645e1.dat'  -b '/galaxy/server/database/objects/f/3/5/dataset_f354cf39-d81f-4484-b5fe-a8b835ff20bc.dat'      -wb        > '/galaxy/server/database/objects/9/a/8/dataset_9a8da6de-464e-4580-bc9e-430afa1e777e.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wb\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 321, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "29a4a49453d8c421", "src": "hda", "uuid": "e977b83b-16c2-4416-a861-19ee818645e1"}, "inputB": {"id": "e438647174dafdc0", "src": "hda", "uuid": "f354cf39-d81f-4484-b5fe-a8b835ff20bc"}}, "outputs": {"output": {"id": "be8dcd92a17090f5", "src": "hda", "uuid": "9a8da6de-464e-4580-bc9e-430afa1e777e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:04:30", "plugin": "core", "name": "end_epoch", "raw_value": "1684148670.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:04:30", "plugin": "core", "name": "start_epoch", "raw_value": "1684148670.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 8, "time_seconds": 37.53058862686157, "inputs": {"inputA": {"src": "hda", "id": "6493cc76339950dc"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "2eebffaf63478680"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"]}, "job": {"model_class": "Job", "id": "851c1c1f3df217f0", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:05:14.357736", "create_time": "2023-05-15T11:04:55.033630", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-4lpc7", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/d/0/3/dataset_d03f6cf7-4e0f-4004-bdb6-2934c0e76b45.dat'  -b '/galaxy/server/database/objects/6/3/1/dataset_6313966e-efc4-4fb8-bfd3-60884ff484a4.dat'      -wa -wb        > '/galaxy/server/database/objects/8/b/7/dataset_8b7697af-6103-471a-9722-5e4f86f7d76b.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 327, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "6493cc76339950dc", "src": "hda", "uuid": "d03f6cf7-4e0f-4004-bdb6-2934c0e76b45"}, "inputB": {"id": "2eebffaf63478680", "src": "hda", "uuid": "6313966e-efc4-4fb8-bfd3-60884ff484a4"}}, "outputs": {"output": {"id": "ef2759cc8b65b47d", "src": "hda", "uuid": "8b7697af-6103-471a-9722-5e4f86f7d76b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:05:04", "plugin": "core", "name": "end_epoch", "raw_value": "1684148704.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:05:04", "plugin": "core", "name": "start_epoch", "raw_value": "1684148704.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-9", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 9, "time_seconds": 38.654381275177, "inputs": {"inputA": {"src": "hda", "id": "6493cc76339950dc"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "2eebffaf63478680"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-loj"}, "job": {"model_class": "Job", "id": "22907506f7bb6380", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:05:18.252101", "create_time": "2023-05-15T11:05:03.684503", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-mbflm", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/d/0/3/dataset_d03f6cf7-4e0f-4004-bdb6-2934c0e76b45.dat'  -b '/galaxy/server/database/objects/6/3/1/dataset_6313966e-efc4-4fb8-bfd3-60884ff484a4.dat'      -loj        > '/galaxy/server/database/objects/f/c/2/dataset_fc2ec3cd-6d57-41ab-9340-604fbf7aa893.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-loj\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 327, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "6493cc76339950dc", "src": "hda", "uuid": "d03f6cf7-4e0f-4004-bdb6-2934c0e76b45"}, "inputB": {"id": "2eebffaf63478680", "src": "hda", "uuid": "6313966e-efc4-4fb8-bfd3-60884ff484a4"}}, "outputs": {"output": {"id": "7cc4215bf6efd82b", "src": "hda", "uuid": "fc2ec3cd-6d57-41ab-9340-604fbf7aa893"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:05:08", "plugin": "core", "name": "end_epoch", "raw_value": "1684148708.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:05:08", "plugin": "core", "name": "start_epoch", "raw_value": "1684148708.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 30.38543391227722, "inputs": {"inputA": {"src": "hda", "id": "3cc4df76a8f44140"}, "inputB": {"src": "hda", "id": "4a3276cf23b8cd7e"}}, "job": {"model_class": "Job", "id": "5e459007aa394ee3", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:56:11.783077", "create_time": "2023-05-15T10:55:59.903979", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-8msjb", "command_line": "bedtools jaccard      -a '/galaxy/server/database/objects/9/d/f/dataset_9df205d3-40f9-4ffa-8832-17760fc13b38.dat' -b '/galaxy/server/database/objects/b/0/7/dataset_b0795ed9-1225-4229-a0f0-190e3d56aee3.dat' > '/galaxy/server/database/objects/7/9/f/dataset_79f42a80-cc0b-44b6-b05d-b31991b16f85.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "\"\"", "reciprocal": "\"\"", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "3cc4df76a8f44140", "src": "hda", "uuid": "9df205d3-40f9-4ffa-8832-17760fc13b38"}, "inputB": {"id": "4a3276cf23b8cd7e", "src": "hda", "uuid": "b0795ed9-1225-4229-a0f0-190e3d56aee3"}}, "outputs": {"output": {"id": "b65fedd4073fd11d", "src": "hda", "uuid": "79f42a80-cc0b-44b6-b05d-b31991b16f85"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:56:02", "plugin": "core", "name": "end_epoch", "raw_value": "1684148162.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:56:02", "plugin": "core", "name": "start_epoch", "raw_value": "1684148162.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 29.069523572921753, "inputs": {"inputA": {"src": "hda", "id": "41889ceca0972c06"}, "inputB": {"src": "hda", "id": "be9957641cf05750"}, "overlap": "0.1"}, "job": {"model_class": "Job", "id": "8cf3d315d846e751", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:56:30.564558", "create_time": "2023-05-15T10:56:19.504187", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-4bmtp", "command_line": "bedtools jaccard     -f 0.1  -a '/galaxy/server/database/objects/6/d/1/dataset_6d1c3c10-9869-438d-9638-fd8922048ce4.dat' -b '/galaxy/server/database/objects/c/6/5/dataset_c6572444-24b2-44c0-872e-37f97979194a.dat' > '/galaxy/server/database/objects/4/6/e/dataset_46efe00d-9f21-4e43-b787-61f3e1875291.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "\"\"", "reciprocal": "\"\"", "overlapB": "\"\"", "overlap": "\"0.1\""}, "inputs": {"inputA": {"id": "41889ceca0972c06", "src": "hda", "uuid": "6d1c3c10-9869-438d-9638-fd8922048ce4"}, "inputB": {"id": "be9957641cf05750", "src": "hda", "uuid": "c6572444-24b2-44c0-872e-37f97979194a"}}, "outputs": {"output": {"id": "374a12413f671f0c", "src": "hda", "uuid": "46efe00d-9f21-4e43-b787-61f3e1875291"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:56:21", "plugin": "core", "name": "end_epoch", "raw_value": "1684148181.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:56:21", "plugin": "core", "name": "start_epoch", "raw_value": "1684148181.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 29.34121036529541, "inputs": {"input": {"src": "hda", "id": "b4384988bd0dd4c5"}, "basename": "http://genome.ucsc.edu", "org": "", "db": ""}, "job": {"model_class": "Job", "id": "da6ef68c2c144303", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:53:50.537482", "create_time": "2023-05-15T10:53:38.276069", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-662cc", "command_line": "bedtools links -base 'http://genome.ucsc.edu' -org '' -db '' -i '/galaxy/server/database/objects/f/7/c/dataset_f7c7b6b3-4e84-41b5-902c-4678613bee42.dat' > '/galaxy/server/database/objects/7/f/a/dataset_7facde50-d638-48d5-84a5-e48259e5360c.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "db": "\"\"", "org": "\"\"", "basename": "\"http://genome.ucsc.edu\""}, "inputs": {"input": {"id": "b4384988bd0dd4c5", "src": "hda", "uuid": "f7c7b6b3-4e84-41b5-902c-4678613bee42"}}, "outputs": {"output": {"id": "c880db146a5e4b8f", "src": "hda", "uuid": "7facde50-d638-48d5-84a5-e48259e5360c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:53:40", "plugin": "core", "name": "end_epoch", "raw_value": "1684148020.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:53:40", "plugin": "core", "name": "start_epoch", "raw_value": "1684148020.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 28.681223392486572, "inputs": {"input": {"src": "hda", "id": "b4dc1224610fa4e9"}, "basename": "http://genome.ucsc.edu", "org": "mouse", "db": "mm9"}, "job": {"model_class": "Job", "id": "18ac891b6ba2da4b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:54:17.353017", "create_time": "2023-05-15T10:54:04.343931", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-f2vw2", "command_line": "bedtools links -base 'http://genome.ucsc.edu' -org 'mouse' -db 'mm9' -i '/galaxy/server/database/objects/0/a/6/dataset_0a6bd86e-2042-4c79-93d4-5280a81c8cc5.dat' > '/galaxy/server/database/objects/9/9/f/dataset_99f763b1-c462-496d-abc4-47702260597d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "db": "\"mm9\"", "org": "\"mouse\"", "basename": "\"http://genome.ucsc.edu\""}, "inputs": {"input": {"id": "b4dc1224610fa4e9", "src": "hda", "uuid": "0a6bd86e-2042-4c79-93d4-5280a81c8cc5"}}, "outputs": {"output": {"id": "6510f4eb131fffbd", "src": "hda", "uuid": "99f763b1-c462-496d-abc4-47702260597d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:54:06", "plugin": "core", "name": "end_epoch", "raw_value": "1684148046.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:54:06", "plugin": "core", "name": "start_epoch", "raw_value": "1684148046.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 36.61985945701599, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "6d214dfbfeb2badb"}, "type|genome_file_opts|genome_file_opts_selector": "hist", "type|type_select": "genome", "action|windowsize": "1000000", "action|action_select": "windowsize"}, "job": {"model_class": "Job", "id": "d2e0de7e7b1b918b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:48:57.651827", "create_time": "2023-05-15T10:48:36.282540", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-dxhgx", "command_line": "bedtools makewindows  -g '/galaxy/server/database/objects/e/e/e/dataset_eee2e101-a35b-48cb-a440-1b0dab9ce835.dat'  -w 1000000  > '/galaxy/server/database/objects/0/6/0/dataset_060b0182-cf2e-4ff5-b6d5-c8dff408ee02.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sourcename": "\"\"", "action": "{\"__current_case__\": 0, \"action_select\": \"windowsize\", \"step_size\": {\"__current_case__\": 1, \"step_size_select\": \"no\"}, \"windowsize\": \"1000000\"}", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}"}, "inputs": {"type|genome": {"id": "6d214dfbfeb2badb", "src": "hda", "uuid": "eee2e101-a35b-48cb-a440-1b0dab9ce835"}}, "outputs": {"output": {"id": "2e1331e344c5202f", "src": "hda", "uuid": "060b0182-cf2e-4ff5-b6d5-c8dff408ee02"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:48:48", "plugin": "core", "name": "end_epoch", "raw_value": "1684147728.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:48:48", "plugin": "core", "name": "start_epoch", "raw_value": "1684147728.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 8.722315549850464, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 25.986425638198853, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "6d214dfbfeb2badb"}, "type|genome_file_opts|genome_file_opts_selector": "hist", "type|type_select": "genome", "action|number": "100", "action|action_select": "number"}, "job": {"model_class": "Job", "id": "9398ac51f0ef02d2", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:48:56.783773", "create_time": "2023-05-15T10:48:45.613717", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-8dtlq", "command_line": "bedtools makewindows  -g '/galaxy/server/database/objects/e/e/e/dataset_eee2e101-a35b-48cb-a440-1b0dab9ce835.dat'  -n 100  > '/galaxy/server/database/objects/f/b/c/dataset_fbc3cbbc-c225-48f6-a0ff-7b9a55a59094.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sourcename": "\"\"", "action": "{\"__current_case__\": 1, \"action_select\": \"number\", \"number\": \"100\"}", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}"}, "inputs": {"type|genome": {"id": "6d214dfbfeb2badb", "src": "hda", "uuid": "eee2e101-a35b-48cb-a440-1b0dab9ce835"}}, "outputs": {"output": {"id": "78f349af5967ab52", "src": "hda", "uuid": "fbc3cbbc-c225-48f6-a0ff-7b9a55a59094"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "WARNING: Interval :0-0 is smaller than the number of windows requested. Skipping.\n", "job_stdout": "", "job_stderr": "", "stderr": "WARNING: Interval :0-0 is smaller than the number of windows requested. Skipping.\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:48:47", "plugin": "core", "name": "end_epoch", "raw_value": "1684147727.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:48:47", "plugin": "core", "name": "start_epoch", "raw_value": "1684147727.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 24.785184621810913, "inputs": {"type|input": {"src": "hda", "id": "73a01243e977d670"}, "type|type_select": "bed", "action|number": "15", "action|action_select": "number"}, "job": {"model_class": "Job", "id": "fbd7f46d3c0c48d8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:49:21.571589", "create_time": "2023-05-15T10:49:10.390164", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-z7zwg", "command_line": "bedtools makewindows -b '/galaxy/server/database/objects/5/5/7/dataset_557326ec-e92a-4230-8878-1c0ef0fe42ee.dat' -n 15  > '/galaxy/server/database/objects/7/2/0/dataset_7205e395-9385-4d73-af8b-0b64117d00ee.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sourcename": "\"\"", "action": "{\"__current_case__\": 1, \"action_select\": \"number\", \"number\": \"15\"}", "type": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}, \"type_select\": \"bed\"}"}, "inputs": {"input": {"id": "73a01243e977d670", "src": "hda", "uuid": "557326ec-e92a-4230-8878-1c0ef0fe42ee"}}, "outputs": {"output": {"id": "3fe87a21f00df0c4", "src": "hda", "uuid": "7205e395-9385-4d73-af8b-0b64117d00ee"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:49:11", "plugin": "core", "name": "end_epoch", "raw_value": "1684147751.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:49:11", "plugin": "core", "name": "start_epoch", "raw_value": "1684147751.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 0, "time_seconds": 18.596567392349243, "inputs": {"inputA": {"src": "hda", "id": "f40c84e8461683d5"}, "inputB": {"src": "hda", "id": "220caffd036c1af1"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "mean"}, "execution_problem": "parameter 'col': an invalid option ('5') was selected (valid options: 3,2,1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 1, "time_seconds": 18.682247638702393, "inputs": {"inputA": {"src": "hda", "id": "58fb24dbf960672f"}, "inputB": {"src": "hda", "id": "b2b9b4c4deaa3f50"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "execution_problem": "parameter 'col': an invalid option ('5') was selected (valid options: 3,2,1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 2, "time_seconds": 17.1122727394104, "inputs": {"inputA": {"src": "hda", "id": "95d60e42c236cdd6"}, "inputB": {"src": "hda", "id": "358c888b207085a6"}, "strand": "-S", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "execution_problem": "parameter 'col': an invalid option ('5') was selected (valid options: 3,2,1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 3, "time_seconds": 33.096052408218384, "inputs": {"inputA": {"src": "hda", "id": "95d60e42c236cdd6"}, "inputB": {"src": "hda", "id": "358c888b207085a6"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "job": {"model_class": "Job", "id": "090e763aef7aa6a9", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:01:41.250384", "create_time": "2023-05-15T11:01:26.343182", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2", "history_id": "f3392d7459007ad8", "external_id": "gxy-8fx68", "command_line": "bedtools map -a '/galaxy/server/database/objects/9/8/9/dataset_9891a7a5-6b05-4e0c-989c-6fedb43a6542.dat' -b '/galaxy/server/database/objects/a/f/9/dataset_af9be5b5-79af-4346-b519-4c2a48b771de.dat' -s  -c 5 -o collapse         > '/galaxy/server/database/objects/9/4/4/dataset_94498777-5826-43ff-a952-1f13dd17111f.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "95d60e42c236cdd6", "src": "hda", "uuid": "9891a7a5-6b05-4e0c-989c-6fedb43a6542"}, "inputB": {"id": "358c888b207085a6", "src": "hda", "uuid": "af9be5b5-79af-4346-b519-4c2a48b771de"}}, "outputs": {"output": {"id": "dae421c01ce59ff2", "src": "hda", "uuid": "94498777-5826-43ff-a952-1f13dd17111f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:01:31", "plugin": "core", "name": "end_epoch", "raw_value": "1684148491.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:01:31", "plugin": "core", "name": "start_epoch", "raw_value": "1684148491.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 4, "time_seconds": 33.93267512321472, "inputs": {"inputA": {"src": "hda", "id": "58cc2fdd54e118bc"}, "inputB": {"src": "hda", "id": "18672b8aaaaa59ee"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "genome|genome_file_opts|genome": {"src": "hda", "id": "827eca9a7b8d5627"}, "genome|genome_file_opts|genome_file_opts_selector": "hist", "genome|genome_choose": "-g"}, "job": {"model_class": "Job", "id": "1658e14dca05df4f", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:01:51.851472", "create_time": "2023-05-15T11:01:39.334043", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2", "history_id": "f3392d7459007ad8", "external_id": "gxy-cnqmm", "command_line": "bedtools map -a '/galaxy/server/database/objects/3/7/1/dataset_37195f54-4e6b-45a6-ac7f-bf718ee43222.dat' -b '/galaxy/server/database/objects/7/b/4/dataset_7b4ef611-980f-4143-b33f-e2670c2c7fab.dat' -s  -c 5 -o collapse        -g '/galaxy/server/database/objects/2/1/b/dataset_21bbf60f-4390-4f9c-81fe-076e2e5c2582.dat'  > '/galaxy/server/database/objects/a/2/f/dataset_a2f3b248-307d-49b6-87e5-24a97042aa54.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 0, \"genome_choose\": \"-g\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 287, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "58cc2fdd54e118bc", "src": "hda", "uuid": "37195f54-4e6b-45a6-ac7f-bf718ee43222"}, "inputB": {"id": "18672b8aaaaa59ee", "src": "hda", "uuid": "7b4ef611-980f-4143-b33f-e2670c2c7fab"}, "genome|genome": {"id": "827eca9a7b8d5627", "src": "hda", "uuid": "21bbf60f-4390-4f9c-81fe-076e2e5c2582"}}, "outputs": {"output": {"id": "15d3f246ea676a05", "src": "hda", "uuid": "a2f3b248-307d-49b6-87e5-24a97042aa54"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:01:41", "plugin": "core", "name": "end_epoch", "raw_value": "1684148501.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:01:41", "plugin": "core", "name": "start_epoch", "raw_value": "1684148501.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 0, "time_seconds": 10.889034986495972, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 1, "time_seconds": 31.58821749687195, "inputs": {"inputA": {"src": "hda", "id": "4744060481b3b203"}, "inputB": {"src": "hda", "id": "1db1a02b0b2661f1"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "job": {"model_class": "Job", "id": "55d1688c16664bd5", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:13:54.942860", "create_time": "2023-05-15T11:13:40.544352", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-x76j8", "command_line": "bedtools map -a '/galaxy/server/database/objects/4/c/1/dataset_4c160550-35e9-41ce-9abc-197159b0b813.dat' -b '/galaxy/server/database/objects/8/1/1/dataset_8110ba0b-7fa7-46bf-8a27-3ee62dff844e.dat'   -c 5 -o collapse         > '/galaxy/server/database/objects/6/d/c/dataset_6dcf112e-4f26-4a4d-8184-24da7deca568.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "4744060481b3b203", "src": "hda", "uuid": "4c160550-35e9-41ce-9abc-197159b0b813"}, "inputB": {"id": "1db1a02b0b2661f1", "src": "hda", "uuid": "8110ba0b-7fa7-46bf-8a27-3ee62dff844e"}}, "outputs": {"output": {"id": "1beefd29694a2337", "src": "hda", "uuid": "6dcf112e-4f26-4a4d-8184-24da7deca568"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:13:44", "plugin": "core", "name": "end_epoch", "raw_value": "1684149224.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:13:44", "plugin": "core", "name": "start_epoch", "raw_value": "1684149224.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 2, "time_seconds": 40.26699185371399, "inputs": {"inputA": {"src": "hda", "id": "6a712c33f62c9bc7"}, "inputB": {"src": "hda", "id": "9d6e80418b561986"}, "strand": "-S", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "job": {"model_class": "Job", "id": "7ebc50a5b347ff3c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:14:23.514654", "create_time": "2023-05-15T11:14:01.089955", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-zhghs", "command_line": "bedtools map -a '/galaxy/server/database/objects/f/3/7/dataset_f376c831-8c0d-4414-8b17-ad512ebc7116.dat' -b '/galaxy/server/database/objects/4/3/d/dataset_43dc0d4c-fce8-4895-b3cd-c92397237be5.dat' -S  -c 5 -o collapse         > '/galaxy/server/database/objects/5/3/f/dataset_53f13054-f008-4cde-8344-9858abdde7e5.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-S\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputB": {"id": "9d6e80418b561986", "src": "hda", "uuid": "43dc0d4c-fce8-4895-b3cd-c92397237be5"}, "inputA": {"id": "6a712c33f62c9bc7", "src": "hda", "uuid": "f376c831-8c0d-4414-8b17-ad512ebc7116"}}, "outputs": {"output": {"id": "2e31405e92d43fba", "src": "hda", "uuid": "53f13054-f008-4cde-8344-9858abdde7e5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:14:13", "plugin": "core", "name": "end_epoch", "raw_value": "1684149253.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:14:13", "plugin": "core", "name": "start_epoch", "raw_value": "1684149253.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 3, "time_seconds": 29.65489363670349, "inputs": {"inputA": {"src": "hda", "id": "6a712c33f62c9bc7"}, "inputB": {"src": "hda", "id": "9d6e80418b561986"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "job": {"model_class": "Job", "id": "a2fe6047044cb785", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:14:24.552248", "create_time": "2023-05-15T11:14:11.604367", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-52m2x", "command_line": "bedtools map -a '/galaxy/server/database/objects/f/3/7/dataset_f376c831-8c0d-4414-8b17-ad512ebc7116.dat' -b '/galaxy/server/database/objects/4/3/d/dataset_43dc0d4c-fce8-4895-b3cd-c92397237be5.dat' -s  -c 5 -o collapse         > '/galaxy/server/database/objects/4/6/1/dataset_461532c4-023b-40cf-bf5b-14d15a3a4b9a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputB": {"id": "9d6e80418b561986", "src": "hda", "uuid": "43dc0d4c-fce8-4895-b3cd-c92397237be5"}, "inputA": {"id": "6a712c33f62c9bc7", "src": "hda", "uuid": "f376c831-8c0d-4414-8b17-ad512ebc7116"}}, "outputs": {"output": {"id": "7d5a47737128444d", "src": "hda", "uuid": "461532c4-023b-40cf-bf5b-14d15a3a4b9a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:14:14", "plugin": "core", "name": "end_epoch", "raw_value": "1684149254.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:14:14", "plugin": "core", "name": "start_epoch", "raw_value": "1684149254.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 4, "time_seconds": 22.172335386276245, "inputs": {"inputA": {"src": "hda", "id": "882fd816fe2283cd"}, "inputB": {"src": "hda", "id": "b87a842f0e1deeb8"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "genome_file_opts|genome": {"src": "hda", "id": "e2667f600cf72892"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "execution_problem": "parameter 'col': an invalid option ('5') was selected (valid options: 3,2,1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 5, "time_seconds": 41.05829215049744, "inputs": {"inputA": {"src": "hda", "id": "882fd816fe2283cd"}, "inputB": {"src": "hda", "id": "b87a842f0e1deeb8"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "genome_file_opts|genome": "mm9", "genome_file_opts|genome_file_opts_selector": "loc"}, "job": {"model_class": "Job", "id": "353586c3f2658a6e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:15:05.690021", "create_time": "2023-05-15T11:14:50.751464", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-zqdkl", "command_line": "bedtools map -a '/galaxy/server/database/objects/5/0/7/dataset_5078d5f6-ee90-4c61-8e23-70b1b8b8d2e6.dat' -b '/galaxy/server/database/objects/7/5/b/dataset_75bff90a-f5a3-4e78-a6f3-61424beada13.dat' -s  -c 5 -o collapse        -g '/cvmfs/data.galaxyproject.org/managed/len/ucsc/mm9.len'  > '/galaxy/server/database/objects/4/5/a/dataset_45a4ecf1-7eb0-416f-aa07-f5e735df25df.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": \"mm9\", \"genome_file_opts_selector\": \"loc\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputB": {"id": "b87a842f0e1deeb8", "src": "hda", "uuid": "75bff90a-f5a3-4e78-a6f3-61424beada13"}, "inputA": {"id": "882fd816fe2283cd", "src": "hda", "uuid": "5078d5f6-ee90-4c61-8e23-70b1b8b8d2e6"}}, "outputs": {"output": {"id": "65ceabd609df1b92", "src": "hda", "uuid": "45a4ecf1-7eb0-416f-aa07-f5e735df25df"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:14:55", "plugin": "core", "name": "end_epoch", "raw_value": "1684149295.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:14:54", "plugin": "core", "name": "start_epoch", "raw_value": "1684149294.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 34.78579616546631, "inputs": {"input": {"src": "hda", "id": "19fdb788dc7a4d21"}, "fasta": {"src": "hda", "id": "c11632248c9983c3"}, "soft": false}, "job": {"model_class": "Job", "id": "0d796d9e4949c107", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:08:56.714128", "create_time": "2023-05-15T11:08:43.000728", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-qc8db", "command_line": "bedtools maskfasta  -mc 'N' -fi '/galaxy/server/database/objects/a/3/4/dataset_a34814ff-cc9a-4304-abad-45020c861266.dat' -bed '/galaxy/server/database/objects/2/4/f/dataset_24fe8eff-809a-4df9-87cb-9948c0a74c19.dat' -fo '/galaxy/server/database/objects/7/1/1/dataset_71169dc4-cf6b-4c3c-adf5-50166f5e3322.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fullheader": "false", "mc": "\"N\"", "soft": "false"}, "inputs": {"input": {"id": "19fdb788dc7a4d21", "src": "hda", "uuid": "24fe8eff-809a-4df9-87cb-9948c0a74c19"}, "fasta": {"id": "c11632248c9983c3", "src": "hda", "uuid": "a34814ff-cc9a-4304-abad-45020c861266"}}, "outputs": {"output": {"id": "ea63babdf0370e9a", "src": "hda", "uuid": "71169dc4-cf6b-4c3c-adf5-50166f5e3322"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:08:46", "plugin": "core", "name": "end_epoch", "raw_value": "1684148926.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:08:46", "plugin": "core", "name": "start_epoch", "raw_value": "1684148926.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 39.682037115097046, "inputs": {"input": {"src": "hda", "id": "8de7a81e5e880852"}, "fasta": {"src": "hda", "id": "0381c596a5cf2d56"}, "soft": true}, "job": {"model_class": "Job", "id": "8d42eb108caa543b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:09:26.039308", "create_time": "2023-05-15T11:09:04.618863", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-rsc9x", "command_line": "bedtools maskfasta -soft -mc 'N' -fi '/galaxy/server/database/objects/e/a/a/dataset_eaa74f6b-e111-43cb-b040-93ecf76e3581.dat' -bed '/galaxy/server/database/objects/8/4/a/dataset_84a0df5f-4bcd-47dd-aedf-f6c7311fd3c6.dat' -fo '/galaxy/server/database/objects/4/c/5/dataset_4c5a3a1b-b96f-432a-a380-2371b44dde26.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fullheader": "false", "mc": "\"N\"", "soft": "true"}, "inputs": {"input": {"id": "8de7a81e5e880852", "src": "hda", "uuid": "84a0df5f-4bcd-47dd-aedf-f6c7311fd3c6"}, "fasta": {"id": "0381c596a5cf2d56", "src": "hda", "uuid": "eaa74f6b-e111-43cb-b040-93ecf76e3581"}}, "outputs": {"output": {"id": "6f5901e23d95fec0", "src": "hda", "uuid": "4c5a3a1b-b96f-432a-a380-2371b44dde26"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:09:16", "plugin": "core", "name": "end_epoch", "raw_value": "1684148956.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:09:16", "plugin": "core", "name": "start_epoch", "raw_value": "1684148956.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 30.19887089729309, "inputs": {"input": {"src": "hda", "id": "8de7a81e5e880852"}, "fasta": {"src": "hda", "id": "0381c596a5cf2d56"}, "soft": true, "fullheader": true}, "job": {"model_class": "Job", "id": "4fa9623d42210650", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:09:27.089797", "create_time": "2023-05-15T11:09:14.184149", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-dlkr5", "command_line": "bedtools maskfasta -soft -mc 'N' -fi '/galaxy/server/database/objects/e/a/a/dataset_eaa74f6b-e111-43cb-b040-93ecf76e3581.dat' -bed '/galaxy/server/database/objects/8/4/a/dataset_84a0df5f-4bcd-47dd-aedf-f6c7311fd3c6.dat' -fo '/galaxy/server/database/objects/a/e/1/dataset_ae1f2ac0-d389-49c2-8d1b-a436017ca548.dat' -fullHeader", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fullheader": "true", "mc": "\"N\"", "soft": "true"}, "inputs": {"input": {"id": "8de7a81e5e880852", "src": "hda", "uuid": "84a0df5f-4bcd-47dd-aedf-f6c7311fd3c6"}, "fasta": {"id": "0381c596a5cf2d56", "src": "hda", "uuid": "eaa74f6b-e111-43cb-b040-93ecf76e3581"}}, "outputs": {"output": {"id": "ce3c58a6149ed05b", "src": "hda", "uuid": "ae1f2ac0-d389-49c2-8d1b-a436017ca548"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:09:17", "plugin": "core", "name": "end_epoch", "raw_value": "1684148957.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:09:17", "plugin": "core", "name": "start_epoch", "raw_value": "1684148957.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 34.63281869888306, "inputs": {"input": {"src": "hda", "id": "769d14b2778b09d3"}}, "job": {"model_class": "Job", "id": "9dd906ad18a991b1", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:43:12.362038", "create_time": "2023-05-15T10:42:52.434216", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-wf5sh", "command_line": "mergeBed -i '/galaxy/server/database/objects/e/e/9/dataset_ee9102ea-10dd-4a47-b096-866664fb7129.dat'  -d 0    > '/galaxy/server/database/objects/8/7/b/dataset_87b99fee-dd1e-45b5-b23a-81cef534cab6.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"0\"", "strand": "\"\""}, "inputs": {"input": {"id": "769d14b2778b09d3", "src": "hda", "uuid": "ee9102ea-10dd-4a47-b096-866664fb7129"}}, "outputs": {"output": {"id": "63369cac4ce69c88", "src": "hda", "uuid": "87b99fee-dd1e-45b5-b23a-81cef534cab6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:43:02", "plugin": "core", "name": "end_epoch", "raw_value": "1684147382.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:43:02", "plugin": "core", "name": "start_epoch", "raw_value": "1684147382.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 31.32503914833069, "inputs": {"input": {"src": "hda", "id": "eb282515ca6bddee"}}, "job": {"model_class": "Job", "id": "56eb0f63d330cf35", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:43:13.449084", "create_time": "2023-05-15T10:42:58.589277", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-x8qc8", "command_line": "mergeBed -i '/galaxy/server/database/objects/7/4/d/dataset_74db0286-d58d-48ae-aab6-64368801534b.dat'  -d 0    > '/galaxy/server/database/objects/d/7/e/dataset_d7ee4fe6-de2e-4536-943f-f497759e41cb.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"0\"", "strand": "\"\""}, "inputs": {"input": {"id": "eb282515ca6bddee", "src": "hda", "uuid": "74db0286-d58d-48ae-aab6-64368801534b"}}, "outputs": {"output": {"id": "33630de5f25609ba", "src": "hda", "uuid": "d7ee4fe6-de2e-4536-943f-f497759e41cb"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:43:03", "plugin": "core", "name": "end_epoch", "raw_value": "1684147383.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:43:03", "plugin": "core", "name": "start_epoch", "raw_value": "1684147383.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 28.48502779006958, "inputs": {"input": {"src": "hda", "id": "07489bd41a77bfdc"}}, "job": {"model_class": "Job", "id": "e483a35d87944b52", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:43:41.116087", "create_time": "2023-05-15T10:43:29.482091", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-p45qv", "command_line": "mergeBed -i '/galaxy/server/database/objects/6/6/b/dataset_66b78c54-edfe-49cc-b31a-f627a9abbc6e.dat'  -d 0    > '/galaxy/server/database/objects/a/a/6/dataset_aa6f39a9-2e00-4b54-9923-1b3a80be1d51.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"0\"", "strand": "\"\""}, "inputs": {"input": {"id": "07489bd41a77bfdc", "src": "hda", "uuid": "66b78c54-edfe-49cc-b31a-f627a9abbc6e"}}, "outputs": {"output": {"id": "b3156d0eaf518c40", "src": "hda", "uuid": "aa6f39a9-2e00-4b54-9923-1b3a80be1d51"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:43:31", "plugin": "core", "name": "end_epoch", "raw_value": "1684147411.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:43:31", "plugin": "core", "name": "start_epoch", "raw_value": "1684147411.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 28.907376766204834, "inputs": {"input": {"src": "hda", "id": "91305b843cbf12ea"}, "distance": "1000"}, "job": {"model_class": "Job", "id": "d73b021fa89350f8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:43:42.164604", "create_time": "2023-05-15T10:43:29.579622", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-dkkw2", "command_line": "mergeBed -i '/galaxy/server/database/objects/2/c/1/dataset_2c178d63-73ff-4d50-8dbf-a4aa07ed5259.dat'  -d 1000    > '/galaxy/server/database/objects/4/c/e/dataset_4ce2236b-8ea9-4311-8894-b9fc505638a9.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"1000\"", "strand": "\"\""}, "inputs": {"input": {"id": "91305b843cbf12ea", "src": "hda", "uuid": "2c178d63-73ff-4d50-8dbf-a4aa07ed5259"}}, "outputs": {"output": {"id": "20882eb77eb190c8", "src": "hda", "uuid": "4ce2236b-8ea9-4311-8894-b9fc505638a9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:43:33", "plugin": "core", "name": "end_epoch", "raw_value": "1684147413.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:43:32", "plugin": "core", "name": "start_epoch", "raw_value": "1684147412.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 27.85203790664673, "inputs": {"input": {"src": "hda", "id": "d159cc38ba784290"}, "distance": "1000", "c_and_o_argument_repeat_0|col": "1", "c_and_o_argument_repeat_0|operation": "count"}, "job": {"model_class": "Job", "id": "583ec1d154ca50d4", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:44:08.798872", "create_time": "2023-05-15T10:43:58.395216", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-9247s", "command_line": "mergeBed -i '/galaxy/server/database/objects/d/3/f/dataset_d3f575d3-e9fa-43ab-b171-f96da33c0cf9.dat'  -d 1000   -c 1 -o count  > '/galaxy/server/database/objects/b/9/7/dataset_b977a37e-7cb5-448f-a54d-9bec061b001a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"1\", \"operation\": \"count\"}]", "header": "false", "distance": "\"1000\"", "strand": "\"\""}, "inputs": {"input": {"id": "d159cc38ba784290", "src": "hda", "uuid": "d3f575d3-e9fa-43ab-b171-f96da33c0cf9"}}, "outputs": {"output": {"id": "e93e7dc3223274a2", "src": "hda", "uuid": "b977a37e-7cb5-448f-a54d-9bec061b001a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:44:00", "plugin": "core", "name": "end_epoch", "raw_value": "1684147440.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:44:00", "plugin": "core", "name": "start_epoch", "raw_value": "1684147440.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multicovtbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multicovtbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 34.67531609535217, "inputs": {"input": {"src": "hda", "id": "7c2eb01a6fc4d426"}, "bams": [{"src": "hda", "id": "bfb5c92bd1b4b2c7"}, {"src": "hda", "id": "bfb5c92bd1b4b2c7"}], "split": false, "q": "1"}, "job": {"model_class": "Job", "id": "4256fe43b5997c83", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:00:49.369731", "create_time": "2023-05-15T11:00:38.044457", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multicovtbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-4gwph", "command_line": "ln -s -f '/galaxy/server/database/objects/1/6/c/dataset_16cbb37a-ec8b-452d-bb01-b33541a2258b.dat' 0.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/4/6/e/metadata_46eaa928-858c-4fd9-b8a0-998ae144e8e0.dat' 0.bam.bai && ln -s -f '/galaxy/server/database/objects/1/6/c/dataset_16cbb37a-ec8b-452d-bb01-b33541a2258b.dat' 1.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/4/6/e/metadata_46eaa928-858c-4fd9-b8a0-998ae144e8e0.dat' 1.bam.bai &&  bedtools multicov -bed '/galaxy/server/database/objects/b/d/2/dataset_bd234577-cb7d-45ae-aedd-1e537b52eff7.dat' -bams '0.bam' '1.bam'      -q 1    > '/galaxy/server/database/objects/6/3/a/dataset_63a62e47-2a28-4e37-8420-0ff70e8fb63f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "proper": "false", "failed": "false", "duplicate": "false", "q": "\"1\"", "split": "false", "reciprocal": "\"\"", "overlap": "\"\"", "strand": "\"\""}, "inputs": {"input": {"id": "7c2eb01a6fc4d426", "src": "hda", "uuid": "bd234577-cb7d-45ae-aedd-1e537b52eff7"}, "bams": {"id": "bfb5c92bd1b4b2c7", "src": "hda", "uuid": "16cbb37a-ec8b-452d-bb01-b33541a2258b"}, "bams1": {"id": "bfb5c92bd1b4b2c7", "src": "hda", "uuid": "16cbb37a-ec8b-452d-bb01-b33541a2258b"}, "bams2": {"id": "bfb5c92bd1b4b2c7", "src": "hda", "uuid": "16cbb37a-ec8b-452d-bb01-b33541a2258b"}}, "outputs": {"output": {"id": "e075a9c863d262b5", "src": "hda", "uuid": "63a62e47-2a28-4e37-8420-0ff70e8fb63f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:00:40", "plugin": "core", "name": "end_epoch", "raw_value": "1684148440.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:00:39", "plugin": "core", "name": "start_epoch", "raw_value": "1684148439.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 13.895888090133667, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 51.764872789382935, "inputs": {"tag|inputs": [{"src": "hda", "id": "33dadeb02d511723"}, {"src": "hda", "id": "554b16459521a8e3"}, {"src": "hda", "id": "b61be8b4ea1f0cdf"}], "tag|tag_select": "tag", "empty|empty_selector": "", "header": true}, "job": {"model_class": "Job", "id": "78882bc280bb2850", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:57:28.436915", "create_time": "2023-05-15T10:57:10.282788", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-7q94d", "command_line": "bedtools multiinter -header  -filler 'N/A'     -i '/galaxy/server/database/objects/2/0/3/dataset_20308a62-b0f6-4579-bba0-58a9860301ba.dat' '/galaxy/server/database/objects/c/b/4/dataset_cb4c9517-c074-48fa-a7f6-23cca2aa36be.dat' '/galaxy/server/database/objects/b/9/9/dataset_b9984e6a-7d2d-4601-97a0-4fb7a2e4f40c.dat' > '/galaxy/server/database/objects/1/3/8/dataset_13850286-46a2-4fa1-903f-e7e4dc55398d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "true", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}", "cluster": "false", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 237, \"src\": \"hda\"}, {\"id\": 238, \"src\": \"hda\"}, {\"id\": 239, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "33dadeb02d511723", "src": "hda", "uuid": "20308a62-b0f6-4579-bba0-58a9860301ba"}, "inputs1": {"id": "33dadeb02d511723", "src": "hda", "uuid": "20308a62-b0f6-4579-bba0-58a9860301ba"}, "inputs2": {"id": "554b16459521a8e3", "src": "hda", "uuid": "cb4c9517-c074-48fa-a7f6-23cca2aa36be"}, "inputs3": {"id": "b61be8b4ea1f0cdf", "src": "hda", "uuid": "b9984e6a-7d2d-4601-97a0-4fb7a2e4f40c"}}, "outputs": {"output": {"id": "86d07535accaa424", "src": "hda", "uuid": "13850286-46a2-4fa1-903f-e7e4dc55398d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:57:19", "plugin": "core", "name": "end_epoch", "raw_value": "1684148239.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:57:19", "plugin": "core", "name": "start_epoch", "raw_value": "1684148239.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 45.82476568222046, "inputs": {"tag|inputs": [{"src": "hda", "id": "33dadeb02d511723"}, {"src": "hda", "id": "554b16459521a8e3"}, {"src": "hda", "id": "b61be8b4ea1f0cdf"}], "tag|tag_select": "tag", "empty|genome_file_opts|genome": {"src": "hda", "id": "5f91ef5384ba6efb"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty"}, "job": {"model_class": "Job", "id": "ea6ae75526f2642a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:57:30.484854", "create_time": "2023-05-15T10:57:16.929310", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-s9njc", "command_line": "bedtools multiinter   -filler 'N/A' -empty  -g '/galaxy/server/database/objects/f/e/4/dataset_fe49dfa3-a62a-4e56-8ccf-2c7d8e9e1918.dat'   -i '/galaxy/server/database/objects/2/0/3/dataset_20308a62-b0f6-4579-bba0-58a9860301ba.dat' '/galaxy/server/database/objects/c/b/4/dataset_cb4c9517-c074-48fa-a7f6-23cca2aa36be.dat' '/galaxy/server/database/objects/b/9/9/dataset_b9984e6a-7d2d-4601-97a0-4fb7a2e4f40c.dat' > '/galaxy/server/database/objects/6/2/1/dataset_621190a3-aecb-401f-98da-f32ee61dd9b1.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 240, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "cluster": "false", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 237, \"src\": \"hda\"}, {\"id\": 238, \"src\": \"hda\"}, {\"id\": 239, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "33dadeb02d511723", "src": "hda", "uuid": "20308a62-b0f6-4579-bba0-58a9860301ba"}, "inputs1": {"id": "33dadeb02d511723", "src": "hda", "uuid": "20308a62-b0f6-4579-bba0-58a9860301ba"}, "inputs2": {"id": "554b16459521a8e3", "src": "hda", "uuid": "cb4c9517-c074-48fa-a7f6-23cca2aa36be"}, "inputs3": {"id": "b61be8b4ea1f0cdf", "src": "hda", "uuid": "b9984e6a-7d2d-4601-97a0-4fb7a2e4f40c"}, "empty|genome": {"id": "5f91ef5384ba6efb", "src": "hda", "uuid": "fe49dfa3-a62a-4e56-8ccf-2c7d8e9e1918"}}, "outputs": {"output": {"id": "4256fe43b5997c83", "src": "hda", "uuid": "621190a3-aecb-401f-98da-f32ee61dd9b1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:57:20", "plugin": "core", "name": "end_epoch", "raw_value": "1684148240.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:57:20", "plugin": "core", "name": "start_epoch", "raw_value": "1684148240.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 37.491344690322876, "inputs": {"input": {"src": "hda", "id": "d64d9c2ae992ae04"}, "fasta": {"src": "hda", "id": "fdd15fa6a34b0d8e"}}, "job": {"model_class": "Job", "id": "313dd98be59811e4", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:44:46.590713", "create_time": "2023-05-15T10:44:32.683423", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-vxs6b", "command_line": "ln -s '/galaxy/server/database/objects/7/6/3/dataset_7634d270-ced7-42e6-aedf-150be893e195.dat' 'input.fasta' && bedtools nuc   -fi 'input.fasta' -bed '/galaxy/server/database/objects/a/1/6/dataset_a1669cd3-9b3d-4bd8-b402-b6077017d856.dat' > '/galaxy/server/database/objects/9/1/4/dataset_914c8bb4-2da7-4cf3-af6a-433d807c262c.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "C": "false", "pattern": null, "seq": "false", "s": "false"}, "inputs": {"input": {"id": "d64d9c2ae992ae04", "src": "hda", "uuid": "a1669cd3-9b3d-4bd8-b402-b6077017d856"}, "fasta": {"id": "fdd15fa6a34b0d8e", "src": "hda", "uuid": "7634d270-ced7-42e6-aedf-150be893e195"}}, "outputs": {"output": {"id": "70485dfcb4b8f83b", "src": "hda", "uuid": "914c8bb4-2da7-4cf3-af6a-433d807c262c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:44:36", "plugin": "core", "name": "end_epoch", "raw_value": "1684147476.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:44:36", "plugin": "core", "name": "start_epoch", "raw_value": "1684147476.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 34.17465925216675, "inputs": {"input": {"src": "hda", "id": "d64d9c2ae992ae04"}, "fasta": {"src": "hda", "id": "fdd15fa6a34b0d8e"}, "seq": true}, "job": {"model_class": "Job", "id": "229f82154ae5f684", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:44:47.622832", "create_time": "2023-05-15T10:44:34.737385", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-b9z4q", "command_line": "ln -s '/galaxy/server/database/objects/7/6/3/dataset_7634d270-ced7-42e6-aedf-150be893e195.dat' 'input.fasta' && bedtools nuc  -seq -fi 'input.fasta' -bed '/galaxy/server/database/objects/a/1/6/dataset_a1669cd3-9b3d-4bd8-b402-b6077017d856.dat' > '/galaxy/server/database/objects/5/5/4/dataset_554e8add-6929-4ea4-9809-b07e56573cff.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "C": "false", "pattern": null, "seq": "true", "s": "false"}, "inputs": {"input": {"id": "d64d9c2ae992ae04", "src": "hda", "uuid": "a1669cd3-9b3d-4bd8-b402-b6077017d856"}, "fasta": {"id": "fdd15fa6a34b0d8e", "src": "hda", "uuid": "7634d270-ced7-42e6-aedf-150be893e195"}}, "outputs": {"output": {"id": "90047cbd93ad056a", "src": "hda", "uuid": "554e8add-6929-4ea4-9809-b07e56573cff"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:44:37", "plugin": "core", "name": "end_epoch", "raw_value": "1684147477.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:44:37", "plugin": "core", "name": "start_epoch", "raw_value": "1684147477.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 31.728140830993652, "inputs": {"input": {"src": "hda", "id": "75223f3150adffdf"}, "fasta": {"src": "hda", "id": "65b8d0fbf1e29078"}, "seq": true, "pattern": "TAC"}, "job": {"model_class": "Job", "id": "27aba2e14716dba6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:45:18.219315", "create_time": "2023-05-15T10:45:03.549945", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-jsf64", "command_line": "ln -s '/galaxy/server/database/objects/6/9/7/dataset_697b3f04-725c-40d7-8e3f-ff4b089a4ab2.dat' 'input.fasta' && bedtools nuc  -seq -pattern 'TAC'  -fi 'input.fasta' -bed '/galaxy/server/database/objects/0/5/2/dataset_052e2c16-abb9-44ef-9fb7-e0aa0118a33b.dat' > '/galaxy/server/database/objects/4/8/a/dataset_48a37958-e7f9-426e-b45c-ee970fae1d6c.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "C": "false", "pattern": "\"TAC\"", "seq": "true", "s": "false"}, "inputs": {"input": {"id": "75223f3150adffdf", "src": "hda", "uuid": "052e2c16-abb9-44ef-9fb7-e0aa0118a33b"}, "fasta": {"id": "65b8d0fbf1e29078", "src": "hda", "uuid": "697b3f04-725c-40d7-8e3f-ff4b089a4ab2"}}, "outputs": {"output": {"id": "a7d1cca4b512cb54", "src": "hda", "uuid": "48a37958-e7f9-426e-b45c-ee970fae1d6c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:45:09", "plugin": "core", "name": "end_epoch", "raw_value": "1684147509.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:45:09", "plugin": "core", "name": "start_epoch", "raw_value": "1684147509.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 24.830036401748657, "inputs": {"input": {"src": "hda", "id": "031843a49db64951"}, "cols": ["2", "3", "5", "6"]}, "job": {"model_class": "Job", "id": "f7cc9f3b4ce0227d", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:56:36.766191", "create_time": "2023-05-15T10:56:26.462687", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-ckf47", "command_line": "bedtools overlap -i '/galaxy/server/database/objects/1/8/5/dataset_18505447-8670-454d-b46d-144e7bedf06a.dat' -cols 2,3,5,6 > '/galaxy/server/database/objects/c/3/0/dataset_c307d439-2637-4392-ac9a-bc375477972b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "cols": "[\"2\", \"3\", \"5\", \"6\"]"}, "inputs": {"input": {"id": "031843a49db64951", "src": "hda", "uuid": "18505447-8670-454d-b46d-144e7bedf06a"}}, "outputs": {"output": {"id": "3176eb3974ed704f", "src": "hda", "uuid": "c307d439-2637-4392-ac9a-bc375477972b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:56:28", "plugin": "core", "name": "end_epoch", "raw_value": "1684148188.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:56:27", "plugin": "core", "name": "start_epoch", "raw_value": "1684148187.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 33.02035069465637, "inputs": {"genome_file_opts|genome": {"src": "hda", "id": "559d1c5f93499914"}, "genome_file_opts|genome_file_opts_selector": "hist", "length": "5", "intervals": "3", "seed|seed_choose": "False"}, "job": {"model_class": "Job", "id": "edaf137ba79cb608", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:22:59.142055", "create_time": "2023-05-15T11:22:41.567162", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-vpbp2", "command_line": "bedtools random  -g '/galaxy/server/database/objects/7/0/0/dataset_70075703-2119-4cfc-b603-15e27a332f66.dat'  -l 5 -n 3 > '/galaxy/server/database/objects/0/8/6/dataset_08644a45-784e-4f56-bd03-8e4b01ca40c8.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "seed": "{\"__current_case__\": 1, \"seed_choose\": \"False\"}", "intervals": "\"3\"", "length": "\"5\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 513, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "559d1c5f93499914", "src": "hda", "uuid": "70075703-2119-4cfc-b603-15e27a332f66"}}, "outputs": {"output": {"id": "76e5b7e7a7007d45", "src": "hda", "uuid": "08644a45-784e-4f56-bd03-8e4b01ca40c8"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:22:49", "plugin": "core", "name": "end_epoch", "raw_value": "1684149769.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:22:49", "plugin": "core", "name": "start_epoch", "raw_value": "1684149769.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 26.257535934448242, "inputs": {"genome_file_opts|genome": {"src": "hda", "id": "3652824b8cbe47b1"}, "genome_file_opts|genome_file_opts_selector": "hist", "length": "5", "intervals": "3", "seed|seed_choose": "False"}, "job": {"model_class": "Job", "id": "6103fb7bb81c03f6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:57:55.119475", "create_time": "2023-05-15T10:57:43.858812", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-tv8bz", "command_line": "bedtools random -g '/galaxy/server/database/objects/b/b/f/dataset_bbfd7a89-7d4a-41e3-a086-f48dbc5c387f.dat'  -l 5 -n 3 > '/galaxy/server/database/objects/9/8/2/dataset_98226339-4daf-413e-8fbd-8e60291c5195.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "seed": "{\"__current_case__\": 1, \"seed_choose\": \"False\"}", "intervals": "\"3\"", "length": "\"5\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 243, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "3652824b8cbe47b1", "src": "hda", "uuid": "bbfd7a89-7d4a-41e3-a086-f48dbc5c387f"}}, "outputs": {"output": {"id": "f423427da7328f57", "src": "hda", "uuid": "98226339-4daf-413e-8fbd-8e60291c5195"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:57:45", "plugin": "core", "name": "end_epoch", "raw_value": "1684148265.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:57:45", "plugin": "core", "name": "start_epoch", "raw_value": "1684148265.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 26.45789861679077, "inputs": {"inputA": {"src": "hda", "id": "43654fd51ab10214"}, "inputB": {"src": "hda", "id": "43654fd51ab10214"}}, "job": {"model_class": "Job", "id": "36fc19e925686ba6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:57:57.033479", "create_time": "2023-05-15T10:57:45.841918", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-lhxmn", "command_line": "bedtools reldist -a '/galaxy/server/database/objects/d/2/7/dataset_d2742ce7-2021-43f6-9d72-1e34d3b2b6a1.dat' -b '/galaxy/server/database/objects/d/2/7/dataset_d2742ce7-2021-43f6-9d72-1e34d3b2b6a1.dat'  > '/galaxy/server/database/objects/a/b/4/dataset_ab4572d2-f5a7-45b4-ba88-736ebf5082f9.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "detail": "false"}, "inputs": {"inputA": {"id": "43654fd51ab10214", "src": "hda", "uuid": "d2742ce7-2021-43f6-9d72-1e34d3b2b6a1"}, "inputB": {"id": "43654fd51ab10214", "src": "hda", "uuid": "d2742ce7-2021-43f6-9d72-1e34d3b2b6a1"}}, "outputs": {"output": {"id": "abcaf61263bbe447", "src": "hda", "uuid": "ab4572d2-f5a7-45b4-ba88-736ebf5082f9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:57:47", "plugin": "core", "name": "end_epoch", "raw_value": "1684148267.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:57:47", "plugin": "core", "name": "start_epoch", "raw_value": "1684148267.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 44.16000819206238, "inputs": {"inputA": {"src": "hda", "id": "0304c289cbab15e0"}, "genome_file_opts|genome": {"src": "hda", "id": "e224ff71f07a8635"}, "genome_file_opts|genome_file_opts_selector": "hist", "chrom": false, "seed|seed": "1", "seed|seed_choose": "True"}, "job": {"model_class": "Job", "id": "03562bca74b16772", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:12:19.631372", "create_time": "2023-05-15T11:11:55.712105", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-8f7nv", "command_line": "bedtools shuffle  -g '/galaxy/server/database/objects/4/4/6/dataset_4463653b-d70e-4623-9c72-7821c1df0556.dat'  -i '/galaxy/server/database/objects/2/2/f/dataset_22f40b3d-d529-4525-96d4-39b9fd26695f.dat'  -seed 1     -maxTries 1000 > '/galaxy/server/database/objects/4/c/1/dataset_4c190011-42bb-48df-8d8f-92a80d9a633d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 399, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "0304c289cbab15e0", "src": "hda", "uuid": "22f40b3d-d529-4525-96d4-39b9fd26695f"}, "genome": {"id": "e224ff71f07a8635", "src": "hda", "uuid": "4463653b-d70e-4623-9c72-7821c1df0556"}}, "outputs": {"output": {"id": "71b1d1ae6b2e8ccf", "src": "hda", "uuid": "4c190011-42bb-48df-8d8f-92a80d9a633d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:12:10", "plugin": "core", "name": "end_epoch", "raw_value": "1684149130.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:12:10", "plugin": "core", "name": "start_epoch", "raw_value": "1684149130.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 30.625670909881592, "inputs": {"inputA": {"src": "hda", "id": "0304c289cbab15e0"}, "genome_file_opts|genome": {"src": "hda", "id": "e224ff71f07a8635"}, "genome_file_opts|genome_file_opts_selector": "hist", "chrom": true, "seed|seed": "1", "seed|seed_choose": "True"}, "job": {"model_class": "Job", "id": "ea63babdf0370e9a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:12:20.804295", "create_time": "2023-05-15T11:12:07.832423", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-sd599", "command_line": "bedtools shuffle  -g '/galaxy/server/database/objects/4/4/6/dataset_4463653b-d70e-4623-9c72-7821c1df0556.dat'  -i '/galaxy/server/database/objects/2/2/f/dataset_22f40b3d-d529-4525-96d4-39b9fd26695f.dat'  -seed 1 -chrom    -maxTries 1000 > '/galaxy/server/database/objects/4/9/b/dataset_49b4feec-69cd-4a8a-b259-06961c2be597.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "true", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 399, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "0304c289cbab15e0", "src": "hda", "uuid": "22f40b3d-d529-4525-96d4-39b9fd26695f"}, "genome": {"id": "e224ff71f07a8635", "src": "hda", "uuid": "4463653b-d70e-4623-9c72-7821c1df0556"}}, "outputs": {"output": {"id": "bba5bee5c8629040", "src": "hda", "uuid": "49b4feec-69cd-4a8a-b259-06961c2be597"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:12:10", "plugin": "core", "name": "end_epoch", "raw_value": "1684149130.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:12:10", "plugin": "core", "name": "start_epoch", "raw_value": "1684149130.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 23.06077742576599, "inputs": {"inputA": {"src": "hda", "id": "4e878c7056cf949b"}, "genome_file_opts|genome": {"src": "hda", "id": "937be08881e5d42e"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed": "1", "seed|seed_choose": "True", "add_bed|excl": {"src": "hda", "id": "d0f10947daef7817"}, "add_bed|add_bed_select": "not_be"}, "execution_problem": "parameter 'inputA': the previously selected dataset has entered an unusable state", "dynamic_param_error": false, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 3, "time_seconds": 20.166452884674072, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 36.13970947265625, "inputs": {"inputA": {"src": "hda", "id": "7f1a51010e06cb73"}, "genome_file_opts|genome": {"src": "hda", "id": "71f3402a979f5471"}, "genome_file_opts|genome_file_opts_selector": "hist", "chrom": false, "seed|seed": "1", "seed|seed_choose": "True"}, "job": {"model_class": "Job", "id": "2ff59c252066523b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:58:31.013072", "create_time": "2023-05-15T10:58:12.526948", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-lm5cr", "command_line": "bedtools shuffle -g '/galaxy/server/database/objects/d/f/d/dataset_dfd3879c-b680-4e6e-b0f4-b890e136d911.dat'  -i '/galaxy/server/database/objects/c/d/4/dataset_cd42d97d-792d-4be1-b228-735c87492a5a.dat'  -seed 1     -maxTries 1000 > '/galaxy/server/database/objects/9/d/7/dataset_9d7288f9-1d52-479c-a40c-46c83b3ec231.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 250, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "7f1a51010e06cb73", "src": "hda", "uuid": "cd42d97d-792d-4be1-b228-735c87492a5a"}, "genome": {"id": "71f3402a979f5471", "src": "hda", "uuid": "dfd3879c-b680-4e6e-b0f4-b890e136d911"}}, "outputs": {"output": {"id": "7ed578add6a000d1", "src": "hda", "uuid": "9d7288f9-1d52-479c-a40c-46c83b3ec231"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:58:22", "plugin": "core", "name": "end_epoch", "raw_value": "1684148302.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:58:22", "plugin": "core", "name": "start_epoch", "raw_value": "1684148302.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 37.16358685493469, "inputs": {"inputA": {"src": "hda", "id": "7f1a51010e06cb73"}, "genome_file_opts|genome": {"src": "hda", "id": "71f3402a979f5471"}, "genome_file_opts|genome_file_opts_selector": "hist", "chrom": true, "seed|seed": "1", "seed|seed_choose": "True"}, "job": {"model_class": "Job", "id": "c5469db973e2c433", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:58:34.048640", "create_time": "2023-05-15T10:58:21.018275", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-lsgsz", "command_line": "bedtools shuffle -g '/galaxy/server/database/objects/d/f/d/dataset_dfd3879c-b680-4e6e-b0f4-b890e136d911.dat'  -i '/galaxy/server/database/objects/c/d/4/dataset_cd42d97d-792d-4be1-b228-735c87492a5a.dat'  -seed 1 -chrom    -maxTries 1000 > '/galaxy/server/database/objects/5/f/8/dataset_5f8f8db2-493f-4c7a-a1c7-7bda93a4c8bf.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "true", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 250, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "7f1a51010e06cb73", "src": "hda", "uuid": "cd42d97d-792d-4be1-b228-735c87492a5a"}, "genome": {"id": "71f3402a979f5471", "src": "hda", "uuid": "dfd3879c-b680-4e6e-b0f4-b890e136d911"}}, "outputs": {"output": {"id": "39b29e59b5922ffd", "src": "hda", "uuid": "5f8f8db2-493f-4c7a-a1c7-7bda93a4c8bf"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:58:24", "plugin": "core", "name": "end_epoch", "raw_value": "1684148304.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:58:24", "plugin": "core", "name": "start_epoch", "raw_value": "1684148304.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 40.2883243560791, "inputs": {"inputA": {"src": "hda", "id": "f89e65b43f5def48"}, "genome_file_opts|genome": {"src": "hda", "id": "f15d84ba21b57818"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed": "1", "seed|seed_choose": "True", "add_bed|excl": {"src": "hda", "id": "1658e14dca05df4f"}, "add_bed|add_bed_select": "not_be"}, "job": {"model_class": "Job", "id": "dd5442b4da2c893d", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:59:11.222573", "create_time": "2023-05-15T10:58:52.367213", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-rllgb", "command_line": "bedtools shuffle -g '/galaxy/server/database/objects/9/1/9/dataset_919b562a-cbb6-4223-bf14-3a4c048b7470.dat'  -i '/galaxy/server/database/objects/2/8/6/dataset_28631986-54ae-474d-aa72-6aa7f2f477f7.dat'  -seed 1 -excl /galaxy/server/database/objects/2/8/a/dataset_28a30ba4-ffd0-4459-9fca-5aa6da33f6bb.dat     -maxTries 1000 > '/galaxy/server/database/objects/a/1/4/dataset_a14c7984-5a66-492a-b29e-6d6c6106b1d2.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 1, \"add_bed_select\": \"not_be\", \"excl\": {\"values\": [{\"id\": 255, \"src\": \"hda\"}]}, \"overlap\": \"\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 257, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "f89e65b43f5def48", "src": "hda", "uuid": "28631986-54ae-474d-aa72-6aa7f2f477f7"}, "genome": {"id": "f15d84ba21b57818", "src": "hda", "uuid": "919b562a-cbb6-4223-bf14-3a4c048b7470"}, "excl": {"id": "1658e14dca05df4f", "src": "hda", "uuid": "28a30ba4-ffd0-4459-9fca-5aa6da33f6bb"}}, "outputs": {"output": {"id": "da9f064729407923", "src": "hda", "uuid": "a14c7984-5a66-492a-b29e-6d6c6106b1d2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:59:01", "plugin": "core", "name": "end_epoch", "raw_value": "1684148341.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:59:01", "plugin": "core", "name": "start_epoch", "raw_value": "1684148341.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 37.867948055267334, "inputs": {"inputA": {"src": "hda", "id": "f89e65b43f5def48"}, "genome_file_opts|genome": {"src": "hda", "id": "f15d84ba21b57818"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed": "3", "seed|seed_choose": "True", "allow_beyond": true}, "job": {"model_class": "Job", "id": "b65fedd4073fd11d", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:59:12.194614", "create_time": "2023-05-15T10:58:58.781188", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-7bxpj", "command_line": "bedtools shuffle -g '/galaxy/server/database/objects/9/1/9/dataset_919b562a-cbb6-4223-bf14-3a4c048b7470.dat'  -i '/galaxy/server/database/objects/2/8/6/dataset_28631986-54ae-474d-aa72-6aa7f2f477f7.dat'  -seed 3    -allowBeyondChromEnd -maxTries 1000 > '/galaxy/server/database/objects/0/2/e/dataset_02e2939d-81cc-4121-a11d-4979f7963b91.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "true", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"3\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 257, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "f89e65b43f5def48", "src": "hda", "uuid": "28631986-54ae-474d-aa72-6aa7f2f477f7"}, "genome": {"id": "f15d84ba21b57818", "src": "hda", "uuid": "919b562a-cbb6-4223-bf14-3a4c048b7470"}}, "outputs": {"output": {"id": "70d1f1f95f42016d", "src": "hda", "uuid": "02e2939d-81cc-4121-a11d-4979f7963b91"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:59:02", "plugin": "core", "name": "end_epoch", "raw_value": "1684148342.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:59:02", "plugin": "core", "name": "start_epoch", "raw_value": "1684148342.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 39.30035662651062, "inputs": {"inputA": {"src": "hda", "id": "7cc0766f7223fd9d"}, "genome_file_opts|genome": {"src": "hda", "id": "9ac2759414023649"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|b": "5", "addition|addition_select": "b"}, "job": {"model_class": "Job", "id": "fad32c1a3da8c552", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:22:25.849408", "create_time": "2023-05-15T11:22:08.133211", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-ndlnc", "command_line": "bedtools slop    -g '/galaxy/server/database/objects/3/3/c/dataset_33cf667c-935a-4458-b7a2-7df4012543da.dat'  -i '/galaxy/server/database/objects/7/8/d/dataset_78d5d092-6362-4cb2-b56e-14ebfcfc6800.dat' -b 5  > '/galaxy/server/database/objects/c/8/3/dataset_c83b27cb-1c91-422e-9c95-9a99626f6dce.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 508, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "9ac2759414023649", "src": "hda", "uuid": "33cf667c-935a-4458-b7a2-7df4012543da"}, "inputA": {"id": "7cc0766f7223fd9d", "src": "hda", "uuid": "78d5d092-6362-4cb2-b56e-14ebfcfc6800"}}, "outputs": {"output": {"id": "18ee9d6a1d34540a", "src": "hda", "uuid": "c83b27cb-1c91-422e-9c95-9a99626f6dce"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:22:15", "plugin": "core", "name": "end_epoch", "raw_value": "1684149735.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:22:15", "plugin": "core", "name": "start_epoch", "raw_value": "1684149735.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 36.37304091453552, "inputs": {"inputA": {"src": "hda", "id": "7cc0766f7223fd9d"}, "genome_file_opts|genome": {"src": "hda", "id": "9ac2759414023649"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|l": "2", "addition|r": "3", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "9c7cc6707f15a04e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:22:26.871482", "create_time": "2023-05-15T11:22:13.317473", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-2b9wh", "command_line": "bedtools slop    -g '/galaxy/server/database/objects/3/3/c/dataset_33cf667c-935a-4458-b7a2-7df4012543da.dat'  -i '/galaxy/server/database/objects/7/8/d/dataset_78d5d092-6362-4cb2-b56e-14ebfcfc6800.dat' -l 2 -r 3  > '/galaxy/server/database/objects/1/1/5/dataset_115ea9c3-4067-453b-9e81-aba83e785405.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 508, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "9ac2759414023649", "src": "hda", "uuid": "33cf667c-935a-4458-b7a2-7df4012543da"}, "inputA": {"id": "7cc0766f7223fd9d", "src": "hda", "uuid": "78d5d092-6362-4cb2-b56e-14ebfcfc6800"}}, "outputs": {"output": {"id": "33eb10a118be08e2", "src": "hda", "uuid": "115ea9c3-4067-453b-9e81-aba83e785405"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:22:17", "plugin": "core", "name": "end_epoch", "raw_value": "1684149737.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:22:17", "plugin": "core", "name": "start_epoch", "raw_value": "1684149737.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 40.36024713516235, "inputs": {"inputA": {"src": "hda", "id": "68de5bf9ce32fc75"}, "genome_file_opts|genome": {"src": "hda", "id": "9742c97ce56ee7cf"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|b": "5", "addition|addition_select": "b"}, "job": {"model_class": "Job", "id": "109f9f11e4d40645", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:48:20.979027", "create_time": "2023-05-15T10:47:59.451771", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-7l49l", "command_line": "bedtools slop   -g '/galaxy/server/database/objects/9/5/a/dataset_95a25fce-ec0d-4df4-aa3c-3c21306bb077.dat'  -i '/galaxy/server/database/objects/9/8/c/dataset_98c2ca8f-e20e-4f69-b9a8-a11b9c2fce60.dat' -b 5  > '/galaxy/server/database/objects/d/2/c/dataset_d2c2a8c9-b972-4a71-a2a7-63a24f0e5b33.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "68de5bf9ce32fc75", "src": "hda", "uuid": "98c2ca8f-e20e-4f69-b9a8-a11b9c2fce60"}, "genome": {"id": "9742c97ce56ee7cf", "src": "hda", "uuid": "95a25fce-ec0d-4df4-aa3c-3c21306bb077"}}, "outputs": {"output": {"id": "99cc8ab0fdca9f77", "src": "hda", "uuid": "d2c2a8c9-b972-4a71-a2a7-63a24f0e5b33"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:48:10", "plugin": "core", "name": "end_epoch", "raw_value": "1684147690.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:48:10", "plugin": "core", "name": "start_epoch", "raw_value": "1684147690.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 29.171558380126953, "inputs": {"inputA": {"src": "hda", "id": "68de5bf9ce32fc75"}, "genome_file_opts|genome": {"src": "hda", "id": "9742c97ce56ee7cf"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|l": "2", "addition|r": "3", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "fb5481cc76948228", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:48:21.942768", "create_time": "2023-05-15T10:48:09.718934", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-dwpzq", "command_line": "bedtools slop   -g '/galaxy/server/database/objects/9/5/a/dataset_95a25fce-ec0d-4df4-aa3c-3c21306bb077.dat'  -i '/galaxy/server/database/objects/9/8/c/dataset_98c2ca8f-e20e-4f69-b9a8-a11b9c2fce60.dat' -l 2 -r 3  > '/galaxy/server/database/objects/6/4/5/dataset_645604c5-34a8-451e-82a6-d6387ce7530c.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "68de5bf9ce32fc75", "src": "hda", "uuid": "98c2ca8f-e20e-4f69-b9a8-a11b9c2fce60"}, "genome": {"id": "9742c97ce56ee7cf", "src": "hda", "uuid": "95a25fce-ec0d-4df4-aa3c-3c21306bb077"}}, "outputs": {"output": {"id": "614d335e12c3a227", "src": "hda", "uuid": "645604c5-34a8-451e-82a6-d6387ce7530c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:48:12", "plugin": "core", "name": "end_epoch", "raw_value": "1684147692.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:48:12", "plugin": "core", "name": "start_epoch", "raw_value": "1684147692.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 28.19752049446106, "inputs": {"input": {"src": "hda", "id": "2a9d5ad412b025be"}, "option": ""}, "job": {"model_class": "Job", "id": "18ee9d6a1d34540a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:25:42.127794", "create_time": "2023-05-15T11:25:29.603755", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-f8lpq", "command_line": "sortBed -i '/galaxy/server/database/objects/2/c/7/dataset_2c7c53d1-26a5-4776-8119-667027607445.dat'   -g '/cvmfs/data.galaxyproject.org/managed/len/hg19_rCRS_pUC18_phiX174.len'  > '/galaxy/server/database/objects/a/6/4/dataset_a6498d54-c071-41e6-be7d-f247b9f2d0e8.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": \"hg19_rCRS_pUC18_phiX174\", \"genome_file_opts_selector\": \"loc\"}", "option": "\"\""}, "inputs": {"input": {"id": "2a9d5ad412b025be", "src": "hda", "uuid": "2c7c53d1-26a5-4776-8119-667027607445"}}, "outputs": {"output": {"id": "2a17dac4aeb1fde7", "src": "hda", "uuid": "a6498d54-c071-41e6-be7d-f247b9f2d0e8"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:25:32", "plugin": "core", "name": "end_epoch", "raw_value": "1684149932.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:25:32", "plugin": "core", "name": "start_epoch", "raw_value": "1684149932.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 39.93899321556091, "inputs": {"input": {"src": "hda", "id": "9806425de68b95ca"}, "option": ""}, "job": {"model_class": "Job", "id": "c9b341d0ac4f525a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:26:07.587010", "create_time": "2023-05-15T11:25:44.309913", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-b648r", "command_line": "sortBed -i '/galaxy/server/database/objects/c/4/f/dataset_c4f4c03f-f80f-40ef-abe2-52e1435738f2.dat'   -g '/cvmfs/data.galaxyproject.org/managed/len/hg19_rCRS_pUC18_phiX174.len'  > '/galaxy/server/database/objects/5/2/f/dataset_52f9e2bc-8ff8-4b9b-bdd0-89321b4f49b9.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": \"hg19_rCRS_pUC18_phiX174\", \"genome_file_opts_selector\": \"loc\"}", "option": "\"\""}, "inputs": {"input": {"id": "9806425de68b95ca", "src": "hda", "uuid": "c4f4c03f-f80f-40ef-abe2-52e1435738f2"}}, "outputs": {"output": {"id": "bcf8144e85d558fd", "src": "hda", "uuid": "52f9e2bc-8ff8-4b9b-bdd0-89321b4f49b9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:25:57", "plugin": "core", "name": "end_epoch", "raw_value": "1684149957.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:25:57", "plugin": "core", "name": "start_epoch", "raw_value": "1684149957.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 29.884702444076538, "inputs": {"input": {"src": "hda", "id": "9806425de68b95ca"}, "option": "", "genome_file_opts|genome": {"src": "hda", "id": "9c9968dd5eea74fd"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "559d1c5f93499914", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:26:11.963889", "create_time": "2023-05-15T11:26:00.205997", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-6p4nx", "command_line": "sortBed -i '/galaxy/server/database/objects/c/4/f/dataset_c4f4c03f-f80f-40ef-abe2-52e1435738f2.dat'   -g '/galaxy/server/database/objects/a/a/7/dataset_aa71b792-a3e5-4d7d-8b06-cce019166960.dat'  > '/galaxy/server/database/objects/f/9/e/dataset_f9e7e89a-f6c5-4310-b9f4-c9f70c1cd283.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 545, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "option": "\"\""}, "inputs": {"genome": {"id": "9c9968dd5eea74fd", "src": "hda", "uuid": "aa71b792-a3e5-4d7d-8b06-cce019166960"}, "input": {"id": "9806425de68b95ca", "src": "hda", "uuid": "c4f4c03f-f80f-40ef-abe2-52e1435738f2"}}, "outputs": {"output": {"id": "1c70cebd0bf8e0be", "src": "hda", "uuid": "f9e7e89a-f6c5-4310-b9f4-c9f70c1cd283"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:26:01", "plugin": "core", "name": "end_epoch", "raw_value": "1684149961.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:26:01", "plugin": "core", "name": "start_epoch", "raw_value": "1684149961.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 27.776301860809326, "inputs": {"input": {"src": "hda", "id": "c778fcdb134e3569"}, "option": ""}, "job": {"model_class": "Job", "id": "226aa83658c06def", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:54:18.328158", "create_time": "2023-05-15T10:54:07.147283", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-kdp5k", "command_line": "sortBed -i '/galaxy/server/database/objects/a/2/d/dataset_a2d24d73-e430-46c4-a872-b0c2fd307294.dat'    > '/galaxy/server/database/objects/e/e/b/dataset_eeb2c617-5d6f-44ef-b175-0f035a5de929.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "option": "\"\""}, "inputs": {"input": {"id": "c778fcdb134e3569", "src": "hda", "uuid": "a2d24d73-e430-46c4-a872-b0c2fd307294"}}, "outputs": {"output": {"id": "b85b8c5d87c01258", "src": "hda", "uuid": "eeb2c617-5d6f-44ef-b175-0f035a5de929"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:54:09", "plugin": "core", "name": "end_epoch", "raw_value": "1684148049.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:54:09", "plugin": "core", "name": "start_epoch", "raw_value": "1684148049.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 12.945955991744995, "inputs": {"input": {"src": "hda", "id": "78882bc280bb2850"}, "option": ""}, "execution_problem": "parameter 'input': the previously selected dataset has entered an unusable state", "dynamic_param_error": false, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 9.186919212341309, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 34.91375231742859, "inputs": {"input": {"src": "hda", "id": "3366d02fdd68220c"}}, "job": {"model_class": "Job", "id": "6c0a10df2fd72034", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:11:11.732987", "create_time": "2023-05-15T11:10:53.307211", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-b5vh7", "command_line": "bedtools spacing -i '/galaxy/server/database/objects/e/0/2/dataset_e025722e-5fae-4afc-ad16-e6ccf4951d06.dat' > '/galaxy/server/database/objects/5/1/6/dataset_516cf76a-5fab-4751-9cd7-26d6613cc353.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input": {"id": "3366d02fdd68220c", "src": "hda", "uuid": "e025722e-5fae-4afc-ad16-e6ccf4951d06"}}, "outputs": {"output": {"id": "7ebc50a5b347ff3c", "src": "hda", "uuid": "516cf76a-5fab-4751-9cd7-26d6613cc353"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:10:59", "plugin": "core", "name": "end_epoch", "raw_value": "1684149059.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:10:59", "plugin": "core", "name": "start_epoch", "raw_value": "1684149059.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 30.216038465499878, "inputs": {"inputA": {"src": "hda", "id": "52be9a70d0b9d66e"}, "inputB": {"src": "hda", "id": "93bd836accb93bed"}}, "job": {"model_class": "Job", "id": "248ad8ba4018fd3c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:49:27.687690", "create_time": "2023-05-15T10:49:15.810755", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-79w2r", "command_line": "bedtools subtract  -a '/galaxy/server/database/objects/d/3/8/dataset_d38bb7c0-beb3-46f5-b5fd-cc1cd47131e2.dat' -b '/galaxy/server/database/objects/2/0/7/dataset_2072311a-d1e7-4f65-951f-a0058fbd23fc.dat'    > '/galaxy/server/database/objects/4/5/7/dataset_45785e26-083a-458c-a317-87a2a415828b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "removeIfOverlap": "\"\"", "overlap": "\"\"", "strand": "\"\""}, "inputs": {"inputA": {"id": "52be9a70d0b9d66e", "src": "hda", "uuid": "d38bb7c0-beb3-46f5-b5fd-cc1cd47131e2"}, "inputB": {"id": "93bd836accb93bed", "src": "hda", "uuid": "2072311a-d1e7-4f65-951f-a0058fbd23fc"}}, "outputs": {"output": {"id": "fc9656277def5a45", "src": "hda", "uuid": "45785e26-083a-458c-a317-87a2a415828b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:49:18", "plugin": "core", "name": "end_epoch", "raw_value": "1684147758.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:49:18", "plugin": "core", "name": "start_epoch", "raw_value": "1684147758.0000000"}, {"title": "Memory Allocated (MB)", "value": "8589", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8589.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 36.744088649749756, "inputs": {"inputA": {"src": "hda", "id": "a2734ffe62a8322f"}, "inputB": {"src": "hda", "id": "4dd33907461b83da"}, "overlap": "0.80"}, "job": {"model_class": "Job", "id": "0c409a86f375e0a2", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:49:58.360136", "create_time": "2023-05-15T10:49:41.682967", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-l6shs", "command_line": "bedtools subtract  -a '/galaxy/server/database/objects/f/4/e/dataset_f4ef11ea-8a96-42bc-9a70-b0ee57c69202.dat' -b '/galaxy/server/database/objects/6/0/8/dataset_608d6031-edee-4638-9eb9-039a0022e864.dat'  -f 0.8   > '/galaxy/server/database/objects/8/2/d/dataset_82de44d3-a77b-4a19-840b-a50df7d28aea.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "removeIfOverlap": "\"\"", "overlap": "\"0.8\"", "strand": "\"\""}, "inputs": {"inputA": {"id": "a2734ffe62a8322f", "src": "hda", "uuid": "f4ef11ea-8a96-42bc-9a70-b0ee57c69202"}, "inputB": {"id": "4dd33907461b83da", "src": "hda", "uuid": "608d6031-edee-4638-9eb9-039a0022e864"}}, "outputs": {"output": {"id": "b36764defe7ef6f8", "src": "hda", "uuid": "82de44d3-a77b-4a19-840b-a50df7d28aea"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:49:48", "plugin": "core", "name": "end_epoch", "raw_value": "1684147788.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:49:48", "plugin": "core", "name": "start_epoch", "raw_value": "1684147788.0000000"}, {"title": "Memory Allocated (MB)", "value": "8589", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8589.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 31.634819984436035, "inputs": {"inputA": {"src": "hda", "id": "a2734ffe62a8322f"}, "inputB": {"src": "hda", "id": "4dd33907461b83da"}, "removeIfOverlap": "-A"}, "job": {"model_class": "Job", "id": "bc023ea42c39313a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:49:59.290498", "create_time": "2023-05-15T10:49:46.475362", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-2p5cs", "command_line": "bedtools subtract  -a '/galaxy/server/database/objects/f/4/e/dataset_f4ef11ea-8a96-42bc-9a70-b0ee57c69202.dat' -b '/galaxy/server/database/objects/6/0/8/dataset_608d6031-edee-4638-9eb9-039a0022e864.dat'   -A > '/galaxy/server/database/objects/c/9/f/dataset_c9f60ae8-bf91-49ae-919a-c4e06e635491.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "removeIfOverlap": "\"-A\"", "overlap": "\"\"", "strand": "\"\""}, "inputs": {"inputA": {"id": "a2734ffe62a8322f", "src": "hda", "uuid": "f4ef11ea-8a96-42bc-9a70-b0ee57c69202"}, "inputB": {"id": "4dd33907461b83da", "src": "hda", "uuid": "608d6031-edee-4638-9eb9-039a0022e864"}}, "outputs": {"output": {"id": "1df7b842760586c2", "src": "hda", "uuid": "c9f60ae8-bf91-49ae-919a-c4e06e635491"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:49:49", "plugin": "core", "name": "end_epoch", "raw_value": "1684147789.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:49:49", "plugin": "core", "name": "start_epoch", "raw_value": "1684147789.0000000"}, {"title": "Memory Allocated (MB)", "value": "8589", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8589.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_tagbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_tagbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 15.976888179779053, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 38.90674686431885, "inputs": {"tag|inputs": [{"src": "hda", "id": "fd2e5e6e82cbdc7b"}, {"src": "hda", "id": "ec51df06c367b9f5"}, {"src": "hda", "id": "a56859317b758be8"}], "tag|tag_select": "tag", "empty|empty_selector": ""}, "job": {"model_class": "Job", "id": "1fa1406b4ab02cea", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:45:26.466267", "create_time": "2023-05-15T10:45:15.746764", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-n422n", "command_line": "unionBedGraphs  -filler 'N/A'     -i '/galaxy/server/database/objects/2/d/d/dataset_2ddd44bd-17b3-4237-b77c-07bf3d11e7ed.dat' '/galaxy/server/database/objects/1/5/3/dataset_1535ac47-313b-4cce-a185-006559934704.dat' '/galaxy/server/database/objects/7/1/c/dataset_71c4b0e2-3d56-469e-bdfa-43b5aa6181b8.dat' > '/galaxy/server/database/objects/4/3/a/dataset_43a05f5d-f955-4c08-9fd4-fd1b9eaa518d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 105, \"src\": \"hda\"}, {\"id\": 106, \"src\": \"hda\"}, {\"id\": 107, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "fd2e5e6e82cbdc7b", "src": "hda", "uuid": "2ddd44bd-17b3-4237-b77c-07bf3d11e7ed"}, "inputs1": {"id": "fd2e5e6e82cbdc7b", "src": "hda", "uuid": "2ddd44bd-17b3-4237-b77c-07bf3d11e7ed"}, "inputs2": {"id": "ec51df06c367b9f5", "src": "hda", "uuid": "1535ac47-313b-4cce-a185-006559934704"}, "inputs3": {"id": "a56859317b758be8", "src": "hda", "uuid": "71c4b0e2-3d56-469e-bdfa-43b5aa6181b8"}}, "outputs": {"output": {"id": "c51c863727fa7e39", "src": "hda", "uuid": "43a05f5d-f955-4c08-9fd4-fd1b9eaa518d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:45:17", "plugin": "core", "name": "end_epoch", "raw_value": "1684147517.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:45:17", "plugin": "core", "name": "start_epoch", "raw_value": "1684147517.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 20.03092074394226, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 12.60568881034851, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 46.330119609832764, "inputs": {"tag|bedgraphs_0|input": {"src": "hda", "id": "9398ac51f0ef02d2"}, "tag|bedgraphs_0|custom_name": "first", "tag|bedgraphs_1|input": {"src": "hda", "id": "cfc0f769c0d3bedd"}, "tag|bedgraphs_1|custom_name": "second", "tag|bedgraphs_2|input": {"src": "hda", "id": "d68c7185f9a3fe5c"}, "tag|bedgraphs_2|custom_name": "third", "tag|tag_select": "custom", "empty|genome_file_opts|genome": {"src": "hda", "id": "aab712a084d3fa66"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty"}, "job": {"model_class": "Job", "id": "91305b843cbf12ea", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:46:24.825029", "create_time": "2023-05-15T10:46:12.602274", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-xz2tj", "command_line": "unionBedGraphs  -filler 'N/A' -empty  -g '/galaxy/server/database/objects/a/6/4/dataset_a6400eb2-705f-4319-b9d5-823f95127344.dat'   -i '/galaxy/server/database/objects/4/d/6/dataset_4d6664d2-1903-4969-baf1-08dab734ba96.dat' '/galaxy/server/database/objects/a/0/8/dataset_a0821531-2072-4af4-8072-1890f2c8049d.dat' '/galaxy/server/database/objects/6/d/b/dataset_6dbfda9b-d876-4eb1-a44a-007eaf458291.dat' -names 'first' 'second' 'third' > '/galaxy/server/database/objects/3/5/a/dataset_35a62b78-e0e6-4af5-a70c-f92afe801673.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 120, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "tag": "{\"__current_case__\": 1, \"bedgraphs\": [{\"__index__\": 0, \"custom_name\": \"first\", \"input\": {\"values\": [{\"id\": 117, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"custom_name\": \"second\", \"input\": {\"values\": [{\"id\": 118, \"src\": \"hda\"}]}}, {\"__index__\": 2, \"custom_name\": \"third\", \"input\": {\"values\": [{\"id\": 119, \"src\": \"hda\"}]}}], \"tag_select\": \"custom\"}"}, "inputs": {"tag|bedgraphs_0|input": {"id": "9398ac51f0ef02d2", "src": "hda", "uuid": "4d6664d2-1903-4969-baf1-08dab734ba96"}, "tag|bedgraphs_0|input1": {"id": "9398ac51f0ef02d2", "src": "hda", "uuid": "4d6664d2-1903-4969-baf1-08dab734ba96"}, "tag|bedgraphs_1|input": {"id": "cfc0f769c0d3bedd", "src": "hda", "uuid": "a0821531-2072-4af4-8072-1890f2c8049d"}, "tag|bedgraphs_1|input1": {"id": "cfc0f769c0d3bedd", "src": "hda", "uuid": "a0821531-2072-4af4-8072-1890f2c8049d"}, "tag|bedgraphs_2|input": {"id": "d68c7185f9a3fe5c", "src": "hda", "uuid": "6dbfda9b-d876-4eb1-a44a-007eaf458291"}, "tag|bedgraphs_2|input1": {"id": "d68c7185f9a3fe5c", "src": "hda", "uuid": "6dbfda9b-d876-4eb1-a44a-007eaf458291"}, "empty|genome": {"id": "aab712a084d3fa66", "src": "hda", "uuid": "a6400eb2-705f-4319-b9d5-823f95127344"}}, "outputs": {"output": {"id": "8af8739be969deda", "src": "hda", "uuid": "35a62b78-e0e6-4af5-a70c-f92afe801673"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:46:15", "plugin": "core", "name": "end_epoch", "raw_value": "1684147575.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:46:15", "plugin": "core", "name": "start_epoch", "raw_value": "1684147575.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 37.41665983200073, "inputs": {"inputA": {"src": "hda", "id": "9e875b5668aa3cbc"}, "inputB": {"src": "hda", "id": "d6346db6937162d8"}}, "job": {"model_class": "Job", "id": "9bf546da1a4f78fb", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:52:49.315373", "create_time": "2023-05-15T10:52:30.715800", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-4rhgb", "command_line": "bedtools window -a '/galaxy/server/database/objects/7/5/a/dataset_75a1bde8-a91b-47c3-8253-6d619057a161.dat' -b '/galaxy/server/database/objects/1/2/2/dataset_122bda7b-433b-4e6b-aff1-d6d67134b67c.dat'   -w 1000     > '/galaxy/server/database/objects/a/a/f/dataset_aafc9bf9-4d49-4901-a4f1-bb4a877e3b7a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "nooverlaps": "false", "number": "false", "original": "false", "strandB": "\"\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"window\", \"w\": \"1000\"}", "bed": "false"}, "inputs": {"inputB": {"id": "d6346db6937162d8", "src": "hda", "uuid": "122bda7b-433b-4e6b-aff1-d6d67134b67c"}, "inputA": {"id": "9e875b5668aa3cbc", "src": "hda", "uuid": "75a1bde8-a91b-47c3-8253-6d619057a161"}}, "outputs": {"output": {"id": "5e459007aa394ee3", "src": "hda", "uuid": "aafc9bf9-4d49-4901-a4f1-bb4a877e3b7a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:52:39", "plugin": "core", "name": "end_epoch", "raw_value": "1684147959.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:52:39", "plugin": "core", "name": "start_epoch", "raw_value": "1684147959.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 30.649457216262817, "inputs": {"inputA": {"src": "hda", "id": "9e875b5668aa3cbc"}, "inputB": {"src": "hda", "id": "d6346db6937162d8"}, "addition|w": "5000", "addition|addition_select": "window"}, "job": {"model_class": "Job", "id": "3e5d4fc61555439f", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:52:50.347656", "create_time": "2023-05-15T10:52:38.094106", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-zv2kj", "command_line": "bedtools window -a '/galaxy/server/database/objects/7/5/a/dataset_75a1bde8-a91b-47c3-8253-6d619057a161.dat' -b '/galaxy/server/database/objects/1/2/2/dataset_122bda7b-433b-4e6b-aff1-d6d67134b67c.dat'   -w 5000     > '/galaxy/server/database/objects/4/d/0/dataset_4d0c6dec-59be-4ee8-8e7e-58791bceae6c.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "nooverlaps": "false", "number": "false", "original": "false", "strandB": "\"\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"window\", \"w\": \"5000\"}", "bed": "false"}, "inputs": {"inputA": {"id": "9e875b5668aa3cbc", "src": "hda", "uuid": "75a1bde8-a91b-47c3-8253-6d619057a161"}, "inputB": {"id": "d6346db6937162d8", "src": "hda", "uuid": "122bda7b-433b-4e6b-aff1-d6d67134b67c"}}, "outputs": {"output": {"id": "1c91f37983ef293f", "src": "hda", "uuid": "4d0c6dec-59be-4ee8-8e7e-58791bceae6c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:52:41", "plugin": "core", "name": "end_epoch", "raw_value": "1684147961.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:52:41", "plugin": "core", "name": "start_epoch", "raw_value": "1684147961.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 31.599737644195557, "inputs": {"inputA": {"src": "hda", "id": "fecb5ba0adec4daf"}, "inputB": {"src": "hda", "id": "793a05fa125d6e91"}, "addition|l": "200", "addition|r": "20000", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "24f32125984de19a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:53:20.907946", "create_time": "2023-05-15T10:53:10.171545", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-zjjc6", "command_line": "bedtools window -a '/galaxy/server/database/objects/f/1/8/dataset_f18a8c81-2f0b-4f67-96cb-3f2353bfbf89.dat' -b '/galaxy/server/database/objects/6/2/7/dataset_627063e7-f752-486f-acdf-6fb4c24ed200.dat'   -l 200 -r 20000     > '/galaxy/server/database/objects/9/8/9/dataset_98972a86-1c83-4325-8631-e0768e4c6495.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "nooverlaps": "false", "number": "false", "original": "false", "strandB": "\"\"", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"200\", \"r\": \"20000\"}", "bed": "false"}, "inputs": {"inputB": {"id": "793a05fa125d6e91", "src": "hda", "uuid": "627063e7-f752-486f-acdf-6fb4c24ed200"}, "inputA": {"id": "fecb5ba0adec4daf", "src": "hda", "uuid": "f18a8c81-2f0b-4f67-96cb-3f2353bfbf89"}}, "outputs": {"output": {"id": "690fe508819eb281", "src": "hda", "uuid": "98972a86-1c83-4325-8631-e0768e4c6495"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:53:11", "plugin": "core", "name": "end_epoch", "raw_value": "1684147991.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:53:11", "plugin": "core", "name": "start_epoch", "raw_value": "1684147991.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 0, "time_seconds": 49.633920669555664, "inputs": {"input_tabular": [{"src": "hda", "id": "8ca8a065e06e5f8a"}, {"src": "hda", "id": "2c7eed67d07b6502"}, {"src": "hda", "id": "c613126afd7bddb1"}], "identifier_column": "1", "has_header": "1", "old_col_in_header": true, "fill_char": ".", "include_outputs": null}, "job": {"model_class": "Job", "id": "5328f446ac948af4", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:33:55.656943", "create_time": "2023-05-15T11:33:36.124060", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-fl9tm", "command_line": "sh '/galaxy/server/database/jobs_directory/000/571/configs/tmplzpgvab1'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "include_outputs": null, "fill_char": "\".\"", "old_col_in_header": "true", "has_header": "\"1\"", "identifier_column": "\"1\""}, "inputs": {"input_tabular3": {"id": "c613126afd7bddb1", "src": "hda", "uuid": "feb5a5d8-5a08-4e8d-b868-dbf84b48c07e"}, "input_tabular2": {"id": "2c7eed67d07b6502", "src": "hda", "uuid": "51f2bbff-fa9b-4e58-b21a-1941c583f14a"}, "input_tabular1": {"id": "8ca8a065e06e5f8a", "src": "hda", "uuid": "00201a9e-6e6c-49ea-b436-9c30bf7bd1fb"}, "input_tabular": {"id": "8ca8a065e06e5f8a", "src": "hda", "uuid": "00201a9e-6e6c-49ea-b436-9c30bf7bd1fb"}}, "outputs": {"tabular_output": {"id": "fde20687baa4c118", "src": "hda", "uuid": "14ae8b53-be12-42df-9ca5-a5aaaa36686f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:33:46", "plugin": "core", "name": "end_epoch", "raw_value": "1684150426.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:33:45", "plugin": "core", "name": "start_epoch", "raw_value": "1684150425.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 1, "time_seconds": 46.40949535369873, "inputs": {"input_tabular": [{"src": "hda", "id": "93beb6df2b73202d"}, {"src": "hda", "id": "67740a2e549d0c53"}, {"src": "hda", "id": "8a69af4b47661d8a"}], "identifier_column": "1", "has_header": "0", "old_col_in_header": true, "fill_char": ".", "include_outputs": null}, "job": {"model_class": "Job", "id": "b13e7fe45d676d92", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:33:52.618496", "create_time": "2023-05-15T11:33:33.044107", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-t6ztk", "command_line": "sh '/galaxy/server/database/jobs_directory/000/570/configs/tmpiumjw22x'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "include_outputs": null, "fill_char": "\".\"", "old_col_in_header": "true", "has_header": "\"0\"", "identifier_column": "\"1\""}, "inputs": {"input_tabular3": {"id": "8a69af4b47661d8a", "src": "hda", "uuid": "c6f9bf54-daa8-4057-b7c8-df5b21b8f3f4"}, "input_tabular2": {"id": "67740a2e549d0c53", "src": "hda", "uuid": "bf50007c-dae7-42c0-b1a0-5fbce1764ac9"}, "input_tabular1": {"id": "93beb6df2b73202d", "src": "hda", "uuid": "a32715cc-fcd3-487d-b505-f596ef967304"}, "input_tabular": {"id": "93beb6df2b73202d", "src": "hda", "uuid": "a32715cc-fcd3-487d-b505-f596ef967304"}}, "outputs": {"tabular_output": {"id": "4448b1c23acf8233", "src": "hda", "uuid": "0dbb5eac-3822-479e-b3c1-c297d6e70ce1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-05-15 11:33:43", "plugin": "core", "name": "end_epoch", "raw_value": "1684150423.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:33:42", "plugin": "core", "name": "start_epoch", "raw_value": "1684150422.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 2, "time_seconds": 34.198394775390625, "inputs": {"input_tabular": [{"src": "hda", "id": "82f6b8e467a2640c"}, {"src": "hda", "id": "764dca429378588c"}, {"src": "hda", "id": "31d6c04e6cfb9c45"}], "identifier_column": "1", "has_header": "1", "old_col_in_header": false, "fill_char": ".", "include_outputs": null}, "job": {"model_class": "Job", "id": "5c415e00b12d5ad8", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:34:26.802369", "create_time": "2023-05-15T11:34:14.750688", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-bgj9t", "command_line": "sh '/galaxy/server/database/jobs_directory/000/578/configs/tmpel3vqw3x'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "include_outputs": null, "fill_char": "\".\"", "old_col_in_header": "false", "has_header": "\"1\"", "identifier_column": "\"1\""}, "inputs": {"input_tabular3": {"id": "31d6c04e6cfb9c45", "src": "hda", "uuid": "3bda0405-de11-4ce8-8dc8-a0955aa15f70"}, "input_tabular2": {"id": "764dca429378588c", "src": "hda", "uuid": "16b58f25-c1cf-4575-895f-6961512fa80b"}, "input_tabular1": {"id": "82f6b8e467a2640c", "src": "hda", "uuid": "0f678a4c-c415-44f4-b736-7f111ce49930"}, "input_tabular": {"id": "82f6b8e467a2640c", "src": "hda", "uuid": "0f678a4c-c415-44f4-b736-7f111ce49930"}}, "outputs": {"tabular_output": {"id": "075c6724fd28e364", "src": "hda", "uuid": "0851fc3a-d920-4b77-bfc3-bbacc54900d9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:34:17", "plugin": "core", "name": "end_epoch", "raw_value": "1684150457.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:34:17", "plugin": "core", "name": "start_epoch", "raw_value": "1684150457.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 3, "time_seconds": 38.234354972839355, "inputs": {"input_tabular": [{"src": "hda", "id": "f71f2f484b73bb7b"}, {"src": "hda", "id": "dff761c70fe11891"}, {"src": "hda", "id": "5711847a080f3539"}], "identifier_column": "1", "has_header": "0", "old_col_in_header": false, "fill_char": ".", "include_outputs": null}, "job": {"model_class": "Job", "id": "ea1c38d6c1ce40a4", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:34:34.126684", "create_time": "2023-05-15T11:34:22.756170", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3", "history_id": "f3392d7459007ad8", "external_id": "gxy-thj5p", "command_line": "sh '/galaxy/server/database/jobs_directory/000/579/configs/tmpt4re83m6'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "include_outputs": null, "fill_char": "\".\"", "old_col_in_header": "false", "has_header": "\"0\"", "identifier_column": "\"1\""}, "inputs": {"input_tabular3": {"id": "5711847a080f3539", "src": "hda", "uuid": "2ba5565b-0cd5-4476-a2f3-a086e92d290e"}, "input_tabular2": {"id": "dff761c70fe11891", "src": "hda", "uuid": "3a0a6dad-ead8-4872-a11a-a670f815da1c"}, "input_tabular1": {"id": "f71f2f484b73bb7b", "src": "hda", "uuid": "c94e52d2-5984-47bf-b5bc-5f7e570fbcf1"}, "input_tabular": {"id": "f71f2f484b73bb7b", "src": "hda", "uuid": "c94e52d2-5984-47bf-b5bc-5f7e570fbcf1"}}, "outputs": {"tabular_output": {"id": "ba76cd41242c39ea", "src": "hda", "uuid": "f10d784b-abc4-426d-8fc4-02d36a48a1cf"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:34:24", "plugin": "core", "name": "end_epoch", "raw_value": "1684150464.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:34:24", "plugin": "core", "name": "start_epoch", "raw_value": "1684150464.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers", "tool_version": "0.0.2", "test_index": 0, "time_seconds": 32.7468798160553, "inputs": {"input_collection": {"src": "hdca", "id": "0b60d299454c1552"}}, "job": {"model_class": "Job", "id": "e25c34258cd2b465", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:33:06.158698", "create_time": "2023-05-15T11:32:48.918608", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2", "history_id": "f3392d7459007ad8", "external_id": "gxy-4jczz", "command_line": "mv '/galaxy/server/database/jobs_directory/000/562/configs/tmpb_ib_1nc' '/galaxy/server/database/objects/3/0/5/dataset_305fb2c8-09eb-4199-a454-c75cfe4f07b5.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "input_collection": "{\"values\": [{\"id\": 20, \"src\": \"hdca\"}]}"}, "inputs": {"input_collection1": {"id": "e0f28d543b118d13", "src": "hda", "uuid": "d60750a4-d496-492f-b64c-49dd26330239"}}, "outputs": {"output": {"id": "1331351656090b43", "src": "hda", "uuid": "305fb2c8-09eb-4199-a454-c75cfe4f07b5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:32:54", "plugin": "core", "name": "end_epoch", "raw_value": "1684150374.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:32:54", "plugin": "core", "name": "start_epoch", "raw_value": "1684150374.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers", "tool_version": "0.0.2", "test_index": 1, "time_seconds": 28.753676891326904, "inputs": {"input_collection": {"src": "hdca", "id": "ff37804c6423f6af"}}, "job": {"model_class": "Job", "id": "efa611e057f0c43a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:33:06.144510", "create_time": "2023-05-15T11:32:53.016554", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2", "history_id": "f3392d7459007ad8", "external_id": "gxy-phtbl", "command_line": "mv '/galaxy/server/database/jobs_directory/000/563/configs/tmpe6r8hqme' '/galaxy/server/database/objects/e/e/0/dataset_ee08e89c-3440-4399-b8a6-3c4e2deeb240.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "input_collection": "{\"values\": [{\"id\": 21, \"src\": \"hdca\"}]}"}, "inputs": {"input_collection1": {"id": "e0f28d543b118d13", "src": "hda", "uuid": "d60750a4-d496-492f-b64c-49dd26330239"}}, "outputs": {"output": {"id": "548e00c7032d32d4", "src": "hda", "uuid": "ee08e89c-3440-4399-b8a6-3c4e2deeb240"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:32:55", "plugin": "core", "name": "end_epoch", "raw_value": "1684150375.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:32:55", "plugin": "core", "name": "start_epoch", "raw_value": "1684150375.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 0, "time_seconds": 30.071622848510742, "inputs": {"in_file": {"src": "hda", "id": "aaf7c484305d5a66"}, "grouping": "2", "need_sort": true, "header_in": true, "header_out": true, "print_full_line": false, "ignore_case": false, "operations_0|op_name": "sum", "operations_0|op_column": "3"}, "job": {"model_class": "Job", "id": "9ae04624f0700489", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:35:30.164326", "create_time": "2023-05-15T11:35:15.145676", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-ntcdc", "command_line": "datamash --header-in --header-out --sort      --group '2' sum 3 < /galaxy/server/database/objects/5/3/c/dataset_53cb611b-4c57-4d2e-9f5d-d479d444887c.dat > '/galaxy/server/database/objects/b/d/7/dataset_bd78391d-ac71-4cba-922d-b66f5b6ad0ce.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"sum\"}]", "narm": "false", "ignore_case": "false", "print_full_line": "false", "header_out": "true", "header_in": "true", "need_sort": "true", "grouping": "\"2\""}, "inputs": {"in_file": {"id": "aaf7c484305d5a66", "src": "hda", "uuid": "53cb611b-4c57-4d2e-9f5d-d479d444887c"}}, "outputs": {"out_file": {"id": "fc05fcabc570b216", "src": "hda", "uuid": "bd78391d-ac71-4cba-922d-b66f5b6ad0ce"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:35:20", "plugin": "core", "name": "end_epoch", "raw_value": "1684150520.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:35:20", "plugin": "core", "name": "start_epoch", "raw_value": "1684150520.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Dataset metadata verification for [file_ext] failed, expected [tabular] but found [tsv]. Dataset API value was [{'id': 'fc05fcabc570b216', 'name': 'Datamash on data 683', 'history_id': 'f3392d7459007ad8', 'hid': 684, 'history_content_type': 'dataset', 'deleted': False, 'visible': True, 'type_id': 'dataset-fc05fcabc570b216', 'type': 'file', 'create_time': '2023-05-15T11:35:15.150306', 'update_time': '2023-05-15T11:35:30.137626', 'url': '/api/histories/f3392d7459007ad8/contents/fc05fcabc570b216', 'tags': [], 'dataset_id': 'fc05fcabc570b216', 'state': 'ok', 'extension': 'tsv', 'purged': False, 'api_type': 'file', 'metadata_delimiter': '\\t', 'genome_build': '?', 'misc_info': '', 'created_from_basename': None, 'copied_from_ldda_id': None, 'data_type': 'galaxy.datatypes.tabular.TSV', 'metadata_comment_lines': 1, 'metadata_columns': 2, 'file_name': '/galaxy/server/database/objects/b/d/7/dataset_bd78391d-ac71-4cba-922d-b66f5b6ad0ce.dat', 'uuid': 'bd78391d-ac71-4cba-922d-b66f5b6ad0ce', 'permissions': {'manage': ['f3392d7459007ad8'], 'access': []}, 'rerunnable': True, 'validated_state_message': None, 'annotation': None, 'download_url': '/api/histories/f3392d7459007ad8/contents/fc05fcabc570b216/display', 'model_class': 'HistoryDatasetAssociation', 'accessible': True, 'file_ext': 'tsv', 'resubmitted': False, 'metadata_data_lines': 6, 'hda_ldda': 'hda', 'file_size': 124, 'display_types': [], 'metadata_column_names': ['GroupBy(Major)', 'sum(Score)'], 'peek': '<table cellspacing=\"0\" cellpadding=\"3\"><tr><th>1.GroupBy(Major)</th><th>2.sum(Score)</th></tr><tr><td>GroupBy(Major)</td><td>sum(Score)</td></tr><tr><td>Arts</td><td>1310</td></tr><tr><td>Business</td><td>961</td></tr><tr><td>Engineering</td><td>865</td></tr><tr><td>Health-Medicine</td><td>1178</td></tr></table>', 'hashes': [], 'validated_state': 'unknown', 'display_apps': [], 'metadata_dbkey': '?', 'drs_id': 'hda-f66325ccebc22214', 'creating_job': '9ae04624f0700489', 'metadata_column_types': ['str', 'int'], 'misc_blurb': '6 lines, 1 comments', 'meta_files': [], 'sources': []}]."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 1, "time_seconds": 24.93099880218506, "inputs": {"in_file": {"src": "hda", "id": "aaf7c484305d5a66"}, "grouping": "2", "need_sort": true, "header_in": true, "header_out": true, "print_full_line": false, "ignore_case": false, "operations_0|op_name": "sum", "operations_0|op_column": "3"}, "job": {"model_class": "Job", "id": "192e0157bb47cabe", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:35:28.912798", "create_time": "2023-05-15T11:35:19.540414", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-q5czw", "command_line": "datamash --header-in --header-out --sort      --group '2' sum 3 < /galaxy/server/database/objects/5/3/c/dataset_53cb611b-4c57-4d2e-9f5d-d479d444887c.dat > '/galaxy/server/database/objects/c/9/f/dataset_c9f14734-7cce-4a05-bad3-dcb1011ba4e0.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"sum\"}]", "narm": "false", "ignore_case": "false", "print_full_line": "false", "header_out": "true", "header_in": "true", "need_sort": "true", "grouping": "\"2\""}, "inputs": {"in_file": {"id": "aaf7c484305d5a66", "src": "hda", "uuid": "53cb611b-4c57-4d2e-9f5d-d479d444887c"}}, "outputs": {"out_file": {"id": "3c95b9e2ad7dbfb5", "src": "hda", "uuid": "c9f14734-7cce-4a05-bad3-dcb1011ba4e0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:35:21", "plugin": "core", "name": "end_epoch", "raw_value": "1684150521.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:35:21", "plugin": "core", "name": "start_epoch", "raw_value": "1684150521.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 2, "time_seconds": 27.422412633895874, "inputs": {"in_file": {"src": "hda", "id": "380393b601175c7e"}, "grouping": "2", "need_sort": true, "header_in": true, "header_out": true, "print_full_line": false, "ignore_case": false, "operations_0|op_name": "sum", "operations_0|op_column": "3"}, "job": {"model_class": "Job", "id": "e8ad9d5c730123e1", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:35:56.644603", "create_time": "2023-05-15T11:35:45.098071", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-km776", "command_line": "datamash --header-in --header-out --sort     -t ,  --group '2' sum 3 < /galaxy/server/database/objects/c/4/6/dataset_c46ef8a9-8fb1-4d18-800b-f01d904b32cb.dat > '/galaxy/server/database/objects/1/3/f/dataset_13f9550d-c598-4f54-aaf7-455401448b63.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"sum\"}]", "narm": "false", "ignore_case": "false", "print_full_line": "false", "header_out": "true", "header_in": "true", "need_sort": "true", "grouping": "\"2\""}, "inputs": {"in_file": {"id": "380393b601175c7e", "src": "hda", "uuid": "c46ef8a9-8fb1-4d18-800b-f01d904b32cb"}}, "outputs": {"out_file": {"id": "0ae86bac17958662", "src": "hda", "uuid": "13f9550d-c598-4f54-aaf7-455401448b63"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:35:46", "plugin": "core", "name": "end_epoch", "raw_value": "1684150546.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:35:46", "plugin": "core", "name": "start_epoch", "raw_value": "1684150546.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 3, "time_seconds": 27.419788599014282, "inputs": {"in_file": {"src": "hda", "id": "4b8bf2df07af3d39"}, "grouping": "2", "need_sort": true, "header_in": true, "print_full_line": false, "narm": true, "operations_0|op_name": "mean", "operations_0|op_column": "3"}, "job": {"model_class": "Job", "id": "49645b0bb399f38e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:35:57.552604", "create_time": "2023-05-15T11:35:45.825562", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-ddbrh", "command_line": "datamash --header-in  --sort   --narm   --group '2' mean 3 < /galaxy/server/database/objects/e/7/6/dataset_e7666d0a-64ed-4380-a9f8-53b450c9c3d5.dat > '/galaxy/server/database/objects/8/b/7/dataset_8b7caca5-596f-4e95-9386-dc7e6adb4433.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"mean\"}]", "narm": "true", "ignore_case": "false", "print_full_line": "false", "header_out": "false", "header_in": "true", "need_sort": "true", "grouping": "\"2\""}, "inputs": {"in_file": {"id": "4b8bf2df07af3d39", "src": "hda", "uuid": "e7666d0a-64ed-4380-a9f8-53b450c9c3d5"}}, "outputs": {"out_file": {"id": "f4415039a3750387", "src": "hda", "uuid": "8b7caca5-596f-4e95-9386-dc7e6adb4433"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:35:48", "plugin": "core", "name": "end_epoch", "raw_value": "1684150548.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:35:48", "plugin": "core", "name": "start_epoch", "raw_value": "1684150548.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_reverse/datamash_reverse/1.1.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_reverse/datamash_reverse", "tool_version": "1.1.0+galaxy2", "test_index": 0, "time_seconds": 33.02644753456116, "inputs": {"in_file": {"src": "hda", "id": "ae2a27db97be6dec"}}, "job": {"model_class": "Job", "id": "17733e488ed446fa", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:35:00.032169", "create_time": "2023-05-15T11:34:42.748577", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_reverse/datamash_reverse/1.1.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-jw2nx", "command_line": "datamash reverse   < /galaxy/server/database/objects/f/9/c/dataset_f9ce1f21-e8a4-42ec-9a11-d500d5dc6fb8.dat > /galaxy/server/database/objects/6/8/4/dataset_684ea28b-2a0e-442b-9a11-35aadc024dd2.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"in_file": {"id": "ae2a27db97be6dec", "src": "hda", "uuid": "f9ce1f21-e8a4-42ec-9a11-d500d5dc6fb8"}}, "outputs": {"out_file": {"id": "9a2cbf40fca1a5c9", "src": "hda", "uuid": "684ea28b-2a0e-442b-9a11-35aadc024dd2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:34:51", "plugin": "core", "name": "end_epoch", "raw_value": "1684150491.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:34:51", "plugin": "core", "name": "start_epoch", "raw_value": "1684150491.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_transpose/datamash_transpose/1.1.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_transpose/datamash_transpose", "tool_version": "1.1.0+galaxy2", "test_index": 0, "time_seconds": 30.071319341659546, "inputs": {"in_file": {"src": "hda", "id": "0364c4acb4366cf4"}}, "job": {"model_class": "Job", "id": "36c08479691245c6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:35:04.301551", "create_time": "2023-05-15T11:34:49.118397", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_transpose/datamash_transpose/1.1.0+galaxy2", "history_id": "f3392d7459007ad8", "external_id": "gxy-xqf9q", "command_line": "datamash transpose   < /galaxy/server/database/objects/7/8/0/dataset_780eb509-21cf-47c0-8e57-ade80025e61d.dat > /galaxy/server/database/objects/7/6/7/dataset_767773a1-efd0-4716-906d-144db4cae611.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"in_file": {"id": "0364c4acb4366cf4", "src": "hda", "uuid": "780eb509-21cf-47c0-8e57-ade80025e61d"}}, "outputs": {"out_file": {"id": "e280a26ce984618d", "src": "hda", "uuid": "767773a1-efd0-4716-906d-144db4cae611"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:34:54", "plugin": "core", "name": "end_epoch", "raw_value": "1684150494.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:34:54", "plugin": "core", "name": "start_epoch", "raw_value": "1684150494.0000000"}, {"title": "Memory Allocated (MB)", "value": "8589", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8589.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm", "tool_version": "0.3+galaxy0", "test_index": 0, "time_seconds": 34.649507999420166, "inputs": {"readFile": {"src": "hda", "id": "afa27c48f587f61e"}, "paf": {"src": "hda", "id": "f61ad8f889d47001"}}, "job": {"model_class": "Job", "id": "e49053c6aca24142", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:41:29.290964", "create_time": "2023-05-15T10:41:11.633100", "galaxy_version": "23.0", "command_version": "0.3-r179", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0", "history_id": "f3392d7459007ad8", "external_id": "gxy-j4kbq", "command_line": "miniasm -f '/galaxy/server/database/objects/0/f/3/dataset_0f3c2445-1308-4e51-8ce0-2ef91206b9c7.dat' -m '100' -i '0.05' -s '1000' -c '3' -o '1000' -h '1000' -I '0.08' -g '1000' -d '50000' -e '4' -n '3' -F '0.8' '/galaxy/server/database/objects/f/3/4/dataset_f3411051-8f44-4724-b1ae-f5a6c0084310.dat' > '/galaxy/server/database/objects/9/d/4/dataset_9d4f613b-b59b-4953-b5c1-7a0afd778dbe.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "graph": "{\"finalDropRatio\": \"0.8\", \"maxBubDist\": \"50000\", \"maxGapDiff\": \"1000\", \"minUtgSize\": \"4\", \"nRounds\": \"3\"}", "overlapping": "{\"intThres\": \"0.08\", \"maxHang\": \"1000\", \"minOvlp\": \"1000\"}", "preselection": "{\"minCov\": \"3\", \"minIden\": \"0.05\", \"minMatch\": \"100\", \"minSpan\": \"1000\"}"}, "inputs": {"readFile": {"id": "afa27c48f587f61e", "src": "hda", "uuid": "0f3c2445-1308-4e51-8ce0-2ef91206b9c7"}, "paf": {"id": "f61ad8f889d47001", "src": "hda", "uuid": "f3411051-8f44-4724-b1ae-f5a6c0084310"}}, "outputs": {"gfa": {"id": "72f21997136d26ee", "src": "hda", "uuid": "9d4f613b-b59b-4953-b5c1-7a0afd778dbe"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.160*0.99] read 100000 hits; stored 187742 hits and 12067 sequences (111354001 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.184*0.99] 9155 query sequences remain after sub\n[M::ma_hit_cut::0.186*0.99] 161122 hits remain after cut\n[M::ma_hit_flt::0.189*0.99] 156936 hits remain after filtering; crude coverage after filtering: 11.85\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.199*0.99] 9023 query sequences remain after sub\n[M::ma_hit_cut::0.205*0.99] 152071 hits remain after cut\n[M::ma_hit_contained::0.208*0.99] 1536 sequences and 8359 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 8236 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4182 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 362 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 260 tips\n[M::asg_pop_bubble] popped 105 bubbles and trimmed 4 tips\n[M::main] ===> Step 4.3: cutting short overlaps (3 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 29 asymmetric arcs\n[M::asg_arc_del_short] removed 37 short overlaps\n[M::asg_cut_tip] cut 104 tips\n[M::asg_pop_bubble] popped 1 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 1 asymmetric arcs\n[M::asg_arc_del_short] removed 1 short overlaps\n[M::asg_cut_tip] cut 3 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/0/f/3/dataset_0f3c2445-1308-4e51-8ce0-2ef91206b9c7.dat -m 100 -i 0.05 -s 1000 -c 3 -o 1000 -h 1000 -I 0.08 -g 1000 -d 50000 -e 4 -n 3 -F 0.8 /galaxy/server/database/objects/f/3/4/dataset_f3411051-8f44-4724-b1ae-f5a6c0084310.dat\n[M::main] Real time: 0.220 sec; CPU: 0.214 sec\n", "job_stdout": "", "job_stderr": "", "stderr": "[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.160*0.99] read 100000 hits; stored 187742 hits and 12067 sequences (111354001 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.184*0.99] 9155 query sequences remain after sub\n[M::ma_hit_cut::0.186*0.99] 161122 hits remain after cut\n[M::ma_hit_flt::0.189*0.99] 156936 hits remain after filtering; crude coverage after filtering: 11.85\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.199*0.99] 9023 query sequences remain after sub\n[M::ma_hit_cut::0.205*0.99] 152071 hits remain after cut\n[M::ma_hit_contained::0.208*0.99] 1536 sequences and 8359 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 8236 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4182 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 362 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 260 tips\n[M::asg_pop_bubble] popped 105 bubbles and trimmed 4 tips\n[M::main] ===> Step 4.3: cutting short overlaps (3 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 29 asymmetric arcs\n[M::asg_arc_del_short] removed 37 short overlaps\n[M::asg_cut_tip] cut 104 tips\n[M::asg_pop_bubble] popped 1 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 1 asymmetric arcs\n[M::asg_arc_del_short] removed 1 short overlaps\n[M::asg_cut_tip] cut 3 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/0/f/3/dataset_0f3c2445-1308-4e51-8ce0-2ef91206b9c7.dat -m 100 -i 0.05 -s 1000 -c 3 -o 1000 -h 1000 -I 0.08 -g 1000 -d 50000 -e 4 -n 3 -F 0.8 /galaxy/server/database/objects/f/3/4/dataset_f3411051-8f44-4724-b1ae-f5a6c0084310.dat\n[M::main] Real time: 0.220 sec; CPU: 0.214 sec\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 10:41:20", "plugin": "core", "name": "end_epoch", "raw_value": "1684147280.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:41:20", "plugin": "core", "name": "start_epoch", "raw_value": "1684147280.0000000"}, {"title": "Memory Allocated (MB)", "value": "34359", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "34359.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm", "tool_version": "0.3+galaxy0", "test_index": 1, "time_seconds": 28.1232750415802, "inputs": {"readFile": {"src": "hda", "id": "e27d23cc96556861"}, "paf": {"src": "hda", "id": "27aba2e14716dba6"}, "preselection|minMatch": "99", "preselection|minIden": "0.04", "preselection|minSpan": "999", "preselection|minCov": "2", "overlapping|minOvlp": "999", "overlapping|maxHang": "999", "overlapping|intThres": "0.7", "graph|maxGapDiff": "999", "graph|maxBubDist": "45000", "graph|minUtgSize": "3", "graph|nRounds": "2", "graph|finalDropRatio": "0.7"}, "job": {"model_class": "Job", "id": "7af09b7b82dac7e2", "state": "error", "exit_code": null, "update_time": "2023-05-15T10:41:49.111166", "create_time": "2023-05-15T10:41:39.429419", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0", "history_id": "f3392d7459007ad8", "external_id": "gxy-jv4vz", "command_line": "miniasm -f '/galaxy/server/database/objects/f/3/5/dataset_f3529934-78ba-422e-ae0d-9e2fb1ec000c.dat' -m '99' -i '0.04' -s '999' -c '2' -o '999' -h '999' -I '0.7' -g '999' -d '45000' -e '3' -n '2' -F '0.7' '/galaxy/server/database/objects/e/c/d/dataset_ecde88cb-a16a-4933-b354-9262cb574002.dat' > '/galaxy/server/database/objects/1/5/c/dataset_15c463bd-aa50-423e-805c-eca8e574a32d.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "graph": "{\"finalDropRatio\": \"0.7\", \"maxBubDist\": \"45000\", \"maxGapDiff\": \"999\", \"minUtgSize\": \"3\", \"nRounds\": \"2\"}", "overlapping": "{\"intThres\": \"0.7\", \"maxHang\": \"999\", \"minOvlp\": \"999\"}", "preselection": "{\"minCov\": \"2\", \"minIden\": \"0.04\", \"minMatch\": \"99\", \"minSpan\": \"999\"}"}, "inputs": {"readFile": {"id": "e27d23cc96556861", "src": "hda", "uuid": "f3529934-78ba-422e-ae0d-9e2fb1ec000c"}, "paf": {"id": "27aba2e14716dba6", "src": "hda", "uuid": "ecde88cb-a16a-4933-b354-9262cb574002"}}, "outputs": {"gfa": {"id": "e8a5a374903eeb7b", "src": "hda", "uuid": "15c463bd-aa50-423e-805c-eca8e574a32d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 0, "time_seconds": 398.5114119052887, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "8340433fc5d7670a"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "fa4e520151c475ea"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": false, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "23d04a169d8f3b4e", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:35:38.644762", "create_time": "2023-05-15T10:29:36.569424", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-hcd5r", "command_line": "ln -s '/galaxy/server/database/objects/b/2/7/dataset_b27351f4-4b8a-47cf-8729-84fe122fd4a9.dat' fq1.fastq.gz && ln -s '/galaxy/server/database/objects/8/6/a/dataset_86ac6a9a-3689-4f03-9c31-1ebd2232ad1b.dat' fq2.fastq && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq.gz' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "traceback": null, "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 4, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": true}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": false}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"fastq_input2": {"id": "fa4e520151c475ea", "src": "hda", "uuid": "86ac6a9a-3689-4f03-9c31-1ebd2232ad1b"}, "fastq_input1": {"id": "8340433fc5d7670a", "src": "hda", "uuid": "b27351f4-4b8a-47cf-8729-84fe122fd4a9"}}, "outputs": {"assembly": {"id": "807a292ad5de0509", "src": "hda", "uuid": "15d78e0b-49c4-454e-bae0-39b656a1097c"}, "assembly_graph": {"id": "adfea3056a61ef95", "src": "hda", "uuid": "45bb5be6-57c1-4afb-9376-210cbbf0006f"}}, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2023-05-15 10:33:25)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq.gz -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon                               not used                                          \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-05-15 10:33:27)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-05-15 10:33:27)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.008     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.127    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.128    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.130    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.130    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.132    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.174    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.191    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.191    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.191    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.192    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.193    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.193    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.194    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.935    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.935    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.206    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.207    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.383    38M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.384    38M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.384    38M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.384    38M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.385    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.385    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.892     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.893     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.907   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.467   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:03.467   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.779   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.815   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.851   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.851   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.858   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.860   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.860   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.861   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.868   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.869   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.869   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.870   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.872   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.876   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.878   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.885   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.888   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.888   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.888   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.911   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.911   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.994   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.996   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.999   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:04.079   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.278   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.755   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.352   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.374   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.374   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:06.376   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:06.376   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:06.377   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:06.377   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:06.377   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:06.377   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:06.377   131M / 13\n..\nlizing paths\n  0:00:10.784    43M / 169M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:10.784    43M / 169M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.785    43M / 169M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.785    43M / 169M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.786    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.786    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.786    43M / 169M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:10.786    43M / 169M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:10.786    43M / 169M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:10.786    43M / 169M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:10.794    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:10.795    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:10.800    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:10.801    43M / 169M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:10.807    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:10.813    43M / 169M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:10.818    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:10.824    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:10.836    43M / 169M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:10.839    43M / 169M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 10 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:10.779    48M / 169M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-05-15 10:35:13)\nFilter by read depth        (2023-05-15 10:35:13)\nFilter homopolymer loops    (2023-05-15 10:35:13)\nMerge all possible          (2023-05-15 10:35:13)\nNormalise read depths       (2023-05-15 10:35:13)\nRemove zero length segments (2023-05-15 10:35:13)\nSort link order             (2023-05-15 10:35:13)\nGraph cleaning finished     (2023-05-15 10:35:13)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-05-15 10:35:13)\nFilter by read depth        (2023-05-15 10:35:13)\nFilter homopolymer loops    (2023-05-15 10:35:13)\nMerge all possible          (2023-05-15 10:35:13)\nNormalise read depths       (2023-05-15 10:35:13)\nRemove zero length segments (2023-05-15 10:35:13)\nSort link order             (2023-05-15 10:35:13)\nGraph cleaning finished     (2023-05-15 10:35:13)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-05-15 10:35:13)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-05-15 10:35:13)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/7/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-05-15 10:35:13)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-05-15 10:35:13)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-05-15 10:35:13)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-05-15 10:35:13)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-05-15 10:35:13)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-05-15 10:35:13)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-05-15 10:35:13)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/005_polished.gfa\n\n\nRotating completed replicons (2023-05-15 10:35:18)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-05-15 10:35:29)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "\nStarting Unicycler (2023-05-15 10:33:25)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq.gz -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon                               not used                                          \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-05-15 10:33:27)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-05-15 10:33:27)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.008     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.127    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.128    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.130    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.130    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.132    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.174    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.191    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.191    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.191    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.192    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.193    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.193    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.194    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.935    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.935    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.206    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.207    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.383    38M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.384    38M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.384    38M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.384    38M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.385    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.385    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.892     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.893     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.907   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.467   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:03.467   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.779   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.815   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.851   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.851   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.858   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.860   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.860   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.861   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.868   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.869   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.869   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.870   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.872   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.876   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.878   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.885   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.888   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.888   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.888   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.911   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.911   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.994   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.996   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.999   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:04.000   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:04.079   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.278   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.755   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.352   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.374   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.374   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:06.376   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:06.376   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:06.376   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:06.377   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:06.377   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:06.377   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:06.377   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:06.377   131M / 13\n..\nlizing paths\n  0:00:10.784    43M / 169M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:10.784    43M / 169M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.785    43M / 169M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.785    43M / 169M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.785    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.786    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.786    43M / 169M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.786    43M / 169M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:10.786    43M / 169M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:10.786    43M / 169M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:10.786    43M / 169M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:10.794    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:10.795    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:10.800    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:10.801    43M / 169M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:10.807    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:10.813    43M / 169M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:10.818    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:10.824    43M / 169M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:10.836    43M / 169M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:10.839    43M / 169M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 10 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:10.779    48M / 169M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-05-15 10:35:13)\nFilter by read depth        (2023-05-15 10:35:13)\nFilter homopolymer loops    (2023-05-15 10:35:13)\nMerge all possible          (2023-05-15 10:35:13)\nNormalise read depths       (2023-05-15 10:35:13)\nRemove zero length segments (2023-05-15 10:35:13)\nSort link order             (2023-05-15 10:35:13)\nGraph cleaning finished     (2023-05-15 10:35:13)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-05-15 10:35:13)\nFilter by read depth        (2023-05-15 10:35:13)\nFilter homopolymer loops    (2023-05-15 10:35:13)\nMerge all possible          (2023-05-15 10:35:13)\nNormalise read depths       (2023-05-15 10:35:13)\nRemove zero length segments (2023-05-15 10:35:13)\nSort link order             (2023-05-15 10:35:13)\nGraph cleaning finished     (2023-05-15 10:35:13)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-05-15 10:35:13)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-05-15 10:35:13)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/7/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-05-15 10:35:13)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-05-15 10:35:13)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-05-15 10:35:13)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-05-15 10:35:13)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-05-15 10:35:13)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-05-15 10:35:13)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-05-15 10:35:13)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/005_polished.gfa\n\n\nRotating completed replicons (2023-05-15 10:35:18)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-05-15 10:35:29)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "125.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:35:30", "plugin": "core", "name": "end_epoch", "raw_value": "1684146930.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:33:25", "plugin": "core", "name": "start_epoch", "raw_value": "1684146805.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 1, "time_seconds": 271.7541444301605, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "8340433fc5d7670a"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "fa4e520151c475ea"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "2a7c82257688f15a"}, "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": false, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "2664b84c8b58328a", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:33:31.892383", "create_time": "2023-05-15T10:29:32.650836", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-czpfv", "command_line": "ln -s '/galaxy/server/database/objects/b/2/7/dataset_b27351f4-4b8a-47cf-8729-84fe122fd4a9.dat' fq1.fastq.gz && ln -s '/galaxy/server/database/objects/8/6/a/dataset_86ac6a9a-3689-4f03-9c31-1ebd2232ad1b.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/4/4/2/dataset_442242e6-8aa8-4cde-bf9a-01eb0696e389.dat' 'lr.fasta' && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq.gz' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "traceback": null, "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 4, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": true}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": false}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "2a7c82257688f15a", "src": "hda", "uuid": "442242e6-8aa8-4cde-bf9a-01eb0696e389"}, "fastq_input2": {"id": "fa4e520151c475ea", "src": "hda", "uuid": "86ac6a9a-3689-4f03-9c31-1ebd2232ad1b"}, "fastq_input1": {"id": "8340433fc5d7670a", "src": "hda", "uuid": "b27351f4-4b8a-47cf-8729-84fe122fd4a9"}}, "outputs": {"assembly": {"id": "23d04a169d8f3b4e", "src": "hda", "uuid": "260f6fc0-64bb-4a67-b96b-f34e90732d7c"}, "assembly_graph": {"id": "2664b84c8b58328a", "src": "hda", "uuid": "b3dbfe3b-ead3-4c60-bdd3-16f334ab0dee"}}, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2023-05-15 10:31:15)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq.gz -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/6/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon           1.4.20              good       /usr/local/bin/racon                   \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-05-15 10:31:16)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-05-15 10:31:16)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.120    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.120    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.122    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.122    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.124    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.183    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.197    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.197    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.197    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.198    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.199    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.199    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.199    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.003    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:01.003    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.295    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.296    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.448    40M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.449    40M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.449    40M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.450    40M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.451    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.451    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.971     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.971     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.984   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.548   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:03.548   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.860   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.892   136M / 136M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.929   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.929   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.935   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.936   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.936   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.937   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.944   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.944   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.945   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.945   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.950   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.954   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.956   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.962   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.965   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.966   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.966   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.989   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.989   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:04.067   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:04.069   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:04.075   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:04.155   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.352   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.840   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.431   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.452   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.453   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:06.454   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:06.454   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:06.455   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:06.455   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:06.455   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:06.455   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:06.455   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:06.455   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:06.455   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:06.456   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:06.456   131M / 131M\n..\nn /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:10.507    35M / 170M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-05-15 10:33:02)\nFilter by read depth        (2023-05-15 10:33:02)\nFilter homopolymer loops    (2023-05-15 10:33:02)\nMerge all possible          (2023-05-15 10:33:02)\nNormalise read depths       (2023-05-15 10:33:02)\nRemove zero length segments (2023-05-15 10:33:02)\nSort link order             (2023-05-15 10:33:02)\nGraph cleaning finished     (2023-05-15 10:33:02)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-05-15 10:33:02)\nFilter by read depth        (2023-05-15 10:33:02)\nFilter homopolymer loops    (2023-05-15 10:33:02)\nMerge all possible          (2023-05-15 10:33:02)\nNormalise read depths       (2023-05-15 10:33:02)\nRemove zero length segments (2023-05-15 10:33:02)\nSort link order             (2023-05-15 10:33:02)\nGraph cleaning finished     (2023-05-15 10:33:02)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-05-15 10:33:02)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-05-15 10:33:03)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/6/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-05-15 10:33:03)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-05-15 10:33:03)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-05-15 10:33:03)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2023-05-15 10:33:03)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2023-05-15 10:33:03)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/6/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/6/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2023-05-15 10:33:03)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/6/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2023-05-15 10:33:03)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2023-05-15 10:33:03)\n1\t5386\t5\t5077\t-\t1\t5386\t8\t5080\t5072\t5072\t255\tcm:i:945\n1\t5386\t5093\t5384\t-\t1\t5386\t5087\t5378\t291\t291\t255\tcm:i:52\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2023-05-15 10:33:03)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5077,-,1,8,5080\n    5093,5384,-,1,5087,5378\nReference ranges:\n    1-: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 5076 points, score=5074.000394 (good)\n    line 2: 292 points, score=290.006826 (good)\nAll Seqan alignments (time to align = 0.048 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\n\n\nRead alignment summary (2023-05-15 10:33:03)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/6/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2023-05-15 10:33:03)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2023-05-15 10:33:03)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-05-15 10:33:03)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-05-15 10:33:03)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-05-15 10:33:03)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/6/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nPilon polish round 2\n  bowtie2-build 2_polish_input.fasta 2_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 2_polish_input.fasta -S 2_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq\n  samtools sort -@ 8 -o 2_paired_alignments.bam -O bam -T temp 2_paired_alignments.sam\n  samtools index 2_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 2_polish_input.fasta --changes --output 2_pilon --outdir /galaxy/server/database/jobs_directory/000/6/working/pilon_polish --fix all --frags 2_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/005_polished.gfa\n\n\nRotating completed replicons (2023-05-15 10:33:11)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-05-15 10:33:22)\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "\nStarting Unicycler (2023-05-15 10:31:15)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq.gz -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/6/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon           1.4.20              good       /usr/local/bin/racon                   \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-05-15 10:31:16)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-05-15 10:31:16)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.120    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.120    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.122    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.122    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.124    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.183    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.197    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.197    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.197    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.198    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.199    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.199    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.199    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.003    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:01.003    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.295    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.296    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.448    40M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.449    40M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.449    40M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.450    40M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.451    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.451    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.971     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.971     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.984   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.548   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:03.548   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.860   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.892   136M / 136M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.929   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.929   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.935   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.936   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.936   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.937   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.944   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.944   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.945   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.945   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.950   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.954   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.956   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.962   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.965   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.966   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.966   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.989   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.989   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:04.067   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:04.069   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:04.075   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:04.076   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:04.155   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.352   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.840   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.431   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.452   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.453   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:06.454   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:06.454   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:06.455   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:06.455   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:06.455   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:06.455   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:06.455   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:06.455   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:06.455   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:06.456   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:06.456   131M / 131M\n..\nn /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:10.507    35M / 170M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-05-15 10:33:02)\nFilter by read depth        (2023-05-15 10:33:02)\nFilter homopolymer loops    (2023-05-15 10:33:02)\nMerge all possible          (2023-05-15 10:33:02)\nNormalise read depths       (2023-05-15 10:33:02)\nRemove zero length segments (2023-05-15 10:33:02)\nSort link order             (2023-05-15 10:33:02)\nGraph cleaning finished     (2023-05-15 10:33:02)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-05-15 10:33:02)\nFilter by read depth        (2023-05-15 10:33:02)\nFilter homopolymer loops    (2023-05-15 10:33:02)\nMerge all possible          (2023-05-15 10:33:02)\nNormalise read depths       (2023-05-15 10:33:02)\nRemove zero length segments (2023-05-15 10:33:02)\nSort link order             (2023-05-15 10:33:02)\nGraph cleaning finished     (2023-05-15 10:33:02)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-05-15 10:33:02)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-05-15 10:33:03)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/6/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-05-15 10:33:03)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-05-15 10:33:03)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-05-15 10:33:03)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2023-05-15 10:33:03)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2023-05-15 10:33:03)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/6/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/6/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2023-05-15 10:33:03)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/6/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2023-05-15 10:33:03)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2023-05-15 10:33:03)\n1\t5386\t5\t5077\t-\t1\t5386\t8\t5080\t5072\t5072\t255\tcm:i:945\n1\t5386\t5093\t5384\t-\t1\t5386\t5087\t5378\t291\t291\t255\tcm:i:52\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2023-05-15 10:33:03)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5077,-,1,8,5080\n    5093,5384,-,1,5087,5378\nReference ranges:\n    1-: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 5076 points, score=5074.000394 (good)\n    line 2: 292 points, score=290.006826 (good)\nAll Seqan alignments (time to align = 0.048 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\n\n\nRead alignment summary (2023-05-15 10:33:03)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/6/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2023-05-15 10:33:03)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2023-05-15 10:33:03)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-05-15 10:33:03)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-05-15 10:33:03)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-05-15 10:33:03)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/6/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nPilon polish round 2\n  bowtie2-build 2_polish_input.fasta 2_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 2_polish_input.fasta -S 2_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq\n  samtools sort -@ 8 -o 2_paired_alignments.bam -O bam -T temp 2_paired_alignments.sam\n  samtools index 2_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 2_polish_input.fasta --changes --output 2_pilon --outdir /galaxy/server/database/jobs_directory/000/6/working/pilon_polish --fix all --frags 2_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/005_polished.gfa\n\n\nRotating completed replicons (2023-05-15 10:33:11)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-05-15 10:33:22)\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.fasta\n\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "127.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:33:22", "plugin": "core", "name": "end_epoch", "raw_value": "1684146802.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:31:15", "plugin": "core", "name": "start_epoch", "raw_value": "1684146675.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 2, "time_seconds": 249.4265217781067, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "f3392d7459007ad8"}, "paired_unpaired|fastq_input_selector": "paired_collection", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": true, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "4481181790fe7030", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:37:41.555268", "create_time": "2023-05-15T10:33:50.209651", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-n8nnq", "command_line": "ln -s '/galaxy/server/database/objects/0/1/a/dataset_01a497bc-5341-4bba-903d-d45618593605.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/9/8/e/dataset_98e590fc-fb39-438c-a56c-14f370a58cfe.dat' fq2.fastq && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --no_pilon --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": true}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": true}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "long": null, "paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}"}, "inputs": {"fastq_input11": {"id": "4481181790fe7030", "src": "hda", "uuid": "01a497bc-5341-4bba-903d-d45618593605"}, "fastq_input12": {"id": "2b46732da70a8e07", "src": "hda", "uuid": "98e590fc-fb39-438c-a56c-14f370a58cfe"}}, "outputs": {"assembly_graph": {"id": "1680dc1512de0831", "src": "hda", "uuid": "d4cd8fbd-0004-4c6d-82dd-e55ee3e28fb3"}, "assembly": {"id": "e34a4d5b1b64805b", "src": "hda", "uuid": "c8a1fe45-7e7a-460c-8e16-b863d141800a"}}, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2023-05-15 10:35:33)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --no_pilon --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py       3.14.1    good       /usr/local/bin/spades.py  \n  racon                     not used                             \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nChoosing k-mer range for assembly (2023-05-15 10:35:33)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-05-15 10:35:34)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.110    89M / 89M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.110    65M / 65M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.112    75M / 75M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.112    75M / 75M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.113    75M / 75M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.155    27M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.172    27M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.172    27M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.172    27M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.173    27M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.174    27M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.175    27M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.175    27M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.898    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.899    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.150    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.150    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.283    45M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.284    45M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.284    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.285    45M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.286    45M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.286    45M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.695     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.696     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.708   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.258   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:03.259   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.558   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.592   133M / 133M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.626   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.626   133M / 133M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.632   133M / 133M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.633   133M / 133M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.633   133M / 133M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.634   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.641   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.642   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.642   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.643   133M / 133M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.645   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.649   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.651   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.656   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.659   133M / 133M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.660   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.660   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.685   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.686   133M / 133M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.767   133M / 133M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.769   133M / 133M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.775   133M / 133M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.775   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.775   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.776   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.776   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.855   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.050   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.529   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.121   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.140   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.140   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:06.142   133M / 133M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:06.143   133M / 133M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:06.143   133M / 133M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:06.143   133M / 133M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:06.143   133M / 133M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:06.143   133M / 133M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:06.143   133M / 133M  INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:06.144   133M / 133M  INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover trigger\n..\n  (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.465    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.466    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.466    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.466    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.466    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.466    40M / 170M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:10.466    40M / 170M  INFO    General                 (launcher.cpp              : 439)   Closing gaps in paths\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 467)   Gap closing completed\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 296)   Traversing tandem repeats\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 306)   Traversed 0 loops\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 244)   Finalizing paths\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:10.467    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.468    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.468    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.469    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.469    40M / 170M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:10.469    40M / 170M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:10.469    40M / 170M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:10.469    40M / 170M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:10.477    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:10.477    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:10.484    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:10.484    40M / 170M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:10.490    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:10.496    40M / 170M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:10.502    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:10.507    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:10.519    40M / 170M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:10.522    40M / 170M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 10 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:10.462    45M / 170M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-05-15 10:37:19)\nFilter by read depth        (2023-05-15 10:37:19)\nFilter homopolymer loops    (2023-05-15 10:37:19)\nMerge all possible          (2023-05-15 10:37:19)\nNormalise read depths       (2023-05-15 10:37:19)\nRemove zero length segments (2023-05-15 10:37:19)\nSort link order             (2023-05-15 10:37:19)\nGraph cleaning finished     (2023-05-15 10:37:19)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-05-15 10:37:19)\nFilter by read depth        (2023-05-15 10:37:19)\nFilter homopolymer loops    (2023-05-15 10:37:19)\nMerge all possible          (2023-05-15 10:37:19)\nNormalise read depths       (2023-05-15 10:37:19)\nRemove zero length segments (2023-05-15 10:37:19)\nSort link order             (2023-05-15 10:37:19)\nGraph cleaning finished     (2023-05-15 10:37:19)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-05-15 10:37:19)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-05-15 10:37:20)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/10/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-05-15 10:37:20)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-05-15 10:37:20)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-05-15 10:37:20)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-05-15 10:37:20)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-05-15 10:37:20)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-05-15 10:37:20)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2023-05-15 10:37:20)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-05-15 10:37:31)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "\nStarting Unicycler (2023-05-15 10:35:33)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --no_pilon --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py       3.14.1    good       /usr/local/bin/spades.py  \n  racon                     not used                             \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nChoosing k-mer range for assembly (2023-05-15 10:35:33)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-05-15 10:35:34)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.110    89M / 89M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.110    65M / 65M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.112    75M / 75M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.112    75M / 75M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.113    75M / 75M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.155    27M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.172    27M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.172    27M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.172    27M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.173    27M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.174    27M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.175    27M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.175    27M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.898    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.899    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.150    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.150    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.283    45M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.284    45M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.284    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.285    45M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.286    45M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.286    45M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.695     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.696     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.708   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.258   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:03.259   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.558   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.592   133M / 133M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.626   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.626   133M / 133M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.632   133M / 133M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.633   133M / 133M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.633   133M / 133M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.634   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.641   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.642   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.642   133M / 133M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.643   133M / 133M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.645   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.649   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.651   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.656   133M / 133M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.659   133M / 133M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.660   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.660   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.685   133M / 133M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.686   133M / 133M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.767   133M / 133M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.769   133M / 133M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.775   133M / 133M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.775   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.775   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.776   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.776   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.855   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.050   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.529   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.121   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.140   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.140   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:06.142   133M / 133M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:06.142   133M / 133M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:06.143   133M / 133M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:06.143   133M / 133M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:06.143   133M / 133M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:06.143   133M / 133M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:06.143   133M / 133M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:06.143   133M / 133M  INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:06.144   133M / 133M  INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover trigger\n..\n  (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.465    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.466    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.466    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.466    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.466    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.466    40M / 170M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:10.466    40M / 170M  INFO    General                 (launcher.cpp              : 439)   Closing gaps in paths\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 467)   Gap closing completed\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 296)   Traversing tandem repeats\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 306)   Traversed 0 loops\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 244)   Finalizing paths\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:10.467    40M / 170M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:10.467    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.468    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.468    40M / 170M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.468    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.469    40M / 170M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.469    40M / 170M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:10.469    40M / 170M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:10.469    40M / 170M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:10.469    40M / 170M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:10.477    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:10.477    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:10.484    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:10.484    40M / 170M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:10.490    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:10.496    40M / 170M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:10.502    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:10.507    40M / 170M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:10.519    40M / 170M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:10.522    40M / 170M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 10 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:10.462    45M / 170M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-05-15 10:37:19)\nFilter by read depth        (2023-05-15 10:37:19)\nFilter homopolymer loops    (2023-05-15 10:37:19)\nMerge all possible          (2023-05-15 10:37:19)\nNormalise read depths       (2023-05-15 10:37:19)\nRemove zero length segments (2023-05-15 10:37:19)\nSort link order             (2023-05-15 10:37:19)\nGraph cleaning finished     (2023-05-15 10:37:19)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-05-15 10:37:19)\nFilter by read depth        (2023-05-15 10:37:19)\nFilter homopolymer loops    (2023-05-15 10:37:19)\nMerge all possible          (2023-05-15 10:37:19)\nNormalise read depths       (2023-05-15 10:37:19)\nRemove zero length segments (2023-05-15 10:37:19)\nSort link order             (2023-05-15 10:37:19)\nGraph cleaning finished     (2023-05-15 10:37:19)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-05-15 10:37:19)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-05-15 10:37:20)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/10/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-05-15 10:37:20)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-05-15 10:37:20)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-05-15 10:37:20)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-05-15 10:37:20)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-05-15 10:37:20)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-05-15 10:37:20)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2023-05-15 10:37:20)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-05-15 10:37:31)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 minute", "plugin": "core", "name": "runtime_seconds", "raw_value": "118.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:37:31", "plugin": "core", "name": "end_epoch", "raw_value": "1684147051.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:35:33", "plugin": "core", "name": "start_epoch", "raw_value": "1684146933.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 3, "time_seconds": 127.63549494743347, "inputs": {"paired_unpaired|fastq_input_selector": "none", "long": {"src": "hda", "id": "4ece47c9817555bc"}, "min_anchor_seg_len": "10", "spades|kmers": "21,23"}, "job": {"model_class": "Job", "id": "1680dc1512de0831", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:37:46.572048", "create_time": "2023-05-15T10:35:54.593416", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-cbpnh", "command_line": "ln -s '/galaxy/server/database/objects/c/d/4/dataset_cd41fc04-49d5-4409-b14e-54c2a2c4febd.dat' 'lr.fasta' && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_anchor_seg_len '10'  --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmers '21,23' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": false}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"21,23\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": false}", "min_anchor_seg_len": "\"10\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "paired_unpaired": "{\"__current_case__\": 3, \"fastq_input_selector\": \"none\"}"}, "inputs": {"long": {"id": "4ece47c9817555bc", "src": "hda", "uuid": "cd41fc04-49d5-4409-b14e-54c2a2c4febd"}}, "outputs": {"assembly_graph": {"id": "104099964b28c400", "src": "hda", "uuid": "cc0ab1bb-6f47-482b-95d6-f9483fd9182d"}, "assembly": {"id": "9988da97bc58e2f7", "src": "hda", "uuid": "076466a3-6424-42a0-8b09-636c978a50d7"}}, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2023-05-15 10:37:36)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py                 not used                             \n  racon           1.4.20    good       /usr/local/bin/racon      \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nLoading reads (2023-05-15 10:37:36)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2023-05-15 10:37:36)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\nSaving /galaxy/server/database/jobs_directory/000/12/working/002_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2023-05-15 10:37:36)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\nSaving /galaxy/server/database/jobs_directory/000/12/working/003_racon_polished.gfa\n\n\nAssembly complete (2023-05-15 10:37:37)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "\nStarting Unicycler (2023-05-15 10:37:36)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py                 not used                             \n  racon           1.4.20    good       /usr/local/bin/racon      \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nLoading reads (2023-05-15 10:37:36)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2023-05-15 10:37:36)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\nSaving /galaxy/server/database/jobs_directory/000/12/working/002_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2023-05-15 10:37:36)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\nSaving /galaxy/server/database/jobs_directory/000/12/working/003_racon_polished.gfa\n\n\nAssembly complete (2023-05-15 10:37:37)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:37:37", "plugin": "core", "name": "end_epoch", "raw_value": "1684147057.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:37:35", "plugin": "core", "name": "start_epoch", "raw_value": "1684147055.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset", "tool_version": "5.1.0", "test_index": 0, "time_seconds": 39.87778973579407, "inputs": {"input_list": [{"src": "hda", "id": "90070c7d5de07b83"}, {"src": "hda", "id": "9452381f2588d09a"}]}, "job": {"model_class": "Job", "id": "8387b79c96cf9502", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:26:47.578013", "create_time": "2023-05-15T11:26:28.332323", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-chm7f", "command_line": "(   cat \"/galaxy/server/database/objects/e/4/4/dataset_e4497194-dec4-47ac-b19c-6754785cfa4d.dat\" ;   cat \"/galaxy/server/database/objects/8/1/c/dataset_81cdf835-a6b5-4255-90e8-9127d360b02e.dat\" ;   ) > /galaxy/server/database/objects/7/4/7/dataset_74756276-fb66-4f64-b380-6c983ecea0ec.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filename": "{\"__current_case__\": 1, \"add_name\": false}", "one_header": "false"}, "inputs": {"input_list2": {"id": "9452381f2588d09a", "src": "hda", "uuid": "81cdf835-a6b5-4255-90e8-9127d360b02e"}, "input_list1": {"id": "90070c7d5de07b83", "src": "hda", "uuid": "e4497194-dec4-47ac-b19c-6754785cfa4d"}, "input_list": {"id": "90070c7d5de07b83", "src": "hda", "uuid": "e4497194-dec4-47ac-b19c-6754785cfa4d"}}, "outputs": {"output": {"id": "2e88699057def87f", "src": "hda", "uuid": "74756276-fb66-4f64-b380-6c983ecea0ec"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:26:38", "plugin": "core", "name": "end_epoch", "raw_value": "1684149998.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:26:38", "plugin": "core", "name": "start_epoch", "raw_value": "1684149998.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset", "tool_version": "5.1.0", "test_index": 1, "time_seconds": 37.587178230285645, "inputs": {"input_list": [{"src": "hda", "id": "70b75747f62c42f0"}, {"src": "hda", "id": "1eaa7fc38751c20c"}], "one_header": true, "filename|place_name": "same_multiple", "filename|add_name": true}, "job": {"model_class": "Job", "id": "3b5b0dfa7132af0b", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:26:49.681378", "create_time": "2023-05-15T11:26:32.987143", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-4qggg", "command_line": "( awk '{if (NR==1) {print \"Sample\\t\"$0}}' \"/galaxy/server/database/objects/b/8/9/dataset_b8908557-7b77-483d-bb7c-6b4b1cc3b700.dat\";   awk '{if (NR!=1) {print \"strain1.tsv\\t\"$0}}' \"/galaxy/server/database/objects/b/8/9/dataset_b8908557-7b77-483d-bb7c-6b4b1cc3b700.dat\";   awk '{if (NR!=1) {print \"strain2.tsv\\t\"$0}}' \"/galaxy/server/database/objects/b/c/0/dataset_bc0d9518-0491-4cdb-81a2-716f1d19ec66.dat\";   ) > /galaxy/server/database/objects/5/6/9/dataset_569becca-6dd8-4669-880f-b916cfed0e12.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filename": "{\"__current_case__\": 0, \"add_name\": true, \"place_name\": \"same_multiple\"}", "one_header": "true"}, "inputs": {"input_list2": {"id": "1eaa7fc38751c20c", "src": "hda", "uuid": "bc0d9518-0491-4cdb-81a2-716f1d19ec66"}, "input_list1": {"id": "70b75747f62c42f0", "src": "hda", "uuid": "b8908557-7b77-483d-bb7c-6b4b1cc3b700"}, "input_list": {"id": "70b75747f62c42f0", "src": "hda", "uuid": "b8908557-7b77-483d-bb7c-6b4b1cc3b700"}}, "outputs": {"output": {"id": "30f878df29060750", "src": "hda", "uuid": "569becca-6dd8-4669-880f-b916cfed0e12"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:26:40", "plugin": "core", "name": "end_epoch", "raw_value": "1684150000.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:26:40", "plugin": "core", "name": "start_epoch", "raw_value": "1684150000.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset", "tool_version": "5.1.0", "test_index": 2, "time_seconds": 29.85638666152954, "inputs": {"input_list": [{"src": "hda", "id": "70c51b96fea2d681"}, {"src": "hda", "id": "f649b8a14c71e9ab"}], "one_header": true}, "job": {"model_class": "Job", "id": "bfbeeb50c371c303", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T11:27:17.640471", "create_time": "2023-05-15T11:27:06.650001", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0", "history_id": "f3392d7459007ad8", "external_id": "gxy-wvjrn", "command_line": "( awk '{if (NR==1) {print}}' \"/galaxy/server/database/objects/b/d/b/dataset_bdb7ebfc-9c46-440a-8e4d-da0cd1846f76.dat\";   awk '{if (NR!=1) {print}}' \"/galaxy/server/database/objects/b/d/b/dataset_bdb7ebfc-9c46-440a-8e4d-da0cd1846f76.dat\";   awk '{if (NR!=1) {print}}' \"/galaxy/server/database/objects/9/f/b/dataset_9fbcc319-a1a2-475c-8365-5dae2dd4e461.dat\";   ) > /galaxy/server/database/objects/2/a/0/dataset_2a020667-fe77-47be-8f0c-2adeee8fa1b9.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filename": "{\"__current_case__\": 1, \"add_name\": false}", "one_header": "true"}, "inputs": {"input_list2": {"id": "f649b8a14c71e9ab", "src": "hda", "uuid": "9fbcc319-a1a2-475c-8365-5dae2dd4e461"}, "input_list1": {"id": "70c51b96fea2d681", "src": "hda", "uuid": "bdb7ebfc-9c46-440a-8e4d-da0cd1846f76"}, "input_list": {"id": "70c51b96fea2d681", "src": "hda", "uuid": "bdb7ebfc-9c46-440a-8e4d-da0cd1846f76"}}, "outputs": {"output": {"id": "ba965a455965133e", "src": "hda", "uuid": "2a020667-fe77-47be-8f0c-2adeee8fa1b9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-05-15 11:27:08", "plugin": "core", "name": "end_epoch", "raw_value": "1684150028.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 11:27:08", "plugin": "core", "name": "start_epoch", "raw_value": "1684150028.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 0, "time_seconds": 10.606929063796997, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 1, "time_seconds": 58.069862365722656, "inputs": {"sc": false, "onlyassembler": true, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "064b83d410df795c"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "0b60d299454c1552"}}, "job": {"model_class": "Job", "id": "064b83d410df795c", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:38:44.612315", "create_time": "2023-05-15T10:38:06.039681", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-p4ffx", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output  --only-assembler  -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fasta:/galaxy/server/database/objects/f/3/d/dataset_f3dce118-2bdd-4fa2-a7ba-00258d3550bc.dat --pe1-2 fasta:/galaxy/server/database/objects/0/5/a/dataset_05af1657-2448-4d70-ba46-161380f9c38c.dat && python '/galaxy/server/database/jobs_directory/000/19/configs/tmph_78u3e6' < contigs.fasta > '/galaxy/server/database/objects/4/a/9/dataset_4a9a0fb2-8940-4742-be52-1c89b74a97ac.dat' && python '/galaxy/server/database/jobs_directory/000/19/configs/tmph_78u3e6' < scaffolds.fasta > '/galaxy/server/database/objects/3/c/d/dataset_3cd315ef-171f-4862-847a-7571b543a0f1.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "true", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 19, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 20, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fasta\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "064b83d410df795c", "src": "hda", "uuid": "f3dce118-2bdd-4fa2-a7ba-00258d3550bc"}, "libraries_0|files_0|rev_reads": {"id": "0b60d299454c1552", "src": "hda", "uuid": "05af1657-2448-4d70-ba46-161380f9c38c"}}, "outputs": {"out_contig_stats": {"id": "3910dc1d82de14bf", "src": "hda", "uuid": "4a9a0fb2-8940-4742-be52-1c89b74a97ac"}, "out_scaffold_stats": {"id": "558575889c1abf57", "src": "hda", "uuid": "3cd315ef-171f-4862-847a-7571b543a0f1"}, "out_contigs": {"id": "3f4cf5fb10a84830", "src": "hda", "uuid": "6632ea18-8ddb-4364-93e1-759cd402e5e5"}, "out_scaffolds": {"id": "3c91e47720028335", "src": "hda", "uuid": "161542af-a8a4-46bc-a95a-a3cf5a160d3f"}, "out_log": {"id": "43a047126b5b7b72", "src": "hda", "uuid": "fd86e5b7-0448-4e74-807d-0bdb8265e0cc"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/19/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/f/3/d/dataset_f3dce118-2bdd-4fa2-a7ba-00258d3550bc.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/0/5/a/dataset_05af1657-2448-4d70-ba46-161380f9c38c.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/19/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/3/d/dataset_f3dce118-2bdd-4fa2-a7ba-00258d3550bc.dat']\n      right reads: ['/galaxy/server/database/objects/0/5/a/dataset_05af1657-2448-4d70-ba46-161380f9c38c.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/19/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/19/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/19/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.072    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.076     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.188     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.292   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.434     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.436     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.158     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.167    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.167    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.416    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.416    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.568    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.568    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.569    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.569    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.569    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.569    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.021     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:03.034    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.583    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:03.583    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.868    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.897    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.928    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.928    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.933    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.934    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.935    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.935    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.936    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.936    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.936    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.936    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.936    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.955    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.955    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.965    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.975    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:04.011    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.105    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.443    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.019    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.060    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.747    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.747    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.747    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.747    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.747    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.749    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.749    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.750    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:09.185     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:09.194    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:09.696    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:09.696    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:10.004    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:10.032    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:10.062    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:10.062    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:10.063    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:10.067    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:10.068    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:10.070    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:10.070    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:10.070    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:10.070    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:10.073    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:10.073    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:10.073    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:10.073    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:10.073    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:1\n..\n.425    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:12.425    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:12.427    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:12.427    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:12.427    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:12.427    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:12.427    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:12.427    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.427    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.427    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.428    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:12.428    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:12.428    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:12.428    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:12.428    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.428    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.438    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:12.439    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:12.439    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:12.446    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.446    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.447    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta\n  0:00:12.454    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg\n  0:00:12.460    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/simplified_contigs.fasta\n  0:00:12.467    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/intermediate_contigs.fasta\n  0:00:12.479    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:12.479    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.479    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.479    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:12.479    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:12.479    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:12.535   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.725   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:13.014   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:13.014   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:13.027    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:13.087   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:13.094   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:13.097   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:13.103   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:13.103   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:13.103   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:13.116   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:13.121   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:13.140    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:13.140    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:13.140    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:13.140    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:13.140    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:13.140    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:13.141    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:13.141    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:13.141    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:13.141    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:13.141    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:13.141    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:13.141    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:13.142    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:13.142    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:13.142    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:13.142    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:13.143    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:13.143    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:13.144    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta\n  0:00:13.149    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg\n  0:00:13.156    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/final_contigs.paths\n  0:00:13.166    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/scaffolds.paths\n  0:00:13.186    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:13.189    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 13 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/19/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/f/3/d/dataset_f3dce118-2bdd-4fa2-a7ba-00258d3550bc.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/0/5/a/dataset_05af1657-2448-4d70-ba46-161380f9c38c.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/19/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/3/d/dataset_f3dce118-2bdd-4fa2-a7ba-00258d3550bc.dat']\n      right reads: ['/galaxy/server/database/objects/0/5/a/dataset_05af1657-2448-4d70-ba46-161380f9c38c.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/19/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/19/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/19/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.072    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.076     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.188     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.292   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.434     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.436     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.158     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.167    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.167    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.416    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.416    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.568    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.568    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.569    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.569    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.569    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.569    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.021     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:03.034    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.583    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:03.583    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.868    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.897    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.928    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.928    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.933    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.934    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.935    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.935    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.936    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.936    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.936    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.936    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.936    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.955    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.955    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.965    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.975    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.975    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:04.011    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.105    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.443    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:05.019    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.060    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.747    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.747    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.747    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.747    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.747    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.747    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.749    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.749    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.750    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:09.185     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:09.194    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:09.696    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:09.696    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:10.004    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:10.032    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:10.062    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:10.062    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:10.063    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:10.067    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:10.068    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:10.070    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:10.070    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:10.070    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:10.070    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:10.073    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:10.073    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:10.073    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:10.073    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:10.073    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:10.073    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:1\n..\n.425    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:12.425    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:12.427    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:12.427    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:12.427    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:12.427    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:12.427    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:12.427    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.427    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.427    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.428    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:12.428    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:12.428    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:12.428    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:12.428    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:12.428    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.428    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.438    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:12.439    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:12.439    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:12.446    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.446    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.447    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta\n  0:00:12.454    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg\n  0:00:12.460    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/simplified_contigs.fasta\n  0:00:12.467    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/intermediate_contigs.fasta\n  0:00:12.479    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:12.479    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.479    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.479    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:12.479    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:12.479    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:12.535   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.725   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:13.014   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:13.014   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:13.027    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:13.087   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:13.094   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:13.097   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:13.103   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:13.103   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:13.103   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:13.116   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:13.121   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:13.140    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:13.140    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:13.140    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:13.140    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:13.140    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:13.140    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:13.141    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:13.141    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:13.141    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:13.141    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:13.141    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:13.141    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:13.141    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:13.141    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:13.142    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:13.142    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:13.142    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:13.142    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:13.143    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:13.143    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:13.143    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:13.143    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:13.143    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:13.143    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:13.144    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta\n  0:00:13.149    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg\n  0:00:13.156    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/final_contigs.paths\n  0:00:13.166    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/scaffolds.paths\n  0:00:13.186    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:13.189    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 13 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:38:20", "plugin": "core", "name": "start_epoch", "raw_value": "1684147100.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:38:34", "plugin": "core", "name": "end_epoch", "raw_value": "1684147114.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "14 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "14.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 2, "time_seconds": 74.2398328781128, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "ff37804c6423f6af"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "c364096c78490c2f"}}, "job": {"model_class": "Job", "id": "0b60d299454c1552", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:39:06.603349", "create_time": "2023-05-15T10:38:13.278677", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-2ck2w", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat && python '/galaxy/server/database/jobs_directory/000/20/configs/tmp752ycsos' < contigs.fasta > '/galaxy/server/database/objects/4/f/3/dataset_4f360ab2-54ad-4699-be0f-fe6dc409c2fb.dat' && python '/galaxy/server/database/jobs_directory/000/20/configs/tmp752ycsos' < scaffolds.fasta > '/galaxy/server/database/objects/c/8/7/dataset_c87a8ab5-8392-4864-b591-9c8182a7a3af.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 21, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 22, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq.gz\""}, "inputs": {"libraries_0|files_0|rev_reads": {"id": "c364096c78490c2f", "src": "hda", "uuid": "15a3a422-6ffc-40fb-b8c6-edb8e667e1e1"}, "libraries_0|files_0|fwd_reads": {"id": "ff37804c6423f6af", "src": "hda", "uuid": "8eabf6b3-901c-4601-b9d4-4f9ffe8814ed"}}, "outputs": {"out_scaffold_stats": {"id": "5287c7b7b70c6f26", "src": "hda", "uuid": "c87a8ab5-8392-4864-b591-9c8182a7a3af"}, "out_contig_stats": {"id": "79c22cc14bed36b3", "src": "hda", "uuid": "4f360ab2-54ad-4699-be0f-fe6dc409c2fb"}, "out_contigs": {"id": "4bd34eca852ac5c1", "src": "hda", "uuid": "feabbdc4-cffc-4ceb-8256-c2c2e6369cd5"}, "out_scaffolds": {"id": "367fb282a7e616ee", "src": "hda", "uuid": "f5fb9a00-de48-4553-88c2-8ee5d6c94a03"}, "out_log": {"id": "ee3cd01c58df52a6", "src": "hda", "uuid": "a298871b-8fe4-44e8-a351-92f26b334877"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/20/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat']\n      right reads: ['/galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat\n  0:00:01.443     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\n  0:00:02.878     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.889    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.338    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.338    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.638    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.668    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.699    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.702    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.706    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.708    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.720    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.720    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.720    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat\n  0:00:03.740    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.757    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.775    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.776    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.792    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.792    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.792    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.792    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat and /galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\n  0:00:03.825    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.830    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.833    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.872    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.872    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.872    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n  0:00:03.879    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.071    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.076     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.184   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.297   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.448     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.448     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.448     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.449     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.450     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.450     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.450     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.188     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.197    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.197    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.475    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.475    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.618    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.619    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.619    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.620    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.620    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.620    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.150     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.165    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.750    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.750    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.068    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.097    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.128    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.128    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.131    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.132    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:11.676    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.679    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.679    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.679    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.679    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.679    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.679    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.679    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.695    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.695    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.695    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.700    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.700    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.701    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:11.706    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:11.712    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta\n  0:00:11.718    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta\n  0:00:11.729    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.729    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.729    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.785   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.975   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.256   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.256   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.267    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.327   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.333   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.335   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.340   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.340   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.340   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.350   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.355   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.373    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.373    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.373    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.373    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.374    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.374    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.374    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.375    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.375    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.375    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.375    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.375    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.375    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.375    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.376    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.377    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.377    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.377    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.379    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:12.387    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:12.393    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths\n  0:00:12.404    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths\n  0:00:12.425    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.429    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/20/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat']\n      right reads: ['/galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat\n  0:00:01.443     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\n  0:00:02.878     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.889    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.338    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.338    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.638    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.668    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.699    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.702    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.706    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.708    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.720    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.720    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.720    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat\n  0:00:03.740    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.757    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.774    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.775    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.776    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.792    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.792    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.792    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.792    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/8/e/a/dataset_8eabf6b3-901c-4601-b9d4-4f9ffe8814ed.dat and /galaxy/server/database/objects/1/5/a/dataset_15a3a422-6ffc-40fb-b8c6-edb8e667e1e1.dat\n  0:00:03.825    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.830    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.833    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.872    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.872    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.872    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n  0:00:03.879    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.071    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.076     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.184   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.297   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.448     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.448     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.448     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.449     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.450     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.450     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.450     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.188     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.197    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.197    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.475    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.475    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.618    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.619    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.619    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.620    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.620    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.620    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.150     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.165    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.750    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.750    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.068    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.097    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.128    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.128    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.131    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.132    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:11.676    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.679    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.679    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.679    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.679    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.679    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.679    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.679    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.679    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.679    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.695    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.695    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.695    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.700    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.700    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.701    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:11.706    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:11.712    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta\n  0:00:11.718    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta\n  0:00:11.729    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.729    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.729    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.785   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.975   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.256   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.256   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.267    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.327   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.333   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.335   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.340   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.340   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.340   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.350   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.355   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.373    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.373    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.373    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.373    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.374    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.374    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.374    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.374    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.375    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.375    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.375    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.375    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.375    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.375    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.375    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.376    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.376    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.377    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.377    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.377    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.377    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.377    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.379    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:12.387    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:12.393    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths\n  0:00:12.404    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths\n  0:00:12.425    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.429    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:38:39", "plugin": "core", "name": "start_epoch", "raw_value": "1684147119.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:38:56", "plugin": "core", "name": "end_epoch", "raw_value": "1684147136.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "17 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "17.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 3, "time_seconds": 59.17647695541382, "inputs": {"sc": false, "careful": false, "kmer_choice|auto_kmer_choice": true, "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "25b13e95c0cda191"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "4720d46e91e2724e"}}, "job": {"model_class": "Job", "id": "3910dc1d82de14bf", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:39:44.270643", "create_time": "2023-05-15T10:39:02.618686", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-2q48m", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250}  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat --pe1-2 fastq:/galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat && python '/galaxy/server/database/jobs_directory/000/23/configs/tmpg3v3a510' < contigs.fasta > '/galaxy/server/database/objects/e/3/5/dataset_e35fc116-c796-4177-88d4-77b72fda16a9.dat' && python '/galaxy/server/database/jobs_directory/000/23/configs/tmpg3v3a510' < scaffolds.fasta > '/galaxy/server/database/objects/0/3/2/dataset_0328e57b-5e66-4782-9a9e-5befdbfec076.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 1, \"auto_kmer_choice\": true}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 33, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 34, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "25b13e95c0cda191", "src": "hda", "uuid": "69cbc08a-36f5-46f2-967e-926d114dcb18"}, "libraries_0|files_0|rev_reads": {"id": "4720d46e91e2724e", "src": "hda", "uuid": "3bd203be-ff14-40e2-9148-011b92902f39"}}, "outputs": {"out_log": {"id": "62b1ef012b50c6e8", "src": "hda", "uuid": "bdfce280-51c7-4e13-8c94-82fe4e54ab29"}, "out_contig_stats": {"id": "19e457f3c5ab5291", "src": "hda", "uuid": "e35fc116-c796-4177-88d4-77b72fda16a9"}, "out_scaffold_stats": {"id": "97ad0b545bab8416", "src": "hda", "uuid": "0328e57b-5e66-4782-9a9e-5befdbfec076"}, "out_contigs": {"id": "aa03f75d15e82c7b", "src": "hda", "uuid": "3c1c529f-c7a0-499d-bbb0-070d5e12502e"}, "out_scaffolds": {"id": "e49053c6aca24142", "src": "hda", "uuid": "72d1a810-537b-478a-ba75-7b69e81c2bd5"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/23/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/23/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat']\n      right reads: ['/galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.009     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.010     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.012     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat\n  0:00:01.524     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\n  0:00:03.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:03.014    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.456    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.457    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.770    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.801    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.833    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.836    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.840    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.841    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.851    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.852    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.852    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat\n  0:00:03.871    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\n  0:00:03.887    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.887    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.887    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.907    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.907    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.919    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.919    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.919    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.919    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat and /galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\n  0:00:03.951    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.957    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.960    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:04.004    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:04.004    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:04.004    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n  0:00:04.011    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.076    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.082     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.191   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.199     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.317   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.467     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.467     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.467     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.468     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.468     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.468     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.468     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.217     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.226    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.226    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.530    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.530    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.680    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.681    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.681    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.682    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.682    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.682    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:03.175     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:03.188    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.706    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.706    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.004    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.033    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.062    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:04.062    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.064    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.066    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:04.066    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea\n..\nshort gaps\n  0:00:09.543    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.545    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.545    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.545    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.545    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:09.545    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.545    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.545    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.556    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.556    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.556    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.566    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:09.567    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:09.574    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:09.581    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/simplified_contigs.fasta\n  0:00:09.587    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/intermediate_contigs.fasta\n  0:00:09.598    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:09.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.599    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.661   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.850   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.131   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.131   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:10.144    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.205   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.214   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.216   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.222   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.236   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.242   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.264    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.265    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.265    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.265    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.266    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.266    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.266    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.266    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.267    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.267    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.267    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.267    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.267    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.267    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.267    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.268    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.268    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:10.268    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:10.269    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.269    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.269    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.269    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.269    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.270    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.270    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.271    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.271    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.271    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.271    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:10.272    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:10.280    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:10.287    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/final_contigs.paths\n  0:00:10.300    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/scaffolds.paths\n  0:00:10.324    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.327    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/23/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/23/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat']\n      right reads: ['/galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.009     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.010     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.012     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat\n  0:00:01.524     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\n  0:00:03.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:03.014    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.456    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.457    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.770    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.801    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.833    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.836    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.840    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.841    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.851    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.852    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.852    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat\n  0:00:03.871    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\n  0:00:03.887    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.887    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.887    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.905    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.907    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.907    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.919    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.919    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.919    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.919    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/6/9/c/dataset_69cbc08a-36f5-46f2-967e-926d114dcb18.dat and /galaxy/server/database/objects/3/b/d/dataset_3bd203be-ff14-40e2-9148-011b92902f39.dat\n  0:00:03.951    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.957    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.960    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:04.004    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:04.004    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:04.004    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n  0:00:04.011    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.076    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.082     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.191   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.199     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.317   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.467     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.467     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.467     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.468     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.468     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.468     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.468     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.217     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.226    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.226    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.530    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.530    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.680    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.681    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.681    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.682    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.682    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.682    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:03.175     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:03.188    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.706    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.706    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.004    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.033    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.062    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:04.062    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.064    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.066    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:04.066    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea\n..\nshort gaps\n  0:00:09.543    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.545    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.545    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.545    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.545    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.545    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.545    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:09.545    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.545    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.545    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.556    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.556    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.556    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.566    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:09.567    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:09.574    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:09.581    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/simplified_contigs.fasta\n  0:00:09.587    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/intermediate_contigs.fasta\n  0:00:09.598    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:09.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.599    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.661   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.850   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.131   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.131   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:10.144    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.205   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.214   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.216   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.222   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.236   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.242   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.264    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.265    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.265    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.265    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.265    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.266    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.266    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.266    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.266    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.267    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.267    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.267    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.267    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.267    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.267    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.267    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.268    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.268    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:10.268    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:10.269    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.269    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.269    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.269    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.269    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.269    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.269    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.270    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.270    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.270    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.270    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.271    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.271    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.271    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.271    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:10.272    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:10.280    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:10.287    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/final_contigs.paths\n  0:00:10.300    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/scaffolds.paths\n  0:00:10.324    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.327    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:39:04", "plugin": "core", "name": "start_epoch", "raw_value": "1684147144.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:39:34", "plugin": "core", "name": "end_epoch", "raw_value": "1684147174.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "30 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "30.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 4, "time_seconds": 57.9376277923584, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "77", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "6b91b47d11b6d78e"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "300245445c5b77f5"}}, "job": {"model_class": "Job", "id": "3c91e47720028335", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:40:04.672624", "create_time": "2023-05-15T10:39:24.614121", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-tk7vk", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"77\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat --pe1-2 fastq:/galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat && python '/galaxy/server/database/jobs_directory/000/26/configs/tmpn5ytfxcu' < contigs.fasta > '/galaxy/server/database/objects/f/c/b/dataset_fcbe5c29-fd03-4c3b-9588-16bb05b3053f.dat' && python '/galaxy/server/database/jobs_directory/000/26/configs/tmpn5ytfxcu' < scaffolds.fasta > '/galaxy/server/database/objects/6/d/d/dataset_6dd46c66-7db3-4412-8286-abe24ba29d2e.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 40, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 41, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"77\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|rev_reads": {"id": "300245445c5b77f5", "src": "hda", "uuid": "9e7d925a-fe74-46e6-a08c-0f09bea38357"}, "libraries_0|files_0|fwd_reads": {"id": "6b91b47d11b6d78e", "src": "hda", "uuid": "f96caedc-d155-4572-8c29-192579866177"}}, "outputs": {"out_contig_stats": {"id": "16e2039e806b0a96", "src": "hda", "uuid": "fcbe5c29-fd03-4c3b-9588-16bb05b3053f"}, "out_scaffold_stats": {"id": "f3a6691dd209bed3", "src": "hda", "uuid": "6dd46c66-7db3-4412-8286-abe24ba29d2e"}, "out_contigs": {"id": "7af09b7b82dac7e2", "src": "hda", "uuid": "4a2f95cd-ad23-481d-bcdf-18582080ed8c"}, "out_scaffolds": {"id": "38234c428c48191b", "src": "hda", "uuid": "1b7cdf74-51dc-49ae-81d7-c72e6eb0bd6e"}, "out_log": {"id": "dcf2a2e9c9140dfd", "src": "hda", "uuid": "220c8841-b280-452c-9ef3-06792abf2b5a"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/26/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/26/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat']\n      right reads: ['/galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/26/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat\n  0:00:01.456     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\n  0:00:02.917     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.928    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.394    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.394    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.669    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.703    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.738    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.741    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.745    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.747    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.761    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.761    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.761    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat\n  0:00:03.779    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.797    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.809    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.809    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.819    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.819    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.819    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.819    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat and /galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\n  0:00:03.848    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.853    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.856    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.897    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.897    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.897    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n  0:00:03.904    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/26/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/26/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.070    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.074     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.182   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.187     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.291   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.456     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.456     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.456     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.457     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.458     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.458     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.458     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:01.169     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.178    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.178    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.457    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.457    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.593    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.594    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.594    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.594    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.594    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.594    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:03.007     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:03.028    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.607    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:03.607    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.884    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.917    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.948    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.948    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.951    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.953    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:09.008    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.010    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.010    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.010    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.010    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.010    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.011    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.011    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.011    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:09.011    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.023    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.023    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.023    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.031    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.031    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.031    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:09.039    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:09.044    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/simplified_contigs.fasta\n  0:00:09.050    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/intermediate_contigs.fasta\n  0:00:09.062    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.062    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.062    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.062    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:09.062    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.062    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.128   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.318   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.598   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.598   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:09.612    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.674   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.683   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.687   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.687   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.687   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.701   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.705   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.724    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.725    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.726    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.727    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.727    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.727    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.727    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.727    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.727    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.727    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.727    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.727    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.727    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.728    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.728    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.731    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:09.737    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:09.745    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/final_contigs.paths\n  0:00:09.755    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/scaffolds.paths\n  0:00:09.776    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.778    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/26/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/26/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/26/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat']\n      right reads: ['/galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/26/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat\n  0:00:01.456     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\n  0:00:02.917     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.928    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.394    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.394    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.669    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.703    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.738    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.741    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.745    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.747    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.761    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.761    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.761    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat\n  0:00:03.779    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.797    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.808    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.809    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.809    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.819    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.819    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.819    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.819    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/9/6/dataset_f96caedc-d155-4572-8c29-192579866177.dat and /galaxy/server/database/objects/9/e/7/dataset_9e7d925a-fe74-46e6-a08c-0f09bea38357.dat\n  0:00:03.848    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.853    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.856    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.897    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.897    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.897    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n  0:00:03.904    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/26/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/26/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.070    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.074     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.182   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.187     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.291   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.456     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.456     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.456     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.457     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.458     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.458     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.458     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:01.169     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.178    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.178    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.457    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.457    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.593    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.594    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.594    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.594    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.594    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.594    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:03.007     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:03.028    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.607    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:03.607    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.884    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.917    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.948    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.948    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.951    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.953    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:09.008    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.010    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.010    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.010    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.010    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.010    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.011    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.011    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.011    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:09.011    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.023    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.023    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.023    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.031    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.031    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.031    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:09.039    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:09.044    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/simplified_contigs.fasta\n  0:00:09.050    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/intermediate_contigs.fasta\n  0:00:09.062    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.062    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.062    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.062    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:09.062    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.062    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.128   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.318   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.598   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.598   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:09.612    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.674   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.683   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.687   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.687   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.687   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.701   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.705   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.724    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.725    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.726    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.727    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.727    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.727    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.727    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.727    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.727    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.727    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.727    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.727    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.727    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.728    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.728    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.728    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.731    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:09.737    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:09.745    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/final_contigs.paths\n  0:00:09.755    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/scaffolds.paths\n  0:00:09.776    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.778    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/26/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "14 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "14.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:39:52", "plugin": "core", "name": "end_epoch", "raw_value": "1684147192.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:39:38", "plugin": "core", "name": "start_epoch", "raw_value": "1684147178.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 5, "time_seconds": 49.531354665756226, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "485e23db33e3d9e9"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "2a5bbb9d982fecdd"}, "contig_graph_out": true, "scaffold_graph_out": true}, "job": {"model_class": "Job", "id": "5287c7b7b70c6f26", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:40:32.912092", "create_time": "2023-05-15T10:40:03.192843", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-j6pxg", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat --pe1-2 fastq:/galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat && python '/galaxy/server/database/jobs_directory/000/29/configs/tmpfrujb_vb' < contigs.fasta > '/galaxy/server/database/objects/1/5/4/dataset_15479344-3d26-42c3-a1a9-08208746701e.dat' && python '/galaxy/server/database/jobs_directory/000/29/configs/tmpfrujb_vb' < scaffolds.fasta > '/galaxy/server/database/objects/d/f/a/dataset_dfa84c9a-8005-4ecb-894a-df5024ad1ac0.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "true", "contig_graph_out": "true", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 47, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 48, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "485e23db33e3d9e9", "src": "hda", "uuid": "740e848c-2d60-4f19-9162-16aaefc25248"}, "libraries_0|files_0|rev_reads": {"id": "2a5bbb9d982fecdd", "src": "hda", "uuid": "865afddc-366d-470c-964c-95863ef6abf6"}}, "outputs": {"out_contigs": {"id": "e7564f0715e18d1d", "src": "hda", "uuid": "6b28773f-c908-4798-973c-222bd0a2e686"}, "out_scaffolds": {"id": "9dd906ad18a991b1", "src": "hda", "uuid": "8abb7460-1067-4679-8f9b-4d7e0396b458"}, "out_log": {"id": "56eb0f63d330cf35", "src": "hda", "uuid": "20cf40ff-a4e8-4ed4-970c-42985408e907"}, "contig_graph": {"id": "bea837a997072c66", "src": "hda", "uuid": "672a3ff9-c475-422a-bbb3-2c6aedc620da"}, "out_contig_stats": {"id": "65a39d70c2367b5e", "src": "hda", "uuid": "15479344-3d26-42c3-a1a9-08208746701e"}, "out_scaffold_stats": {"id": "fc85483542ea13e0", "src": "hda", "uuid": "dfa84c9a-8005-4ecb-894a-df5024ad1ac0"}, "scaffold_graph": {"id": "b17a22f4dce59819", "src": "hda", "uuid": "64c0b57f-f044-42d7-95dc-d3d49669c33b"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/29/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/29/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat']\n      right reads: ['/galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/29/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/29/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/29/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/29/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat\n  0:00:01.498     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\n  0:00:02.957     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.969    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.404    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.404    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.691    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.739    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.774    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.777    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.782    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.784    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.797    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat\n  0:00:03.815    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\n  0:00:03.832    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.832    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.832    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.856    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.856    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.857    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.857    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.869    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.869    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.869    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.869    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat and /galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\n  0:00:03.899    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.904    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.907    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.948    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.948    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.948    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/29/working/corrected/corrected.yaml\n  0:00:03.956    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/29/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/29/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/29/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.073    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.078     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.189     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.291   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.434     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.436     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.199     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.208    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.208    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.491    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.491    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.654    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.655    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.655    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.655    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.655    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.655    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.096     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.111    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.654    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.654    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.927    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.956    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.986    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.986    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.996    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.997    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:11.674    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.675    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.675    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.675    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.675    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.675    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.675    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.676    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.676    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.676    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.676    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.677    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.677    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.687    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.687    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.687    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.693    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.693    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.694    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/before_rr.fasta\n  0:00:11.700    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph.fastg\n  0:00:11.705    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/simplified_contigs.fasta\n  0:00:11.710    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/intermediate_contigs.fasta\n  0:00:11.722    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.723    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.723    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.723    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.779   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.967   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.249   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.249   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.264    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.323   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.331   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.334   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.336   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.337   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.337   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.349   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.355   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.375    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.375    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.376    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.376    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.376    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.377    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.377    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.377    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.377    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.377    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.377    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.377    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.377    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.377    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.379    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.379    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.380    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.380    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.381    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/before_rr.fasta\n  0:00:12.387    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph.fastg\n  0:00:12.394    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/29/working//K33/final_contigs.paths\n  0:00:12.407    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/29/working//K33/scaffolds.paths\n  0:00:12.429    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.432    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/29/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/29/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/29/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/29/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/29/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/29/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/29/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/29/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/29/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/29/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat']\n      right reads: ['/galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/29/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/29/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/29/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/29/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat\n  0:00:01.498     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\n  0:00:02.957     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.969    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.404    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.404    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.691    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.739    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.774    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.777    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.782    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.784    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.797    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.797    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat\n  0:00:03.815    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\n  0:00:03.832    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.832    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.832    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.855    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.856    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.856    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.857    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.857    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.869    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.869    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.869    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.869    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/4/0/dataset_740e848c-2d60-4f19-9162-16aaefc25248.dat and /galaxy/server/database/objects/8/6/5/dataset_865afddc-366d-470c-964c-95863ef6abf6.dat\n  0:00:03.899    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.904    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.907    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.948    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.948    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.948    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/29/working/corrected/corrected.yaml\n  0:00:03.956    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/29/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/29/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/29/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.073    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.078     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.189     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.291   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.434     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.434     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.436     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.436     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.199     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.208    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.208    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.491    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.491    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.654    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.655    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.655    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.655    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.655    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.655    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.096     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.111    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.654    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.654    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.927    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.956    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.986    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.986    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.996    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.997    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:11.674    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.675    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.675    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.675    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.675    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.675    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.675    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.676    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.676    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.676    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.676    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.676    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.677    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.677    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.687    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.687    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.687    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.693    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.693    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.694    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/before_rr.fasta\n  0:00:11.700    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph.fastg\n  0:00:11.705    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/simplified_contigs.fasta\n  0:00:11.710    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/intermediate_contigs.fasta\n  0:00:11.722    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.723    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.723    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.723    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.779   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.967   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.249   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.249   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.264    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.323   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.331   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.334   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.336   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.337   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.337   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.349   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.355   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.375    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.375    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.375    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.376    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.376    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.376    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.376    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.377    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.377    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.377    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.377    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.377    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.377    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.377    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.377    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.377    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.377    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.379    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.379    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.379    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.380    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.380    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.380    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.380    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.380    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.381    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/29/working//K33/before_rr.fasta\n  0:00:12.387    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/29/working//K33/assembly_graph.fastg\n  0:00:12.394    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/29/working//K33/final_contigs.paths\n  0:00:12.407    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/29/working//K33/scaffolds.paths\n  0:00:12.429    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.432    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/29/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/29/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/29/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/29/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/29/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/29/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/29/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/29/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "17 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "17.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:40:22", "plugin": "core", "name": "end_epoch", "raw_value": "1684147222.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:40:05", "plugin": "core", "name": "start_epoch", "raw_value": "1684147205.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 6, "time_seconds": 49.57834577560425, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "e483a35d87944b52"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "d73b021fa89350f8"}}, "job": {"model_class": "Job", "id": "ee3cd01c58df52a6", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:40:54.113815", "create_time": "2023-05-15T10:40:25.448991", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-lkmrf", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat --pe1-2 fastq:/galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat && python '/galaxy/server/database/jobs_directory/000/32/configs/tmp0z80hrr_' < contigs.fasta > '/galaxy/server/database/objects/d/b/e/dataset_dbe52cda-e6fc-426b-9664-ccae819496af.dat' && python '/galaxy/server/database/jobs_directory/000/32/configs/tmp0z80hrr_' < scaffolds.fasta > '/galaxy/server/database/objects/c/0/c/dataset_c0c2a3e0-7273-4ac8-904f-09d3beba68f6.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 56, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 57, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "e483a35d87944b52", "src": "hda", "uuid": "3195bf76-218d-4d5d-9ee7-d66983ce5fe1"}, "libraries_0|files_0|rev_reads": {"id": "d73b021fa89350f8", "src": "hda", "uuid": "f7a2cc3b-c1b1-448a-a166-01ce8fc70f37"}}, "outputs": {"out_contig_stats": {"id": "1561c2ea67a8aa2b", "src": "hda", "uuid": "dbe52cda-e6fc-426b-9664-ccae819496af"}, "out_scaffold_stats": {"id": "211e9b5153af112f", "src": "hda", "uuid": "c0c2a3e0-7273-4ac8-904f-09d3beba68f6"}, "out_contigs": {"id": "24334339fd88458c", "src": "hda", "uuid": "ee5246f4-8cc0-46d0-b099-b12077151da6"}, "out_scaffolds": {"id": "583ec1d154ca50d4", "src": "hda", "uuid": "71bf2368-37d9-4a0e-8854-32cd6428773f"}, "out_log": {"id": "3bb2a51f94418034", "src": "hda", "uuid": "e6f7c222-6c1c-4d3a-836c-ce71aa31ea69"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/32/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/32/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat']\n      right reads: ['/galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/32/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.010     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat\n  0:00:01.467     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\n  0:00:02.894     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.904    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.356    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.356    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.677    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.703    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.734    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.737    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.741    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.742    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.756    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat\n  0:00:03.774    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\n  0:00:03.791    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.791    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.791    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.811    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.811    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.826    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.826    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.826    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.826    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat and /galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\n  0:00:03.862    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.867    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.871    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.909    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.909    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.909    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n  0:00:03.917    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/32/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/32/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.088    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.092     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.198   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.203     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.311   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.460     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.460     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.460     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.460     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.461     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.461     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.461     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.230     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.239    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.239    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.521    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.521    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.669    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.670    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.670    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.671    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.671    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.671    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.148     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.163    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.707    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.707    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.004    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.033    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.062    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.062    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.066    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.067    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:11.635    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.638    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.638    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.638    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.638    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.638    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.639    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.639    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.639    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.639    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.639    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.639    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.639    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.639    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.639    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.651    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.651    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.651    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.656    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.656    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.656    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:11.662    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:11.669    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/simplified_contigs.fasta\n  0:00:11.674    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/intermediate_contigs.fasta\n  0:00:11.685    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.685    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.685    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.741   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.935   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.220   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.220   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.234    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.297   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.304   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.307   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.315   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.316   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.316   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.329   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.334   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.357    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.357    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.359    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.359    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.360    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.360    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.360    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.360    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.360    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.360    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.360    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.360    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.360    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.361    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.361    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.361    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.362    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.362    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.362    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.362    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.362    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.363    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.363    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.364    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.364    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.364    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.364    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.364    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.365    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:12.371    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:12.377    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/final_contigs.paths\n  0:00:12.388    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/scaffolds.paths\n  0:00:12.411    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.413    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/32/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/32/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/32/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat']\n      right reads: ['/galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/32/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.010     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.010     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat\n  0:00:01.467     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\n  0:00:02.894     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.904    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.356    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.356    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.677    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.703    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.734    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.737    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.741    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.742    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.756    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.756    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat\n  0:00:03.774    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\n  0:00:03.791    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.791    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.791    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.809    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.811    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.811    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.826    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.826    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.826    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.826    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/1/9/dataset_3195bf76-218d-4d5d-9ee7-d66983ce5fe1.dat and /galaxy/server/database/objects/f/7/a/dataset_f7a2cc3b-c1b1-448a-a166-01ce8fc70f37.dat\n  0:00:03.862    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.867    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.871    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.909    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.909    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.909    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n  0:00:03.917    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/32/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/32/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.088    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.092     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.198   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.203     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.311   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.460     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.460     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.460     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.460     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.461     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.461     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.461     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.230     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.239    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.239    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.521    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.521    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.669    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.670    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.670    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.671    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.671    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.671    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.148     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.163    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.707    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.707    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.004    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.033    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.062    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.062    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.066    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.067    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:11.635    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.638    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.638    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.638    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.638    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.638    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.638    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.639    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.639    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.639    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.639    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.639    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.639    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.639    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.639    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.639    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.651    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.651    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.651    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.656    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.656    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.656    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:11.662    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:11.669    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/simplified_contigs.fasta\n  0:00:11.674    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/intermediate_contigs.fasta\n  0:00:11.685    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.685    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.685    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.741   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.935   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.220   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.220   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.234    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.297   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.304   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.307   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.315   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.316   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.316   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.329   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.334   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.357    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.357    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.359    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.359    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.360    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.360    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.360    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.360    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.360    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.360    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.360    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.360    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.360    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.361    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.361    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.361    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.362    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.362    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.362    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.362    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.362    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.362    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.362    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.363    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.363    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.363    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.363    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.364    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.364    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.364    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.364    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.364    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.365    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:12.371    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:12.377    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/final_contigs.paths\n  0:00:12.388    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/scaffolds.paths\n  0:00:12.411    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.413    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/32/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "17 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "17.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:40:44", "plugin": "core", "name": "end_epoch", "raw_value": "1684147244.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:40:27", "plugin": "core", "name": "start_epoch", "raw_value": "1684147227.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 7, "time_seconds": 47.0799081325531, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "e3ce93a0dbb0565f"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "ed0bd28de3d6a073"}}, "job": {"model_class": "Job", "id": "19e457f3c5ab5291", "state": "ok", "exit_code": 0, "update_time": "2023-05-15T10:41:20.469102", "create_time": "2023-05-15T10:40:51.483484", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "f3392d7459007ad8", "external_id": "gxy-hzftd", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat && python '/galaxy/server/database/jobs_directory/000/35/configs/tmplp739jhb' < contigs.fasta > '/galaxy/server/database/objects/6/b/e/dataset_6be1a48f-0a04-4009-a7f1-a349bc8a3548.dat' && python '/galaxy/server/database/jobs_directory/000/35/configs/tmplp739jhb' < scaffolds.fasta > '/galaxy/server/database/objects/e/9/9/dataset_e999f795-d844-4c4f-ae36-22132fce2a88.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 63, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 64, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "e3ce93a0dbb0565f", "src": "hda", "uuid": "52a95c0e-c555-4470-b4ec-e13281599547"}, "libraries_0|files_0|rev_reads": {"id": "ed0bd28de3d6a073", "src": "hda", "uuid": "be53b56f-bec8-48b1-9856-d4db2210daaf"}}, "outputs": {"out_contig_stats": {"id": "75a6ccdc0aaa33d6", "src": "hda", "uuid": "6be1a48f-0a04-4009-a7f1-a349bc8a3548"}, "out_scaffold_stats": {"id": "bbbd9f0e0e6d1e34", "src": "hda", "uuid": "e999f795-d844-4c4f-ae36-22132fce2a88"}, "out_contigs": {"id": "313dd98be59811e4", "src": "hda", "uuid": "a7124cc0-b6ce-450d-80d7-74653e070d5f"}, "out_scaffolds": {"id": "229f82154ae5f684", "src": "hda", "uuid": "2643833e-71dc-4190-a363-45ddc179a3b9"}, "out_log": {"id": "9c00ef57733b3b6f", "src": "hda", "uuid": "5257975e-bd71-49b4-8bd6-c6d53bea34b5"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/35/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/35/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat']\n      right reads: ['/galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/35/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat\n  0:00:01.490     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\n  0:00:02.944     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.958    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.418    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.419    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.712    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.742    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.768    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.771    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.773    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.775    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.786    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.786    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.786    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat\n  0:00:03.803    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\n  0:00:03.820    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.820    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.820    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.840    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.840    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.858    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.858    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.858    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.858    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat and /galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\n  0:00:03.898    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.903    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.906    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.947    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.947    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.947    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n  0:00:03.953    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/35/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/35/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.074    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.078     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.184   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.297   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.454     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.454     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.454     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.455     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.455     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.455     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.456     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.176     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.185    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.185    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.465    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.465    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.610    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.611    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.611    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.612    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.612    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.612    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.118     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.135    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.736    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.736    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.076    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.113    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.143    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.143    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.148    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.150    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:12.134    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:12.142    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:12.142    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:12.142    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:12.142    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:12.142    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.144    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:12.144    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:12.144    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:12.144    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:12.144    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.144    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.159    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:12.159    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:12.159    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:12.167    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.167    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.168    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:12.176    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:12.183    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/simplified_contigs.fasta\n  0:00:12.187    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/intermediate_contigs.fasta\n  0:00:12.198    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:12.198    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.199    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.199    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:12.199    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:12.199    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:12.263   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.454   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.742   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.743   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.756    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.817   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.825   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.828   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.835   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.835   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.835   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.848   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.854   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.877    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.877    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.877    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.877    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.878    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.878    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.879    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.879    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.879    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.879    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.880    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.880    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.880    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.880    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.880    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.880    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.880    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.880    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.881    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.881    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.883    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:12.888    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:12.895    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/final_contigs.paths\n  0:00:12.907    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/scaffolds.paths\n  0:00:12.932    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.935    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/35/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/35/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/35/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat']\n      right reads: ['/galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/35/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat\n  0:00:01.490     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\n  0:00:02.944     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.958    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.418    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.419    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.712    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.742    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.768    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.771    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.773    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.775    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.786    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.786    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.786    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat\n  0:00:03.803    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\n  0:00:03.820    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.820    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.820    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.839    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.840    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.840    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.858    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.858    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.858    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.858    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/5/2/a/dataset_52a95c0e-c555-4470-b4ec-e13281599547.dat and /galaxy/server/database/objects/b/e/5/dataset_be53b56f-bec8-48b1-9856-d4db2210daaf.dat\n  0:00:03.898    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.903    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.906    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.947    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.947    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.947    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n  0:00:03.953    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/35/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/35/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.074    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.078     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.184   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.297   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.454     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.454     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.454     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.455     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.455     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.455     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.456     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.176     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.185    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.185    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.465    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.465    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.610    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.611    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.611    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.612    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.612    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.612    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.118     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.135    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.736    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.736    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.076    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.113    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.143    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.143    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.148    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.150    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:12.134    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:12.142    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:12.142    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:12.142    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:12.142    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:12.142    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.143    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.144    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:12.144    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:12.144    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:12.144    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:12.144    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:12.144    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.144    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.159    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:12.159    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:12.159    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:12.167    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.167    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.168    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:12.176    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:12.183    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/simplified_contigs.fasta\n  0:00:12.187    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/intermediate_contigs.fasta\n  0:00:12.198    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:12.198    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.199    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.199    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:12.199    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:12.199    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:12.263   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.454   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.742   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.743   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.756    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.817   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.825   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.828   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.835   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.835   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.835   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.848   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.854   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.877    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.877    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.877    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.877    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.878    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.878    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.879    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.879    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.879    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.879    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.880    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.880    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.880    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.880    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.880    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.880    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.880    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.880    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.881    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.881    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.881    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.881    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.881    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.881    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.883    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:12.888    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:12.895    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/final_contigs.paths\n  0:00:12.907    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/scaffolds.paths\n  0:00:12.932    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.935    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/35/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2023-05-15 10:41:11", "plugin": "core", "name": "end_epoch", "raw_value": "1684147271.0000000"}, {"title": "Job Start Time", "value": "2023-05-15 10:40:53", "plugin": "core", "name": "start_epoch", "raw_value": "1684147253.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}]}