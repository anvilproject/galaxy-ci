<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="7"
           failures="7"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="35.326884746551514">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="32.01769709587097">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="30.105732202529907">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="28.78455901145935">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="29.791088819503784">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="29.08166527748108">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="30.423012733459473">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="9.30599594116211">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 9.30599594116211, "tool_id": "bcftools_filter", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="31.897382974624634">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="39.81291890144348">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="30.695322036743164">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="16.87964916229248">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 16.87964916229248, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="36.98622465133667">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input|input_bams": [   {    "id": "29d6322971cf9f92",    "src": "hda"   },   {    "id": "0bd86909dfbeaf50",    "src": "hda"   },   {    "id": "6fc71a01e9bb932e",    "src": "hda"   }  ],  "input|input_number": "multiple",  "output_type": "v",  "reference_source|ref_file": {   "id": "8741e62b2a8f7db8",   "src": "hda"  },  "reference_source|reference_source_selector": "history",  "sec_output_options|output_tags": [   "DP",   "INFO/AD",   "DV"  ],  "sec_restrict|targets|targets_0|chrom": "17",  "sec_restrict|targets|targets_0|start": "100",  "sec_restrict|targets|targets_0|stop": "104",  "sec_restrict|targets|targets_src": "targets" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/e/e/7/dataset_ee7e1c8c-6880-4327-b24f-091b6f8f3b8b.dat\u0027 mpileup_1.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/b/e/0/metadata_be01ea1d-7a38-4826-a619-41909513a257.dat\u0027 mpileup_1.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/4/a/e/dataset_4aeffb9d-c65f-4d86-97a2-5111b48ff278.dat\u0027 mpileup_2.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/8/a/e/metadata_8ae83713-6e72-44ba-bf75-e81ecc16355b.dat\u0027 mpileup_2.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/2/0/8/dataset_20846d59-05fe-4f22-afb8-c59e65800650.dat\u0027 mpileup_3.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/2/8/1/metadata_2814f374-756b-4903-aacc-4cdf431e2e59.dat\u0027 mpileup_3.bam.bai \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/a/e/dataset_cae01833-0216-4018-992d-a72fb9654fe7.dat\u0027 ref.fa \u0026\u0026 samtools faidx ref.fa \u0026\u0026           bcftools mpileup  --fasta-ref \u0027ref.fa\u0027   -d \"250\"   --annotate \"DP,INFO/AD,DV\"                --targets \u002717:100-104\u0027     --threads ${GALAXY_SLOTS:-4}    --output-type \u0027v\u0027   mpileup_1.bam mpileup_2.bam mpileup_3.bam \u003e \u0027/galaxy/server/database/objects/7/2/c/dataset_72ca4bef-7733-4810-9f09-bac54995f29a.dat\u0027",  "command_version": null,  "create_time": "2023-09-18T19:07:07.792491",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-7px5k",  "galaxy_version": "23.0",  "history_id": "51ad311d25040079",  "id": "14029b6e6edd4181",  "inputs": {   "input_bams": {    "id": "29d6322971cf9f92",    "src": "hda",    "uuid": "ee7e1c8c-6880-4327-b24f-091b6f8f3b8b"   },   "input_bams1": {    "id": "29d6322971cf9f92",    "src": "hda",    "uuid": "ee7e1c8c-6880-4327-b24f-091b6f8f3b8b"   },   "input_bams2": {    "id": "0bd86909dfbeaf50",    "src": "hda",    "uuid": "4aeffb9d-c65f-4d86-97a2-5111b48ff278"   },   "input_bams3": {    "id": "6fc71a01e9bb932e",    "src": "hda",    "uuid": "20846d59-05fe-4f22-afb8-c59e65800650"   },   "ref_file": {    "id": "8741e62b2a8f7db8",    "src": "hda",    "uuid": "cae01833-0216-4018-992d-a72fb9654fe7"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "d8418328d2097a85",    "src": "hda",    "uuid": "72ca4bef-7733-4810-9f09-bac54995f29a"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 204, \"src\": \"hda\"}, {\"id\": 205, \"src\": \"hda\"}, {\"id\": 206, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}",   "output_type": "\"v\"",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 207, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",   "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}",   "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}",   "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}",   "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 1, \"invert_targets_file\": false, \"targets\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"100\", \"stop\": \"104\"}], \"targets_src\": \"targets\"}}",   "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-18T19:07:13.739702",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 36.98622465133667, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="23.36160898208618">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 23.36160898208618, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="65.555659532547">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="33.47529935836792">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.2847936153411865">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2847936153411865, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="34.377291440963745">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="29.63419270515442">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="29.981873989105225">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="28.35519051551819">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="29.237717390060425">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="29.19225573539734">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="29.16946005821228">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="28.352920293807983">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="28.396740198135376">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="36.74059557914734">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="28.267940998077393">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="28.64276385307312">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="62.08584141731262">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="65.57448315620422">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="31.696093320846558">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="51.84557271003723">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/8/4/e/dataset_84e91d68-861a-4930-b009-ea8f09157623.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/5/5/d/dataset_55da6460-3e22-4e44-9eab-da46c7308bc6.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/a/f/0/dataset_af0ae065-db92-46ae-a9a0-118ce3da828b.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "create_time": "2023-09-18T19:02:36.453143",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-b5fwd",  "galaxy_version": "23.0",  "history_id": "51ad311d25040079",  "id": "b90acab91b852c47",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "20.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "20 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695063780.0000000",    "title": "Job End Time",    "value": "2023-09-18 19:03:00"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695063760.0000000",    "title": "Job Start Time",    "value": "2023-09-18 19:02:40"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "2f5346c4b1946f20",    "src": "hda",    "uuid": "af0ae065-db92-46ae-a9a0-118ce3da828b"   },   "design_tsv": {    "id": "db1e8c85cab57f1e",    "src": "hda",    "uuid": "ffe30b81-3ce3-49da-98a7-15869b6eba4c"   },   "genes_tsv": {    "id": "90d54393f47d7204",    "src": "hda",    "uuid": "55da6460-3e22-4e44-9eab-da46c7308bc6"   },   "matrix_mtx": {    "id": "5c99ce7a01ae9923",    "src": "hda",    "uuid": "84e91d68-861a-4930-b009-ea8f09157623"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-09-18 19:02:40--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  273K\n    50K .......... .......... .......... .......... ..........  275K\n   100K .......... .......... .......... .......... ..........  540K\n   150K .......... .......... .......... .......... ..........  275K\n   200K .......... .......... .......... .......... ..........  548K\n   250K .......... .......... .......... .......... ..........  549K\n   300K .......... .......... .......... .......... ..........  549K\n   350K .......... .......... .......... .......... ..........  548K\n   400K .......... .......... .......... .......... ..........  546K\n   450K .......... .......... .......... .......... ..........  547K\n   500K .......... .......... .......... .......... .......... 27.4M\n   550K .......... .......... .......... .......... ..........  552K\n   600K .......... .......... .......... .......... ..........  545K\n   650K .......... .......... .......... .......... .......... 99.0M\n   700K .......... .......... .......... .......... ..........  550K\n   750K .......... .......... .......... .......... .......... 47.6M\n   800K .......... .......... .......... .......... ..........  554K\n   850K .......... .......... .......... .......... ..........  549K\n   900K .......... .......... .......... .......... ..........  145M\n   950K .......... .......... .......... .......... ..........  550K\n  1000K .......... .......... .......... .......... ..........  132M\n  1050K .......... .......... .......... .......... ..........  550K\n  1100K .......... .......... .......... .......... ..........  114M\n  1150K .......... .......... .......... .......... ..........  551K\n  1200K .......... .......... .......... .......... .......... 19.7M\n  1250K .......... .......... .......... .......... ..........  560K\n  1300K .......... .......... .......... .......... ..........  101M\n  1350K .......... .......... .......... .......... ..........  551K\n  1400K .......... .......... .......... .......... .......... 73.2M\n  1450K .......... .......... .......... .......... .......... 41.0M\n  1500K .......... .......... .......... .......... ..........  557K\n  1550K .......... .......... .......... .......... .......... 32.0M\n  1600K .......... .......... .......... .......... ..........  555K\n  1650K .......... .......... .......... .......... ..........  153M\n  1700K .......... .......... .......... .......... .......... 51.5M\n  1750K .......... .......... .......... .......... ..........  555K\n  1800K .......... .......... .......... .......... .......... 46.7M\n  1850K .......... .......... .......... .......... .......... 19.4M\n  1900K .......... .......... .......... .......... ..........  568K\n  1950K .......... .......... .......... .......... .......... 28.2M\n  2000K .......... .......... .......... .......... .......... 25.9M\n  2050K .......... .......... .......... .......... ..........  568K\n  2100K .......... .......... .......... .......... .......... 81.1M\n  2150K .......... .......... .......... .......... .......... 2.12M\n  2200K .......... .......... .......... .......... ..........  737K\n  2250K .......... .......... .......... .......... ..........  150M\n  2300K .......... .......... .......... .......... .......... 2.12M\n  2350K .......... .......... .......... .......... ..........  732K\n  2400K .......... .......... .......... .......... ..........  158M\n  2450K .......... .......... .......... .......... .......... 1.69M\n  2500K .......... .......... .......... .......... .......... 21.5M\n  2550K .......... .......... .......... .......... ..........  830K\n  2600K .......... .......... .......... .......... .......... 72.6M\n  2650K .......... .......... .......... .......... .......... 1.64M\n  2700K .......... .......... .......... .......... .......... 2.37M\n  2750K .......... .......... .......... .......... .......... 1.21M\n  2800K .......... .......... .......... .......... .......... 58.3M\n  2850K .......... .......... .......... .......... .......... 1.09M\n  2900K .......... .......... .......... .......... .......... 9.32M\n  2950K .......... .......... .......... .......... .......... 1.22M\n  3000K .......... .......... .......... .......... ..........  156M\n  3050K .......... .......... .......... .......... .......... 1.66M\n  3100K .......... .......... .......... .......... .......... 2.28M\n  3150K .......... .......... .......... .......... .......... 2.88M\n  3200K .......... .......... .......... .......... .......... 1.20M\n  3250K .......... .......... .......... .......... .......... 9.75M\n  3300K .......... .......... .......... .......... .......... 1.44M\n  3350K .......... .......... .......... .......... .......... 1.36M\n  3400K .......... .......... .......... .......... .......... 11.0M\n  3450K .......... .......... .......... .......... .......... 1.94M\n  3500K .......... .......... .......... .......... .......... 95.4M\n  3550K .......... .......... .......... .......... .......... 1.32M\n  3600K .......... .......... .......... .......... .......... 1.02M\n  3650K .......... .......... .......... .......... .......... 2.12M\n  3700K .......... .......... .......... .......... .......... 43.7M\n  3750K .......... .......... .......... .......... ..........  136M\n  3800K .......... .......... .......... .......... .......... 1.16M\n  3850K .......... .......... .......... .......... .......... 18.7M\n  3900K .......... .......... .......... .......... .......... 1.16M\n  3950K .......... .......... .......... .......... .......... 12.7M\n  4000K .......... .......... .......... .......... .......... 1.07M\n  4050K .......... .......... .......... .......... .......... 14.3M\n  4100K .......... .......... .......... .......... .......... 1.65M\n  4150K .......... .......... .......... .......... .......... 23.9M\n  4200K .......... .......... .......... .......... .......... 5.91M\n  4250K .......... .......... .......... .......... .......... 1.94M\n  4300K .......... .......... .......... .......... .......... 2.14M\n  4350K .......... .......... .......... .......... .......... 14.7M\n  4400K .......... .......... .......... .......... .......... 25.4M\n  4450K .......... .......... .......... .......... .......... 1.64M\n  4500K .......... .......... .......... .......... ..........  114M\n  4550K .......... .......... .......... .......... .......... 5.19M\n  4600K .......... .......... .......... .......... .......... 2.01M\n  4650K .......... .......... .......... .......... .......... 2.10M\n  4700K .......... .......... .......... .......... .......... 16.0M\n  4750K .......... .......... .......... .......... .......... 69.7M\n  4800K .......... .......... .......... .......... .......... 1.63M\n  4850K .......... .......... .......... .......... ..........  106M\n  4900K .......... .......... .......... .......... .......... 5.22M\n  4950K .......... .......... .......... .......... .......... 2.03M\n  5000K .......... .......... .......... .......... .......... 26.5M\n  5050K .......... .......... .......... .......... .......... 2.07M\n  5100K .......... .......... .......... .......... .......... 25.8M\n  5150K .......... .......... .......... .......... .......... 1.74M\n  5200K .......... .......... .......... .......... .......... 22.6M\n  5250K .......... .......... .......... .......... .......... 47.4M\n  5300K .......... .......... .......... .......... .......... 5.90M\n  5350K .......... .......... .......... .......... .......... 1.97M\n  5400K .......... .......... .......... .......... .......... 73.3M\n  5450K .......... .......... .......... .......... .......... 2.09M\n  5500K .......... .......... .......... .......... .......... 17.6M\n  5550K .......... .......... .......... .......... ..........  119M\n  5600K .......... .......... .......... .......... .......... 1.64M\n  5650K .......... .......... .......... .......... .......... 49.0M\n  5700K .......... .......... .......... .......... .......... 6.39M\n  5750K .......... .......... .......... .......... .......... 15.4M\n  5800K .......... .......... .......... .......... .......... 2.13M\n  5850K .......... .......... .......... .......... .......... 86.9M\n  5900K .......... .......... .......... .......... .......... 2.14M\n  5950K .......... .......... .......... .......... .......... 15.8M\n  6000K .......... .......... .......... .......... ..........  104M\n  6050K .......... .......... .......... .......... .......... 1.66M\n  6100K .......... .......... .......... .......... .......... 70.1M\n  6150K .......... .......... .......... .......... .......... 43.1M\n  6200K .......... .......... .......... .......... .......... 5.84M\n  6250K .......... .......... .......... .......... .......... 14.6M\n  6300K .......... .......... .......... .......... .......... 2.19M\n  6350K .......... .......... .......... .......... .......... 2.18M\n  6400K .......... .......... .......... .......... .......... 19.4M\n  6450K .......... .......... .......... .......... .......... 91.3M\n  6500K .......... .......... .......... .......... ..........  141M\n  6550K .......... .......... .......... .......... .......... 1.65M\n  6600K .......... .......... .......... .......... .......... 62.9M\n  6650K .......... .......... .......... .......... .......... 31.8M\n  6700K .......... .......... .......... .......... .......... 6.49M\n  6750K .......... .......... .......... .......... .......... 18.9M\n  6800K .......... .......... .......... .......... .......... 2.11M\n  6850K .......... .......... .......... .......... .......... 39.7M\n  6900K .......... .......... .......... .......... .......... 2.19M\n  6950K .......... .......... .......... .......... .......... 29.4M\n  7000K .......... .......... .......... .......... ..........  110M\n  7050K .......... .......... .......... .......... .......... 56.5M\n  7100K .......... .......... .......... .......... .......... 1.64M\n  7150K .......... .......... .......... .......... .......... 41.6M\n  7200K .......... .......... .......... .......... .......... 13.8M\n  7250K .......... .......... .......... .......... .......... 9.29M\n  7300K .......... .......... .......... .......... .......... 22.1M\n  7350K .......... .......... .......... .......... .......... 2.14M\n  7400K .......... .......... .......... .......... .......... 38.6M\n  7450K .......... .......... .......... .......... .......... 2.21M\n  7500K .......... .......... .......... .......... .......... 26.1M\n  7550K .......... .......... .......... .......... .......... 99.9M\n  7600K .......... .......... .......... .......... .......... 78.9M\n  7650K .......... .......... .......... .......... .......... 1.65M\n  7700K .......... .......... .......... .......... .......... 36.6M\n  7750K .......... .......... .......... .......... .......... 71.8M\n  7800K .......... .......... .......... .......... .......... 5.69M\n  7850K .......... .......... .......... .......... ..........  106M\n  7900K .......... .......... .......... .......... .......... 14.7M\n  7950K .......... .......... .......... .......... .......... 2.28M\n  8000K .......... .......... .......... .......... .......... 37.5M\n  8050K .......... .......... .......... .......... .......... 2.26M\n  8100K .......... .......... .......... .......... .......... 19.1M\n  8150K .......... .......... .......... .......... ..........  144M\n  8200K .......... .......... .......... .......... ..........  132M\n  8250K .......... .......... .......... .......... .......... 99.7M\n  8300K .......... .......... .......... .......... .......... 1.63M\n  8350K .......... .......... .......... .......... .......... 33.6M\n  8400K .......... .......... .......... .......... .......... 19.0M\n  8450K .......... .......... .......... .......... .......... 8.68M\n  8500K .......... .......... .......... .......... .......... 28.6M\n  8550K .......... .......... .......... .......... .......... 2.12M\n  8600K .......... .......... .......... .......... .......... 51.6M\n  8650K .......... .......... .......... .......... .......... 38.8M\n  8700K .......... .......... .......... .......... .......... 2.31M\n  8750K .......... .......... .......... .......... .......... 20.2M\n  8800K .......... .......... .......... .......... ..........  139M\n  8850K .......... .......... .......... .......... ..........  109M\n  8900K .......... .......... .......... .......... .......... 13.3M\n  8950K .......... .......... .......... .......... .......... 1.76M\n  9000K .......... .......... .......... .......... .......... 71.5M\n  9050K .......... .......... .......... .......... ..........  111M\n  9100K .......... .......... .......... .......... .......... 5.96M\n  9150K .......... .......... .......... .......... .......... 37.9M\n  9200K .......... .......... .......... .......... .......... 28.8M\n  9250K .......... .......... .......... .......... .......... 2.25M\n  9300K .......... .......... .......... .......... ..........  109M\n  9350K .......... .......... .......... .......... .......... 2.19M\n  9400K .......... .......... .......... .......... .......... 26.3M\n  9450K .......... .......... .......... .......... .......... 5.77M\n  9500K .......... .......... .......... .......... .......... 4.23M\n  9550K .......... .......... .......... .......... .......... 6.03M\n  9600K .......... .......... .......... .......... .......... 5.47M\n  9650K .......... .......... .......... .......... .......... 3.29M\n  9700K .......... .......... .......... .......... .......... 4.09M\n  9750K .......... .......... .......... .......... .......... 17.8M\n  9800K .......... .......... .......... .......... ..........  969K\n  9850K .......... .......... .......... .......... .......... 58.5M\n  9900K .......... .......... .......... .......... ..........  140M\n  9950K .......... .......... .......... .......... ..........  113M\n 10000K .......... .......... .......... .......... ..........  144M\n 10050K .......... .......... .......... .......... .......... 1.73M\n 10100K .......... .......... .......... .......... .......... 54.6M\n 10150K .......... .......... .......... .......... .......... 98.2M\n 10200K .......... .......... .......... .......... .......... 4.23M\n 10250K .......... .......... .......... .......... .......... 3.11M\n 10300K .......... .......... .......... .......... .......... 6.66M\n 10350K .......... .......... .......... .......... .......... 7.13M\n 10400K .......... .......... .......... .......... .......... 3.83M\n 10450K .......... .......... .......... .......... .......... 3.68M\n 10500K .......... .......... .......... .......... .......... 1.52M\n 10550K .......... .......... .......... .......... ..........  721K\n 10600K .......... .......... .......... .......... .......... 24.2M\n 10650K .......... .......... .......... .......... .......... 61.6M\n 10700K .......... .......... .......... .......... .......... 78.7M\n 10750K .......... .......... .......... .......... ..........  149M\n 10800K .......... .......... .......... .......... .......... 1.48M\n 10850K .......... .......... .......... .......... .......... 21.4M\n 10900K .......... .......... .......... .......... .......... 68.3M\n 10950K .......... .......... .......... .......... ..........  141M\n 11000K .......... .......... .......... .......... ..........  149M\n 11050K .......... .......... .......... .......... ..........  178M\n 11100K .......... .......... .......... .......... ..........  175M\n 11150K .......... .......... .......... .......... ..........  182M\n 11200K .......... .......... .......... .......... .......... 1.50M\n 11250K .......... .......... .......... .......... ..........  820K\n 11300K .......... .......... .......... .......... .......... 18.3M\n 11350K .......... .......... .......... .......... .......... 65.5M\n 11400K .......... .......... .......... .......... .......... 85.3M\n 11450K .......... .......... .......... .......... ..........  119M\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.49M\n 50150K .......... .......... .......... .......... .......... 4.63M\n 50200K .......... .......... .......... .......... .......... 4.73M\n 50250K .......... .......... .......... .......... .......... 8.51M\n 50300K .......... .......... .......... .......... .......... 4.72M\n 50350K .......... .......... .......... .......... .......... 4.49M\n 50400K .......... .......... .......... .......... .......... 4.66M\n 50450K .......... .......... .......... .......... .......... 8.72M\n 50500K .......... .......... .......... .......... .......... 4.69M\n 50550K .......... .......... .......... .......... .......... 4.47M\n 50600K .......... .......... .......... .......... .......... 4.64M\n 50650K .......... .......... .......... .......... .......... 8.09M\n 50700K .......... .......... .......... .......... .......... 4.86M\n 50750K .......... .......... .......... .......... .......... 4.47M\n 50800K .......... .......... .......... .......... .......... 4.74M\n 50850K .......... .......... .......... .......... .......... 8.86M\n 50900K .......... .......... .......... .......... .......... 4.63M\n 50950K .......... .......... .......... .......... .......... 4.57M\n 51000K .......... .......... .......... .......... .......... 4.53M\n 51050K .......... .......... .......... .......... .......... 8.32M\n 51100K .......... .......... .......... .......... .......... 4.76M\n 51150K .......... .......... .......... .......... .......... 4.53M\n 51200K .......... .......... .......... .......... .......... 4.71M\n 51250K .......... .......... .......... .......... .......... 4.44M\n 51300K .......... .......... .......... .......... .......... 9.30M\n 51350K .......... .......... .......... .......... .......... 4.57M\n 51400K .......... .......... .......... .......... .......... 4.73M\n 51450K .......... .......... .......... .......... .......... 4.57M\n 51500K .......... .......... .......... .......... .......... 8.23M\n 51550K .......... .......... .......... .......... .......... 4.75M\n 51600K .......... .......... .......... .......... .......... 4.55M\n 51650K .......... .......... .......... .......... .......... 4.67M\n 51700K .......... .......... .......... .......... .......... 4.57M\n 51750K .......... .......... .......... .......... .......... 9.23M\n 51800K .......... .......... .......... .......... .......... 4.51M\n 51850K .......... .......... .......... .......... .......... 4.71M\n 51900K .......... .......... .......... .......... .......... 3.96M\n 51950K .......... .......... .......... .......... .......... 13.2M\n 52000K .......... .......... .......... .......... .......... 4.32M\n 52050K .......... .......... .......... .......... .......... 4.76M\n 52100K .......... .......... .......... .......... .......... 4.87M\n 52150K .......... .......... .......... .......... .......... 8.33M\n 52200K .......... .......... .......... .......... .......... 4.60M\n 52250K .......... .......... .......... .......... .......... 4.70M\n 52300K .......... .......... .......... .......... .......... 4.53M\n 52350K .......... .......... .......... .......... .......... 9.23M\n 52400K .......... .......... .......... .......... .......... 4.53M\n 52450K .......... .......... .......... .......... .......... 4.08M\n 52500K .......... .......... .......... .......... .......... 5.41M\n 52550K .......... .......... .......... .......... .......... 7.95M\n 52600K .......... .......... .......... .......... .......... 4.73M\n 52650K .......... .......... .......... .......... .......... 4.73M\n 52700K .......... .......... .......... .......... .......... 4.65M\n 52750K .......... .......... .......... .......... .......... 5.84M\n 52800K .......... .......... .......... .......... .......... 6.16M\n 52850K .......... .......... .......... .......... .......... 4.74M\n 52900K .......... .......... .......... .......... .......... 4.55M\n 52950K .......... .......... .......... .......... .......... 7.95M\n 53000K .......... .......... .......... .......... .......... 4.68M\n 53050K .......... .......... .......... .......... .......... 4.60M\n 53100K .......... .......... .......... .......... .......... 4.79M\n 53150K .......... .......... .......... .......... .......... 8.55M\n 53200K .......... .......... .......... .......... .......... 4.68M\n 53250K .......... .......... .......... .......... .......... 4.48M\n 53300K .......... .......... .......... .......... .......... 4.62M\n 53350K .......... .......... .......... .......... .......... 8.79M\n 53400K .......... .......... .......... .......... .......... 4.69M\n 53450K .......... .......... .......... .......... .......... 3.74M\n 53500K .......... .......... .......... .......... .......... 5.72M\n 53550K .......... .......... .......... .......... .......... 9.26M\n 53600K .......... .......... .......... .......... .......... 4.49M\n 53650K .......... .......... .......... .......... .......... 4.47M\n 53700K .......... .......... .......... .......... .......... 4.61M\n 53750K .......... .......... .......... .......... .......... 8.62M\n 53800K .......... .......... .......... .......... .......... 4.44M\n 53850K .......... .......... .......... .......... .......... 4.60M\n 53900K .......... .......... .......... .......... .......... 4.39M\n 53950K .......... .......... .......... .......... .......... 4.92M\n 54000K .......... .......... .......... .......... .......... 8.47M\n 54050K .......... .......... .......... .......... .......... 4.49M\n 54100K .......... .......... .......... .......... .......... 4.38M\n 54150K .......... .......... .......... .......... .......... 4.20M\n 54200K .......... .......... .......... .......... .......... 8.09M\n 54250K .......... .......... .......... .......... .......... 4.43M\n 54300K .......... .......... .......... .......... .......... 4.72M\n 54350K .......... .......... .......... .......... .......... 4.78M\n 54400K .......... .......... .......... .......... .......... 8.91M\n 54450K .......... .......... .......... .......... .......... 4.30M\n 54500K .......... .......... .......... .......... .......... 4.46M\n 54550K .......... .......... .......... .......... .......... 4.87M\n 54600K .......... .......... .......... .......... .......... 8.22M\n 54650K .......... .......... .......... .......... .......... 4.69M\n 54700K .......... .......... .......... .......... .......... 4.57M\n 54750K .......... .......... .......... .......... .......... 4.74M\n 54800K .......... .......... .......... .......... .......... 8.71M\n 54850K .......... .......... .......... .......... .......... 4.59M\n 54900K .......... .......... .......... .......... .......... 4.33M\n 54950K .......... .......... .......... .......... .......... 3.93M\n 55000K .......... .......... .......... .......... .......... 11.5M\n 55050K .......... .......... .......... .......... .......... 4.81M\n 55100K .......... .......... .......... .......... .......... 4.56M\n 55150K .......... .......... .......... .......... .......... 4.50M\n 55200K .......... .......... .......... .......... .......... 4.52M\n 55250K .......... .......... .......... .......... .......... 9.04M\n 55300K .......... .......... .......... .......... .......... 4.32M\n 55350K .......... .......... .......... .......... .......... 4.53M\n 55400K .......... .......... .......... .......... .......... 4.56M\n 55450K .......... .......... .......... .......... .......... 7.19M\n 55500K .......... .......... .......... .......... .......... 5.13M\n 55550K .......... .......... .......... .......... .......... 4.74M\n 55600K .......... .......... .......... .......... .......... 4.52M\n 55650K .......... .......... .......... .......... .......... 8.61M\n 55700K .......... .......... .......... .......... .......... 4.58M\n 55750K .......... .......... .......... .......... .......... 4.48M\n 55800K .......... .......... .......... .......... .......... 4.12M\n 55850K .......... .......... .......... .......... .......... 12.0M\n 55900K .......... .......... .......... .......... .......... 4.63M\n 55950K .......... .......... .......... .......... .......... 4.59M\n 56000K .......... .......... .......... .......... .......... 4.39M\n 56050K .......... .......... .......... .......... .......... 8.18M\n 56100K .......... .......... .......... .......... .......... 3.72M\n 56150K .......... .......... .......... .......... .......... 4.69M\n 56200K .......... .......... .......... .......... .......... 4.62M\n 56250K .......... .......... .......... .......... .......... 8.99M\n 56300K .......... .......... .......... .......... .......... 4.65M\n 56350K .......... .......... .......... .......... .......... 4.49M\n 56400K .......... .......... .......... .......... .......... 4.07M\n 56450K .......... .......... .......... .......... .......... 9.28M\n 56500K .......... .......... .......... .......... .......... 5.33M\n 56550K .......... .......... .......... .......... .......... 4.55M\n 56600K .......... .......... .......... .......... .......... 4.53M\n 56650K .......... .......... .......... .......... .......... 8.75M\n 56700K .......... .......... .......... .......... .......... 4.75M\n 56750K .......... .......... .......... .......... .......... 4.61M\n 56800K .......... .......... .......... .......... .......... 4.06M\n 56850K .......... .......... .......... .......... .......... 5.37M\n 56900K .......... .......... .......... .......... .......... 8.89M\n 56950K .......... .......... .......... .......... .......... 4.49M\n 57000K .......... .......... .......... .......... .......... 4.66M\n 57050K .......... .......... .......... .......... .......... 4.39M\n 57100K .......... .......... .......... .......... .......... 9.88M\n 57150K .......... .......... .......... .......... .......... 4.58M\n 57200K .......... .......... .......... .......... .......... 4.67M\n 57250K .......... .......... .......... .......... .......... 8.67M\n 57300K .......... .......... .......... .......... .......... 4.46M\n 57350K .......... .......... .......... .......... .......... 4.55M\n 57400K .......... .......... .......... .......... .......... 4.73M\n 57450K .......... .......... .......... .......... .......... 8.04M\n 57500K .......... .......... .......... .......... .......... 5.00M\n 57550K .......... .......... .......... .......... .......... 4.69M\n 57600K .......... .......... .......... .......... .......... 4.47M\n 57650K .......... .......... .......... .......... .......... 8.49M\n 57700K .......... .......... .......... .......... .......... 4.07M\n 57750K .......... .......... .......... .......... .......... 5.41M\n 57800K .......... .......... .......... .......... .......... 3.76M\n 57850K .......... .......... .......... .......... .......... 11.5M\n 57900K .......... .......... .......... .......... .......... 5.00M\n 57950K .......... .......... .......... .......... .......... 4.30M\n 58000K .......... .......... .......... .......... .......... 4.13M\n 58050K .......... .......... .......... .......... .......... 12.4M\n 58100K .......... .......... .......... .......... .......... 4.69M\n 58150K .......... .......... .......... .......... .......... 4.49M\n 58200K .......... .......... .......... .......... .......... 4.80M\n 58250K .......... .......... .......... .......... .......... 8.89M\n 58300K .......... .......... .......... .......... .......... 4.57M\n 58350K .......... .......... .......... .......... .......... 4.50M\n 58400K .......... .......... .......... .......... .......... 4.75M\n 58450K .......... .......... .......... .......... .......... 8.49M\n 58500K .......... .......... .......... .......... .......... 4.70M\n 58550K .......... .......... .......... .......... .......... 4.52M\n 58600K .......... .......... .......... .......... .......... 4.73M\n 58650K .......... .......... .......... .......... .......... 6.29M\n 58700K .......... .......... .......... .......... .......... 5.72M\n 58750K .......... .......... .......... .......... .......... 3.87M\n 58800K .......... .......... .......... .......... .......... 5.07M\n 58850K .......... .......... .......... .......... .......... 8.71M\n 58900K .......... .......... .......... .......... .......... 4.81M\n 58950K .......... .......... .......... .......... .......... 4.54M\n 59000K .......... .......... .......... .......... .......... 4.52M\n 59050K .......... .......... .......... .......... .......... 4.44M\n 59100K .......... .......... .......... .......... .......... 8.90M\n 59150K .......... .......... .......... .......... .......... 4.66M\n 59200K .......... .......... .......... .......... .......... 3.42M\n 59250K .......... .......... .......... .......... .......... 6.65M\n 59300K .......... .......... .......... .......... .......... 4.66M\n 59350K .......... .......... .......... .......... .......... 7.15M\n 59400K .......... .......... .......... .......... .......... 5.11M\n 59450K .......... .......... .......... .......... .......... 4.52M\n 59500K .......... .......... .......... .......... .......... 4.06M\n 59550K .......... .......... .......... .......... .......... 7.00M\n 59600K .......... .......... .......... .......... .......... 6.17M\n 59650K .......... .......... .......... .......... .......... 3.92M\n 59700K .......... .......... .......... .......... .......... 5.25M\n 59750K .......... .......... .......... .......... .......... 8.83M\n 59800K .......... .......... .......... .......... .......... 4.43M\n 59850K .......... .......... .......... .......... .......... 4.53M\n 59900K .......... .......... .......... .......... .......... 4.29M\n 59950K .......... .......... .......... .......... .......... 10.5M\n 60000K .......... .......... .......... .......... .......... 4.57M\n 60050K .......... .......... .......... .......... .......... 4.37M\n 60100K .......... .......... .......... .......... .......... 4.68M\n 60150K .......... .......... .......... .......... .......... 8.61M\n 60200K .......... .......... .......... .......... .......... 4.62M\n 60250K .......... .......... .......... .......... .......... 4.36M\n 60300K .......... .......... .......... .......... .......... 4.66M\n 60350K .......... .......... .......... .......... .......... 8.53M\n 60400K .......... .......... .......... .......... .......... 4.59M\n 60450K .......... .......... .......... .......... .......... 4.54M\n 60500K .......... .......... .......... .......... .......... 4.70M\n 60550K .......... .......... .......... .......... .......... 9.15M\n 60600K .......... .......... .......... .......... ..........  784K\n 60650K .......... .........                                    175M=15s\n\n2023-09-18 19:02:55 (4.05 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-09-18 19:02:59--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  271K 3s\n    50K .......... .......... .......... .......... .......... 12%  275K 3s\n   100K .......... .......... .......... .......... .......... 18%  547K 2s\n   150K .......... .......... .......... .......... .......... 24%  549K 2s\n   200K .......... .......... .......... .......... .......... 30%  550K 1s\n   250K .......... .......... .......... .......... .......... 36% 3.78M 1s\n   300K .......... .......... .......... .......... .......... 42%  622K 1s\n   350K .......... .......... .......... .......... .......... 48%  561K 1s\n   400K .......... .......... .......... .......... .......... 54% 3.82M 1s\n   450K .......... .......... .......... .......... .......... 60%  633K 1s\n   500K .......... .......... .......... .......... .......... 66% 3.92M 0s\n   550K .......... .......... .......... .......... .......... 72%  639K 0s\n   600K .......... .......... .......... .......... .......... 78% 3.81M 0s\n   650K .......... .......... .......... .......... .......... 84%  876K 0s\n   700K .......... .......... .......... .......... .......... 90% 2.10M 0s\n   750K .......... .......... .......... .......... .......... 96% 1.75M 0s\n   800K .......... .......... .......                         100%  702K=1.2s\n\n2023-09-18 19:03:00 (711 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-09-18 19:02:40--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  273K\n    50K .......... .......... .......... .......... ..........  275K\n   100K .......... .......... .......... .......... ..........  540K\n   150K .......... .......... .......... .......... ..........  275K\n   200K .......... .......... .......... .......... ..........  548K\n   250K .......... .......... .......... .......... ..........  549K\n   300K .......... .......... .......... .......... ..........  549K\n   350K .......... .......... .......... .......... ..........  548K\n   400K .......... .......... .......... .......... ..........  546K\n   450K .......... .......... .......... .......... ..........  547K\n   500K .......... .......... .......... .......... .......... 27.4M\n   550K .......... .......... .......... .......... ..........  552K\n   600K .......... .......... .......... .......... ..........  545K\n   650K .......... .......... .......... .......... .......... 99.0M\n   700K .......... .......... .......... .......... ..........  550K\n   750K .......... .......... .......... .......... .......... 47.6M\n   800K .......... .......... .......... .......... ..........  554K\n   850K .......... .......... .......... .......... ..........  549K\n   900K .......... .......... .......... .......... ..........  145M\n   950K .......... .......... .......... .......... ..........  550K\n  1000K .......... .......... .......... .......... ..........  132M\n  1050K .......... .......... .......... .......... ..........  550K\n  1100K .......... .......... .......... .......... ..........  114M\n  1150K .......... .......... .......... .......... ..........  551K\n  1200K .......... .......... .......... .......... .......... 19.7M\n  1250K .......... .......... .......... .......... ..........  560K\n  1300K .......... .......... .......... .......... ..........  101M\n  1350K .......... .......... .......... .......... ..........  551K\n  1400K .......... .......... .......... .......... .......... 73.2M\n  1450K .......... .......... .......... .......... .......... 41.0M\n  1500K .......... .......... .......... .......... ..........  557K\n  1550K .......... .......... .......... .......... .......... 32.0M\n  1600K .......... .......... .......... .......... ..........  555K\n  1650K .......... .......... .......... .......... ..........  153M\n  1700K .......... .......... .......... .......... .......... 51.5M\n  1750K .......... .......... .......... .......... ..........  555K\n  1800K .......... .......... .......... .......... .......... 46.7M\n  1850K .......... .......... .......... .......... .......... 19.4M\n  1900K .......... .......... .......... .......... ..........  568K\n  1950K .......... .......... .......... .......... .......... 28.2M\n  2000K .......... .......... .......... .......... .......... 25.9M\n  2050K .......... .......... .......... .......... ..........  568K\n  2100K .......... .......... .......... .......... .......... 81.1M\n  2150K .......... .......... .......... .......... .......... 2.12M\n  2200K .......... .......... .......... .......... ..........  737K\n  2250K .......... .......... .......... .......... ..........  150M\n  2300K .......... .......... .......... .......... .......... 2.12M\n  2350K .......... .......... .......... .......... ..........  732K\n  2400K .......... .......... .......... .......... ..........  158M\n  2450K .......... .......... .......... .......... .......... 1.69M\n  2500K .......... .......... .......... .......... .......... 21.5M\n  2550K .......... .......... .......... .......... ..........  830K\n  2600K .......... .......... .......... .......... .......... 72.6M\n  2650K .......... .......... .......... .......... .......... 1.64M\n  2700K .......... .......... .......... .......... .......... 2.37M\n  2750K .......... .......... .......... .......... .......... 1.21M\n  2800K .......... .......... .......... .......... .......... 58.3M\n  2850K .......... .......... .......... .......... .......... 1.09M\n  2900K .......... .......... .......... .......... .......... 9.32M\n  2950K .......... .......... .......... .......... .......... 1.22M\n  3000K .......... .......... .......... .......... ..........  156M\n  3050K .......... .......... .......... .......... .......... 1.66M\n  3100K .......... .......... .......... .......... .......... 2.28M\n  3150K .......... .......... .......... .......... .......... 2.88M\n  3200K .......... .......... .......... .......... .......... 1.20M\n  3250K .......... .......... .......... .......... .......... 9.75M\n  3300K .......... .......... .......... .......... .......... 1.44M\n  3350K .......... .......... .......... .......... .......... 1.36M\n  3400K .......... .......... .......... .......... .......... 11.0M\n  3450K .......... .......... .......... .......... .......... 1.94M\n  3500K .......... .......... .......... .......... .......... 95.4M\n  3550K .......... .......... .......... .......... .......... 1.32M\n  3600K .......... .......... .......... .......... .......... 1.02M\n  3650K .......... .......... .......... .......... .......... 2.12M\n  3700K .......... .......... .......... .......... .......... 43.7M\n  3750K .......... .......... .......... .......... ..........  136M\n  3800K .......... .......... .......... .......... .......... 1.16M\n  3850K .......... .......... .......... .......... .......... 18.7M\n  3900K .......... .......... .......... .......... .......... 1.16M\n  3950K .......... .......... .......... .......... .......... 12.7M\n  4000K .......... .......... .......... .......... .......... 1.07M\n  4050K .......... .......... .......... .......... .......... 14.3M\n  4100K .......... .......... .......... .......... .......... 1.65M\n  4150K .......... .......... .......... .......... .......... 23.9M\n  4200K .......... .......... .......... .......... .......... 5.91M\n  4250K .......... .......... .......... .......... .......... 1.94M\n  4300K .......... .......... .......... .......... .......... 2.14M\n  4350K .......... .......... .......... .......... .......... 14.7M\n  4400K .......... .......... .......... .......... .......... 25.4M\n  4450K .......... .......... .......... .......... .......... 1.64M\n  4500K .......... .......... .......... .......... ..........  114M\n  4550K .......... .......... .......... .......... .......... 5.19M\n  4600K .......... .......... .......... .......... .......... 2.01M\n  4650K .......... .......... .......... .......... .......... 2.10M\n  4700K .......... .......... .......... .......... .......... 16.0M\n  4750K .......... .......... .......... .......... .......... 69.7M\n  4800K .......... .......... .......... .......... .......... 1.63M\n  4850K .......... .......... .......... .......... ..........  106M\n  4900K .......... .......... .......... .......... .......... 5.22M\n  4950K .......... .......... .......... .......... .......... 2.03M\n  5000K .......... .......... .......... .......... .......... 26.5M\n  5050K .......... .......... .......... .......... .......... 2.07M\n  5100K .......... .......... .......... .......... .......... 25.8M\n  5150K .......... .......... .......... .......... .......... 1.74M\n  5200K .......... .......... .......... .......... .......... 22.6M\n  5250K .......... .......... .......... .......... .......... 47.4M\n  5300K .......... .......... .......... .......... .......... 5.90M\n  5350K .......... .......... .......... .......... .......... 1.97M\n  5400K .......... .......... .......... .......... .......... 73.3M\n  5450K .......... .......... .......... .......... .......... 2.09M\n  5500K .......... .......... .......... .......... .......... 17.6M\n  5550K .......... .......... .......... .......... ..........  119M\n  5600K .......... .......... .......... .......... .......... 1.64M\n  5650K .......... .......... .......... .......... .......... 49.0M\n  5700K .......... .......... .......... .......... .......... 6.39M\n  5750K .......... .......... .......... .......... .......... 15.4M\n  5800K .......... .......... .......... .......... .......... 2.13M\n  5850K .......... .......... .......... .......... .......... 86.9M\n  5900K .......... .......... .......... .......... .......... 2.14M\n  5950K .......... .......... .......... .......... .......... 15.8M\n  6000K .......... .......... .......... .......... ..........  104M\n  6050K .......... .......... .......... .......... .......... 1.66M\n  6100K .......... .......... .......... .......... .......... 70.1M\n  6150K .......... .......... .......... .......... .......... 43.1M\n  6200K .......... .......... .......... .......... .......... 5.84M\n  6250K .......... .......... .......... .......... .......... 14.6M\n  6300K .......... .......... .......... .......... .......... 2.19M\n  6350K .......... .......... .......... .......... .......... 2.18M\n  6400K .......... .......... .......... .......... .......... 19.4M\n  6450K .......... .......... .......... .......... .......... 91.3M\n  6500K .......... .......... .......... .......... ..........  141M\n  6550K .......... .......... .......... .......... .......... 1.65M\n  6600K .......... .......... .......... .......... .......... 62.9M\n  6650K .......... .......... .......... .......... .......... 31.8M\n  6700K .......... .......... .......... .......... .......... 6.49M\n  6750K .......... .......... .......... .......... .......... 18.9M\n  6800K .......... .......... .......... .......... .......... 2.11M\n  6850K .......... .......... .......... .......... .......... 39.7M\n  6900K .......... .......... .......... .......... .......... 2.19M\n  6950K .......... .......... .......... .......... .......... 29.4M\n  7000K .......... .......... .......... .......... ..........  110M\n  7050K .......... .......... .......... .......... .......... 56.5M\n  7100K .......... .......... .......... .......... .......... 1.64M\n  7150K .......... .......... .......... .......... .......... 41.6M\n  7200K .......... .......... .......... .......... .......... 13.8M\n  7250K .......... .......... .......... .......... .......... 9.29M\n  7300K .......... .......... .......... .......... .......... 22.1M\n  7350K .......... .......... .......... .......... .......... 2.14M\n  7400K .......... .......... .......... .......... .......... 38.6M\n  7450K .......... .......... .......... .......... .......... 2.21M\n  7500K .......... .......... .......... .......... .......... 26.1M\n  7550K .......... .......... .......... .......... .......... 99.9M\n  7600K .......... .......... .......... .......... .......... 78.9M\n  7650K .......... .......... .......... .......... .......... 1.65M\n  7700K .......... .......... .......... .......... .......... 36.6M\n  7750K .......... .......... .......... .......... .......... 71.8M\n  7800K .......... .......... .......... .......... .......... 5.69M\n  7850K .......... .......... .......... .......... ..........  106M\n  7900K .......... .......... .......... .......... .......... 14.7M\n  7950K .......... .......... .......... .......... .......... 2.28M\n  8000K .......... .......... .......... .......... .......... 37.5M\n  8050K .......... .......... .......... .......... .......... 2.26M\n  8100K .......... .......... .......... .......... .......... 19.1M\n  8150K .......... .......... .......... .......... ..........  144M\n  8200K .......... .......... .......... .......... ..........  132M\n  8250K .......... .......... .......... .......... .......... 99.7M\n  8300K .......... .......... .......... .......... .......... 1.63M\n  8350K .......... .......... .......... .......... .......... 33.6M\n  8400K .......... .......... .......... .......... .......... 19.0M\n  8450K .......... .......... .......... .......... .......... 8.68M\n  8500K .......... .......... .......... .......... .......... 28.6M\n  8550K .......... .......... .......... .......... .......... 2.12M\n  8600K .......... .......... .......... .......... .......... 51.6M\n  8650K .......... .......... .......... .......... .......... 38.8M\n  8700K .......... .......... .......... .......... .......... 2.31M\n  8750K .......... .......... .......... .......... .......... 20.2M\n  8800K .......... .......... .......... .......... ..........  139M\n  8850K .......... .......... .......... .......... ..........  109M\n  8900K .......... .......... .......... .......... .......... 13.3M\n  8950K .......... .......... .......... .......... .......... 1.76M\n  9000K .......... .......... .......... .......... .......... 71.5M\n  9050K .......... .......... .......... .......... ..........  111M\n  9100K .......... .......... .......... .......... .......... 5.96M\n  9150K .......... .......... .......... .......... .......... 37.9M\n  9200K .......... .......... .......... .......... .......... 28.8M\n  9250K .......... .......... .......... .......... .......... 2.25M\n  9300K .......... .......... .......... .......... ..........  109M\n  9350K .......... .......... .......... .......... .......... 2.19M\n  9400K .......... .......... .......... .......... .......... 26.3M\n  9450K .......... .......... .......... .......... .......... 5.77M\n  9500K .......... .......... .......... .......... .......... 4.23M\n  9550K .......... .......... .......... .......... .......... 6.03M\n  9600K .......... .......... .......... .......... .......... 5.47M\n  9650K .......... .......... .......... .......... .......... 3.29M\n  9700K .......... .......... .......... .......... .......... 4.09M\n  9750K .......... .......... .......... .......... .......... 17.8M\n  9800K .......... .......... .......... .......... ..........  969K\n  9850K .......... .......... .......... .......... .......... 58.5M\n  9900K .......... .......... .......... .......... ..........  140M\n  9950K .......... .......... .......... .......... ..........  113M\n 10000K .......... .......... .......... .......... ..........  144M\n 10050K .......... .......... .......... .......... .......... 1.73M\n 10100K .......... .......... .......... .......... .......... 54.6M\n 10150K .......... .......... .......... .......... .......... 98.2M\n 10200K .......... .......... .......... .......... .......... 4.23M\n 10250K .......... .......... .......... .......... .......... 3.11M\n 10300K .......... .......... .......... .......... .......... 6.66M\n 10350K .......... .......... .......... .......... .......... 7.13M\n 10400K .......... .......... .......... .......... .......... 3.83M\n 10450K .......... .......... .......... .......... .......... 3.68M\n 10500K .......... .......... .......... .......... .......... 1.52M\n 10550K .......... .......... .......... .......... ..........  721K\n 10600K .......... .......... .......... .......... .......... 24.2M\n 10650K .......... .......... .......... .......... .......... 61.6M\n 10700K .......... .......... .......... .......... .......... 78.7M\n 10750K .......... .......... .......... .......... ..........  149M\n 10800K .......... .......... .......... .......... .......... 1.48M\n 10850K .......... .......... .......... .......... .......... 21.4M\n 10900K .......... .......... .......... .......... .......... 68.3M\n 10950K .......... .......... .......... .......... ..........  141M\n 11000K .......... .......... .......... .......... ..........  149M\n 11050K .......... .......... .......... .......... ..........  178M\n 11100K .......... .......... .......... .......... ..........  175M\n 11150K .......... .......... .......... .......... ..........  182M\n 11200K .......... .......... .......... .......... .......... 1.50M\n 11250K .......... .......... .......... .......... ..........  820K\n 11300K .......... .......... .......... .......... .......... 18.3M\n 11350K .......... .......... .......... .......... .......... 65.5M\n 11400K .......... .......... .......... .......... .......... 85.3M\n 11450K .......... .......... .......... .......... ..........  119M\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.49M\n 50150K .......... .......... .......... .......... .......... 4.63M\n 50200K .......... .......... .......... .......... .......... 4.73M\n 50250K .......... .......... .......... .......... .......... 8.51M\n 50300K .......... .......... .......... .......... .......... 4.72M\n 50350K .......... .......... .......... .......... .......... 4.49M\n 50400K .......... .......... .......... .......... .......... 4.66M\n 50450K .......... .......... .......... .......... .......... 8.72M\n 50500K .......... .......... .......... .......... .......... 4.69M\n 50550K .......... .......... .......... .......... .......... 4.47M\n 50600K .......... .......... .......... .......... .......... 4.64M\n 50650K .......... .......... .......... .......... .......... 8.09M\n 50700K .......... .......... .......... .......... .......... 4.86M\n 50750K .......... .......... .......... .......... .......... 4.47M\n 50800K .......... .......... .......... .......... .......... 4.74M\n 50850K .......... .......... .......... .......... .......... 8.86M\n 50900K .......... .......... .......... .......... .......... 4.63M\n 50950K .......... .......... .......... .......... .......... 4.57M\n 51000K .......... .......... .......... .......... .......... 4.53M\n 51050K .......... .......... .......... .......... .......... 8.32M\n 51100K .......... .......... .......... .......... .......... 4.76M\n 51150K .......... .......... .......... .......... .......... 4.53M\n 51200K .......... .......... .......... .......... .......... 4.71M\n 51250K .......... .......... .......... .......... .......... 4.44M\n 51300K .......... .......... .......... .......... .......... 9.30M\n 51350K .......... .......... .......... .......... .......... 4.57M\n 51400K .......... .......... .......... .......... .......... 4.73M\n 51450K .......... .......... .......... .......... .......... 4.57M\n 51500K .......... .......... .......... .......... .......... 8.23M\n 51550K .......... .......... .......... .......... .......... 4.75M\n 51600K .......... .......... .......... .......... .......... 4.55M\n 51650K .......... .......... .......... .......... .......... 4.67M\n 51700K .......... .......... .......... .......... .......... 4.57M\n 51750K .......... .......... .......... .......... .......... 9.23M\n 51800K .......... .......... .......... .......... .......... 4.51M\n 51850K .......... .......... .......... .......... .......... 4.71M\n 51900K .......... .......... .......... .......... .......... 3.96M\n 51950K .......... .......... .......... .......... .......... 13.2M\n 52000K .......... .......... .......... .......... .......... 4.32M\n 52050K .......... .......... .......... .......... .......... 4.76M\n 52100K .......... .......... .......... .......... .......... 4.87M\n 52150K .......... .......... .......... .......... .......... 8.33M\n 52200K .......... .......... .......... .......... .......... 4.60M\n 52250K .......... .......... .......... .......... .......... 4.70M\n 52300K .......... .......... .......... .......... .......... 4.53M\n 52350K .......... .......... .......... .......... .......... 9.23M\n 52400K .......... .......... .......... .......... .......... 4.53M\n 52450K .......... .......... .......... .......... .......... 4.08M\n 52500K .......... .......... .......... .......... .......... 5.41M\n 52550K .......... .......... .......... .......... .......... 7.95M\n 52600K .......... .......... .......... .......... .......... 4.73M\n 52650K .......... .......... .......... .......... .......... 4.73M\n 52700K .......... .......... .......... .......... .......... 4.65M\n 52750K .......... .......... .......... .......... .......... 5.84M\n 52800K .......... .......... .......... .......... .......... 6.16M\n 52850K .......... .......... .......... .......... .......... 4.74M\n 52900K .......... .......... .......... .......... .......... 4.55M\n 52950K .......... .......... .......... .......... .......... 7.95M\n 53000K .......... .......... .......... .......... .......... 4.68M\n 53050K .......... .......... .......... .......... .......... 4.60M\n 53100K .......... .......... .......... .......... .......... 4.79M\n 53150K .......... .......... .......... .......... .......... 8.55M\n 53200K .......... .......... .......... .......... .......... 4.68M\n 53250K .......... .......... .......... .......... .......... 4.48M\n 53300K .......... .......... .......... .......... .......... 4.62M\n 53350K .......... .......... .......... .......... .......... 8.79M\n 53400K .......... .......... .......... .......... .......... 4.69M\n 53450K .......... .......... .......... .......... .......... 3.74M\n 53500K .......... .......... .......... .......... .......... 5.72M\n 53550K .......... .......... .......... .......... .......... 9.26M\n 53600K .......... .......... .......... .......... .......... 4.49M\n 53650K .......... .......... .......... .......... .......... 4.47M\n 53700K .......... .......... .......... .......... .......... 4.61M\n 53750K .......... .......... .......... .......... .......... 8.62M\n 53800K .......... .......... .......... .......... .......... 4.44M\n 53850K .......... .......... .......... .......... .......... 4.60M\n 53900K .......... .......... .......... .......... .......... 4.39M\n 53950K .......... .......... .......... .......... .......... 4.92M\n 54000K .......... .......... .......... .......... .......... 8.47M\n 54050K .......... .......... .......... .......... .......... 4.49M\n 54100K .......... .......... .......... .......... .......... 4.38M\n 54150K .......... .......... .......... .......... .......... 4.20M\n 54200K .......... .......... .......... .......... .......... 8.09M\n 54250K .......... .......... .......... .......... .......... 4.43M\n 54300K .......... .......... .......... .......... .......... 4.72M\n 54350K .......... .......... .......... .......... .......... 4.78M\n 54400K .......... .......... .......... .......... .......... 8.91M\n 54450K .......... .......... .......... .......... .......... 4.30M\n 54500K .......... .......... .......... .......... .......... 4.46M\n 54550K .......... .......... .......... .......... .......... 4.87M\n 54600K .......... .......... .......... .......... .......... 8.22M\n 54650K .......... .......... .......... .......... .......... 4.69M\n 54700K .......... .......... .......... .......... .......... 4.57M\n 54750K .......... .......... .......... .......... .......... 4.74M\n 54800K .......... .......... .......... .......... .......... 8.71M\n 54850K .......... .......... .......... .......... .......... 4.59M\n 54900K .......... .......... .......... .......... .......... 4.33M\n 54950K .......... .......... .......... .......... .......... 3.93M\n 55000K .......... .......... .......... .......... .......... 11.5M\n 55050K .......... .......... .......... .......... .......... 4.81M\n 55100K .......... .......... .......... .......... .......... 4.56M\n 55150K .......... .......... .......... .......... .......... 4.50M\n 55200K .......... .......... .......... .......... .......... 4.52M\n 55250K .......... .......... .......... .......... .......... 9.04M\n 55300K .......... .......... .......... .......... .......... 4.32M\n 55350K .......... .......... .......... .......... .......... 4.53M\n 55400K .......... .......... .......... .......... .......... 4.56M\n 55450K .......... .......... .......... .......... .......... 7.19M\n 55500K .......... .......... .......... .......... .......... 5.13M\n 55550K .......... .......... .......... .......... .......... 4.74M\n 55600K .......... .......... .......... .......... .......... 4.52M\n 55650K .......... .......... .......... .......... .......... 8.61M\n 55700K .......... .......... .......... .......... .......... 4.58M\n 55750K .......... .......... .......... .......... .......... 4.48M\n 55800K .......... .......... .......... .......... .......... 4.12M\n 55850K .......... .......... .......... .......... .......... 12.0M\n 55900K .......... .......... .......... .......... .......... 4.63M\n 55950K .......... .......... .......... .......... .......... 4.59M\n 56000K .......... .......... .......... .......... .......... 4.39M\n 56050K .......... .......... .......... .......... .......... 8.18M\n 56100K .......... .......... .......... .......... .......... 3.72M\n 56150K .......... .......... .......... .......... .......... 4.69M\n 56200K .......... .......... .......... .......... .......... 4.62M\n 56250K .......... .......... .......... .......... .......... 8.99M\n 56300K .......... .......... .......... .......... .......... 4.65M\n 56350K .......... .......... .......... .......... .......... 4.49M\n 56400K .......... .......... .......... .......... .......... 4.07M\n 56450K .......... .......... .......... .......... .......... 9.28M\n 56500K .......... .......... .......... .......... .......... 5.33M\n 56550K .......... .......... .......... .......... .......... 4.55M\n 56600K .......... .......... .......... .......... .......... 4.53M\n 56650K .......... .......... .......... .......... .......... 8.75M\n 56700K .......... .......... .......... .......... .......... 4.75M\n 56750K .......... .......... .......... .......... .......... 4.61M\n 56800K .......... .......... .......... .......... .......... 4.06M\n 56850K .......... .......... .......... .......... .......... 5.37M\n 56900K .......... .......... .......... .......... .......... 8.89M\n 56950K .......... .......... .......... .......... .......... 4.49M\n 57000K .......... .......... .......... .......... .......... 4.66M\n 57050K .......... .......... .......... .......... .......... 4.39M\n 57100K .......... .......... .......... .......... .......... 9.88M\n 57150K .......... .......... .......... .......... .......... 4.58M\n 57200K .......... .......... .......... .......... .......... 4.67M\n 57250K .......... .......... .......... .......... .......... 8.67M\n 57300K .......... .......... .......... .......... .......... 4.46M\n 57350K .......... .......... .......... .......... .......... 4.55M\n 57400K .......... .......... .......... .......... .......... 4.73M\n 57450K .......... .......... .......... .......... .......... 8.04M\n 57500K .......... .......... .......... .......... .......... 5.00M\n 57550K .......... .......... .......... .......... .......... 4.69M\n 57600K .......... .......... .......... .......... .......... 4.47M\n 57650K .......... .......... .......... .......... .......... 8.49M\n 57700K .......... .......... .......... .......... .......... 4.07M\n 57750K .......... .......... .......... .......... .......... 5.41M\n 57800K .......... .......... .......... .......... .......... 3.76M\n 57850K .......... .......... .......... .......... .......... 11.5M\n 57900K .......... .......... .......... .......... .......... 5.00M\n 57950K .......... .......... .......... .......... .......... 4.30M\n 58000K .......... .......... .......... .......... .......... 4.13M\n 58050K .......... .......... .......... .......... .......... 12.4M\n 58100K .......... .......... .......... .......... .......... 4.69M\n 58150K .......... .......... .......... .......... .......... 4.49M\n 58200K .......... .......... .......... .......... .......... 4.80M\n 58250K .......... .......... .......... .......... .......... 8.89M\n 58300K .......... .......... .......... .......... .......... 4.57M\n 58350K .......... .......... .......... .......... .......... 4.50M\n 58400K .......... .......... .......... .......... .......... 4.75M\n 58450K .......... .......... .......... .......... .......... 8.49M\n 58500K .......... .......... .......... .......... .......... 4.70M\n 58550K .......... .......... .......... .......... .......... 4.52M\n 58600K .......... .......... .......... .......... .......... 4.73M\n 58650K .......... .......... .......... .......... .......... 6.29M\n 58700K .......... .......... .......... .......... .......... 5.72M\n 58750K .......... .......... .......... .......... .......... 3.87M\n 58800K .......... .......... .......... .......... .......... 5.07M\n 58850K .......... .......... .......... .......... .......... 8.71M\n 58900K .......... .......... .......... .......... .......... 4.81M\n 58950K .......... .......... .......... .......... .......... 4.54M\n 59000K .......... .......... .......... .......... .......... 4.52M\n 59050K .......... .......... .......... .......... .......... 4.44M\n 59100K .......... .......... .......... .......... .......... 8.90M\n 59150K .......... .......... .......... .......... .......... 4.66M\n 59200K .......... .......... .......... .......... .......... 3.42M\n 59250K .......... .......... .......... .......... .......... 6.65M\n 59300K .......... .......... .......... .......... .......... 4.66M\n 59350K .......... .......... .......... .......... .......... 7.15M\n 59400K .......... .......... .......... .......... .......... 5.11M\n 59450K .......... .......... .......... .......... .......... 4.52M\n 59500K .......... .......... .......... .......... .......... 4.06M\n 59550K .......... .......... .......... .......... .......... 7.00M\n 59600K .......... .......... .......... .......... .......... 6.17M\n 59650K .......... .......... .......... .......... .......... 3.92M\n 59700K .......... .......... .......... .......... .......... 5.25M\n 59750K .......... .......... .......... .......... .......... 8.83M\n 59800K .......... .......... .......... .......... .......... 4.43M\n 59850K .......... .......... .......... .......... .......... 4.53M\n 59900K .......... .......... .......... .......... .......... 4.29M\n 59950K .......... .......... .......... .......... .......... 10.5M\n 60000K .......... .......... .......... .......... .......... 4.57M\n 60050K .......... .......... .......... .......... .......... 4.37M\n 60100K .......... .......... .......... .......... .......... 4.68M\n 60150K .......... .......... .......... .......... .......... 8.61M\n 60200K .......... .......... .......... .......... .......... 4.62M\n 60250K .......... .......... .......... .......... .......... 4.36M\n 60300K .......... .......... .......... .......... .......... 4.66M\n 60350K .......... .......... .......... .......... .......... 8.53M\n 60400K .......... .......... .......... .......... .......... 4.59M\n 60450K .......... .......... .......... .......... .......... 4.54M\n 60500K .......... .......... .......... .......... .......... 4.70M\n 60550K .......... .......... .......... .......... .......... 9.15M\n 60600K .......... .......... .......... .......... ..........  784K\n 60650K .......... .........                                    175M=15s\n\n2023-09-18 19:02:55 (4.05 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-09-18 19:02:59--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  271K 3s\n    50K .......... .......... .......... .......... .......... 12%  275K 3s\n   100K .......... .......... .......... .......... .......... 18%  547K 2s\n   150K .......... .......... .......... .......... .......... 24%  549K 2s\n   200K .......... .......... .......... .......... .......... 30%  550K 1s\n   250K .......... .......... .......... .......... .......... 36% 3.78M 1s\n   300K .......... .......... .......... .......... .......... 42%  622K 1s\n   350K .......... .......... .......... .......... .......... 48%  561K 1s\n   400K .......... .......... .......... .......... .......... 54% 3.82M 1s\n   450K .......... .......... .......... .......... .......... 60%  633K 1s\n   500K .......... .......... .......... .......... .......... 66% 3.92M 0s\n   550K .......... .......... .......... .......... .......... 72%  639K 0s\n   600K .......... .......... .......... .......... .......... 78% 3.81M 0s\n   650K .......... .......... .......... .......... .......... 84%  876K 0s\n   700K .......... .......... .......... .......... .......... 90% 2.10M 0s\n   750K .......... .......... .......... .......... .......... 96% 1.75M 0s\n   800K .......... .......... .......                         100%  702K=1.2s\n\n2023-09-18 19:03:00 (711 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-09-18T19:03:13.911651",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 51.84557271003723, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-09-18 19:02:40--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  273K    50K .......... .......... .......... .......... ..........  275K   100K .......... .......... .......... .......... ..........  540K   150K .......... .......... .......... .......... ..........  275K   200K .......... .......... .......... .......... ..........  548K   250K .......... .......... .......... .......... ..........  549K   300K .......... .......... .......... .......... ..........  549K   350K .......... .......... .......... .......... ..........  548K   400K .......... .......... .......... .......... ..........  546K   450K .......... .......... .......... .......... ..........  547K   500K .......... .......... .......... .......... .......... 27.4M   550K .......... .......... .......... .......... ..........  552K   600K .......... .......... .......... .......... ..........  545K   650K .......... .......... .......... .......... .......... 99.0M   700K .......... .......... .......... .......... ..........  550K   750K .......... .......... .......... .......... .......... 47.6M   800K .......... .......... .......... .......... ..........  554K   850K .......... .......... .......... .......... ..........  549K   900K .......... .......... .......... .......... ..........  145M   950K .......... .......... .......... .......... ..........  550K  1000K .......... .......... .......... .......... ..........  132M  1050K .......... .......... .......... .......... ..........  550K  1100K .......... .......... .......... .......... ..........  114M  1150K .......... .......... .......... .......... ..........  551K  1200K .......... .......... .......... .......... .......... 19.7M  1250K .......... .......... .......... .......... ..........  560K  1300K .......... .......... .......... .......... ..........  101M  1350K .......... .......... .......... .......... ..........  551K  1400K .......... .......... .......... .......... .......... 73.2M  1450K .......... .......... .......... .......... .......... 41.0M  1500K .......... .......... .......... .......... ..........  557K  1550K .......... .......... .......... .......... .......... 32.0M  1600K .......... .......... .......... .......... ..........  555K  1650K .......... .......... .......... .......... ..........  153M  1700K .......... .......... .......... .......... .......... 51.5M  1750K .......... .......... .......... .......... ..........  555K  1800K .......... .......... .......... .......... .......... 46.7M  1850K .......... .......... .......... .......... .......... 19.4M  1900K .......... .......... .......... .......... ..........  568K  1950K .......... .......... .......... .......... .......... 28.2M  2000K .......... .......... .......... .......... .......... 25.9M  2050K .......... .......... .......... .......... ..........  568K  2100K .......... .......... .......... .......... .......... 81.1M  2150K .......... .......... .......... .......... .......... 2.12M  2200K .......... .......... .......... .......... ..........  737K  2250K .......... .......... .......... .......... ..........  150M  2300K .......... .......... .......... .......... .......... 2.12M  2350K .......... .......... .......... .......... ..........  732K  2400K .......... .......... .......... .......... ..........  158M  2450K .......... .......... .......... .......... .......... 1.69M  2500K .......... .......... .......... .......... .......... 21.5M  2550K .......... .......... .......... .......... ..........  830K  2600K .......... .......... .......... .......... .......... 72.6M  2650K .......... .......... .......... .......... .......... 1.64M  2700K .......... .......... .......... .......... .......... 2.37M  2750K .......... .......... .......... .......... .......... 1.21M  2800K .......... .......... .......... .......... .......... 58.3M  2850K .......... .......... .......... .......... .......... 1.09M  2900K .......... .......... .......... .......... .......... 9.32M  2950K .......... .......... .......... .......... .......... 1.22M  3000K .......... .......... .......... .......... ..........  156M  3050K .......... .......... .......... .......... .......... 1.66M  3100K .......... .......... .......... .......... .......... 2.28M  3150K .......... .......... .......... .......... .......... 2.88M  3200K .......... .......... .......... .......... .......... 1.20M  3250K .......... .......... .......... .......... .......... 9.75M  3300K .......... .......... .......... .......... .......... 1.44M  3350K .......... .......... .......... .......... .......... 1.36M  3400K .......... .......... .......... .......... .......... 11.0M  3450K .......... .......... .......... .......... .......... 1.94M  3500K .......... .......... .......... .......... .......... 95.4M  3550K .......... .......... .......... .......... .......... 1.32M  3600K .......... .......... .......... .......... .......... 1.02M  3650K .......... .......... .......... .......... .......... 2.12M  3700K .......... .......... .......... .......... .......... 43.7M  3750K .......... .......... .......... .......... ..........  136M  3800K .......... .......... .......... .......... .......... 1.16M  3850K .......... .......... .......... .......... .......... 18.7M  3900K .......... .......... .......... .......... .......... 1.16M  3950K .......... .......... .......... .......... .......... 12.7M  4000K .......... .......... .......... .......... .......... 1.07M  4050K .......... .......... .......... .......... .......... 14.3M  4100K .......... .......... .......... .......... .......... 1.65M  4150K .......... .......... .......... .......... .......... 23.9M  4200K .......... .......... .......... .......... .......... 5.91M  4250K .......... .......... .......... .......... .......... 1.94M  4300K .......... .......... .......... .......... .......... 2.14M  4350K .......... .......... .......... .......... .......... 14.7M  4400K .......... .......... .......... .......... .......... 25.4M  4450K .......... .......... .......... .......... .......... 1.64M  4500K .......... .......... .......... .......... ..........  114M  4550K .......... .......... .......... .......... .......... 5.19M  4600K .......... .......... .......... .......... .......... 2.01M  4650K .......... .......... .......... .......... .......... 2.10M  4700K .......... .......... .......... .......... .......... 16.0M  4750K .......... .......... .......... .......... .......... 69.7M  4800K .......... .......... .......... .......... .......... 1.63M  4850K .......... .......... .......... .......... ..........  106M  4900K .......... .......... .......... .......... .......... 5.22M  4950K .......... .......... .......... .......... .......... 2.03M  5000K .......... .......... .......... .......... .......... 26.5M  5050K .......... .......... .......... .......... .......... 2.07M  5100K .......... .......... .......... .......... .......... 25.8M  5150K .......... .......... .......... .......... .......... 1.74M  5200K .......... .......... .......... .......... .......... 22.6M  5250K .......... .......... .......... .......... .......... 47.4M  5300K .......... .......... .......... .......... .......... 5.90M  5350K .......... .......... .......... .......... .......... 1.97M  5400K .......... .......... .......... .......... .......... 73.3M  5450K .......... .......... .......... .......... .......... 2.09M  5500K .......... .......... .......... .......... .......... 17.6M  5550K .......... .......... .......... .......... ..........  119M  5600K .......... .......... .......... .......... .......... 1.64M  5650K .......... .......... .......... .......... .......... 49.0M  5700K .......... .......... .......... .......... .......... 6.39M  5750K .......... .......... .......... .......... .......... 15.4M  5800K .......... .......... .......... .......... .......... 2.13M  5850K .......... .......... .......... .......... .......... 86.9M  5900K .......... .......... .......... .......... .......... 2.14M  5950K .......... .......... .......... .......... .......... 15.8M  6000K .......... .......... .......... .......... ..........  104M  6050K .......... .......... .......... .......... .......... 1.66M  6100K .......... .......... .......... .......... .......... 70.1M  6150K .......... .......... .......... .......... .......... 43.1M  6200K .......... .......... .......... .......... .......... 5.84M  6250K .......... .......... .......... .......... .......... 14.6M  6300K .......... .......... .......... .......... .......... 2.19M  6350K .......... .......... .......... .......... .......... 2.18M  6400K .......... .......... .......... .......... .......... 19.4M  6450K .......... .......... .......... .......... .......... 91.3M  6500K .......... .......... .......... .......... ..........  141M  6550K .......... .......... .......... .......... .......... 1.65M  6600K .......... .......... .......... .......... .......... 62.9M  6650K .......... .......... .......... .......... .......... 31.8M  6700K .......... .......... .......... .......... .......... 6.49M  6750K .......... .......... .......... .......... .......... 18.9M  6800K .......... .......... .......... .......... .......... 2.11M  6850K .......... .......... .......... .......... .......... 39.7M  6900K .......... .......... .......... .......... .......... 2.19M  6950K .......... .......... .......... .......... .......... 29.4M  7000K .......... .......... .......... .......... ..........  110M  7050K .......... .......... .......... .......... .......... 56.5M  7100K .......... .......... .......... .......... .......... 1.64M  7150K .......... .......... .......... .......... .......... 41.6M  7200K .......... .......... .......... .......... .......... 13.8M  7250K .......... .......... .......... .......... .......... 9.29M  7300K .......... .......... .......... .......... .......... 22.1M  7350K .......... .......... .......... .......... .......... 2.14M  7400K .......... .......... .......... .......... .......... 38.6M  7450K .......... .......... .......... .......... .......... 2.21M  7500K .......... .......... .......... .......... .......... 26.1M  7550K .......... .......... .......... .......... .......... 99.9M  7600K .......... .......... .......... .......... .......... 78.9M  7650K .......... .......... .......... .......... .......... 1.65M  7700K .......... .......... .......... .......... .......... 36.6M  7750K .......... .......... .......... .......... .......... 71.8M  7800K .......... .......... .......... .......... .......... 5.69M  7850K .......... .......... .......... .......... ..........  106M  7900K .......... .......... .......... .......... .......... 14.7M  7950K .......... .......... .......... .......... .......... 2.28M  8000K .......... .......... .......... .......... .......... 37.5M  8050K .......... .......... .......... .......... .......... 2.26M  8100K .......... .......... .......... .......... .......... 19.1M  8150K .......... .......... .......... .......... ..........  144M  8200K .......... .......... .......... .......... ..........  132M  8250K .......... .......... .......... .......... .......... 99.7M  8300K .......... .......... .......... .......... .......... 1.63M  8350K .......... .......... .......... .......... .......... 33.6M  8400K .......... .......... .......... .......... .......... 19.0M  8450K .......... .......... .......... .......... .......... 8.68M  8500K .......... .......... .......... .......... .......... 28.6M  8550K .......... .......... .......... .......... .......... 2.12M  8600K .......... .......... .......... .......... .......... 51.6M  8650K .......... .......... .......... .......... .......... 38.8M  8700K .......... .......... .......... .......... .......... 2.31M  8750K .......... .......... .......... .......... .......... 20.2M  8800K .......... .......... .......... .......... ..........  139M  8850K .......... .......... .......... .......... ..........  109M  8900K .......... .......... .......... .......... .......... 13.3M  8950K .......... .......... .......... .......... .......... 1.76M  9000K .......... .......... .......... .......... .......... 71.5M  9050K .......... .......... .......... .......... ..........  111M  9100K .......... .......... .......... .......... .......... 5.96M  9150K .......... .......... .......... .......... .......... 37.9M  9200K .......... .......... .......... .......... .......... 28.8M  9250K .......... .......... .......... .......... .......... 2.25M  9300K .......... .......... .......... .......... ..........  109M  9350K .......... .......... .......... .......... .......... 2.19M  9400K .......... .......... .......... .......... .......... 26.3M  9450K .......... .......... .......... .......... .......... 5.77M  9500K .......... .......... .......... .......... .......... 4.23M  9550K .......... .......... .......... .......... .......... 6.03M  9600K .......... .......... .......... .......... .......... 5.47M  9650K .......... .......... .......... .......... .......... 3.29M  9700K .......... .......... .......... .......... .......... 4.09M  9750K .......... .......... .......... .......... .......... 17.8M  9800K .......... .......... .......... .......... ..........  969K  9850K .......... .......... .......... .......... .......... 58.5M  9900K .......... .......... .......... .......... ..........  140M  9950K .......... .......... .......... .......... ..........  113M 10000K .......... .......... .......... .......... ..........  144M 10050K .......... .......... .......... .......... .......... 1.73M 10100K .......... .......... .......... .......... .......... 54.6M 10150K .......... .......... .......... .......... .......... 98.2M 10200K .......... .......... .......... .......... .......... 4.23M 10250K .......... .......... .......... .......... .......... 3.11M 10300K .......... .......... .......... .......... .......... 6.66M 10350K .......... .......... .......... .......... .......... 7.13M 10400K .......... .......... .......... .......... .......... 3.83M 10450K .......... .......... .......... .......... .......... 3.68M 10500K .......... .......... .......... .......... .......... 1.52M 10550K .......... .......... .......... .......... ..........  721K 10600K .......... .......... .......... .......... .......... 24.2M 10650K .......... .......... .......... .......... .......... 61.6M 10700K .......... .......... .......... .......... .......... 78.7M 10750K .......... .......... .......... .......... ..........  149M 10800K .......... .......... .......... .......... .......... 1.48M 10850K .......... .......... .......... .......... .......... 21.4M 10900K .......... .......... .......... .......... .......... 68.3M 10950K .......... .......... .......... .......... ..........  141M 11000K .......... .......... .......... .......... ..........  149M 11050K .......... .......... .......... .......... ..........  178M 11100K .......... .......... .......... .......... ..........  175M 11150K .......... .......... .......... .......... ..........  182M 11200K .......... .......... .......... .......... .......... 1.50M 11250K .......... .......... .......... .......... ..........  820K 11300K .......... .......... .......... .......... .......... 18.3M 11350K .......... .......... .......... .......... .......... 65.5M 11400K .......... .......... .......... .......... .......... 85.3M 11450K .......... .......... .......... .......... ..........  119M 11500K .......... .......... .......... .......... ..........  101M 11550K .......... .......... .......... .......... .................. 4.49M 50150K .......... .......... .......... .......... .......... 4.63M 50200K .......... .......... .......... .......... .......... 4.73M 50250K .......... .......... .......... .......... .......... 8.51M 50300K .......... .......... .......... .......... .......... 4.72M 50350K .......... .......... .......... .......... .......... 4.49M 50400K .......... .......... .......... .......... .......... 4.66M 50450K .......... .......... .......... .......... .......... 8.72M 50500K .......... .......... .......... .......... .......... 4.69M 50550K .......... .......... .......... .......... .......... 4.47M 50600K .......... .......... .......... .......... .......... 4.64M 50650K .......... .......... .......... .......... .......... 8.09M 50700K .......... .......... .......... .......... .......... 4.86M 50750K .......... .......... .......... .......... .......... 4.47M 50800K .......... .......... .......... .......... .......... 4.74M 50850K .......... .......... .......... .......... .......... 8.86M 50900K .......... .......... .......... .......... .......... 4.63M 50950K .......... .......... .......... .......... .......... 4.57M 51000K .......... .......... .......... .......... .......... 4.53M 51050K .......... .......... .......... .......... .......... 8.32M 51100K .......... .......... .......... .......... .......... 4.76M 51150K .......... .......... .......... .......... .......... 4.53M 51200K .......... .......... .......... .......... .......... 4.71M 51250K .......... .......... .......... .......... .......... 4.44M 51300K .......... .......... .......... .......... .......... 9.30M 51350K .......... .......... .......... .......... .......... 4.57M 51400K .......... .......... .......... .......... .......... 4.73M 51450K .......... .......... .......... .......... .......... 4.57M 51500K .......... .......... .......... .......... .......... 8.23M 51550K .......... .......... .......... .......... .......... 4.75M 51600K .......... .......... .......... .......... .......... 4.55M 51650K .......... .......... .......... .......... .......... 4.67M 51700K .......... .......... .......... .......... .......... 4.57M 51750K .......... .......... .......... .......... .......... 9.23M 51800K .......... .......... .......... .......... .......... 4.51M 51850K .......... .......... .......... .......... .......... 4.71M 51900K .......... .......... .......... .......... .......... 3.96M 51950K .......... .......... .......... .......... .......... 13.2M 52000K .......... .......... .......... .......... .......... 4.32M 52050K .......... .......... .......... .......... .......... 4.76M 52100K .......... .......... .......... .......... .......... 4.87M 52150K .......... .......... .......... .......... .......... 8.33M 52200K .......... .......... .......... .......... .......... 4.60M 52250K .......... .......... .......... .......... .......... 4.70M 52300K .......... .......... .......... .......... .......... 4.53M 52350K .......... .......... .......... .......... .......... 9.23M 52400K .......... .......... .......... .......... .......... 4.53M 52450K .......... .......... .......... .......... .......... 4.08M 52500K .......... .......... .......... .......... .......... 5.41M 52550K .......... .......... .......... .......... .......... 7.95M 52600K .......... .......... .......... .......... .......... 4.73M 52650K .......... .......... .......... .......... .......... 4.73M 52700K .......... .......... .......... .......... .......... 4.65M 52750K .......... .......... .......... .......... .......... 5.84M 52800K .......... .......... .......... .......... .......... 6.16M 52850K .......... .......... .......... .......... .......... 4.74M 52900K .......... .......... .......... .......... .......... 4.55M 52950K .......... .......... .......... .......... .......... 7.95M 53000K .......... .......... .......... .......... .......... 4.68M 53050K .......... .......... .......... .......... .......... 4.60M 53100K .......... .......... .......... .......... .......... 4.79M 53150K .......... .......... .......... .......... .......... 8.55M 53200K .......... .......... .......... .......... .......... 4.68M 53250K .......... .......... .......... .......... .......... 4.48M 53300K .......... .......... .......... .......... .......... 4.62M 53350K .......... .......... .......... .......... .......... 8.79M 53400K .......... .......... .......... .......... .......... 4.69M 53450K .......... .......... .......... .......... .......... 3.74M 53500K .......... .......... .......... .......... .......... 5.72M 53550K .......... .......... .......... .......... .......... 9.26M 53600K .......... .......... .......... .......... .......... 4.49M 53650K .......... .......... .......... .......... .......... 4.47M 53700K .......... .......... .......... .......... .......... 4.61M 53750K .......... .......... .......... .......... .......... 8.62M 53800K .......... .......... .......... .......... .......... 4.44M 53850K .......... .......... .......... .......... .......... 4.60M 53900K .......... .......... .......... .......... .......... 4.39M 53950K .......... .......... .......... .......... .......... 4.92M 54000K .......... .......... .......... .......... .......... 8.47M 54050K .......... .......... .......... .......... .......... 4.49M 54100K .......... .......... .......... .......... .......... 4.38M 54150K .......... .......... .......... .......... .......... 4.20M 54200K .......... .......... .......... .......... .......... 8.09M 54250K .......... .......... .......... .......... .......... 4.43M 54300K .......... .......... .......... .......... .......... 4.72M 54350K .......... .......... .......... .......... .......... 4.78M 54400K .......... .......... .......... .......... .......... 8.91M 54450K .......... .......... .......... .......... .......... 4.30M 54500K .......... .......... .......... .......... .......... 4.46M 54550K .......... .......... .......... .......... .......... 4.87M 54600K .......... .......... .......... .......... .......... 8.22M 54650K .......... .......... .......... .......... .......... 4.69M 54700K .......... .......... .......... .......... .......... 4.57M 54750K .......... .......... .......... .......... .......... 4.74M 54800K .......... .......... .......... .......... .......... 8.71M 54850K .......... .......... .......... .......... .......... 4.59M 54900K .......... .......... .......... .......... .......... 4.33M 54950K .......... .......... .......... .......... .......... 3.93M 55000K .......... .......... .......... .......... .......... 11.5M 55050K .......... .......... .......... .......... .......... 4.81M 55100K .......... .......... .......... .......... .......... 4.56M 55150K .......... .......... .......... .......... .......... 4.50M 55200K .......... .......... .......... .......... .......... 4.52M 55250K .......... .......... .......... .......... .......... 9.04M 55300K .......... .......... .......... .......... .......... 4.32M 55350K .......... .......... .......... .......... .......... 4.53M 55400K .......... .......... .......... .......... .......... 4.56M 55450K .......... .......... .......... .......... .......... 7.19M 55500K .......... .......... .......... .......... .......... 5.13M 55550K .......... .......... .......... .......... .......... 4.74M 55600K .......... .......... .......... .......... .......... 4.52M 55650K .......... .......... .......... .......... .......... 8.61M 55700K .......... .......... .......... .......... .......... 4.58M 55750K .......... .......... .......... .......... .......... 4.48M 55800K .......... .......... .......... .......... .......... 4.12M 55850K .......... .......... .......... .......... .......... 12.0M 55900K .......... .......... .......... .......... .......... 4.63M 55950K .......... .......... .......... .......... .......... 4.59M 56000K .......... .......... .......... .......... .......... 4.39M 56050K .......... .......... .......... .......... .......... 8.18M 56100K .......... .......... .......... .......... .......... 3.72M 56150K .......... .......... .......... .......... .......... 4.69M 56200K .......... .......... .......... .......... .......... 4.62M 56250K .......... .......... .......... .......... .......... 8.99M 56300K .......... .......... .......... .......... .......... 4.65M 56350K .......... .......... .......... .......... .......... 4.49M 56400K .......... .......... .......... .......... .......... 4.07M 56450K .......... .......... .......... .......... .......... 9.28M 56500K .......... .......... .......... .......... .......... 5.33M 56550K .......... .......... .......... .......... .......... 4.55M 56600K .......... .......... .......... .......... .......... 4.53M 56650K .......... .......... .......... .......... .......... 8.75M 56700K .......... .......... .......... .......... .......... 4.75M 56750K .......... .......... .......... .......... .......... 4.61M 56800K .......... .......... .......... .......... .......... 4.06M 56850K .......... .......... .......... .......... .......... 5.37M 56900K .......... .......... .......... .......... .......... 8.89M 56950K .......... .......... .......... .......... .......... 4.49M 57000K .......... .......... .......... .......... .......... 4.66M 57050K .......... .......... .......... .......... .......... 4.39M 57100K .......... .......... .......... .......... .......... 9.88M 57150K .......... .......... .......... .......... .......... 4.58M 57200K .......... .......... .......... .......... .......... 4.67M 57250K .......... .......... .......... .......... .......... 8.67M 57300K .......... .......... .......... .......... .......... 4.46M 57350K .......... .......... .......... .......... .......... 4.55M 57400K .......... .......... .......... .......... .......... 4.73M 57450K .......... .......... .......... .......... .......... 8.04M 57500K .......... .......... .......... .......... .......... 5.00M 57550K .......... .......... .......... .......... .......... 4.69M 57600K .......... .......... .......... .......... .......... 4.47M 57650K .......... .......... .......... .......... .......... 8.49M 57700K .......... .......... .......... .......... .......... 4.07M 57750K .......... .......... .......... .......... .......... 5.41M 57800K .......... .......... .......... .......... .......... 3.76M 57850K .......... .......... .......... .......... .......... 11.5M 57900K .......... .......... .......... .......... .......... 5.00M 57950K .......... .......... .......... .......... .......... 4.30M 58000K .......... .......... .......... .......... .......... 4.13M 58050K .......... .......... .......... .......... .......... 12.4M 58100K .......... .......... .......... .......... .......... 4.69M 58150K .......... .......... .......... .......... .......... 4.49M 58200K .......... .......... .......... .......... .......... 4.80M 58250K .......... .......... .......... .......... .......... 8.89M 58300K .......... .......... .......... .......... .......... 4.57M 58350K .......... .......... .......... .......... .......... 4.50M 58400K .......... .......... .......... .......... .......... 4.75M 58450K .......... .......... .......... .......... .......... 8.49M 58500K .......... .......... .......... .......... .......... 4.70M 58550K .......... .......... .......... .......... .......... 4.52M 58600K .......... .......... .......... .......... .......... 4.73M 58650K .......... .......... .......... .......... .......... 6.29M 58700K .......... .......... .......... .......... .......... 5.72M 58750K .......... .......... .......... .......... .......... 3.87M 58800K .......... .......... .......... .......... .......... 5.07M 58850K .......... .......... .......... .......... .......... 8.71M 58900K .......... .......... .......... .......... .......... 4.81M 58950K .......... .......... .......... .......... .......... 4.54M 59000K .......... .......... .......... .......... .......... 4.52M 59050K .......... .......... .......... .......... .......... 4.44M 59100K .......... .......... .......... .......... .......... 8.90M 59150K .......... .......... .......... .......... .......... 4.66M 59200K .......... .......... .......... .......... .......... 3.42M 59250K .......... .......... .......... .......... .......... 6.65M 59300K .......... .......... .......... .......... .......... 4.66M 59350K .......... .......... .......... .......... .......... 7.15M 59400K .......... .......... .......... .......... .......... 5.11M 59450K .......... .......... .......... .......... .......... 4.52M 59500K .......... .......... .......... .......... .......... 4.06M 59550K .......... .......... .......... .......... .......... 7.00M 59600K .......... .......... .......... .......... .......... 6.17M 59650K .......... .......... .......... .......... .......... 3.92M 59700K .......... .......... .......... .......... .......... 5.25M 59750K .......... .......... .......... .......... .......... 8.83M 59800K .......... .......... .......... .......... .......... 4.43M 59850K .......... .......... .......... .......... .......... 4.53M 59900K .......... .......... .......... .......... .......... 4.29M 59950K .......... .......... .......... .......... .......... 10.5M 60000K .......... .......... .......... .......... .......... 4.57M 60050K .......... .......... .......... .......... .......... 4.37M 60100K .......... .......... .......... .......... .......... 4.68M 60150K .......... .......... .......... .......... .......... 8.61M 60200K .......... .......... .......... .......... .......... 4.62M 60250K .......... .......... .......... .......... .......... 4.36M 60300K .......... .......... .......... .......... .......... 4.66M 60350K .......... .......... .......... .......... .......... 8.53M 60400K .......... .......... .......... .......... .......... 4.59M 60450K .......... .......... .......... .......... .......... 4.54M 60500K .......... .......... .......... .......... .......... 4.70M 60550K .......... .......... .......... .......... .......... 9.15M 60600K .......... .......... .......... .......... ..........  784K 60650K .......... .........                                    175M=15s2023-09-18 19:02:55 (4.05 MB/s) - 'exp_quant.zip' saved [62125370]--2023-09-18 19:02:59--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  271K 3s    50K .......... .......... .......... .......... .......... 12%  275K 3s   100K .......... .......... .......... .......... .......... 18%  547K 2s   150K .......... .......... .......... .......... .......... 24%  549K 2s   200K .......... .......... .......... .......... .......... 30%  550K 1s   250K .......... .......... .......... .......... .......... 36% 3.78M 1s   300K .......... .......... .......... .......... .......... 42%  622K 1s   350K .......... .......... .......... .......... .......... 48%  561K 1s   400K .......... .......... .......... .......... .......... 54% 3.82M 1s   450K .......... .......... .......... .......... .......... 60%  633K 1s   500K .......... .......... .......... .......... .......... 66% 3.92M 0s   550K .......... .......... .......... .......... .......... 72%  639K 0s   600K .......... .......... .......... .......... .......... 78% 3.81M 0s   650K .......... .......... .......... .......... .......... 84%  876K 0s   700K .......... .......... .......... .......... .......... 90% 2.10M 0s   750K .......... .......... .......... .......... .......... 96% 1.75M 0s   800K .......... .......... .......                         100%  702K=1.2s2023-09-18 19:03:00 (711 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="46.60880756378174">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-18 18:53:08.977] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-18 18:53:08.977] [jLog] [info] building indexout : ./index[2023-09-18 18:53:08.978] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-18 18:53:08.990] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-18 18:53:08.990] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-18 18:53:09.000] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-18 18:53:09.002] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-18 18:53:09.055] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-18 18:53:09.055] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 563.17 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 509.68 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-18 18:53:09.056] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-18 18:53:09.056] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-18 18:53:09.057] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-18 18:53:09.057] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-18 18:53:09.057] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-18 18:53:09.057] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-18 18:53:09.057] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-18 18:53:09.064] [puff::index::jointLog] [info] # segments = 23[2023-09-18 18:53:09.064] [puff::index::jointLog] [info] total length = 19592[2023-09-18 18:53:09.064] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-18 18:53:09.072] [puff::index::jointLog] [info] positional integer width = 15[2023-09-18 18:53:09.072] [puff::index::jointLog] [info] seqSize = 19592[2023-09-18 18:53:09.072] [puff::index::jointLog] [info] rankSize = 19592[2023-09-18 18:53:09.072] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-18 18:53:09.072] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela.. 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-18 18:53:09.131] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-18 18:53:09.131] [puff::index::jointLog] [info] chunk size = 9796[2023-09-18 18:53:09.131] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-18 18:53:09.131] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-18 18:53:09.132] [puff::index::jointLog] [info] finished populating pos vector[2023-09-18 18:53:09.132] [puff::index::jointLog] [info] writing index components[2023-09-18 18:53:09.143] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-18 18:53:09.147] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-18 18:53:09.785] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-18 18:53:09.785] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-18 18:53:09.785] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-09-18 18:53:09.785] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-18 18:53:09.785] [jointLog] [info] parsing read library format[2023-09-18 18:53:09.785] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 556.36 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 899.32 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 331.45 us-----------------------------------------[2023-09-18 18:53:09.902] [jointLog] [info] Loading pufferfish index[2023-09-18 18:53:09.902] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading mphf table | Time = 598.73 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 623.38 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 1.0051 ms-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.1288 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 616.88 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 379 us-----------------------------------------[2023-09-18 18:53:09.910] [jointLog] [info] done[2023-09-18 18:53:09.910] [jointLog] [info] Index contained 15 targets[2023-09-18 18:53:09.910] [jointLog] [info] Number of decoys : 0[2023-09-18 18:53:09.979] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-18 18:53:09.979] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-18 18:53:09.980] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-09-18 18:53:09.980] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-18 18:53:09.980] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-18 18:53:09.980] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-09-18 18:53:09.980] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-18 18:53:09.980] [jointLog] [info] Mapping rate = 100%[2023-09-18 18:53:09.980] [jointLog] [info] finished quantifyLibrary()[2023-09-18 18:53:09.984] [jointLog] [info] Starting optimizer[2023-09-18 18:53:09.985] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-18 18:53:09.985] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-09-18 18:53:09.986] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-18 18:53:09.986] [jointLog] [info] Finished optimizer[2023-09-18 18:53:09.986] [jointLog] [info] writing output [2023-09-18 18:53:09.990] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="24.20213532447815">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "quant_type|qtype": "reads",  "quant_type|refTranscriptSource|TranscriptSource": "history",  "quant_type|refTranscriptSource|s_index|fasta": {   "id": "49e215d862cf66b3",   "src": "hda"  } }, "job": {  "command_line": "mkdir ./index \u0026\u0026 mkdir ./output \u0026\u0026 salmon index -i ./index --kmerLen \u002731\u0027 --gencode --transcripts \u0027/galaxy/server/database/objects/0/2/1/dataset_021aea08-59bb-4c6a-b0f0-de9e2ac361c8.dat\u0027 \u0026\u0026    ln -s /galaxy/server/database/objects/0/2/1/dataset_021aea08-59bb-4c6a-b0f0-de9e2ac361c8.dat ./single.fasta \u0026\u0026  salmon quant --index \u0027./index\u0027 --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"              --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output",  "command_version": null,  "create_time": "2023-09-18T18:53:41.766037",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-6hwcl",  "galaxy_version": "23.0",  "history_id": "51ad311d25040079",  "id": "1d41e4ffbed07d69",  "inputs": {   "quant_type|input|input_singles": {    "id": "49e215d862cf66b3",    "src": "hda",    "uuid": "021aea08-59bb-4c6a-b0f0-de9e2ac361c8"   },   "quant_type|refTranscriptSource|fasta": {    "id": "49e215d862cf66b3",    "src": "hda",    "uuid": "021aea08-59bb-4c6a-b0f0-de9e2ac361c8"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "da43387afe06086d",    "src": "hda",    "uuid": "4aa4b91a-e394-4858-8ef5-35cbd2abb186"   }  },  "params": {   "__input_ext": "\"fasta\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": false}",   "seqBias": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-18T18:53:48.835542",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 24.20213532447815, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="29.970299005508423">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-18 18:54:07.806] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-18 18:54:07.806] [jLog] [info] building indexout : ./index[2023-09-18 18:54:07.806] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-18 18:54:07.813] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-18 18:54:07.813] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-18 18:54:07.823] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-18 18:54:07.824] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-18 18:54:07.875] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-18 18:54:07.875] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 3.4996 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 843.21 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-18 18:54:07.880] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-18 18:54:07.880] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-18 18:54:07.880] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-18 18:54:07.880] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-18 18:54:07.881] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-18 18:54:07.881] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-18 18:54:07.881] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-18 18:54:07.889] [puff::index::jointLog] [info] # segments = 23[2023-09-18 18:54:07.889] [puff::index::jointLog] [info] total length = 19592[2023-09-18 18:54:07.889] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-18 18:54:07.896] [puff::index::jointLog] [info] positional integer width = 15[2023-09-18 18:54:07.896] [puff::index::jointLog] [info] seqSize = 19592[2023-09-18 18:54:07.896] [puff::index::jointLog] [info] rankSize = 19592[2023-09-18 18:54:07.896] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-18 18:54:07.896] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..%   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-18 18:54:07.956] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-18 18:54:07.956] [puff::index::jointLog] [info] chunk size = 9796[2023-09-18 18:54:07.956] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-18 18:54:07.956] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-18 18:54:07.957] [puff::index::jointLog] [info] finished populating pos vector[2023-09-18 18:54:07.957] [puff::index::jointLog] [info] writing index components[2023-09-18 18:54:07.969] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-18 18:54:07.973] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-18 18:54:08.063] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-18 18:54:08.063] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-18 18:54:08.063] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-09-18 18:54:08.063] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-18 18:54:08.063] [jointLog] [info] parsing read library format[2023-09-18 18:54:08.063] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 420.8 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 874.22 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 276.55 us----------------------------------------------------------------------------------| Loading mphf table | Time = 504.1 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 676.67 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 497.96 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 917.25 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 537.43 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 287.37 us-----------------------------------------[2023-09-18 18:54:08.165] [jointLog] [info] Loading pufferfish index[2023-09-18 18:54:08.165] [jointLog] [info] Loading dense pufferfish index.[2023-09-18 18:54:08.172] [jointLog] [info] done[2023-09-18 18:54:08.172] [jointLog] [info] Index contained 15 targets[2023-09-18 18:54:08.172] [jointLog] [info] Number of decoys : 0[2023-09-18 18:54:08.239] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-18 18:54:08.239] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-18 18:54:08.240] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-09-18 18:54:08.240] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-18 18:54:08.240] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-18 18:54:08.240] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-09-18 18:54:08.241] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-18 18:54:08.241] [jointLog] [info] Mapping rate = 100%[2023-09-18 18:54:08.241] [jointLog] [info] finished quantifyLibrary()[2023-09-18 18:54:08.244] [jointLog] [info] Starting optimizer[2023-09-18 18:54:08.245] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-18 18:54:08.245] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-09-18 18:54:08.246] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-18 18:54:08.246] [jointLog] [info] Finished optimizer[2023-09-18 18:54:08.246] [jointLog] [info] writing output [2023-09-18 18:54:08.250] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="35.23426008224487">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "54d37a33c06e5b31",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "d76231a8ddaa365f",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/1/5/a/dataset_15a9a23e-c776-4416-8548-f85d3caa3add.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "create_time": "2023-09-18T18:54:39.272715",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lxhz8",  "galaxy_version": "23.0",  "history_id": "51ad311d25040079",  "id": "24e457de3f72752f",  "inputs": {   "afile": {    "id": "54d37a33c06e5b31",    "src": "hda",    "uuid": "47a10166-f373-4b20-a0d2-28c5eaa2f540"   },   "transcript": {    "id": "d76231a8ddaa365f",    "src": "hda",    "uuid": "15a9a23e-c776-4416-8548-f85d3caa3add"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695063282.0000000",    "title": "Job End Time",    "value": "2023-09-18 18:54:42"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695063280.0000000",    "title": "Job Start Time",    "value": "2023-09-18 18:54:40"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "ba5d85524aa21f82",    "src": "hda",    "uuid": "42b0ed02-747b-4fc2-9cd7-288f1d3aeffb"   },   "postSample": {    "id": "30333a4cc274a603",    "src": "hda",    "uuid": "a3ba4278-7001-4d5c-b847-6d6bfe9c2948"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 148, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/1/5/a/dataset_15a9a23e-c776-4416-8548-f85d3caa3add.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-09-18 18:54:40.839] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-09-18 18:54:40.839] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-09-18 18:54:40.840] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat\", fasta = \"/galaxy/server/database/objects/1/5/a/dataset_15a9a23e-c776-4416-8548-f85d3caa3add.dat\" . . .done\n[2023-09-18 18:54:41.363] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2023-09-18 18:54:41.601] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-09-18 18:54:41.608] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-09-18 18:54:41.608] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-09-18 18:54:41.609] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-09-18 18:54:41.610] [jointLog] [info] starting optimizer\n[2023-09-18 18:54:41.617] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-09-18 18:54:41.617] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-09-18 18:54:41.618] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-09-18 18:54:41.618] [jointLog] [info] finished optimizer\n[2023-09-18 18:54:41.618] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\n[2023-09-18 18:54:41.622] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/1/5/a/dataset_15a9a23e-c776-4416-8548-f85d3caa3add.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-09-18 18:54:40.839] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-09-18 18:54:40.839] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-09-18 18:54:40.840] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat\", fasta = \"/galaxy/server/database/objects/1/5/a/dataset_15a9a23e-c776-4416-8548-f85d3caa3add.dat\" . . .done\n[2023-09-18 18:54:41.363] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2023-09-18 18:54:41.601] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-09-18 18:54:41.608] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-09-18 18:54:41.608] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-09-18 18:54:41.609] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-09-18 18:54:41.610] [jointLog] [info] starting optimizer\n[2023-09-18 18:54:41.617] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-09-18 18:54:41.617] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-09-18 18:54:41.618] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-09-18 18:54:41.618] [jointLog] [info] finished optimizer\n[2023-09-18 18:54:41.618] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\n[2023-09-18 18:54:41.622] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-18T18:54:53.656765",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_2jn888df.sam v. /tmp/history_bam_converted_to_sam_oiszt8qj.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -21014,10 +21015,10 @@\n 6895:NM_022658:1622:182\t163\tNM_022658\t1623\t1\t50M\t=\t1755\t182\tAACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9607:NM_022658:1622:191\t163\tNM_022658\t1623\t1\t50M\t=\t1764\t191\tAACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4730:NM_022658:1623:193\t163\tNM_022658\t1624\t1\t50M\t=\t1767\t193\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-2703:NM_022658:1473:200\t83\tNM_022658\t1624\t1\t50M\t=\t1474\t-200\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4601:NM_022658:1476:197\t147\tNM_022658\t1624\t1\t50M\t=\t1477\t-197\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6103:NM_022658:1489:184\t83\tNM_022658\t1624\t1\t50M\t=\t1490\t-184\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7438:NM_022658:1508:165\t83\tNM_022658\t1624\t1\t50M\t=\t1509\t-165\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+2703:NM_022658:1473:200\t83\tNM_022658\t1624\t1\t50M\t=\t1474\t-200\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9163:NM_022658:1624:152\t163\tNM_022658\t1625\t1\t50M\t=\t1727\t152\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3491:NM_022658:1498:176\t83\tNM_022658\t1625\t1\t50M\t=\t1499\t-176\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7735:NM_022658:1487:187\t147\tNM_022658\t1625\t1\t50M\t=\t1488\t-187\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -27014,8 +27015,8 @@\n 3076:NM_173860:414:198\t99\tNM_173860\t415\t1\t50M\t=\t563\t198\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3326:NM_173860:414:135\t163\tNM_173860\t415\t1\t50M\t=\t500\t135\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8790:NM_173860:286:178\t147\tNM_173860\t415\t1\t50M\t=\t287\t-178\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7340:NM_173860:415:212\t99\tNM_173860\t416\t1\t50M\t=\t578\t212\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 614:NM_173860:277:188\t83\tNM_173860\t416\t1\t50M\t=\t278\t-188\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9840:NM_173860:284:181\t147\tNM_173860\t416\t1\t50M\t=\t285\t-181\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3019:NM_173860:416:157\t163\tNM_173860\t417\t1\t50M\t=\t524\t157\tCGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 35.23426008224487, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/1/5/a/dataset_15a9a23e-c776-4416-8548-f85d3caa3add.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-18 18:54:40.839] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-18 18:54:40.839] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2023-09-18 18:54:40.840] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat", fasta = "/galaxy/server/database/objects/1/5/a/dataset_15a9a23e-c776-4416-8548-f85d3caa3add.dat" . . .done[2023-09-18 18:54:41.363] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2023-09-18 18:54:41.601] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2023-09-18 18:54:41.608] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2023-09-18 18:54:41.608] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2023-09-18 18:54:41.609] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-18 18:54:41.610] [jointLog] [info] starting optimizer[2023-09-18 18:54:41.617] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-18 18:54:41.617] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2023-09-18 18:54:41.618] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-18 18:54:41.618] [jointLog] [info] finished optimizer[2023-09-18 18:54:41.618] [jointLog] [info] writing outputResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output thread[2023-09-18 18:54:41.622] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamdoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/4/7/a/dataset_47a10166-f373-4b20-a0d2-28c5eaa2f540.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="29.616340398788452">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 20Hash table size = 34Candidate marks count = 57--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-18 18:55:12.722] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-18 18:55:12.722] [jLog] [info] building indexout : ./index[2023-09-18 18:55:12.723] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-18 18:55:12.729] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-18 18:55:12.729] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-18 18:55:12.739] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-18 18:55:12.741] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-18 18:55:12.791] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-18 18:55:12.791] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 694.99 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 658.76 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-18 18:55:12.793] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-18 18:55:12.793] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-18 18:55:12.793] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-18 18:55:12.793] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-18 18:55:12.794] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-18 18:55:12.794] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-18 18:55:12.794] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-18 18:55:12.803] [puff::index::jointLog] [info] # segments = 23[2023-09-18 18:55:12.803] [puff::index::jointLog] [info] total length = 19592[2023-09-18 18:55:12.803] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-18 18:55:12.812] [puff::index::jointLog] [info] positional integer width = 15[2023-09-18 18:55:12.812] [puff::index::jointLog] [info] seqSize = 19592[2023-09-18 18:55:12.812] [puff::index::jointLog] [info] rankSize = 19592[2023-09-18 18:55:12.812] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-18 18:55:12.812] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-18 18:55:12.872] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-18 18:55:12.872] [puff::index::jointLog] [info] chunk size = 9796[2023-09-18 18:55:12.872] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-18 18:55:12.872] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-18 18:55:12.873] [puff::index::jointLog] [info] finished populating pos vector[2023-09-18 18:55:12.873] [puff::index::jointLog] [info] writing index components[2023-09-18 18:55:12.883] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-18 18:55:12.887] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-18 18:55:12.984] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-18 18:55:12.984] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-18 18:55:12.984] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2023-09-18 18:55:12.984] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-18 18:55:12.984] [jointLog] [info] parsing read library format[2023-09-18 18:55:12.984] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 446.75 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0389 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 416 us----------------------------------------------------------------------------------| Loading mphf table | Time = 468.32 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 557.62 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 537.24 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 938.52 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 563.36 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 281.24 us-----------------------------------------[2023-09-18 18:55:13.087] [jointLog] [info] Loading pufferfish index[2023-09-18 18:55:13.088] [jointLog] [info] Loading dense pufferfish index.[2023-09-18 18:55:13.095] [jointLog] [info] done[2023-09-18 18:55:13.095] [jointLog] [info] Index contained 15 targets[2023-09-18 18:55:13.095] [jointLog] [info] Number of decoys : 0[2023-09-18 18:55:13.160] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-18 18:55:13.160] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-18 18:55:13.162] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2023-09-18 18:55:13.162] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2023-09-18 18:55:13.162] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-18 18:55:13.162] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-18 18:55:13.162] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-18 18:55:13.162] [jointLog] [info] Mapping rate = 100%[2023-09-18 18:55:13.162] [jointLog] [info] finished quantifyLibrary()[2023-09-18 18:55:13.166] [jointLog] [info] Starting optimizer[2023-09-18 18:55:13.167] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-18 18:55:13.167] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-09-18 18:55:13.168] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-18 18:55:13.168] [jointLog] [info] Finished optimizer[2023-09-18 18:55:13.168] [jointLog] [info] writing output [2023-09-18 18:55:13.172] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="29.600759267807007">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-18 18:55:42.508] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-18 18:55:42.508] [jLog] [info] building indexout : ./index[2023-09-18 18:55:42.508] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-18 18:55:42.516] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-18 18:55:42.516] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-18 18:55:42.525] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-18 18:55:42.527] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-18 18:55:42.577] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-18 18:55:42.577] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 566.06 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 608.05 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-18 18:55:42.579] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-18 18:55:42.579] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-18 18:55:42.579] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-18 18:55:42.579] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-18 18:55:42.579] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-18 18:55:42.579] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-18 18:55:42.579] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-18 18:55:42.588] [puff::index::jointLog] [info] # segments = 23[2023-09-18 18:55:42.588] [puff::index::jointLog] [info] total length = 19592[2023-09-18 18:55:42.588] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-18 18:55:42.595] [puff::index::jointLog] [info] positional integer width = 15[2023-09-18 18:55:42.595] [puff::index::jointLog] [info] seqSize = 19592[2023-09-18 18:55:42.595] [puff::index::jointLog] [info] rankSize = 19592[2023-09-18 18:55:42.595] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-18 18:55:42.595] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela..oPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-18 18:55:42.655] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-18 18:55:42.655] [puff::index::jointLog] [info] chunk size = 9796[2023-09-18 18:55:42.655] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-18 18:55:42.655] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-18 18:55:42.656] [puff::index::jointLog] [info] finished populating pos vector[2023-09-18 18:55:42.656] [puff::index::jointLog] [info] writing index components[2023-09-18 18:55:42.667] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-18 18:55:42.672] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-18 18:55:42.762] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-18 18:55:42.762] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-18 18:55:42.762] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-09-18 18:55:42.762] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-18 18:55:42.762] [jointLog] [info] parsing read library format[2023-09-18 18:55:42.762] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 449.64 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 924 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 326.9 us----------------------------------------------------------------------------------| Loading mphf table | Time = 425.33 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 763.6 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 840.5 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.1986 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 704.19 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 335.25 us-----------------------------------------[2023-09-18 18:55:42.867] [jointLog] [info] Loading pufferfish index[2023-09-18 18:55:42.867] [jointLog] [info] Loading dense pufferfish index.[2023-09-18 18:55:42.875] [jointLog] [info] done[2023-09-18 18:55:42.875] [jointLog] [info] Index contained 15 targets[2023-09-18 18:55:42.876] [jointLog] [info] Number of decoys : 0[2023-09-18 18:55:42.876] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2023-09-18 18:55:42.942] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-18 18:55:42.942] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-18 18:55:42.944] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-09-18 18:55:42.944] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-18 18:55:42.944] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-18 18:55:42.944] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-09-18 18:55:42.944] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-18 18:55:42.944] [jointLog] [info] Mapping rate = 100%[2023-09-18 18:55:42.944] [jointLog] [info] finished quantifyLibrary()[2023-09-18 18:55:42.949] [jointLog] [info] Starting optimizer[2023-09-18 18:55:42.950] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-18 18:55:42.950] [jointLog] [info] iteration = 0 | max rel diff. = 49[2023-09-18 18:55:42.950] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2023-09-18 18:55:42.954] [jointLog] [info] Computed expected counts (for bias correction)[2023-09-18 18:55:42.955] [jointLog] [info] processed bias for 20.0% of the transcripts[2023-09-18 18:55:42.956] [jointLog] [info] processed bias for 26.7% of the transcripts[2023-09-18 18:55:42.956] [jointLog] [info] processed bias for 26.7% of the transcripts[2023-09-18 18:55:42.956] [jointLog] [info] processed bias for 33.3% of the transcripts[2023-09-18 18:55:42.956] [jointLog] [info] processed bias for 33.3% of the transcripts[2023-09-18 18:55:42.957] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-09-18 18:55:42.957] [jointLog] [info] processed bias for 73.3% of the transcripts[2023-09-18 18:55:42.957] [jointLog] [info] processed bias for 73.3% of the transcripts[2023-09-18 18:55:42.958] [jointLog] [info] processed bias for 73.3% of the transcripts[2023-09-18 18:55:42.959] [jointLog] [info] processed bias for 100.0% of the transcripts[2023-09-18 18:55:42.959] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-18 18:55:42.959] [jointLog] [info] Finished optimizer[2023-09-18 18:55:42.959] [jointLog] [info] writing output [2023-09-18 18:55:42.963] [jointLog] [info] writing equivalence class counts.[2023-09-18 18:55:42.963] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2023-09-18 18:55:42.963] [jointLog] [info] done.[2023-09-18 18:55:42.966] [jointLog] [info] done writing equivalence class counts.[2023-09-18 18:55:42.966] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="31.519765615463257">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="34.04400157928467">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="31.384798049926758">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="37.02497625350952">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="35.56275296211243">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="31.181477069854736">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="73.21134042739868">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="40.24920129776001">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="34.90184140205383">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_loom": {   "id": "72dc3e090a1afe7f",   "src": "hda"  },  "plot_log": true }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R\u0027 -i \u0027/galaxy/server/database/objects/8/1/5/dataset_8152cb81-2d7b-4249-9e11-cbdf2c4d5e5d.dat\u0027 -o \u0027/galaxy/server/database/objects/f/d/6/dataset_fd65d2e7-b01a-4091-bc24-521da0653a27.dat\u0027 --log-scale",  "command_version": null,  "create_time": "2023-09-18T19:00:55.256471",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-dvmkn",  "galaxy_version": "23.0",  "history_id": "51ad311d25040079",  "id": "f70b8a57b1556261",  "inputs": {   "input_loom": {    "id": "72dc3e090a1afe7f",    "src": "hda",    "uuid": "8152cb81-2d7b-4249-9e11-cbdf2c4d5e5d"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_plot": {    "id": "ae04910c8e1e9ffe",    "src": "hda",    "uuid": "fd65d2e7-b01a-4091-bc24-521da0653a27"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "plot_log": "true"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-18T19:01:11.377573",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 34.90184140205383, "tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="39.579166650772095">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="45.43104314804077">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 45.43104314804077, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="101.50566482543945">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/5/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/a/7/1/dataset_a71387b0-17d5-4ff5-a8b2-7d7d76e3eefb.dat--pe1-2fasta:/galaxy/server/database/objects/b/4/d/dataset_b4d5fc92-c6c3-427f-a9dc-bf5086e91553.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/5/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/a/7/1/dataset_a71387b0-17d5-4ff5-a8b2-7d7d76e3eefb.dat']      right reads: ['/galaxy/server/database/objects/b/4/d/dataset_b4d5fc92-c6c3-427f-a9dc-bf5086e91553.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/5/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/5/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/5/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/5/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.109    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.115     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.280   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.286     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.444   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.537     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.537     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.538     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.975     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.983    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.984    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.149    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.149    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.222    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.223    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.223    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.224    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.224    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.224    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.066     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.080    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.436    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.436    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.602    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.624    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.644    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:02.644    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.647    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.648    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:02.649    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:02.650    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:02.650    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:02.651    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:02.651    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:02.651    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:02.651    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.669    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:02.669    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:02.675    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:02.685    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:02.685    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:02.685    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:02.685    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:02.685    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:02.727    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.832    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.199    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:03.822    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:04.954    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.792    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:06.794    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:06.794    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:06.794    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:06.794    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:06.794    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:06.794    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:06.794    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:06.794    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:06.794    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:06.795    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:06.795    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:06.796    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:06.796    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:06.796    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:07.654     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:07.663    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:07.986    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:07.986    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:08.137    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:08.159    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:08.175    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:08.175    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:08.177    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:08.179    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:08.179    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:08.181    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:08.182    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:08.182    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:08.182    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.184    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:08.184    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:08.184    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:08.184    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:08.184    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:08.184    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:08.185    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:08.185    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:08.185    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:08.185    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:08.185    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:08.185    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:08.185    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:08.185    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.185 ..indices  0:00:09.536    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.536    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.537    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.537    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.537    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.537    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.537    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.537    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.537    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.537    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.537    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:09.537    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.537    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.537    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.547    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.548    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.548    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.551    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.551    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.552    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/before_rr.fasta  0:00:09.555    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph.fastg  0:00:09.559    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/simplified_contigs.fasta  0:00:09.562    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/intermediate_contigs.fasta  0:00:09.568    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.568    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.568    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.568    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.568    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.568    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.700   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.930   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.703   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.704   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:11.713    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:11.852   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.857   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.860   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.863   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.863   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.863   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.878   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.883   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.901    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.902    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.902    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.902    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.902    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.902    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.902    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.902    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.902    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.902    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.903    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.904    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.904    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.904    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.904    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.904    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.904    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.904    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.904    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.904    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.904    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.907    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.908    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.908    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.908    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.908    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.908    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.908    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.908    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.908    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.908    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.908    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.908    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.908    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.908    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.909    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/before_rr.fasta  0:00:11.914    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph.fastg  0:00:11.917    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/5/working//K33/final_contigs.paths  0:00:11.925    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/5/working//K33/scaffolds.paths  0:00:11.940    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.943    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/5/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/5/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/5/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/5/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/5/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/5/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/5/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="44.59715151786804">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/8/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/f/a/1/dataset_fa11675c-1a86-4db5-ad57-94711c5be299.dat--pe1-2fastq.gz:/galaxy/server/database/objects/6/d/f/dataset_6df0ff81-8a2e-48f9-aa7d-89e564ac52a2.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/8/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/f/a/1/dataset_fa11675c-1a86-4db5-ad57-94711c5be299.dat']      right reads: ['/galaxy/server/database/objects/6/d/f/dataset_6df0ff81-8a2e-48f9-aa7d-89e564ac52a2.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/8/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/8/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/8/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/8/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/a/1/dataset_fa11675c-1a86-4db5-ad57-94711c5be299.dat  0:00:00.868     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/d/f/dataset_6df0ff81-8a2e-48f9-aa7d-89e564ac52a2.dat  0:00:01.709     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.718    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.003    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.003    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.155    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.175    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.192    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.194    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.198    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.200    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.210    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.210    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.210    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/a/1/dataset_fa11675c-1a86-4db5-ad57-94711c5be299.dat  0:00:02.225    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/d/f/dataset_6df0ff81-8a2e-48f9-aa7d-89e564ac52a2.dat  0:00:02.240    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.241    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.241    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.255    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.256    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.256    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.270    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.270    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.270    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.270    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/a/1/dataset_fa11675c-1a86-4db5-ad57-94711c5be299.dat and /galaxy/server/database/objects/6/d/f/dataset_6df0ff81-8a2e-48f9-aa7d-89e564ac52a2.dat  0:00:02.330    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.336    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.340    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.376    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.377    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.377    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/8/working/corrected/corrected.yaml  0:00:02.380    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/8/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/8/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/8/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.110     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.269   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.277     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.436   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.524     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.524     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.524     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.525     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.525     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.525     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.526     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.932     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.941    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.941    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.107    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.107    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.180    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.181    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.181    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.182    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.182    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.182    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.000     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.013    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.368    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.368    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.516    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.538    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.554    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.554    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.558    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.559    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Co..      : 346)   Closing short gaps  0:00:08.291    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.294    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.294    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.294    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.294    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.294    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.294    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.294    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.294    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.294    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.294    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.294    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.294    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.306    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.306    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.306    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.310    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.310    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.310    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/before_rr.fasta  0:00:08.314    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph.fastg  0:00:08.317    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/simplified_contigs.fasta  0:00:08.320    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/intermediate_contigs.fasta  0:00:08.326    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.326    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.326    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.326    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.326    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.326    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.452   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.671   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.440   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.440   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.450    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.584   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.590   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.593   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.598   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.598   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.598   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.612   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.617   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.634    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.634    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.634    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.634    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.635    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.635    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.635    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.635    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.635    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.635    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.635    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.635    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.635    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.635    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.636    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.636    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.636    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.636    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.636    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.636    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.636    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.636    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.636    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.637    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.637    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.637    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.637    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.637    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.637    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.637    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.637    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.637    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.637    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.637    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.637    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.638    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/before_rr.fasta  0:00:10.642    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph.fastg  0:00:10.646    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working//K33/final_contigs.paths  0:00:10.652    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working//K33/scaffolds.paths  0:00:10.664    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.666    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/8/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/8/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/8/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/8/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/8/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/8/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="54.251585483551025">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/11/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/9/e/a/dataset_9eae3e50-f08a-46a3-87d1-fbf2b96f7440.dat--pe1-2fastq:/galaxy/server/database/objects/b/4/a/dataset_b4a3937f-e9bf-40e1-9d6c-9f2d8c10a431.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/11/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/9/e/a/dataset_9eae3e50-f08a-46a3-87d1-fbf2b96f7440.dat']      right reads: ['/galaxy/server/database/objects/b/4/a/dataset_b4a3937f-e9bf-40e1-9d6c-9f2d8c10a431.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/11/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/e/a/dataset_9eae3e50-f08a-46a3-87d1-fbf2b96f7440.dat  0:00:00.820     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/4/a/dataset_b4a3937f-e9bf-40e1-9d6c-9f2d8c10a431.dat  0:00:01.612     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.623    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.899    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.900    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.042    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.064    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.084    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.086    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.089    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.090    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.097    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.097    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.097    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/e/a/dataset_9eae3e50-f08a-46a3-87d1-fbf2b96f7440.dat  0:00:02.113    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/4/a/dataset_b4a3937f-e9bf-40e1-9d6c-9f2d8c10a431.dat  0:00:02.129    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.130    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.130    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.145    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.146    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.146    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.155    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.156    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.156    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.156    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/9/e/a/dataset_9eae3e50-f08a-46a3-87d1-fbf2b96f7440.dat and /galaxy/server/database/objects/b/4/a/dataset_b4a3937f-e9bf-40e1-9d6c-9f2d8c10a431.dat  0:00:02.209    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.215    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.219    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.254    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.254    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.254    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml  0:00:02.257    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/11/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/11/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.268   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.275     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.432   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.515     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.515     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.515     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.516     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.516     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.516     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.516     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:00.940     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.949    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.950    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.135    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.135    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.204    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.205    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.205    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.205    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.205    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.205    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.041     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.055    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.406    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.407    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.551    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.570    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.587    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:02.587    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.589    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.593    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:02.593    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea.. short gaps  0:00:05.602    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.603    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.603    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.604    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.604    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.604    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.604    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.604    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.604    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.604    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:05.604    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.604    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.604    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.614    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.614    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.614    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.618    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.618    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:05.618    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:05.622    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:05.626    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/simplified_contigs.fasta  0:00:05.629    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/intermediate_contigs.fasta  0:00:05.635    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.635    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.635    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.635    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:05.635    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.635    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.763   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.980   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.744   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.744   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:07.757    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:07.892   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.897   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.900   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.906   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.906   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.906   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.919   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.925   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.943    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.944    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.944    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.944    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.944    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.944    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.944    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.944    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.944    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.944    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.944    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.944    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.944    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.945    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.945    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.945    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.946    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.946    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.946    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.946    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.946    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.946    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.946    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.946    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.946    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.946    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.946    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:07.949    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:07.954    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:07.957    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/final_contigs.paths  0:00:07.964    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/scaffolds.paths  0:00:07.976    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.978    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/11/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="42.58161544799805">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/14/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/7/c/f/dataset_7cfac024-bf4b-48d3-9948-70059de1e1a6.dat--pe1-2fastq:/galaxy/server/database/objects/b/3/6/dataset_b36a76d4-a66e-4715-9c47-02ca6d0a29e0.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/14/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/c/f/dataset_7cfac024-bf4b-48d3-9948-70059de1e1a6.dat']      right reads: ['/galaxy/server/database/objects/b/3/6/dataset_b36a76d4-a66e-4715-9c47-02ca6d0a29e0.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/14/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/c/f/dataset_7cfac024-bf4b-48d3-9948-70059de1e1a6.dat  0:00:00.826     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/3/6/dataset_b36a76d4-a66e-4715-9c47-02ca6d0a29e0.dat  0:00:01.634     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.646    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.936    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.937    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.089    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.121    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.141    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.143    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.146    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.147    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.156    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.156    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.156    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/c/f/dataset_7cfac024-bf4b-48d3-9948-70059de1e1a6.dat  0:00:02.178    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/3/6/dataset_b36a76d4-a66e-4715-9c47-02ca6d0a29e0.dat  0:00:02.200    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.200    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.200    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.211    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.212    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.212    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.220    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.221    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.221    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.221    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/c/f/dataset_7cfac024-bf4b-48d3-9948-70059de1e1a6.dat and /galaxy/server/database/objects/b/3/6/dataset_b36a76d4-a66e-4715-9c47-02ca6d0a29e0.dat  0:00:02.275    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.281    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.285    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.320    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.320    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.320    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml  0:00:02.324    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/14/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/14/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.269   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.276     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.435   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.515     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.515     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.515     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.516     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.516     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.517     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.517     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:00.944     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.953    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.953    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.127    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.127    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.201    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.201    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.201    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.202    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.202    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.202    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:02.023     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:02.034    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.349    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:02.349    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.502    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.524    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.543    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:02.543    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.547    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.548    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..osing short gaps  0:00:05.689    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.691    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.691    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.691    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.691    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.691    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.691    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.691    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.692    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.692    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.692    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.692    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:05.692    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.692    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.692    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.701    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.701    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.701    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.704    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.704    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:05.705    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:05.709    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:05.712    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/simplified_contigs.fasta  0:00:05.715    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/intermediate_contigs.fasta  0:00:05.722    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.722    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.722    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.722    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:05.722    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.722    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.846   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:06.081   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.857   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.858   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:07.867    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:08.006   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:08.010   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.016   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.022   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:08.022   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:08.022   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:08.035   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.039   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.057    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:08.057    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:08.057    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:08.057    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:08.057    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.057    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.057    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.057    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:08.057    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:08.057    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:08.057    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.058    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.058    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:08.059    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:08.059    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.059    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.059    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.059    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:08.059    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:08.059    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:08.059    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:08.059    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:08.059    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:08.060    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:08.060    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:08.060    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:08.060    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:08.060    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:08.060    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.060    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.061    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.061    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.061    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.061    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.061    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.061    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:08.061    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.061    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:08.062    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:08.067    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:08.071    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/final_contigs.paths  0:00:08.077    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/scaffolds.paths  0:00:08.090    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:08.092    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/14/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="46.575228214263916">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/17/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/7/9/9/dataset_7993bf1c-ce05-4295-9797-cf5449088fda.dat--pe1-2fastq:/galaxy/server/database/objects/a/0/0/dataset_a00b1df3-1b4b-490e-bf34-3dd8ff566d6f.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/17/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/9/9/dataset_7993bf1c-ce05-4295-9797-cf5449088fda.dat']      right reads: ['/galaxy/server/database/objects/a/0/0/dataset_a00b1df3-1b4b-490e-bf34-3dd8ff566d6f.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/9/9/dataset_7993bf1c-ce05-4295-9797-cf5449088fda.dat  0:00:00.845     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/0/0/dataset_a00b1df3-1b4b-490e-bf34-3dd8ff566d6f.dat  0:00:01.612     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.623    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.906    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.906    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.048    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.067    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.085    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.086    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.092    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.094    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.102    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.102    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.102    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/9/9/dataset_7993bf1c-ce05-4295-9797-cf5449088fda.dat  0:00:02.123    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/0/0/dataset_a00b1df3-1b4b-490e-bf34-3dd8ff566d6f.dat  0:00:02.142    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.143    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.143    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.160    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.160    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.160    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.160    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.160    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.160    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.160    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.161    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.161    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.161    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.162    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.170    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.170    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.170    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.170    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/9/9/dataset_7993bf1c-ce05-4295-9797-cf5449088fda.dat and /galaxy/server/database/objects/a/0/0/dataset_a00b1df3-1b4b-490e-bf34-3dd8ff566d6f.dat  0:00:02.228    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.235    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.239    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.275    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.276    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.276    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml  0:00:02.281    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.269   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.276     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.434   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.516     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.516     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.516     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.517     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.517     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.517     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.517     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.936     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.944    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.945    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.121    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.121    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.201    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.202    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.202    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.202    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.203    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.203    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.050     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.063    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.409    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.409    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.558    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.576    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.593    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.593    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.596    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.597    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:08.346    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.348    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.348    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.348    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.348    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.348    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.348    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.348    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.348    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.348    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.348    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.348    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.357    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.357    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.357    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.360    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.361    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.361    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:08.365    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:08.368    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta  0:00:08.371    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta  0:00:08.378    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.378    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.378    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.378    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.378    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.378    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.505   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.723   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.490   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.490   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.500    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.638   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.641   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.645   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.648   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.649   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.649   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.663   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.668   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.687    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.688    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.688    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.688    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.689    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.689    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.689    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.690    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.690    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.690    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.690    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.690    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.690    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.691    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.691    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.691    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.691    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.691    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.691    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.691    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.692    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:10.696    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:10.700    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths  0:00:10.707    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths  0:00:10.721    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.723    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/17/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="37.74175786972046">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "careful": false,  "kmer_choice|kmers": "33",  "libraries_0|files_0|file_type|fwd_reads": {   "id": "8a67a18e66ec8919",   "src": "hda"  },  "libraries_0|files_0|file_type|rev_reads": {   "id": "7294070f737834a0",   "src": "hda"  },  "libraries_0|lib_type": "paired_end",  "sc": false }, "job": {  "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi \u0026\u0026  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/f/8/c/dataset_f8c257d8-9d7b-40b0-8e64-5ca93b524569.dat --pe1-2 fastq:/galaxy/server/database/objects/4/2/f/dataset_42f3383a-a122-4f83-83f8-88a6905dd35a.dat \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/20/configs/tmphg3kimtj\u0027 \u003c contigs.fasta \u003e \u0027/galaxy/server/database/objects/8/a/a/dataset_8aace161-d7e4-4837-b20a-157661285c4a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/20/configs/tmphg3kimtj\u0027 \u003c scaffolds.fasta \u003e \u0027/galaxy/server/database/objects/8/f/b/dataset_8fb78fdb-ec29-4bfe-a7db-0c213ab62eb0.dat\u0027",  "command_version": null,  "create_time": "2023-09-18T18:36:05.792335",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-bm5jq",  "galaxy_version": "23.0",  "history_id": "51ad311d25040079",  "id": "8bbf6a6de5fb7674",  "inputs": {   "libraries_0|files_0|fwd_reads": {    "id": "8a67a18e66ec8919",    "src": "hda",    "uuid": "f8c257d8-9d7b-40b0-8e64-5ca93b524569"   },   "libraries_0|files_0|rev_reads": {    "id": "7294070f737834a0",    "src": "hda",    "uuid": "42f3383a-a122-4f83-83f8-88a6905dd35a"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_contig_stats": {    "id": "4aeeb3bf0c607ecf",    "src": "hda",    "uuid": "8aace161-d7e4-4837-b20a-157661285c4a"   },   "out_contigs": {    "id": "b22a143c1c0f034e",    "src": "hda",    "uuid": "470241a2-f9be-486c-921a-96ffa1fadd60"   },   "out_log": {    "id": "050be4641eb727e8",    "src": "hda",    "uuid": "022e74a6-5ae7-4c7e-8740-65066a8649d8"   },   "out_scaffold_stats": {    "id": "ddc23702a50c4058",    "src": "hda",    "uuid": "8fb78fdb-ec29-4bfe-a7db-0c213ab62eb0"   },   "out_scaffolds": {    "id": "c24c2217e795c959",    "src": "hda",    "uuid": "74e1944b-6cf4-4b68-a7e3-2f4069bbdbcd"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "careful": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contig_graph_out": "false",   "cov": "{\"__current_case__\": 0, \"state\": \"off\"}",   "dbkey": "\"?\"",   "iontorrent": "false",   "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}",   "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 40, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 41, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]",   "nanopore_reads": null,   "onlyassembler": "false",   "pacbio_reads": null,   "sanger_reads": null,   "sc": "false",   "scaffold_graph_out": "false",   "trusted_contigs": null,   "untrusted_contigs": null  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-18T18:36:25.177425",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 6, "time_seconds": 37.74175786972046, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="46.23453187942505">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/23/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/d/4/a/dataset_d4a93c45-e1bc-4f5b-9358-ba234fcb9128.dat--pe1-2fastq.gz:/galaxy/server/database/objects/f/4/4/dataset_f44dcdaf-221f-4e58-9688-3346855e64aa.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/23/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/d/4/a/dataset_d4a93c45-e1bc-4f5b-9358-ba234fcb9128.dat']      right reads: ['/galaxy/server/database/objects/f/4/4/dataset_f44dcdaf-221f-4e58-9688-3346855e64aa.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/4/a/dataset_d4a93c45-e1bc-4f5b-9358-ba234fcb9128.dat  0:00:00.816     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/4/4/dataset_f44dcdaf-221f-4e58-9688-3346855e64aa.dat  0:00:01.554     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.564    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.846    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.846    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.996    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.017    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.033    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.035    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.040    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.042    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.050    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.050    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.050    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/4/a/dataset_d4a93c45-e1bc-4f5b-9358-ba234fcb9128.dat  0:00:02.068    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/4/4/dataset_f44dcdaf-221f-4e58-9688-3346855e64aa.dat  0:00:02.087    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.087    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.087    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.101    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.103    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.103    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.117    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.117    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.117    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.117    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/4/a/dataset_d4a93c45-e1bc-4f5b-9358-ba234fcb9128.dat and /galaxy/server/database/objects/f/4/4/dataset_f44dcdaf-221f-4e58-9688-3346855e64aa.dat  0:00:02.176    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.182    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.185    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.221    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.221    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.221    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml  0:00:02.225    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.274   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.281     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.439   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.521     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.521     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.522     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.522     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.523     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.523     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.523     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.925     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.933    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.934    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.091    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.092    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.167    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.167    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.167    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.168    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.168    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.168    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.944     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.958    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.281    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.281    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.418    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.437    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.455    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.456    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.461    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.462    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE..sing short gaps  0:00:08.081    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.082    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.082    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.083    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.083    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.083    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.083    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.083    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.083    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.083    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.083    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.083    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.083    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.092    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.092    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.092    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.096    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.096    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.097    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:08.101    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:08.104    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/simplified_contigs.fasta  0:00:08.107    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/intermediate_contigs.fasta  0:00:08.113    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.113    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.113    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.113    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.113    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.113    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.237   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.459   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.232   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.232   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.242    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.378   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.382   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.389   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.393   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.393   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.393   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.407   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.412   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.429    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.429    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.429    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.429    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.430    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.430    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.430    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.430    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.430    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.430    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.430    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.431    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.431    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.431    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.431    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.431    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.431    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.431    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.431    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.432    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.432    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.432    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.433    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.433    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.433    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.433    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.433    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.433    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.433    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.433    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.433    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.433    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.433    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.433    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.434    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.434    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.434    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.434    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.434    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.434    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.434    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.434    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.435    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.435    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.435    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.435    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.435    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.435    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.435    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.435    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.435    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.435    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.436    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:10.440    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:10.444    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/final_contigs.paths  0:00:10.450    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/scaffolds.paths  0:00:10.462    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.463    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="48.066603660583496">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "30e53157930c1302",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/9/c/7/dataset_9c7cc33e-dc50-402e-9036-f6adf7a4acab.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/0/6/1/dataset_061d2e2c-8351-4067-a2de-cffa8a906dc6.dat\u0027",  "command_version": "",  "create_time": "2023-09-18T18:43:40.349821",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rbwt2",  "galaxy_version": "23.0",  "history_id": "51ad311d25040079",  "id": "a5179a39372b0ef3",  "inputs": {   "fastq_in": {    "id": "30e53157930c1302",    "src": "hda",    "uuid": "9c7cc33e-dc50-402e-9036-f6adf7a4acab"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695062636.0000000",    "title": "Job Start Time",    "value": "2023-09-18 18:43:56"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695062636.0000000",    "title": "Job End Time",    "value": "2023-09-18 18:43:56"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "bd5c0f3dd35abe4a",    "src": "hda",    "uuid": "63734828-2f62-44a0-ac53-cdb7e007c28e"   },   "fastq_out": {    "id": "14ffc012d32cfc00",    "src": "hda",    "uuid": "061d2e2c-8351-4067-a2de-cffa8a906dc6"   },   "log_file": {    "id": "295ca0d4e5a5174f",    "src": "hda",    "uuid": "3d7c7140-39a8-4c66-b824-3221af504e76"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 81, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2023-09-18T18:44:10.613905",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpwe1lgzr0trimmomatic_se_out1.err v. /tmp/tmpe7ycs8f7trimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 48.066603660583496, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="27.64948558807373">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="29.41590690612793">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="34.30113983154297">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="33.20546841621399">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/77/configs/tmpb3cllhxn:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="33.34340500831604">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="32.53188228607178">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="33.38763117790222">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="16.989744424819946">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 16.989744424819946, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="28.174179315567017">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="8.812507152557373">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 8.812507152557373, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="32.89610528945923">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="28.996223211288452">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="37.60546064376831">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>