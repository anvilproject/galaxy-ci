{
    "model_class": "Job",
    "id": "e8ec05f27e2689af",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-12-29T07:26:11.786911",
    "create_time": "2023-12-29T07:25:53.691108",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "fea0279f5e28f9ac",
    "external_id": "gxy-gltgh",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/4/b/6/dataset_4b6cbc59-b237-49d8-93e6-e194b78c646b.dat' && cp '/galaxy/server/database/objects/e/c/1/dataset_ec196354-2757-42f5-b8e3-3d0da2c4cef5.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/e/5/4/dataset_e54a8b49-1380-49f0-a5bd-ac036a90ef82.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/1/e/a/dataset_1ea706d9-65e4-4d3a-900e-3681dfc62182.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 332, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 333, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 331, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "9e6d3ee7d87452e4",
            "src": "hda",
            "uuid": "1ea706d9-65e4-4d3a-900e-3681dfc62182"
        },
        "pairstraight|file2": {
            "id": "83d6b6f69fb8dd0f",
            "src": "hda",
            "uuid": "e54a8b49-1380-49f0-a5bd-ac036a90ef82"
        },
        "pairstraight|file1": {
            "id": "d3ef470d72d558ad",
            "src": "hda",
            "uuid": "ec196354-2757-42f5-b8e3-3d0da2c4cef5"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "c5c772b99ca49e1a",
            "src": "hda",
            "uuid": "4b6cbc59-b237-49d8-93e6-e194b78c646b"
        }
    },
    "outputs": {
        "quants_mat_rows_txt": {
            "id": "81701facf4e10352",
            "src": "hda",
            "uuid": "3be42c0f-aae7-42f4-aff1-47bbb148ff57"
        },
        "raw_cb_frequency_txt": {
            "id": "c8d0b7e25153d5af",
            "src": "hda",
            "uuid": "d9d91f44-f452-4195-9e59-151413c74671"
        },
        "flenDist_txt": {
            "id": "9073d9965d3737bf",
            "src": "hda",
            "uuid": "0673bd6f-9b9d-40a0-90d3-a99766f56dbe"
        },
        "whitelist_txt": {
            "id": "5dd7dc521e53cab1",
            "src": "hda",
            "uuid": "0e4cf3d9-573f-42d8-83c6-9fbf6a288685"
        },
        "featureDump_txt": {
            "id": "881ef09135140853",
            "src": "hda",
            "uuid": "551365c2-992b-44c4-9f34-1a3f04d94f6e"
        },
        "quants_tier_mat": {
            "id": "50eefef4086dd29a",
            "src": "hda",
            "uuid": "aa468fdc-914b-4743-8f8d-9fc2aa170fbe"
        },
        "observed_bias": {
            "id": "10ec77b266d20950",
            "src": "hda",
            "uuid": "a312b1de-f5f4-402d-bfbb-01bdaaab032f"
        },
        "expected_bias": {
            "id": "a8259808f96cd22a",
            "src": "hda",
            "uuid": "f2848d13-fbee-4aa6-9b0e-816e7f5e31c1"
        },
        "quants_mat_cols_txt": {
            "id": "13841889523521e7",
            "src": "hda",
            "uuid": "269ada22-3676-4265-922d-bd8f11631227"
        },
        "observed_bias_3p": {
            "id": "9fd8b853fbd92412",
            "src": "hda",
            "uuid": "e372f7d8-28c2-4c11-b105-f772f88ad6ce"
        },
        "quants_mat_mtx": {
            "id": "162eae17f43dcefd",
            "src": "hda",
            "uuid": "4f202985-637c-4270-b946-a7da018a85f6"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
