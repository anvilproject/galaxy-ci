{
    "model_class": "Job",
    "id": "673de24144b909ac",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-03-08T07:14:09.837074",
    "create_time": "2024-03-08T07:13:53.907312",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "24e1917688593696",
    "external_id": "gxy-vbql4",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/5/9/5/dataset_595fbe96-1140-4e58-b297-1dc599438340.dat' && cp '/galaxy/server/database/objects/5/d/8/dataset_5d81aef6-c89f-4391-9751-176d4194807c.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/3/6/2/dataset_3625e201-7955-4aec-b02d-2dfd0faeada8.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/1/2/7/dataset_127bdb77-30af-46bb-968c-c2dd472b4ab3.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 28: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 344, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 342, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "c8e7b1ebd6610fcb",
            "src": "hda",
            "uuid": "127bdb77-30af-46bb-968c-c2dd472b4ab3"
        },
        "pairstraight|file2": {
            "id": "0f28495937cc61f0",
            "src": "hda",
            "uuid": "3625e201-7955-4aec-b02d-2dfd0faeada8"
        },
        "pairstraight|file1": {
            "id": "028dae61f92f34b9",
            "src": "hda",
            "uuid": "5d81aef6-c89f-4391-9751-176d4194807c"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "9bd1f3f1955b3a18",
            "src": "hda",
            "uuid": "595fbe96-1140-4e58-b297-1dc599438340"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "7f8565e0e91b4232",
            "src": "hda",
            "uuid": "a3a8098a-cf76-4d25-8699-8f99581442ff"
        },
        "observed_bias_3p": {
            "id": "1577b7153a3fc100",
            "src": "hda",
            "uuid": "75311ea6-084a-48ea-902d-767823f0b5c5"
        },
        "observed_bias": {
            "id": "7507d11f1a56347d",
            "src": "hda",
            "uuid": "7c65eb77-9da4-46a5-815d-33ff5309fb81"
        },
        "expected_bias": {
            "id": "5be2e311438aa416",
            "src": "hda",
            "uuid": "d9665a6a-81c8-410b-aa62-aac4b3d57b26"
        },
        "whitelist_txt": {
            "id": "7fa2af574cf7db8e",
            "src": "hda",
            "uuid": "35ade6d9-e21c-46c3-9a3b-0dc82850d763"
        },
        "featureDump_txt": {
            "id": "2250a28a0e31a569",
            "src": "hda",
            "uuid": "4f0107bf-097e-4567-b4b4-79c3d7a6b8d4"
        },
        "quants_tier_mat": {
            "id": "460e1ba94c311520",
            "src": "hda",
            "uuid": "a3ef6b5e-944c-4e28-bd0d-fd9afe080e66"
        },
        "quants_mat_rows_txt": {
            "id": "a1224d782660d89f",
            "src": "hda",
            "uuid": "6f19ba72-acbd-4d93-9c80-0f6c10e09841"
        },
        "quants_mat_cols_txt": {
            "id": "d742e6d2cac4bdb4",
            "src": "hda",
            "uuid": "dd3965c3-82a1-4765-8e04-3eb75c83f072"
        },
        "raw_cb_frequency_txt": {
            "id": "e657314eecbcac40",
            "src": "hda",
            "uuid": "83fdd67c-ced4-436a-b29f-731e45246bcf"
        },
        "quants_mat_mtx": {
            "id": "659c5ffbc3d3feae",
            "src": "hda",
            "uuid": "6c7f32c7-a49a-4455-ab73-f81bab874121"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
