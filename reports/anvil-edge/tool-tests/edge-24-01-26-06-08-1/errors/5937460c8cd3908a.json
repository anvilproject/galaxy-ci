{
    "model_class": "Job",
    "id": "5937460c8cd3908a",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-01-26T07:15:21.673977",
    "create_time": "2024-01-26T07:14:48.557647",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "818d686125206558",
    "external_id": "gxy-lsbpz",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/e/f/2/dataset_ef2dfb0c-80a5-4230-a760-7c3b951bbb83.dat' && cp '/galaxy/server/database/objects/d/d/d/dataset_dddb388d-d10f-4b4f-82c4-d2210002b9e4.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/8/6/9/dataset_869ea6cd-1b37-488f-b215-e44bfc94f596.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/f/2/d/dataset_f2dc69bc-1984-4c02-8dc0-80246d53e9a9.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 1: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 314, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 315, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 313, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "e1dab8b8ae390087",
            "src": "hda",
            "uuid": "ef2dfb0c-80a5-4230-a760-7c3b951bbb83"
        },
        "pairstraight|file1": {
            "id": "f70502e80a93a184",
            "src": "hda",
            "uuid": "dddb388d-d10f-4b4f-82c4-d2210002b9e4"
        },
        "pairstraight|file2": {
            "id": "d8fdfab323694d9b",
            "src": "hda",
            "uuid": "869ea6cd-1b37-488f-b215-e44bfc94f596"
        },
        "tgmap": {
            "id": "18746c9cf6e9e9f7",
            "src": "hda",
            "uuid": "f2dc69bc-1984-4c02-8dc0-80246d53e9a9"
        }
    },
    "outputs": {
        "observed_bias_3p": {
            "id": "0d1bdcf6188fd6bf",
            "src": "hda",
            "uuid": "968bacf2-28aa-4b3a-8d33-ed318f58dbeb"
        },
        "flenDist_txt": {
            "id": "bafa215e01387461",
            "src": "hda",
            "uuid": "bc24b177-98da-4bf0-9609-804e4a3243c3"
        },
        "whitelist_txt": {
            "id": "a140f50372d1524c",
            "src": "hda",
            "uuid": "a23bae68-6dab-41c9-bffe-fa4d6f08c23a"
        },
        "quants_mat_rows_txt": {
            "id": "83ed29a5839ab563",
            "src": "hda",
            "uuid": "8dfa58bf-4b01-44ce-9d36-431b6b2364ca"
        },
        "quants_tier_mat": {
            "id": "a505c16abc275c44",
            "src": "hda",
            "uuid": "2994988f-3ca8-47b1-8779-60537e83e3bd"
        },
        "observed_bias": {
            "id": "e15bde2354b5a20b",
            "src": "hda",
            "uuid": "e24faf17-7d96-46db-bbf6-d50c12fddaa0"
        },
        "expected_bias": {
            "id": "a9b6461351c536e2",
            "src": "hda",
            "uuid": "162b6b20-2a2f-4847-b182-7204b89f0fdc"
        },
        "raw_cb_frequency_txt": {
            "id": "cc4a91cdcd212d48",
            "src": "hda",
            "uuid": "78a3b4f3-20ab-4bd5-b419-92df01d32789"
        },
        "quants_mat_cols_txt": {
            "id": "69d151e22b372c0d",
            "src": "hda",
            "uuid": "b8673e01-83f0-4662-ae84-56fc440401a6"
        },
        "quants_mat_mtx": {
            "id": "16b1d162f95547b6",
            "src": "hda",
            "uuid": "ef381e1c-b8bf-42c1-b133-22c9600e9f13"
        },
        "featureDump_txt": {
            "id": "b09aed3961245b8d",
            "src": "hda",
            "uuid": "d33ca44a-cef5-4290-a396-0258cb2bcafe"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
