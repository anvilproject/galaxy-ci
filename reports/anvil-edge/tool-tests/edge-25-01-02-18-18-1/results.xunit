<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="81"
           errors="13"
           failures="22"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="52.48025417327881">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "e56e21c07362ed9d",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/89/configs/tmprc2f6oe4\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/89/configs/tmprc2f6oe4\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T18:56:01.753889",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lv876",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "8f555ecc5bf4f1a2",  "inputs": {   "hd5_format|in|input": {    "id": "e56e21c07362ed9d",    "src": "hda",    "uuid": "eb005e4c-5100-41b8-ae62-5735ae981e25"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844179.0000000",    "title": "Job End Time",    "value": "2025-01-02 18:56:19"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844178.0000000",    "title": "Job Start Time",    "value": "2025-01-02 18:56:18"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "74b5206fdf0f874c",    "src": "hda",    "uuid": "397bd85d-3a33-4d88-96f1-7f44f55d7e1a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/e/b/0/dataset_eb005e4c-5100-41b8-ae62-5735ae981e25.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/e/b/0/dataset_eb005e4c-5100-41b8-ae62-5735ae981e25.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T18:56:34.893103",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 52.48025417327881, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/e/b/0/dataset_eb005e4c-5100-41b8-ae62-5735ae981e25.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="33.664358615875244">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "1146e81932167cbf",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/105/configs/tmp3f49ltzo\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/105/configs/tmp3f49ltzo\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:00:08.003077",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-88tbk",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "66afe798dcbeec8c",  "inputs": {   "hd5_format|in|input": {    "id": "1146e81932167cbf",    "src": "hda",    "uuid": "e5e75c12-3940-4282-8a20-862f1cbf7192"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844410.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:00:10"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844409.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:00:09"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "567cfb60f5c9eead",    "src": "hda",    "uuid": "a926c90b-5943-4bd9-a319-fd238b65966a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/e/5/e/dataset_e5e75c12-3940-4282-8a20-862f1cbf7192.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/e/5/e/dataset_e5e75c12-3940-4282-8a20-862f1cbf7192.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T19:00:21.709333",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 33.664358615875244, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/e/5/e/dataset_e5e75c12-3940-4282-8a20-862f1cbf7192.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="32.55611252784729">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "b8dab5311944822b",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmp19an2n4r\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmp19an2n4r\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T18:56:54.415539",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-b98jb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "963686fda3004407",  "inputs": {   "hd5_format|in|input": {    "id": "b8dab5311944822b",    "src": "hda",    "uuid": "e4f74bd9-d7a1-48db-a030-4a51b0bbaa7c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844217.0000000",    "title": "Job End Time",    "value": "2025-01-02 18:56:57"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844216.0000000",    "title": "Job Start Time",    "value": "2025-01-02 18:56:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "8185b86e0dcb8d94",    "src": "hda",    "uuid": "a77189c7-5b3f-4184-9b7a-91e071a9ab11"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 131, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/e/4/f/dataset_e4f74bd9-d7a1-48db-a030-4a51b0bbaa7c.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/e/4/f/dataset_e4f74bd9-d7a1-48db-a030-4a51b0bbaa7c.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T18:57:07.963187",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmp_ucrngfwimport.csv.h5ad v. /tmp/tmp8y20tmzhimport.csv.h5ad )\nFiles /tmp/tmp_ucrngfwimport.csv.h5ad=29512b but /tmp/tmp8y20tmzhimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 32.55611252784729, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/e/4/f/dataset_e4f74bd9-d7a1-48db-a030-4a51b0bbaa7c.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="39.26305913925171">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "1d52b0b209cdc8e4",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmpgke3ue0s\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmpgke3ue0s\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:00:41.465156",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6q227",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "a1882f9dfaeb6c03",  "inputs": {   "hd5_format|in|input": {    "id": "1d52b0b209cdc8e4",    "src": "hda",    "uuid": "203c0007-a8f6-4880-bfe3-9731e13e1b53"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844444.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:00:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844443.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:00:43"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "d3d4d93bdae91aa5",    "src": "hda",    "uuid": "18a9cec9-e2df-4f52-89a6-6633280e2ebe"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/2/0/3/dataset_203c0007-a8f6-4880-bfe3-9731e13e1b53.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/2/0/3/dataset_203c0007-a8f6-4880-bfe3-9731e13e1b53.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T19:00:56.156033",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmp4t0j7pprimport.csv.h5ad v. /tmp/tmp3jfrnsr4import.csv.h5ad )\nFiles /tmp/tmp4t0j7pprimport.csv.h5ad=29512b but /tmp/tmp3jfrnsr4import.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 39.26305913925171, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/2/0/3/dataset_203c0007-a8f6-4880-bfe3-9731e13e1b53.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="33.87500858306885">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "acedd398ec609578",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmpd05vtdd4\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmpd05vtdd4\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T18:57:27.550477",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lvd6d",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "764849de74aa1e4d",  "inputs": {   "hd5_format|in|input": {    "id": "acedd398ec609578",    "src": "hda",    "uuid": "c489afb0-0bb1-4ebc-bba8-c2dd767db3b3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844250.0000000",    "title": "Job End Time",    "value": "2025-01-02 18:57:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844249.0000000",    "title": "Job Start Time",    "value": "2025-01-02 18:57:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "4472d443344bbabe",    "src": "hda",    "uuid": "d3816e92-69c5-4ac6-8a32-0ebcb68fcdeb"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 133, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/c/4/8/dataset_c489afb0-0bb1-4ebc-bba8-c2dd767db3b3.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/c/4/8/dataset_c489afb0-0bb1-4ebc-bba8-c2dd767db3b3.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T18:57:41.591251",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 33.87500858306885, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/c/4/8/dataset_c489afb0-0bb1-4ebc-bba8-c2dd767db3b3.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="33.905417680740356">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "808d1baab1045f97",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp729r3zlt\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp729r3zlt\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:01:21.049009",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-hrqpq",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "7ea6a1b5bfd9d3aa",  "inputs": {   "hd5_format|in|input": {    "id": "808d1baab1045f97",    "src": "hda",    "uuid": "6e2ac783-ee75-481f-ac5c-b73d35d56d2b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844484.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:01:24"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844482.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:01:22"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "d065e1fa03cdc26a",    "src": "hda",    "uuid": "86789769-904f-41a7-be46-66804e302234"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/e/2/dataset_6e2ac783-ee75-481f-ac5c-b73d35d56d2b.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/e/2/dataset_6e2ac783-ee75-481f-ac5c-b73d35d56d2b.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T19:01:35.357861",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 33.905417680740356, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/6/e/2/dataset_6e2ac783-ee75-481f-ac5c-b73d35d56d2b.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="34.669788122177124">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "73195b4d7e733bf7",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/95/configs/tmpzu99_c9c\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/95/configs/tmpzu99_c9c\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T18:58:02.486588",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vghb7",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "5b18e4d6e7ea5be1",  "inputs": {   "hd5_format|in|matrix": {    "id": "73195b4d7e733bf7",    "src": "hda",    "uuid": "34b2f39b-d916-4b49-bb57-048378f3607d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844285.0000000",    "title": "Job End Time",    "value": "2025-01-02 18:58:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844283.0000000",    "title": "Job Start Time",    "value": "2025-01-02 18:58:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "946da8f7f40266d9",    "src": "hda",    "uuid": "0210068e-8254-4ba6-ae08-608d65df6230"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/3/4/b/dataset_34b2f39b-d916-4b49-bb57-048378f3607d.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/3/4/b/dataset_34b2f39b-d916-4b49-bb57-048378f3607d.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T18:58:16.599513",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 34.669788122177124, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/3/4/b/dataset_34b2f39b-d916-4b49-bb57-048378f3607d.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="33.247525453567505">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "a56830cd3cc2b423",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmpu6k32on5\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmpu6k32on5\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:01:54.529000",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-cgwk9",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "49180fedabd06c7f",  "inputs": {   "hd5_format|in|matrix": {    "id": "a56830cd3cc2b423",    "src": "hda",    "uuid": "31f7ea1d-8886-4be8-ad79-9ba71a71bb97"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844518.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:01:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844516.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:01:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "a047b126020cbd8b",    "src": "hda",    "uuid": "6abb7aac-33b7-4899-8c88-02cbf0293e6c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/3/1/f/dataset_31f7ea1d-8886-4be8-ad79-9ba71a71bb97.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/3/1/f/dataset_31f7ea1d-8886-4be8-ad79-9ba71a71bb97.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T19:02:08.469613",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 33.247525453567505, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/3/1/f/dataset_31f7ea1d-8886-4be8-ad79-9ba71a71bb97.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="32.13079643249512">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "0463b32d66c5414f",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/a/e/0/dataset_ae067cf0-a1df-4faa-bcc1-3e72c132c967.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/97/configs/tmpy831skth\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/97/configs/tmpy831skth\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T18:58:35.926751",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p64ct",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "7b79f6dbafe77b31",  "inputs": {   "hd5_format|in|input": {    "id": "0463b32d66c5414f",    "src": "hda",    "uuid": "ae067cf0-a1df-4faa-bcc1-3e72c132c967"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844318.0000000",    "title": "Job End Time",    "value": "2025-01-02 18:58:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844317.0000000",    "title": "Job Start Time",    "value": "2025-01-02 18:58:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "8f8cd75b516be63e",    "src": "hda",    "uuid": "3f89dbae-59dd-4147-9d2c-7cd6c98b9a78"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 137, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T18:58:48.995905",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 32.13079643249512, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="34.08067464828491">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "d0138327770dfd49",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/f/d/7/dataset_fd759779-40de-495f-965f-0d9df5eb7885.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmpxnnj4eku\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmpxnnj4eku\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:02:28.309293",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-f4zcz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "7c33f1573b62c92e",  "inputs": {   "hd5_format|in|input": {    "id": "d0138327770dfd49",    "src": "hda",    "uuid": "fd759779-40de-495f-965f-0d9df5eb7885"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735844552.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:02:32"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735844550.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:02:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "020aac4737d9479f",    "src": "hda",    "uuid": "77757d11-3dfa-4bd3-aebb-f3ff9efd6fe0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 153, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-02T19:02:43.046435",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 34.08067464828491, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="22.69029998779297">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 22.69029998779297, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="31.725144624710083">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 31.725144624710083, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="34.96254587173462">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/d/c/b/dataset_dcb8c478-bb1b-4971-969e-7fe6a6ab7c89.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="37.294211626052856">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/1/7/1/dataset_1718dec9-79d1-4d6c-a104-19a98713f2b2.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="42.24541401863098">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="64.69074630737305">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="57.20708513259888">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/objects/b/8/6/dataset_b86e5a97-825e-434a-b597-311266c76fdf.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="32.8391535282135">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="39.256874322891235">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="44.11992526054382">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="10.104187488555908">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 10.104187488555908, "tool_id": "collection_element_identifiers", "tool_version": "0.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="85.15120220184326">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="44.16586375236511">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "28018cdbbb23011f",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/c/5/b/dataset_c5bebe22-6de2-4610-be1a-bde58144c4dc.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/1/0/6/dataset_106f65ee-efb3-4a4d-88d2-0f2617881510.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2025-01-02T18:37:28.492031",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8tjrt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "28018cdbbb23011f",  "inputs": {   "corData": {    "id": "28018cdbbb23011f",    "src": "hda",    "uuid": "c5bebe22-6de2-4610-be1a-bde58144c4dc"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735843053.0000000",    "title": "Job End Time",    "value": "2025-01-02 18:37:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735843050.0000000",    "title": "Job Start Time",    "value": "2025-01-02 18:37:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "0ed0b962af68366f",    "src": "hda",    "uuid": "106f65ee-efb3-4a4d-88d2-0f2617881510"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-02T18:37:45.574987",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpqsro1wzvplotCorrelation_result2.png v. /tmp/tmp50t9qkifplotCorrelation_result2.png )\nFiles /tmp/tmpqsro1wzvplotCorrelation_result2.png=11943b but /tmp/tmp50t9qkifplotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 44.16586375236511, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="11.890192985534668">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.890192985534668, "tool_id": "flash", "tool_version": "1.2.11.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="46.57368755340576">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="37.78681921958923">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/1/8/5/dataset_185c30c8-48df-4897-9ab3-c4bfdd34aa47.dat[FLASH]     /galaxy/server/database/objects/0/5/d/dataset_05dde792-f9f4-43ea-831d-bfd018664396.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.021 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="38.278961181640625">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="38.471808195114136">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/8/0/1/dataset_801a624b-2cd9-443c-a52c-59dd04c2e667.dat[FLASH]     /galaxy/server/database/objects/0/c/9/dataset_0c9380d4-c011-4b5a-a70e-4112c809e20f.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.042 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="38.25630187988281">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "reads": {   "id": "b88694c965b9c381",   "src": "hda"  },  "reference_source|ref": {   "id": "1372b5161cd21195",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/e/a/b/dataset_eab40110-a8c2-4ca9-afe4-86e9d197492b.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/3/3/1/dataset_3315ada1-7006-42e4-98f8-9225bc3a0919.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/1/c/d/metadata_1cde716d-6904-4c2a-92b2-40ce96d13776.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-02T19:15:15.872454",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-9bcn6",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "d0138327770dfd49",  "inputs": {   "reads": {    "id": "b88694c965b9c381",    "src": "hda",    "uuid": "3315ada1-7006-42e4-98f8-9225bc3a0919"   },   "reference_source|ref": {    "id": "1372b5161cd21195",    "src": "hda",    "uuid": "eab40110-a8c2-4ca9-afe4-86e9d197492b"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "f2e7612c1b21aaa5",    "src": "hda",    "uuid": "5a3977c0-f4e8-42a8-84b0-5063fd7d7f0c"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 212, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "INFO [2025-01-02 19:15:24,197]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-02 19:15:24,465]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-02 19:15:27,873]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/153/tmp/lofreq2_call_parallelqim_2zf7/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-02 19:15:24,197]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-02 19:15:24,465]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-02 19:15:27,873]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/153/tmp/lofreq2_call_parallelqim_2zf7/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-01-02T19:15:32.640806",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 38.25630187988281, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-02 19:15:24,197]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2025-01-02 19:15:24,465]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-01-02 19:15:27,873]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/153/tmp/lofreq2_call_parallelqim_2zf7/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="38.01864767074585">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "f58aa87146d887a4",   "src": "hda"  },  "reference_source|ref": {   "id": "df47b89d7755a955",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/f/e/dataset_6fe20267-e291-477c-b810-bd245ae7fb11.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/0/f/e/dataset_0fe2176c-20c8-4bd9-b19b-6c7ad87a9a90.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/1/1/7/metadata_117a3566-61c8-4b42-9e29-d21d2657a80a.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:15:54.435036",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9dngb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "7ccde0106736aaad",  "inputs": {   "reads": {    "id": "f58aa87146d887a4",    "src": "hda",    "uuid": "0fe2176c-20c8-4bd9-b19b-6c7ad87a9a90"   },   "reference_source|ref": {    "id": "df47b89d7755a955",    "src": "hda",    "uuid": "6fe20267-e291-477c-b810-bd245ae7fb11"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735845360.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:16:00"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735845356.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:15:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "bed2b18a3e4aceb5",    "src": "hda",    "uuid": "1c65ab61-7099-4f41-8718-d05f3b2f48d4"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 215, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-01-02 19:15:56,633]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-02 19:15:56,769]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-02 19:15:59,899]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-02 19:15:56,633]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-02 19:15:56,769]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-02 19:15:59,899]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-01-02T19:16:10.586513",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpmfclxuaecall-out1.vcf v. /tmp/tmpzuo9rdvtcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250102\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/concat.vcf.gz /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/0.vcf.gz /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/1.vcf.gz /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/2.vcf.gz /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/3.vcf.gz /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/4.vcf.gz; Date=Thu Jan  2 19:15:59 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 38.01864767074585, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-02 19:15:56,633]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-01-02 19:15:56,769]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-01-02 19:15:59,899]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/156/tmp/lofreq2_call_parallelx0wqx8j3/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="12.627664566040039">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 12.627664566040039, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="38.667171478271484">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "1b09f2cb3d8ba838",   "src": "hda"  },  "reference_source|ref": {   "id": "6fae0ac2ce2428e4",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/8/2/b/dataset_82baade9-0c27-4874-a1b8-27bc16446b7c.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/4/f/0/dataset_4f09ff58-410c-4259-9d5c-1f6bffba2d8e.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/9/2/a/metadata_92ac2255-ac04-4a0a-b052-68b83a355607.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:16:45.963806",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-g2bff",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "7a9ed6e5d037ae80",  "inputs": {   "reads": {    "id": "1b09f2cb3d8ba838",    "src": "hda",    "uuid": "4f09ff58-410c-4259-9d5c-1f6bffba2d8e"   },   "reference_source|ref": {    "id": "6fae0ac2ce2428e4",    "src": "hda",    "uuid": "82baade9-0c27-4874-a1b8-27bc16446b7c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735845410.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:16:50"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735845407.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:16:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "0d4f62005fcc110f",    "src": "hda",    "uuid": "6dbf6222-5a25-49f9-857b-d6f2df3533f2"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 221, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-01-02 19:16:48,041]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-01-02 19:16:48,066]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-02 19:16:50,586]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-02 19:16:48,041]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-01-02 19:16:48,066]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-02 19:16:50,586]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-01-02T19:17:02.235874",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpcgacoljvcall-out2.vcf v. /tmp/tmp_i43cg7bcall-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250102\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallelsjxcxuv_/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallelsjxcxuv_/concat.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallelsjxcxuv_/0.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallelsjxcxuv_/1.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallelsjxcxuv_/2.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallelsjxcxuv_/3.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallelsjxcxuv_/4.vcf.gz; Date=Thu Jan  2 19:16:50 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 38.667171478271484, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-02 19:16:48,041]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-01-02 19:16:48,066]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-01-02 19:16:50,586]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="20.157973766326904">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 20.157973766326904, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="70.6623854637146">
        
            
            <system-out><![CDATA[
            [18:43:49 - DataStre] Loaded sample register.[18:43:49 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:43:49 - DataStre] Loaded sample register.[18:43:49 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:43:49 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:43:49 - Variants] Processing NC_045512.2:0-.[18:43:49 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:43:52 - Annotate] Getting chrom coordinates[18:43:52 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:43:52 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="37.05164885520935">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "ambig_ref": true,  "output_annotated|in_bam": {   "id": "5dda896811829169",   "src": "hda"  },  "output_annotated|output_annotated_select": "true",  "output_log_bool": true,  "pool|input": {   "id": "f0eff0d01b563d19",   "src": "hda"  },  "pool|pool_mode": "No",  "reference_source|ref_file": {   "id": "5e8ab6e8ed9841bb",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "gunzip -c \u0027/galaxy/server/database/objects/f/b/1/dataset_fb120254-33dd-4eb7-b011-febe7b4a5e17.dat\u0027 \u003e reference.fa \u0026\u0026    medaka variant --debug  --ambig_ref  reference.fa \u0027/galaxy/server/database/objects/b/f/d/dataset_bfd8275e-3c34-42e2-805e-5edb7c1ebd48.dat\u0027 raw.vcf 2\u003e\u00261 | tee \u0027/galaxy/server/database/objects/7/1/e/dataset_71e38474-9f0e-41c2-801d-471a4b3f7aa8.dat\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/2/d/e/dataset_2de6b7d4-34e5-472f-9d0b-033f3e8f2457.dat\u0027 in.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/6/e/c/metadata_6ecf9ba5-ee74-4e21-9119-294aa5782159.dat\u0027 in.bai \u0026\u0026 medaka tools annotate --dpsp --pad 25 raw.vcf reference.fa in.bam tmp.vcf \u0026\u0026 python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/eb746fa6f514/medaka_variant/convert_VCF_info_fields.py\u0027 tmp.vcf \u0027/galaxy/server/database/objects/6/3/2/dataset_632895e0-801d-41ac-850b-4372860c7775.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-02T18:44:37.273325",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-x4cvn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "0baa3952d9e1f9be",  "inputs": {   "output_annotated|in_bam": {    "id": "5dda896811829169",    "src": "hda",    "uuid": "2de6b7d4-34e5-472f-9d0b-033f3e8f2457"   },   "pool|input": {    "id": "f0eff0d01b563d19",    "src": "hda",    "uuid": "bfd8275e-3c34-42e2-805e-5edb7c1ebd48"   },   "reference_source|ref_file": {    "id": "5e8ab6e8ed9841bb",    "src": "hda",    "uuid": "fb120254-33dd-4eb7-b011-febe7b4a5e17"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_log": {    "id": "04824b9ae3a759f2",    "src": "hda",    "uuid": "71e38474-9f0e-41c2-801d-471a4b3f7aa8"   },   "out_variants": {    "id": "7352ec493a534d19",    "src": "hda",    "uuid": "632895e0-801d-41ac-850b-4372860c7775"   }  },  "params": {   "__input_ext": "\"input\"",   "ambig_ref": "true",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gvcf": "false",   "output_annotated": "{\"__current_case__\": 0, \"in_bam\": {\"values\": [{\"id\": 60, \"src\": \"hda\"}]}, \"output_annotated_select\": \"true\", \"pad\": \"25\"}",   "output_log_bool": "true",   "pool": "{\"__current_case__\": 1, \"input\": {\"values\": [{\"id\": 58, \"src\": \"hda\"}]}, \"pool_mode\": \"No\"}",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 59, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",   "regions": "\"\"",   "verbose": "false"  },  "state": "error",  "stderr": "[18:44:44 - Annotate] Getting chrom coordinates\n[18:44:44 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813\n[18:44:44 - BAMFile] Creating pool of 16 BAM file sets.\n",  "stdout": "[18:44:41 - DataStre] Loaded sample register.\n[18:44:41 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[18:44:41 - Variants] Label decoding is:\n0: (\u0027*\u0027,)\n1: (\u0027A\u0027,)\n2: (\u0027C\u0027,)\n3: (\u0027G\u0027,)\n4: (\u0027T\u0027,)\n[18:44:41 - Variants] Processing NC_045512.2:0-.\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/medaka_variant/1.7.2+galaxy1",  "tool_stderr": "[18:44:44 - Annotate] Getting chrom coordinates\n[18:44:44 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813\n[18:44:44 - BAMFile] Creating pool of 16 BAM file sets.\n",  "tool_stdout": "[18:44:41 - DataStre] Loaded sample register.\n[18:44:41 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[18:44:41 - Variants] Label decoding is:\n0: (\u0027*\u0027,)\n1: (\u0027A\u0027,)\n2: (\u0027C\u0027,)\n3: (\u0027G\u0027,)\n4: (\u0027T\u0027,)\n[18:44:41 - Variants] Processing NC_045512.2:0-.\n",  "update_time": "2025-01-02T18:44:48.483704",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/medaka_variant/1.7.2+galaxy1, exit_code: None, stderr: [18:44:44 - Annotate] Getting chrom coordinates\n[18:44:44 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813\n[18:44:44 - BAMFile] Creating pool of 16 BAM file sets.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/medaka_variant/1.7.2+galaxy1, exit_code: None, stderr: [18:44:44 - Annotate] Getting chrom coordinates\n[18:44:44 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813\n[18:44:44 - BAMFile] Creating pool of 16 BAM file sets.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/medaka_variant/1.7.2+galaxy1, exit_code: None, stderr: [18:44:44 - Annotate] Getting chrom coordinates\n[18:44:44 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813\n[18:44:44 - BAMFile] Creating pool of 16 BAM file sets.\n." ], "status": "failure", "test_index": 1, "time_seconds": 37.05164885520935, "tool_id": "medaka_variant", "tool_version": "1.7.2+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            [18:44:41 - DataStre] Loaded sample register.[18:44:41 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:44:41 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:44:41 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:44:44 - Annotate] Getting chrom coordinates[18:44:44 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:44:44 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="35.21461582183838">
        
            
            <system-out><![CDATA[
            [18:45:13 - DataStre] Loaded sample register.[18:45:13 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:45:13 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:45:13 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="57.71374797821045">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="60.74061632156372">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="37.01932334899902">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="40.24478816986084">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="38.948904037475586">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="39.20656371116638">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="38.87452459335327">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="38.717745304107666">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="38.82983875274658">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="44.6295166015625">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="48.69912648200989">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="50.68303918838501">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.0010625sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.7069e-05sWriting sequence data to file . . . doneElapsed time: 6.964e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00014182sdoneElapsed time: 0.00294518sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00107746sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-01-02 18:47:01.034] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-01-02 18:47:01.105] [stderrLog] [info] Loading Suffix Array [2025-01-02 18:47:01.105] [stderrLog] [info] Loading Position Hash[2025-01-02 18:47:01.106] [stderrLog] [info] Loading Transcript Info [2025-01-02 18:47:01.107] [stderrLog] [info] Loading Rank-Select Bit Array[2025-01-02 18:47:01.107] [stderrLog] [info] There were 15 set bits in the bit array[2025-01-02 18:47:01.107] [stderrLog] [info] Computing transcript lengths[2025-01-02 18:47:01.107] [stderrLog] [info] Waiting to finish loading hash[2025-01-02 18:47:01.107] [stderrLog] [info] Done loading index[2025-01-02 18:47:01.104] [jointLog] [info] Loading Quasi index[2025-01-02 18:47:01.107] [jointLog] [info] done[2025-01-02 18:47:01.129] [jointLog] [info] Gathered fragment lengths from all threads[2025-01-02 18:47:01.129] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-01-02 18:47:01.130] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-01-02 18:47:01.139] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-01-02 18:47:01.139] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-01-02 18:47:01.140] [jointLog] [info] Starting optimizer:[2025-01-02 18:47:01.140] [jointLog] [info] Optimizing over 21 equivalence classes[2025-01-02 18:47:01.140] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-01-02 18:47:01.141] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-01-02 18:47:01.141] [jointLog] [info] Finished optimizer[2025-01-02 18:47:01.141] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="38.53295588493347">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00099222sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.6031e-05sWriting sequence data to file . . . doneElapsed time: 4.993e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.0001605sdoneElapsed time: 0.00338384sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00110651sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-01-02 18:47:43.365] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-01-02 18:47:43.433] [stderrLog] [info] Loading Suffix Array [2025-01-02 18:47:43.433] [stderrLog] [info] Loading Position Hash[2025-01-02 18:47:43.434] [stderrLog] [info] Loading Transcript Info [2025-01-02 18:47:43.434] [stderrLog] [info] Loading Rank-Select Bit Array[2025-01-02 18:47:43.434] [stderrLog] [info] There were 15 set bits in the bit array[2025-01-02 18:47:43.434] [stderrLog] [info] Computing transcript lengths[2025-01-02 18:47:43.434] [stderrLog] [info] Waiting to finish loading hash[2025-01-02 18:47:43.435] [stderrLog] [info] Done loading index[2025-01-02 18:47:43.432] [jointLog] [info] Loading Quasi index[2025-01-02 18:47:43.435] [jointLog] [info] done[2025-01-02 18:47:43.454] [jointLog] [info] Gathered fragment lengths from all threads[2025-01-02 18:47:43.454] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-01-02 18:47:43.455] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-01-02 18:47:43.463] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-01-02 18:47:43.463] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-01-02 18:47:43.463] [jointLog] [info] Starting optimizer:[2025-01-02 18:47:43.463] [jointLog] [info] Optimizing over 21 equivalence classes[2025-01-02 18:47:43.463] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-01-02 18:47:43.464] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-01-02 18:47:43.464] [jointLog] [info] Finished optimizer[2025-01-02 18:47:43.464] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="59.0716450214386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00109297sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.952e-05sWriting sequence data to file . . . doneElapsed time: 9.712e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00013975sdoneElapsed time: 0.00277907sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00111053sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-01-02 18:48:41.463] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-01-02 18:48:41.532] [stderrLog] [info] Loading Suffix Array [2025-01-02 18:48:41.533] [stderrLog] [info] Loading Position Hash[2025-01-02 18:48:41.533] [stderrLog] [info] Loading Transcript Info [2025-01-02 18:48:41.533] [stderrLog] [info] Loading Rank-Select Bit Array[2025-01-02 18:48:41.533] [stderrLog] [info] There were 15 set bits in the bit array[2025-01-02 18:48:41.534] [stderrLog] [info] Computing transcript lengths[2025-01-02 18:48:41.534] [stderrLog] [info] Waiting to finish loading hash[2025-01-02 18:48:41.535] [stderrLog] [info] Done loading index[2025-01-02 18:48:41.531] [jointLog] [info] Loading Quasi index[2025-01-02 18:48:41.535] [jointLog] [info] doneDone Quasi-Mapping [2025-01-02 18:48:41.555] [jointLog] [info] Gathered fragment lengths from all threads[2025-01-02 18:48:41.555] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-01-02 18:48:41.556] [jointLog] [info] Estimating effective lengths[2025-01-02 18:48:41.563] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-01-02 18:48:41.563] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-01-02 18:48:41.564] [jointLog] [info] Starting optimizer:[2025-01-02 18:48:41.564] [jointLog] [info] Optimizing over 21 equivalence classes[2025-01-02 18:48:41.564] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-01-02 18:48:41.564] [jointLog] [info] iteration 50, recomputing effective lengths[2025-01-02 18:48:41.566] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-01-02 18:48:41.566] [jointLog] [info] Finished optimizer[2025-01-02 18:48:41.566] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="44.76241183280945">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00103595sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.417e-05sWriting sequence data to file . . . doneElapsed time: 5.34e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00016759sdoneElapsed time: 0.0152582sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00124156sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-01-02 18:49:25.523] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-01-02 18:49:25.593] [stderrLog] [info] Loading Suffix Array [2025-01-02 18:49:25.593] [stderrLog] [info] Loading Position Hash[2025-01-02 18:49:25.593] [stderrLog] [info] Loading Transcript Info [2025-01-02 18:49:25.594] [stderrLog] [info] Loading Rank-Select Bit Array[2025-01-02 18:49:25.594] [stderrLog] [info] There were 15 set bits in the bit array[2025-01-02 18:49:25.594] [stderrLog] [info] Computing transcript lengths[2025-01-02 18:49:25.594] [stderrLog] [info] Waiting to finish loading hash[2025-01-02 18:49:25.595] [stderrLog] [info] Done loading index[2025-01-02 18:49:25.592] [jointLog] [info] Loading Quasi index[2025-01-02 18:49:25.595] [jointLog] [info] done[2025-01-02 18:49:25.617] [jointLog] [info] Gathered fragment lengths from all threads[2025-01-02 18:49:25.617] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-01-02 18:49:25.618] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-01-02 18:49:25.625] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-01-02 18:49:25.625] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-01-02 18:49:25.626] [jointLog] [info] Starting optimizer:[2025-01-02 18:49:25.626] [jointLog] [info] Optimizing over 21 equivalence classes[2025-01-02 18:49:25.626] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-01-02 18:49:25.626] [jointLog] [info] iteration 50, recomputing effective lengths[2025-01-02 18:49:25.628] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-01-02 18:49:25.628] [jointLog] [info] Finished optimizer[2025-01-02 18:49:25.628] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="28.801194190979004">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 28.801194190979004, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="38.52745985984802">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="19.26438570022583">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 19.26438570022583, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="34.53243947029114">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="34.08480477333069">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="11.780131340026855">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 11.780131340026855, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="44.83503985404968">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="34.84026837348938">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="37.11942934989929">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="26.18010926246643">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_bam": {   "id": "357dfe1f1e6b8468",   "src": "hda"  },  "option_set|block_length": "13",  "option_set|drop_ambiguous": true,  "option_set|ignore_chimeras": false,  "option_set|min_bq": "13",  "option_set|min_het": "37",  "option_set|option_sets": "advanced",  "option_set|read_depth": "256" }, "job": {  "command_line": "samtools phase -b phase_wrapper  -k 13 -q 37 -Q 13 -D 256 -A \u0027/galaxy/server/database/objects/6/7/a/dataset_67a139a4-ec04-452a-b489-698d3b4c623a.dat\u0027 \u003e \u0027/galaxy/server/database/objects/a/2/0/dataset_a2048aac-6d1f-4702-a48b-ff147b1e3bc0.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-02T18:52:08.942500",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-75jl4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "d9c882029843d6d6",  "inputs": {   "input_bam": {    "id": "357dfe1f1e6b8468",    "src": "hda",    "uuid": "67a139a4-ec04-452a-b489-698d3b4c623a"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "chimera": {    "id": "51e5b3229946a25e",    "src": "hda",    "uuid": "4344ed75-c877-44d0-a512-ca5c01941067"   },   "phase0": {    "id": "0bc9e91da799863b",    "src": "hda",    "uuid": "66571813-aafe-4df2-b343-341376ce8139"   },   "phase1": {    "id": "66afe798dcbeec8c",    "src": "hda",    "uuid": "2baf2b4d-c529-48ee-9c2b-e9cd08fd16f1"   },   "phase_sets": {    "id": "4f784208c16a5f87",    "src": "hda",    "uuid": "a2048aac-6d1f-4702-a48b-ff147b1e3bc0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "option_set": "{\"__current_case__\": 1, \"block_length\": \"13\", \"drop_ambiguous\": true, \"ignore_chimeras\": false, \"min_bq\": \"13\", \"min_het\": \"37\", \"option_sets\": \"advanced\", \"read_depth\": \"256\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-02T18:52:15.409240",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 26.18010926246643, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="12.541016578674316">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 12.541016578674316, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="35.904160499572754">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="71.5887393951416">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "60347c1883a71cbd",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/6/7/dataset_c6705122-43f7-435f-8d39-5c85b3ceb861.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpph349nty\u0027 \u003e \u0027/galaxy/server/database/objects/c/5/6/dataset_c56ef1cb-c64d-4134-a4b9-5739e226b1d6.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpph349nty\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/c/5/6/dataset_c56ef1cb-c64d-4134-a4b9-5739e226b1d6.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/c/5/6/dataset_c56ef1cb-c64d-4134-a4b9-5739e226b1d6.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:11:22.738413",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dv7gp",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "3bf78602e291c908",  "inputs": {   "adata": {    "id": "60347c1883a71cbd",    "src": "hda",    "uuid": "c6705122-43f7-435f-8d39-5c85b3ceb861"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735845114.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:11:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735845110.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:11:50"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "9f8fa3349dfb668f",    "src": "hda",    "uuid": "0ba20f28-390f-4b2d-90f2-862be2337d9f"   },   "hidden_output": {    "id": "ad1765a3a8a6ae13",    "src": "hda",    "uuid": "c56ef1cb-c64d-4134-a4b9-5739e226b1d6"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-01-02T19:12:14.107666",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 71.5887393951416, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="30.11976432800293">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "bc6d1e52a3de7aa9",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/7/d/dataset_d7d5b669-43eb-4ada-b10e-a2aee428a23a.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/143/configs/tmpie6xpqrf\u0027 \u003e \u0027/galaxy/server/database/objects/b/b/1/dataset_bb14afeb-969b-48fc-a194-a80088f801af.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/143/configs/tmpie6xpqrf\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/b/b/1/dataset_bb14afeb-969b-48fc-a194-a80088f801af.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/b/b/1/dataset_bb14afeb-969b-48fc-a194-a80088f801af.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-02T19:12:34.842652",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-42zgp",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "4229bf223334ebc9",  "inputs": {   "adata": {    "id": "bc6d1e52a3de7aa9",    "src": "hda",    "uuid": "d7d5b669-43eb-4ada-b10e-a2aee428a23a"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "61eae8b0d44b5604",    "src": "hda",    "uuid": "da5af293-44f4-43f5-b86b-253b1ef899b4"   },   "hidden_output": {    "id": "2e7b4324ab04afcb",    "src": "hda",    "uuid": "bb14afeb-969b-48fc-a194-a80088f801af"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "error",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2025-01-02T19:12:44.757387",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 30.11976432800293, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="37.787490367889404">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "8043cded4d92d4cc",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/1/7/dataset_e173c76a-7058-44d7-a3fa-108cde40ad46.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/145/configs/tmpsu593njp\u0027 \u003e \u0027/galaxy/server/database/objects/a/5/f/dataset_a5f854cd-db73-4e4f-a133-e22e7e0f353b.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/145/configs/tmpsu593njp\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/a/5/f/dataset_a5f854cd-db73-4e4f-a133-e22e7e0f353b.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/a/5/f/dataset_a5f854cd-db73-4e4f-a133-e22e7e0f353b.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:13:05.129853",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7w6rf",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "1146e81932167cbf",  "inputs": {   "adata": {    "id": "8043cded4d92d4cc",    "src": "hda",    "uuid": "e173c76a-7058-44d7-a3fa-108cde40ad46"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735845191.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:13:11"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735845186.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:13:06"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "12494c5cc477e17f",    "src": "hda",    "uuid": "fc5a6099-ca12-4af8-95a1-fab21113dd6e"   },   "hidden_output": {    "id": "3ea3621c7b3678d0",    "src": "hda",    "uuid": "a5f854cd-db73-4e4f-a133-e22e7e0f353b"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2025-01-02T19:13:21.987676",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 37.787490367889404, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="38.32331728935242">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "f350ed0fd8063006",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/3/0/d/dataset_30d332ba-0f75-4f62-9e13-95c19b28a2b4.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/147/configs/tmpa5191tui\u0027 \u003e \u0027/galaxy/server/database/objects/5/f/7/dataset_5f7f28bc-0e36-4ed1-8493-40f70b9a3d9c.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/147/configs/tmpa5191tui\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/5/f/7/dataset_5f7f28bc-0e36-4ed1-8493-40f70b9a3d9c.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/5/f/7/dataset_5f7f28bc-0e36-4ed1-8493-40f70b9a3d9c.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:13:43.681212",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-glpx8",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "1d52b0b209cdc8e4",  "inputs": {   "adata": {    "id": "f350ed0fd8063006",    "src": "hda",    "uuid": "30d332ba-0f75-4f62-9e13-95c19b28a2b4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735845229.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:13:49"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735845225.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:13:45"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "e0d2cb25faa86141",    "src": "hda",    "uuid": "1648e5df-5273-4480-9da5-7bb3bd0ebbc3"   },   "hidden_output": {    "id": "bcf3713b534c2c8a",    "src": "hda",    "uuid": "5f7f28bc-0e36-4ed1-8493-40f70b9a3d9c"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2025-01-02T19:14:00.599330",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 38.32331728935242, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="11.526782989501953">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.526782989501953, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="35.83280634880066">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "1aa3251e30d0e000",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/7/d/6/dataset_7d659e7d-5728-4966-a15d-a158fd7ddb10.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmpqrjhvap4\u0027 \u003e \u0027/galaxy/server/database/objects/4/1/2/dataset_412c87b2-d3ce-4ada-9637-9853a70ed3d4.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmpqrjhvap4\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/4/1/2/dataset_412c87b2-d3ce-4ada-9637-9853a70ed3d4.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/4/1/2/dataset_412c87b2-d3ce-4ada-9637-9853a70ed3d4.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-02T19:14:31.999770",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-n89lq",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "d065e1fa03cdc26a",  "inputs": {   "adata": {    "id": "1aa3251e30d0e000",    "src": "hda",    "uuid": "7d659e7d-5728-4966-a15d-a158fd7ddb10"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1735845277.0000000",    "title": "Job End Time",    "value": "2025-01-02 19:14:37"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1735845273.0000000",    "title": "Job Start Time",    "value": "2025-01-02 19:14:33"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "ee04f25d0b06ec52",    "src": "hda",    "uuid": "395fa948-db8a-4afc-973a-200a6e82baf6"   },   "hidden_output": {    "id": "034949cecee12e23",    "src": "hda",    "uuid": "412c87b2-d3ce-4ada-9637-9853a70ed3d4"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2025-01-02T19:14:48.160653",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 35.83280634880066, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.2827777862548828">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2827777862548828, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.284074068069458">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.284074068069458, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="53.358036518096924">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="39.8893187046051">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="23.93929386138916">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "g_option": false,  "input": {   "id": "2b4bac60214b1b0a",   "src": "hda"  },  "null_filler": "." }, "job": {  "command_line": "vcf2tsv  -n \u0027.\u0027 \u0027/galaxy/server/database/objects/4/3/5/dataset_435624dd-3ad4-4945-9309-d218db1776a4.dat\u0027 \u003e \u0027/galaxy/server/database/objects/e/7/8/dataset_e781417d-6387-4a97-8c02-f2d0e8f01025.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-02T19:22:22.780394",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-t5mdp",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a814a11be4d78aeb",  "id": "448b79bcdde92647",  "inputs": {   "input": {    "id": "2b4bac60214b1b0a",    "src": "hda",    "uuid": "435624dd-3ad4-4945-9309-d218db1776a4"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file1": {    "id": "b25edf155f70065b",    "src": "hda",    "uuid": "e781417d-6387-4a97-8c02-f2d0e8f01025"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "g_option": "false",   "null_filler": "\".\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcf2tsv/vcf2tsv/1.0.0_rc3+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-02T19:22:27.191199",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcf2tsv/vcf2tsv/1.0.0_rc3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcf2tsv/vcf2tsv/1.0.0_rc3+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 23.93929386138916, "tool_id": "vcf2tsv", "tool_version": "1.0.0_rc3+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="31.310219526290894">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="29.932621002197266">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="32.4074923992157">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="59.6060676574707">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="39.9213445186615">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="38.12952184677124">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>