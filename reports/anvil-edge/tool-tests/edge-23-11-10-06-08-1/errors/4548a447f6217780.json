{
    "model_class": "Job",
    "id": "4548a447f6217780",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-11-10T07:19:48.040146",
    "create_time": "2023-11-10T07:19:14.128213",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "db82198208fadb5b",
    "external_id": "gxy-cckvz",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/3/7/6/dataset_3769fa08-e13e-4d36-bdd5-d928151a3f33.dat' && cp '/galaxy/server/database/objects/9/9/b/dataset_99b6d78b-f2fe-4e00-abe8-eeb36b70ab9d.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/6/8/f/dataset_68f9e269-d2e1-4bf4-a9d4-544ab1e1b0f3.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/0/b/e/dataset_0be56167-36d2-4784-875f-c999e165e31c.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1964, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1781, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 37: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 310, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 311, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 309, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "ce4998fd49ab81a4",
            "src": "hda",
            "uuid": "0be56167-36d2-4784-875f-c999e165e31c"
        },
        "pairstraight|file2": {
            "id": "f46770374dda3780",
            "src": "hda",
            "uuid": "68f9e269-d2e1-4bf4-a9d4-544ab1e1b0f3"
        },
        "pairstraight|file1": {
            "id": "37df184be9d763cc",
            "src": "hda",
            "uuid": "99b6d78b-f2fe-4e00-abe8-eeb36b70ab9d"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "234486713766dab3",
            "src": "hda",
            "uuid": "3769fa08-e13e-4d36-bdd5-d928151a3f33"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "02e65f53f4f39bed",
            "src": "hda",
            "uuid": "9d8cd7e0-2df3-4f78-9d5b-d538d1a3a593"
        },
        "expected_bias": {
            "id": "58c934c095d2179c",
            "src": "hda",
            "uuid": "8a06336a-dc59-4c70-9110-eac45492b126"
        },
        "quants_tier_mat": {
            "id": "945ad7177e80a2f8",
            "src": "hda",
            "uuid": "7be2ef18-581d-40b8-ab5d-26a9f50df31c"
        },
        "quants_mat_cols_txt": {
            "id": "72fa44d1acaf2bc6",
            "src": "hda",
            "uuid": "bd086d93-4292-4e7f-8f12-f5554eff80e3"
        },
        "quants_mat_mtx": {
            "id": "8b760258c4917b91",
            "src": "hda",
            "uuid": "99cf6728-efe9-49c5-b589-996e4d798df8"
        },
        "observed_bias": {
            "id": "570deadba1413fa7",
            "src": "hda",
            "uuid": "599f6d80-8c76-455a-9fce-8e4c289f5116"
        },
        "whitelist_txt": {
            "id": "51356c69790fdc5b",
            "src": "hda",
            "uuid": "76a71be3-0687-45d5-881e-54aef6de5114"
        },
        "featureDump_txt": {
            "id": "46def69c2cc408e9",
            "src": "hda",
            "uuid": "4f527c35-35a5-4c68-925a-0edb6fd39203"
        },
        "quants_mat_rows_txt": {
            "id": "4f4235ffd02450c0",
            "src": "hda",
            "uuid": "88f6e80f-3e44-4e69-92c0-8ab3e2a802cd"
        },
        "raw_cb_frequency_txt": {
            "id": "ec217e756b4383fb",
            "src": "hda",
            "uuid": "9687b64f-dfa6-4e24-bdf9-5453432cfeb5"
        },
        "observed_bias_3p": {
            "id": "cb407899434a96a9",
            "src": "hda",
            "uuid": "3fedb6d8-8dd6-4d83-842b-6ed3dfe00a35"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
