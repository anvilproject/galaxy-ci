{
    "model_class": "Job",
    "id": "b36418198e004613",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-11-10T07:21:16.598551",
    "create_time": "2023-11-10T07:20:59.845512",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "db82198208fadb5b",
    "external_id": "gxy-t849v",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/6/e/1/dataset_6e1bc040-2e1f-48a3-9fd1-99243799ea8e.dat' && cp '/galaxy/server/database/objects/a/e/0/dataset_ae05d954-4dc6-426e-bc03-628ba36a63ea.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/1/8/4/dataset_184e8409-248f-4c3f-a116-657433bac78e.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/d/7/a/dataset_d7a6ed49-f289-477d-8fe6-28dedf2697f0.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1964, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1781, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 74: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 344, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 342, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "d366ce754a418fa4",
            "src": "hda",
            "uuid": "d7a6ed49-f289-477d-8fe6-28dedf2697f0"
        },
        "pairstraight|file2": {
            "id": "cc22d455474baa8b",
            "src": "hda",
            "uuid": "184e8409-248f-4c3f-a116-657433bac78e"
        },
        "pairstraight|file1": {
            "id": "a9da5f30e59aa79c",
            "src": "hda",
            "uuid": "ae05d954-4dc6-426e-bc03-628ba36a63ea"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "d603f194825755c6",
            "src": "hda",
            "uuid": "6e1bc040-2e1f-48a3-9fd1-99243799ea8e"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "36adb8a8fbbef44d",
            "src": "hda",
            "uuid": "0001dc51-7f05-4b04-bfbc-155675105d89"
        },
        "observed_bias_3p": {
            "id": "82445a59e0899c37",
            "src": "hda",
            "uuid": "1677468c-0dc9-4ec7-9316-b344be300c37"
        },
        "observed_bias": {
            "id": "2cac5ea43df4c204",
            "src": "hda",
            "uuid": "4bc38583-821b-4592-87e4-28afe28a822b"
        },
        "expected_bias": {
            "id": "959fbce14458a1af",
            "src": "hda",
            "uuid": "8285eabb-fe25-4b7d-979b-14e693ea512e"
        },
        "whitelist_txt": {
            "id": "4017b7379572ed6b",
            "src": "hda",
            "uuid": "86158a97-90a4-4d3c-b1cf-c73d3a3f480e"
        },
        "featureDump_txt": {
            "id": "d8bac0e7a717fdff",
            "src": "hda",
            "uuid": "c4651fea-7217-426d-91ca-1ec106faa7ad"
        },
        "quants_tier_mat": {
            "id": "fcac39fed717c648",
            "src": "hda",
            "uuid": "2f17da7a-7142-41f0-b4cf-0c9a0c5ce412"
        },
        "quants_mat_rows_txt": {
            "id": "07743b5d7d4d03f4",
            "src": "hda",
            "uuid": "ff6dec0f-bb6c-42f1-ae1a-fe1fbe5c4c2f"
        },
        "quants_mat_cols_txt": {
            "id": "7e08268963a7db06",
            "src": "hda",
            "uuid": "3cc7967c-b3b6-451d-85bd-bb8675e3bf4e"
        },
        "raw_cb_frequency_txt": {
            "id": "d613f87821fb65df",
            "src": "hda",
            "uuid": "205e500e-5c14-4002-aeb9-d065a2649bcb"
        },
        "quants_mat_mtx": {
            "id": "f1a592d8d7778379",
            "src": "hda",
            "uuid": "ad683a89-6024-4f8f-88f8-dba2d58d5b5e"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
