{
    "model_class": "Job",
    "id": "04e791fb462b73e4",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-07-12T07:14:56.552847",
    "create_time": "2024-07-12T07:14:26.029562",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "5b6299da67e27d62",
    "external_id": "gxy-bw7pq",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/d/c/2/dataset_dc2f159d-241e-42e0-a57c-28d2dc2bfde3.dat' && cp '/galaxy/server/database/objects/b/9/9/dataset_b99d7c47-b708-4aad-a69c-3328f0e488ba.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/c/7/9/dataset_c7955bc7-ac7d-4885-9e75-08c61a315e82.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/3/f/0/dataset_3f08949e-be4f-44cd-ac01-94517f6771ce.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 37: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 299, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 300, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 298, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "ef14a96acff44418",
            "src": "hda",
            "uuid": "3f08949e-be4f-44cd-ac01-94517f6771ce"
        },
        "pairstraight|file2": {
            "id": "a7a03be70dd69329",
            "src": "hda",
            "uuid": "c7955bc7-ac7d-4885-9e75-08c61a315e82"
        },
        "pairstraight|file1": {
            "id": "597137acdc70fb2e",
            "src": "hda",
            "uuid": "b99d7c47-b708-4aad-a69c-3328f0e488ba"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "f5ab1cd7d00f3628",
            "src": "hda",
            "uuid": "dc2f159d-241e-42e0-a57c-28d2dc2bfde3"
        }
    },
    "outputs": {
        "observed_bias": {
            "id": "b1b542b228045bdd",
            "src": "hda",
            "uuid": "f048114b-65cf-4400-bba7-3075a0ce943e"
        },
        "quants_mat_mtx": {
            "id": "ce18d9c74e0a8681",
            "src": "hda",
            "uuid": "ea9cf675-2e7c-4d3d-9c2b-b3c6d6759059"
        },
        "raw_cb_frequency_txt": {
            "id": "5f84ad9b420b5184",
            "src": "hda",
            "uuid": "31dabf7c-2394-405d-841a-9a6f57e90a23"
        },
        "observed_bias_3p": {
            "id": "e3bfc27907c0a6fd",
            "src": "hda",
            "uuid": "a036e037-1a1c-43d3-8cbc-be05bd015588"
        },
        "quants_mat_cols_txt": {
            "id": "ab82b1cd0694378a",
            "src": "hda",
            "uuid": "893ed494-55a4-4ed8-80ef-fc5e48999f91"
        },
        "quants_mat_rows_txt": {
            "id": "9321960908d536e8",
            "src": "hda",
            "uuid": "1b40bad1-c852-4818-8656-d98478482fa7"
        },
        "quants_tier_mat": {
            "id": "66a1dd73be7d188f",
            "src": "hda",
            "uuid": "d90fa33c-68e6-40f3-9be3-b729e5a5ab1e"
        },
        "featureDump_txt": {
            "id": "4e78fa32b57cb548",
            "src": "hda",
            "uuid": "955e0ac5-131f-474a-921b-4c272add8dc4"
        },
        "whitelist_txt": {
            "id": "56e46f5332b92cf0",
            "src": "hda",
            "uuid": "a416ee31-3eee-48eb-aa6c-2c9d49b43689"
        },
        "expected_bias": {
            "id": "d0dd1fca10757d1a",
            "src": "hda",
            "uuid": "a5d95b65-c798-4e24-a64d-751f8e46ee79"
        },
        "flenDist_txt": {
            "id": "0953b2c840d547d2",
            "src": "hda",
            "uuid": "ef4fb0e4-1269-4e29-b32a-a82f7f45e26c"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
