{
    "model_class": "Job",
    "id": "8a847b155716a384",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-07-12T07:16:14.322519",
    "create_time": "2024-07-12T07:15:58.727973",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "5b6299da67e27d62",
    "external_id": "gxy-7qgdv",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/8/b/e/dataset_8be63666-b4f0-444d-9d5e-6f388ace48f8.dat' && cp '/galaxy/server/database/objects/0/0/9/dataset_0096bdde-30d8-496b-b384-d49cd4268193.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/2/7/8/dataset_278b642d-0a1d-4243-a0c1-f8d5fa18418c.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/8/e/e/dataset_8ee7b39a-45a3-4d33-bf50-1733743269dd.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 332, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 333, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 331, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "e9c725ce8adb5b03",
            "src": "hda",
            "uuid": "8ee7b39a-45a3-4d33-bf50-1733743269dd"
        },
        "pairstraight|file2": {
            "id": "8844504a9c302f32",
            "src": "hda",
            "uuid": "278b642d-0a1d-4243-a0c1-f8d5fa18418c"
        },
        "pairstraight|file1": {
            "id": "08f2536e27093e3a",
            "src": "hda",
            "uuid": "0096bdde-30d8-496b-b384-d49cd4268193"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "fdec01c450e3469f",
            "src": "hda",
            "uuid": "8be63666-b4f0-444d-9d5e-6f388ace48f8"
        }
    },
    "outputs": {
        "expected_bias": {
            "id": "d0fbefce2851177c",
            "src": "hda",
            "uuid": "fbb46406-fd8a-46a0-b974-4138a0bd5e42"
        },
        "quants_tier_mat": {
            "id": "b25be077f53a0425",
            "src": "hda",
            "uuid": "fbf3c993-57b5-4c1e-a29d-18d80ac4a0bd"
        },
        "flenDist_txt": {
            "id": "b1d8efd7619e7260",
            "src": "hda",
            "uuid": "383355d3-8f63-45df-9081-cae440a44825"
        },
        "observed_bias_3p": {
            "id": "16aad4a0a910e027",
            "src": "hda",
            "uuid": "160e6ef6-f2ee-43f3-8714-950fc95690cf"
        },
        "quants_mat_rows_txt": {
            "id": "fe02114c166e57bd",
            "src": "hda",
            "uuid": "b651bae2-7c92-41d2-9523-c5ae522f60bf"
        },
        "whitelist_txt": {
            "id": "c40431dc2e9c1027",
            "src": "hda",
            "uuid": "0cda1a86-0a29-4bd4-a257-aee2adb5d24a"
        },
        "observed_bias": {
            "id": "9254535ff2c6bca7",
            "src": "hda",
            "uuid": "07a9225f-cf3a-438d-8416-0ff96620a050"
        },
        "raw_cb_frequency_txt": {
            "id": "340f86bc97d44c92",
            "src": "hda",
            "uuid": "e9d0d410-0fd0-4c4d-aa1a-97667e103cc7"
        },
        "quants_mat_cols_txt": {
            "id": "5be1c7655321626f",
            "src": "hda",
            "uuid": "889c1f62-74dc-499e-a2ee-9ecbba35b179"
        },
        "quants_mat_mtx": {
            "id": "b9cb791a5826a2c4",
            "src": "hda",
            "uuid": "2e548e19-d25e-45f7-a5a4-d1105b501e94"
        },
        "featureDump_txt": {
            "id": "7e9a93bd5ea41796",
            "src": "hda",
            "uuid": "a8013117-3c15-4d2e-8ce8-23e41701e03b"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
