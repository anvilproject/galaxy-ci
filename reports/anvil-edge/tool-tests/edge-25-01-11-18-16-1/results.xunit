<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="111"
           errors="12"
           failures="23"
           skip="0">
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="46.602094650268555">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "2d18024658ef8694",   "src": "hda"  },  "inspect|info": "general" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/88/configs/tmpp93yqhzv\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/88/configs/tmpp93yqhzv\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:28:33.554972",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4mlnh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "58c5aacfe746b275",  "inputs": {   "input": {    "id": "2d18024658ef8694",    "src": "hda",    "uuid": "310a5ed8-8773-4db8-85ef-7c1847ed5d9a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623726.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:28:46"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623725.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:28:45"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "16320.0000000",    "title": "Memory Allocated (MB)",    "value": "16320"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "general": {    "id": "501d2fe8a5f174c6",    "src": "hda",    "uuid": "44332cb1-b873-4175-8c6d-628cd57fccdf"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 0, \"info\": \"general\"}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/3/1/0/dataset_310a5ed8-8773-4db8-85ef-7c1847ed5d9a.dat\u0027)\n\nwith open(\u0027/galaxy/server/database/objects/4/4/3/dataset_44332cb1-b873-4175-8c6d-628cd57fccdf.dat\u0027, \u0027w\u0027, encoding=\"utf-8\") as f:\n    print(adata, file=f)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/3/1/0/dataset_310a5ed8-8773-4db8-85ef-7c1847ed5d9a.dat\u0027)\n\nwith open(\u0027/galaxy/server/database/objects/4/4/3/dataset_44332cb1-b873-4175-8c6d-628cd57fccdf.dat\u0027, \u0027w\u0027, encoding=\"utf-8\") as f:\n    print(adata, file=f)\n\n",  "update_time": "2025-01-11T19:29:00.945081",  "user_email": "tests@fake.org" }, "output_problems": [  "Output general:  different than expected, difference (using diff):\n( /tmp/tmpc8o_nrxminspect.general.txt v. /tmp/tmp4742_kr7inspect.general.txt )\n--- local_file\n+++ history_data\n@@ -1,3 +1,3 @@\n-AnnData object with n_obs \u00d7 n_vars = 500 \u00d7 11\n+AnnData object with n_obs \u00d7 n_vars = 640 \u00d7 11\n     obs: \u0027cell_type\u0027\n-    uns: \u0027highlights\u0027, \u0027iroot\u0027\n+    uns: \u0027cell_type_colors\u0027, \u0027highlights\u0027, \u0027iroot\u0027\n" ], "status": "failure", "test_index": 0, "time_seconds": 46.602094650268555, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/3/1/0/dataset_310a5ed8-8773-4db8-85ef-7c1847ed5d9a.dat')with open('/galaxy/server/database/objects/4/4/3/dataset_44332cb1-b873-4175-8c6d-628cd57fccdf.dat', 'w', encoding="utf-8") as f:    print(adata, file=f)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="33.23899745941162">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "940ab8bfbd5403bf",   "src": "hda"  },  "inspect|info": "general" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/119/configs/tmpj8ntfbf8\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/119/configs/tmpj8ntfbf8\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:37:20.587905",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-j55kz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "278107c69cf7e9d7",  "inputs": {   "input": {    "id": "940ab8bfbd5403bf",    "src": "hda",    "uuid": "a41f2dee-e55d-46a4-b547-49b8b631c21d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736624243.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:37:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736624242.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:37:22"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "16320.0000000",    "title": "Memory Allocated (MB)",    "value": "16320"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "general": {    "id": "6e14a7ddb48f1419",    "src": "hda",    "uuid": "1f5174eb-b65e-453f-8111-1892f5076f9a"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 0, \"info\": \"general\"}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/a/4/1/dataset_a41f2dee-e55d-46a4-b547-49b8b631c21d.dat\u0027)\n\nwith open(\u0027/galaxy/server/database/objects/1/f/5/dataset_1f5174eb-b65e-453f-8111-1892f5076f9a.dat\u0027, \u0027w\u0027, encoding=\"utf-8\") as f:\n    print(adata, file=f)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/a/4/1/dataset_a41f2dee-e55d-46a4-b547-49b8b631c21d.dat\u0027)\n\nwith open(\u0027/galaxy/server/database/objects/1/f/5/dataset_1f5174eb-b65e-453f-8111-1892f5076f9a.dat\u0027, \u0027w\u0027, encoding=\"utf-8\") as f:\n    print(adata, file=f)\n\n",  "update_time": "2025-01-11T19:37:34.460647",  "user_email": "tests@fake.org" }, "output_problems": [  "Output general:  different than expected, difference (using diff):\n( /tmp/tmp3dxkqs1jinspect.general.txt v. /tmp/tmpjamdp2n6inspect.general.txt )\n--- local_file\n+++ history_data\n@@ -1,3 +1,3 @@\n-AnnData object with n_obs \u00d7 n_vars = 500 \u00d7 11\n+AnnData object with n_obs \u00d7 n_vars = 640 \u00d7 11\n     obs: \u0027cell_type\u0027\n-    uns: \u0027highlights\u0027, \u0027iroot\u0027\n+    uns: \u0027cell_type_colors\u0027, \u0027highlights\u0027, \u0027iroot\u0027\n" ], "status": "failure", "test_index": 0, "time_seconds": 33.23899745941162, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/a/4/1/dataset_a41f2dee-e55d-46a4-b547-49b8b631c21d.dat')with open('/galaxy/server/database/objects/1/f/5/dataset_1f5174eb-b65e-453f-8111-1892f5076f9a.dat', 'w', encoding="utf-8") as f:    print(adata, file=f)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="35.674565076828">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "4ce4ca335fcc9e6a",   "src": "hda"  },  "inspect|info": "general" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/151/configs/tmpn7u2ps95\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/151/configs/tmpn7u2ps95\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:46:43.578217",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xwbj4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "b0b3651d1c3b8693",  "inputs": {   "input": {    "id": "4ce4ca335fcc9e6a",    "src": "hda",    "uuid": "7724c45e-d234-4825-bbe6-3d1ae3377d5e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736624807.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:46:47"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736624806.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:46:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "16320.0000000",    "title": "Memory Allocated (MB)",    "value": "16320"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "general": {    "id": "ee657fa8928f17f4",    "src": "hda",    "uuid": "33472912-f8e0-4281-8705-5b9d6d3b86b7"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 0, \"info\": \"general\"}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/7/7/2/dataset_7724c45e-d234-4825-bbe6-3d1ae3377d5e.dat\u0027)\n\nwith open(\u0027/galaxy/server/database/objects/3/3/4/dataset_33472912-f8e0-4281-8705-5b9d6d3b86b7.dat\u0027, \u0027w\u0027, encoding=\"utf-8\") as f:\n    print(adata, file=f)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/7/7/2/dataset_7724c45e-d234-4825-bbe6-3d1ae3377d5e.dat\u0027)\n\nwith open(\u0027/galaxy/server/database/objects/3/3/4/dataset_33472912-f8e0-4281-8705-5b9d6d3b86b7.dat\u0027, \u0027w\u0027, encoding=\"utf-8\") as f:\n    print(adata, file=f)\n\n",  "update_time": "2025-01-11T19:46:59.629985",  "user_email": "tests@fake.org" }, "output_problems": [  "Output general:  different than expected, difference (using diff):\n( /tmp/tmpx94r6vwainspect.general.txt v. /tmp/tmpzngaawd9inspect.general.txt )\n--- local_file\n+++ history_data\n@@ -1,3 +1,3 @@\n-AnnData object with n_obs \u00d7 n_vars = 500 \u00d7 11\n+AnnData object with n_obs \u00d7 n_vars = 640 \u00d7 11\n     obs: \u0027cell_type\u0027\n-    uns: \u0027highlights\u0027, \u0027iroot\u0027\n+    uns: \u0027cell_type_colors\u0027, \u0027highlights\u0027, \u0027iroot\u0027\n" ], "status": "failure", "test_index": 0, "time_seconds": 35.674565076828, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/7/2/dataset_7724c45e-d234-4825-bbe6-3d1ae3377d5e.dat')with open('/galaxy/server/database/objects/3/3/4/dataset_33472912-f8e0-4281-8705-5b9d6d3b86b7.dat', 'w', encoding="utf-8") as f:    print(adata, file=f)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="10.218390464782715">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 10.218390464782715, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="35.7056827545166">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "33b7a922b02120a5",   "src": "hda"  },  "inspect|info": "X" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/121/configs/tmp7f4ylaub\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/121/configs/tmp7f4ylaub\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:37:54.950124",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5pdxm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "a53ff077f5cf110d",  "inputs": {   "input": {    "id": "33b7a922b02120a5",    "src": "hda",    "uuid": "d97e59db-5503-42c8-b713-871036ff036d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736624278.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:37:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736624276.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:37:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "16320.0000000",    "title": "Memory Allocated (MB)",    "value": "16320"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "X": {    "id": "903d8fe5b6503326",    "src": "hda",    "uuid": "25114954-9f33-4223-b888-1878b5785c3c"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 1, \"info\": \"X\"}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/d/9/7/dataset_d97e59db-5503-42c8-b713-871036ff036d.dat\u0027)\n\nadata.to_df().to_csv(\u0027/galaxy/server/database/objects/2/5/1/dataset_25114954-9f33-4223-b888-1878b5785c3c.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/d/9/7/dataset_d97e59db-5503-42c8-b713-871036ff036d.dat\u0027)\n\nadata.to_df().to_csv(\u0027/galaxy/server/database/objects/2/5/1/dataset_25114954-9f33-4223-b888-1878b5785c3c.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2025-01-11T19:38:09.896510",  "user_email": "tests@fake.org" }, "output_problems": [  "Output X:  different than expected, difference (using diff):\n( /tmp/tmp10558vtainspect.X.tabular v. /tmp/tmp6c4w9cb6inspect.X.tabular )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-\tGata2\tGata1\tFog1\tEKLF\tFli1\tSCL\tCebpa\tPu.1\tcJun\tEgrNab\tGfi1\n+index\tGata2\tGata1\tFog1\tEKLF\tFli1\tSCL\tCebpa\tPu.1\tcJun\tEgrNab\tGfi1\n 0\t0.8032\t-0.0005\t-1e-04\t0.0003\t0.0013\t0.0011\t0.7997\t0.8017\t0.0006\t0.0009\t0.0002\n 1\t0.7239\t0.0016\t-0.0003\t-0.001\t0.0011\t0.0022\t0.8195\t0.7256\t0.0784\t0.0077\t0.0941\n 2\t0.6578\t0.0013\t-0.001\t-0.0027\t0.0025\t0.0011\t0.8358\t0.6624\t0.1105\t0.0239\t0.1497\n@@ -499,3 +499,143 @@\n 17\t0.1857\t0.0587\t-0.0003\t0.0087\t0.0084\t0.0221\t0.9613\t0.2272\t0.1058\t0.0298\t0.276\n 18\t0.177\t0.0645\t0.0011\t0.009\t0.006\t0.0222\t0.9653\t0.2208\t0.1063\t0.0291\t0.2785\n 19\t0.1664\t0.0673\t0.002\t0.0078\t0.0094\t0.0278\t0.9689\t0.2125\t0.1041\t0.0294\t0.2794\n+20\t0.159\t0.0738\t0.0015\t0.0092\t0.0068\t0.0289\t0.97\t0.2054\t0.1042\t0.0299\t0.2807\n+21\t0.1509\t0.0722\t0.002\t0.0078\t0.0038\t0.0353\t0.9718\t0.2007\t0.0995\t0.0284\t0.2862\n+22\t0.1492\t0.0714\t0.0025\t0.014\t0.0066\t0.0381\t0.972\t0.1993\t0.0989\t0.0286\t0.2911\n+23\t0.1445\t0.0706\t0.0049\t0.0148\t0.0107\t0.0411\t0.9767\t0.1999\t0.0957\t0.0306\t0.293\n+24\t0.1402\t0.073\t0.0063\t0.0143\t0.0122\t0.0407\t0.9761\t0.2024\t0.0999\t0.0315\t0.2912\n+25\t0.1389\t0.0725\t0.0069\t0.0163\t0.014\t0.0406\t0.9781\t0.206\t0.0972\t0.0301\t0.2917\n+26\t0.1364\t0.0761\t0.0068\t0.013\t0.0147\t0.0441\t0.975\t0.2033\t0.0948\t0.0285\t0.2932\n+27\t0.1363\t0.0786\t0.0082\t0.0151\t0.0153\t0.0463\t0.9812\t0.2048\t0.0921\t0.0291\t0.2963\n+28\t0.1339\t0.0796\t0.0069\t0.0145\t0.0171\t0.0539\t0.984\t0.2069\t0.0884\t0.031\t0.2958\n+29\t0.1305\t0.0847\t0.0085\t0.0156\t0.015\t0.0565\t0.9853\t0.2108\t0.0883\t0.0348\t0.2913\n+30\t0.1276\t0.0846\t0.0087\t0.0156\t0.0124\t0.0569\t0.9906\t0.2103\t0.0888\t0.0282\t0.2906\n+31\t0.1238\t0.0827\t0.008\t0.0176\t0.0158\t0.0603\t0.9893\t0.213\t0.0886\t0.0267\t0.2899\n+32\t0.121\t0.077\t0.01\t0.0174\t0.0171\t0.0605\t0.9918\t0.2194\t0.0885\t0.029\t0.2966\n********\n*SNIP *\n********\n+135\t0.0025\t-0.002\t0.0026\t0.0064\t0.0047\t-0.0078\t0.9926\t1.003\t0.0153\t-0.0054\t0.9198\n+136\t-0.0023\t-0.0027\t0.0013\t0.0059\t0.0014\t-0.0077\t0.9938\t1.0012\t0.0143\t-0.0046\t0.9246\n+137\t0.0004\t-0.0045\t0.0011\t0.0046\t0.0035\t-0.0082\t0.9927\t1.0007\t0.0133\t-0.0049\t0.9222\n+138\t-0.0006\t-0.0044\t0.001\t0.0071\t0.0049\t-0.0112\t0.9953\t1.0034\t0.0123\t-0.0061\t0.9246\n+139\t-0.0025\t-0.0051\t-0.0003\t0.0076\t0.003\t-0.0067\t0.9932\t1.0029\t0.014\t-0.0055\t0.9267\n+140\t-0.0038\t-0.0068\t0.0007\t0.0066\t-0.0003\t-0.0066\t0.9921\t1.0051\t0.013\t-0.0046\t0.9243\n+141\t-0.0023\t-0.0119\t0.0046\t0.0063\t0.0037\t-0.0059\t0.9913\t1.004\t0.0146\t-0.0022\t0.9326\n+142\t-0.0034\t-0.0117\t0.002\t0.0028\t0.003\t-0.0026\t0.9923\t1.0021\t0.0158\t-0.0021\t0.9364\n+143\t-0.0047\t-0.0134\t0.0031\t0.0018\t0.0046\t-0.0006\t0.9908\t0.9996\t0.0136\t-0.0015\t0.9376\n+144\t-0.0035\t-0.0163\t0.0017\t0.0016\t0.0035\t-0.0008\t0.9938\t0.9976\t0.013\t0.0009\t0.9446\n+145\t-0.002\t-0.0149\t-0.0009\t0.0021\t0.0013\t-0.0018\t0.9938\t0.9941\t0.015\t-0.0055\t0.9497\n+146\t-0.0036\t-0.0151\t0.0024\t-0.0013\t0.0012\t0.0004\t0.9976\t0.9917\t0.0123\t-0.0032\t0.9441\n+147\t-0.0032\t-0.0116\t0.001\t0.0008\t-0.0024\t0.0006\t1.001\t0.9934\t0.0108\t-0.0065\t0.9492\n+148\t-0.0023\t-0.0083\t0.0027\t0.0005\t0.0006\t-0.0014\t1.0014\t0.9927\t0.0136\t-0.0067\t0.94\n+149\t-0.001\t-0.006\t0.0022\t0.0034\t-0.0011\t-0.0018\t0.9997\t0.9933\t0.0132\t-0.0049\t0.9404\n+150\t-0.0024\t-0.0073\t-0.0011\t0.0036\t-0.0024\t-0.0008\t0.9975\t0.9958\t0.0165\t-0.0064\t0.9398\n+151\t0.0007\t-0.0051\t0.0008\t0.0036\t-0.003\t-0.0012\t1.0006\t0.9932\t0.0161\t-0.0076\t0.9372\n+152\t-0.0008\t-0.0076\t0.0025\t0.0028\t-0.0048\t-0.0003\t1.0016\t0.992\t0.015\t-0.0095\t0.9325\n+153\t-0.0029\t-0.0045\t0.0027\t0.0051\t-0.0046\t-0.0039\t0.9989\t0.9913\t0.0177\t-0.0087\t0.9232\n+154\t0.0002\t-0.002\t0.0061\t0.0048\t-0.0043\t-0.0016\t0.9989\t0.9911\t0.0152\t-0.0072\t0.916\n+155\t-0.001\t-0.002\t0.0015\t0.0029\t-0.0055\t-0.0004\t0.999\t0.9915\t0.0107\t-0.0076\t0.9119\n+156\t0.0028\t-0.003\t0.0009\t0.0049\t-0.0073\t0.002\t1.0\t0.9946\t0.0127\t-0.0082\t0.9095\n+157\t0.003\t-0.0035\t0.0008\t0.0052\t-0.0066\t1e-04\t1.0014\t0.9977\t0.0125\t-0.0046\t0.9069\n+158\t0.0063\t-0.0023\t-0.0005\t0.0081\t-0.0046\t-0.0006\t0.9983\t0.997\t0.0109\t-0.003\t0.9118\n+159\t0.0049\t0.0002\t-0.0013\t0.0054\t-0.0036\t0.0009\t1.0011\t0.9967\t0.0066\t-0.0033\t0.9177\n" ], "status": "failure", "test_index": 1, "time_seconds": 35.7056827545166, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/9/7/dataset_d97e59db-5503-42c8-b713-871036ff036d.dat')adata.to_df().to_csv('/galaxy/server/database/objects/2/5/1/dataset_25114954-9f33-4223-b888-1878b5785c3c.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="11.342804908752441">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.342804908752441, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="34.13423418998718">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/f/5/dataset_df51a86d-0071-46d9-9481-cc63fbd5750f.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/5/b/4/dataset_5b45415e-702d-4fe6-b9d9-8dbd1b0d736c.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="33.00961637496948">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/2/d/dataset_d2d20642-10b7-444c-95a1-11e4618e551b.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/4/3/7/dataset_4371c094-c8e3-4e24-8c2c-05bc8db0e8db.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="33.89263415336609">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/e/1/1/dataset_e11b214a-9f3d-4eb8-9f3b-1ee0f58098be.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/8/d/b/dataset_8dbbc4f0-8f5c-4a20-93c8-9689d9367552.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="33.22185206413269">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/d/7/dataset_0d7b1ac0-171d-4d0d-84b3-78823039d4b5.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/b/e/6/dataset_be632b53-d8f8-42dd-aecc-873aebc99667.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="34.18752360343933">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/e/8/dataset_7e8a0472-e4e8-4ffa-9dc2-e5d952eeff5a.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/d/9/1/dataset_d91e6140-c3a8-4963-8371-0cfcd5dc9789.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="26.57801914215088">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "9b4226ec804fe4c2",   "src": "hda"  },  "inspect|info": "obsm",  "inspect|obsm_info": "X_umap" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/172/configs/tmpidrn0vz8\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/172/configs/tmpidrn0vz8\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T19:52:39.306894",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-4xsgh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "bc5ac17b59164e8f",  "inputs": {   "input": {    "id": "9b4226ec804fe4c2",    "src": "hda",    "uuid": "fd004247-cd8a-46d3-9603-b786b60328ef"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "obsm_X_umap": {    "id": "178491a61ae9ffe3",    "src": "hda",    "uuid": "58ce6d97-d2d0-492f-9b80-671cbda7a779"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 6, \"info\": \"obsm\", \"obsm_info\": \"X_umap\"}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/f/d/0/dataset_fd004247-cd8a-46d3-9603-b786b60328ef.dat\u0027)\n\npd.DataFrame(adata.obsm[\u0027X_umap\u0027]).to_csv(\"/galaxy/server/database/objects/5/8/c/dataset_58ce6d97-d2d0-492f-9b80-671cbda7a779.dat\", sep=\"\\t\", index = False)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/f/d/0/dataset_fd004247-cd8a-46d3-9603-b786b60328ef.dat\u0027)\n\npd.DataFrame(adata.obsm[\u0027X_umap\u0027]).to_csv(\"/galaxy/server/database/objects/5/8/c/dataset_58ce6d97-d2d0-492f-9b80-671cbda7a779.dat\", sep=\"\\t\", index = False)\n\n",  "update_time": "2025-01-11T19:52:46.665665",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 11, "time_seconds": 26.57801914215088, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/f/d/0/dataset_fd004247-cd8a-46d3-9603-b786b60328ef.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/5/8/c/dataset_58ce6d97-d2d0-492f-9b80-671cbda7a779.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="35.032546281814575">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/a/f/7/dataset_af76341a-3c94-4eaf-b243-216e56c5ba5d.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/d/d/1/dataset_dd1b4807-f1d5-493b-a184-b4b93d1ec433.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="33.39245676994324">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/a/d/7/dataset_ad78b962-ddf7-4207-8a2d-323ccd337777.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/2/b/b/dataset_2bbc3de0-4eb0-4858-9437-e60a00aa9d39.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="34.07341980934143">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/8/6/3/dataset_863118c3-bc54-48f7-b957-d58413befc3b.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/a/8/1/dataset_a811248f-f535-4d27-978f-5ed3c10137f7.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="34.37331199645996">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/b/2/dataset_db23e81d-3a47-46c5-b013-f39425a2d330.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="35.06979584693909">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/c/6/dataset_7c672d04-a4a5-4b83-8b01-6b79283935e7.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="34.76505923271179">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/5/7/dataset_1572c305-07ad-4dd8-a451-b0d08034f385.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="33.324958086013794">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/d/a/dataset_6da915c3-efbd-4ec6-bccf-848dbb4b8d0b.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/3/8/2/dataset_3828186c-ab7c-4b97-b8d7-2af30e6c44f6.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="35.631837606430054">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/a/f/dataset_7afcca98-6dc4-4314-8ea8-fb965e2ef85b.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/9/9/9/dataset_999a955d-c3d0-4b47-a71d-74102ce252f5.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="32.62623333930969">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/7/0/dataset_0702ebb3-fb33-475b-9202-2d8e3e92174c.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/0/0/4/dataset_004dcb33-f40b-4ac2-8ad4-0843633ceb75.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="33.34530282020569">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/1/1/dataset_11106d6c-ef9a-4f4d-af4c-0e4b59582627.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/8/f/3/dataset_8f30cb98-5e6d-4c54-9b6e-b490b5315e5e.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="32.18701910972595">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/8/1/d/dataset_81dc7121-eed0-429f-89eb-7769a58443f4.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/b/6/b/dataset_b6b1a02c-3c64-41a4-8570-e78eab4d825d.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="33.402371883392334">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/f/3/dataset_6f36746d-fbd2-4fc7-884a-dc11840b6b33.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/b/f/0/dataset_bf0bfb1c-17db-4568-86dd-dfa2cf2b9b1f.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="25.080350399017334">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "bb7eb842051d7e70",   "src": "hda"  },  "inspect|info": "obs" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmphnpy52gh\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmphnpy52gh\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T19:29:29.734398",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-vtxd7",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "852b1b7988b30050",  "inputs": {   "input": {    "id": "bb7eb842051d7e70",    "src": "hda",    "uuid": "dc9c6253-5e3d-48a6-bf69-29fbb653bf2e"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "obs": {    "id": "80a1d223f521b32e",    "src": "hda",    "uuid": "96cc8abc-e6d6-406f-bba7-6f6f728e2f0d"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 3, \"info\": \"obs\"}"  },  "state": "error",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/d/c/9/dataset_dc9c6253-5e3d-48a6-bf69-29fbb653bf2e.dat\u0027)\n\nadata.obs.to_csv(\u0027/galaxy/server/database/objects/9/6/c/dataset_96cc8abc-e6d6-406f-bba7-6f6f728e2f0d.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/d/c/9/dataset_dc9c6253-5e3d-48a6-bf69-29fbb653bf2e.dat\u0027)\n\nadata.obs.to_csv(\u0027/galaxy/server/database/objects/9/6/c/dataset_96cc8abc-e6d6-406f-bba7-6f6f728e2f0d.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2025-01-11T19:29:36.431726",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n." ], "status": "failure", "test_index": 2, "time_seconds": 25.080350399017334, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/c/9/dataset_dc9c6253-5e3d-48a6-bf69-29fbb653bf2e.dat')adata.obs.to_csv('/galaxy/server/database/objects/9/6/c/dataset_96cc8abc-e6d6-406f-bba7-6f6f728e2f0d.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="48.768651723861694">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "f9cf00f2536e7c5c",   "src": "hda"  },  "inspect|info": "obs" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/123/configs/tmp8cxyog6i\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/123/configs/tmp8cxyog6i\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T19:38:29.404226",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-2c9sh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "4a846ad4bec9d3b4",  "inputs": {   "input": {    "id": "f9cf00f2536e7c5c",    "src": "hda",    "uuid": "39b0ef6f-b132-4322-a173-044f35c7a094"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "obs": {    "id": "5b0cec5f6c8810e5",    "src": "hda",    "uuid": "cabeaa9f-7a69-4509-baba-66bc79cbe82b"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 3, \"info\": \"obs\"}"  },  "state": "error",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/3/9/b/dataset_39b0ef6f-b132-4322-a173-044f35c7a094.dat\u0027)\n\nadata.obs.to_csv(\u0027/galaxy/server/database/objects/c/a/b/dataset_cabeaa9f-7a69-4509-baba-66bc79cbe82b.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/3/9/b/dataset_39b0ef6f-b132-4322-a173-044f35c7a094.dat\u0027)\n\nadata.obs.to_csv(\u0027/galaxy/server/database/objects/c/a/b/dataset_cabeaa9f-7a69-4509-baba-66bc79cbe82b.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2025-01-11T19:38:58.782180",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n." ], "status": "failure", "test_index": 2, "time_seconds": 48.768651723861694, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/3/9/b/dataset_39b0ef6f-b132-4322-a173-044f35c7a094.dat')adata.obs.to_csv('/galaxy/server/database/objects/c/a/b/dataset_cabeaa9f-7a69-4509-baba-66bc79cbe82b.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="32.89529585838318">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "7a7d09ade003b1db",   "src": "hda"  },  "inspect|info": "obs" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmp316ovl_8\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmp316ovl_8\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:47:30.331675",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rpkdw",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "ab887b0b327d0cb4",  "inputs": {   "input": {    "id": "7a7d09ade003b1db",    "src": "hda",    "uuid": "53ad8cfe-2421-428e-aef9-56ddcc7f47f6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736624852.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:47:32"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736624851.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:47:31"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "16320.0000000",    "title": "Memory Allocated (MB)",    "value": "16320"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "obs": {    "id": "09862d32988937e2",    "src": "hda",    "uuid": "ed5c1d08-e330-48ea-81cb-ade1c5962929"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 3, \"info\": \"obs\"}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/5/3/a/dataset_53ad8cfe-2421-428e-aef9-56ddcc7f47f6.dat\u0027)\n\nadata.obs.to_csv(\u0027/galaxy/server/database/objects/e/d/5/dataset_ed5c1d08-e330-48ea-81cb-ade1c5962929.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/5/3/a/dataset_53ad8cfe-2421-428e-aef9-56ddcc7f47f6.dat\u0027)\n\nadata.obs.to_csv(\u0027/galaxy/server/database/objects/e/d/5/dataset_ed5c1d08-e330-48ea-81cb-ade1c5962929.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2025-01-11T19:47:44.131662",  "user_email": "tests@fake.org" }, "output_problems": [  "Output obs:  different than expected, difference (using diff):\n( /tmp/tmpmbj_cr70inspect.obs.tabular v. /tmp/tmpzgen6yhginspect.obs.tabular )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-\tcell_type\n+index\tcell_type\n 0\tprogenitor\n 1\tprogenitor\n 2\tprogenitor\n@@ -499,3 +499,143 @@\n 17\tprogenitor\n 18\tprogenitor\n 19\tprogenitor\n+20\tprogenitor\n+21\tprogenitor\n+22\tprogenitor\n+23\tprogenitor\n+24\tprogenitor\n+25\tprogenitor\n+26\tprogenitor\n+27\tprogenitor\n+28\tprogenitor\n+29\tprogenitor\n+30\tprogenitor\n+31\tprogenitor\n+32\tprogenitor\n********\n*SNIP *\n********\n+135\tNeu\n+136\tNeu\n+137\tNeu\n+138\tNeu\n+139\tNeu\n+140\tNeu\n+141\tNeu\n+142\tNeu\n+143\tNeu\n+144\tNeu\n+145\tNeu\n+146\tNeu\n+147\tNeu\n+148\tNeu\n+149\tNeu\n+150\tNeu\n+151\tNeu\n+152\tNeu\n+153\tNeu\n+154\tNeu\n+155\tNeu\n+156\tNeu\n+157\tNeu\n+158\tNeu\n+159\tNeu\n" ], "status": "failure", "test_index": 2, "time_seconds": 32.89529585838318, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/5/3/a/dataset_53ad8cfe-2421-428e-aef9-56ddcc7f47f6.dat')adata.obs.to_csv('/galaxy/server/database/objects/e/d/5/dataset_ed5c1d08-e330-48ea-81cb-ade1c5962929.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="29.972304105758667">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "5a7b3e8402bfca70",   "src": "hda"  },  "inspect|info": "var" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmp1pvcmtb_\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmp1pvcmtb_\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T19:29:56.358362",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-cdblz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "81551d440e822efe",  "inputs": {   "input": {    "id": "5a7b3e8402bfca70",    "src": "hda",    "uuid": "0a54eeb1-2588-4985-8b0f-ea59522e2e0f"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "var": {    "id": "d1244370126a6f88",    "src": "hda",    "uuid": "392cc656-e914-49b9-a313-e98e3ae63b33"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 4, \"info\": \"var\"}"  },  "state": "error",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/0/a/5/dataset_0a54eeb1-2588-4985-8b0f-ea59522e2e0f.dat\u0027)\n\nadata.var.to_csv(\u0027/galaxy/server/database/objects/3/9/2/dataset_392cc656-e914-49b9-a313-e98e3ae63b33.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/0/a/5/dataset_0a54eeb1-2588-4985-8b0f-ea59522e2e0f.dat\u0027)\n\nadata.var.to_csv(\u0027/galaxy/server/database/objects/3/9/2/dataset_392cc656-e914-49b9-a313-e98e3ae63b33.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2025-01-11T19:30:06.375352",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n." ], "status": "failure", "test_index": 3, "time_seconds": 29.972304105758667, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/a/5/dataset_0a54eeb1-2588-4985-8b0f-ea59522e2e0f.dat')adata.var.to_csv('/galaxy/server/database/objects/3/9/2/dataset_392cc656-e914-49b9-a313-e98e3ae63b33.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="33.77874803543091">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "6a6a4f81d6da7d4f",   "src": "hda"  },  "inspect|info": "var" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/125/configs/tmpsk99lsbd\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/125/configs/tmpsk99lsbd\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:39:18.972118",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bmtgs",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "f743fd076530151c",  "inputs": {   "input": {    "id": "6a6a4f81d6da7d4f",    "src": "hda",    "uuid": "03e8e875-f63a-4f44-9618-82645aabf21c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736624362.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:39:22"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736624360.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:39:20"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "16320.0000000",    "title": "Memory Allocated (MB)",    "value": "16320"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "var": {    "id": "a8ce03aba238dff3",    "src": "hda",    "uuid": "0b2417ec-9e39-4b64-8576-83b71863fa3b"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 4, \"info\": \"var\"}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/0/3/e/dataset_03e8e875-f63a-4f44-9618-82645aabf21c.dat\u0027)\n\nadata.var.to_csv(\u0027/galaxy/server/database/objects/0/b/2/dataset_0b2417ec-9e39-4b64-8576-83b71863fa3b.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/0/3/e/dataset_03e8e875-f63a-4f44-9618-82645aabf21c.dat\u0027)\n\nadata.var.to_csv(\u0027/galaxy/server/database/objects/0/b/2/dataset_0b2417ec-9e39-4b64-8576-83b71863fa3b.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2025-01-11T19:39:32.886001",  "user_email": "tests@fake.org" }, "output_problems": [  "Output var:  different than expected, difference (using diff):\n( /tmp/tmp02p9ck0sinspect.var.tabular v. /tmp/tmpneyevi04inspect.var.tabular )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-\"\"\n+index\n Gata2\n Gata1\n Fog1\n" ], "status": "failure", "test_index": 3, "time_seconds": 33.77874803543091, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/3/e/dataset_03e8e875-f63a-4f44-9618-82645aabf21c.dat')adata.var.to_csv('/galaxy/server/database/objects/0/b/2/dataset_0b2417ec-9e39-4b64-8576-83b71863fa3b.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="33.286051988601685">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "1c62cb71a6214662",   "src": "hda"  },  "inspect|info": "var" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/156/configs/tmpak7bmbgn\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/156/configs/tmpak7bmbgn\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:48:03.632034",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fvd7t",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "6ba634c3d544e248",  "inputs": {   "input": {    "id": "1c62cb71a6214662",    "src": "hda",    "uuid": "7f7b9e55-c867-4573-b947-eb6ed94a31b7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736624886.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:48:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736624885.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:48:05"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "16320.0000000",    "title": "Memory Allocated (MB)",    "value": "16320"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "var": {    "id": "195182e3bd426d31",    "src": "hda",    "uuid": "196ec922-425c-4c90-b6b4-68eda04d40ce"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 4, \"info\": \"var\"}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/7/f/7/dataset_7f7b9e55-c867-4573-b947-eb6ed94a31b7.dat\u0027)\n\nadata.var.to_csv(\u0027/galaxy/server/database/objects/1/9/6/dataset_196ec922-425c-4c90-b6b4-68eda04d40ce.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/7/f/7/dataset_7f7b9e55-c867-4573-b947-eb6ed94a31b7.dat\u0027)\n\nadata.var.to_csv(\u0027/galaxy/server/database/objects/1/9/6/dataset_196ec922-425c-4c90-b6b4-68eda04d40ce.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2025-01-11T19:48:17.486059",  "user_email": "tests@fake.org" }, "output_problems": [  "Output var:  different than expected, difference (using diff):\n( /tmp/tmphx71il2rinspect.var.tabular v. /tmp/tmphm3jnv97inspect.var.tabular )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-\"\"\n+index\n Gata2\n Gata1\n Fog1\n" ], "status": "failure", "test_index": 3, "time_seconds": 33.286051988601685, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/f/7/dataset_7f7b9e55-c867-4573-b947-eb6ed94a31b7.dat')adata.var.to_csv('/galaxy/server/database/objects/1/9/6/dataset_196ec922-425c-4c90-b6b4-68eda04d40ce.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="33.25250601768494">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/8/5/dataset_6854ce96-7f5d-40e3-8ab4-644de1c3c889.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/c/2/9/dataset_c2984e3d-d12e-4b9c-99ee-3bbea3e9636f.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="33.241501331329346">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/e/2/6/dataset_e26d517b-22d2-4cce-a63a-677cefc6995b.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/6/1/d/dataset_61d32677-cd5c-4e91-80ad-767ac9dec540.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="33.65435028076172">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/1/8/dataset_d18b379b-f255-4bfc-89f9-e5962aaff4bf.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/9/0/b/dataset_90b73261-5ec6-4ae4-bc8c-7e9bb038f136.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="34.46951460838318">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/6/c/dataset_96c20790-744b-4b6b-95d8-cb23ced97aef.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/b/8/2/dataset_b8222fd4-03b9-4b9b-94fb-3e76f8f479c4.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="35.16584515571594">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/4/1/a/dataset_41a254ff-b220-490b-b78f-4b0a58ee90af.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/d/0/c/dataset_d0cc8a43-7e1d-4ce4-9b6f-2bdde5574379.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="33.08741569519043">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/c/3/4/dataset_c34d15fc-2011-45d0-884e-70b2338b46c5.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/c/8/6/dataset_c863d4fb-90e4-4556-b34e-8c72b3566abe.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="35.70055961608887">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/2/2/dataset_1223c11d-fe92-4b29-9b5d-8ff935924715.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="34.970831871032715">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/e/0/2/dataset_e02077ef-34a3-474e-a469-b70a56ee8270.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="34.86278462409973">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/c/6/dataset_7c6cbe38-4885-44ab-802a-b8af85670806.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="35.3293673992157">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/8/2/0/dataset_8206cb4f-0507-4db0-a76a-06a541c8b64f.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="33.91897010803223">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/5/c/dataset_b5cdaa17-d15f-4904-8bfa-72076348d4e6.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="35.3110511302948">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/8/e/3/dataset_8e379452-11d1-4c58-888a-8218b7a080e0.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="34.13795447349548">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/5/9/dataset_2590c9ca-a1fb-40f6-bbdb-6cda5687c962.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/5/0/f/dataset_50f122b7-788a-42fa-b389-247da698ac78.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/7/d/c/dataset_7dc30f66-e200-419b-bc27-16025e6dfd27.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="33.27537417411804">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/0/9/dataset_109289fe-8eb7-48f3-a7c4-1b6484e5407d.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/d/5/f/dataset_d5f0c187-ce0f-468a-9067-e2b5eb7826ad.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/5/1/0/dataset_5102efb1-590e-485e-93b3-60b78d849dc3.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="35.237948179244995">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/3/c/dataset_03c7249a-a193-4034-bc5a-2a448ee566bf.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/2/2/2/dataset_22270488-e9b8-4990-a3fd-6b370b72f2bd.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/c/c/1/dataset_cc1f9dc8-cd27-4ceb-8f18-e7f3da73cc9b.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="36.46514964103699">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/a/0/dataset_1a097caa-0d3f-4d1c-aa32-8cd930c7d31f.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/b/7/6/dataset_b764fd13-e21a-4218-911b-0abed614c141.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/f/5/0/dataset_f50ef6ca-93b6-4360-b15e-082a818e8b81.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/a/4/e/dataset_a4e4cc9e-43a2-4e66-b719-0ecd8effbcbc.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/6/6/1/dataset_661c068a-5297-41e2-8bd3-bc51397b6d9c.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/d/5/c/dataset_d5c30b6e-4dbd-406e-bd5a-ae7b5da3fa73.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="35.26308059692383">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/3/6/1/dataset_36103ea3-55d2-493e-800d-7d04aed4d155.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/0/3/4/dataset_03465ddb-f63b-4462-92d7-fa4b696171b4.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/b/8/4/dataset_b845404b-5dd7-45c7-b8c7-7ce26c7eedf9.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/0/9/0/dataset_0904fb15-9d1d-475a-9969-e85ce60e68b5.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/7/e/5/dataset_7e5cce37-00b2-4932-b11a-f1399d396c31.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/d/0/f/dataset_d0f9e03c-fa52-496d-ad40-222289a8f7fc.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="36.135518312454224">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/4/5/dataset_145ecfbf-1662-41e7-abc0-036533c74e07.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/a/5/7/dataset_a579608a-f71d-42f6-913b-7de3554c0d5f.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/5/d/1/dataset_5d1d500c-b137-48f1-a532-38d18a6f6053.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/1/d/d/dataset_1dd9e211-7d22-4ee6-844b-c66e5e4dd429.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/9/1/4/dataset_914bccba-1d38-40c0-824d-d71c7233d7e3.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/b/c/0/dataset_bc0b6a7f-3043-4f03-9805-6b1edac6829f.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #1)" name="0" time="12.1730055809021">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.1730055809021, "tool_id": "bcftools_merge", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #2)" name="1" time="35.93321180343628">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #3)" name="2" time="34.266855001449585">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #4)" name="3" time="35.44707369804382">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #5)" name="4" time="34.816861391067505">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #6)" name="5" time="34.10717487335205">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [W::bcf_sr_add_reader] Using multiple unindexed files may produce errors, make sure chromosomes are in the same order!
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #7)" name="6" time="11.48784065246582">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 11.48784065246582, "tool_id": "bcftools_merge", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_missing2ref (Test #1)" name="0" time="39.14968705177307">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Filled 44 REF alleles
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #1)" name="0" time="65.94477319717407">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            converting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing with bwa-mem: index_dir/genome.fa.bwameth.c2t[bwa_index] Pack FASTA... 0.01 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.74 seconds elapse.[bwa_index] Update BWT... 0.01 sec[bwa_index] Pack forward-only FASTA... 0.01 sec[bwa_index] Construct SA from BWT and Occ... 0.13 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 1.025 sec; CPU: 0.914 sec--------------------Found BWA MEM indexrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 8  index_dir/genome.fa.bwameth.c2t /dev/stdin--------------------[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.033 CPU sec, 0.010 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t /dev/stdin[main] Real time: 0.122 sec; CPU: 0.042 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #2)" name="1" time="1645.9010310173035">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "64e01d4ad8a13954",   "src": "hda"  },  "referenceSource|source": "history",  "single_or_paired|input_mate1": {   "id": "8f6145ebbb14b4c8",   "src": "hdca"  },  "single_or_paired|single_or_paired_opts": "paired_collection" }, "job": {  "command_line": null,  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T18:46:17.450832",  "dependencies": [],  "exit_code": null,  "external_id": null,  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "eda0bf6a0071ad4f",  "inputs": {   "referenceSource|reference": {    "id": "eda0bf6a0071ad4f",    "src": "hda",    "uuid": "3543b5d2-e067-4abc-962c-bd35fd683de1"   },   "single_or_paired|input_mate11": {    "id": "c6892f2d51ed1f51",    "src": "hda",    "uuid": "e438d79d-b911-4a42-824f-907978597517"   },   "single_or_paired|input_mate12": {    "id": "3388a0e1cc737452",    "src": "hda",    "uuid": "7e5ef6a0-0a46-4979-ae99-4ab40006ea2e"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "333bbbcf1611029f",    "src": "hda",    "uuid": "7d485c77-166a-40cc-9687-72adf2173760"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 36, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 2, \"input_mate1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"single_or_paired_opts\": \"paired_collection\"}"  },  "state": "paused",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.7+galaxy0",  "tool_stderr": null,  "tool_stdout": null,  "update_time": "2025-01-11T18:46:22.688390",  "user_email": "tests@fake.org" }, "output_problems": [  "Timed out after 600.25 seconds waiting on tool test run.",  "Timed out after 600.25 seconds waiting on tool test run." ], "status": "failure", "test_index": 1, "time_seconds": 1645.9010310173035, "tool_id": "bwameth", "tool_version": "0.2.7+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #1)" name="0" time="69.50040125846863">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #2)" name="1" time="34.21727442741394">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #3)" name="2" time="35.129263401031494">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #4)" name="3" time="32.308090925216675">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #1)" name="0" time="52.25649452209473">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #2)" name="1" time="35.757723331451416">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #1)" name="0" time="42.17341756820679">
        
            
            <system-out><![CDATA[
            A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.A reference sequence has not been supplied. Amino acid translation will not be done.
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #2)" name="1" time="36.44919967651367">
        
            
            <system-out><![CDATA[
            A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.A reference sequence has not been supplied. Amino acid translation will not be done.sampleDELINSSNPvariants0115
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #3)" name="2" time="34.95595026016235">
        
            
            <system-out><![CDATA[
            A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.A reference sequence has not been supplied. Amino acid translation will not be done.sampleDELINSSNPvariants0010
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #4)" name="3" time="41.61566948890686">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #5)" name="4" time="41.06822991371155">
        
            
            <system-out><![CDATA[
            sampleDELINSSNPvariants0010
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #1)" name="0" time="38.12831974029541">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "reads": {   "id": "8b5ba30b0574f616",   "src": "hda"  },  "reference_source|ref": {   "id": "7cda0dd8371b005c",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/b/9/4/dataset_b945bb02-8ac0-463a-8f77-e5e1aa94f290.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/d/f/9/dataset_df968672-b5d1-4ab4-9860-1963e64ffbb1.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/3/2/7/dataset_327934ab-d598-42e2-9a08-16b86f70d928.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T19:57:05.325084",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-5qt62",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "a4d574f98bf76e50",  "inputs": {   "reads": {    "id": "8b5ba30b0574f616",    "src": "hda",    "uuid": "df968672-b5d1-4ab4-9860-1963e64ffbb1"   },   "reference_source|ref": {    "id": "7cda0dd8371b005c",    "src": "hda",    "uuid": "b945bb02-8ac0-463a-8f77-e5e1aa94f290"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "9eff46604aed542a",    "src": "hda",    "uuid": "327934ab-d598-42e2-9a08-16b86f70d928"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 260, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-11T19:57:21.325356",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 38.12831974029541, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #2)" name="1" time="33.611181020736694">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #3)" name="2" time="19.74159598350525">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 19.74159598350525, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #4)" name="3" time="35.227476596832275">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #5)" name="4" time="12.32181191444397">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.32181191444397, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #1)" name="0" time="72.74538707733154">
        
            
            <system-out><![CDATA[
            [19:14:08 - Predict] Reducing threads to 2, anymore is a waste.[19:14:08 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.[19:14:08 - Predict] Setting tensorflow inter/intra-op threads to 2/1.[19:14:08 - Predict] Processing region(s): ref:0-30[19:14:08 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5.[19:14:08 - DataStre] Writing sample registry.[19:14:08 - Predict] Processing 1 long region(s) with batching.[19:14:08 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf52025-01-11 19:14:08.781696: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMATo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.[19:14:09 - BAMFile] Creating pool of 16 BAM file sets.[19:14:09 - DLoader] Sample-0: started[19:14:09 - Sampler] Initializing sampler for consensus of region ref:0-30.[19:14:09 - DLoader] Sample-1: started[19:14:09 - DLoader] Sample-1: finished[19:14:09 - DLoader] Initialised. Batch size:100. Workers:2. Cache:800[19:14:09 - PWorker] Running inference for 0.0M draft bases.[19:14:09 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[19:14:09 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:14:09 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[19:14:09 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:14:09 - Sampler] Took 0.05s to make features.[19:14:09 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 10000, quarantining.[19:14:09 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 10000, quarantining.[19:14:09 - DLoader] Sample-0: finished[19:14:09 - DLoader] Batches ready: 0. Samples ready: 0 (0.0 batches)[19:14:09 - DataStre] Writing sample registry.[19:14:09 - PWorker] Processed 0 batches[19:14:09 - PWorker] All done, 2 remainder regions.[19:14:09 - Predict] Processing 2 short region(s).[19:14:09 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5[19:14:10 - DLoader] Sample-0: started[19:14:10 - Sampler] Initializing sampler for consensus of region ref:0-10.[19:14:10 - DLoader] Sample-1: started[19:14:10 - Sampler] Initializing sampler for consensus of region ref:14-30.[19:14:10 - DLoader] Initialised. Batch size:1. Workers:2. Cache:8[19:14:10 - PWorker] Running inference for 0.0M draft bases.[19:14:10 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:14:10 - Sampler] Took 0.04s to make features.[19:14:10 - Sampler] Pileup for ref:0.0-9.0 is of width 10[19:14:10 - DLoader] Sample-0: finished[19:14:10 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:14:10 - Sampler] Took 0.05s to make features.[19:14:10 - DLoader] Batches ready: 0. Samples ready: 0 (0.0 batches)[19:14:10 - Sampler] Pileup for ref:14.0-29.0 is of width 16[19:14:10 - DLoader] Sample-1: finished[19:14:10 - DataStre] Loaded sample register.[19:14:10 - DataStre] Adding ref:0.0-9.0 to sample registry[19:14:10 - DLoader] Batches ready: 1. Samples ready: 0 (0.0 batches)[19:14:10 - DataStre] Adding ref:14.0-29.0 to sample registry[19:14:10 - DLoader] Batches ready: 0. Samples ready: 0 (0.0 batches)[19:14:10 - DataStre] Writing sample registry.[19:14:10 - PWorker] Processed 2 batches[19:14:10 - PWorker] All done, 0 remainder regions.[19:14:10 - Predict] Finished processing all regions.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.[19:14:10 - BAMFile] Closing BAM file set.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #2)" name="1" time="39.601306200027466">
        
            
            <system-out><![CDATA[
            [19:14:55 - Predict] Reducing threads to 2, anymore is a waste.[19:14:55 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.[19:14:55 - Predict] Setting tensorflow inter/intra-op threads to 2/1.[19:14:55 - Predict] Processing region(s): ref:0-30[19:14:55 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.[19:14:55 - DataStre] Writing sample registry.[19:14:55 - Predict] Processing 1 long region(s) with batching.[19:14:55 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf52025-01-11 19:14:55.459823: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMATo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.[19:14:56 - BAMFile] Creating pool of 16 BAM file sets.[19:14:56 - DLoader] Sample-0: started[19:14:56 - Sampler] Initializing sampler for consensus of region ref:0-30.[19:14:56 - DLoader] Sample-1: started[19:14:56 - DLoader] Sample-1: finished[19:14:56 - DLoader] Initialised. Batch size:99. Workers:2. Cache:792[19:14:56 - PWorker] Running inference for 0.0M draft bases.[19:14:56 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[19:14:56 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:14:56 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[19:14:56 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:14:56 - Sampler] Took 0.03s to make features.[19:14:56 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 9999, quarantining.[19:14:56 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 9999, quarantining.[19:14:56 - DLoader] Sample-0: finished[19:14:56 - DLoader] Batches ready: 0. Samples ready: 0 (0.0 batches)[19:14:56 - DataStre] Writing sample registry.[19:14:56 - PWorker] Processed 0 batches[19:14:56 - PWorker] All done, 2 remainder regions.[19:14:56 - Predict] Processing 2 short region(s).[19:14:56 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5[19:14:56 - DLoader] Sample-0: started[19:14:56 - Sampler] Initializing sampler for consensus of region ref:0-10.[19:14:56 - DLoader] Sample-1: started[19:14:56 - Sampler] Initializing sampler for consensus of region ref:14-30.[19:14:56 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:14:56 - Sampler] Took 0.01s to make features.[19:14:56 - Sampler] Pileup for ref:0.0-9.0 is of width 10[19:14:56 - DLoader] Sample-0: finished[19:14:56 - DLoader] Initialised. Batch size:1. Workers:2. Cache:8[19:14:56 - PWorker] Running inference for 0.0M draft bases.[19:14:56 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:14:56 - Sampler] Took 0.02s to make features.[19:14:56 - Sampler] Pileup for ref:14.0-29.0 is of width 16[19:14:56 - DLoader] Batches ready: 0. Samples ready: 0 (0.0 batches)[19:14:56 - DLoader] Sample-1: finished[19:14:56 - DataStre] Loaded sample register.[19:14:56 - DataStre] Adding ref:0.0-9.0 to sample registry[19:14:56 - DLoader] Batches ready: 1. Samples ready: 0 (0.0 batches)[19:14:56 - DataStre] Adding ref:14.0-29.0 to sample registry[19:14:56 - DLoader] Batches ready: 0. Samples ready: 0 (0.0 batches)[19:14:56 - DataStre] Writing sample registry.[19:14:56 - PWorker] Processed 2 batches[19:14:56 - PWorker] All done, 0 remainder regions.[19:14:56 - Predict] Finished processing all regions.[19:14:56 - Predict] Validating and finalising output data.[19:14:56 - DataStre] Writing sample registry.[19:14:56 - DataStre] Created missing sample register.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.[19:14:57 - BAMFile] Closing BAM file set.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #1)" name="0" time="50.317429542541504">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "2ed4f4eaa51d6d2c",   "src": "hda"  } }, "job": {  "command_line": "poretools nucdist \u0027/galaxy/server/database/objects/e/c/1/dataset_ec1db282-e428-4fe0-a384-37ead896d6a1.dat\u0027 \u003e \u0027/galaxy/server/database/objects/e/4/d/dataset_e4d2bed5-6d74-4e01-803a-5d77f5122c83.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T19:15:30.531986",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-q8m8k",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "3be5f1ae5efa8022",  "inputs": {   "input": {    "id": "2ed4f4eaa51d6d2c",    "src": "hda",    "uuid": "ec1db282-e428-4fe0-a384-37ead896d6a1"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "75af011ea1f4ef45",    "src": "hda",    "uuid": "e4d2bed5-6d74-4e01-803a-5d77f5122c83"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_nucdist/poretools_nucdist/0.6.1a1.0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-11T19:16:00.730280",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_nucdist/poretools_nucdist/0.6.1a1.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_nucdist/poretools_nucdist/0.6.1a1.0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 50.317429542541504, "tool_id": "poretools_nucdist", "tool_version": "0.6.1a1.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #2)" name="1" time="32.92092990875244">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #1)" name="0" time="36.24188232421875">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #2)" name="1" time="34.10906982421875">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #11)" name="10" time="34.53704524040222">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "idxout_cond|barcode_tag": "BC",  "idxout_cond|idxout_select": "yes",  "idxout_cond|index_format": "n2i2",  "idxout_cond|write1st": true,  "input": {   "id": "6c1e318736d3aab0",   "src": "hda"  },  "output_fmt_cond|output_fmt_select": "fastqsanger",  "outputs": [   "r1",   "r2",   "s",   "other"  ] }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/0/4/7/dataset_0472f3f1-b8c5-495f-a1ff-4513a69f3c18.dat\u0027 \u003e input \u0026\u0026   samtools fastq     -1 forward.fastqsanger -2 reverse.fastqsanger -s singletons.fastqsanger --i1 i1.fastqsanger --i2 i2.fastqsanger --index-format n2i2 --barcode-tag BC  input  \u003e output.fastqsanger \u0026\u0026 ln -s output.fastqsanger output \u0026\u0026 ln -s forward.fastqsanger forward \u0026\u0026 ln -s reverse.fastqsanger reverse \u0026\u0026 ln -s singletons.fastqsanger singletons \u0026\u0026 ln -s i1.fastqsanger i1 \u0026\u0026 ln -s i2.fastqsanger i2",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:22:44.831483",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9pgtx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "38fd6a7048647cfb",  "inputs": {   "input": {    "id": "6c1e318736d3aab0",    "src": "hda",    "uuid": "0472f3f1-b8c5-495f-a1ff-4513a69f3c18"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623366.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:22:46"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623366.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:22:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "336cf53db3c0dfb3",    "src": "hda",    "uuid": "d4d7875e-9b4f-403e-bd47-1c6600d0fb12"   },   "i1": {    "id": "852b1b7988b30050",    "src": "hda",    "uuid": "d751717e-1a7c-445d-8b53-bb390d99b5f6"   },   "i2": {    "id": "09e3c63b823322b6",    "src": "hda",    "uuid": "cef84c7d-b50b-4091-a96b-7fdbae130a6e"   },   "output": {    "id": "d9bcefe1773ddcbc",    "src": "hda",    "uuid": "abee4a6e-613e-4bb6-9464-cf522a1a065a"   },   "reverse": {    "id": "58c5aacfe746b275",    "src": "hda",    "uuid": "cd84062f-d57f-4fe9-86c9-1594930bfe0a"   },   "singletons": {    "id": "4c9b88b7c42d3beb",    "src": "hda",    "uuid": "fe74b86f-9652-4f70-9c1c-c737e4630989"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": null,   "copy_tags": "false",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 1, \"barcode_tag\": \"BC\", \"idxout_select\": \"yes\", \"index_format\": \"n2i2\", \"quality_tag\": null, \"write1st\": true, \"write2nd\": true}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 0, \"default_quality\": \"\", \"ilumina_casava\": false, \"output_fmt_select\": \"fastqsanger\", \"output_quality\": false}",   "outputs": "[\"r1\", \"r2\", \"s\", \"other\"]",   "read_numbering": "\"\""  },  "state": "ok",  "stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:22:57.695259",  "user_email": "tests@fake.org" }, "output_problems": [  "Output i1:  different than expected, difference (using diff):\n( /tmp/tmp9_dfz7n5bc.fq.expected v. /tmp/tmpk1cn7hjqbc.fq.expected )\n--- local_file\n+++ history_data\n@@ -9,4 +9,4 @@\n @ref1_grp2_p001\n CA\n +\n-\"\"\n+cd\n" ], "status": "failure", "test_index": 10, "time_seconds": 34.53704524040222, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #12)" name="11" time="36.126779317855835">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "idxout_cond|barcode_tag": "BC",  "idxout_cond|idxout_select": "yes",  "idxout_cond|index_format": "n2i2",  "idxout_cond|write1st": true,  "input": {   "id": "81551d440e822efe",   "src": "hda"  },  "output_fmt_cond|output_fmt_select": "fastqsanger",  "output_fmt_cond|output_quality": true,  "outputs": [   "r1",   "r2",   "s",   "other"  ] }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/9/6/3/dataset_9638c2e4-8ed9-42bf-afa3-b571e85db665.dat\u0027 \u003e input \u0026\u0026   samtools fastq -O    -1 forward.fastqsanger -2 reverse.fastqsanger -s singletons.fastqsanger --i1 i1.fastqsanger --i2 i2.fastqsanger --index-format n2i2 --barcode-tag BC  input  \u003e output.fastqsanger \u0026\u0026 ln -s output.fastqsanger output \u0026\u0026 ln -s forward.fastqsanger forward \u0026\u0026 ln -s reverse.fastqsanger reverse \u0026\u0026 ln -s singletons.fastqsanger singletons \u0026\u0026 ln -s i1.fastqsanger i1 \u0026\u0026 ln -s i2.fastqsanger i2",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:23:19.739760",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-79d9f",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "78bfd0cee566bf54",  "inputs": {   "input": {    "id": "81551d440e822efe",    "src": "hda",    "uuid": "9638c2e4-8ed9-42bf-afa3-b571e85db665"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623401.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:23:21"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623401.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:23:21"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "5bd1a9b749bbfcaa",    "src": "hda",    "uuid": "a0f839be-a6d3-493c-90ad-5427a974f79d"   },   "i1": {    "id": "c8884c5078641245",    "src": "hda",    "uuid": "64fb119a-32da-4a59-a586-b37771a404b2"   },   "i2": {    "id": "2714e32b01ffb11e",    "src": "hda",    "uuid": "275472c3-0451-47cd-bad2-9d972c917ae5"   },   "output": {    "id": "eda8c3cf7555ecbe",    "src": "hda",    "uuid": "12c052bf-3570-43af-a416-ec32986c591f"   },   "reverse": {    "id": "012e2ae0e57b11b9",    "src": "hda",    "uuid": "c86f6e34-b923-4b10-a161-189da748cd3c"   },   "singletons": {    "id": "1b7c26ebccf473b8",    "src": "hda",    "uuid": "17f42e2c-f017-4e59-902f-2bbc7f8c4465"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": null,   "copy_tags": "false",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 1, \"barcode_tag\": \"BC\", \"idxout_select\": \"yes\", \"index_format\": \"n2i2\", \"quality_tag\": null, \"write1st\": true, \"write2nd\": true}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 0, \"default_quality\": \"\", \"ilumina_casava\": false, \"output_fmt_select\": \"fastqsanger\", \"output_quality\": true}",   "outputs": "[\"r1\", \"r2\", \"s\", \"other\"]",   "read_numbering": "\"\""  },  "state": "ok",  "stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:23:33.875431",  "user_email": "tests@fake.org" }, "output_problems": [  "Output i1:  different than expected, difference (using diff):\n( /tmp/tmppsgxe3tmbc10.fq.expected v. /tmp/tmprrln_ca4bc10.fq.expected )\n--- local_file\n+++ history_data\n@@ -9,4 +9,4 @@\n @ref1_grp2_p001\n CA\n +\n-\"\"\n+cd\n" ], "status": "failure", "test_index": 11, "time_seconds": 36.126779317855835, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #13)" name="12" time="10.544796466827393">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 10.544796466827393, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #14)" name="13" time="34.39216876029968">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #15)" name="14" time="25.565788507461548">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "copy_tags": true,  "input": {   "id": "1401049382662c1e",   "src": "hda"  },  "output_fmt_cond|output_fmt_select": "fastqsanger",  "outputs": [   "r1",   "r2",   "s",   "other"  ],  "read_numbering": "-N" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/9/5/3/dataset_953cc6fc-bb31-4562-b90d-be98f331fadb.dat\u0027 \u003e input \u0026\u0026   samtools fastq   -t -N -1 forward.fastqsanger -2 reverse.fastqsanger -s singletons.fastqsanger  input  \u003e output.fastqsanger \u0026\u0026 ln -s output.fastqsanger output \u0026\u0026 ln -s forward.fastqsanger forward \u0026\u0026 ln -s reverse.fastqsanger reverse \u0026\u0026 ln -s singletons.fastqsanger singletons",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T19:24:39.950642",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-24v2s",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "c9be58a16597d2a4",  "inputs": {   "input": {    "id": "1401049382662c1e",    "src": "hda",    "uuid": "953cc6fc-bb31-4562-b90d-be98f331fadb"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "444c0d000409f956",    "src": "hda",    "uuid": "09b5c3c7-9ceb-4557-8ac3-643972a5e608"   },   "output": {    "id": "f0eef9b359e388f1",    "src": "hda",    "uuid": "3fa46265-1311-439a-a729-8f127ac43373"   },   "reverse": {    "id": "189dae0fd05a3761",    "src": "hda",    "uuid": "77ab49b5-d19d-47c2-9061-247a9cdd15af"   },   "singletons": {    "id": "5c2b2c6778121ac9",    "src": "hda",    "uuid": "67a4ff2d-df71-4ebc-9feb-b857260cd0e1"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": null,   "copy_tags": "true",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 0, \"idxout_select\": \"no\"}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 0, \"default_quality\": \"\", \"ilumina_casava\": false, \"output_fmt_select\": \"fastqsanger\", \"output_quality\": false}",   "outputs": "[\"r1\", \"r2\", \"s\", \"other\"]",   "read_numbering": "\"-N\""  },  "state": "error",  "stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:24:45.800642",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1, exit_code: None, stderr: [M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1, exit_code: None, stderr: [M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1, exit_code: None, stderr: [M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1, exit_code: None, stderr: [M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1, exit_code: None, stderr: [M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n." ], "status": "failure", "test_index": 14, "time_seconds": 25.565788507461548, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #16)" name="15" time="33.2800657749176">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "copy_arb_tags": "MD,ia",  "copy_tags": true,  "input": {   "id": "46463b53b920235a",   "src": "hda"  },  "output_fmt_cond|output_fmt_select": "fastqsanger",  "outputs": [   "r1",   "r2",   "s",   "other"  ],  "read_numbering": "-N" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/5/e/0/dataset_5e0e417d-f29b-41e0-80e3-b5890bd0a4c0.dat\u0027 \u003e input \u0026\u0026   samtools fastq   -t -T \u0027MD,ia\u0027 -N -1 forward.fastqsanger -2 reverse.fastqsanger -s singletons.fastqsanger  input  \u003e output.fastqsanger \u0026\u0026 ln -s output.fastqsanger output \u0026\u0026 ln -s forward.fastqsanger forward \u0026\u0026 ln -s reverse.fastqsanger reverse \u0026\u0026 ln -s singletons.fastqsanger singletons",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:25:05.507022",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-b4qm4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "61a9ea94927c4f15",  "inputs": {   "input": {    "id": "46463b53b920235a",    "src": "hda",    "uuid": "5e0e417d-f29b-41e0-80e3-b5890bd0a4c0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623507.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:25:07"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623507.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:25:07"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "128e42b3df55b930",    "src": "hda",    "uuid": "eb90f139-ec97-4f4d-913e-3d6b9e37a4de"   },   "output": {    "id": "9dae9fbbfd7a182f",    "src": "hda",    "uuid": "7fce38e0-23b8-4025-9565-8fbb54dec67d"   },   "reverse": {    "id": "f715a7a4b76ed240",    "src": "hda",    "uuid": "f133c303-cb7e-4d25-8976-f95df5c95a11"   },   "singletons": {    "id": "0f576de02ad9d9db",    "src": "hda",    "uuid": "75747aeb-e532-43dd-a40c-40578ce74de8"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": "\"MD,ia\"",   "copy_tags": "true",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 0, \"idxout_select\": \"no\"}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 0, \"default_quality\": \"\", \"ilumina_casava\": false, \"output_fmt_select\": \"fastqsanger\", \"output_quality\": false}",   "outputs": "[\"r1\", \"r2\", \"s\", \"other\"]",   "read_numbering": "\"-N\""  },  "state": "ok",  "stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:25:18.784956",  "user_email": "tests@fake.org" }, "output_problems": [  "Output forward:  different than expected, difference (using diff):\n( /tmp/tmp1p2a7jq07.1.fq.expected v. /tmp/tmp7k4osw1i7.1.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,68 +1,68 @@\n-@ref1_grp1_p001/1\tMD:Z:10\tRG:Z:grp1\tBC:Z:AC-GT\n+@ref1_grp1_p001/1\tRG:Z:grp1\tBC:Z:AC-GT\tMD:Z:10\n CGAGCTCGGT\n +\n !!!!!!!!!!\n-@ref1_grp1_p002/1\tMD:Z:10\tRG:Z:grp1\tBC:Z:AATT+CCGG\n+@ref1_grp1_p002/1\tRG:Z:grp1\tBC:Z:AATT+CCGG\tMD:Z:10\n CTCGGTACCC\n +\n ##########\n-@ref1_grp1_p003/1\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p003/1\tRG:Z:grp1\tMD:Z:10\n GTACCCGGGG\n +\n %%%%%%%%%%\n-@ref1_grp1_p004/1\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p004/1\tRG:Z:grp1\tMD:Z:10\n CCGGGGATCC\n +\n \u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\n-@ref1_grp1_p005/1\tMD:Z:10\tRG:Z:grp1\tia:i:40000\n+@ref1_grp1_p005/1\tRG:Z:grp1\tMD:Z:10\tia:i:40000\n********\n*SNIP *\n********\n-@ref2_grp3_p001/1\tMD:Z:15\tRG:Z:grp3\n+@ref2_grp3_p001/1\tRG:Z:grp3\tMD:Z:15\n GTGACACTATAGAAT\n +\n ~~~~~~~~~~~~~~~\n-@ref2_grp3_p002/1\tMD:Z:15\tRG:Z:grp3\n+@ref2_grp3_p002/1\tRG:Z:grp3\tMD:Z:15\n CTGTTTCCTGTGTGA\n +\n {{{{{{{{{{{{{{{\n-@ref2_grp3_p003/1\tMD:Z:1T0T0C0T0A0T0A0G0T0G0T0C0A0C0\tRG:Z:grp3\n+@ref2_grp3_p003/1\tRG:Z:grp3\tMD:Z:1T0T0C0T0A0T0A0G0T0G0T0C0A0C0\n ACGTMRWSYKVHDBN\n +\n 0123456789abcd!\n-@ref12_grp1_p001/1\tMD:Z:10\tRG:Z:grp1\n+@ref12_grp1_p001/1\tRG:Z:grp1\tMD:Z:10\n TGCAGGCATG\n +\n AAAAAAAAAA\n-@ref12_grp2_p001/1\tMD:Z:10\tRG:Z:grp2\n+@ref12_grp2_p001/1\tRG:Z:grp2\tMD:Z:10\n CAAGCTTGAG\n +\n AAAAAAAAAA\n",  "Output reverse:  different than expected, difference (using diff):\n( /tmp/tmpsk2hxwh97.2.fq.expected v. /tmp/tmpz3z0wl9w7.2.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,68 +1,68 @@\n-@ref1_grp1_p001/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p001/2\tRG:Z:grp1\tMD:Z:10\n GTCGACTCTA\n +\n ----------\n-@ref1_grp1_p002/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p002/2\tRG:Z:grp1\tMD:Z:10\n GCAGGTCGAC\n +\n //////////\n-@ref1_grp1_p003/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p003/2\tRG:Z:grp1\tMD:Z:10\n GCCTGCAGGT\n +\n 1111111111\n-@ref1_grp1_p004/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p004/2\tRG:Z:grp1\tMD:Z:10\n GCATGCCTGC\n +\n 3333333333\n-@ref1_grp1_p005/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p005/2\tRG:Z:grp1\tMD:Z:10\n********\n*SNIP *\n********\n-@ref2_grp3_p001/2\tMD:Z:0T0A0A1C0A0T0G0G0T0C0A1A0G0\tRG:Z:grp3\n+@ref2_grp3_p001/2\tRG:Z:grp3\tMD:Z:0T0A0A1C0A0T0G0G0T0C0A1A0G0\n CTGTTTCCTGTGTGA\n +\n |||||||||||||||\n-@ref2_grp3_p002/2\tMD:Z:15\tRG:Z:grp3\n+@ref2_grp3_p002/2\tRG:Z:grp3\tMD:Z:15\n CGCCAAGCTATTTAG\n +\n }}}}}}}}}}}}}}}\n-@ref2_grp3_p003/2\tMD:Z:0A0T0T0C0T0A0T0A0G0T0G0T1A0C0\tRG:Z:grp3\n+@ref2_grp3_p003/2\tRG:Z:grp3\tMD:Z:0A0T0T0C0T0A0T0A0G0T0G0T1A0C0\n ACGTMRWSYKVHDBN\n +\n 0123456789abcd!\n-@ref12_grp1_p001/2\tMD:Z:10\tRG:Z:grp1\n+@ref12_grp1_p001/2\tRG:Z:grp1\tMD:Z:10\n CACTATAGAA\n +\n BBBBBBBBBB\n-@ref12_grp2_p001/2\tMD:Z:10\tRG:Z:grp2\n+@ref12_grp2_p001/2\tRG:Z:grp2\tMD:Z:10\n ATTTAGGTGA\n +\n BBBBBBBBBB\n",  "Output singletons:  different than expected, difference (using diff):\n( /tmp/tmp2e5_lxv77.s.fq.expected v. /tmp/tmpccdpzubt7.s.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-@ref1_grp2_p002a/1\tMD:Z:10\tRG:Z:grp2\n+@ref1_grp2_p002a/1\tRG:Z:grp2\tMD:Z:10\n CGGTACCCGG\n +\n $$$$$$$$$$\n" ], "status": "failure", "test_index": 15, "time_seconds": 33.2800657749176, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #17)" name="16" time="33.12066721916199">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "copy_arb_tags": "MD,ia",  "copy_tags": true,  "input": {   "id": "7f2df360ae1d9f21",   "src": "hda"  },  "output_fmt_cond|ilumina_casava": true,  "output_fmt_cond|output_fmt_select": "fastqsanger",  "outputs": [   "r1",   "r2",   "s",   "other"  ],  "read_numbering": "-N" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/9/0/6/dataset_906d137f-46bf-4e78-84aa-31edb57bf220.dat\u0027 \u003e input \u0026\u0026   samtools fastq  -i -t -T \u0027MD,ia\u0027 -N -1 forward.fastqsanger -2 reverse.fastqsanger -s singletons.fastqsanger  input  \u003e output.fastqsanger \u0026\u0026 ln -s output.fastqsanger output \u0026\u0026 ln -s forward.fastqsanger forward \u0026\u0026 ln -s reverse.fastqsanger reverse \u0026\u0026 ln -s singletons.fastqsanger singletons",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:25:39.361828",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jft5q",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "4a8f46fe9bb85dc6",  "inputs": {   "input": {    "id": "7f2df360ae1d9f21",    "src": "hda",    "uuid": "906d137f-46bf-4e78-84aa-31edb57bf220"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623540.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:25:40"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623540.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:25:40"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "278107c69cf7e9d7",    "src": "hda",    "uuid": "5e2cc197-90d0-4f46-9efe-5b45289e1021"   },   "output": {    "id": "f6e461b398a00c50",    "src": "hda",    "uuid": "2a6e2f98-90c3-43fb-9867-ae16ef5af049"   },   "reverse": {    "id": "be4c4b00991c279b",    "src": "hda",    "uuid": "0c184212-c874-48f5-abad-761c5d9d92ba"   },   "singletons": {    "id": "a53ff077f5cf110d",    "src": "hda",    "uuid": "3bfa5c24-d715-4069-907e-ea5f3cb0ea0f"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": "\"MD,ia\"",   "copy_tags": "true",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 0, \"idxout_select\": \"no\"}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 0, \"default_quality\": \"\", \"ilumina_casava\": true, \"output_fmt_select\": \"fastqsanger\", \"output_quality\": false}",   "outputs": "[\"r1\", \"r2\", \"s\", \"other\"]",   "read_numbering": "\"-N\""  },  "state": "ok",  "stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:25:52.069979",  "user_email": "tests@fake.org" }, "output_problems": [  "Output forward:  different than expected, difference (using diff):\n( /tmp/tmpzr111meb7.1.fq.expected v. /tmp/tmp4y_04wik7.1.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,68 +1,68 @@\n-@ref1_grp1_p001/1\tMD:Z:10\tRG:Z:grp1\tBC:Z:AC-GT\n+@ref1_grp1_p001/1\tRG:Z:grp1\tBC:Z:AC-GT\tMD:Z:10\n CGAGCTCGGT\n +\n !!!!!!!!!!\n-@ref1_grp1_p002/1\tMD:Z:10\tRG:Z:grp1\tBC:Z:AATT+CCGG\n+@ref1_grp1_p002/1\tRG:Z:grp1\tBC:Z:AATT+CCGG\tMD:Z:10\n CTCGGTACCC\n +\n ##########\n-@ref1_grp1_p003/1\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p003/1\tRG:Z:grp1\tMD:Z:10\n GTACCCGGGG\n +\n %%%%%%%%%%\n-@ref1_grp1_p004/1\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p004/1\tRG:Z:grp1\tMD:Z:10\n CCGGGGATCC\n +\n \u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\n-@ref1_grp1_p005/1\tMD:Z:10\tRG:Z:grp1\tia:i:40000\n+@ref1_grp1_p005/1\tRG:Z:grp1\tMD:Z:10\tia:i:40000\n********\n*SNIP *\n********\n-@ref2_grp3_p001/1\tMD:Z:15\tRG:Z:grp3\n+@ref2_grp3_p001/1\tRG:Z:grp3\tMD:Z:15\n GTGACACTATAGAAT\n +\n ~~~~~~~~~~~~~~~\n-@ref2_grp3_p002/1\tMD:Z:15\tRG:Z:grp3\n+@ref2_grp3_p002/1\tRG:Z:grp3\tMD:Z:15\n CTGTTTCCTGTGTGA\n +\n {{{{{{{{{{{{{{{\n-@ref2_grp3_p003/1\tMD:Z:1T0T0C0T0A0T0A0G0T0G0T0C0A0C0\tRG:Z:grp3\n+@ref2_grp3_p003/1\tRG:Z:grp3\tMD:Z:1T0T0C0T0A0T0A0G0T0G0T0C0A0C0\n ACGTMRWSYKVHDBN\n +\n 0123456789abcd!\n-@ref12_grp1_p001/1\tMD:Z:10\tRG:Z:grp1\n+@ref12_grp1_p001/1\tRG:Z:grp1\tMD:Z:10\n TGCAGGCATG\n +\n AAAAAAAAAA\n-@ref12_grp2_p001/1\tMD:Z:10\tRG:Z:grp2\n+@ref12_grp2_p001/1\tRG:Z:grp2\tMD:Z:10\n CAAGCTTGAG\n +\n AAAAAAAAAA\n",  "Output reverse:  different than expected, difference (using diff):\n( /tmp/tmpfsz6l38j7.2.fq.expected v. /tmp/tmpac_tja4w7.2.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,68 +1,68 @@\n-@ref1_grp1_p001/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p001/2\tRG:Z:grp1\tMD:Z:10\n GTCGACTCTA\n +\n ----------\n-@ref1_grp1_p002/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p002/2\tRG:Z:grp1\tMD:Z:10\n GCAGGTCGAC\n +\n //////////\n-@ref1_grp1_p003/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p003/2\tRG:Z:grp1\tMD:Z:10\n GCCTGCAGGT\n +\n 1111111111\n-@ref1_grp1_p004/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p004/2\tRG:Z:grp1\tMD:Z:10\n GCATGCCTGC\n +\n 3333333333\n-@ref1_grp1_p005/2\tMD:Z:10\tRG:Z:grp1\n+@ref1_grp1_p005/2\tRG:Z:grp1\tMD:Z:10\n********\n*SNIP *\n********\n-@ref2_grp3_p001/2\tMD:Z:0T0A0A1C0A0T0G0G0T0C0A1A0G0\tRG:Z:grp3\n+@ref2_grp3_p001/2\tRG:Z:grp3\tMD:Z:0T0A0A1C0A0T0G0G0T0C0A1A0G0\n CTGTTTCCTGTGTGA\n +\n |||||||||||||||\n-@ref2_grp3_p002/2\tMD:Z:15\tRG:Z:grp3\n+@ref2_grp3_p002/2\tRG:Z:grp3\tMD:Z:15\n CGCCAAGCTATTTAG\n +\n }}}}}}}}}}}}}}}\n-@ref2_grp3_p003/2\tMD:Z:0A0T0T0C0T0A0T0A0G0T0G0T1A0C0\tRG:Z:grp3\n+@ref2_grp3_p003/2\tRG:Z:grp3\tMD:Z:0A0T0T0C0T0A0T0A0G0T0G0T1A0C0\n ACGTMRWSYKVHDBN\n +\n 0123456789abcd!\n-@ref12_grp1_p001/2\tMD:Z:10\tRG:Z:grp1\n+@ref12_grp1_p001/2\tRG:Z:grp1\tMD:Z:10\n CACTATAGAA\n +\n BBBBBBBBBB\n-@ref12_grp2_p001/2\tMD:Z:10\tRG:Z:grp2\n+@ref12_grp2_p001/2\tRG:Z:grp2\tMD:Z:10\n ATTTAGGTGA\n +\n BBBBBBBBBB\n",  "Output singletons:  different than expected, difference (using diff):\n( /tmp/tmp9nm07tie7.s.fq.expected v. /tmp/tmpih5qaicq7.s.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n-@ref1_grp2_p002a/1\tMD:Z:10\tRG:Z:grp2\n+@ref1_grp2_p002a/1\tRG:Z:grp2\tMD:Z:10\n CGGTACCCGG\n +\n $$$$$$$$$$\n" ], "status": "failure", "test_index": 16, "time_seconds": 33.12066721916199, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #18)" name="17" time="34.58698749542236">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "idxout_cond|barcode_tag": "BC",  "idxout_cond|idxout_select": "yes",  "idxout_cond|index_format": "n2i2",  "idxout_cond|write1st": true,  "input": {   "id": "4a846ad4bec9d3b4",   "src": "hda"  },  "output_fmt_cond|ilumina_casava": true,  "output_fmt_cond|output_fmt_select": "fastqsanger",  "outputs": [   "r1",   "r2",   "s",   "other"  ] }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/a/3/0/dataset_a305f724-ff02-4d22-ae83-721d85fe3a91.dat\u0027 \u003e input \u0026\u0026   samtools fastq  -i   -1 forward.fastqsanger -2 reverse.fastqsanger -s singletons.fastqsanger --i1 i1.fastqsanger --i2 i2.fastqsanger --index-format n2i2 --barcode-tag BC  input  \u003e output.fastqsanger \u0026\u0026 ln -s output.fastqsanger output \u0026\u0026 ln -s forward.fastqsanger forward \u0026\u0026 ln -s reverse.fastqsanger reverse \u0026\u0026 ln -s singletons.fastqsanger singletons \u0026\u0026 ln -s i1.fastqsanger i1 \u0026\u0026 ln -s i2.fastqsanger i2",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:26:12.484133",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fgcsk",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "b383f3f55f8f6133",  "inputs": {   "input": {    "id": "4a846ad4bec9d3b4",    "src": "hda",    "uuid": "a305f724-ff02-4d22-ae83-721d85fe3a91"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623574.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:26:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623574.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:26:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "281c91a3cd3fdd57",    "src": "hda",    "uuid": "eac75850-0cec-42cd-b905-2a0fb831f66e"   },   "i1": {    "id": "35d1133cdc49e4a2",    "src": "hda",    "uuid": "d8767376-b98a-4de7-93c3-f38eb77b671d"   },   "i2": {    "id": "ab7fa850f14ba3b4",    "src": "hda",    "uuid": "fc4ac672-9122-41ca-81a1-d73bc6a664b1"   },   "output": {    "id": "9b9b380a28936b53",    "src": "hda",    "uuid": "7fbacac7-9d56-417e-b66f-a4423ddbcba3"   },   "reverse": {    "id": "f743fd076530151c",    "src": "hda",    "uuid": "11865ed0-3a5d-4a24-b43f-3609ab69d3a9"   },   "singletons": {    "id": "b5e6fcf09db786af",    "src": "hda",    "uuid": "52044bb9-5a67-408f-9b57-f7146d34ec47"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": null,   "copy_tags": "false",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 1, \"barcode_tag\": \"BC\", \"idxout_select\": \"yes\", \"index_format\": \"n2i2\", \"quality_tag\": null, \"write1st\": true, \"write2nd\": true}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 0, \"default_quality\": \"\", \"ilumina_casava\": true, \"output_fmt_select\": \"fastqsanger\", \"output_quality\": false}",   "outputs": "[\"r1\", \"r2\", \"s\", \"other\"]",   "read_numbering": "\"\""  },  "state": "ok",  "stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 2 singletons\n[M::bam2fq_mainloop] processed 36 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:26:26.424370",  "user_email": "tests@fake.org" }, "output_problems": [  "Output forward:  different than expected, difference (using diff):\n( /tmp/tmp8g7vsn618.1.fq.expected v. /tmp/tmp41_816cx8.1.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,68 +1,68 @@\n-@ref1_grp1_p001 1:N:0:ACGT\n+@ref1_grp1_p001 1:N:0:GT\n CGAGCTCGGT\n +\n !!!!!!!!!!\n-@ref1_grp1_p002 1:N:0:AATTCCGG\n+@ref1_grp1_p002 1:N:0:TT\n CTCGGTACCC\n +\n ##########\n-@ref1_grp1_p003 1:N:0:0\n+@ref1_grp1_p003\n GTACCCGGGG\n +\n %%%%%%%%%%\n-@ref1_grp1_p004 1:N:0:0\n+@ref1_grp1_p004\n CCGGGGATCC\n +\n \u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\n-@ref1_grp1_p005 1:N:0:0\n+@ref1_grp1_p005\n********\n*SNIP *\n********\n-@ref2_grp3_p001 1:N:0:0\n+@ref2_grp3_p001\n GTGACACTATAGAAT\n +\n ~~~~~~~~~~~~~~~\n-@ref2_grp3_p002 1:N:0:0\n+@ref2_grp3_p002\n CTGTTTCCTGTGTGA\n +\n {{{{{{{{{{{{{{{\n-@ref2_grp3_p003 1:N:0:0\n+@ref2_grp3_p003\n ACGTMRWSYKVHDBN\n +\n 0123456789abcd!\n-@ref12_grp1_p001 1:N:0:0\n+@ref12_grp1_p001\n TGCAGGCATG\n +\n AAAAAAAAAA\n-@ref12_grp2_p001 1:N:0:0\n+@ref12_grp2_p001\n CAAGCTTGAG\n +\n AAAAAAAAAA\n",  "Output reverse:  different than expected, difference (using diff):\n( /tmp/tmppuqmx3db8.2.fq.expected v. /tmp/tmpllnq6kyi8.2.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,68 +1,68 @@\n-@ref1_grp1_p001 2:N:0:ACGT\n+@ref1_grp1_p001 1:N:0:GT\n GTCGACTCTA\n +\n ----------\n-@ref1_grp1_p002 2:N:0:AATTCCGG\n+@ref1_grp1_p002 1:N:0:TT\n GCAGGTCGAC\n +\n //////////\n-@ref1_grp1_p003 2:N:0:0\n+@ref1_grp1_p003\n GCCTGCAGGT\n +\n 1111111111\n-@ref1_grp1_p004 2:N:0:0\n+@ref1_grp1_p004\n GCATGCCTGC\n +\n 3333333333\n-@ref1_grp1_p005 2:N:0:0\n+@ref1_grp1_p005\n********\n*SNIP *\n********\n-@ref2_grp3_p001 2:N:0:0\n+@ref2_grp3_p001\n CTGTTTCCTGTGTGA\n +\n |||||||||||||||\n-@ref2_grp3_p002 2:N:0:0\n+@ref2_grp3_p002\n CGCCAAGCTATTTAG\n +\n }}}}}}}}}}}}}}}\n-@ref2_grp3_p003 2:N:0:0\n+@ref2_grp3_p003\n ACGTMRWSYKVHDBN\n +\n 0123456789abcd!\n-@ref12_grp1_p001 2:N:0:0\n+@ref12_grp1_p001\n CACTATAGAA\n +\n BBBBBBBBBB\n-@ref12_grp2_p001 2:N:0:0\n+@ref12_grp2_p001\n ATTTAGGTGA\n +\n BBBBBBBBBB\n",  "Output singletons:  different than expected, difference (using diff):\n( /tmp/tmp7utkv67i8.s.fq.expected v. /tmp/tmpns2ovi4e8.s.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,8 +1,8 @@\n-@ref1_grp2_p002a 1:N:0:0\n+@ref1_grp2_p002a\n CGGTACCCGG\n +\n $$$$$$$$$$\n-@unaligned_grp3_p001 1:N:0:0\n+@unaligned_grp3_p001\n CACTCGTTCATGACG\n +\n 0123456789abcde\n",  "Output i1:  different than expected, difference (using diff):\n( /tmp/tmpdfsirv448.i.fq.expected v. /tmp/tmpv5oof9zb8.i.fq.expected )\n--- local_file\n+++ history_data\n@@ -1,12 +1,12 @@\n-@ref1_grp1_p001 1:N:0:ACGT\n+@ref1_grp1_p001 1:N:0:GT\n GT\n +\n \"\"\n-@ref1_grp1_p002 1:N:0:AATTCCGG\n+@ref1_grp1_p002 1:N:0:TT\n TT\n +\n \"\"\n-@ref1_grp2_p001 1:N:0:TGCA\n+@ref1_grp2_p001 1:N:0:CA\n CA\n +\n-\"\"\n+cd\n" ], "status": "failure", "test_index": 17, "time_seconds": 34.58698749542236, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #3)" name="2" time="35.61762475967407">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #4)" name="3" time="32.78074383735657">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #5)" name="4" time="33.48147010803223">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "07b9f759254231ea",   "src": "hda"  },  "output_fmt_cond|output_fmt_select": "fastqsanger.gz",  "outputs": [   "r0",   "r1",   "r2"  ] }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/5/1/7/dataset_51761c9c-7d2d-44ed-8ec6-7cdf51d59595.dat\u0027 \u003e input \u0026\u0026   samtools fastq     -0 nonspecific.fastqsanger.gz -1 forward.fastqsanger.gz -2 reverse.fastqsanger.gz  input  \u003e /dev/null \u0026\u0026 ln -s nonspecific.fastqsanger.gz nonspecific \u0026\u0026 ln -s forward.fastqsanger.gz forward \u0026\u0026 ln -s reverse.fastqsanger.gz reverse",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:19:15.483536",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9bq5k",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "d2715826167cfbc4",  "inputs": {   "input": {    "id": "07b9f759254231ea",    "src": "hda",    "uuid": "51761c9c-7d2d-44ed-8ec6-7cdf51d59595"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623157.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:19:17"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623157.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:19:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "668d58454b6a991e",    "src": "hda",    "uuid": "7a87ea9e-b3f5-4f58-b9a4-125d43b86709"   },   "nonspecific": {    "id": "cd734e4ccc07b946",    "src": "hda",    "uuid": "8dcd2240-5af8-41e9-a5e1-75b92d3485ff"   },   "reverse": {    "id": "01157dec13498585",    "src": "hda",    "uuid": "0c4ceb83-5850-45b2-99bd-6ac4043e7d28"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": null,   "copy_tags": "false",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 0, \"idxout_select\": \"no\"}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 2, \"default_quality\": \"\", \"ilumina_casava\": false, \"output_fmt_select\": \"fastqsanger.gz\", \"output_quality\": false}",   "outputs": "[\"r0\", \"r1\", \"r2\"]",   "read_numbering": "\"\""  },  "state": "ok",  "stderr": "[M::bam2fq_mainloop] discarded 0 singletons\n[M::bam2fq_mainloop] processed 400 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 0 singletons\n[M::bam2fq_mainloop] processed 400 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:19:28.365649",  "user_email": "tests@fake.org" }, "output_problems": [  "Output nonspecific:  different than expected, difference (using diff):\n( /tmp/tmperan6h45samtools_fastx-out2-1.fastq.gz v. /tmp/tmpcx8_v_jqsamtools_fastx-out2-1.fastq.gz )\nBinary data detected, not displaying diff",  "Output forward:  different than expected, difference (using diff):\n( /tmp/tmpvqq_wwmlsamtools_fastx-out2-2.fastq.gz v. /tmp/tmpthxncwvosamtools_fastx-out2-2.fastq.gz )\nBinary data detected, not displaying diff",  "Output reverse:  different than expected, difference (using diff):\n( /tmp/tmpkzt5zfxjsamtools_fastx-out2-3.fastq.gz v. /tmp/tmpdazs4bmzsamtools_fastx-out2-3.fastq.gz )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 4, "time_seconds": 33.48147010803223, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #6)" name="5" time="33.5610454082489">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "b25b3968c165e459",   "src": "hda"  },  "output_fmt_cond|output_fmt_select": "fasta.gz",  "outputs": [   "r0",   "r1",   "r2"  ] }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/e/a/5/dataset_ea528891-f9b5-4f9a-8b05-712131f94a00.dat\u0027 \u003e input \u0026\u0026   samtools fasta   -0 nonspecific.fasta.gz -1 forward.fasta.gz -2 reverse.fasta.gz  input  \u003e /dev/null \u0026\u0026 ln -s nonspecific.fasta.gz nonspecific \u0026\u0026 ln -s forward.fasta.gz forward \u0026\u0026 ln -s reverse.fasta.gz reverse",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2025-01-11T19:19:48.701219",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pfjb8",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "8e1f64c143386ae0",  "inputs": {   "input": {    "id": "b25b3968c165e459",    "src": "hda",    "uuid": "ea528891-f9b5-4f9a-8b05-712131f94a00"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736623190.0000000",    "title": "Job End Time",    "value": "2025-01-11 19:19:50"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736623190.0000000",    "title": "Job Start Time",    "value": "2025-01-11 19:19:50"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "forward": {    "id": "1f4cebc7938c74db",    "src": "hda",    "uuid": "9d93d19b-ac6e-4b25-b8da-557225a3ecd1"   },   "nonspecific": {    "id": "6d22bfe13ea08cd8",    "src": "hda",    "uuid": "c6a79a1b-7c24-43a6-94ce-1bff357de9d9"   },   "reverse": {    "id": "38fd6a7048647cfb",    "src": "hda",    "uuid": "eb1bbbf9-971b-4e91-996d-5e0553d46480"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": null,   "copy_tags": "false",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 0, \"idxout_select\": \"no\"}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 3, \"output_fmt_select\": \"fasta.gz\"}",   "outputs": "[\"r0\", \"r1\", \"r2\"]",   "read_numbering": "\"\""  },  "state": "ok",  "stderr": "[M::bam2fq_mainloop] discarded 0 singletons\n[M::bam2fq_mainloop] processed 396 reads\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "[M::bam2fq_mainloop] discarded 0 singletons\n[M::bam2fq_mainloop] processed 396 reads\n",  "tool_stdout": "",  "update_time": "2025-01-11T19:20:01.719872",  "user_email": "tests@fake.org" }, "output_problems": [  "Output nonspecific:  different than expected, difference (using diff):\n( /tmp/tmpc58qnspssamtools_fastx-out3-1.fasta.gz v. /tmp/tmplojdwtq2samtools_fastx-out3-1.fasta.gz )\nBinary data detected, not displaying diff",  "Output forward:  different than expected, difference (using diff):\n( /tmp/tmpb0i_14cksamtools_fastx-out3-2.fasta.gz v. /tmp/tmpmeqrqqejsamtools_fastx-out3-2.fasta.gz )\nBinary data detected, not displaying diff",  "Output reverse:  different than expected, difference (using diff):\n( /tmp/tmph9ovtz69samtools_fastx-out3-3.fasta.gz v. /tmp/tmp2hle_7r9samtools_fastx-out3-3.fasta.gz )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 5, "time_seconds": 33.5610454082489, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #7)" name="6" time="33.82700276374817">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #8)" name="7" time="40.73793172836304">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #9)" name="8" time="33.56605577468872">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 1 singletons[M::bam2fq_mainloop] processed 37 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #10)" name="9" time="34.16908407211304">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #1)" name="0" time="36.5997428894043">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #2)" name="1" time="33.428529024124146">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #3)" name="2" time="34.534040451049805">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.1352522373199463">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.1352522373199463, "tool_id": "scanpy_run_umap", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.13645410537719727">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.13645410537719727, "tool_id": "scanpy_run_umap", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="73.32044506072998">
        
            
            <system-out><![CDATA[
            [1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minLoading required package: S4VectorsAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: scuttleLoading required package: ggplot2Loading required package: rhdf5Loading required package: BiocIOWarning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="20.550842761993408">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 20.550842761993408, "tool_id": "scater_create_qcmetric_ready_sce", "tool_version": "1.22.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #1)" name="0" time="49.24961972236633">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #2)" name="1" time="33.89805221557617">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some of your identifiers had white space in them, using first word only. e.g.:gi|16127999|ref|NP_414546.1| hypothetical protein b0005 [Escherichia coli str. K-12 substr. MG1655]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #3)" name="2" time="24.2111177444458">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "id_opts|id_list": "gi|16127999|ref|NP_414546.1|",  "id_opts|id_opts_selector": "list",  "input_file": {   "id": "cd5b7dc4dfb832c9",   "src": "hda"  },  "output_choice_cond|output_choice": "pos" }, "job": {  "command_line": "python /cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/85ef5f5a0562/seq_filter_by_id/tools/seq_filter_by_id/seq_filter_by_id.py -i \u0027/galaxy/server/database/objects/1/2/e/dataset_12e1de60-e98e-4a85-bfd9-285cc2135d8d.dat\u0027 -f \u0027fasta\u0027 -p \u0027/galaxy/server/database/objects/d/8/1/dataset_d81b56ea-771d-4ae2-b804-f570c62381b5.dat\u0027 -t \u0027gi|16127999|ref|NP_414546.1|\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-11T18:43:38.956028",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-vlcvm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "8f6145ebbb14b4c8",  "id": "cd5b7dc4dfb832c9",  "inputs": {   "input_file": {    "id": "cd5b7dc4dfb832c9",    "src": "hda",    "uuid": "12e1de60-e98e-4a85-bfd9-285cc2135d8d"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_pos": {    "id": "2d65011dd0035c88",    "src": "hda",    "uuid": "d81b56ea-771d-4ae2-b804-f570c62381b5"   }  },  "params": {   "__input_ext": "\"fasta\"",   "adv_opts": "{\"__current_case__\": 0, \"adv_opts_selector\": \"basic\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "id_opts": "{\"__current_case__\": 1, \"id_list\": \"gi|16127999|ref|NP_414546.1|\", \"id_opts_selector\": \"list\"}",   "output_choice_cond": "{\"__current_case__\": 1, \"output_choice\": \"pos\"}"  },  "state": "error",  "stderr": "",  "stdout": "Have 1 unique identifiers from list\nGenerating matching FASTA file\n1 with and 9 without specified IDs\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.9",  "tool_stderr": "",  "tool_stdout": "Have 1 unique identifiers from list\nGenerating matching FASTA file\n1 with and 9 without specified IDs\n",  "update_time": "2025-01-11T18:43:44.109904",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.9, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.9, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 24.2111177444458, "tool_id": "seq_filter_by_id", "tool_version": "0.2.9"}
                ]]></error>
            
            <system-out><![CDATA[
            Have 1 unique identifiers from listGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #4)" name="3" time="34.54656934738159">
        
            
            <system-out><![CDATA[
            Have 2 unique identifiers from listGenerating matching FASTQ file
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #5)" name="4" time="12.663352012634277">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.663352012634277, "tool_id": "seq_filter_by_id", "tool_version": "0.2.9"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #6)" name="5" time="11.646905660629272">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 11.646905660629272, "tool_id": "seq_filter_by_id", "tool_version": "0.2.9"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="vcfannotategenotypes (Test #1)" name="0" time="41.33179450035095">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfsort (Test #1)" name="0" time="36.47327661514282">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>