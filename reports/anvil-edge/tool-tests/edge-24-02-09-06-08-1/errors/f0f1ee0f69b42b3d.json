{
    "model_class": "Job",
    "id": "f0f1ee0f69b42b3d",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-02-09T07:25:53.941329",
    "create_time": "2024-02-09T07:25:18.750431",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "420493d7416ae453",
    "external_id": "gxy-l8fnr",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/7/6/b/dataset_76b02b37-75cc-4763-abde-266b7ea8b186.dat' && cp '/galaxy/server/database/objects/a/2/6/dataset_a2689a7d-9f9a-4813-a821-3750b40d5f0e.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/2/7/7/dataset_27710084-63fd-49f7-93be-7ca0f1699fff.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/c/e/e/dataset_cee5b6a9-2e6d-44e7-b297-575c6ddd55f1.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 46: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 317, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 318, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 316, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "5f7ec6ed17fcdddf",
            "src": "hda",
            "uuid": "76b02b37-75cc-4763-abde-266b7ea8b186"
        },
        "pairstraight|file1": {
            "id": "be43a3cc5c9634f7",
            "src": "hda",
            "uuid": "a2689a7d-9f9a-4813-a821-3750b40d5f0e"
        },
        "pairstraight|file2": {
            "id": "3a67f6f62fe7acad",
            "src": "hda",
            "uuid": "27710084-63fd-49f7-93be-7ca0f1699fff"
        },
        "tgmap": {
            "id": "57e3978e678b3230",
            "src": "hda",
            "uuid": "cee5b6a9-2e6d-44e7-b297-575c6ddd55f1"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "1d55ec95fed8d54e",
            "src": "hda",
            "uuid": "df3b79f6-8b07-4f39-a34c-0a5af91260c7"
        },
        "observed_bias_3p": {
            "id": "f2d15cdfe538351c",
            "src": "hda",
            "uuid": "52f84641-5166-46ee-aba3-918526d7eea5"
        },
        "observed_bias": {
            "id": "22eeee5225e61db3",
            "src": "hda",
            "uuid": "5ad8591a-d689-4be3-8d1e-34535b5339b9"
        },
        "expected_bias": {
            "id": "dfdceeeb8e0b4548",
            "src": "hda",
            "uuid": "609a5451-f4e6-4085-a8ec-27f9ff05c588"
        },
        "whitelist_txt": {
            "id": "5839df6e0840e141",
            "src": "hda",
            "uuid": "dca618a6-902b-4434-acb4-6824fef3dee5"
        },
        "featureDump_txt": {
            "id": "6ed08e11ac751135",
            "src": "hda",
            "uuid": "4113756b-caf1-4ad5-913d-6936ea99c21a"
        },
        "quants_tier_mat": {
            "id": "528fc50642c7fdd4",
            "src": "hda",
            "uuid": "127d876b-a246-4e9f-8106-1b32d98e8104"
        },
        "quants_mat_rows_txt": {
            "id": "51c1f554497e76c0",
            "src": "hda",
            "uuid": "63cf45a8-104c-467a-a007-dc9f349d7ae4"
        },
        "quants_mat_cols_txt": {
            "id": "6c64f57778567568",
            "src": "hda",
            "uuid": "7699808a-a93a-4a03-9367-a17516e6c997"
        },
        "raw_cb_frequency_txt": {
            "id": "45ec18da15026319",
            "src": "hda",
            "uuid": "90673f0f-c340-4661-909a-8b33d51cd159"
        },
        "quants_mat_mtx": {
            "id": "b8c004954a1d6da8",
            "src": "hda",
            "uuid": "04a7e046-dd55-468e-a1aa-a74d8dd84eb3"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
