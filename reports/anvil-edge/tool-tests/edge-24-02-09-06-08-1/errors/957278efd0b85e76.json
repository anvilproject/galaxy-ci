{
    "model_class": "Job",
    "id": "957278efd0b85e76",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-02-09T07:27:59.396863",
    "create_time": "2024-02-09T07:27:39.987368",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "420493d7416ae453",
    "external_id": "gxy-rg252",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/9/c/2/dataset_9c292178-9510-43d1-a5ae-e9b65513bf9b.dat' && cp '/galaxy/server/database/objects/e/1/6/dataset_e16696eb-800d-4695-9c24-6f9e4bd75505.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/f/a/3/dataset_fa3bc4ed-06d4-4bd2-999c-f699737aa680.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/2/9/b/dataset_29bf3eed-219d-4c95-9d7f-56b7fccb525d.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 350, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 351, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 349, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "ac12b3d657db6478",
            "src": "hda",
            "uuid": "9c292178-9510-43d1-a5ae-e9b65513bf9b"
        },
        "pairstraight|file1": {
            "id": "0c875647364d3ca7",
            "src": "hda",
            "uuid": "e16696eb-800d-4695-9c24-6f9e4bd75505"
        },
        "pairstraight|file2": {
            "id": "dc673f9d8760f712",
            "src": "hda",
            "uuid": "fa3bc4ed-06d4-4bd2-999c-f699737aa680"
        },
        "tgmap": {
            "id": "b524c2340046c98e",
            "src": "hda",
            "uuid": "29bf3eed-219d-4c95-9d7f-56b7fccb525d"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "e9149eaf9c3d083c",
            "src": "hda",
            "uuid": "fd9d60aa-ff23-4d15-904b-b1f5fb0beefd"
        },
        "observed_bias_3p": {
            "id": "efc543d733fa44ec",
            "src": "hda",
            "uuid": "a2df8e7d-5035-4d35-8f49-55e32163cd08"
        },
        "observed_bias": {
            "id": "49314828dca38a7d",
            "src": "hda",
            "uuid": "a8cc6c14-db66-46ef-acd2-ac8cd105fcac"
        },
        "expected_bias": {
            "id": "f04ac66970ba353a",
            "src": "hda",
            "uuid": "4748ee56-18e7-4e37-af96-f434cb218201"
        },
        "whitelist_txt": {
            "id": "64fcaee38b4befd8",
            "src": "hda",
            "uuid": "12b2bc63-f6bb-4cbb-b1b7-cb6db04745ef"
        },
        "featureDump_txt": {
            "id": "bdb6a9821b6a3b99",
            "src": "hda",
            "uuid": "24c51957-8bef-4ce1-a148-1b6795c89fbf"
        },
        "quants_tier_mat": {
            "id": "6fdb582ee36f3261",
            "src": "hda",
            "uuid": "cdae3aa8-1a23-454a-8769-c4b815334e8d"
        },
        "quants_mat_rows_txt": {
            "id": "91791c3afb89da1d",
            "src": "hda",
            "uuid": "08ecf0b0-687f-470f-bc43-495bb7e2ffba"
        },
        "quants_mat_cols_txt": {
            "id": "5d3f017cd9a30896",
            "src": "hda",
            "uuid": "21b55d95-10b6-451d-9b7b-e458a869fdc0"
        },
        "raw_cb_frequency_txt": {
            "id": "b4385f1ed46d78ce",
            "src": "hda",
            "uuid": "07b9a594-aa3d-4393-8f8b-9b709e1d52e7"
        },
        "quants_mat_mtx": {
            "id": "3ca233a63a93bb24",
            "src": "hda",
            "uuid": "808720fa-7a9a-4ae6-b90a-22c36e323d59"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
