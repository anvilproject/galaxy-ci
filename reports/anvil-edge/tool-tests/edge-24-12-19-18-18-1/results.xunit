<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="81"
           errors="12"
           failures="27"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="56.01552391052246">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "8687ae3442ec5487",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/90/configs/tmppk_d63j0\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/90/configs/tmppk_d63j0\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:53:31.902266",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-c2qh7",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "b11a2d6f85ae6f0b",  "inputs": {   "hd5_format|in|input": {    "id": "8687ae3442ec5487",    "src": "hda",    "uuid": "a7050a56-277d-4cb9-8aab-e6aca93b0dea"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634434.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:53:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634432.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:53:52"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "6549bb8f9d4f1344",    "src": "hda",    "uuid": "2667ecc1-6b7e-4830-b7c1-39e3cbf822ac"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 137, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/a/7/0/dataset_a7050a56-277d-4cb9-8aab-e6aca93b0dea.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/a/7/0/dataset_a7050a56-277d-4cb9-8aab-e6aca93b0dea.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:54:09.320085",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 56.01552391052246, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/a/7/0/dataset_a7050a56-277d-4cb9-8aab-e6aca93b0dea.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="30.222400903701782">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "9d0d048514e75711",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmpjdltorbd\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmpjdltorbd\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:57:53.029756",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4b7td",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "7f0a31f3af155168",  "inputs": {   "hd5_format|in|input": {    "id": "9d0d048514e75711",    "src": "hda",    "uuid": "ae4aed60-f46c-476c-91e9-5224c68c7807"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634675.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:57:55"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634674.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:57:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "98eee34ac186e8c1",    "src": "hda",    "uuid": "e2a7e8e5-0eae-4142-9d67-20f381b4c2aa"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/a/e/4/dataset_ae4aed60-f46c-476c-91e9-5224c68c7807.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/a/e/4/dataset_ae4aed60-f46c-476c-91e9-5224c68c7807.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:58:06.200618",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 30.222400903701782, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/a/e/4/dataset_ae4aed60-f46c-476c-91e9-5224c68c7807.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="32.36258363723755">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "77555a222bc79067",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/92/configs/tmpd2gxvwq1\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/92/configs/tmpd2gxvwq1\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:54:27.578765",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jst8z",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "f3090f4cc3d6e694",  "inputs": {   "hd5_format|in|input": {    "id": "77555a222bc79067",    "src": "hda",    "uuid": "8ecb3023-bbb2-4012-a15a-04bb06299076"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634471.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:54:31"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634469.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:54:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "ceaeefd6cc63b366",    "src": "hda",    "uuid": "cb982536-ebe6-4d70-9222-2f30930390b0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 139, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/e/c/dataset_8ecb3023-bbb2-4012-a15a-04bb06299076.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/e/c/dataset_8ecb3023-bbb2-4012-a15a-04bb06299076.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:54:41.775266",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmptmjvztgfimport.csv.h5ad v. /tmp/tmp3s65jcc0import.csv.h5ad )\nFiles /tmp/tmptmjvztgfimport.csv.h5ad=29512b but /tmp/tmp3s65jcc0import.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 32.36258363723755, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/8/e/c/dataset_8ecb3023-bbb2-4012-a15a-04bb06299076.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="32.39474558830261">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "4b37bc98d699165c",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp3y4uts2l\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp3y4uts2l\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:58:24.826656",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qlbpq",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "662aa5b74a243d2a",  "inputs": {   "hd5_format|in|input": {    "id": "4b37bc98d699165c",    "src": "hda",    "uuid": "94ebb6d9-cec6-4ce6-a129-d9e0e8215b9c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634708.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:58:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634706.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:58:26"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "ca44e2e5aad2e81e",    "src": "hda",    "uuid": "7c2808f0-e255-40eb-b088-28b4a8fb2b23"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/9/4/e/dataset_94ebb6d9-cec6-4ce6-a129-d9e0e8215b9c.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/9/4/e/dataset_94ebb6d9-cec6-4ce6-a129-d9e0e8215b9c.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:58:38.617804",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpqqn0uhczimport.csv.h5ad v. /tmp/tmpeqsryzhrimport.csv.h5ad )\nFiles /tmp/tmpqqn0uhczimport.csv.h5ad=29512b but /tmp/tmpeqsryzhrimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 32.39474558830261, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/9/4/e/dataset_94ebb6d9-cec6-4ce6-a129-d9e0e8215b9c.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="32.5239634513855">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "02698706b5320918",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmpdo33_64v\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmpdo33_64v\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:55:00.410064",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-r6fxx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "ef1ec214b89d2c6e",  "inputs": {   "hd5_format|in|input": {    "id": "02698706b5320918",    "src": "hda",    "uuid": "5a23e4c6-94df-473a-a5e3-505c8c2b6027"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634503.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:55:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634502.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:55:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "a69194391a3a9e78",    "src": "hda",    "uuid": "8c8a489b-5ce9-4f23-94a8-769521e396a6"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 141, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/5/a/2/dataset_5a23e4c6-94df-473a-a5e3-505c8c2b6027.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/5/a/2/dataset_5a23e4c6-94df-473a-a5e3-505c8c2b6027.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:55:14.056159",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 32.5239634513855, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/5/a/2/dataset_5a23e4c6-94df-473a-a5e3-505c8c2b6027.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="32.44360661506653">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "e165a4ccb7db7222",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmpxgucd35m\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmpxgucd35m\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:58:56.963338",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-d8ks6",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "38ff7f936785f647",  "inputs": {   "hd5_format|in|input": {    "id": "e165a4ccb7db7222",    "src": "hda",    "uuid": "c52faa10-b177-4fbf-9924-58b85b85b967"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634739.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:58:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634738.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:58:58"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "15c9519a8a9f7938",    "src": "hda",    "uuid": "248d99b3-5439-48af-ad7f-cff970e279f2"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 158, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/c/5/2/dataset_c52faa10-b177-4fbf-9924-58b85b85b967.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/c/5/2/dataset_c52faa10-b177-4fbf-9924-58b85b85b967.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:59:10.928328",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 32.44360661506653, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/c/5/2/dataset_c52faa10-b177-4fbf-9924-58b85b85b967.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="32.93182039260864">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "a55c000b6a67d08d",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmp_cg6fk_z\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmp_cg6fk_z\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:55:33.238080",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fdnwv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "e07b4cffd6059190",  "inputs": {   "hd5_format|in|matrix": {    "id": "a55c000b6a67d08d",    "src": "hda",    "uuid": "c41721b5-122a-43a7-b95d-c4d531ecc98f"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634536.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:55:36"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634535.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:55:35"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "a906938c2ae1bd43",    "src": "hda",    "uuid": "6e512d14-44af-4321-acef-40cda76ceec1"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/c/4/1/dataset_c41721b5-122a-43a7-b95d-c4d531ecc98f.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/c/4/1/dataset_c41721b5-122a-43a7-b95d-c4d531ecc98f.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:55:47.124549",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 32.93182039260864, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/c/4/1/dataset_c41721b5-122a-43a7-b95d-c4d531ecc98f.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="32.95853781700134">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "217949ddf884dd92",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmpruhvr2i0\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmpruhvr2i0\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:59:30.083725",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wjm9b",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "c83253f4f2bcad31",  "inputs": {   "hd5_format|in|matrix": {    "id": "217949ddf884dd92",    "src": "hda",    "uuid": "eb2cee05-e424-48d7-ac82-8a7200fa1027"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634773.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:59:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634772.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:59:32"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "51c4168feef0cea2",    "src": "hda",    "uuid": "75f07c93-de18-4f37-b644-3e153c83b85e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/e/b/2/dataset_eb2cee05-e424-48d7-ac82-8a7200fa1027.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/e/b/2/dataset_eb2cee05-e424-48d7-ac82-8a7200fa1027.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:59:44.167859",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 32.95853781700134, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/e/b/2/dataset_eb2cee05-e424-48d7-ac82-8a7200fa1027.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="32.27125024795532">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "fcd23eef4e9f5724",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/7/e/0/dataset_7e0acec7-519d-4fee-a2a9-c0225e30063d.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmpvthref4z\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmpvthref4z\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:56:05.491072",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7fwp6",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "febf8b1c46da43df",  "inputs": {   "hd5_format|in|input": {    "id": "fcd23eef4e9f5724",    "src": "hda",    "uuid": "7e0acec7-519d-4fee-a2a9-c0225e30063d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634569.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:56:09"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634567.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:56:07"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "e0b2825eaa6f8ddc",    "src": "hda",    "uuid": "d4369252-ae2b-4604-b2ec-844514f64b1e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T18:56:19.394559",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 32.27125024795532, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="32.090450048446655">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "2e80bcb100aa33c7",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/b/9/3/dataset_b93f8498-882e-44d8-8e4e-13a372be097a.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/115/configs/tmpdydajx48\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/115/configs/tmpdydajx48\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:00:02.467378",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8f99f",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "d11eda2d971db857",  "inputs": {   "hd5_format|in|input": {    "id": "2e80bcb100aa33c7",    "src": "hda",    "uuid": "b93f8498-882e-44d8-8e4e-13a372be097a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634805.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:00:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634803.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:00:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "06d28f95da11a33f",    "src": "hda",    "uuid": "8ad81ecb-09b3-4fb0-9943-7beafe5f7201"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 162, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-19T19:00:16.329442",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 32.090450048446655, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="39.76582932472229">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "bbdf679e6ba7669c",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "696325c554b781a3",   "src": "hda"  },  "hd5_format|other_files": {   "id": "610de98ebfd8519b",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "7f3a194895dd4d8c",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/7/4/4/dataset_74409cdd-8211-47c2-88fe-bb811c9d675a.dat\u0027 -r \u0027/galaxy/server/database/objects/f/c/3/dataset_fc317e03-0a9b-4305-9cd0-40b397d200c0.dat\u0027 -f \u0027/galaxy/server/database/objects/0/8/5/dataset_085624b0-82f9-45d2-ac8c-227dad815386.dat\u0027 \u0027/galaxy/server/database/objects/3/a/2/dataset_3a275a81-3117-4afc-b04d-ddede36d387e.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-19T18:56:46.557204",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fqfn5",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "058db7852e26a20d",  "inputs": {   "hd5_format|coldata": {    "id": "bbdf679e6ba7669c",    "src": "hda",    "uuid": "74409cdd-8211-47c2-88fe-bb811c9d675a"   },   "hd5_format|mainmatrix": {    "id": "696325c554b781a3",    "src": "hda",    "uuid": "085624b0-82f9-45d2-ac8c-227dad815386"   },   "hd5_format|other_files": {    "id": "610de98ebfd8519b",    "src": "hda",    "uuid": "3a275a81-3117-4afc-b04d-ddede36d387e"   },   "hd5_format|other_files1": {    "id": "610de98ebfd8519b",    "src": "hda",    "uuid": "3a275a81-3117-4afc-b04d-ddede36d387e"   },   "hd5_format|rowdata": {    "id": "7f3a194895dd4d8c",    "src": "hda",    "uuid": "fc317e03-0a9b-4305-9cd0-40b397d200c0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734634609.0000000",    "title": "Job End Time",    "value": "2024-12-19 18:56:49"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734634607.0000000",    "title": "Job Start Time",    "value": "2024-12-19 18:56:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "b8f6b14c23b899ac",    "src": "hda",    "uuid": "cee95e58-bf6a-4f2b-98b4-22ad184a444a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 148, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 150, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-19T18:56:59.465214",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmp9qvu_zbzconverted.loom.test v. /tmp/tmpmakdppn8converted.loom.test )\nFiles /tmp/tmp9qvu_zbzconverted.loom.test=41883b but /tmp/tmpmakdppn8converted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 39.76582932472229, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="11.655267715454102">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 11.655267715454102, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="35.577048540115356">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/a/f/2/dataset_af286db5-376d-4dd1-9e4b-2c2f32c2cdfb.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="11.848973035812378">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 11.848973035812378, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="40.85756516456604">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="67.3971860408783">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="9.912156820297241">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 9.912156820297241, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="25.406975030899048">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "inputB_file": {   "id": "05d06581309109f2",   "src": "hda"  },  "input_file": {   "id": "d8b287c74d6ba69d",   "src": "hda"  },  "sec_restrict|regions_overlap": "1" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/3/b/b/dataset_3bb997bd-e152-40a6-94e0-aff87bb137ce.dat\u0027 \u003e input0.vcf.gz \u0026\u0026 bcftools index input0.vcf.gz \u0026\u0026 echo \u0027input0.vcf.gz\u0027 \u003e\u003e vcfs_list \u0026\u0026  bgzip -c \u0027/galaxy/server/database/objects/8/5/1/dataset_851d376f-aa68-4bad-ac29-eb0ec785e942.dat\u0027 \u003e input1.vcf.gz \u0026\u0026 bcftools index input1.vcf.gz \u0026\u0026 echo \u0027input1.vcf.gz\u0027 \u003e\u003e vcfs_list \u0026\u0026                     bcftools stats               --regions-overlap 1                input0.vcf.gz input1.vcf.gz  \u003e \u0027/galaxy/server/database/objects/0/7/5/dataset_0755e2fa-db7a-4df7-bee9-e51fe71cbcf7.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-19T19:16:36.188760",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-nsfn8",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "73946df509bd012e",  "inputs": {   "inputB_file": {    "id": "05d06581309109f2",    "src": "hda",    "uuid": "851d376f-aa68-4bad-ac29-eb0ec785e942"   },   "input_file": {    "id": "d8b287c74d6ba69d",    "src": "hda",    "uuid": "3bb997bd-e152-40a6-94e0-aff87bb137ce"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "76614d3ef7d69067",    "src": "hda",    "uuid": "0755e2fa-db7a-4df7-bee9-e51fe71cbcf7"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "plot_title": "\"\"",   "sec_default": "{\"af_tag\": \"\", \"afbins\": {\"__current_case__\": 0, \"afbins_select\": \"default\"}, \"depth\": {\"__current_case__\": 0, \"set_depth\": \"no\"}, \"exons_file\": null, \"first_allele_only\": false, \"reference_source\": {\"__current_case__\": 0, \"reference_source_selector\": \"\"}, \"split_by_ID\": false, \"user_tstv\": \"\", \"verbose\": false}",   "sec_restrict": "{\"apply_filters\": \"\", \"collapse\": null, \"exclude\": null, \"include\": null, \"invert_samples\": false, \"invert_samples_file\": false, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": \"1\", \"samples\": \"\", \"samples_file\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-19T19:16:42.830613",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 25.406975030899048, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="30.38397455215454">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="41.870261907577515">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="33.19093680381775">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="74.91204524040222">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="26.696263551712036">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "corData": {   "id": "690e0958e37cdd12",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/c/a/a/dataset_caa3bae6-3719-4fac-947e-bd2f364a18ce.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/a/4/b/dataset_a4b1d53d-a087-422c-a888-a2e0ae1a2047.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-19T18:36:47.529501",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-2j682",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "690e0958e37cdd12",  "inputs": {   "corData": {    "id": "690e0958e37cdd12",    "src": "hda",    "uuid": "caa3bae6-3719-4fac-947e-bd2f364a18ce"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "51ae603ef820d510",    "src": "hda",    "uuid": "a4b1d53d-a087-422c-a888-a2e0ae1a2047"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-19T18:36:55.671331",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 26.696263551712036, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="35.766212940216064">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="36.451563119888306">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="33.116703748703">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/a/0/c/dataset_a0c75576-d647-491d-b571-4bb1c7fe76ab.dat[FLASH]     /galaxy/server/database/objects/2/d/c/dataset_2dc28f46-c9bc-40fe-b9db-8a77fe670b68.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.021 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="33.41468524932861">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="33.19202733039856">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/5/2/f/dataset_52f342dd-9233-4284-8756-d677de0ab806.dat[FLASH]     /galaxy/server/database/objects/2/1/e/dataset_21e4ac29-b243-4cd2-8c8c-dc9cc5bb417b.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.036 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="46.63068175315857">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "768428aaf41dcf25",   "src": "hda"  },  "reference_source|ref": {   "id": "c5b65f31c6c0de52",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/d/1/4/dataset_d14418dd-dd42-4be5-804b-00a8e7b58fee.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/8/e/3/dataset_8e3eb35c-601f-497d-9992-29b946c16a31.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/a/3/a/metadata_a3aa0546-8fb1-49c7-aaf7-1de7bb3d5401.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:11:38.003589",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-q8v6l",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "9d0d048514e75711",  "inputs": {   "reads": {    "id": "768428aaf41dcf25",    "src": "hda",    "uuid": "8e3eb35c-601f-497d-9992-29b946c16a31"   },   "reference_source|ref": {    "id": "c5b65f31c6c0de52",    "src": "hda",    "uuid": "d14418dd-dd42-4be5-804b-00a8e7b58fee"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635511.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:11:51"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635507.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:11:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "6e19b22eee36e3cf",    "src": "hda",    "uuid": "992445d7-16b3-4fcf-8fb6-cce4ba71ae08"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 219, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-19 19:11:48,165]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-19 19:11:48,190]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:11:51,483]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-19 19:11:48,165]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-19 19:11:48,190]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:11:51,483]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-12-19T19:12:04.693214",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpzhzaucswcall-out1.vcf v. /tmp/tmpfmstv8iucall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241219\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/concat.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/0.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/1.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/2.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/3.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/4.vcf.gz; Date=Thu Dec 19 19:11:51 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 46.63068175315857, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-19 19:11:48,165]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2024-12-19 19:11:48,190]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-12-19 19:11:51,483]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_paralleldr7f3tcn/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="35.21703553199768">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "bce61d2aab551910",   "src": "hda"  },  "reference_source|ref": {   "id": "aee9a21ee0afac03",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/d/9/6/dataset_d967d6d8-ae98-4c86-9985-7b1783aa16ca.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/d/5/f/dataset_d5fcabd8-3578-4c47-921b-2f024d158516.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/9/6/4/metadata_9643a214-904f-441d-8357-6c92fbd9c792.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:12:24.771070",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jnt22",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "ca44e2e5aad2e81e",  "inputs": {   "reads": {    "id": "bce61d2aab551910",    "src": "hda",    "uuid": "d5fcabd8-3578-4c47-921b-2f024d158516"   },   "reference_source|ref": {    "id": "aee9a21ee0afac03",    "src": "hda",    "uuid": "d967d6d8-ae98-4c86-9985-7b1783aa16ca"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635550.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:12:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635546.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:12:26"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "3a49500de8cbd476",    "src": "hda",    "uuid": "32e5879e-1154-4459-b957-8ff147af0f59"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 222, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-19 19:12:26,502]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-19 19:12:26,690]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:12:29,982]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-19 19:12:26,502]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-19 19:12:26,690]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:12:29,982]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-12-19T19:12:40.055651",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpss1v53yicall-out1.vcf v. /tmp/tmpxzugfcr2call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241219\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/concat.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/0.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/1.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/2.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/3.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/4.vcf.gz; Date=Thu Dec 19 19:12:29 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 35.21703553199768, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-19 19:12:26,502]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-12-19 19:12:26,690]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-12-19 19:12:29,982]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallel69rp_hci/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="42.15555286407471">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "223fbbc1bf21510a",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "c8187ad147db26ef",   "src": "hda"  },  "reference_source|ref": {   "id": "2eb4da7e927b1a60",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/1/6/dataset_516fdfb3-ce19-4607-9d1c-fbcd8d7a81f6.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/1/8/1/dataset_1814c004-7b71-4fec-91ef-9d8cc142f224.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/c/d/4/metadata_cd4b9f4f-890d-49f6-9a66-2f8334540d18.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/4/e/2/dataset_4e24390c-d9e4-4856-8317-de00b44a07c1.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:13:05.391031",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xhr4v",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "51c4168feef0cea2",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "223fbbc1bf21510a",    "src": "hda",    "uuid": "4e24390c-d9e4-4856-8317-de00b44a07c1"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "223fbbc1bf21510a",    "src": "hda",    "uuid": "4e24390c-d9e4-4856-8317-de00b44a07c1"   },   "reads": {    "id": "c8187ad147db26ef",    "src": "hda",    "uuid": "1814c004-7b71-4fec-91ef-9d8cc142f224"   },   "reference_source|ref": {    "id": "2eb4da7e927b1a60",    "src": "hda",    "uuid": "516fdfb3-ce19-4607-9d1c-fbcd8d7a81f6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635591.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:13:11"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635587.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:13:07"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "95b2fe1794fb591e",    "src": "hda",    "uuid": "6a221cee-3545-447b-bb8f-290346e47768"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 226, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 225, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-19 19:13:07,758]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-19 19:13:07,979]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:13:11,582]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-19 19:13:07,758]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-19 19:13:07,979]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:13:11,582]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-12-19T19:13:22.127825",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpckop_yqscall-out1.vcf v. /tmp/tmp3fc050gucall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241219\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/concat.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/0.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/1.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/2.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/3.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/4.vcf.gz; Date=Thu Dec 19 19:13:11 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 42.15555286407471, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-19 19:13:07,758]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-12-19 19:13:07,979]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-12-19 19:13:11,582]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel08tr7ijj/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="35.22009539604187">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "22ba476dfb370121",   "src": "hda"  },  "reference_source|ref": {   "id": "2472410e7a7b2670",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/a/0/8/dataset_a08e7725-597c-47a8-bd99-bff8f3f48a4c.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/9/f/b/dataset_9fbacc39-dc04-462a-99c3-04b05c8bcfd1.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/b/c/d/metadata_bcd03c89-e0d3-4e82-bb1b-3272ba3da0ef.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:13:42.271422",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-w9phf",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "aa508ce7d2df7f75",  "inputs": {   "reads": {    "id": "22ba476dfb370121",    "src": "hda",    "uuid": "9fbacc39-dc04-462a-99c3-04b05c8bcfd1"   },   "reference_source|ref": {    "id": "2472410e7a7b2670",    "src": "hda",    "uuid": "a08e7725-597c-47a8-bd99-bff8f3f48a4c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635626.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:13:46"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635623.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:13:43"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "79bdc9313c37ff8a",    "src": "hda",    "uuid": "057853a1-654b-435f-a373-4460a1e56f76"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 229, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-19 19:13:44,332]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-12-19 19:13:44,377]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:13:46,794]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-19 19:13:44,332]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-12-19 19:13:44,377]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-19 19:13:46,794]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2024-12-19T19:13:57.528171",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpdufmjv_wcall-out2.vcf v. /tmp/tmp5mbm6ljhcall-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241219\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallel_aaa8iob/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallel_aaa8iob/concat.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallel_aaa8iob/0.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallel_aaa8iob/1.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallel_aaa8iob/2.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallel_aaa8iob/3.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallel_aaa8iob/4.vcf.gz; Date=Thu Dec 19 19:13:46 2024\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 35.22009539604187, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-19 19:13:44,332]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2024-12-19 19:13:44,377]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-12-19 19:13:46,794]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="19.552536249160767">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 19.552536249160767, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="69.20693445205688">
        
            
            <system-out><![CDATA[
            [18:42:38 - DataStre] Loaded sample register.[18:42:38 - DataStre] Loaded sample register.[18:42:38 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:42:38 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:42:38 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:42:38 - Variants] Processing NC_045512.2:0-.[18:42:38 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:42:41 - Annotate] Getting chrom coordinates[18:42:41 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:42:41 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="42.46602010726929">
        
            
            <system-out><![CDATA[
            [18:43:28 - DataStre] Loaded sample register.[18:43:28 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:43:28 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:43:28 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:43:30 - Annotate] Getting chrom coordinates[18:43:30 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:43:30 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="9.400052785873413">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 9.400052785873413, "tool_id": "medaka_variant", "tool_version": "1.7.2+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="63.41082715988159">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="67.12670135498047">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="33.67545747756958">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="41.039825439453125">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="35.48897051811218">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="35.818310499191284">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="35.95438361167908">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="35.318384647369385">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="35.38484334945679">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="41.13051509857178">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="11.28635287284851">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.28635287284851, "tool_id": "raceid_inspecttrajectory", "tool_version": "0.2.3+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="49.9901967048645">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00116438sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.479e-05sWriting sequence data to file . . . doneElapsed time: 0.00010144s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00014464sdoneElapsed time: 0.00280182sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00133335sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logsthere is [2024-12-19 18:45:34.517] [jointLog] [info] parsing read library format1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-12-19 18:45:34.584] [jointLog] [info] Loading Quasi index[2024-12-19 18:45:34.587] [jointLog] [info] done[2024-12-19 18:45:34.585] [stderrLog] [info] Loading Suffix Array [2024-12-19 18:45:34.585] [stderrLog] [info] Loading Position Hash[2024-12-19 18:45:34.586] [stderrLog] [info] Loading Transcript Info [2024-12-19 18:45:34.587] [stderrLog] [info] Loading Rank-Select Bit Array[2024-12-19 18:45:34.587] [stderrLog] [info] There were 15 set bits in the bit array[2024-12-19 18:45:34.587] [stderrLog] [info] Computing transcript lengths[2024-12-19 18:45:34.587] [stderrLog] [info] Waiting to finish loading hash[2024-12-19 18:45:34.587] [stderrLog] [info] Done loading index[2024-12-19 18:45:34.609] [jointLog] [info] Gathered fragment lengths from all threads[2024-12-19 18:45:34.609] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-12-19 18:45:34.610] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-12-19 18:45:34.618] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-12-19 18:45:34.618] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-12-19 18:45:34.618] [jointLog] [info] Starting optimizer:[2024-12-19 18:45:34.619] [jointLog] [info] Optimizing over 21 equivalence classes[2024-12-19 18:45:34.619] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-12-19 18:45:34.619] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2024-12-19 18:45:34.619] [jointLog] [info] Finished optimizer[2024-12-19 18:45:34.619] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="37.66479682922363">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.000837809sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.856e-05sWriting sequence data to file . . . doneElapsed time: 8.275e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00014647sdoneElapsed time: 0.0153159sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00110465sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-12-19 18:46:14.574] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-12-19 18:46:14.640] [jointLog] [info] Loading Quasi index[2024-12-19 18:46:14.644] [jointLog] [info] done[2024-12-19 18:46:14.641] [stderrLog] [info] Loading Position Hash[2024-12-19 18:46:14.642] [stderrLog] [info] Loading Suffix Array [2024-12-19 18:46:14.643] [stderrLog] [info] Loading Transcript Info [2024-12-19 18:46:14.643] [stderrLog] [info] Loading Rank-Select Bit Array[2024-12-19 18:46:14.643] [stderrLog] [info] There were 15 set bits in the bit array[2024-12-19 18:46:14.644] [stderrLog] [info] Computing transcript lengths[2024-12-19 18:46:14.644] [stderrLog] [info] Waiting to finish loading hash[2024-12-19 18:46:14.644] [stderrLog] [info] Done loading index[2024-12-19 18:46:14.664] [jointLog] [info] Gathered fragment lengths from all threads[2024-12-19 18:46:14.664] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-12-19 18:46:14.665] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-12-19 18:46:14.672] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-12-19 18:46:14.672] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-12-19 18:46:14.673] [jointLog] [info] Starting optimizer:[2024-12-19 18:46:14.673] [jointLog] [info] Optimizing over 21 equivalence classes[2024-12-19 18:46:14.673] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-12-19 18:46:14.673] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2024-12-19 18:46:14.673] [jointLog] [info] Finished optimizer[2024-12-19 18:46:14.673] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="38.088263273239136">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.000996649sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.8151e-05sWriting sequence data to file . . . doneElapsed time: 7.844e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000155919sdoneElapsed time: 0.0149874sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00160497sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-12-19 18:46:52.313] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-12-19 18:46:52.382] [stderrLog] [info] Loading Suffix Array [2024-12-19 18:46:52.382] [stderrLog] [info] Loading Position Hash[2024-12-19 18:46:52.383] [stderrLog] [info] Loading Transcript Info [2024-12-19 18:46:52.384] [stderrLog] [info] Loading Rank-Select Bit Array[2024-12-19 18:46:52.384] [stderrLog] [info] There were 15 set bits in the bit array[2024-12-19 18:46:52.384] [stderrLog] [info] Computing transcript lengths[2024-12-19 18:46:52.384] [stderrLog] [info] Waiting to finish loading hash[2024-12-19 18:46:52.384] [stderrLog] [info] Done loading index[2024-12-19 18:46:52.381] [jointLog] [info] Loading Quasi index[2024-12-19 18:46:52.384] [jointLog] [info] doneDone Quasi-Mapping [2024-12-19 18:46:52.406] [jointLog] [info] Gathered fragment lengths from all threads[2024-12-19 18:46:52.406] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-12-19 18:46:52.407] [jointLog] [info] Estimating effective lengths[2024-12-19 18:46:52.414] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-12-19 18:46:52.414] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-12-19 18:46:52.414] [jointLog] [info] Starting optimizer:[2024-12-19 18:46:52.415] [jointLog] [info] Optimizing over 21 equivalence classes[2024-12-19 18:46:52.415] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-12-19 18:46:52.415] [jointLog] [info] iteration 50, recomputing effective lengths[2024-12-19 18:46:52.416] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2024-12-19 18:46:52.416] [jointLog] [info] Finished optimizer[2024-12-19 18:46:52.416] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="41.01749134063721">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00113908sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.704e-05sWriting sequence data to file . . . doneElapsed time: 5.533e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00015069sdoneElapsed time: 0.0155112sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00111438sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-12-19 18:47:33.653] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-12-19 18:47:33.721] [jointLog] [info] Loading Quasi index[2024-12-19 18:47:33.725] [jointLog] [info] done[2024-12-19 18:47:33.723] [stderrLog] [info] Loading Suffix Array [2024-12-19 18:47:33.723] [stderrLog] [info] Loading Position Hash[2024-12-19 18:47:33.723] [stderrLog] [info] Loading Transcript Info [2024-12-19 18:47:33.724] [stderrLog] [info] Loading Rank-Select Bit Array[2024-12-19 18:47:33.724] [stderrLog] [info] There were 15 set bits in the bit array[2024-12-19 18:47:33.724] [stderrLog] [info] Computing transcript lengths[2024-12-19 18:47:33.724] [stderrLog] [info] Waiting to finish loading hash[2024-12-19 18:47:33.725] [stderrLog] [info] Done loading indexDone Quasi-Mapping [2024-12-19 18:47:33.747] [jointLog] [info] Gathered fragment lengths from all threads[2024-12-19 18:47:33.747] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-12-19 18:47:33.747] [jointLog] [info] Estimating effective lengths[2024-12-19 18:47:33.754] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-12-19 18:47:33.754] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-12-19 18:47:33.755] [jointLog] [info] Starting optimizer:[2024-12-19 18:47:33.755] [jointLog] [info] Optimizing over 21 equivalence classes[2024-12-19 18:47:33.755] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-12-19 18:47:33.755] [jointLog] [info] iteration 50, recomputing effective lengths[2024-12-19 18:47:33.757] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2024-12-19 18:47:33.757] [jointLog] [info] Finished optimizer[2024-12-19 18:47:33.757] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="22.905197858810425">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 22.905197858810425, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="11.208952188491821">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.208952188491821, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="10.278203248977661">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.278203248977661, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="36.89452886581421">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="31.44864821434021">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="11.309700965881348">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 11.309700965881348, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="44.616519927978516">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="24.33306884765625">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_bam": {   "id": "f13c1e9735c16d02",   "src": "hda"  },  "option_set|option_sets": "default" }, "job": {  "command_line": "samtools phase -b phase_wrapper -k 13 -q 37 -Q 13 -D 256 \u0027/galaxy/server/database/objects/5/5/8/dataset_558b995a-caf6-44d2-8a8e-c5135695914f.dat\u0027 \u003e \u0027/galaxy/server/database/objects/9/6/5/dataset_96538581-1a1a-4ff1-ac9a-968fc805adbe.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-19T18:50:04.016481",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-64jmx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "7b9f652c8d8a7bfd",  "inputs": {   "input_bam": {    "id": "f13c1e9735c16d02",    "src": "hda",    "uuid": "558b995a-caf6-44d2-8a8e-c5135695914f"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "chimera": {    "id": "d0c47c2307c7d4e0",    "src": "hda",    "uuid": "b604bb9a-02ac-4735-af5e-27fd817e906b"   },   "phase0": {    "id": "0cff053a44359eae",    "src": "hda",    "uuid": "c95a4611-37ee-4f82-8bcd-01b9731f91c2"   },   "phase1": {    "id": "662aa5b74a243d2a",    "src": "hda",    "uuid": "2e163b2d-fd4a-49f4-bd99-b4e12459479d"   },   "phase_sets": {    "id": "7f0a31f3af155168",    "src": "hda",    "uuid": "96538581-1a1a-4ff1-ac9a-968fc805adbe"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "option_set": "{\"__current_case__\": 0, \"option_sets\": \"default\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-19T18:50:08.574371",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 24.33306884765625, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="39.503758907318115">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="32.340200662612915">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="33.8303599357605">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="25.473326921463013">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_bam": {   "id": "74dd1ee3e1257502",   "src": "hda"  },  "option_set|block_length": "13",  "option_set|drop_ambiguous": false,  "option_set|ignore_chimeras": true,  "option_set|min_bq": "13",  "option_set|min_het": "37",  "option_set|option_sets": "advanced",  "option_set|read_depth": "256" }, "job": {  "command_line": "samtools phase -b phase_wrapper -F -k 13 -q 37 -Q 13 -D 256  \u0027/galaxy/server/database/objects/0/8/3/dataset_083a0d67-37b9-41eb-bad8-79679c04295c.dat\u0027 \u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f589e801-e01e-4150-97a3-b3543837c132.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-19T18:51:00.711041",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-4cdt9",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "a144f1fa78105360",  "inputs": {   "input_bam": {    "id": "74dd1ee3e1257502",    "src": "hda",    "uuid": "083a0d67-37b9-41eb-bad8-79679c04295c"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "chimera": {    "id": "b84e8767a6c9a622",    "src": "hda",    "uuid": "cc19cfb9-b437-4b1e-9ff6-fbb31a84ad79"   },   "phase0": {    "id": "cb8c5000f5fb9f47",    "src": "hda",    "uuid": "64de3f20-822c-4423-acb7-2c6bb31f46a1"   },   "phase1": {    "id": "00a205f923fecdab",    "src": "hda",    "uuid": "045f8fe5-3417-48be-984c-6a429a61867d"   },   "phase_sets": {    "id": "0af3f34ed59ea888",    "src": "hda",    "uuid": "f589e801-e01e-4150-97a3-b3543837c132"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "option_set": "{\"__current_case__\": 1, \"block_length\": \"13\", \"drop_ambiguous\": false, \"ignore_chimeras\": true, \"min_bq\": \"13\", \"min_het\": \"37\", \"option_sets\": \"advanced\", \"read_depth\": \"256\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-19T18:51:06.491790",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_phase/samtools_phase/2.0.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 25.473326921463013, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="78.08337545394897">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "e1bc925e2c8f92b3",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/9/a/a/dataset_9aabfaf1-f450-424e-92db-cd9ea4d32741.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpxz_7gfc3\u0027 \u003e \u0027/galaxy/server/database/objects/c/c/b/dataset_ccb6e626-325b-45dc-98a3-b54b3c914b63.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpxz_7gfc3\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/c/c/b/dataset_ccb6e626-325b-45dc-98a3-b54b3c914b63.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/c/c/b/dataset_ccb6e626-325b-45dc-98a3-b54b3c914b63.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:07:14.307666",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-x5ghx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "02698706b5320918",  "inputs": {   "adata": {    "id": "e1bc925e2c8f92b3",    "src": "hda",    "uuid": "9aabfaf1-f450-424e-92db-cd9ea4d32741"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635272.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:07:52"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635268.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:07:48"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "f351d959c5407a04",    "src": "hda",    "uuid": "04a34f4c-24b2-4b5b-9b78-abb8952a2392"   },   "hidden_output": {    "id": "8af776cb6ab3789d",    "src": "hda",    "uuid": "ccb6e626-325b-45dc-98a3-b54b3c914b63"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2024-12-19T19:08:12.918359",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 78.08337545394897, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="38.387500286102295">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "2a2e32f005b024e9",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/6/e/dataset_d6ec81e7-4ae8-443f-b128-530d1b8a8d87.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/143/configs/tmp8mswoee0\u0027 \u003e \u0027/galaxy/server/database/objects/6/5/7/dataset_65746169-0a24-4880-b45f-f3e8276d111a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/143/configs/tmp8mswoee0\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/6/5/7/dataset_65746169-0a24-4880-b45f-f3e8276d111a.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/6/5/7/dataset_65746169-0a24-4880-b45f-f3e8276d111a.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:08:33.317121",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wklgb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "a55c000b6a67d08d",  "inputs": {   "adata": {    "id": "2a2e32f005b024e9",    "src": "hda",    "uuid": "d6ec81e7-4ae8-443f-b128-530d1b8a8d87"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635319.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:08:39"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635315.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:08:35"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "36e34d4f139b67af",    "src": "hda",    "uuid": "b1697679-5942-4167-99f8-22e036c81a80"   },   "hidden_output": {    "id": "7e2251f0609edf4d",    "src": "hda",    "uuid": "65746169-0a24-4880-b45f-f3e8276d111a"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2024-12-19T19:08:51.311586",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmpu3xw9q49pp.recipe_zheng17.random-randint.h5ad v. /tmp/tmp0xdzchllpp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmpu3xw9q49pp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmp0xdzchllpp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 38.387500286102295, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="36.25438618659973">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "8c2961208a71d973",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/7/0/dataset_4704984e-76d6-4b80-9746-58b1f202d027.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/145/configs/tmp2gai4j_c\u0027 \u003e \u0027/galaxy/server/database/objects/5/f/e/dataset_5fea0477-ce0b-43bd-89e3-834950af7052.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/145/configs/tmp2gai4j_c\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/5/f/e/dataset_5fea0477-ce0b-43bd-89e3-834950af7052.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/5/f/e/dataset_5fea0477-ce0b-43bd-89e3-834950af7052.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:09:10.805363",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4s55n",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "fcd23eef4e9f5724",  "inputs": {   "adata": {    "id": "8c2961208a71d973",    "src": "hda",    "uuid": "4704984e-76d6-4b80-9746-58b1f202d027"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635357.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:09:17"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635352.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:09:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "ba99ad2fc219e0d0",    "src": "hda",    "uuid": "5ea20796-e3db-45d7-a267-41c88ee778a8"   },   "hidden_output": {    "id": "3653396ef43e04cd",    "src": "hda",    "uuid": "5fea0477-ce0b-43bd-89e3-834950af7052"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2024-12-19T19:09:27.931816",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 36.25438618659973, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="36.648017168045044">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "dc402b249f8dad5a",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/a/6/e/dataset_a6ecec65-42b5-46c4-9c9e-dcc93a2517c7.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/147/configs/tmp3fgg4zi_\u0027 \u003e \u0027/galaxy/server/database/objects/2/5/5/dataset_255abad7-ab2f-4887-8a13-30dc06e22d80.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/147/configs/tmp3fgg4zi_\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/2/5/5/dataset_255abad7-ab2f-4887-8a13-30dc06e22d80.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/2/5/5/dataset_255abad7-ab2f-4887-8a13-30dc06e22d80.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:09:46.981156",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qghhx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "696325c554b781a3",  "inputs": {   "adata": {    "id": "dc402b249f8dad5a",    "src": "hda",    "uuid": "a6ecec65-42b5-46c4-9c9e-dcc93a2517c7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635392.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:09:52"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635388.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:09:48"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "cc1aa524faf65458",    "src": "hda",    "uuid": "0f83f886-96e2-4e50-8ee1-89d46e07eede"   },   "hidden_output": {    "id": "b38de2a266bea477",    "src": "hda",    "uuid": "255abad7-ab2f-4887-8a13-30dc06e22d80"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2024-12-19T19:10:04.452448",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 36.648017168045044, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="35.028385400772095">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "8cfc91b8f94980be",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/c/d/dataset_ccd4bf8d-9b07-4f40-8e46-a1de5992c5bd.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/149/configs/tmp9fnowc2t\u0027 \u003e \u0027/galaxy/server/database/objects/b/5/4/dataset_b54e7dee-80c8-48e2-8594-d8403ed64842.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/149/configs/tmp9fnowc2t\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/b/5/4/dataset_b54e7dee-80c8-48e2-8594-d8403ed64842.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/b/5/4/dataset_b54e7dee-80c8-48e2-8594-d8403ed64842.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:10:22.657606",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bqpsr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "bbdf679e6ba7669c",  "inputs": {   "adata": {    "id": "8cfc91b8f94980be",    "src": "hda",    "uuid": "ccd4bf8d-9b07-4f40-8e46-a1de5992c5bd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635429.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:10:29"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635424.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:10:24"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "18c3501d4c037832",    "src": "hda",    "uuid": "e11c33ee-bc40-4d79-93d3-b03bb5c574f9"   },   "hidden_output": {    "id": "3a2a82c8ae39ed9b",    "src": "hda",    "uuid": "b54e7dee-80c8-48e2-8594-d8403ed64842"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2024-12-19T19:10:39.729260",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 35.028385400772095, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="34.472670793533325">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "647b88e070526698",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/3/6/b/dataset_36bf5b1c-26f4-4def-9025-be7219f99437.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/151/configs/tmppliseb8n\u0027 \u003e \u0027/galaxy/server/database/objects/8/a/6/dataset_8a646add-e021-42e6-a4d5-c22883950782.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/151/configs/tmppliseb8n\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/8/a/6/dataset_8a646add-e021-42e6-a4d5-c22883950782.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/8/a/6/dataset_8a646add-e021-42e6-a4d5-c22883950782.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-19T19:10:58.034106",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-c9h7s",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "b8f6b14c23b899ac",  "inputs": {   "adata": {    "id": "647b88e070526698",    "src": "hda",    "uuid": "36bf5b1c-26f4-4def-9025-be7219f99437"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734635463.0000000",    "title": "Job End Time",    "value": "2024-12-19 19:11:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734635459.0000000",    "title": "Job Start Time",    "value": "2024-12-19 19:10:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "2b8c15a677083eb8",    "src": "hda",    "uuid": "4a4990b9-5782-4eee-8a6f-b5a458ef8196"   },   "hidden_output": {    "id": "66b19d7b79874d42",    "src": "hda",    "uuid": "8a646add-e021-42e6-a4d5-c22883950782"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2024-12-19T19:11:14.253623",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 34.472670793533325, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.09399652481079102">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.09399652481079102, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.09383225440979004">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.09383225440979004, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="52.92730522155762">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="38.38487648963928">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="31.112191200256348">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="31.476710319519043">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="23.2319917678833">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "analysis_type": "ratio",  "vcf_input": {   "id": "54ff57ab5b237be7",   "src": "hda"  } }, "job": {  "command_line": "vcfhethomratio \u0027/galaxy/server/database/objects/d/4/5/dataset_d450e402-51d0-42e7-b097-5ec3e57f6501.dat\u0027 \u003e \u0027/galaxy/server/database/objects/b/2/b/dataset_b2be20ec-7b43-4fb6-83ca-219c68e1c005.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-19T19:19:14.362419",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-97brq",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "280b4157c908915d",  "inputs": {   "vcf_input": {    "id": "54ff57ab5b237be7",    "src": "hda",    "uuid": "d450e402-51d0-42e7-b097-5ec3e57f6501"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file1": {    "id": "6512ebca68171f1c",    "src": "hda",    "uuid": "b2be20ec-7b43-4fb6-83ca-219c68e1c005"   }  },  "params": {   "__input_ext": "\"vcf\"",   "analysis_type": "\"ratio\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-19T19:19:19.233927",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 23.2319917678833, "tool_id": "vcfhethom", "tool_version": "1.0.0_rc3+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="31.52345371246338">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="57.63273859024048">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="28.219090938568115">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fdr_col": "4",  "input": {   "id": "bde0305a477922f0",   "src": "hda"  },  "label_col": "1",  "labels|label_file": {   "id": "538b02ddb650e8c4",   "src": "hda"  },  "labels|label_select": "file",  "lfc_col": "2",  "lfc_thresh": "0",  "pval_col": "3" }, "job": {  "command_line": "Rscript \u0027/galaxy/server/database/jobs_directory/000/28/configs/tmp34w4kgan\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-19T18:41:07.107202",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-cx79d",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0de146342c1d9d11",  "id": "1f487e8372c24b3e",  "inputs": {   "input": {    "id": "bde0305a477922f0",    "src": "hda",    "uuid": "1143903e-c3ac-4016-adf1-2e74ec3ae3b4"   },   "labels|label_file": {    "id": "538b02ddb650e8c4",    "src": "hda",    "uuid": "1eae9e56-30d1-4961-a4c8-d2fdd6cd72a1"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "plot": {    "id": "ddf4f76384c565a7",    "src": "hda",    "uuid": "07c30352-3d3e-47fd-8e96-f21cf5e1a0e8"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fdr_col": "\"4\"",   "header": "\"auto\"",   "label_col": "\"1\"",   "labels": "{\"__current_case__\": 1, \"label_file\": {\"values\": [{\"id\": 53, \"src\": \"hda\"}]}, \"label_select\": \"file\"}",   "lfc_col": "\"2\"",   "lfc_thresh": "\"0.0\"",   "out_options": "{\"rscript_out\": false}",   "plot_options": "{\"boxes\": false, \"legend\": null, \"legend_labs\": \"Down,Not Sig,Up\", \"title\": null, \"xlab\": null, \"xmax\": \"\", \"xmin\": \"\", \"ylab\": null, \"ymax\": \"\"}",   "pval_col": "\"3\"",   "signif_thresh": "\"0.05\""  },  "state": "error",  "stderr": "Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n",  "stdout": "[1] \"Header row detected\"\nnull device \n          1 \nR version 4.0.5 (2021-03-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.so\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0   \n [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0     \n [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     \n[13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 \n[17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     \n[21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    \n[25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 \n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.6",  "tool_stderr": "Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n",  "tool_stdout": "[1] \"Header row detected\"\nnull device \n          1 \nR version 4.0.5 (2021-03-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.so\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0   \n [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0     \n [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     \n[13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 \n[17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     \n[21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    \n[25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 \n",  "update_time": "2024-12-19T18:41:15.565634",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.6, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.6, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n." ], "status": "failure", "test_index": 1, "time_seconds": 28.219090938568115, "tool_id": "volcanoplot", "tool_version": "0.0.6"}
                ]]></error>
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="35.047279357910156">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>