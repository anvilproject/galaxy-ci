{"version": "0.1", "suitename": "Galaxy Tool Tests", "results": {"total": 213, "errors": 37, "failures": 36, "skips": 6}, "tests": [{"id": "anndata_ops/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.20826315879821777, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.2125566005706787, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-1", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 1, "time_seconds": 0.14693903923034668, "execution_problem": "Input staging problem: Test input file (mnn.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-1", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 1, "time_seconds": 0.1501777172088623, "execution_problem": "Input staging problem: Test input file (mnn.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-2", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 2, "time_seconds": 0.14278364181518555, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-2", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 2, "time_seconds": 0.14818859100341797, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-3", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 3, "time_seconds": 0.14431977272033691, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-3", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 3, "time_seconds": 0.14498424530029297, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-4", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 4, "time_seconds": 0.1469743251800537, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-4", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 4, "time_seconds": 0.14038300514221191, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-5", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 5, "time_seconds": 0.15507769584655762, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-5", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 5, "time_seconds": 0.15322089195251465, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-6", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 6, "time_seconds": 0.14905047416687012, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-6", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 6, "time_seconds": 0.14961886405944824, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-7", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 7, "time_seconds": 0.1458454132080078, "execution_problem": "Input staging problem: Test input file (normalise_data.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-7", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 7, "time_seconds": 0.15254497528076172, "execution_problem": "Input staging problem: Test input file (normalise_data.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-8", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 8, "time_seconds": 0.14864540100097656, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-8", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 8, "time_seconds": 0.1524653434753418, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-9", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 9, "time_seconds": 0.15627741813659668, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-9", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 9, "time_seconds": 0.1424427032470703, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "bcftools_plugin_counts/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_plugin_counts", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 39.59830188751221, "inputs": {"input_file": {"src": "hda", "id": "ef94125f4bb42527"}}, "job": {"model_class": "Job", "id": "c10c6dc3f7adebc3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_counts/bcftools_plugin_counts/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:20:26.452088", "update_time": "2024-09-16T09:20:47.272042", "galaxy_version": "24.1", "external_id": "gxy-7qmvk", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/9/3/0/dataset_9308ecf6-1501-45c5-af1d-28f58f07538b.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools plugin counts                 input.vcf.gz | tee counts_file.txt && sed 's/^.* \\([a-zA-Z]*\\):[ ]*\\([0-9]*\\)$/\\1 \\2/' counts_file.txt | python /galaxy/server/database/jobs_directory/000/491/configs/tmpxqx8jtxr > '/galaxy/server/database/objects/d/2/5/dataset_d2566dec-a5ae-42f2-a142-7f98e7d9c2ee.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sec_restrict": "{\"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "ef94125f4bb42527", "src": "hda", "uuid": "9308ecf6-1501-45c5-af1d-28f58f07538b"}}, "outputs": {"output_file": {"id": "e76fa714e982af54", "src": "hda", "uuid": "d2566dec-a5ae-42f2-a142-7f98e7d9c2ee"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:20:34", "plugin": "core", "name": "end_epoch", "raw_value": "1726478434.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:20:34", "plugin": "core", "name": "start_epoch", "raw_value": "1726478434.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 28.1939959526062, "inputs": {"input_file": {"src": "hda", "id": "3aa524682c5eed61"}, "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "7c22540bae5628b3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "error", "exit_code": null, "create_time": "2024-09-16T09:21:06.814408", "update_time": "2024-09-16T09:21:16.605154", "galaxy_version": "24.1", "external_id": "gxy-j9lc7", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/f/a/5/dataset_fa59f664-df23-4908-aaf7-f692ce55573a.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/4/d/b/dataset_4dba0c87-c8c2-4a8a-8747-e5f9ea5a7dac.dat'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "3aa524682c5eed61", "src": "hda", "uuid": "fa59f664-df23-4908-aaf7-f692ce55573a"}}, "outputs": {"output_file": {"id": "ea5239fb6abf97c9", "src": "hda", "uuid": "4dba0c87-c8c2-4a8a-8747-e5f9ea5a7dac"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "bcftools_view/1.15.1+galaxy4-1", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 1, "time_seconds": 32.19761061668396, "inputs": {"input_file": {"src": "hda", "id": "45a2551ad004e2eb"}, "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "cc9ebefe625673b3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:21:35.772339", "update_time": "2024-09-16T09:21:48.971005", "galaxy_version": "24.1", "external_id": "gxy-sjxlv", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     ln -s '/galaxy/server/database/objects/d/c/7/dataset_dc7df054-f00a-4fca-9642-0595fdb5f719.dat' input.bcf && ln -s '/galaxy/server/database/objects/_metadata_files/2/7/7/metadata_277a73c7-3b49-4861-bf6c-95f62b37f2f2.dat' input.bcf.csi &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.bcf  > '/galaxy/server/database/objects/9/7/8/dataset_9787a9bd-93c0-4ed1-ac04-9e8b0082980e.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "45a2551ad004e2eb", "src": "hda", "uuid": "dc7df054-f00a-4fca-9642-0595fdb5f719"}}, "outputs": {"output_file": {"id": "42b73f8966f1ae0c", "src": "hda", "uuid": "9787a9bd-93c0-4ed1-ac04-9e8b0082980e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:21:38", "plugin": "core", "name": "end_epoch", "raw_value": "1726478498.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:21:37", "plugin": "core", "name": "start_epoch", "raw_value": "1726478497.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-10", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 10, "time_seconds": 30.44165325164795, "inputs": {"input_file": {"src": "hda", "id": "cd429a5c4ba68c74"}, "sec_filter|exclude_types": "snps", "sec_output|drop_genotypes": true, "output_type": "v"}, "job": {"model_class": "Job", "id": "097abe586345363e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:26:01.666490", "update_time": "2024-09-16T09:26:14.465992", "galaxy_version": "24.1", "external_id": "gxy-hxgqf", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/8/4/7/dataset_8476ede6-70c2-4002-bd55-7a0632e5b8e2.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --exclude-types \"snps\"  --drop-genotypes                   --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/7/d/9/dataset_7d92b44a-97ed-491d-bb4d-54c554c06478.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": true, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": \"snps\", \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "cd429a5c4ba68c74", "src": "hda", "uuid": "8476ede6-70c2-4002-bd55-7a0632e5b8e2"}}, "outputs": {"output_file": {"id": "868448aa0faf4624", "src": "hda", "uuid": "7d92b44a-97ed-491d-bb4d-54c554c06478"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:26:04", "plugin": "core", "name": "end_epoch", "raw_value": "1726478764.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:26:03", "plugin": "core", "name": "start_epoch", "raw_value": "1726478763.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-11", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 11, "time_seconds": 31.36065649986267, "inputs": {"input_file": {"src": "hda", "id": "d639d0d5156c187f"}, "sec_filter|select_genotype": "^het", "sec_filter|phased": "--phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "f6a8425bf14d7d61", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:26:33.143006", "update_time": "2024-09-16T09:26:45.765289", "galaxy_version": "24.1", "external_id": "gxy-wg4gg", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/a/e/2/dataset_ae2c5b88-e6c2-4642-83aa-e8ca0e79ea1c.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --genotype \"^het\" --phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/4/d/a/dataset_4dad1bc1-cad9-4d72-9da0-f8351e6f8bad.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--phased\", \"private\": null, \"select_genotype\": \"^het\", \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "d639d0d5156c187f", "src": "hda", "uuid": "ae2c5b88-e6c2-4642-83aa-e8ca0e79ea1c"}}, "outputs": {"output_file": {"id": "07586cfcbcd3dda2", "src": "hda", "uuid": "4dad1bc1-cad9-4d72-9da0-f8351e6f8bad"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:26:35", "plugin": "core", "name": "end_epoch", "raw_value": "1726478795.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:26:35", "plugin": "core", "name": "start_epoch", "raw_value": "1726478795.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-12", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 12, "time_seconds": 31.011085987091064, "inputs": {"input_file": {"src": "hda", "id": "9d9cead09f34f1a3"}, "sec_restrict|regions_overlap": "1", "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "b05bb67eebbcff96", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:27:04.230845", "update_time": "2024-09-16T09:27:16.902553", "galaxy_version": "24.1", "external_id": "gxy-2q4mm", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/c/0/c/dataset_c0c4fd27-42fc-4d57-9e9b-2e668cb168b8.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"            --regions-overlap 1          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/2/1/5/dataset_2158f04f-9949-44ab-b966-2ffe9c12ed05.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": \"1\", \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "9d9cead09f34f1a3", "src": "hda", "uuid": "c0c4fd27-42fc-4d57-9e9b-2e668cb168b8"}}, "outputs": {"output_file": {"id": "2117ce3aa4a9f99b", "src": "hda", "uuid": "2158f04f-9949-44ab-b966-2ffe9c12ed05"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:27:06", "plugin": "core", "name": "end_epoch", "raw_value": "1726478826.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:27:05", "plugin": "core", "name": "start_epoch", "raw_value": "1726478825.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-2", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 2, "time_seconds": 31.60039496421814, "inputs": {"input_file": {"src": "hda", "id": "45ba6cd92c7d9397"}, "sec_restrict|regions|regions_0|chrom": "Y", "sec_restrict|regions|regions_0|start": "20", "sec_restrict|regions|regions_src": "regions", "sec_subset|samples": "NA00003", "sec_filter|known_or_novel": "--novel", "sec_filter|private": "--exclude-private", "output_type": "v"}, "job": {"model_class": "Job", "id": "2b1476e73d876923", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:22:07.655766", "update_time": "2024-09-16T09:22:20.626463", "galaxy_version": "24.1", "external_id": "gxy-hpwf8", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/c/f/1/dataset_cf104a36-c12f-4ebc-b678-51dccd26d27e.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --novel --exclude-private                 --regions 'Y:20-'          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/c/3/8/dataset_c38b658a-8d3a-4916-9d82-a49c886ce877.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": \"--novel\", \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--exclude-private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"Y\", \"start\": \"20\", \"stop\": null}], \"regions_src\": \"regions\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "45ba6cd92c7d9397", "src": "hda", "uuid": "cf104a36-c12f-4ebc-b678-51dccd26d27e"}}, "outputs": {"output_file": {"id": "e279bfc2c12e0279", "src": "hda", "uuid": "c38b658a-8d3a-4916-9d82-a49c886ce877"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:22:10", "plugin": "core", "name": "end_epoch", "raw_value": "1726478530.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:22:09", "plugin": "core", "name": "start_epoch", "raw_value": "1726478529.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-3", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 3, "time_seconds": 33.356059551239014, "inputs": {"input_file": {"src": "hda", "id": "2ea52888385911ba"}, "sec_restrict|apply_filters": "PASS", "sec_restrict|regions|regions_0|chrom": "Y", "sec_restrict|regions|regions_0|start": "20", "sec_restrict|regions|regions_src": "regions", "sec_subset|samples": "NA00003", "sec_filter|known_or_novel": "--known", "sec_filter|private": "--exclude-private", "output_type": "v"}, "job": {"model_class": "Job", "id": "8a02e249819f8d94", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:22:40.345006", "update_time": "2024-09-16T09:22:53.834141", "galaxy_version": "24.1", "external_id": "gxy-5vwpl", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/3/4/4/dataset_344836e0-7bdd-466f-a114-55e4f784f7bf.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --known --exclude-private     --apply-filters 'PASS'             --regions 'Y:20-'          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/6/a/b/dataset_6abf540a-4f6d-4bf8-8ca8-321e143ba46d.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": \"--known\", \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--exclude-private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"PASS\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"Y\", \"start\": \"20\", \"stop\": null}], \"regions_src\": \"regions\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "2ea52888385911ba", "src": "hda", "uuid": "344836e0-7bdd-466f-a114-55e4f784f7bf"}}, "outputs": {"output_file": {"id": "8cd3495e48c8bb7e", "src": "hda", "uuid": "6abf540a-4f6d-4bf8-8ca8-321e143ba46d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:22:42", "plugin": "core", "name": "end_epoch", "raw_value": "1726478562.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:22:42", "plugin": "core", "name": "start_epoch", "raw_value": "1726478562.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-4", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 4, "time_seconds": 31.29729962348938, "inputs": {"input_file": {"src": "hda", "id": "d40e885db4ee31eb"}, "sec_subset|samples": "NA00003", "sec_filter|private": "--private", "output_type": "v"}, "job": {"model_class": "Job", "id": "e449a8d99af939ae", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:23:12.192943", "update_time": "2024-09-16T09:23:25.128330", "galaxy_version": "24.1", "external_id": "gxy-4n44w", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/3/b/3/dataset_3b39178d-4d0a-40f5-9fcf-ca1c3d7fe14b.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --private                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/d/c/d/dataset_dcddd66e-d68b-408d-a6be-2513a2a8abc5.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "d40e885db4ee31eb", "src": "hda", "uuid": "3b39178d-4d0a-40f5-9fcf-ca1c3d7fe14b"}}, "outputs": {"output_file": {"id": "cb7097cff5b78a1a", "src": "hda", "uuid": "dcddd66e-d68b-408d-a6be-2513a2a8abc5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:23:14", "plugin": "core", "name": "end_epoch", "raw_value": "1726478594.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:23:13", "plugin": "core", "name": "start_epoch", "raw_value": "1726478593.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-5", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 5, "time_seconds": 33.00221562385559, "inputs": {"input_file": {"src": "hda", "id": "a77dc1be7861a08d"}, "sec_restrict|include": "QUAL==999 && (FS<20 || FS>=41.02) && ICF>-0.1 && HWE*2>1.2", "output_type": "v"}, "job": {"model_class": "Job", "id": "554b64171cc0f692", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:23:44.830308", "update_time": "2024-09-16T09:23:58.223424", "galaxy_version": "24.1", "external_id": "gxy-8bfq8", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/3/3/d/dataset_33d47d61-e8a9-4a43-b4bf-b4ada2eccac1.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view               --include 'QUAL==999 && (FS<20 || FS>=41.02) && ICF>-0.1 && HWE*2>1.2'               --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/e/e/b/dataset_eebda239-2fb3-491c-a0dd-82d7663505fb.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": \"QUAL==999 && (FS<20 || FS>=41.02) && ICF>-0.1 && HWE*2>1.2\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "a77dc1be7861a08d", "src": "hda", "uuid": "33d47d61-e8a9-4a43-b4bf-b4ada2eccac1"}}, "outputs": {"output_file": {"id": "0df1342ad70df1ef", "src": "hda", "uuid": "eebda239-2fb3-491c-a0dd-82d7663505fb"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:23:47", "plugin": "core", "name": "end_epoch", "raw_value": "1726478627.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:23:46", "plugin": "core", "name": "start_epoch", "raw_value": "1726478626.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-6", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 6, "time_seconds": 31.04282522201538, "inputs": {"input_file": {"src": "hda", "id": "e4b7ce6761734be5"}, "sec_filter|phased": "--phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "3a5930b1286378e3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:24:16.892948", "update_time": "2024-09-16T09:24:29.607951", "galaxy_version": "24.1", "external_id": "gxy-2d7q9", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/8/7/d/dataset_87da0b2f-0efd-43c6-a0f4-20e199551c73.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/8/b/6/dataset_8b6e46e0-0d27-470c-a8f6-465ca726ad85.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--phased\", \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "e4b7ce6761734be5", "src": "hda", "uuid": "87da0b2f-0efd-43c6-a0f4-20e199551c73"}}, "outputs": {"output_file": {"id": "c08d90f36cedd233", "src": "hda", "uuid": "8b6e46e0-0d27-470c-a8f6-465ca726ad85"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:24:19", "plugin": "core", "name": "end_epoch", "raw_value": "1726478659.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:24:18", "plugin": "core", "name": "start_epoch", "raw_value": "1726478658.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-7", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 7, "time_seconds": 31.08632516860962, "inputs": {"input_file": {"src": "hda", "id": "e9005073b17570db"}, "sec_filter|phased": "--exclude-phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "af9f3be5828bf2df", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:24:48.064324", "update_time": "2024-09-16T09:25:00.763142", "galaxy_version": "24.1", "external_id": "gxy-2shfj", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/6/9/8/dataset_698cfa6d-1e22-4eb2-83d9-842be9b5901d.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --exclude-phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/a/5/9/dataset_a5965143-29bd-43b9-8586-38e8a3f3dbd1.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--exclude-phased\", \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "e9005073b17570db", "src": "hda", "uuid": "698cfa6d-1e22-4eb2-83d9-842be9b5901d"}}, "outputs": {"output_file": {"id": "ec77c4f7349af931", "src": "hda", "uuid": "a5965143-29bd-43b9-8586-38e8a3f3dbd1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:24:50", "plugin": "core", "name": "end_epoch", "raw_value": "1726478690.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:24:49", "plugin": "core", "name": "start_epoch", "raw_value": "1726478689.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-8", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 8, "time_seconds": 32.53673839569092, "inputs": {"input_file": {"src": "hda", "id": "67f47a9f3f476f59"}, "sec_filter|min_alleles": "2", "sec_filter|max_alleles": "2", "sec_filter|min_af": "0.3", "sec_filter|max_af": "0.7", "sec_output|header": "--header-only", "output_type": "v"}, "job": {"model_class": "Job", "id": "656d60fdf66fb7c9", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:25:20.463345", "update_time": "2024-09-16T09:25:33.220643", "galaxy_version": "24.1", "external_id": "gxy-5fdpl", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/5/3/2/dataset_53237620-bc77-4ae3-ba6c-7f2ab7432e7a.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --min-alleles 2 --max-alleles 2 --min-af 0.3 --max-af 0.7   --header-only                   --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/9/f/c/dataset_9fcd5285-2977-4f7d-bab2-ca4a484f2118.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": \"--header-only\", \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"0.7\", \"max_alleles\": \"2\", \"min_ac\": \"\", \"min_af\": \"0.3\", \"min_alleles\": \"2\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "67f47a9f3f476f59", "src": "hda", "uuid": "53237620-bc77-4ae3-ba6c-7f2ab7432e7a"}}, "outputs": {"output_file": {"id": "33867b92712c11fd", "src": "hda", "uuid": "9fcd5285-2977-4f7d-bab2-ca4a484f2118"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:25:22", "plugin": "core", "name": "end_epoch", "raw_value": "1726478722.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:25:21", "plugin": "core", "name": "start_epoch", "raw_value": "1726478721.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-9", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 9, "time_seconds": 10.618873834609985, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-0", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 0, "time_seconds": 39.369932413101196, "inputs": {"library|input_1": {"src": "hda", "id": "eaacc668801d179c"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "e42318fd2e75ddee", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:48:49.940182", "update_time": "2024-09-16T06:49:08.849185", "galaxy_version": "24.1", "external_id": "gxy-xfk8j", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/c/0/dataset_1c05a8e0-6e6d-4825-a3f3-745c3a1f6614.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 70, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "eaacc668801d179c", "src": "hda", "uuid": "1c05a8e0-6e6d-4825-a3f3-745c3a1f6614"}}, "outputs": {"out1": {"id": "3d4acc4491e0ee73", "src": "hda", "uuid": "5968b730-0dde-47d1-be94-e996538d413f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13466.438 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13466.438 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:48:56", "plugin": "core", "name": "end_epoch", "raw_value": "1726469336.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:48:56", "plugin": "core", "name": "start_epoch", "raw_value": "1726469336.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-0", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 0, "time_seconds": 33.68573451042175, "inputs": {"library|input_1": {"src": "hda", "id": "91ba979c1da9e439"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "ba0a2ab1ed851f86", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:12:49.839603", "update_time": "2024-09-16T07:13:03.803646", "galaxy_version": "24.1", "external_id": "gxy-jw4pv", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/b/4/dataset_9b45e87b-2a94-40f6-997b-c0956e3da7e9.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 194, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "91ba979c1da9e439", "src": "hda", "uuid": "9b45e87b-2a94-40f6-997b-c0956e3da7e9"}}, "outputs": {"out1": {"id": "da7e21f004f371b0", "src": "hda", "uuid": "8449d4cc-7808-4140-aaa7-160ae00bd5ff"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13285.875 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13285.875 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:12:52", "plugin": "core", "name": "end_epoch", "raw_value": "1726470772.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:12:51", "plugin": "core", "name": "start_epoch", "raw_value": "1726470771.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-1", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 1, "time_seconds": 30.699697732925415, "inputs": {"library|input_1": {"src": "hda", "id": "bcd6565af3654c41"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "c3b0faf4f03a2a85", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:49:27.248503", "update_time": "2024-09-16T06:49:39.871250", "galaxy_version": "24.1", "external_id": "gxy-mnp85", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/9/e/dataset_e9e37521-2351-43c2-8cb1-a4ac15843e97.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 72, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "bcd6565af3654c41", "src": "hda", "uuid": "e9e37521-2351-43c2-8cb1-a4ac15843e97"}}, "outputs": {"out1": {"id": "a5b4a26b37497a15", "src": "hda", "uuid": "3d47e538-67f8-4073-b4c8-19f0f4f21a88"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.096 s (968.976 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.096 s (968.976 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:49:29", "plugin": "core", "name": "end_epoch", "raw_value": "1726469369.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:49:29", "plugin": "core", "name": "start_epoch", "raw_value": "1726469369.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-1", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 1, "time_seconds": 10.274370193481445, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-10", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 10, "time_seconds": 33.54759335517883, "inputs": {"library|input_1": {"src": "hda", "id": "9a81c66cdc536d29"}, "library|r1|front_adapters_0|adapter_source|adapter_name": "A1", "library|r1|front_adapters_0|adapter_source|adapter": "^GTCGGTAA", "library|r1|front_adapters_0|adapter_source|adapter_source_list": "user", "library|r1|front_adapters_1|adapter_source|adapter_name": "A2", "library|r1|front_adapters_1|adapter_source|adapter": "^AGGTCACT", "library|r1|front_adapters_1|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "71129469a994a52d", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:53:31.617674", "update_time": "2024-09-16T06:53:45.372092", "galaxy_version": "24.1", "external_id": "gxy-n24zb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/2/3/dataset_a23d6f04-12f9-4ff1-9893-8f1341d383a2.dat' 'cutadapt_in_split_fastq.fq' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g 'A1'='^GTCGGTAA'   -g 'A2'='^AGGTCACT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq'  'cutadapt_in_split_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"multiple_output\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 96, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^GTCGGTAA\", \"adapter_name\": \"A1\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}, {\"__index__\": 1, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^AGGTCACT\", \"adapter_name\": \"A2\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}]}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "9a81c66cdc536d29", "src": "hda", "uuid": "a23d6f04-12f9-4ff1-9893-8f1341d383a2"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "c50f0b6cc413c3a1", "src": "hda", "uuid": "b652e857-8af1-4eed-af9b-aaf2a986fa05"}, "__new_primary_file_split_output|A2__": {"id": "9a60509646d5856f", "src": "hda", "uuid": "8db8585b-db9f-4270-9d40-3d2ccac530b9"}, "__new_primary_file_split_output|unknown__": {"id": "e4eb3ce598be32b1", "src": "hda", "uuid": "82dba7e6-04e3-48f5-aed8-358e210b8e4d"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "f7cc85e5c8187cec"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.066 s (5957.560 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.066 s (5957.560 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:53:34", "plugin": "core", "name": "end_epoch", "raw_value": "1726469614.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:53:33", "plugin": "core", "name": "start_epoch", "raw_value": "1726469613.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-10", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 10, "time_seconds": 24.625555992126465, "inputs": {"library|input_1": {"src": "hda", "id": "7355b744714e89f8"}, "library|r1|front_adapters_0|adapter_source|adapter_name": "A1", "library|r1|front_adapters_0|adapter_source|adapter": "^GTCGGTAA", "library|r1|front_adapters_0|adapter_source|adapter_source_list": "user", "library|r1|front_adapters_1|adapter_source|adapter_name": "A2", "library|r1|front_adapters_1|adapter_source|adapter": "^AGGTCACT", "library|r1|front_adapters_1|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "a680122b940c8af9", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-09-16T07:17:07.740787", "update_time": "2024-09-16T07:17:13.607123", "galaxy_version": "24.1", "external_id": "gxy-wgtxn", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/4/8/dataset_24841a4d-a3ce-44b8-bed0-f57b0d6b8e7e.dat' 'cutadapt_in_split_fastq.fq' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g 'A1'='^GTCGGTAA'   -g 'A2'='^AGGTCACT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq'  'cutadapt_in_split_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"multiple_output\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 220, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^GTCGGTAA\", \"adapter_name\": \"A1\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}, {\"__index__\": 1, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^AGGTCACT\", \"adapter_name\": \"A2\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}]}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "7355b744714e89f8", "src": "hda", "uuid": "24841a4d-a3ce-44b8-bed0-f57b0d6b8e7e"}}, "outputs": {}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "e0f88ebcd058d6a3"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.062 s (5615.798 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.062 s (5615.798 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Output collection 'split_output': expected to have 3 elements, but it had 0."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-11", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 11, "time_seconds": 25.49462342262268, "inputs": {"library|input_1": {"src": "hda", "id": "12c31d91d5113f60"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"src": "hda", "id": "f4a20f6dede7b631"}, "library|r1|front_adapters_0|adapter_source|adapter_source_list": "file", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "cb9e48107de1f7b5", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-09-16T06:54:05.990183", "update_time": "2024-09-16T06:54:11.521629", "galaxy_version": "24.1", "external_id": "gxy-6ljn7", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/a/d/dataset_2ad88cb8-bd66-4ecf-85cf-06a3b32d2c3e.dat' 'cutadapt_in_split_fastq_gz.fq.gz' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g file:'/galaxy/server/database/objects/d/6/3/dataset_d63a8a3e-1271-48bb-99c7-78c18d9502f0.dat'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq.gz'  'cutadapt_in_split_fastq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"multiple_output\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 100, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 2, \"adapter_file\": {\"values\": [{\"id\": 101, \"src\": \"hda\"}]}, \"adapter_source_list\": \"file\"}, \"single_noindels\": false}]}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "12c31d91d5113f60", "src": "hda", "uuid": "2ad88cb8-bd66-4ecf-85cf-06a3b32d2c3e"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"id": "f4a20f6dede7b631", "src": "hda", "uuid": "d63a8a3e-1271-48bb-99c7-78c18d9502f0"}}, "outputs": {}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "d350d55bad3911cf"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g file:/galaxy/server/database/objects/d/6/3/dataset_d63a8a3e-1271-48bb-99c7-78c18d9502f0.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.228 s (20731.969 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g file:/galaxy/server/database/objects/d/6/3/dataset_d63a8a3e-1271-48bb-99c7-78c18d9502f0.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.228 s (20731.969 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Output collection 'split_output': expected to have 3 elements, but it had 0."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-11", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 11, "time_seconds": 32.685190200805664, "inputs": {"library|input_1": {"src": "hda", "id": "be1a4e350a0ac33c"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"src": "hda", "id": "6c2f107bed275bd2"}, "library|r1|front_adapters_0|adapter_source|adapter_source_list": "file", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "3766fa05b2dbc8d4", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:17:33.090911", "update_time": "2024-09-16T07:17:45.475648", "galaxy_version": "24.1", "external_id": "gxy-z7vqw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/0/c/dataset_c0c72fc8-f5b5-4e0a-a529-873d66c8f875.dat' 'cutadapt_in_split_fastq_gz.fq.gz' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g file:'/galaxy/server/database/objects/5/d/7/dataset_5d7bef63-806f-4815-b274-70be905934e5.dat'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq.gz'  'cutadapt_in_split_fastq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"multiple_output\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 221, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 2, \"adapter_file\": {\"values\": [{\"id\": 222, \"src\": \"hda\"}]}, \"adapter_source_list\": \"file\"}, \"single_noindels\": false}]}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "be1a4e350a0ac33c", "src": "hda", "uuid": "c0c72fc8-f5b5-4e0a-a529-873d66c8f875"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"id": "6c2f107bed275bd2", "src": "hda", "uuid": "5d7bef63-806f-4815-b274-70be905934e5"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "5a6e160c8e5132fc", "src": "hda", "uuid": "bd95578e-e373-49dd-b7d7-ecaf9d3c57b3"}, "__new_primary_file_split_output|A2__": {"id": "61c40cb06ea37cd7", "src": "hda", "uuid": "ab4c3759-a152-4037-94d7-2f8bc73953e3"}, "__new_primary_file_split_output|unknown__": {"id": "7934601b2b12256f", "src": "hda", "uuid": "b1a50bda-7fe3-42c6-9203-76cd409870f6"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "0669c6cbfd5a25cb"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g file:/galaxy/server/database/objects/5/d/7/dataset_5d7bef63-806f-4815-b274-70be905934e5.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.226 s (20511.389 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -g file:/galaxy/server/database/objects/5/d/7/dataset_5d7bef63-806f-4815-b274-70be905934e5.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.226 s (20511.389 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:17:35", "plugin": "core", "name": "end_epoch", "raw_value": "1726471055.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:17:34", "plugin": "core", "name": "start_epoch", "raw_value": "1726471054.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-12", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 12, "time_seconds": 24.653456926345825, "inputs": {"library|input_1": {"src": "hda", "id": "72652bc1e7c55af2"}, "library|r1|adapters_0|adapter_source|adapter": "AAAT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "d4bff936fcd55af7", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-09-16T06:54:30.469098", "update_time": "2024-09-16T06:54:35.957819", "galaxy_version": "24.1", "external_id": "gxy-dfpjk", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/2/8/dataset_528cb999-628f-43c2-9ce7-8b45c537413b.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq' -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 102, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "72652bc1e7c55af2", "src": "hda", "uuid": "528cb999-628f-43c2-9ce7-8b45c537413b"}}, "outputs": {"out1": {"id": "20383f9c59d6c8b1", "src": "hda", "uuid": "4af30bc2-50f1-47c1-a486-b6a743965282"}, "untrimmed_output": {"id": "8fd56e7a8a7f2c24", "src": "hda", "uuid": "3e6e03a7-cfa7-437f-9be4-f98052ef42a0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (15709.559 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (15709.559 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-12", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 12, "time_seconds": 33.41563391685486, "inputs": {"library|input_1": {"src": "hda", "id": "9eded39c4e909109"}, "library|r1|adapters_0|adapter_source|adapter": "AAAT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "ac049d2d314d926c", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:18:05.449487", "update_time": "2024-09-16T07:18:18.706744", "galaxy_version": "24.1", "external_id": "gxy-nz59f", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/6/1/dataset_d6159f46-35f7-423a-9e9e-e2a2c589c8b4.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq' -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 226, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "9eded39c4e909109", "src": "hda", "uuid": "d6159f46-35f7-423a-9e9e-e2a2c589c8b4"}}, "outputs": {"out1": {"id": "5b2df17673ece313", "src": "hda", "uuid": "f5c56e4b-c1a1-4e7a-a59a-1596fdfcfd64"}, "untrimmed_output": {"id": "72c713416a456b45", "src": "hda", "uuid": "dbd49b96-a950-4570-9960-4d32bc98a12f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (15535.037 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (15535.037 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:18:07", "plugin": "core", "name": "end_epoch", "raw_value": "1726471087.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:18:07", "plugin": "core", "name": "start_epoch", "raw_value": "1726471087.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-13", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 13, "time_seconds": 34.05899429321289, "inputs": {"library|input_1": {"src": "hda", "id": "ec9dad03d80dabc1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "2fdaf3ea63606562", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:54:55.526034", "update_time": "2024-09-16T06:55:09.625913", "galaxy_version": "24.1", "external_id": "gxy-4cw45", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/9/6/dataset_89698610-eb2f-4601-becf-fad2419d8f49.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq.gz' -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 105, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "ec9dad03d80dabc1", "src": "hda", "uuid": "89698610-eb2f-4601-becf-fad2419d8f49"}}, "outputs": {"out1": {"id": "64d0cfdd46670c5d", "src": "hda", "uuid": "bd737f39-5e8c-4733-ad3b-8d7077b4bdeb"}, "untrimmed_output": {"id": "8c90d84f75fda997", "src": "hda", "uuid": "076ba030-8df1-48e3-8ac4-9f913ccc1e4f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.152 s (1535.502 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.152 s (1535.502 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:54:58", "plugin": "core", "name": "end_epoch", "raw_value": "1726469698.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:54:57", "plugin": "core", "name": "start_epoch", "raw_value": "1726469697.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-13", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 13, "time_seconds": 34.109534740448, "inputs": {"library|input_1": {"src": "hda", "id": "04b6603da12c1a5f"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "241aca38b3116eb1", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:18:39.347251", "update_time": "2024-09-16T07:18:52.959210", "galaxy_version": "24.1", "external_id": "gxy-j9bc5", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/6/2/dataset_7620aa08-024b-417a-a81a-9aa71575c09c.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq.gz' -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 229, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "04b6603da12c1a5f", "src": "hda", "uuid": "7620aa08-024b-417a-a81a-9aa71575c09c"}}, "outputs": {"out1": {"id": "ab51654030b3bf63", "src": "hda", "uuid": "64e99b1d-af1c-40b6-b3b1-9e3999ad32d9"}, "untrimmed_output": {"id": "772b46eb74419864", "src": "hda", "uuid": "25f9c0d3-c80c-41fc-9cb4-cf5bb6fb481c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.156 s (1575.993 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.156 s (1575.993 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:18:41", "plugin": "core", "name": "end_epoch", "raw_value": "1726471121.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:18:40", "plugin": "core", "name": "start_epoch", "raw_value": "1726471120.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-14", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 14, "time_seconds": 33.53926730155945, "inputs": {"library|input_1": {"src": "hda", "id": "39a1b34f08845f84"}, "library|input_2": {"src": "hda", "id": "db05894456f309d5"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|discard_untrimmed": true, "filter_options|minimum_length": "1", "filter_options|maximum_length": "1000", "filter_options|max_n": "0", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "8c5111ff018d9f9d", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:55:30.840567", "update_time": "2024-09-16T06:55:44.320256", "galaxy_version": "24.1", "external_id": "gxy-xffnm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/7/b/dataset_07b37ad5-03fe-4452-adda-d06c632251cc.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/5/7/b/dataset_57bad4e0-15df-43d1-8c9d-65255aad50be.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim       --discard-untrimmed  --minimum-length=1 --maximum-length=1000 --max-n=0.0  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": true, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"0.0\", \"maximum_length\": \"1000\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 108, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 109, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "39a1b34f08845f84", "src": "hda", "uuid": "07b37ad5-03fe-4452-adda-d06c632251cc"}, "library|input_2": {"id": "db05894456f309d5", "src": "hda", "uuid": "57bad4e0-15df-43d1-8c9d-65255aad50be"}}, "outputs": {"out1": {"id": "3e57518cb9508153", "src": "hda", "uuid": "2735be88-aab0-430f-ab9b-fb6bbd8b2cac"}, "out2": {"id": "df0c65f117e4a679", "src": "hda", "uuid": "e49fdd9c-e562-4389-ba38-8d9cdc0f3db4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1592.573 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1592.573 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:55:33", "plugin": "core", "name": "end_epoch", "raw_value": "1726469733.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:55:32", "plugin": "core", "name": "start_epoch", "raw_value": "1726469732.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-14", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 14, "time_seconds": 33.21695399284363, "inputs": {"library|input_1": {"src": "hda", "id": "0101e94faf13cc4c"}, "library|input_2": {"src": "hda", "id": "90117d23d4a51711"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|discard_untrimmed": true, "filter_options|minimum_length": "1", "filter_options|maximum_length": "1000", "filter_options|max_n": "0", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "3469c81136af2e19", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:19:13.863255", "update_time": "2024-09-16T07:19:27.203285", "galaxy_version": "24.1", "external_id": "gxy-gtggm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/3/3/dataset_f33ca522-4150-403a-8213-b3dae3d489dc.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/2/2/6/dataset_22663431-4598-4abe-ac21-1b133d6d7d11.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim       --discard-untrimmed  --minimum-length=1 --maximum-length=1000 --max-n=0.0  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": true, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"0.0\", \"maximum_length\": \"1000\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 232, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 233, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "0101e94faf13cc4c", "src": "hda", "uuid": "f33ca522-4150-403a-8213-b3dae3d489dc"}, "library|input_2": {"id": "90117d23d4a51711", "src": "hda", "uuid": "22663431-4598-4abe-ac21-1b133d6d7d11"}}, "outputs": {"out1": {"id": "66c74819604113d0", "src": "hda", "uuid": "f834f045-9491-4e29-9cfa-451ff3c08dc4"}, "out2": {"id": "2e301301a8c00336", "src": "hda", "uuid": "6c2935d0-6759-402b-9f4e-8dbccdc6d2fa"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.156 s (1577.103 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.156 s (1577.103 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:19:16", "plugin": "core", "name": "end_epoch", "raw_value": "1726471156.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:19:15", "plugin": "core", "name": "start_epoch", "raw_value": "1726471155.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-15", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 15, "time_seconds": 31.571184396743774, "inputs": {"library|input_1": {"src": "hda", "id": "e45f238b41f3c129"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5"}, "job": {"model_class": "Job", "id": "557b0456f53adfdc", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:56:02.659978", "update_time": "2024-09-16T06:56:15.427001", "galaxy_version": "24.1", "external_id": "gxy-zcfhm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/9/f/dataset_f9fac3ca-5aa2-4d12-9181-ff9a94762264.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 112, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "e45f238b41f3c129", "src": "hda", "uuid": "f9fac3ca-5aa2-4d12-9181-ff9a94762264"}}, "outputs": {"out1": {"id": "3b31dbc3d42725cc", "src": "hda", "uuid": "f819772c-fd43-405e-82c2-4859a5c6e854"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13334.274 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13334.274 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:56:04", "plugin": "core", "name": "end_epoch", "raw_value": "1726469764.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:56:04", "plugin": "core", "name": "start_epoch", "raw_value": "1726469764.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-15", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 15, "time_seconds": 32.698928117752075, "inputs": {"library|input_1": {"src": "hda", "id": "cce38fed8b27961d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5"}, "job": {"model_class": "Job", "id": "5c720bc1f25e1146", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:19:46.819854", "update_time": "2024-09-16T07:19:59.694820", "galaxy_version": "24.1", "external_id": "gxy-rmksp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/2/a/dataset_92a6d5b9-da8c-4b94-a680-5ff80a00b4cb.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 236, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "cce38fed8b27961d", "src": "hda", "uuid": "92a6d5b9-da8c-4b94-a680-5ff80a00b4cb"}}, "outputs": {"out1": {"id": "3f4b1246427c2156", "src": "hda", "uuid": "2aa7e776-94b7-4ba1-aa25-ead53f46308d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (14481.783 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (14481.783 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:19:48", "plugin": "core", "name": "end_epoch", "raw_value": "1726471188.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:19:48", "plugin": "core", "name": "start_epoch", "raw_value": "1726471188.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-16", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 16, "time_seconds": 32.21357607841492, "inputs": {"library|input_1": {"src": "hda", "id": "ad83cc10758aa277"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5", "read_mod_options|rename": "{id} barcode={cut_prefix}"}, "job": {"model_class": "Job", "id": "2529aca2aec1c52b", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:56:34.958696", "update_time": "2024-09-16T06:56:47.726848", "galaxy_version": "24.1", "external_id": "gxy-lrxvw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/1/9/dataset_01906c16-dba1-4739-b58a-2e76acd4055f.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1    --rename='{id} barcode={cut_prefix}'   -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": \"{id} barcode={cut_prefix}\", \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 114, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "ad83cc10758aa277", "src": "hda", "uuid": "01906c16-dba1-4739-b58a-2e76acd4055f"}}, "outputs": {"out1": {"id": "9544ba28c9067f15", "src": "hda", "uuid": "132d37e6-14fb-44f7-96a6-c046a53e0a8c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.039 s (12893.041 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.039 s (12893.041 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:56:37", "plugin": "core", "name": "end_epoch", "raw_value": "1726469797.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:56:36", "plugin": "core", "name": "start_epoch", "raw_value": "1726469796.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-16", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 16, "time_seconds": 33.27824521064758, "inputs": {"library|input_1": {"src": "hda", "id": "81efc37612bc712b"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5", "read_mod_options|rename": "{id} barcode={cut_prefix}"}, "job": {"model_class": "Job", "id": "536b839d6e620b94", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:20:19.376747", "update_time": "2024-09-16T07:20:33.014521", "galaxy_version": "24.1", "external_id": "gxy-5kdcj", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/3/9/dataset_939bfb94-2dfb-4c55-b2c9-d7b7ed02df34.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1    --rename='{id} barcode={cut_prefix}'   -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": \"{id} barcode={cut_prefix}\", \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 238, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "81efc37612bc712b", "src": "hda", "uuid": "939bfb94-2dfb-4c55-b2c9-d7b7ed02df34"}}, "outputs": {"out1": {"id": "9a8fecc37381b84b", "src": "hda", "uuid": "723ced4c-497e-4764-a681-7ffad50ea459"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.039 s (13090.134 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.039 s (13090.134 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:20:22", "plugin": "core", "name": "end_epoch", "raw_value": "1726471222.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:20:21", "plugin": "core", "name": "start_epoch", "raw_value": "1726471221.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-17", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 17, "time_seconds": 32.16948843002319, "inputs": {"library|input_1": {"src": "hda", "id": "362d4d62af679d64"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "retain"}, "job": {"model_class": "Job", "id": "eaacc668801d179c", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:57:07.218809", "update_time": "2024-09-16T06:57:19.982328", "galaxy_version": "24.1", "external_id": "gxy-l6js7", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/2/2/dataset_f220b459-899f-4014-9298-e4279bb2d01a.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=retain         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"retain\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 116, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "362d4d62af679d64", "src": "hda", "uuid": "f220b459-899f-4014-9298-e4279bb2d01a"}}, "outputs": {"out1": {"id": "3b2f5a6b9dac759a", "src": "hda", "uuid": "9af389cf-2b6d-4783-ae60-5f7cbe421995"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13412.237 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13412.237 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:57:09", "plugin": "core", "name": "end_epoch", "raw_value": "1726469829.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:57:08", "plugin": "core", "name": "start_epoch", "raw_value": "1726469828.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-17", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 17, "time_seconds": 32.13473057746887, "inputs": {"library|input_1": {"src": "hda", "id": "08fdfe21eb0bb0dc"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "retain"}, "job": {"model_class": "Job", "id": "99c19bebb3c94603", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:20:52.410493", "update_time": "2024-09-16T07:21:05.337806", "galaxy_version": "24.1", "external_id": "gxy-f65dt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/9/0/dataset_3900abb6-9ee9-43e8-8e73-7a8a0380c5bf.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=retain         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"retain\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 240, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "08fdfe21eb0bb0dc", "src": "hda", "uuid": "3900abb6-9ee9-43e8-8e73-7a8a0380c5bf"}}, "outputs": {"out1": {"id": "23f866b86637cdcd", "src": "hda", "uuid": "436e3a97-8ef2-4d4b-8242-134e94b65c71"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13825.655 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13825.655 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:20:54", "plugin": "core", "name": "end_epoch", "raw_value": "1726471254.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:20:53", "plugin": "core", "name": "start_epoch", "raw_value": "1726471253.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-18", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 18, "time_seconds": 32.15819215774536, "inputs": {"library|input_1": {"src": "hda", "id": "f8b856eb8677c14e"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "mask"}, "job": {"model_class": "Job", "id": "bcd6565af3654c41", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:57:39.484552", "update_time": "2024-09-16T06:57:52.253638", "galaxy_version": "24.1", "external_id": "gxy-pgck2", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/7/b/dataset_27b8bbbb-399e-4e36-8e3c-2a744482c633.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=mask         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"mask\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 118, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "f8b856eb8677c14e", "src": "hda", "uuid": "27b8bbbb-399e-4e36-8e3c-2a744482c633"}}, "outputs": {"out1": {"id": "0e9295ea5017719a", "src": "hda", "uuid": "1f95198a-c144-4045-9313-49258d00577c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13249.079 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13249.079 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:57:41", "plugin": "core", "name": "end_epoch", "raw_value": "1726469861.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:57:41", "plugin": "core", "name": "start_epoch", "raw_value": "1726469861.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-18", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 18, "time_seconds": 34.46804904937744, "inputs": {"library|input_1": {"src": "hda", "id": "b00e2545ce19dcbd"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "mask"}, "job": {"model_class": "Job", "id": "23d367ee2c973e3f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:21:25.560246", "update_time": "2024-09-16T07:21:39.615431", "galaxy_version": "24.1", "external_id": "gxy-w8gg2", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/4/e/dataset_74e0fda3-3159-48ae-b929-095ed4e020d2.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=mask         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"mask\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 242, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "b00e2545ce19dcbd", "src": "hda", "uuid": "74e0fda3-3159-48ae-b929-095ed4e020d2"}}, "outputs": {"out1": {"id": "ef59b97a6b16437d", "src": "hda", "uuid": "ce9dd17d-75c7-45bc-ba3b-a38bcd25f2b2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.042 s (13989.290 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.042 s (13989.290 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:21:28", "plugin": "core", "name": "end_epoch", "raw_value": "1726471288.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:21:27", "plugin": "core", "name": "start_epoch", "raw_value": "1726471287.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-19", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 19, "time_seconds": 33.18127131462097, "inputs": {"library|input_1": {"src": "hda", "id": "aba02be15f9e381b"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "lowercase"}, "job": {"model_class": "Job", "id": "405136b08b00dc4c", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:58:11.711701", "update_time": "2024-09-16T06:58:25.491405", "galaxy_version": "24.1", "external_id": "gxy-4gtql", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/6/b/dataset_66b8ecc0-9b17-4fcf-87f7-5a59d562c9f7.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=lowercase         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"lowercase\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 120, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "aba02be15f9e381b", "src": "hda", "uuid": "66b8ecc0-9b17-4fcf-87f7-5a59d562c9f7"}}, "outputs": {"out1": {"id": "f3da778c524e3842", "src": "hda", "uuid": "a1b67fc1-11fd-4399-82dc-2f2969d827ef"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13730.685 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13730.685 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:58:14", "plugin": "core", "name": "end_epoch", "raw_value": "1726469894.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:58:14", "plugin": "core", "name": "start_epoch", "raw_value": "1726469894.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-19", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 19, "time_seconds": 32.14208674430847, "inputs": {"library|input_1": {"src": "hda", "id": "21eae5b1b6e37832"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "lowercase"}, "job": {"model_class": "Job", "id": "5c1e6303b511be44", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:21:59.061614", "update_time": "2024-09-16T07:22:12.001745", "galaxy_version": "24.1", "external_id": "gxy-p2lrx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/a/b/dataset_aab4c854-c22c-4e9b-b544-dbd613ad874a.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=lowercase         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"lowercase\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 244, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "21eae5b1b6e37832", "src": "hda", "uuid": "aab4c854-c22c-4e9b-b544-dbd613ad874a"}}, "outputs": {"out1": {"id": "7c6dc0cf51c7a3c9", "src": "hda", "uuid": "3f643431-018d-4e17-bdd9-427ff98ab5d4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.042 s (13841.947 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.042 s (13841.947 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:22:00", "plugin": "core", "name": "end_epoch", "raw_value": "1726471320.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:22:00", "plugin": "core", "name": "start_epoch", "raw_value": "1726471320.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-2", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 2, "time_seconds": 34.3818633556366, "inputs": {"library|input_1": {"src": "hda", "id": "405136b08b00dc4c"}, "library|input_2": {"src": "hda", "id": "faf28de08d43dbd9"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "fe95789085498f17", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:49:59.796336", "update_time": "2024-09-16T06:50:13.550058", "galaxy_version": "24.1", "external_id": "gxy-jpbmm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/0/b/dataset_90bc0b76-6c0f-4146-9fed-c918a4b575c2.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/5/2/6/dataset_526ad2cd-aac4-43aa-a054-fa40386cdc65.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 74, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 75, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "405136b08b00dc4c", "src": "hda", "uuid": "90bc0b76-6c0f-4146-9fed-c918a4b575c2"}, "library|input_2": {"id": "faf28de08d43dbd9", "src": "hda", "uuid": "526ad2cd-aac4-43aa-a054-fa40386cdc65"}}, "outputs": {"out1": {"id": "fb6289417099a2b3", "src": "hda", "uuid": "0a2d5de9-5ba2-4df1-9284-50330fd3c283"}, "out2": {"id": "98b7d6cafc4ad35e", "src": "hda", "uuid": "5df49718-4211-4d51-bd43-9a4de05a30c8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.177 s (1786.328 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.177 s (1786.328 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:50:02", "plugin": "core", "name": "end_epoch", "raw_value": "1726469402.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:50:01", "plugin": "core", "name": "start_epoch", "raw_value": "1726469401.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-2", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 2, "time_seconds": 33.992194414138794, "inputs": {"library|input_1": {"src": "hda", "id": "f317cc8d92eb0d82"}, "library|input_2": {"src": "hda", "id": "2e8529c2b7610007"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "d5f07d1c2faadb54", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:13:34.085035", "update_time": "2024-09-16T07:13:47.560091", "galaxy_version": "24.1", "external_id": "gxy-qc4pg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/6/f/dataset_b6f62492-5979-4328-9aeb-56eced7cdbef.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/f/4/d/dataset_f4dfe347-21a4-4321-a34f-ec83c90efe28.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 197, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 198, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "f317cc8d92eb0d82", "src": "hda", "uuid": "b6f62492-5979-4328-9aeb-56eced7cdbef"}, "library|input_2": {"id": "2e8529c2b7610007", "src": "hda", "uuid": "f4dfe347-21a4-4321-a34f-ec83c90efe28"}}, "outputs": {"out1": {"id": "6f74e23889fb06cd", "src": "hda", "uuid": "2c648f02-0db7-47d7-a8fe-e84088aa8932"}, "out2": {"id": "085141e37a3d56bd", "src": "hda", "uuid": "755c4438-011a-4cdb-85f5-d43192286215"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.168 s (1694.715 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.168 s (1694.715 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:13:36", "plugin": "core", "name": "end_epoch", "raw_value": "1726470816.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:13:35", "plugin": "core", "name": "start_epoch", "raw_value": "1726470815.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-20", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 20, "time_seconds": 31.166792154312134, "inputs": {"library|input_1": {"src": "hda", "id": "ede172df637c85b4"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "crop"}, "job": {"model_class": "Job", "id": "fb6289417099a2b3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:58:44.307976", "update_time": "2024-09-16T06:58:56.820882", "galaxy_version": "24.1", "external_id": "gxy-69qwr", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/f/d/dataset_6fd995c6-2417-46a6-b09e-cae7d9b253bd.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=crop         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"crop\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 122, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "ede172df637c85b4", "src": "hda", "uuid": "6fd995c6-2417-46a6-b09e-cae7d9b253bd"}}, "outputs": {"out1": {"id": "cda2b51222fc9ed6", "src": "hda", "uuid": "4e73946f-2157-4fc2-b59a-aa7f04deb366"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13271.411 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13271.411 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:58:46", "plugin": "core", "name": "end_epoch", "raw_value": "1726469926.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:58:45", "plugin": "core", "name": "start_epoch", "raw_value": "1726469925.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-20", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 20, "time_seconds": 32.165483236312866, "inputs": {"library|input_1": {"src": "hda", "id": "705af8e916d1734c"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "crop"}, "job": {"model_class": "Job", "id": "5a30dcf84222eefe", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:22:31.704980", "update_time": "2024-09-16T07:22:44.345678", "galaxy_version": "24.1", "external_id": "gxy-p5t59", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/3/7/dataset_337ba38f-1bdf-469f-8a01-98c52628b8cc.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=crop         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"crop\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 246, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "705af8e916d1734c", "src": "hda", "uuid": "337ba38f-1bdf-469f-8a01-98c52628b8cc"}}, "outputs": {"out1": {"id": "381f773a9158738b", "src": "hda", "uuid": "6c264e7e-297a-4fd1-b48c-07433e196ac5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13597.965 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13597.965 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:22:33", "plugin": "core", "name": "end_epoch", "raw_value": "1726471353.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:22:33", "plugin": "core", "name": "start_epoch", "raw_value": "1726471353.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-21", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 21, "time_seconds": 32.21050834655762, "inputs": {"library|input_1": {"src": "hda", "id": "0146a526db89bed6"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "none"}, "job": {"model_class": "Job", "id": "c3cefa50b60de7d5", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:59:16.259044", "update_time": "2024-09-16T06:59:29.066538", "galaxy_version": "24.1", "external_id": "gxy-swtr9", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/f/e/dataset_cfec03ef-11a5-483b-8a61-abfee44ee387.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=none         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"none\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 124, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "0146a526db89bed6", "src": "hda", "uuid": "cfec03ef-11a5-483b-8a61-abfee44ee387"}}, "outputs": {"out1": {"id": "c239ad4fd4030e17", "src": "hda", "uuid": "f35ba1d0-bc0b-4a89-b2c5-eb158e5d09eb"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13472.557 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13472.557 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:59:18", "plugin": "core", "name": "end_epoch", "raw_value": "1726469958.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:59:18", "plugin": "core", "name": "start_epoch", "raw_value": "1726469958.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-21", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 21, "time_seconds": 33.02686023712158, "inputs": {"library|input_1": {"src": "hda", "id": "59c3697f0e95e7a5"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "none"}, "job": {"model_class": "Job", "id": "d5fb83bc82b639eb", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:23:03.877926", "update_time": "2024-09-16T07:23:17.369316", "galaxy_version": "24.1", "external_id": "gxy-g5zrk", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/9/9/dataset_d99da70e-f186-449a-bd75-3a272dc52a3b.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=none         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"none\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 248, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "59c3697f0e95e7a5", "src": "hda", "uuid": "d99da70e-f186-449a-bd75-3a272dc52a3b"}}, "outputs": {"out1": {"id": "991c94d57213227a", "src": "hda", "uuid": "88f908bd-70f6-446a-abaf-c71c5b8b212d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (15587.807 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (15587.807 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:23:06", "plugin": "core", "name": "end_epoch", "raw_value": "1726471386.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:23:05", "plugin": "core", "name": "start_epoch", "raw_value": "1726471385.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-22", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 22, "time_seconds": 31.35391092300415, "inputs": {"library|input_1": {"src": "hda", "id": "399a2563093ddbb4"}, "library|r1|adapters_0|adapter_source|adapter": "TAAACAGATTAGT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|revcomp": true}, "job": {"model_class": "Job", "id": "39c9779a3fdc6aa3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:59:47.588575", "update_time": "2024-09-16T07:00:00.570714", "galaxy_version": "24.1", "external_id": "gxy-ltbpf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/0/4/dataset_a04db62d-89dc-4e01-bf27-629daa3fb9dd.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TAAACAGATTAGT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim --rc        --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": true, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 126, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TAAACAGATTAGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "399a2563093ddbb4", "src": "hda", "uuid": "a04db62d-89dc-4e01-bf27-629daa3fb9dd"}}, "outputs": {"out1": {"id": "bab5777fffbac739", "src": "hda", "uuid": "355a4fdf-07fc-465e-9f43-9dd48d6a78e4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13624.271 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13624.271 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:59:49", "plugin": "core", "name": "end_epoch", "raw_value": "1726469989.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:59:48", "plugin": "core", "name": "start_epoch", "raw_value": "1726469988.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-22", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 22, "time_seconds": 32.26939868927002, "inputs": {"library|input_1": {"src": "hda", "id": "4a7529dc595e532e"}, "library|r1|adapters_0|adapter_source|adapter": "TAAACAGATTAGT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|revcomp": true}, "job": {"model_class": "Job", "id": "4ee462f113384a19", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:23:36.893891", "update_time": "2024-09-16T07:23:49.706948", "galaxy_version": "24.1", "external_id": "gxy-2hgvt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/7/0/dataset_07037731-8e06-4714-b49e-e842a78488c4.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TAAACAGATTAGT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim --rc        --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": true, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 250, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TAAACAGATTAGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "4a7529dc595e532e", "src": "hda", "uuid": "07037731-8e06-4714-b49e-e842a78488c4"}}, "outputs": {"out1": {"id": "0b01ce480d251aab", "src": "hda", "uuid": "46ad9a84-c657-4d25-bde6-ac700a48e6e1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13328.632 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13328.632 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:23:39", "plugin": "core", "name": "end_epoch", "raw_value": "1726471419.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:23:38", "plugin": "core", "name": "start_epoch", "raw_value": "1726471418.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-23", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 23, "time_seconds": 35.2008957862854, "inputs": {"library|input_1": {"src": "hda", "id": "b34d1eb733976ca7"}, "library|input_2": {"src": "hda", "id": "07a75711419291c2"}, "library|r1|adapters_0|adapter_source|adapter": "ATCTGGTTCC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "CTACAAG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "30", "filter_options|minimum_length2": "10", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "790b5ae8ec8dae5e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:00:20.944366", "update_time": "2024-09-16T07:00:35.079520", "galaxy_version": "24.1", "external_id": "gxy-5w9qc", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/a/6/dataset_ba6409ba-fd3a-4a50-8eaa-d5f9f163d640.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/4/f/a/dataset_4faef292-e28b-403a-b54e-5dec4d6e6684.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'ATCTGGTTCC'    -A 'CTACAAG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=30:10  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"30\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 128, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ATCTGGTTCC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CTACAAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "b34d1eb733976ca7", "src": "hda", "uuid": "ba6409ba-fd3a-4a50-8eaa-d5f9f163d640"}, "library|input_2": {"id": "07a75711419291c2", "src": "hda", "uuid": "4faef292-e28b-403a-b54e-5dec4d6e6684"}}, "outputs": {"out1": {"id": "aa2d492b55f1b5bd", "src": "hda", "uuid": "038cb2b0-86c8-4b27-8889-9f586f85342d"}, "out2": {"id": "eecbd89625a92169", "src": "hda", "uuid": "c504a309-5ecd-41f9-8517-70af93abbb58"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.178 s (1797.917 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.178 s (1797.917 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:00:23", "plugin": "core", "name": "end_epoch", "raw_value": "1726470023.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:00:23", "plugin": "core", "name": "start_epoch", "raw_value": "1726470023.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-23", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 23, "time_seconds": 34.727678298950195, "inputs": {"library|input_1": {"src": "hda", "id": "8f36d7f41f5db81f"}, "library|input_2": {"src": "hda", "id": "615cdf5036192dfc"}, "library|r1|adapters_0|adapter_source|adapter": "ATCTGGTTCC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "CTACAAG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "30", "filter_options|minimum_length2": "10", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "9e96c5b54005a212", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:24:10.808494", "update_time": "2024-09-16T07:24:24.106745", "galaxy_version": "24.1", "external_id": "gxy-rx5wg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/f/d/dataset_3fd3e1d1-79da-4240-80a3-1f81f0675bfa.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/0/e/5/dataset_0e56614b-7217-435d-837f-273bd3b5b39d.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'ATCTGGTTCC'    -A 'CTACAAG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=30:10  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"30\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 252, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 253, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ATCTGGTTCC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CTACAAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "8f36d7f41f5db81f", "src": "hda", "uuid": "3fd3e1d1-79da-4240-80a3-1f81f0675bfa"}, "library|input_2": {"id": "615cdf5036192dfc", "src": "hda", "uuid": "0e56614b-7217-435d-837f-273bd3b5b39d"}}, "outputs": {"out1": {"id": "98c068dbc9346216", "src": "hda", "uuid": "d69e0159-e6f5-47e3-b374-c713b393bf85"}, "out2": {"id": "a726eae9a52ffc28", "src": "hda", "uuid": "db44eb4a-d447-4c19-89a6-fd3611c46581"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.167 s (1689.220 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.167 s (1689.220 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:24:13", "plugin": "core", "name": "end_epoch", "raw_value": "1726471453.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:24:12", "plugin": "core", "name": "start_epoch", "raw_value": "1726471452.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-24", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 24, "time_seconds": 10.78370475769043, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-24", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 24, "time_seconds": 10.983618021011353, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-25", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 25, "time_seconds": 11.348298072814941, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-25", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 25, "time_seconds": 35.03505802154541, "inputs": {"library|input_1": {"src": "hda", "id": "d6742bcb74697d9a"}, "library|input_2": {"src": "hda", "id": "261b0cd1b3daa66a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "de0ee99ce2f52568", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:24:56.253073", "update_time": "2024-09-16T07:25:10.164136", "galaxy_version": "24.1", "external_id": "gxy-drskt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/7/9/dataset_a79746ec-7c88-47b6-b490-17c94612c416.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/2/7/f/dataset_27f86f26-cbae-4c2f-bae0-fc5e1d3143ef.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"10\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 258, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 259, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "d6742bcb74697d9a", "src": "hda", "uuid": "a79746ec-7c88-47b6-b490-17c94612c416"}, "library|input_2": {"id": "261b0cd1b3daa66a", "src": "hda", "uuid": "27f86f26-cbae-4c2f-bae0-fc5e1d3143ef"}}, "outputs": {"out1": {"id": "fc0b3e6edda22f80", "src": "hda", "uuid": "2c70da70-783f-492b-aebf-231ba3c391d6"}, "out2": {"id": "d57977b5cdda5968", "src": "hda", "uuid": "bdc35151-d077-4ad2-9922-a2a17a05a844"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.163 s (1649.483 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.163 s (1649.483 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:24:58", "plugin": "core", "name": "end_epoch", "raw_value": "1726471498.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:24:58", "plugin": "core", "name": "start_epoch", "raw_value": "1726471498.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-26", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 26, "time_seconds": 39.43693208694458, "inputs": {"library|input_1": {"src": "hda", "id": "a4ff92605f804fb6"}, "library|input_2": {"src": "hda", "id": "ba0a2ab1ed851f86"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|minimum_length2": "10", "filter_options|maximum_length": "50", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "678dca344c8abbf1", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:01:23.478600", "update_time": "2024-09-16T07:01:37.096227", "galaxy_version": "24.1", "external_id": "gxy-csd4z", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/8/7/dataset_d8795bc0-2a86-459c-9398-67a713355290.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/b/a/f/dataset_bafe3b2c-b69f-4966-943f-cdd12602aa98.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10:10 --maximum-length=50  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"\", \"minimum_length\": \"10\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 137, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "a4ff92605f804fb6", "src": "hda", "uuid": "d8795bc0-2a86-459c-9398-67a713355290"}, "library|input_2": {"id": "ba0a2ab1ed851f86", "src": "hda", "uuid": "bafe3b2c-b69f-4966-943f-cdd12602aa98"}}, "outputs": {"out1": {"id": "c5d0645d301bdf08", "src": "hda", "uuid": "b999b6b2-ee75-4f6d-ae95-2a5f5aadacbe"}, "out2": {"id": "464fdd00419114ee", "src": "hda", "uuid": "b1315bd8-e2cc-414e-98f6-8a4cff4d54ee"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1606.048 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1606.048 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:01:26", "plugin": "core", "name": "end_epoch", "raw_value": "1726470086.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:01:25", "plugin": "core", "name": "start_epoch", "raw_value": "1726470085.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-26", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 26, "time_seconds": 34.32848072052002, "inputs": {"library|input_1": {"src": "hda", "id": "15cd5a7aba3c7cd8"}, "library|input_2": {"src": "hda", "id": "f80cd618eb1773a1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|minimum_length2": "10", "filter_options|maximum_length": "50", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "b1f9f59dd6576dcf", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:25:30.697549", "update_time": "2024-09-16T07:25:44.405538", "galaxy_version": "24.1", "external_id": "gxy-qf22t", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/f/0/dataset_2f02f963-66eb-4f9f-9a2c-5739eeba130e.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/8/f/d/dataset_8fd87594-57ed-4f00-9f42-c69cd6f85592.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10:10 --maximum-length=50  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"\", \"minimum_length\": \"10\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 263, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "15cd5a7aba3c7cd8", "src": "hda", "uuid": "2f02f963-66eb-4f9f-9a2c-5739eeba130e"}, "library|input_2": {"id": "f80cd618eb1773a1", "src": "hda", "uuid": "8fd87594-57ed-4f00-9f42-c69cd6f85592"}}, "outputs": {"out1": {"id": "8bcf6bd1f1d38d5b", "src": "hda", "uuid": "19a6c340-554e-4648-9c63-1fbdda56304c"}, "out2": {"id": "3e7cc47c42bd64de", "src": "hda", "uuid": "6782d283-d5dc-4dc4-ac08-63f818dd0edd"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.157 s (1586.165 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.157 s (1586.165 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:25:33", "plugin": "core", "name": "end_epoch", "raw_value": "1726471533.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:25:32", "plugin": "core", "name": "start_epoch", "raw_value": "1726471532.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-27", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 27, "time_seconds": 31.686288833618164, "inputs": {"library|input_1": {"src": "hda", "id": "3c5e6b48bdb83365"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "28124923f92eee1e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:01:56.431344", "update_time": "2024-09-16T07:02:09.427060", "galaxy_version": "24.1", "external_id": "gxy-rdds5", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/9/f/dataset_39f72778-ba59-4fac-ba19-c903afa8004c.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 140, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "3c5e6b48bdb83365", "src": "hda", "uuid": "39f72778-ba59-4fac-ba19-c903afa8004c"}}, "outputs": {"out1": {"id": "d5f07d1c2faadb54", "src": "hda", "uuid": "effcf82d-3038-4464-94dd-2f7b19f70d25"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.042 s (14132.102 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.042 s (14132.102 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:01:58", "plugin": "core", "name": "end_epoch", "raw_value": "1726470118.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:01:58", "plugin": "core", "name": "start_epoch", "raw_value": "1726470118.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-27", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 27, "time_seconds": 33.25086450576782, "inputs": {"library|input_1": {"src": "hda", "id": "04245fe9402d6be7"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "da7e21f004f371b0", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:26:04.637430", "update_time": "2024-09-16T07:26:18.500032", "galaxy_version": "24.1", "external_id": "gxy-58stt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/f/7/dataset_3f75e273-189c-41e7-aa5f-28c03486793e.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 266, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "04245fe9402d6be7", "src": "hda", "uuid": "3f75e273-189c-41e7-aa5f-28c03486793e"}}, "outputs": {"out1": {"id": "00974fdb3defe636", "src": "hda", "uuid": "5c932feb-1209-4ee5-880d-d74ded4cba07"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13378.859 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13378.859 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:26:07", "plugin": "core", "name": "end_epoch", "raw_value": "1726471567.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:26:06", "plugin": "core", "name": "start_epoch", "raw_value": "1726471566.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-28", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 28, "time_seconds": 32.36524844169617, "inputs": {"library|input_1": {"src": "hda", "id": "7104960acb26928b"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "5prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "952b21ce2a89bb11", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:02:28.931196", "update_time": "2024-09-16T07:02:41.720658", "galaxy_version": "24.1", "external_id": "gxy-hn24q", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/a/4/dataset_2a4a65b8-212d-4c6a-9d18-85ea05646fc6.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=-10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"5prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "7104960acb26928b", "src": "hda", "uuid": "2a4a65b8-212d-4c6a-9d18-85ea05646fc6"}}, "outputs": {"out1": {"id": "3abd9d7f95828ae6", "src": "hda", "uuid": "ecd20fa9-5a41-421e-917e-ffb811da1ff8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (12415.091 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (12415.091 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:02:31", "plugin": "core", "name": "end_epoch", "raw_value": "1726470151.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:02:30", "plugin": "core", "name": "start_epoch", "raw_value": "1726470150.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-28", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 28, "time_seconds": 32.268352031707764, "inputs": {"library|input_1": {"src": "hda", "id": "432ada42d855ac46"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "5prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "f317cc8d92eb0d82", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:26:36.929103", "update_time": "2024-09-16T07:26:50.732764", "galaxy_version": "24.1", "external_id": "gxy-6ttwn", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/f/2/dataset_6f2abe08-6225-4799-9111-abf2700957c3.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=-10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"5prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 268, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "432ada42d855ac46", "src": "hda", "uuid": "6f2abe08-6225-4799-9111-abf2700957c3"}}, "outputs": {"out1": {"id": "cb464e59d29ad20e", "src": "hda", "uuid": "3f25bd1e-fd14-4376-a871-ed47d8a3c7db"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13237.874 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13237.874 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:26:39", "plugin": "core", "name": "end_epoch", "raw_value": "1726471599.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:26:39", "plugin": "core", "name": "start_epoch", "raw_value": "1726471599.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-29", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 29, "time_seconds": 31.88967204093933, "inputs": {"library|input_1": {"src": "hda", "id": "7c493eddbc988e5a"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "5prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "9a81c66cdc536d29", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:03:00.312409", "update_time": "2024-09-16T07:03:13.133419", "galaxy_version": "24.1", "external_id": "gxy-l6v7s", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/5/9/dataset_c59e6a21-a655-4205-8d85-843b92ef96fc.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/c/5/9/dataset_c59e6a21-a655-4205-8d85-843b92ef96fc.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10 -L -10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"5prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "7c493eddbc988e5a", "src": "hda", "uuid": "c59e6a21-a655-4205-8d85-843b92ef96fc"}, "library|input_2": {"id": "7c493eddbc988e5a", "src": "hda", "uuid": "c59e6a21-a655-4205-8d85-843b92ef96fc"}}, "outputs": {"out1": {"id": "547f6c3fb7fca6da", "src": "hda", "uuid": "168075cc-bad7-4e63-b4bb-713b520ee287"}, "out2": {"id": "c01a79cb1796b098", "src": "hda", "uuid": "0df61151-fb31-4e08-99b3-f53174d1a3b7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.065 s (21552.404 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.065 s (21552.404 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:03:02", "plugin": "core", "name": "end_epoch", "raw_value": "1726470182.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:03:01", "plugin": "core", "name": "start_epoch", "raw_value": "1726470181.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-29", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 29, "time_seconds": 24.8819580078125, "inputs": {"library|input_1": {"src": "hda", "id": "c3e0c7e5fa8c6382"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "5prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "6f74e23889fb06cd", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-09-16T07:27:10.368078", "update_time": "2024-09-16T07:27:15.803270", "galaxy_version": "24.1", "external_id": "gxy-7r2ml", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/a/d/dataset_3ade053d-9e15-4c89-9d15-081326453b0d.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/3/a/d/dataset_3ade053d-9e15-4c89-9d15-081326453b0d.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10 -L -10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"5prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 270, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 270, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "c3e0c7e5fa8c6382", "src": "hda", "uuid": "3ade053d-9e15-4c89-9d15-081326453b0d"}, "library|input_2": {"id": "c3e0c7e5fa8c6382", "src": "hda", "uuid": "3ade053d-9e15-4c89-9d15-081326453b0d"}}, "outputs": {"out1": {"id": "6f84291b1a15338f", "src": "hda", "uuid": "b3d92fda-e02c-4579-bce4-2e61bad981b6"}, "out2": {"id": "7dd126491718c64d", "src": "hda", "uuid": "3aed3abd-f809-4f7c-baee-6f24ff395e5a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.064 s (21429.539 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.064 s (21429.539 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-3", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 3, "time_seconds": 33.45720648765564, "inputs": {"library|input_1": {"src": "hdca", "id": "724d3f54a60d6a13"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "a31d217558126206", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:50:34.789936", "update_time": "2024-09-16T06:50:47.790809", "galaxy_version": "24.1", "external_id": "gxy-t626p", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/8/e/dataset_18e756c2-c227-43f4-949f-d3d3e92f646c.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/c/6/f/dataset_c6f3663d-1652-41a2-a4bf-85c15980f072.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 5, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "c3cefa50b60de7d5", "src": "hda", "uuid": "18e756c2-c227-43f4-949f-d3d3e92f646c"}, "library|input_12": {"id": "540757739d4efbac", "src": "hda", "uuid": "c6f3663d-1652-41a2-a4bf-85c15980f072"}}, "outputs": {"out_pairs|__part__|forward": {"id": "39c9779a3fdc6aa3", "src": "hda", "uuid": "866d7deb-a2f4-4141-91d6-2273f20131d5"}, "out_pairs|__part__|reverse": {"id": "515fa6c93a0afbe7", "src": "hda", "uuid": "306c5a09-1fcb-4ef4-8f6e-c7fc07c672c8"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "8414950d701877f4"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.171 s (1731.964 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.171 s (1731.964 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:50:37", "plugin": "core", "name": "end_epoch", "raw_value": "1726469437.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:50:36", "plugin": "core", "name": "start_epoch", "raw_value": "1726469436.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-3", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 3, "time_seconds": 35.08689022064209, "inputs": {"library|input_1": {"src": "hdca", "id": "a46d6c50e521c12a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "7c493eddbc988e5a", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:14:08.635904", "update_time": "2024-09-16T07:14:23.063806", "galaxy_version": "24.1", "external_id": "gxy-6prtp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/6/c/dataset_c6c35d34-9bc1-4ff4-93a6-c40605cc4317.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/3/7/2/dataset_372e27fe-2b0d-4424-87b8-b71b52f8fb53.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 15, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "9da04654b186b186", "src": "hda", "uuid": "c6c35d34-9bc1-4ff4-93a6-c40605cc4317"}, "library|input_12": {"id": "907e9b1222afa70c", "src": "hda", "uuid": "372e27fe-2b0d-4424-87b8-b71b52f8fb53"}}, "outputs": {"out_pairs|__part__|forward": {"id": "fdb45154c30fc673", "src": "hda", "uuid": "47df9659-7a00-491d-909e-8240e5a8ed8b"}, "out_pairs|__part__|reverse": {"id": "e1e2a9e31cface25", "src": "hda", "uuid": "d9fcd045-4ba8-4802-b674-c98a2ecbb96d"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "7134b3b036f4a733"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.176 s (1781.194 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.176 s (1781.194 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:14:11", "plugin": "core", "name": "end_epoch", "raw_value": "1726470851.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:14:10", "plugin": "core", "name": "start_epoch", "raw_value": "1726470850.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-30", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 30, "time_seconds": 33.089688301086426, "inputs": {"library|input_1": {"src": "hda", "id": "413be5ac4dd1f3c7"}, "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "3prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "9a60509646d5856f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:03:33.839698", "update_time": "2024-09-16T07:03:46.356194", "galaxy_version": "24.1", "external_id": "gxy-8zxrq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/4/c/dataset_04ca2c8b-726e-412b-93a2-376b4ce37fbb.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/0/4/c/dataset_04ca2c8b-726e-412b-93a2-376b4ce37fbb.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     -L 10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"3prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "413be5ac4dd1f3c7", "src": "hda", "uuid": "04ca2c8b-726e-412b-93a2-376b4ce37fbb"}, "library|input_2": {"id": "413be5ac4dd1f3c7", "src": "hda", "uuid": "04ca2c8b-726e-412b-93a2-376b4ce37fbb"}}, "outputs": {"out1": {"id": "600bb0232f2ffb14", "src": "hda", "uuid": "5b71d824-6052-422a-aec8-76f09ce2971c"}, "out2": {"id": "f3d00c5050326ca6", "src": "hda", "uuid": "7350f5cc-7f91-4032-889e-f95ad5173429"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.049 s (16255.697 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.049 s (16255.697 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:03:36", "plugin": "core", "name": "end_epoch", "raw_value": "1726470216.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:03:35", "plugin": "core", "name": "start_epoch", "raw_value": "1726470215.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-30", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 30, "time_seconds": 33.25668525695801, "inputs": {"library|input_1": {"src": "hda", "id": "aa01df763ea0be57"}, "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "3prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "9da04654b186b186", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:27:35.696143", "update_time": "2024-09-16T07:27:48.568572", "galaxy_version": "24.1", "external_id": "gxy-5c8cr", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/2/b/dataset_12b33a40-56cd-41f0-b76a-2155bce47411.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/1/2/b/dataset_12b33a40-56cd-41f0-b76a-2155bce47411.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     -L 10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"3prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 273, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 273, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "aa01df763ea0be57", "src": "hda", "uuid": "12b33a40-56cd-41f0-b76a-2155bce47411"}, "library|input_2": {"id": "aa01df763ea0be57", "src": "hda", "uuid": "12b33a40-56cd-41f0-b76a-2155bce47411"}}, "outputs": {"out1": {"id": "e72efb43b07abad6", "src": "hda", "uuid": "b26b5e19-ee11-4ba2-a35b-c90dd810edbb"}, "out2": {"id": "dc80a41e58b8655e", "src": "hda", "uuid": "6a8c043a-7a21-43c7-b70d-8c1edbc9d713"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.049 s (16265.313 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.049 s (16265.313 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:27:38", "plugin": "core", "name": "end_epoch", "raw_value": "1726471658.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:27:37", "plugin": "core", "name": "start_epoch", "raw_value": "1726471657.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-31", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 31, "time_seconds": 32.58812642097473, "inputs": {"library|input_1": {"src": "hda", "id": "9632ffdc7a656d21"}, "library|r1|adapters_0|adapter_source|adapter": "AGCGGCTTAGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "filter_options|max_expected_errors": "10"}, "job": {"model_class": "Job", "id": "12c31d91d5113f60", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:04:06.653171", "update_time": "2024-09-16T07:04:19.574525", "galaxy_version": "24.1", "external_id": "gxy-clvnw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/e/0/dataset_1e06d57a-494d-4d03-a999-2dcfa50c2b0f.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCGGCTTAGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --max-ee=10.0      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"10.0\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 150, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCGGCTTAGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "9632ffdc7a656d21", "src": "hda", "uuid": "1e06d57a-494d-4d03-a999-2dcfa50c2b0f"}}, "outputs": {"out1": {"id": "af5ce87bf4f2fc7e", "src": "hda", "uuid": "816c600a-b5fb-48d2-9adb-a973831480bd"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (14182.568 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (14182.568 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:04:09", "plugin": "core", "name": "end_epoch", "raw_value": "1726470249.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:04:08", "plugin": "core", "name": "start_epoch", "raw_value": "1726470248.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-31", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 31, "time_seconds": 32.45340394973755, "inputs": {"library|input_1": {"src": "hda", "id": "e9fc471c049a99aa"}, "library|r1|adapters_0|adapter_source|adapter": "AGCGGCTTAGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "filter_options|max_expected_errors": "10"}, "job": {"model_class": "Job", "id": "fdb45154c30fc673", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:28:08.994691", "update_time": "2024-09-16T07:28:21.624168", "galaxy_version": "24.1", "external_id": "gxy-vfghz", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/8/3/dataset_88304278-1970-4e2b-bc0b-bc5b14e4490a.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCGGCTTAGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --max-ee=10.0      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"10.0\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 276, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCGGCTTAGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "e9fc471c049a99aa", "src": "hda", "uuid": "88304278-1970-4e2b-bc0b-bc5b14e4490a"}}, "outputs": {"out1": {"id": "09b2701cec3b83bc", "src": "hda", "uuid": "cfc5cff8-86a8-417c-b84c-3a5ffd42b1c8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.039 s (13091.803 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.039 s (13091.803 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:28:11", "plugin": "core", "name": "end_epoch", "raw_value": "1726471691.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:28:10", "plugin": "core", "name": "start_epoch", "raw_value": "1726471690.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-32", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 32, "time_seconds": 32.517430782318115, "inputs": {"library|input_1": {"src": "hda", "id": "7b790e429226aa5b"}, "library|r1|adapters_0|adapter_source|adapter": "GAANTAGCTACCACX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "72652bc1e7c55af2", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:04:39.225636", "update_time": "2024-09-16T07:04:52.003265", "galaxy_version": "24.1", "external_id": "gxy-ndghm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/4/0/dataset_24051281-1a42-49a7-aa2f-6ad0bd7ee3c1.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GAANTAGCTACCACX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GAANTAGCTACCACX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "7b790e429226aa5b", "src": "hda", "uuid": "24051281-1a42-49a7-aa2f-6ad0bd7ee3c1"}}, "outputs": {"out1": {"id": "c464382a1b2309de", "src": "hda", "uuid": "33e6f808-e353-4006-a030-337aeda1dfd8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13493.538 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (13493.538 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:04:41", "plugin": "core", "name": "end_epoch", "raw_value": "1726470281.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:04:40", "plugin": "core", "name": "start_epoch", "raw_value": "1726470280.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-32", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 32, "time_seconds": 53.999629497528076, "inputs": {"library|input_1": {"src": "hda", "id": "790235b0ed929eee"}, "library|r1|adapters_0|adapter_source|adapter": "GAANTAGCTACCACX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "6dfaa5a86a849709", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:28:40.853181", "update_time": "2024-09-16T07:29:15.541285", "galaxy_version": "24.1", "external_id": "gxy-4bwnz", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/6/1/dataset_f611bc63-6d80-4c30-8f52-6b6d57546993.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GAANTAGCTACCACX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 278, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GAANTAGCTACCACX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "790235b0ed929eee", "src": "hda", "uuid": "f611bc63-6d80-4c30-8f52-6b6d57546993"}}, "outputs": {"out1": {"id": "e0772e42a62e434c", "src": "hda", "uuid": "7c1d85e5-5f27-4678-95f6-be6e2ff6f76c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.044 s (14767.249 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.044 s (14767.249 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:29:05", "plugin": "core", "name": "end_epoch", "raw_value": "1726471745.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:29:04", "plugin": "core", "name": "start_epoch", "raw_value": "1726471744.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-33", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 33, "time_seconds": 35.47253155708313, "inputs": {"library|input_1": {"src": "hda", "id": "b23d54b6bb880582"}, "library|input_2": {"src": "hda", "id": "91a861816f10f7ee"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "ec9dad03d80dabc1", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:05:13.250777", "update_time": "2024-09-16T07:05:27.300114", "galaxy_version": "24.1", "external_id": "gxy-4lfkf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/4/b/dataset_94b7c092-fd6a-46db-8d60-64c265f9e4cb.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/f/0/5/dataset_f0507e42-de81-4c73-b325-22d3a2e93969.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGCX'    -A 'AGATCGGAAGAGCX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "b23d54b6bb880582", "src": "hda", "uuid": "94b7c092-fd6a-46db-8d60-64c265f9e4cb"}, "library|input_2": {"id": "91a861816f10f7ee", "src": "hda", "uuid": "f0507e42-de81-4c73-b325-22d3a2e93969"}}, "outputs": {"out1": {"id": "a680122b940c8af9", "src": "hda", "uuid": "04c65276-d071-4e73-8adb-3a71df5c5e3c"}, "out2": {"id": "fb4e5930a9bf598c", "src": "hda", "uuid": "715404ee-7383-41e8-803a-068954352867"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.172 s (1735.355 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.172 s (1735.355 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:05:15", "plugin": "core", "name": "end_epoch", "raw_value": "1726470315.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:05:14", "plugin": "core", "name": "start_epoch", "raw_value": "1726470314.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-33", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 33, "time_seconds": 34.77734041213989, "inputs": {"library|input_1": {"src": "hda", "id": "178a70352e15e3d9"}, "library|input_2": {"src": "hda", "id": "59689105ed51bfe9"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "e5f017c51b27b958", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:29:36.422328", "update_time": "2024-09-16T07:29:50.119942", "galaxy_version": "24.1", "external_id": "gxy-mft5k", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/9/d/dataset_79d8af62-9606-404e-9f54-fefe3cd4b550.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/8/a/7/dataset_8a7ae2b7-7af3-4aec-a466-eea9624f49a2.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGCX'    -A 'AGATCGGAAGAGCX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 280, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 281, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "178a70352e15e3d9", "src": "hda", "uuid": "79d8af62-9606-404e-9f54-fefe3cd4b550"}, "library|input_2": {"id": "59689105ed51bfe9", "src": "hda", "uuid": "8a7ae2b7-7af3-4aec-a466-eea9624f49a2"}}, "outputs": {"out1": {"id": "be4f20a99acc5f67", "src": "hda", "uuid": "734d3963-020c-442f-8c79-bb0c3b9dfb54"}, "out2": {"id": "473889e6fad6e413", "src": "hda", "uuid": "a88be1f9-683c-4daa-a055-5ad9904d178a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.168 s (1699.332 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.168 s (1699.332 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:29:38", "plugin": "core", "name": "end_epoch", "raw_value": "1726471778.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:29:37", "plugin": "core", "name": "start_epoch", "raw_value": "1726471777.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-34", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 34, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-34", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 34, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-35", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 35, "time_seconds": 33.37867021560669, "inputs": {"library|input_1": {"src": "hdca", "id": "1da50f882f945669"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r1|adapters_0|single_noindels": true, "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|single_noindels": true, "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "39a1b34f08845f84", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:05:48.269312", "update_time": "2024-09-16T07:06:00.948176", "galaxy_version": "24.1", "external_id": "gxy-wqvpd", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/a/d/dataset_5ada019e-b0ea-4776-a729-604a1e796508.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/c/1/6/dataset_c16701fa-6d2a-4f3a-9358-fc7ab206eade.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC;noindels'    -A 'AGATCGGAAGAGC;noindels'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 9, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "722d80d597b9b32c", "src": "hda", "uuid": "5ada019e-b0ea-4776-a729-604a1e796508"}, "library|input_12": {"id": "3766fa05b2dbc8d4", "src": "hda", "uuid": "c16701fa-6d2a-4f3a-9358-fc7ab206eade"}}, "outputs": {"out_pairs|__part__|forward": {"id": "101f3b0ea3bbc6db", "src": "hda", "uuid": "5883f88e-cd8a-4dbc-be4d-a4cfe994ae9d"}, "out_pairs|__part__|reverse": {"id": "ac049d2d314d926c", "src": "hda", "uuid": "77f877d9-f139-4b12-a9e7-9ba9d6099eb3"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "9924fc50560b5f0a"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.173 s (1751.534 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.173 s (1751.534 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:05:50", "plugin": "core", "name": "end_epoch", "raw_value": "1726470350.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:05:49", "plugin": "core", "name": "start_epoch", "raw_value": "1726470349.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-35", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 35, "time_seconds": 35.38051438331604, "inputs": {"library|input_1": {"src": "hdca", "id": "2663f1a7174665b5"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r1|adapters_0|single_noindels": true, "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|single_noindels": true, "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "8991e17e094221b3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:30:11.643232", "update_time": "2024-09-16T07:30:25.972308", "galaxy_version": "24.1", "external_id": "gxy-2h9sw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/5/2/dataset_f52c6ae5-9ab8-4c20-93a4-3b70e0551d0a.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/6/6/6/dataset_66606191-7c50-4702-9368-04ee845be84c.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC;noindels'    -A 'AGATCGGAAGAGC;noindels'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 19, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "a9f1bdcbe6b0afe2", "src": "hda", "uuid": "f52c6ae5-9ab8-4c20-93a4-3b70e0551d0a"}, "library|input_12": {"id": "590f6e099fc9a684", "src": "hda", "uuid": "66606191-7c50-4702-9368-04ee845be84c"}}, "outputs": {"out_pairs|__part__|forward": {"id": "d2bacd6e1326f47e", "src": "hda", "uuid": "80de5cfa-825e-4195-ba03-131a0db06d71"}, "out_pairs|__part__|reverse": {"id": "6d7c92e9dfdddcce", "src": "hda", "uuid": "1a11ac10-69bf-4eaa-9dc6-9662cf3d957d"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "5d14b328ce2d8b33"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.174 s (1756.911 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.174 s (1756.911 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:30:15", "plugin": "core", "name": "end_epoch", "raw_value": "1726471815.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:30:14", "plugin": "core", "name": "start_epoch", "raw_value": "1726471814.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-36", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 36, "time_seconds": 34.195568561553955, "inputs": {"library|input_1": {"src": "hdca", "id": "79a6aad4694aea84"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection", "other_trimming_options|quality_cutoff": "5", "other_trimming_options|quality_cutoff2": "15,20"}, "job": {"model_class": "Job", "id": "df0c65f117e4a679", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:06:22.213842", "update_time": "2024-09-16T07:06:35.546409", "galaxy_version": "24.1", "external_id": "gxy-xhpjc", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/f/b/dataset_4fbf4398-6e5b-4628-beee-81d6a37c86d3.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/4/6/0/dataset_46089eb3-f82c-46d0-9222-9ff23847fec2.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=5 -Q 15,20       --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"5\", \"quality_cutoff2\": \"15,20\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 11, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "05b5912b4906bf48", "src": "hda", "uuid": "4fbf4398-6e5b-4628-beee-81d6a37c86d3"}, "library|input_12": {"id": "241aca38b3116eb1", "src": "hda", "uuid": "46089eb3-f82c-46d0-9222-9ff23847fec2"}}, "outputs": {"out_pairs|__part__|forward": {"id": "f7379dd2250a345e", "src": "hda", "uuid": "06dd0796-a20f-4ffd-9599-d430dfe0f084"}, "out_pairs|__part__|reverse": {"id": "5449334b6bd93638", "src": "hda", "uuid": "c7db54e1-3da1-4ffd-97a2-960d9dfc671b"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "6ba14ed88bd722aa"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.169 s (1706.379 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.169 s (1706.379 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:06:24", "plugin": "core", "name": "end_epoch", "raw_value": "1726470384.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:06:23", "plugin": "core", "name": "start_epoch", "raw_value": "1726470383.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-36", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 36, "time_seconds": 34.36201024055481, "inputs": {"library|input_1": {"src": "hdca", "id": "cb2664d7ec617cde"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection", "other_trimming_options|quality_cutoff": "5", "other_trimming_options|quality_cutoff2": "15,20"}, "job": {"model_class": "Job", "id": "f8bba36e643d324a", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:30:47.070845", "update_time": "2024-09-16T07:31:00.491428", "galaxy_version": "24.1", "external_id": "gxy-skxfd", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/d/8/dataset_7d8beb3e-c306-458f-bb8c-36ef0b2d9285.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/2/e/3/dataset_2e313bc2-39bc-46fd-a662-bf06bd4a867a.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=5 -Q 15,20       --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"5\", \"quality_cutoff2\": \"15,20\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 21, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "0942fbad2a007225", "src": "hda", "uuid": "7d8beb3e-c306-458f-bb8c-36ef0b2d9285"}, "library|input_12": {"id": "79c47f61f4a72655", "src": "hda", "uuid": "2e313bc2-39bc-46fd-a662-bf06bd4a867a"}}, "outputs": {"out_pairs|__part__|forward": {"id": "0a2b54a636edfe7d", "src": "hda", "uuid": "f840698c-8196-4601-87da-49fc1aa8bbac"}, "out_pairs|__part__|reverse": {"id": "575e1ffd975225bd", "src": "hda", "uuid": "9e8b2194-011a-4973-84b6-06f7b32d5554"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "93c1851027ae906e"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.169 s (1710.061 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.169 s (1710.061 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:30:49", "plugin": "core", "name": "end_epoch", "raw_value": "1726471849.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:30:48", "plugin": "core", "name": "start_epoch", "raw_value": "1726471848.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-37", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 37, "time_seconds": 34.57273077964783, "inputs": {"library|input_1": {"src": "hdca", "id": "f4160be6c3df6c71"}, "library|type": "paired_collection", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "ad83cc10758aa277", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:06:56.411135", "update_time": "2024-09-16T07:07:09.974792", "galaxy_version": "24.1", "external_id": "gxy-5lxj7", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/c/d/dataset_ecd69e52-6f41-4f2a-b2c1-764583ed72a6.dat' 'Unnamed Collection_1.fa' && ln -f -s '/galaxy/server/database/objects/4/1/9/dataset_419335a0-d856-4e4f-b3d8-c15f75cf611b.dat' 'Unnamed Collection_2.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}     --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa' -p 'out2.fa'  'Unnamed Collection_1.fa' 'Unnamed Collection_2.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 13, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "3469c81136af2e19", "src": "hda", "uuid": "ecd69e52-6f41-4f2a-b2c1-764583ed72a6"}, "library|input_12": {"id": "cd63707c7075c579", "src": "hda", "uuid": "419335a0-d856-4e4f-b3d8-c15f75cf611b"}}, "outputs": {"out_pairs|__part__|forward": {"id": "5c720bc1f25e1146", "src": "hda", "uuid": "03967c19-c725-48b0-8ed2-bb389c71c274"}, "out_pairs|__part__|reverse": {"id": "9e082e75de0f695d", "src": "hda", "uuid": "c262f6fe-bcb6-4cf9-bbde-1e59588219d0"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "646c2ad9853e7261"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 5 cores ...\nFinished in 0.045 s (11368.871 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 5 cores ...\nFinished in 0.045 s (11368.871 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:06:59", "plugin": "core", "name": "end_epoch", "raw_value": "1726470419.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:06:58", "plugin": "core", "name": "start_epoch", "raw_value": "1726470418.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-37", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 37, "time_seconds": 35.21107220649719, "inputs": {"library|input_1": {"src": "hdca", "id": "186945af1134eb58"}, "library|type": "paired_collection", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "6bb71fea0d94c529", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:31:21.426136", "update_time": "2024-09-16T07:31:35.685794", "galaxy_version": "24.1", "external_id": "gxy-c64lx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/4/e/dataset_74efdaf6-5a40-4270-aeaf-ec57db12cabe.dat' 'Unnamed Collection_1.fa' && ln -f -s '/galaxy/server/database/objects/2/9/0/dataset_2900ef22-1b3e-447f-8b8e-ebfbde77817f.dat' 'Unnamed Collection_2.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}     --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa' -p 'out2.fa'  'Unnamed Collection_1.fa' 'Unnamed Collection_2.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 23, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "23c970f393b00e21", "src": "hda", "uuid": "74efdaf6-5a40-4270-aeaf-ec57db12cabe"}, "library|input_12": {"id": "fd6eac0ecedef05d", "src": "hda", "uuid": "2900ef22-1b3e-447f-8b8e-ebfbde77817f"}}, "outputs": {"out_pairs|__part__|forward": {"id": "b33a77eb5657f3b4", "src": "hda", "uuid": "6d9220d0-651c-46e9-b59e-07689028af74"}, "out_pairs|__part__|reverse": {"id": "7ae0bc8679a95f4d", "src": "hda", "uuid": "f71ff456-4fa9-40a7-a248-8f3eea388f0b"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "666f0ffde631289d"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 5 cores ...\nFinished in 0.040 s (9929.419 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 5 cores ...\nFinished in 0.040 s (9929.419 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:31:24", "plugin": "core", "name": "end_epoch", "raw_value": "1726471884.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:31:23", "plugin": "core", "name": "start_epoch", "raw_value": "1726471883.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-38", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 38, "time_seconds": 24.477404832839966, "inputs": {"library|input_1": {"src": "hda", "id": "536b839d6e620b94"}, "library|r1|adapters_0|adapter_source|adapter": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "362d4d62af679d64", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-09-16T07:07:29.478510", "update_time": "2024-09-16T07:07:34.743530", "galaxy_version": "24.1", "external_id": "gxy-jcm7s", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/1/b/dataset_e1b870f6-a461-4d03-89b8-4eec6bcde006.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 170, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "536b839d6e620b94", "src": "hda", "uuid": "e1b870f6-a461-4d03-89b8-4eec6bcde006"}}, "outputs": {"out1": {"id": "d0a69fc4a83249b5", "src": "hda", "uuid": "22260576-7b48-4a79-ace6-03f74b3cbbe4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (10041.058 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (10041.058 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-38", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 38, "time_seconds": 33.14442825317383, "inputs": {"library|input_1": {"src": "hda", "id": "a7f45b7468cf2f1f"}, "library|r1|adapters_0|adapter_source|adapter": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "e388d40080e2440c", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:31:55.059971", "update_time": "2024-09-16T07:32:09.084094", "galaxy_version": "24.1", "external_id": "gxy-hbz6d", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/9/8/dataset_f9845783-6827-479b-b760-a4f4e301ce08.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 296, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "a7f45b7468cf2f1f", "src": "hda", "uuid": "f9845783-6827-479b-b760-a4f4e301ce08"}}, "outputs": {"out1": {"id": "68bc0edf0372723e", "src": "hda", "uuid": "e66423e3-6ea0-4640-8771-5b09495cfd4e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (10110.319 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (10110.319 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:31:57", "plugin": "core", "name": "end_epoch", "raw_value": "1726471917.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:31:57", "plugin": "core", "name": "start_epoch", "raw_value": "1726471917.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-39", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 39, "time_seconds": 33.896541357040405, "inputs": {"library|input_1": {"src": "hda", "id": "99c19bebb3c94603"}, "library|r1|adapters_0|adapter_source|adapter": "A{35}", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "f8b856eb8677c14e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:07:55.101700", "update_time": "2024-09-16T07:08:08.774074", "galaxy_version": "24.1", "external_id": "gxy-wfbwz", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/4/0/dataset_240d78bf-7d38-4907-9103-9be248a45cfd.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'A{35}'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 172, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"A{35}\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "99c19bebb3c94603", "src": "hda", "uuid": "240d78bf-7d38-4907-9103-9be248a45cfd"}}, "outputs": {"out1": {"id": "2fbf9fa4073d0e90", "src": "hda", "uuid": "f1ac0c7b-6b30-47be-8f8a-5ea55b1b3eec"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.044 s (10939.419 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.044 s (10939.419 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:07:57", "plugin": "core", "name": "end_epoch", "raw_value": "1726470477.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:07:57", "plugin": "core", "name": "start_epoch", "raw_value": "1726470477.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-39", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 39, "time_seconds": 31.450798511505127, "inputs": {"library|input_1": {"src": "hda", "id": "0f71334165e5f23b"}, "library|r1|adapters_0|adapter_source|adapter": "A{35}", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "be1a4e350a0ac33c", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:32:27.667456", "update_time": "2024-09-16T07:32:40.392356", "galaxy_version": "24.1", "external_id": "gxy-z48vq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/f/2/dataset_ef2712db-a3a8-43d9-ae59-31f607e126ea.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'A{35}'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 298, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"A{35}\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "0f71334165e5f23b", "src": "hda", "uuid": "ef2712db-a3a8-43d9-ae59-31f607e126ea"}}, "outputs": {"out1": {"id": "b051e98dc7ee21f8", "src": "hda", "uuid": "5c10cbed-e4e2-481f-9e9a-8f4e61e956e7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (10045.588 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (10045.588 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:32:29", "plugin": "core", "name": "end_epoch", "raw_value": "1726471949.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:32:29", "plugin": "core", "name": "start_epoch", "raw_value": "1726471949.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-4", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 4, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-4", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 4, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-40", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 40, "time_seconds": 34.231693267822266, "inputs": {"library|input_1": {"src": "hda", "id": "23d367ee2c973e3f"}, "library|type": "single", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "aba02be15f9e381b", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:08:29.079266", "update_time": "2024-09-16T07:08:42.910050", "galaxy_version": "24.1", "external_id": "gxy-mshgt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/0/d/dataset_00d433eb-966c-43ba-a0fa-c121f925da57.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 174, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "23d367ee2c973e3f", "src": "hda", "uuid": "00d433eb-966c-43ba-a0fa-c121f925da57"}}, "outputs": {"out1": {"id": "41d9a7b74aaf293a", "src": "hda", "uuid": "500fe8a3-5c24-4a2d-912d-ea87b73cc7e6"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.034 s (8594.751 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.034 s (8594.751 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:08:31", "plugin": "core", "name": "end_epoch", "raw_value": "1726470511.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:08:30", "plugin": "core", "name": "start_epoch", "raw_value": "1726470510.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-40", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 40, "time_seconds": 32.187469244003296, "inputs": {"library|input_1": {"src": "hda", "id": "3424bb9b9941cf47"}, "library|type": "single", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "5a6e160c8e5132fc", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:32:59.893489", "update_time": "2024-09-16T07:33:12.713453", "galaxy_version": "24.1", "external_id": "gxy-4w56j", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/0/a/dataset_80a5a579-0fe2-4c3a-964b-ddcbe65f44b1.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 300, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "3424bb9b9941cf47", "src": "hda", "uuid": "80a5a579-0fe2-4c3a-964b-ddcbe65f44b1"}}, "outputs": {"out1": {"id": "a7c54949e685d406", "src": "hda", "uuid": "c555c0ef-351e-4fae-84d9-4cffc718b95e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (7671.654 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (7671.654 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:33:02", "plugin": "core", "name": "end_epoch", "raw_value": "1726471982.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:33:01", "plugin": "core", "name": "start_epoch", "raw_value": "1726471981.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-41", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 41, "time_seconds": 26.74075436592102, "inputs": {"library|input_1": {"src": "hda", "id": "5c1e6303b511be44"}, "library|type": "single"}, "job": {"model_class": "Job", "id": "ede172df637c85b4", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-09-16T07:09:03.359363", "update_time": "2024-09-16T07:09:09.915823", "galaxy_version": "24.1", "external_id": "gxy-wx5r2", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/7/a/dataset_b7aebd70-f07f-469c-922f-dbeae1c48b02.dat' 'simple_fasta_gz.fa.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fa.gz'  'simple_fasta_gz.fa.gz'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 176, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "5c1e6303b511be44", "src": "hda", "uuid": "b7aebd70-f07f-469c-922f-dbeae1c48b02"}}, "outputs": {"out1": {"id": "a7c921fcdb3fa031", "src": "hda", "uuid": "b6d6c700-d052-4a4b-b34f-05564b87d0f3"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.087 s (43455.601 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.087 s (43455.601 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-41", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 41, "time_seconds": 33.17001914978027, "inputs": {"library|input_1": {"src": "hda", "id": "143913b00189dd1a"}, "library|type": "single"}, "job": {"model_class": "Job", "id": "7934601b2b12256f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:33:33.161667", "update_time": "2024-09-16T07:33:45.898077", "galaxy_version": "24.1", "external_id": "gxy-9tmqf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/e/e/dataset_1eea3be2-708e-4985-8509-9aaa96b7fa14.dat' 'simple_fasta_gz.fa.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fa.gz'  'simple_fasta_gz.fa.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 302, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "143913b00189dd1a", "src": "hda", "uuid": "1eea3be2-708e-4985-8509-9aaa96b7fa14"}}, "outputs": {"out1": {"id": "4c27a93376ee7496", "src": "hda", "uuid": "da40000b-b947-4564-84d7-3dd3534352a5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.088 s (43951.273 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.088 s (43951.273 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:33:35", "plugin": "core", "name": "end_epoch", "raw_value": "1726472015.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:33:34", "plugin": "core", "name": "start_epoch", "raw_value": "1726472014.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-42", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 42, "time_seconds": 31.62255573272705, "inputs": {"library|input_1": {"src": "hda", "id": "5a30dcf84222eefe"}, "library|r1|adapters_0|adapter_source|adapter": "XXXXXX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "0146a526db89bed6", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:09:28.769698", "update_time": "2024-09-16T07:09:41.419897", "galaxy_version": "24.1", "external_id": "gxy-rvk5l", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/4/2/dataset_c42f6c78-57a9-4ad2-83a1-693db2d9ba05.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'XXXXXX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 178, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"XXXXXX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "5a30dcf84222eefe", "src": "hda", "uuid": "c42f6c78-57a9-4ad2-83a1-693db2d9ba05"}}, "outputs": {"out1": {"id": "13a47221ac29f0b0", "src": "hda", "uuid": "bf99661e-7e00-48c5-964f-fdc6b9630cae"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (1985.097 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (1985.097 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:09:30", "plugin": "core", "name": "end_epoch", "raw_value": "1726470570.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:09:30", "plugin": "core", "name": "start_epoch", "raw_value": "1726470570.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-42", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 42, "time_seconds": 33.513983964920044, "inputs": {"library|input_1": {"src": "hda", "id": "343d95083d04acac"}, "library|r1|adapters_0|adapter_source|adapter": "XXXXXX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "5b2df17673ece313", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:34:05.738207", "update_time": "2024-09-16T07:34:19.548482", "galaxy_version": "24.1", "external_id": "gxy-xsnnx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/5/2/dataset_052670cf-cf5a-4adf-86f1-ab688dd7b427.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'XXXXXX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 304, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"XXXXXX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "343d95083d04acac", "src": "hda", "uuid": "052670cf-cf5a-4adf-86f1-ab688dd7b427"}}, "outputs": {"out1": {"id": "23e4da22b0e5fe8b", "src": "hda", "uuid": "5dd1d0f9-c76e-4c67-9351-2ed7486fb00d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (2033.067 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (2033.067 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:34:07", "plugin": "core", "name": "end_epoch", "raw_value": "1726472047.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:34:07", "plugin": "core", "name": "start_epoch", "raw_value": "1726472047.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-43", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 43, "time_seconds": 32.59487247467041, "inputs": {"library|input_1": {"src": "hda", "id": "d5fb83bc82b639eb"}, "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "399a2563093ddbb4", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:10:01.027514", "update_time": "2024-09-16T07:10:14.142773", "galaxy_version": "24.1", "external_id": "gxy-2q9lt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/6/5/dataset_c6554103-57a7-40d4-af65-9d3bad53f13e.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 180, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "d5fb83bc82b639eb", "src": "hda", "uuid": "c6554103-57a7-40d4-af65-9d3bad53f13e"}}, "outputs": {"out1": {"id": "5020641386de1148", "src": "hda", "uuid": "dec85d99-d40a-4129-86e4-05de9c54669f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (1757.693 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (1757.693 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:10:03", "plugin": "core", "name": "end_epoch", "raw_value": "1726470603.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:10:02", "plugin": "core", "name": "start_epoch", "raw_value": "1726470602.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-43", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 43, "time_seconds": 32.79703998565674, "inputs": {"library|input_1": {"src": "hda", "id": "b68323f54b27f6ea"}, "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "04b6603da12c1a5f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:34:38.954833", "update_time": "2024-09-16T07:34:52.621410", "galaxy_version": "24.1", "external_id": "gxy-9rwft", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/4/8/dataset_348fd98e-fed6-4b59-a827-6e0877bbbdfd.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 306, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "b68323f54b27f6ea", "src": "hda", "uuid": "348fd98e-fed6-4b59-a827-6e0877bbbdfd"}}, "outputs": {"out1": {"id": "c236f1f19e8c0cce", "src": "hda", "uuid": "785d3675-3eca-478f-a1e4-de1f2b14758a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (1827.955 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (1827.955 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:34:41", "plugin": "core", "name": "end_epoch", "raw_value": "1726472081.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:34:40", "plugin": "core", "name": "start_epoch", "raw_value": "1726472080.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-44", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 44, "time_seconds": 34.94292235374451, "inputs": {"library|input_1": {"src": "hda", "id": "4ee462f113384a19"}, "library|type": "single", "filter_options|minimum_length": "0", "filter_options|max_expected_errors": "0.9", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "b34d1eb733976ca7", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:10:34.439751", "update_time": "2024-09-16T07:10:48.389914", "galaxy_version": "24.1", "external_id": "gxy-vwsnn", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/c/8/dataset_9c8e755c-8e22-42b0-a755-d44d8c7f1ac8.dat' 'maxee_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --max-ee=0.9   --quality-base=64    --info-file='/galaxy/server/database/objects/c/b/e/dataset_cbeaf73c-e682-47f8-a6d7-7afdfbebdedd.dat' -o 'out1.fq'  'maxee_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"0.9\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 182, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "4ee462f113384a19", "src": "hda", "uuid": "9c8e755c-8e22-42b0-a755-d44d8c7f1ac8"}}, "outputs": {"out1": {"id": "f226151d3eec0458", "src": "hda", "uuid": "2d3f0527-70e5-4855-84ca-143c520b507f"}, "report": {"id": "8aff823067436e53", "src": "hda", "uuid": "16e9e991-9c28-419e-8f0f-d20554d82434"}, "info_file": {"id": "9e96c5b54005a212", "src": "hda", "uuid": "cbeaf73c-e682-47f8-a6d7-7afdfbebdedd"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:10:37", "plugin": "core", "name": "end_epoch", "raw_value": "1726470637.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:10:36", "plugin": "core", "name": "start_epoch", "raw_value": "1726470636.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-44", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 44, "time_seconds": 34.18454885482788, "inputs": {"library|input_1": {"src": "hda", "id": "03506d2ca4b87d72"}, "library|type": "single", "filter_options|minimum_length": "0", "filter_options|max_expected_errors": "0.9", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "772b46eb74419864", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:35:12.188975", "update_time": "2024-09-16T07:35:25.980744", "galaxy_version": "24.1", "external_id": "gxy-qthv8", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/f/2/dataset_bf2c123d-7c85-4934-bf50-a9a84996dfad.dat' 'maxee_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --max-ee=0.9   --quality-base=64    --info-file='/galaxy/server/database/objects/b/0/2/dataset_b02c41ef-6315-4b94-a265-814058b5fdd2.dat' -o 'out1.fq'  'maxee_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"0.9\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 308, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "03506d2ca4b87d72", "src": "hda", "uuid": "bf2c123d-7c85-4934-bf50-a9a84996dfad"}}, "outputs": {"info_file": {"id": "1da91e7b79dd3a85", "src": "hda", "uuid": "b02c41ef-6315-4b94-a265-814058b5fdd2"}, "report": {"id": "2a7851e2e104d3bc", "src": "hda", "uuid": "bab5a6ad-bd5f-4651-83a4-28d3c6eb98de"}, "out1": {"id": "88ea98956b9c0a6f", "src": "hda", "uuid": "e01f7760-7160-43e4-8186-3c4e51153bb8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:35:15", "plugin": "core", "name": "end_epoch", "raw_value": "1726472115.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:35:14", "plugin": "core", "name": "start_epoch", "raw_value": "1726472114.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-45", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 45, "time_seconds": 33.28437280654907, "inputs": {"library|input_1": {"src": "hda", "id": "6624f7733d374248"}, "library|r1|anywhere_adapters_0|adapter_source|adapter": "ACGTACGT", "library|r1|anywhere_adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "aa2d492b55f1b5bd", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:11:08.422440", "update_time": "2024-09-16T07:11:22.653500", "galaxy_version": "24.1", "external_id": "gxy-btklq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/2/5/dataset_4255918a-9b8b-4052-84ae-c697cc77a61d.dat' 'wildcard_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -b 'ACGTACGT'    --error-rate=0.1 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcard_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 186, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ACGTACGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "6624f7733d374248", "src": "hda", "uuid": "4255918a-9b8b-4052-84ae-c697cc77a61d"}}, "outputs": {"out1": {"id": "9ddf3f05987296d4", "src": "hda", "uuid": "0346a7eb-ffc1-477d-b951-040fc45ae929"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (21406.174 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (21406.174 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:11:10", "plugin": "core", "name": "end_epoch", "raw_value": "1726470670.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:11:10", "plugin": "core", "name": "start_epoch", "raw_value": "1726470670.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-45", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 45, "time_seconds": 33.768205404281616, "inputs": {"library|input_1": {"src": "hda", "id": "e787164587ecc0a7"}, "library|r1|anywhere_adapters_0|adapter_source|adapter": "ACGTACGT", "library|r1|anywhere_adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "90117d23d4a51711", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:35:46.420392", "update_time": "2024-09-16T07:36:00.451656", "galaxy_version": "24.1", "external_id": "gxy-jn2nk", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/3/7/dataset_c37f5feb-e03d-4ab0-9636-580dca66166e.dat' 'wildcard_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -b 'ACGTACGT'    --error-rate=0.1 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcard_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 312, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ACGTACGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "e787164587ecc0a7", "src": "hda", "uuid": "c37f5feb-e03d-4ab0-9636-580dca66166e"}}, "outputs": {"out1": {"id": "f9885b688cef1169", "src": "hda", "uuid": "4c813638-6de1-4262-b663-50995f80b08e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (20159.841 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.040 s (20159.841 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:35:49", "plugin": "core", "name": "end_epoch", "raw_value": "1726472149.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:35:48", "plugin": "core", "name": "start_epoch", "raw_value": "1726472148.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-46", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 46, "time_seconds": 33.25975704193115, "inputs": {"library|input_1": {"src": "hda", "id": "3f80af956aa53b73"}, "library|r1|adapters_0|adapter_source|adapter": "GGGGGGG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|error_rate": "0", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "34577579b5cbeece", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:11:41.845099", "update_time": "2024-09-16T07:11:55.738777", "galaxy_version": "24.1", "external_id": "gxy-m5nrz", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/8/f/dataset_58fcaff7-e9bc-4546-a8fd-deb5379279c8.dat' 'wildcardN_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GGGGGGG'    --error-rate=0.0 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcardN_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.0\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 188, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GGGGGGG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "3f80af956aa53b73", "src": "hda", "uuid": "58fcaff7-e9bc-4546-a8fd-deb5379279c8"}}, "outputs": {"out1": {"id": "1894b5018ffe6341", "src": "hda", "uuid": "a4c543ba-a532-4b4c-b7df-33b291d399e2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13511.022 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13511.022 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:11:44", "plugin": "core", "name": "end_epoch", "raw_value": "1726470704.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:11:43", "plugin": "core", "name": "start_epoch", "raw_value": "1726470703.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-46", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 46, "time_seconds": 32.81161427497864, "inputs": {"library|input_1": {"src": "hda", "id": "6f7e1e02cdde1f57"}, "library|r1|adapters_0|adapter_source|adapter": "GGGGGGG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|error_rate": "0", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "2e301301a8c00336", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:36:20.660506", "update_time": "2024-09-16T07:36:33.489151", "galaxy_version": "24.1", "external_id": "gxy-nsd4l", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/c/8/dataset_6c8155e1-1f7f-4d58-a2c9-04bf88b60f6e.dat' 'wildcardN_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GGGGGGG'    --error-rate=0.0 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcardN_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.0\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 314, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GGGGGGG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "6f7e1e02cdde1f57", "src": "hda", "uuid": "6c8155e1-1f7f-4d58-a2c9-04bf88b60f6e"}}, "outputs": {"out1": {"id": "0bcc18f45f8f0f05", "src": "hda", "uuid": "1b757e98-8b74-4390-92dc-a5080dc43430"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (14449.279 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.043 s (14449.279 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:36:22", "plugin": "core", "name": "end_epoch", "raw_value": "1726472182.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:36:22", "plugin": "core", "name": "start_epoch", "raw_value": "1726472182.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-47", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 47, "time_seconds": 33.01917839050293, "inputs": {"library|input_1": {"src": "hda", "id": "de0ee99ce2f52568"}, "library|input_2": {"src": "hda", "id": "9d05ba1185b1a00c"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "854d11b704179109", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": 1, "create_time": "2024-09-16T07:12:16.592621", "update_time": "2024-09-16T07:12:29.326932", "galaxy_version": "24.1", "external_id": "gxy-gqgbg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/0/f/dataset_60f47d29-8734-4cb1-821f-c808c60921c7.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/1/8/f/dataset_18fefb47-d32c-43df-930c-f3f9ccf8c860.dat' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 190, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 191, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "de0ee99ce2f52568", "src": "hda", "uuid": "60f47d29-8734-4cb1-821f-c808c60921c7"}, "library|input_2": {"id": "9d05ba1185b1a00c", "src": "hda", "uuid": "18fefb47-d32c-43df-930c-f3f9ccf8c860"}}, "outputs": {"out1": {"id": "ccbd0aa02a8669b5", "src": "hda", "uuid": "2a6fb066-662e-4d64-bbc9-da10cca40b75"}, "out2": {"id": "b1f9f59dd6576dcf", "src": "hda", "uuid": "a7f40303-d04a-434d-9287-f243451e93a8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\n", "tool_stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\n", "stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_messages": [{"code_desc": "", "desc": "Fatal error: Exit code 1 ()", "error_level": 3, "exit_code": 1, "type": "exit_code"}], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:12:18", "plugin": "core", "name": "end_epoch", "raw_value": "1726470738.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:12:17", "plugin": "core", "name": "start_epoch", "raw_value": "1726470737.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-47", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 47, "time_seconds": 34.0693142414093, "inputs": {"library|input_1": {"src": "hda", "id": "928438f14e0b084c"}, "library|input_2": {"src": "hda", "id": "63b4a8f16986d15c"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "81efc37612bc712b", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": 1, "create_time": "2024-09-16T07:36:54.571650", "update_time": "2024-09-16T07:37:07.883063", "galaxy_version": "24.1", "external_id": "gxy-58wjk", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/8/6/dataset_086dbebf-3d21-44f3-94cc-a66d11b210ab.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/3/6/0/dataset_360fb2bd-87f1-46aa-996e-a7788a71bcaf.dat' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 316, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 317, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "928438f14e0b084c", "src": "hda", "uuid": "086dbebf-3d21-44f3-94cc-a66d11b210ab"}, "library|input_2": {"id": "63b4a8f16986d15c", "src": "hda", "uuid": "360fb2bd-87f1-46aa-996e-a7788a71bcaf"}}, "outputs": {"out2": {"id": "d5cbc8e4dae1a959", "src": "hda", "uuid": "654d3cd7-bcc1-4094-8255-543a28b0e88c"}, "out1": {"id": "b443b727d8806906", "src": "hda", "uuid": "07a41894-0ca2-488f-a28a-88dce0e4ff0b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\n", "tool_stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\n", "stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_messages": [{"code_desc": "", "desc": "Fatal error: Exit code 1 ()", "error_level": 3, "exit_code": 1, "type": "exit_code"}], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 07:36:56", "plugin": "core", "name": "end_epoch", "raw_value": "1726472216.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:36:56", "plugin": "core", "name": "start_epoch", "raw_value": "1726472216.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-5", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 5, "time_seconds": 33.37149739265442, "inputs": {"library|input_1": {"src": "hda", "id": "52ba0ec18ea493b6"}, "library|r1|adapters_0|adapter_source|adapter": "TTAGACATATCTCCGTCG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "filter_options|discard_trimmed": true}, "job": {"model_class": "Job", "id": "5ed5bf7a5bf354b4", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:51:07.432243", "update_time": "2024-09-16T06:51:21.100249", "galaxy_version": "24.1", "external_id": "gxy-rq22q", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/2/0/dataset_b2050b76-0a7a-441f-82db-09beef962716.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TTAGACATATCTCCGTCG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim      --discard-trimmed   --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": true, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 82, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TTAGACATATCTCCGTCG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "52ba0ec18ea493b6", "src": "hda", "uuid": "b2050b76-0a7a-441f-82db-09beef962716"}}, "outputs": {"out1": {"id": "790b5ae8ec8dae5e", "src": "hda", "uuid": "ed55e8ae-cc6f-4078-937e-0533bd40c3dc"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13595.740 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.041 s (13595.740 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:51:09", "plugin": "core", "name": "end_epoch", "raw_value": "1726469469.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:51:09", "plugin": "core", "name": "start_epoch", "raw_value": "1726469469.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-5", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 5, "time_seconds": 10.98603367805481, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-6", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 6, "time_seconds": 11.269522428512573, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-6", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 6, "time_seconds": 33.00590515136719, "inputs": {"library|input_1": {"src": "hda", "id": "2eb75aef8da687d0"}, "library|input_2": {"src": "hda", "id": "581a19fe626e84fe"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|pair_adapters": true, "library|type": "paired"}, "job": {"model_class": "Job", "id": "600bb0232f2ffb14", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:14:54.502014", "update_time": "2024-09-16T07:15:06.955378", "galaxy_version": "24.1", "external_id": "gxy-hztwb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/b/b/dataset_cbbd22b7-bf41-48b4-9202-c8060af647d2.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/5/8/e/dataset_58ebb9e8-ae06-4a0e-af8c-a9dfe6e4dcee.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'  --pair-adapters  --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 206, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 207, \"src\": \"hda\"}]}, \"pair_adapters\": true, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "2eb75aef8da687d0", "src": "hda", "uuid": "cbbd22b7-bf41-48b4-9202-c8060af647d2"}, "library|input_2": {"id": "581a19fe626e84fe", "src": "hda", "uuid": "58ebb9e8-ae06-4a0e-af8c-a9dfe6e4dcee"}}, "outputs": {"out1": {"id": "e5f017c51b27b958", "src": "hda", "uuid": "09557bf6-ba6b-409b-af6a-2b52b1c2fb53"}, "out2": {"id": "cd504d335413c4ec", "src": "hda", "uuid": "86f8af14-4f71-40be-bc1c-b8d63aa82782"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.169 s (1707.616 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.169 s (1707.616 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:14:56", "plugin": "core", "name": "end_epoch", "raw_value": "1726470896.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:14:55", "plugin": "core", "name": "start_epoch", "raw_value": "1726470895.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-7", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 7, "time_seconds": 33.75035834312439, "inputs": {"library|input_1": {"src": "hda", "id": "fa6d6585395c29a7"}, "library|r1|adapters_0|adapter_source|adapter": "AAAGATG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_selector": ["rest_file", "json_stats"]}, "job": {"model_class": "Job", "id": "dd9e559695e67e91", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:51:52.821706", "update_time": "2024-09-16T06:52:05.620414", "galaxy_version": "24.1", "external_id": "gxy-f5xpq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/9/e/dataset_89e4e38b-5ce8-4f07-bf69-b7ccd418cd78.dat' 'cutadapt_rest_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAGATG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --json=stats.json -r='rest_output.fa' -o 'out1.fa'  'cutadapt_rest_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"rest_file\", \"json_stats\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 86, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAGATG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "fa6d6585395c29a7", "src": "hda", "uuid": "89e4e38b-5ce8-4f07-bf69-b7ccd418cd78"}}, "outputs": {"out1": {"id": "7318a62934186e66", "src": "hda", "uuid": "d1396b1e-6ebb-4f4a-91e8-313fb8789bbe"}, "rest_output": {"id": "06d9239b94669b9f", "src": "hda", "uuid": "81f365df-c044-4f42-97ea-6b84d90767c9"}, "json_stats": {"id": "3f6565fb9259a04e", "src": "hda", "uuid": "74413ae5-c62f-48b8-83b0-4cbf6b9e78ba"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.045 s (8969.975 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.045 s (8969.975 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:51:55", "plugin": "core", "name": "end_epoch", "raw_value": "1726469515.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:51:54", "plugin": "core", "name": "start_epoch", "raw_value": "1726469514.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-7", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 7, "time_seconds": 33.66154670715332, "inputs": {"library|input_1": {"src": "hda", "id": "785f5925f0362156"}, "library|r1|adapters_0|adapter_source|adapter": "AAAGATG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_selector": ["rest_file", "json_stats"]}, "job": {"model_class": "Job", "id": "9632ffdc7a656d21", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:15:27.126993", "update_time": "2024-09-16T07:15:40.182153", "galaxy_version": "24.1", "external_id": "gxy-mw7fj", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/e/b/dataset_6eb2594e-8b08-4a05-baaa-9bcdef75ebab.dat' 'cutadapt_rest_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAGATG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --json=stats.json -r='rest_output.fa' -o 'out1.fa'  'cutadapt_rest_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"rest_file\", \"json_stats\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 210, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAGATG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "785f5925f0362156", "src": "hda", "uuid": "6eb2594e-8b08-4a05-baaa-9bcdef75ebab"}}, "outputs": {"out1": {"id": "8991e17e094221b3", "src": "hda", "uuid": "306c5a73-ed42-45eb-9559-e40b09aba2c2"}, "rest_output": {"id": "e63ff66ba52619f0", "src": "hda", "uuid": "2f8330c9-e7a0-4a62-a1b7-65e964e58291"}, "json_stats": {"id": "2d16d492cc3a7ded", "src": "hda", "uuid": "fa6ec8dc-183f-4ca3-9bbd-bc8d16b20179"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (9381.199 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.047 s (9381.199 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:15:29", "plugin": "core", "name": "end_epoch", "raw_value": "1726470929.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:15:28", "plugin": "core", "name": "start_epoch", "raw_value": "1726470928.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-8", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 8, "time_seconds": 32.21808099746704, "inputs": {"library|input_1": {"src": "hda", "id": "678dca344c8abbf1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|nextseq_trim": "20"}, "job": {"model_class": "Job", "id": "62784cb01cc51016", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:52:25.998319", "update_time": "2024-09-16T06:52:38.790077", "galaxy_version": "24.1", "external_id": "gxy-4dw6k", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/e/4/dataset_de4fd2e8-d150-4949-8285-d40b892af181.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --nextseq-trim=20       --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"20\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 90, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "678dca344c8abbf1", "src": "hda", "uuid": "de4fd2e8-d150-4949-8285-d40b892af181"}}, "outputs": {"out1": {"id": "9c97dc0941cb3619", "src": "hda", "uuid": "8ff53a30-48c1-410d-8000-00dc9e3bbdee"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.096 s (974.096 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.096 s (974.096 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:52:28", "plugin": "core", "name": "end_epoch", "raw_value": "1726469548.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:52:28", "plugin": "core", "name": "start_epoch", "raw_value": "1726469548.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-8", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 8, "time_seconds": 32.9763388633728, "inputs": {"library|input_1": {"src": "hda", "id": "f8bba36e643d324a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|nextseq_trim": "20"}, "job": {"model_class": "Job", "id": "7b790e429226aa5b", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:16:00.566825", "update_time": "2024-09-16T07:16:14.288514", "galaxy_version": "24.1", "external_id": "gxy-9skjc", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/b/0/dataset_0b0189af-0dd8-4420-806e-e2931acba350.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --nextseq-trim=20       --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"20\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 214, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "f8bba36e643d324a", "src": "hda", "uuid": "0b0189af-0dd8-4420-806e-e2931acba350"}}, "outputs": {"out1": {"id": "ae5be7576c01a6ed", "src": "hda", "uuid": "094812e0-166c-4f3f-84b4-16adb608e2e1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.098 s (984.941 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.5\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.098 s (984.941 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:16:03", "plugin": "core", "name": "end_epoch", "raw_value": "1726470963.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:16:02", "plugin": "core", "name": "start_epoch", "raw_value": "1726470962.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-9", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 9, "time_seconds": 33.294156551361084, "inputs": {"library|input_1": {"src": "hda", "id": "28124923f92eee1e"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "0ff9c01aa0f651b7", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:52:58.197598", "update_time": "2024-09-16T06:53:11.377138", "galaxy_version": "24.1", "external_id": "gxy-hhj9s", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/a/5/dataset_da5c6396-3a80-4a33-9654-adf18ca900cd.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --info-file='/galaxy/server/database/objects/1/3/9/dataset_1391e81f-1613-41a7-adc0-1196249c596b.dat' -o 'out1.fq'  'cutadapt_small_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 92, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "28124923f92eee1e", "src": "hda", "uuid": "da5c6396-3a80-4a33-9654-adf18ca900cd"}}, "outputs": {"out1": {"id": "16aec7642cf930d8", "src": "hda", "uuid": "eba970dc-f06d-4832-86d7-f3e7bcc39194"}, "report": {"id": "952b21ce2a89bb11", "src": "hda", "uuid": "75f336d8-2350-4d23-9556-a078f36c53c9"}, "info_file": {"id": "e507d8bdb33a74a7", "src": "hda", "uuid": "1391e81f-1613-41a7-adc0-1196249c596b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 06:53:00", "plugin": "core", "name": "end_epoch", "raw_value": "1726469580.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:53:00", "plugin": "core", "name": "start_epoch", "raw_value": "1726469580.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-9", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 9, "time_seconds": 34.03411912918091, "inputs": {"library|input_1": {"src": "hda", "id": "6e2c05840308c22d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "b23d54b6bb880582", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:16:34.554278", "update_time": "2024-09-16T07:16:47.511177", "galaxy_version": "24.1", "external_id": "gxy-cmlvp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/e/a/dataset_4ea80817-5fa0-46e1-b039-bd4a1bdb5226.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --info-file='/galaxy/server/database/objects/2/9/8/dataset_298b7be8-1e73-4211-b196-054ea3583672.dat' -o 'out1.fq'  'cutadapt_small_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 216, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "6e2c05840308c22d", "src": "hda", "uuid": "4ea80817-5fa0-46e1-b039-bd4a1bdb5226"}}, "outputs": {"out1": {"id": "6bb71fea0d94c529", "src": "hda", "uuid": "beaeb713-df25-43f9-9d6c-28fc2b0da019"}, "report": {"id": "3b126a4fd07e7d82", "src": "hda", "uuid": "8a2eaa12-967f-4437-8674-34e3152b1754"}, "info_file": {"id": "e388d40080e2440c", "src": "hda", "uuid": "298b7be8-1e73-4211-b196-054ea3583672"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:16:36", "plugin": "core", "name": "end_epoch", "raw_value": "1726470996.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:16:35", "plugin": "core", "name": "start_epoch", "raw_value": "1726470995.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_compare/3.5.4+galaxy0-0", "has_data": true, "data": {"tool_id": "deeptools_bam_compare", "tool_version": "3.5.4+galaxy0", "test_index": 0, "time_seconds": 48.66626214981079, "inputs": {"bamFile1": {"src": "hda", "id": "557b0456f53adfdc"}, "bamFile2": {"src": "hda", "id": "557b0456f53adfdc"}, "binSize": "5", "comparison|type": "ratio", "outFileFormat": "bedgraph", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "c8d05c751a82530b", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.5.4+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:47:26.257434", "update_time": "2024-09-16T06:47:55.015206", "galaxy_version": "24.1", "external_id": "gxy-jkf99", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/9/1/dataset_5919c0b5-4f2f-43f1-899e-09ae38def117.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/3/2/8/metadata_328230fa-12a2-465f-8327-c750f7b3143a.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/5/9/1/dataset_5919c0b5-4f2f-43f1-899e-09ae38def117.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/3/2/8/metadata_328230fa-12a2-465f-8327-c750f7b3143a.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/b/5/6/dataset_b5618e44-db1a-4407-b0e5-7a7993b9000f.dat' --outFileFormat 'bedgraph'  --binSize 5  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1", "user_email": "tests@fake.org", "command_version": "bamCompare 3.5.4", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "region": "\"\"", "outFileFormat": "\"bedgraph\"", "exactScaling": "false", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "binSize": "\"5\""}, "inputs": {"bamFile1": {"id": "557b0456f53adfdc", "src": "hda", "uuid": "5919c0b5-4f2f-43f1-899e-09ae38def117"}, "bamFile2": {"id": "557b0456f53adfdc", "src": "hda", "uuid": "5919c0b5-4f2f-43f1-899e-09ae38def117"}}, "outputs": {"outFileName": {"id": "2777a8ee2232b450", "src": "hda", "uuid": "b5618e44-db1a-4407-b0e5-7a7993b9000f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:47:40", "plugin": "core", "name": "end_epoch", "raw_value": "1726469260.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:47:39", "plugin": "core", "name": "start_epoch", "raw_value": "1726469259.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_compare/3.5.4+galaxy0-1", "has_data": true, "data": {"tool_id": "deeptools_bam_compare", "tool_version": "3.5.4+galaxy0", "test_index": 1, "time_seconds": 33.55218029022217, "inputs": {"bamFile1": {"src": "hda", "id": "2529aca2aec1c52b"}, "bamFile2": {"src": "hda", "id": "2529aca2aec1c52b"}, "binSize": "10", "comparison|type": "ratio", "outFileFormat": "bigwig", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "a436d9cb254da94e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.5.4+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:48:14.680116", "update_time": "2024-09-16T06:48:28.456771", "galaxy_version": "24.1", "external_id": "gxy-fvtjq", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/b/f/b/dataset_bfb5cf3f-d27e-427f-9b91-81898f35a5b3.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/a/a/metadata_aaa8ef79-d31e-4bcb-93b1-a2a2dd7633b6.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/b/f/b/dataset_bfb5cf3f-d27e-427f-9b91-81898f35a5b3.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/a/a/metadata_aaa8ef79-d31e-4bcb-93b1-a2a2dd7633b6.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/6/f/3/dataset_6f302b19-adfb-480a-975b-6c739e2cf281.dat' --outFileFormat 'bigwig'  --binSize 10  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1       --minMappingQuality '1'", "user_email": "tests@fake.org", "command_version": "bamCompare 3.5.4", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"blackListFileName\": null, \"centerReads\": false, \"doExtendCustom\": {\"__current_case__\": 0, \"doExtend\": \"no\"}, \"ignoreDuplicates\": false, \"ignoreForNormalization\": \"\", \"maxFragmentLength\": \"0\", \"minFragmentLength\": \"0\", \"minMappingQuality\": \"1\", \"samFlagExclude\": \"\", \"samFlagInclude\": \"\", \"showAdvancedOpt\": \"yes\", \"skipNAs\": false, \"skipZeroOverZero\": \"\", \"smoothLength\": \"\"}", "region": "\"\"", "outFileFormat": "\"bigwig\"", "exactScaling": "false", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "binSize": "\"10\""}, "inputs": {"bamFile1": {"id": "2529aca2aec1c52b", "src": "hda", "uuid": "bfb5cf3f-d27e-427f-9b91-81898f35a5b3"}, "bamFile2": {"id": "2529aca2aec1c52b", "src": "hda", "uuid": "bfb5cf3f-d27e-427f-9b91-81898f35a5b3"}}, "outputs": {"outFileName": {"id": "7ce0772fe91e5b2e", "src": "hda", "uuid": "6f302b19-adfb-480a-975b-6c739e2cf281"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:48:17", "plugin": "core", "name": "end_epoch", "raw_value": "1726469297.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:48:16", "plugin": "core", "name": "start_epoch", "raw_value": "1726469296.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "dropletutils_read_10x/1.0.4+galaxy0-0", "has_data": true, "data": {"tool_id": "dropletutils_read_10x", "tool_version": "1.0.4+galaxy0", "test_index": 0, "time_seconds": 0.21107792854309082, "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error"}}, {"id": "fastqc/0.74+galaxy1-0", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 0, "time_seconds": 49.59211087226868, "inputs": {"input_file": {"src": "hda", "id": "c31b84eaf02f3f62"}}, "job": {"model_class": "Job", "id": "08fdfe21eb0bb0dc", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:37:28.363351", "update_time": "2024-09-16T07:37:57.468966", "galaxy_version": "24.1", "external_id": "gxy-rsnwq", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/0/6/d/dataset_06d156b3-422e-4e13-b9f4-3be5b24ea4d8.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/5/0/2/dataset_5029317a-88f2-4e84-ab15-a6925938281d_files' && fastqc --outdir '/galaxy/server/database/objects/5/0/2/dataset_5029317a-88f2-4e84-ab15-a6925938281d_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/5/0/2/dataset_5029317a-88f2-4e84-ab15-a6925938281d_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/5/0/2/dataset_5029317a-88f2-4e84-ab15-a6925938281d_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "c31b84eaf02f3f62", "src": "hda", "uuid": "06d156b3-422e-4e13-b9f4-3be5b24ea4d8"}}, "outputs": {"text_file": {"id": "249106b62a816bec", "src": "hda", "uuid": "ffd7dfac-37eb-4f61-afb9-48701204cf20"}, "html_file": {"id": "46db7e3283100bde", "src": "hda", "uuid": "5029317a-88f2-4e84-ab15-a6925938281d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:37:43", "plugin": "core", "name": "end_epoch", "raw_value": "1726472263.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:37:40", "plugin": "core", "name": "start_epoch", "raw_value": "1726472260.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-0", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 0, "time_seconds": 36.15320539474487, "inputs": {"input_file": {"src": "hda", "id": "49d8a3ca8fcf2759"}}, "job": {"model_class": "Job", "id": "fc0b3e6edda22f80", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:42:23.091278", "update_time": "2024-09-16T07:42:37.869184", "galaxy_version": "24.1", "external_id": "gxy-mdlnl", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/0/5/3/dataset_05378394-1706-487f-80e5-c8335550486a.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/3/0/7/dataset_3077dcf2-f8e0-4dfc-b9c3-f6bf368cd7b2_files' && fastqc --outdir '/galaxy/server/database/objects/3/0/7/dataset_3077dcf2-f8e0-4dfc-b9c3-f6bf368cd7b2_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/3/0/7/dataset_3077dcf2-f8e0-4dfc-b9c3-f6bf368cd7b2_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/3/0/7/dataset_3077dcf2-f8e0-4dfc-b9c3-f6bf368cd7b2_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "49d8a3ca8fcf2759", "src": "hda", "uuid": "05378394-1706-487f-80e5-c8335550486a"}}, "outputs": {"text_file": {"id": "f098e05ce3f293c2", "src": "hda", "uuid": "1dbb4375-c807-427c-a0a0-a10e8c65972f"}, "html_file": {"id": "e79bc3e626b7d3a2", "src": "hda", "uuid": "3077dcf2-f8e0-4dfc-b9c3-f6bf368cd7b2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:42:26", "plugin": "core", "name": "end_epoch", "raw_value": "1726472546.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:42:24", "plugin": "core", "name": "start_epoch", "raw_value": "1726472544.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-1", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 1, "time_seconds": 36.45201253890991, "inputs": {"input_file": {"src": "hda", "id": "86ba51dd3b3909de"}, "contaminants": {"src": "hda", "id": "fb49d90848fe928d"}}, "job": {"model_class": "Job", "id": "ef59b97a6b16437d", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:38:19.789139", "update_time": "2024-09-16T07:38:34.062111", "galaxy_version": "24.1", "external_id": "gxy-qjxsq", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/6/6/e/dataset_66ee9525-90b0-4bde-b581-873f980fa9d2.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/f/a/3/dataset_fa345328-fc57-489c-accc-2f900514e907_files' && fastqc --outdir '/galaxy/server/database/objects/f/a/3/dataset_fa345328-fc57-489c-accc-2f900514e907_files' --contaminants '/galaxy/server/database/objects/3/4/9/dataset_3498cba1-6495-46b1-b0a7-dd466bd5a34e.dat'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/f/a/3/dataset_fa345328-fc57-489c-accc-2f900514e907_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/f/a/3/dataset_fa345328-fc57-489c-accc-2f900514e907_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null}, "inputs": {"input_file": {"id": "86ba51dd3b3909de", "src": "hda", "uuid": "66ee9525-90b0-4bde-b581-873f980fa9d2"}, "contaminants": {"id": "fb49d90848fe928d", "src": "hda", "uuid": "3498cba1-6495-46b1-b0a7-dd466bd5a34e"}}, "outputs": {"text_file": {"id": "845906f305432183", "src": "hda", "uuid": "5dbe57b5-8957-43ce-a722-347dcbf59377"}, "html_file": {"id": "4cd69085f8d83acb", "src": "hda", "uuid": "fa345328-fc57-489c-accc-2f900514e907"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:38:23", "plugin": "core", "name": "end_epoch", "raw_value": "1726472303.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:38:21", "plugin": "core", "name": "start_epoch", "raw_value": "1726472301.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-1", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 1, "time_seconds": 36.15373706817627, "inputs": {"input_file": {"src": "hda", "id": "9810caad5ae509ee"}, "contaminants": {"src": "hda", "id": "c50b26aed327cc20"}}, "job": {"model_class": "Job", "id": "f80cd618eb1773a1", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:43:00.005124", "update_time": "2024-09-16T07:43:14.382609", "galaxy_version": "24.1", "external_id": "gxy-qsl4g", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/e/8/dataset_4e8daf3c-2296-4538-aa82-444fbfe3ec95.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/1/1/a/dataset_11ad4255-185d-4901-ba61-e0c22b319913_files' && fastqc --outdir '/galaxy/server/database/objects/1/1/a/dataset_11ad4255-185d-4901-ba61-e0c22b319913_files' --contaminants '/galaxy/server/database/objects/7/b/6/dataset_7b643df0-c1df-4ea6-9131-2f65791483de.dat'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/1/1/a/dataset_11ad4255-185d-4901-ba61-e0c22b319913_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/1/1/a/dataset_11ad4255-185d-4901-ba61-e0c22b319913_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null}, "inputs": {"input_file": {"id": "9810caad5ae509ee", "src": "hda", "uuid": "4e8daf3c-2296-4538-aa82-444fbfe3ec95"}, "contaminants": {"id": "c50b26aed327cc20", "src": "hda", "uuid": "7b643df0-c1df-4ea6-9131-2f65791483de"}}, "outputs": {"text_file": {"id": "bafae4f1ab60d862", "src": "hda", "uuid": "b0bb0c1c-dee5-426f-b89c-ce7f781bd118"}, "html_file": {"id": "c078eea2ddfe5240", "src": "hda", "uuid": "11ad4255-185d-4901-ba61-e0c22b319913"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:43:03", "plugin": "core", "name": "end_epoch", "raw_value": "1726472583.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:43:01", "plugin": "core", "name": "start_epoch", "raw_value": "1726472581.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-2", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 2, "time_seconds": 36.42020106315613, "inputs": {"input_file": {"src": "hda", "id": "a4d79a5899719a2c"}, "adapters": {"src": "hda", "id": "1ae05eb19275770a"}}, "job": {"model_class": "Job", "id": "705af8e916d1734c", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:38:56.024847", "update_time": "2024-09-16T07:39:10.456751", "galaxy_version": "24.1", "external_id": "gxy-q9ncs", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/0/6/dataset_40607932-8787-4af3-9cdd-1abf7b97c543.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/f/0/5/dataset_f05c2685-3674-4dd2-a910-7a65dce94343_files' && fastqc --outdir '/galaxy/server/database/objects/f/0/5/dataset_f05c2685-3674-4dd2-a910-7a65dce94343_files'  --adapters '/galaxy/server/database/objects/4/5/b/dataset_45b6dd97-bcf4-4dcf-9105-11a7a194889a.dat'  --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/f/0/5/dataset_f05c2685-3674-4dd2-a910-7a65dce94343_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/f/0/5/dataset_f05c2685-3674-4dd2-a910-7a65dce94343_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "contaminants": null}, "inputs": {"input_file": {"id": "a4d79a5899719a2c", "src": "hda", "uuid": "40607932-8787-4af3-9cdd-1abf7b97c543"}, "adapters": {"id": "1ae05eb19275770a", "src": "hda", "uuid": "45b6dd97-bcf4-4dcf-9105-11a7a194889a"}}, "outputs": {"text_file": {"id": "b81855a3aeb078d1", "src": "hda", "uuid": "5617ae69-2f3f-43ed-b4ef-ddbead3d32c7"}, "html_file": {"id": "ea40f4ed098b757e", "src": "hda", "uuid": "f05c2685-3674-4dd2-a910-7a65dce94343"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:38:59", "plugin": "core", "name": "end_epoch", "raw_value": "1726472339.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:38:57", "plugin": "core", "name": "start_epoch", "raw_value": "1726472337.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-2", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 2, "time_seconds": 35.34084630012512, "inputs": {"input_file": {"src": "hda", "id": "02a77e9d9f80614b"}, "adapters": {"src": "hda", "id": "13b873ae94efea7b"}}, "job": {"model_class": "Job", "id": "04245fe9402d6be7", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:43:35.510331", "update_time": "2024-09-16T07:43:49.740618", "galaxy_version": "24.1", "external_id": "gxy-plv8m", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/a/a/dataset_5aa628bc-e9e8-4b81-a117-3f148ee4068c.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/2/9/b/dataset_29b94d03-4fe3-4d01-b77f-1944e5f6530c_files' && fastqc --outdir '/galaxy/server/database/objects/2/9/b/dataset_29b94d03-4fe3-4d01-b77f-1944e5f6530c_files'  --adapters '/galaxy/server/database/objects/2/7/5/dataset_27540429-dc4b-4ca5-a551-ac778cfb24f9.dat'  --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/2/9/b/dataset_29b94d03-4fe3-4d01-b77f-1944e5f6530c_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/2/9/b/dataset_29b94d03-4fe3-4d01-b77f-1944e5f6530c_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "contaminants": null}, "inputs": {"input_file": {"id": "02a77e9d9f80614b", "src": "hda", "uuid": "5aa628bc-e9e8-4b81-a117-3f148ee4068c"}, "adapters": {"id": "13b873ae94efea7b", "src": "hda", "uuid": "27540429-dc4b-4ca5-a551-ac778cfb24f9"}}, "outputs": {"text_file": {"id": "d13c13b4a9a31ad1", "src": "hda", "uuid": "e133fcc4-5ba2-457f-86c9-6478d380e77e"}, "html_file": {"id": "87b3927d98490386", "src": "hda", "uuid": "29b94d03-4fe3-4d01-b77f-1944e5f6530c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:43:39", "plugin": "core", "name": "end_epoch", "raw_value": "1726472619.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:43:37", "plugin": "core", "name": "start_epoch", "raw_value": "1726472617.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-3", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 3, "time_seconds": 35.36300849914551, "inputs": {"input_file": {"src": "hda", "id": "7348144338d46087"}, "limits": {"src": "hda", "id": "a2cc40b5b9843938"}}, "job": {"model_class": "Job", "id": "991c94d57213227a", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:39:31.831262", "update_time": "2024-09-16T07:39:46.014159", "galaxy_version": "24.1", "external_id": "gxy-4scss", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/3/9/2/dataset_392f2b6f-10bc-4b2c-b576-b218531c9a9f.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/d/1/0/dataset_d100537d-d22e-4f0c-82fc-09eb4f431a97_files' && fastqc --outdir '/galaxy/server/database/objects/d/1/0/dataset_d100537d-d22e-4f0c-82fc-09eb4f431a97_files'   --limits '/galaxy/server/database/objects/6/9/a/dataset_69a6a3e6-002f-4734-8621-32b3c117521a.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/d/1/0/dataset_d100537d-d22e-4f0c-82fc-09eb4f431a97_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/d/1/0/dataset_d100537d-d22e-4f0c-82fc-09eb4f431a97_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "7348144338d46087", "src": "hda", "uuid": "392f2b6f-10bc-4b2c-b576-b218531c9a9f"}, "limits": {"id": "a2cc40b5b9843938", "src": "hda", "uuid": "69a6a3e6-002f-4734-8621-32b3c117521a"}}, "outputs": {"text_file": {"id": "887575404cf27796", "src": "hda", "uuid": "0b763efa-40cf-472a-a68c-7762c2efcea8"}, "html_file": {"id": "ab585e154a3bfcb8", "src": "hda", "uuid": "d100537d-d22e-4f0c-82fc-09eb4f431a97"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:39:35", "plugin": "core", "name": "end_epoch", "raw_value": "1726472375.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:39:33", "plugin": "core", "name": "start_epoch", "raw_value": "1726472373.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-3", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 3, "time_seconds": 35.30215764045715, "inputs": {"input_file": {"src": "hda", "id": "d26e2317a6915445"}, "limits": {"src": "hda", "id": "61acd000e695ed4c"}}, "job": {"model_class": "Job", "id": "cb464e59d29ad20e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:44:10.912675", "update_time": "2024-09-16T07:44:25.246745", "galaxy_version": "24.1", "external_id": "gxy-pxt6h", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/6/4/6/dataset_64686580-b264-44a1-9564-236f39c5ffb2.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/2/a/1/dataset_2a14ef4a-f241-43fe-91dc-05078f0261b3_files' && fastqc --outdir '/galaxy/server/database/objects/2/a/1/dataset_2a14ef4a-f241-43fe-91dc-05078f0261b3_files'   --limits '/galaxy/server/database/objects/2/1/6/dataset_216e528d-389f-43af-88a4-bb539ac103db.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/2/a/1/dataset_2a14ef4a-f241-43fe-91dc-05078f0261b3_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/2/a/1/dataset_2a14ef4a-f241-43fe-91dc-05078f0261b3_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "d26e2317a6915445", "src": "hda", "uuid": "64686580-b264-44a1-9564-236f39c5ffb2"}, "limits": {"id": "61acd000e695ed4c", "src": "hda", "uuid": "216e528d-389f-43af-88a4-bb539ac103db"}}, "outputs": {"text_file": {"id": "01eae63da4bd2386", "src": "hda", "uuid": "4e70f409-353b-4842-85db-82dfbde22cfc"}, "html_file": {"id": "40712ce0ee3959c6", "src": "hda", "uuid": "2a14ef4a-f241-43fe-91dc-05078f0261b3"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:44:14", "plugin": "core", "name": "end_epoch", "raw_value": "1726472654.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:44:12", "plugin": "core", "name": "start_epoch", "raw_value": "1726472652.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-4", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 4, "time_seconds": 28.55568504333496, "inputs": {"input_file": {"src": "hda", "id": "7bdaad68fa540888"}, "limits": {"src": "hda", "id": "ae391d7b590919d4"}, "kmers": "3"}, "job": {"model_class": "Job", "id": "8f36d7f41f5db81f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-09-16T07:40:08.271949", "update_time": "2024-09-16T07:40:15.323461", "galaxy_version": "24.1", "external_id": "gxy-kk8p2", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/f/d/6/dataset_fd64f6e2-1084-450b-8c33-c51d3cf54a9f.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/6/8/f/dataset_68f284c6-6cb0-4a15-8239-b38f175f619b_files' && fastqc --outdir '/galaxy/server/database/objects/6/8/f/dataset_68f284c6-6cb0-4a15-8239-b38f175f619b_files'   --limits '/galaxy/server/database/objects/6/7/7/dataset_6773bce1-5927-4cc7-b440-2623b3d342ff.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 3 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/6/8/f/dataset_68f284c6-6cb0-4a15-8239-b38f175f619b_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/6/8/f/dataset_68f284c6-6cb0-4a15-8239-b38f175f619b_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"3\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "7bdaad68fa540888", "src": "hda", "uuid": "fd64f6e2-1084-450b-8c33-c51d3cf54a9f"}, "limits": {"id": "ae391d7b590919d4", "src": "hda", "uuid": "6773bce1-5927-4cc7-b440-2623b3d342ff"}}, "outputs": {"text_file": {"id": "e819c7aa97ed44f2", "src": "hda", "uuid": "ab68240a-fe73-4cfd-8edb-26cc0e9e7ada"}, "html_file": {"id": "6afe372499079f6a", "src": "hda", "uuid": "68f284c6-6cb0-4a15-8239-b38f175f619b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "null\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "fastqc/0.74+galaxy1-4", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 4, "time_seconds": 37.601213455200195, "inputs": {"input_file": {"src": "hda", "id": "3d6573635e6450b7"}, "limits": {"src": "hda", "id": "b1e9dea3fd0cf1bb"}, "kmers": "3"}, "job": {"model_class": "Job", "id": "7dd126491718c64d", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:44:47.050431", "update_time": "2024-09-16T07:45:02.692181", "galaxy_version": "24.1", "external_id": "gxy-dl9bc", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/b/1/5/dataset_b15423bf-8183-46a1-b414-c815fc23c9ec.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/1/9/3/dataset_1935452b-c11d-4264-a3c1-ff9276d62d9b_files' && fastqc --outdir '/galaxy/server/database/objects/1/9/3/dataset_1935452b-c11d-4264-a3c1-ff9276d62d9b_files'   --limits '/galaxy/server/database/objects/4/5/6/dataset_45655e3a-cbbb-4f1d-8c90-862f9b92e277.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 3 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/1/9/3/dataset_1935452b-c11d-4264-a3c1-ff9276d62d9b_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/1/9/3/dataset_1935452b-c11d-4264-a3c1-ff9276d62d9b_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"3\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "3d6573635e6450b7", "src": "hda", "uuid": "b15423bf-8183-46a1-b414-c815fc23c9ec"}, "limits": {"id": "b1e9dea3fd0cf1bb", "src": "hda", "uuid": "45655e3a-cbbb-4f1d-8c90-862f9b92e277"}}, "outputs": {"text_file": {"id": "0b4bd13a4cf339ff", "src": "hda", "uuid": "7c11e663-e0a9-4349-8967-2cff8bcdea4a"}, "html_file": {"id": "aa591729b88c8de8", "src": "hda", "uuid": "1935452b-c11d-4264-a3c1-ff9276d62d9b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:44:51", "plugin": "core", "name": "end_epoch", "raw_value": "1726472691.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:44:49", "plugin": "core", "name": "start_epoch", "raw_value": "1726472689.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-5", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 5, "time_seconds": 35.32025694847107, "inputs": {"input_file": {"src": "hda", "id": "81bf433de63ab458"}, "min_length": "108"}, "job": {"model_class": "Job", "id": "98c068dbc9346216", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:40:35.114709", "update_time": "2024-09-16T07:40:50.175188", "galaxy_version": "24.1", "external_id": "gxy-v4bmn", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/d/0/3/dataset_d03f5cc4-6ed5-4585-8ae8-16a5827b5223.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/3/4/e/dataset_34ef93dd-3663-4e67-9716-3865a85353a4_files' && fastqc --outdir '/galaxy/server/database/objects/3/4/e/dataset_34ef93dd-3663-4e67-9716-3865a85353a4_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --min_length 108  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/3/4/e/dataset_34ef93dd-3663-4e67-9716-3865a85353a4_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/3/4/e/dataset_34ef93dd-3663-4e67-9716-3865a85353a4_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"108\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "81bf433de63ab458", "src": "hda", "uuid": "d03f5cc4-6ed5-4585-8ae8-16a5827b5223"}}, "outputs": {"text_file": {"id": "d20a4fa141ebfbae", "src": "hda", "uuid": "c9c9248a-4775-47ff-ba09-b4589a0cf5ed"}, "html_file": {"id": "bb2bc03dca0767e2", "src": "hda", "uuid": "34ef93dd-3663-4e67-9716-3865a85353a4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:40:39", "plugin": "core", "name": "end_epoch", "raw_value": "1726472439.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:40:37", "plugin": "core", "name": "start_epoch", "raw_value": "1726472437.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-5", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 5, "time_seconds": 37.31360697746277, "inputs": {"input_file": {"src": "hda", "id": "08bbfdef52bddd26"}, "min_length": "108"}, "job": {"model_class": "Job", "id": "e72efb43b07abad6", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:45:24.249199", "update_time": "2024-09-16T07:45:40.063715", "galaxy_version": "24.1", "external_id": "gxy-qprjh", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/7/7/d/dataset_77d425c6-3446-4f75-8fa8-1d2a892183fc.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/1/4/a/dataset_14acb011-9622-4f73-8087-c68847ec023d_files' && fastqc --outdir '/galaxy/server/database/objects/1/4/a/dataset_14acb011-9622-4f73-8087-c68847ec023d_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --min_length 108  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/1/4/a/dataset_14acb011-9622-4f73-8087-c68847ec023d_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/1/4/a/dataset_14acb011-9622-4f73-8087-c68847ec023d_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"108\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "08bbfdef52bddd26", "src": "hda", "uuid": "77d425c6-3446-4f75-8fa8-1d2a892183fc"}}, "outputs": {"text_file": {"id": "fc10193beb7ce6a3", "src": "hda", "uuid": "51efa80b-0fc9-43ea-adef-139cb1ea8cf0"}, "html_file": {"id": "bd7755a8b1b7842a", "src": "hda", "uuid": "14acb011-9622-4f73-8087-c68847ec023d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:45:28", "plugin": "core", "name": "end_epoch", "raw_value": "1726472728.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:45:26", "plugin": "core", "name": "start_epoch", "raw_value": "1726472726.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-6", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 6, "time_seconds": 34.32595658302307, "inputs": {"input_file": {"src": "hda", "id": "c524650ffc41ce9d"}, "nogroup": true}, "job": {"model_class": "Job", "id": "a4e87aac01c2b934", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:41:10.487139", "update_time": "2024-09-16T07:41:24.458731", "galaxy_version": "24.1", "external_id": "gxy-bbkpv", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/0/d/1/dataset_0d12a44d-96cd-4942-8d2c-97c4a07e44a6.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/6/5/f/dataset_65f03aed-9b6d-40bc-8c3b-d25229e37001_files' && fastqc --outdir '/galaxy/server/database/objects/6/5/f/dataset_65f03aed-9b6d-40bc-8c3b-d25229e37001_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --nogroup --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/6/5/f/dataset_65f03aed-9b6d-40bc-8c3b-d25229e37001_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/6/5/f/dataset_65f03aed-9b6d-40bc-8c3b-d25229e37001_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "true", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "c524650ffc41ce9d", "src": "hda", "uuid": "0d12a44d-96cd-4942-8d2c-97c4a07e44a6"}}, "outputs": {"text_file": {"id": "f978f766699d1475", "src": "hda", "uuid": "ceed61aa-e9c3-40a1-bd88-aad36b0984b1"}, "html_file": {"id": "22f27ffbd412325c", "src": "hda", "uuid": "65f03aed-9b6d-40bc-8c3b-d25229e37001"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:41:13", "plugin": "core", "name": "end_epoch", "raw_value": "1726472473.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:41:11", "plugin": "core", "name": "start_epoch", "raw_value": "1726472471.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-6", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 6, "time_seconds": 36.09474229812622, "inputs": {"input_file": {"src": "hda", "id": "d0d5018958635f22"}, "nogroup": true}, "job": {"model_class": "Job", "id": "e9fc471c049a99aa", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:46:00.249902", "update_time": "2024-09-16T07:46:16.379164", "galaxy_version": "24.1", "external_id": "gxy-jflss", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/1/a/d/dataset_1add9740-88a5-47df-bb8d-1d542937147d.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/7/9/f/dataset_79f63d50-0aae-4099-aa96-4db32df783ec_files' && fastqc --outdir '/galaxy/server/database/objects/7/9/f/dataset_79f63d50-0aae-4099-aa96-4db32df783ec_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --nogroup --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/7/9/f/dataset_79f63d50-0aae-4099-aa96-4db32df783ec_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/7/9/f/dataset_79f63d50-0aae-4099-aa96-4db32df783ec_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "true", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "d0d5018958635f22", "src": "hda", "uuid": "1add9740-88a5-47df-bb8d-1d542937147d"}}, "outputs": {"text_file": {"id": "95f478d6fd4980dd", "src": "hda", "uuid": "d6618269-1b7d-4b50-8b22-249ac06ffb41"}, "html_file": {"id": "aa151b64f2de9be4", "src": "hda", "uuid": "79f63d50-0aae-4099-aa96-4db32df783ec"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:46:05", "plugin": "core", "name": "end_epoch", "raw_value": "1726472765.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:46:02", "plugin": "core", "name": "start_epoch", "raw_value": "1726472762.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-7", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 7, "time_seconds": 36.436257123947144, "inputs": {"input_file": {"src": "hda", "id": "aab6fcf8910ad019"}}, "job": {"model_class": "Job", "id": "d6742bcb74697d9a", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:41:45.566985", "update_time": "2024-09-16T07:42:00.728668", "galaxy_version": "24.1", "external_id": "gxy-mgkm6", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/9/f/4/dataset_9f4c922d-bdb2-4f6c-9c9d-b9d14acc99ea.dat' 'hisat_output_1_bam' && mkdir -p '/galaxy/server/database/objects/c/d/2/dataset_cd21f3e9-7690-43e2-8ee9-7e9492689e4e_files' && fastqc --outdir '/galaxy/server/database/objects/c/d/2/dataset_cd21f3e9-7690-43e2-8ee9-7e9492689e4e_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'bam' 'hisat_output_1_bam'  && cp '/galaxy/server/database/objects/c/d/2/dataset_cd21f3e9-7690-43e2-8ee9-7e9492689e4e_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/c/d/2/dataset_cd21f3e9-7690-43e2-8ee9-7e9492689e4e_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "aab6fcf8910ad019", "src": "hda", "uuid": "9f4c922d-bdb2-4f6c-9c9d-b9d14acc99ea"}}, "outputs": {"text_file": {"id": "fa095efe70432585", "src": "hda", "uuid": "56162fcd-d2db-4192-b8f0-14955ae14697"}, "html_file": {"id": "ce30fabe01d724d2", "src": "hda", "uuid": "cd21f3e9-7690-43e2-8ee9-7e9492689e4e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:41:49", "plugin": "core", "name": "end_epoch", "raw_value": "1726472509.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:41:47", "plugin": "core", "name": "start_epoch", "raw_value": "1726472507.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-7", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 7, "time_seconds": 34.465715408325195, "inputs": {"input_file": {"src": "hda", "id": "82af47c4acc52b42"}}, "job": {"model_class": "Job", "id": "790235b0ed929eee", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:46:36.462324", "update_time": "2024-09-16T07:46:50.797025", "galaxy_version": "24.1", "external_id": "gxy-75w42", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/b/0/dataset_5b0d8ece-853c-48ba-bea2-ca5f4726ecd9.dat' 'hisat_output_1_bam' && mkdir -p '/galaxy/server/database/objects/7/1/d/dataset_71d09449-c734-4a44-b471-f431bc4f434c_files' && fastqc --outdir '/galaxy/server/database/objects/7/1/d/dataset_71d09449-c734-4a44-b471-f431bc4f434c_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'bam' 'hisat_output_1_bam'  && cp '/galaxy/server/database/objects/7/1/d/dataset_71d09449-c734-4a44-b471-f431bc4f434c_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/7/1/d/dataset_71d09449-c734-4a44-b471-f431bc4f434c_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "82af47c4acc52b42", "src": "hda", "uuid": "5b0d8ece-853c-48ba-bea2-ca5f4726ecd9"}}, "outputs": {"text_file": {"id": "6b708137fd427366", "src": "hda", "uuid": "0c5bbb33-0c79-4e2f-8a18-e751e99f20a6"}, "html_file": {"id": "a20fc30b7d0d3aa1", "src": "hda", "uuid": "71d09449-c734-4a44-b471-f431bc4f434c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:46:40", "plugin": "core", "name": "end_epoch", "raw_value": "1726472800.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:46:37", "plugin": "core", "name": "start_epoch", "raw_value": "1726472797.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "jq/1.0-0", "has_data": true, "data": {"tool_id": "jq", "tool_version": "1.0", "test_index": 0, "time_seconds": 32.63349795341492, "inputs": {"input": {"src": "hda", "id": "1f9f7395a3cb867b"}, "filter": ".[] | [.foo, .bar]", "tsv": true}, "job": {"model_class": "Job", "id": "6f318dc5ad869cfd", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jq/jq/1.0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:19:21.015097", "update_time": "2024-09-16T09:19:34.724630", "galaxy_version": "24.1", "external_id": "gxy-q87hk", "handler": null, "job_runner_name": null, "command_line": "JQ_BIN=`which jq` && cat '/galaxy/server/database/objects/f/b/c/dataset_fbc553c9-0a2b-4130-ab1c-b0c73aa91ee8.dat' | env -i JQ_BIN=$JQ_BIN $JQ_BIN -r -S '.[] | [.foo, .bar] | @tsv' > '/galaxy/server/database/objects/f/b/c/dataset_fbc82200-d6c7-4d00-97a2-4944575d41e7.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"json\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tsv": "true", "filter": "\".[] | [.foo, .bar]\""}, "inputs": {"input": {"id": "1f9f7395a3cb867b", "src": "hda", "uuid": "fbc553c9-0a2b-4130-ab1c-b0c73aa91ee8"}}, "outputs": {"output": {"id": "7a4925d4b8c78e57", "src": "hda", "uuid": "fbc82200-d6c7-4d00-97a2-4944575d41e7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:19:24", "plugin": "core", "name": "end_epoch", "raw_value": "1726478364.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:19:24", "plugin": "core", "name": "start_epoch", "raw_value": "1726478364.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "jq/1.0-1", "has_data": true, "data": {"tool_id": "jq", "tool_version": "1.0", "test_index": 1, "time_seconds": 31.071028470993042, "inputs": {"input": {"src": "hda", "id": "509f1863e92e5945"}, "filter": "{\"a\": env}", "tsv": false}, "job": {"model_class": "Job", "id": "7dc2dbd8abc92913", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jq/jq/1.0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:19:53.162414", "update_time": "2024-09-16T09:20:06.034410", "galaxy_version": "24.1", "external_id": "gxy-6kmsp", "handler": null, "job_runner_name": null, "command_line": "JQ_BIN=`which jq` && cat '/galaxy/server/database/objects/f/1/2/dataset_f1200216-ac74-40fc-a1c9-683143a2e008.dat' | env -i JQ_BIN=$JQ_BIN $JQ_BIN -r -S '{\"a\": env} ' > '/galaxy/server/database/objects/2/6/8/dataset_2689b77b-c1fd-489a-ab18-50675866c8f3.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"json\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tsv": "false", "filter": "\"{\\\"a\\\": env}\""}, "inputs": {"input": {"id": "509f1863e92e5945", "src": "hda", "uuid": "f1200216-ac74-40fc-a1c9-683143a2e008"}}, "outputs": {"output": {"id": "a56344a198719a50", "src": "hda", "uuid": "2689b77b-c1fd-489a-ab18-50675866c8f3"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:19:54", "plugin": "core", "name": "end_epoch", "raw_value": "1726478394.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:19:54", "plugin": "core", "name": "start_epoch", "raw_value": "1726478394.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-0", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 0, "time_seconds": 55.39772439002991, "inputs": {"input": {"src": "hda", "id": "7941ed61a8e12f0a"}, "extension": "png"}, "job": {"model_class": "Job", "id": "dacd3c546e319c71", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:02:05.657267", "update_time": "2024-09-16T09:02:40.546737", "galaxy_version": "24.1", "external_id": "gxy-nqvp6", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/2/1/d/dataset_21d3b130-3440-4bfb-ba94-3d1590edc57b.dat' --saveas histogram.png --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.png '/galaxy/server/database/objects/d/7/c/dataset_d7cea29c-eab8-4e72-969b-27024033b19b.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "num_bins": "\"50\"", "max_length": "\"1000000000\"", "min_length": "\"0\"", "theme_bw": "false", "extension": "\"png\""}, "inputs": {"input": {"id": "7941ed61a8e12f0a", "src": "hda", "uuid": "21d3b130-3440-4bfb-ba94-3d1590edc57b"}}, "outputs": {"output": {"id": "70f54a432cd1dbee", "src": "hda", "uuid": "d7cea29c-eab8-4e72-969b-27024033b19b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:02:22", "plugin": "core", "name": "end_epoch", "raw_value": "1726477342.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:02:20", "plugin": "core", "name": "start_epoch", "raw_value": "1726477340.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-1", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 1, "time_seconds": 36.01745057106018, "inputs": {"input": {"src": "hda", "id": "84a58b25bc6d908c"}, "extension": "pdf"}, "job": {"model_class": "Job", "id": "dda6fce212f8ea12", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:03:01.437588", "update_time": "2024-09-16T09:03:16.761215", "galaxy_version": "24.1", "external_id": "gxy-p5r2v", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/c/d/2/dataset_cd2a909e-7c31-40d2-ab33-a9969d703808.dat' --saveas histogram.pdf --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.pdf '/galaxy/server/database/objects/f/e/2/dataset_fe239488-4c8f-43e6-909b-263b4e25555d.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "num_bins": "\"50\"", "max_length": "\"1000000000\"", "min_length": "\"0\"", "theme_bw": "false", "extension": "\"pdf\""}, "inputs": {"input": {"id": "84a58b25bc6d908c", "src": "hda", "uuid": "cd2a909e-7c31-40d2-ab33-a9969d703808"}}, "outputs": {"output": {"id": "262b049966e5241f", "src": "hda", "uuid": "fe239488-4c8f-43e6-909b-263b4e25555d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:03:05", "plugin": "core", "name": "end_epoch", "raw_value": "1726477385.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:03:03", "plugin": "core", "name": "start_epoch", "raw_value": "1726477383.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-2", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 2, "time_seconds": 35.44152092933655, "inputs": {"input": {"src": "hda", "id": "aa31d55f5132f1de"}, "extension": "svg"}, "job": {"model_class": "Job", "id": "8de90438c36e1a61", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:03:37.255248", "update_time": "2024-09-16T09:03:52.175272", "galaxy_version": "24.1", "external_id": "gxy-mclp8", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/7/d/d/dataset_7dd9e31b-fe6d-4976-b757-90d85a253919.dat' --saveas histogram.svg --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.svg '/galaxy/server/database/objects/d/f/6/dataset_df6898c2-e1e5-4fda-8351-6bd924f8882d.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "num_bins": "\"50\"", "max_length": "\"1000000000\"", "min_length": "\"0\"", "theme_bw": "false", "extension": "\"svg\""}, "inputs": {"input": {"id": "aa31d55f5132f1de", "src": "hda", "uuid": "7dd9e31b-fe6d-4976-b757-90d85a253919"}}, "outputs": {"output": {"id": "7e4e1aac75ac0db5", "src": "hda", "uuid": "df6898c2-e1e5-4fda-8351-6bd924f8882d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:03:41", "plugin": "core", "name": "end_epoch", "raw_value": "1726477421.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:03:39", "plugin": "core", "name": "start_epoch", "raw_value": "1726477419.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-0", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 0, "time_seconds": 11.837061166763306, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-0", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 0, "time_seconds": 139.5121352672577, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "a0a371bc864d2b74"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "194812b6bf25b313"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "82c912f6d6b57bb7"}, "sc|input_types|input2": {"src": "hda", "id": "9827514418111a35"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "54e3fd1d9970653c"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|filter_type": "no_filter"}, "job": {"model_class": "Job", "id": "bafae4f1ab60d862", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "error", "exit_code": null, "create_time": "2024-09-16T07:57:43.707323", "update_time": "2024-09-16T07:58:20.679035", "galaxy_version": "24.1", "external_id": "gxy-vwv9b", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/a/e/b/dataset_aebc4913-2137-4922-a9df-2efa853360e0.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/1/a/8/dataset_1a895fbd-40bf-42ba-8bad-2d5c9aa60303.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/2/b/3/dataset_2b357c7a-6eca-4206-9ad7-92cbb163ae34.dat /galaxy/server/database/objects/8/f/e/dataset_8fe751c7-20e7-46b6-b8a7-c93c726971f5.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/6/d/e/dataset_6de41c98-20ac-4990-a3c8-6e88b5755755.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter None  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/7/c/2/dataset_7c2f442f-ce21-482f-8343-7ca5c5caccfb.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/7/f/6/dataset_7f6084c8-0b7a-4464-bda2-5223ff2e31de.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 3, \"filter_type\": \"no_filter\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 477, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 478, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 479, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 480, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 476, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "47226fde859a0bc9", "src": "hda", "uuid": "aebc4913-2137-4922-a9df-2efa853360e0"}, "refGenomeSource|sjdbGTFfile": {"id": "194812b6bf25b313", "src": "hda", "uuid": "1a895fbd-40bf-42ba-8bad-2d5c9aa60303"}, "sc|input_types|input1": {"id": "82c912f6d6b57bb7", "src": "hda", "uuid": "8fe751c7-20e7-46b6-b8a7-c93c726971f5"}, "sc|input_types|input11": {"id": "82c912f6d6b57bb7", "src": "hda", "uuid": "8fe751c7-20e7-46b6-b8a7-c93c726971f5"}, "sc|input_types|input2": {"id": "9827514418111a35", "src": "hda", "uuid": "2b357c7a-6eca-4206-9ad7-92cbb163ae34"}, "sc|input_types|input21": {"id": "9827514418111a35", "src": "hda", "uuid": "2b357c7a-6eca-4206-9ad7-92cbb163ae34"}, "sc|soloCBwhitelist": {"id": "54e3fd1d9970653c", "src": "hda", "uuid": "6de41c98-20ac-4990-a3c8-6e88b5755755"}}, "outputs": {"output_stats": {"id": "2b3dcac31290e15b", "src": "hda", "uuid": "7c2f442f-ce21-482f-8343-7ca5c5caccfb"}, "output_BAM": {"id": "c4c73a5c30840fa5", "src": "hda", "uuid": "7f6084c8-0b7a-4464-bda2-5223ff2e31de"}, "output_matrix": {"id": "d50dd8da609eef5e", "src": "hda", "uuid": "e1703206-6784-43a0-bba8-2ec898378f6a"}, "output_barcodes": {"id": "db29933c92086197", "src": "hda", "uuid": "eca4b575-e02c-4218-89dd-905ff7c0cd9e"}, "output_genes": {"id": "7561a3c723eb4d2c", "src": "hda", "uuid": "25cf0eb6-f409-4491-b4a1-a38783c811eb"}, "output_log": {"id": "cf25d16be5c54702", "src": "hda", "uuid": "3f693de7-effe-4118-8cbf-d38b5a74a3fa"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:57:59 ..... started STAR run\nSep 16 07:57:59 ... starting to generate Genome files\nSep 16 07:57:59 ..... processing annotations GTF\nSep 16 07:57:59 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:57:59 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:57:59 ... loading chunks from disk, packing SA...\nSep 16 07:57:59 ... finished generating suffix array\nSep 16 07:57:59 ... generating Suffix Array index\nSep 16 07:57:59 ... completed Suffix Array index\nSep 16 07:57:59 ..... inserting junctions into the genome indices\nSep 16 07:57:59 ... writing Genome to disk ...\nSep 16 07:57:59 ... writing Suffix Array to disk ...\nSep 16 07:57:59 ... writing SAindex to disk\nSep 16 07:57:59 ..... finished successfully\nSep 16 07:57:59 ..... started STAR run\nSep 16 07:57:59 ..... loading genome\nSep 16 07:57:59 ..... started mapping\nSep 16 07:58:17 ..... finished mapping\nSep 16 07:58:17 ..... started Solo counting\nSep 16 07:58:17 ..... finished Solo counting\nSep 16 07:58:17 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": null, "job_stderr": null, "stdout": "Sep 16 07:57:59 ..... started STAR run\nSep 16 07:57:59 ... starting to generate Genome files\nSep 16 07:57:59 ..... processing annotations GTF\nSep 16 07:57:59 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:57:59 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:57:59 ... loading chunks from disk, packing SA...\nSep 16 07:57:59 ... finished generating suffix array\nSep 16 07:57:59 ... generating Suffix Array index\nSep 16 07:57:59 ... completed Suffix Array index\nSep 16 07:57:59 ..... inserting junctions into the genome indices\nSep 16 07:57:59 ... writing Genome to disk ...\nSep 16 07:57:59 ... writing Suffix Array to disk ...\nSep 16 07:57:59 ... writing SAindex to disk\nSep 16 07:57:59 ..... finished successfully\nSep 16 07:57:59 ..... started STAR run\nSep 16 07:57:59 ..... loading genome\nSep 16 07:57:59 ..... started mapping\nSep 16 07:58:17 ..... finished mapping\nSep 16 07:58:17 ..... started Solo counting\nSep 16 07:58:17 ..... finished Solo counting\nSep 16 07:58:17 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n."], "status": "failure"}}, {"id": "rna_starsolo/2.7.8a-1", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 1, "time_seconds": 96.30386805534363, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "6665359a59c10b40"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "11bfdbb283d57126"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "bbe7e47c8f459f89"}, "sc|input_types|input2": {"src": "hda", "id": "14dc5f92a95e7d16"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "dea32277cab945e1"}, "sc|params|soloCBstart": "1", "sc|params|soloCBlen": "16", "sc|params|soloUMIstart": "17", "sc|params|soloUMIlen": "12", "sc|params|chemistry": "custom", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "0a2b54a636edfe7d", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:47:49.771037", "update_time": "2024-09-16T07:48:39.257978", "galaxy_version": "24.1", "external_id": "gxy-plrq4", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/5/2/c/dataset_52cde0aa-b3d4-4f95-9f1f-1a6ffc85c898.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/3/0/5/dataset_305a3c11-2c78-40ce-9afe-f6981ccec3c1.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/4/c/5/dataset_4c589a65-c82e-49a9-aeb6-2749111e479f.dat /galaxy/server/database/objects/4/2/e/dataset_42e5dcbd-77fe-4d4b-9034-73b20c8d3871.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/c/f/1/dataset_cf1e53e6-d420-4cf5-babb-7cfc521fbb74.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12 --soloAdapterSequence '-' --soloAdapterMismatchesNmax 1 --clipAdapterType Hamming   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/4/4/0/dataset_44059f87-cec1-431a-b4fa-8a02dac6fa6a.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/2/9/7/dataset_297209f9-763e-42ef-a950-e6af456e6f3a.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 383, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 384, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 2, \"bccdna_mate\": {\"__current_case__\": 0, \"bc_location\": \"other_mate\"}, \"chemistry\": \"custom\", \"clipAdapterType\": \"Hamming\", \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"-\", \"soloCBlen\": \"16\", \"soloCBstart\": \"1\", \"soloUMIlen\": \"12\", \"soloUMIstart\": \"17\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 385, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 386, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 382, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "af99a831396389e3", "src": "hda", "uuid": "52cde0aa-b3d4-4f95-9f1f-1a6ffc85c898"}, "refGenomeSource|sjdbGTFfile": {"id": "11bfdbb283d57126", "src": "hda", "uuid": "305a3c11-2c78-40ce-9afe-f6981ccec3c1"}, "sc|input_types|input1": {"id": "bbe7e47c8f459f89", "src": "hda", "uuid": "42e5dcbd-77fe-4d4b-9034-73b20c8d3871"}, "sc|input_types|input11": {"id": "bbe7e47c8f459f89", "src": "hda", "uuid": "42e5dcbd-77fe-4d4b-9034-73b20c8d3871"}, "sc|input_types|input2": {"id": "14dc5f92a95e7d16", "src": "hda", "uuid": "4c589a65-c82e-49a9-aeb6-2749111e479f"}, "sc|input_types|input21": {"id": "14dc5f92a95e7d16", "src": "hda", "uuid": "4c589a65-c82e-49a9-aeb6-2749111e479f"}, "sc|soloCBwhitelist": {"id": "dea32277cab945e1", "src": "hda", "uuid": "cf1e53e6-d420-4cf5-babb-7cfc521fbb74"}}, "outputs": {"output_stats": {"id": "2e99fbd34fa28eda", "src": "hda", "uuid": "44059f87-cec1-431a-b4fa-8a02dac6fa6a"}, "output_BAM": {"id": "c52e8f4c7ed147bc", "src": "hda", "uuid": "297209f9-763e-42ef-a950-e6af456e6f3a"}, "output_matrix_filtered": {"id": "9c7453a123452308", "src": "hda", "uuid": "8788a03b-9d77-49ed-bdef-1911833625c1"}, "output_barcodes_filtered": {"id": "2f1151a12d42f6b3", "src": "hda", "uuid": "46a88dbf-d117-4a19-a243-bed7bc3519f7"}, "output_genes_filtered": {"id": "ec9a325d0601c724", "src": "hda", "uuid": "894ac72d-a709-4457-b2f6-86dba5308bd0"}, "output_log": {"id": "d7a991d4a1f0d194", "src": "hda", "uuid": "8fb4867c-f2bf-43e0-ab03-4a2e058c1555"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:48:08 ..... started STAR run\nSep 16 07:48:08 ... starting to generate Genome files\nSep 16 07:48:08 ..... processing annotations GTF\nSep 16 07:48:08 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:48:08 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:48:09 ... loading chunks from disk, packing SA...\nSep 16 07:48:09 ... finished generating suffix array\nSep 16 07:48:09 ... generating Suffix Array index\nSep 16 07:48:09 ... completed Suffix Array index\nSep 16 07:48:09 ..... inserting junctions into the genome indices\nSep 16 07:48:09 ... writing Genome to disk ...\nSep 16 07:48:09 ... writing Suffix Array to disk ...\nSep 16 07:48:09 ... writing SAindex to disk\nSep 16 07:48:09 ..... finished successfully\nSep 16 07:48:09 ..... started STAR run\nSep 16 07:48:09 ..... loading genome\nSep 16 07:48:09 ..... started mapping\nSep 16 07:48:27 ..... finished mapping\nSep 16 07:48:27 ..... started Solo counting\nSep 16 07:48:27 ..... finished Solo counting\nSep 16 07:48:27 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 07:48:08 ..... started STAR run\nSep 16 07:48:08 ... starting to generate Genome files\nSep 16 07:48:08 ..... processing annotations GTF\nSep 16 07:48:08 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:48:08 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:48:09 ... loading chunks from disk, packing SA...\nSep 16 07:48:09 ... finished generating suffix array\nSep 16 07:48:09 ... generating Suffix Array index\nSep 16 07:48:09 ... completed Suffix Array index\nSep 16 07:48:09 ..... inserting junctions into the genome indices\nSep 16 07:48:09 ... writing Genome to disk ...\nSep 16 07:48:09 ... writing Suffix Array to disk ...\nSep 16 07:48:09 ... writing SAindex to disk\nSep 16 07:48:09 ..... finished successfully\nSep 16 07:48:09 ..... started STAR run\nSep 16 07:48:09 ..... loading genome\nSep 16 07:48:09 ..... started mapping\nSep 16 07:48:27 ..... finished mapping\nSep 16 07:48:27 ..... started Solo counting\nSep 16 07:48:27 ..... finished Solo counting\nSep 16 07:48:27 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "19 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "19.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:48:27", "plugin": "core", "name": "end_epoch", "raw_value": "1726472907.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:48:08", "plugin": "core", "name": "start_epoch", "raw_value": "1726472888.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-1", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 1, "time_seconds": 81.87447476387024, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "6f318dc5ad869cfd"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "9c740ab29ca635fe"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "7dc2dbd8abc92913"}, "sc|input_types|input2": {"src": "hda", "id": "40d197a7abbe1b91"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "c10c6dc3f7adebc3"}, "sc|params|soloCBstart": "1", "sc|params|soloCBlen": "16", "sc|params|soloUMIstart": "17", "sc|params|soloUMIlen": "12", "sc|params|chemistry": "custom", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "40712ce0ee3959c6", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:58:57.155588", "update_time": "2024-09-16T07:59:41.686186", "galaxy_version": "24.1", "external_id": "gxy-ftrjn", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/d/0/7/dataset_d0772b7a-5d01-4eae-bee1-9e3452a7f6ef.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/b/8/b/dataset_b8bf63aa-218b-4dcd-a259-18d4e83f865b.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/1/b/5/dataset_1b5e23f0-a92a-4ae0-8f00-1ed68325934f.dat /galaxy/server/database/objects/4/4/f/dataset_44fe2a05-c08e-4c28-a21d-129ef17971e7.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/9/1/1/dataset_911c4b3f-3c4a-4c29-86dc-f98c3dad1106.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12 --soloAdapterSequence '-' --soloAdapterMismatchesNmax 1 --clipAdapterType Hamming   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/a/0/6/dataset_a0630f75-41f6-4073-b518-5b309b1ace57.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/e/9/4/dataset_e948d736-1bae-4954-82a2-ea2f5d580504.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 489, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 490, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 2, \"bccdna_mate\": {\"__current_case__\": 0, \"bc_location\": \"other_mate\"}, \"chemistry\": \"custom\", \"clipAdapterType\": \"Hamming\", \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"-\", \"soloCBlen\": \"16\", \"soloCBstart\": \"1\", \"soloUMIlen\": \"12\", \"soloUMIstart\": \"17\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 491, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 492, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 488, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "b8abfac2758a1fa6", "src": "hda", "uuid": "d0772b7a-5d01-4eae-bee1-9e3452a7f6ef"}, "refGenomeSource|sjdbGTFfile": {"id": "9c740ab29ca635fe", "src": "hda", "uuid": "b8bf63aa-218b-4dcd-a259-18d4e83f865b"}, "sc|input_types|input1": {"id": "7dc2dbd8abc92913", "src": "hda", "uuid": "44fe2a05-c08e-4c28-a21d-129ef17971e7"}, "sc|input_types|input11": {"id": "7dc2dbd8abc92913", "src": "hda", "uuid": "44fe2a05-c08e-4c28-a21d-129ef17971e7"}, "sc|input_types|input2": {"id": "40d197a7abbe1b91", "src": "hda", "uuid": "1b5e23f0-a92a-4ae0-8f00-1ed68325934f"}, "sc|input_types|input21": {"id": "40d197a7abbe1b91", "src": "hda", "uuid": "1b5e23f0-a92a-4ae0-8f00-1ed68325934f"}, "sc|soloCBwhitelist": {"id": "c10c6dc3f7adebc3", "src": "hda", "uuid": "911c4b3f-3c4a-4c29-86dc-f98c3dad1106"}}, "outputs": {"output_stats": {"id": "19d4e395d8f5799a", "src": "hda", "uuid": "a0630f75-41f6-4073-b518-5b309b1ace57"}, "output_BAM": {"id": "2b1476e73d876923", "src": "hda", "uuid": "e948d736-1bae-4954-82a2-ea2f5d580504"}, "output_matrix_filtered": {"id": "02ffbbb3bd6e86fa", "src": "hda", "uuid": "cca2edf0-1566-4ddc-a564-5b6d3a17ae3a"}, "output_barcodes_filtered": {"id": "cc9ebefe625673b3", "src": "hda", "uuid": "3accdbc0-6d66-46a6-a352-a95a8bc7d966"}, "output_genes_filtered": {"id": "f1a4fbf9e1ba8449", "src": "hda", "uuid": "ae474e6b-8804-4d84-a74c-da2edb12199b"}, "output_log": {"id": "7c22540bae5628b3", "src": "hda", "uuid": "0691748b-d70c-4e05-821b-b627c75efc35"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:59:12 ..... started STAR run\nSep 16 07:59:12 ... starting to generate Genome files\nSep 16 07:59:12 ..... processing annotations GTF\nSep 16 07:59:12 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:59:12 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:59:12 ... loading chunks from disk, packing SA...\nSep 16 07:59:12 ... finished generating suffix array\nSep 16 07:59:12 ... generating Suffix Array index\nSep 16 07:59:12 ... completed Suffix Array index\nSep 16 07:59:12 ..... inserting junctions into the genome indices\nSep 16 07:59:12 ... writing Genome to disk ...\nSep 16 07:59:12 ... writing Suffix Array to disk ...\nSep 16 07:59:12 ... writing SAindex to disk\nSep 16 07:59:12 ..... finished successfully\nSep 16 07:59:12 ..... started STAR run\nSep 16 07:59:12 ..... loading genome\nSep 16 07:59:12 ..... started mapping\nSep 16 07:59:30 ..... finished mapping\nSep 16 07:59:30 ..... started Solo counting\nSep 16 07:59:30 ..... finished Solo counting\nSep 16 07:59:30 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 07:59:12 ..... started STAR run\nSep 16 07:59:12 ... starting to generate Genome files\nSep 16 07:59:12 ..... processing annotations GTF\nSep 16 07:59:12 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:59:12 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:59:12 ... loading chunks from disk, packing SA...\nSep 16 07:59:12 ... finished generating suffix array\nSep 16 07:59:12 ... generating Suffix Array index\nSep 16 07:59:12 ... completed Suffix Array index\nSep 16 07:59:12 ..... inserting junctions into the genome indices\nSep 16 07:59:12 ... writing Genome to disk ...\nSep 16 07:59:12 ... writing Suffix Array to disk ...\nSep 16 07:59:12 ... writing SAindex to disk\nSep 16 07:59:12 ..... finished successfully\nSep 16 07:59:12 ..... started STAR run\nSep 16 07:59:12 ..... loading genome\nSep 16 07:59:12 ..... started mapping\nSep 16 07:59:30 ..... finished mapping\nSep 16 07:59:30 ..... started Solo counting\nSep 16 07:59:30 ..... finished Solo counting\nSep 16 07:59:30 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:59:30", "plugin": "core", "name": "end_epoch", "raw_value": "1726473570.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:59:12", "plugin": "core", "name": "start_epoch", "raw_value": "1726473552.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-2", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 2, "time_seconds": 116.32930564880371, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "fe7776616d48178c"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "2c9b91cf0bc83bfa"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": [{"src": "hda", "id": "55e3ea4afef1c12e"}, {"src": "hda", "id": "55e3ea4afef1c12e"}, {"src": "hda", "id": "55e3ea4afef1c12e"}], "sc|input_types|input2": [{"src": "hda", "id": "a7c9654966603440"}, {"src": "hda", "id": "a7c9654966603440"}, {"src": "hda", "id": "a7c9654966603440"}], "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "20b82d0e64bdd32f"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "68bc0edf0372723e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:49:17.830375", "update_time": "2024-09-16T07:50:37.339784", "galaxy_version": "24.1", "external_id": "gxy-sv697", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/d/8/e/dataset_d8ea5701-c3d5-43cf-964a-a171eaf046b3.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/3/7/a/dataset_37a0a0e0-910c-464d-9b3e-288a9601d010.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/2/c/3/dataset_2c3072aa-82f9-405d-9f58-7fb01c5c3c5e.dat,/galaxy/server/database/objects/2/c/3/dataset_2c3072aa-82f9-405d-9f58-7fb01c5c3c5e.dat,/galaxy/server/database/objects/2/c/3/dataset_2c3072aa-82f9-405d-9f58-7fb01c5c3c5e.dat /galaxy/server/database/objects/d/c/3/dataset_dc32102e-f855-41c3-a6c4-d66fb58f1327.dat,/galaxy/server/database/objects/d/c/3/dataset_dc32102e-f855-41c3-a6c4-d66fb58f1327.dat,/galaxy/server/database/objects/d/c/3/dataset_dc32102e-f855-41c3-a6c4-d66fb58f1327.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/c/5/7/dataset_c574ce2a-ebdf-44ba-b167-7c0672f09546.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/f/b/7/dataset_fb7af5c0-f48e-496f-8066-93ced3e78fee.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/1/f/1/dataset_1f17f76f-2a0b-4577-8498-a1452344e247.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 395, \"src\": \"hda\"}, {\"id\": 395, \"src\": \"hda\"}, {\"id\": 395, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 396, \"src\": \"hda\"}, {\"id\": 396, \"src\": \"hda\"}, {\"id\": 396, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 397, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 398, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 394, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "b5f7bf0bab1c9a5d", "src": "hda", "uuid": "d8ea5701-c3d5-43cf-964a-a171eaf046b3"}, "refGenomeSource|sjdbGTFfile": {"id": "2c9b91cf0bc83bfa", "src": "hda", "uuid": "37a0a0e0-910c-464d-9b3e-288a9601d010"}, "sc|input_types|input1": {"id": "55e3ea4afef1c12e", "src": "hda", "uuid": "dc32102e-f855-41c3-a6c4-d66fb58f1327"}, "sc|input_types|input11": {"id": "55e3ea4afef1c12e", "src": "hda", "uuid": "dc32102e-f855-41c3-a6c4-d66fb58f1327"}, "sc|input_types|input12": {"id": "55e3ea4afef1c12e", "src": "hda", "uuid": "dc32102e-f855-41c3-a6c4-d66fb58f1327"}, "sc|input_types|input13": {"id": "55e3ea4afef1c12e", "src": "hda", "uuid": "dc32102e-f855-41c3-a6c4-d66fb58f1327"}, "sc|input_types|input2": {"id": "a7c9654966603440", "src": "hda", "uuid": "2c3072aa-82f9-405d-9f58-7fb01c5c3c5e"}, "sc|input_types|input21": {"id": "a7c9654966603440", "src": "hda", "uuid": "2c3072aa-82f9-405d-9f58-7fb01c5c3c5e"}, "sc|input_types|input22": {"id": "a7c9654966603440", "src": "hda", "uuid": "2c3072aa-82f9-405d-9f58-7fb01c5c3c5e"}, "sc|input_types|input23": {"id": "a7c9654966603440", "src": "hda", "uuid": "2c3072aa-82f9-405d-9f58-7fb01c5c3c5e"}, "sc|soloCBwhitelist": {"id": "20b82d0e64bdd32f", "src": "hda", "uuid": "c574ce2a-ebdf-44ba-b167-7c0672f09546"}}, "outputs": {"output_stats": {"id": "ebf9613df19db613", "src": "hda", "uuid": "fb7af5c0-f48e-496f-8066-93ced3e78fee"}, "output_BAM": {"id": "597f9fcbb54dc7dc", "src": "hda", "uuid": "1f17f76f-2a0b-4577-8498-a1452344e247"}, "output_matrix_filtered": {"id": "017b67cd67a38fb9", "src": "hda", "uuid": "0646c189-1b9e-47ee-aa4d-af6f1291a634"}, "output_barcodes_filtered": {"id": "5316d20f7027c1ec", "src": "hda", "uuid": "6d55aa31-0e12-4007-a04d-62035e709763"}, "output_genes_filtered": {"id": "ce09227b54175b38", "src": "hda", "uuid": "8c115024-4455-4c11-952a-8c68c1e4f920"}, "output_log": {"id": "d455ff259e444b73", "src": "hda", "uuid": "11aa2cbc-9939-48ce-92ff-032fb18d56e5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:49:32 ..... started STAR run\nSep 16 07:49:32 ... starting to generate Genome files\nSep 16 07:49:32 ..... processing annotations GTF\nSep 16 07:49:32 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:49:32 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:49:32 ... loading chunks from disk, packing SA...\nSep 16 07:49:32 ... finished generating suffix array\nSep 16 07:49:32 ... generating Suffix Array index\nSep 16 07:49:32 ... completed Suffix Array index\nSep 16 07:49:32 ..... inserting junctions into the genome indices\nSep 16 07:49:32 ... writing Genome to disk ...\nSep 16 07:49:32 ... writing Suffix Array to disk ...\nSep 16 07:49:32 ... writing SAindex to disk\nSep 16 07:49:32 ..... finished successfully\nSep 16 07:49:32 ..... started STAR run\nSep 16 07:49:33 ..... loading genome\nSep 16 07:49:33 ..... started mapping\nSep 16 07:50:25 ..... finished mapping\nSep 16 07:50:25 ..... started Solo counting\nSep 16 07:50:25 ..... finished Solo counting\nSep 16 07:50:25 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 07:49:32 ..... started STAR run\nSep 16 07:49:32 ... starting to generate Genome files\nSep 16 07:49:32 ..... processing annotations GTF\nSep 16 07:49:32 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:49:32 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:49:32 ... loading chunks from disk, packing SA...\nSep 16 07:49:32 ... finished generating suffix array\nSep 16 07:49:32 ... generating Suffix Array index\nSep 16 07:49:32 ... completed Suffix Array index\nSep 16 07:49:32 ..... inserting junctions into the genome indices\nSep 16 07:49:32 ... writing Genome to disk ...\nSep 16 07:49:32 ... writing Suffix Array to disk ...\nSep 16 07:49:32 ... writing SAindex to disk\nSep 16 07:49:32 ..... finished successfully\nSep 16 07:49:32 ..... started STAR run\nSep 16 07:49:33 ..... loading genome\nSep 16 07:49:33 ..... started mapping\nSep 16 07:50:25 ..... finished mapping\nSep 16 07:50:25 ..... started Solo counting\nSep 16 07:50:25 ..... finished Solo counting\nSep 16 07:50:25 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "54 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "54.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:50:26", "plugin": "core", "name": "end_epoch", "raw_value": "1726473026.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:49:32", "plugin": "core", "name": "start_epoch", "raw_value": "1726472972.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-2", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 2, "time_seconds": 114.89974570274353, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "8a02e249819f8d94"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "bf6c76f1ff603108"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": [{"src": "hda", "id": "e449a8d99af939ae"}, {"src": "hda", "id": "e449a8d99af939ae"}, {"src": "hda", "id": "e449a8d99af939ae"}], "sc|input_types|input2": [{"src": "hda", "id": "c194149afb97df95"}, {"src": "hda", "id": "c194149afb97df95"}, {"src": "hda", "id": "c194149afb97df95"}], "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "554b64171cc0f692"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "bd7755a8b1b7842a", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T08:00:19.832479", "update_time": "2024-09-16T08:01:38.297468", "galaxy_version": "24.1", "external_id": "gxy-qnd9j", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/4/b/d/dataset_4bd53277-2e7e-4034-aaa9-aa1edb7731d4.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/0/4/6/dataset_0463c9df-f1f4-49d9-93a7-ac9a48dbd13f.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/9/b/c/dataset_9bc6d07f-df58-431c-ba91-88eadaa59f86.dat,/galaxy/server/database/objects/9/b/c/dataset_9bc6d07f-df58-431c-ba91-88eadaa59f86.dat,/galaxy/server/database/objects/9/b/c/dataset_9bc6d07f-df58-431c-ba91-88eadaa59f86.dat /galaxy/server/database/objects/8/e/e/dataset_8ee42ca2-e2e8-4d5d-bc39-e042fcbe7dcc.dat,/galaxy/server/database/objects/8/e/e/dataset_8ee42ca2-e2e8-4d5d-bc39-e042fcbe7dcc.dat,/galaxy/server/database/objects/8/e/e/dataset_8ee42ca2-e2e8-4d5d-bc39-e042fcbe7dcc.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/7/c/f/dataset_7cffc0fd-458b-4f22-91ec-eb29a2153323.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/f/4/d/dataset_f4dc4218-b413-4b58-8104-ace06ccdfa49.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/5/f/c/dataset_5fc22d1d-8252-45ff-aed5-c3fb6a9adbfd.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 501, \"src\": \"hda\"}, {\"id\": 501, \"src\": \"hda\"}, {\"id\": 501, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 502, \"src\": \"hda\"}, {\"id\": 502, \"src\": \"hda\"}, {\"id\": 502, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 503, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 504, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 500, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "3221b8131c8a6141", "src": "hda", "uuid": "4bd53277-2e7e-4034-aaa9-aa1edb7731d4"}, "refGenomeSource|sjdbGTFfile": {"id": "bf6c76f1ff603108", "src": "hda", "uuid": "0463c9df-f1f4-49d9-93a7-ac9a48dbd13f"}, "sc|input_types|input1": {"id": "e449a8d99af939ae", "src": "hda", "uuid": "8ee42ca2-e2e8-4d5d-bc39-e042fcbe7dcc"}, "sc|input_types|input11": {"id": "e449a8d99af939ae", "src": "hda", "uuid": "8ee42ca2-e2e8-4d5d-bc39-e042fcbe7dcc"}, "sc|input_types|input12": {"id": "e449a8d99af939ae", "src": "hda", "uuid": "8ee42ca2-e2e8-4d5d-bc39-e042fcbe7dcc"}, "sc|input_types|input13": {"id": "e449a8d99af939ae", "src": "hda", "uuid": "8ee42ca2-e2e8-4d5d-bc39-e042fcbe7dcc"}, "sc|input_types|input2": {"id": "c194149afb97df95", "src": "hda", "uuid": "9bc6d07f-df58-431c-ba91-88eadaa59f86"}, "sc|input_types|input21": {"id": "c194149afb97df95", "src": "hda", "uuid": "9bc6d07f-df58-431c-ba91-88eadaa59f86"}, "sc|input_types|input22": {"id": "c194149afb97df95", "src": "hda", "uuid": "9bc6d07f-df58-431c-ba91-88eadaa59f86"}, "sc|input_types|input23": {"id": "c194149afb97df95", "src": "hda", "uuid": "9bc6d07f-df58-431c-ba91-88eadaa59f86"}, "sc|soloCBwhitelist": {"id": "554b64171cc0f692", "src": "hda", "uuid": "7cffc0fd-458b-4f22-91ec-eb29a2153323"}}, "outputs": {"output_stats": {"id": "4a9029e4c11ae8e1", "src": "hda", "uuid": "f4dc4218-b413-4b58-8104-ace06ccdfa49"}, "output_BAM": {"id": "656d60fdf66fb7c9", "src": "hda", "uuid": "5fc22d1d-8252-45ff-aed5-c3fb6a9adbfd"}, "output_matrix_filtered": {"id": "d3beb0c2b95d9a46", "src": "hda", "uuid": "5e9e335c-cedb-465e-a63a-066a40b2b0ff"}, "output_barcodes_filtered": {"id": "af9f3be5828bf2df", "src": "hda", "uuid": "17ebe37a-813b-481a-9ed9-975544055f4f"}, "output_genes_filtered": {"id": "3fad829963c645b4", "src": "hda", "uuid": "a690207a-525d-4a94-b31b-69e2b1c01235"}, "output_log": {"id": "3a5930b1286378e3", "src": "hda", "uuid": "4a5a2b91-1434-4452-821a-2017f676fb3b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 08:00:34 ..... started STAR run\nSep 16 08:00:34 ... starting to generate Genome files\nSep 16 08:00:34 ..... processing annotations GTF\nSep 16 08:00:34 ... starting to sort Suffix Array. This may take a long time...\nSep 16 08:00:34 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 08:00:34 ... loading chunks from disk, packing SA...\nSep 16 08:00:34 ... finished generating suffix array\nSep 16 08:00:34 ... generating Suffix Array index\nSep 16 08:00:34 ... completed Suffix Array index\nSep 16 08:00:34 ..... inserting junctions into the genome indices\nSep 16 08:00:34 ... writing Genome to disk ...\nSep 16 08:00:34 ... writing Suffix Array to disk ...\nSep 16 08:00:34 ... writing SAindex to disk\nSep 16 08:00:34 ..... finished successfully\nSep 16 08:00:34 ..... started STAR run\nSep 16 08:00:34 ..... loading genome\nSep 16 08:00:34 ..... started mapping\nSep 16 08:01:27 ..... finished mapping\nSep 16 08:01:27 ..... started Solo counting\nSep 16 08:01:27 ..... finished Solo counting\nSep 16 08:01:27 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 08:00:34 ..... started STAR run\nSep 16 08:00:34 ... starting to generate Genome files\nSep 16 08:00:34 ..... processing annotations GTF\nSep 16 08:00:34 ... starting to sort Suffix Array. This may take a long time...\nSep 16 08:00:34 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 08:00:34 ... loading chunks from disk, packing SA...\nSep 16 08:00:34 ... finished generating suffix array\nSep 16 08:00:34 ... generating Suffix Array index\nSep 16 08:00:34 ... completed Suffix Array index\nSep 16 08:00:34 ..... inserting junctions into the genome indices\nSep 16 08:00:34 ... writing Genome to disk ...\nSep 16 08:00:34 ... writing Suffix Array to disk ...\nSep 16 08:00:34 ... writing SAindex to disk\nSep 16 08:00:34 ..... finished successfully\nSep 16 08:00:34 ..... started STAR run\nSep 16 08:00:34 ..... loading genome\nSep 16 08:00:34 ..... started mapping\nSep 16 08:01:27 ..... finished mapping\nSep 16 08:01:27 ..... started Solo counting\nSep 16 08:01:27 ..... finished Solo counting\nSep 16 08:01:27 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "53 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "53.0000000"}, {"title": "Job End Time", "value": "2024-09-16 08:01:27", "plugin": "core", "name": "end_epoch", "raw_value": "1726473687.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 08:00:34", "plugin": "core", "name": "start_epoch", "raw_value": "1726473634.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-3", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 3, "time_seconds": 80.64870142936707, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "c152ee5cd18b8d0c"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "7d5bf1aaeb903e30"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input_collection": {"src": "hdca", "id": "4d0eee68b569719d"}, "sc|input_types|use": "list_paired", "sc|soloCBwhitelist": {"src": "hda", "id": "b0f75238de75eeb2"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "343d95083d04acac", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:51:13.196915", "update_time": "2024-09-16T07:51:57.497286", "galaxy_version": "24.1", "external_id": "gxy-lcwzn", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/8/3/1/dataset_831ee482-a6ae-45bf-9f9d-03ed97892437.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/5/7/0/dataset_570cde1e-7e72-42dc-95c6-704c41faa25b.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/c/1/3/dataset_c1381f77-0ea6-4d18-bc45-bebba3cad306.dat /galaxy/server/database/objects/9/8/1/dataset_981129a7-75dd-42a2-ad7e-a18746a41f46.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/6/4/b/dataset_64b7b79d-37f1-47e5-9c77-c6b435214d13.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/1/7/0/dataset_170e724b-d5c2-45aa-b232-317bcb32fb65.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/f/9/1/dataset_f914daa1-1190-4ec3-9256-50649c005890.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 1, \"input_collection\": {\"values\": [{\"id\": 25, \"src\": \"hdca\"}]}, \"use\": \"list_paired\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 409, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 410, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 406, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "c0111d399374bacc", "src": "hda", "uuid": "831ee482-a6ae-45bf-9f9d-03ed97892437"}, "refGenomeSource|sjdbGTFfile": {"id": "7d5bf1aaeb903e30", "src": "hda", "uuid": "570cde1e-7e72-42dc-95c6-704c41faa25b"}, "sc|input_types|input_collection1": {"id": "3d4cc0249ab603da", "src": "hda", "uuid": "981129a7-75dd-42a2-ad7e-a18746a41f46"}, "sc|input_types|input_collection2": {"id": "f1247bf47d27c9bc", "src": "hda", "uuid": "c1381f77-0ea6-4d18-bc45-bebba3cad306"}, "sc|soloCBwhitelist": {"id": "b0f75238de75eeb2", "src": "hda", "uuid": "64b7b79d-37f1-47e5-9c77-c6b435214d13"}}, "outputs": {"output_stats": {"id": "991aed5004407662", "src": "hda", "uuid": "170e724b-d5c2-45aa-b232-317bcb32fb65"}, "output_BAM": {"id": "7fc6e65c88ac903e", "src": "hda", "uuid": "f914daa1-1190-4ec3-9256-50649c005890"}, "output_matrix_filtered": {"id": "719afdaeb4fae2ad", "src": "hda", "uuid": "7acaf305-a530-4171-9636-3ba1b81dfdbe"}, "output_barcodes_filtered": {"id": "b442c37203c26a2b", "src": "hda", "uuid": "9a46a8ef-2c85-4a3a-a676-8248e3031993"}, "output_genes_filtered": {"id": "629dddee0412fd5e", "src": "hda", "uuid": "5866e7c7-ea20-481a-bf75-7f14b0b7ec93"}, "output_log": {"id": "5ef38e4a4328e2ad", "src": "hda", "uuid": "8f88b969-f2b3-4453-aa15-04275559d3ce"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:51:27 ..... started STAR run\nSep 16 07:51:27 ... starting to generate Genome files\nSep 16 07:51:27 ..... processing annotations GTF\nSep 16 07:51:27 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:51:27 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:51:28 ... loading chunks from disk, packing SA...\nSep 16 07:51:28 ... finished generating suffix array\nSep 16 07:51:28 ... generating Suffix Array index\nSep 16 07:51:28 ... completed Suffix Array index\nSep 16 07:51:28 ..... inserting junctions into the genome indices\nSep 16 07:51:28 ... writing Genome to disk ...\nSep 16 07:51:28 ... writing Suffix Array to disk ...\nSep 16 07:51:28 ... writing SAindex to disk\nSep 16 07:51:28 ..... finished successfully\nSep 16 07:51:28 ..... started STAR run\nSep 16 07:51:28 ..... loading genome\nSep 16 07:51:28 ..... started mapping\nSep 16 07:51:45 ..... finished mapping\nSep 16 07:51:46 ..... started Solo counting\nSep 16 07:51:46 ..... finished Solo counting\nSep 16 07:51:46 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 07:51:27 ..... started STAR run\nSep 16 07:51:27 ... starting to generate Genome files\nSep 16 07:51:27 ..... processing annotations GTF\nSep 16 07:51:27 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:51:27 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:51:28 ... loading chunks from disk, packing SA...\nSep 16 07:51:28 ... finished generating suffix array\nSep 16 07:51:28 ... generating Suffix Array index\nSep 16 07:51:28 ... completed Suffix Array index\nSep 16 07:51:28 ..... inserting junctions into the genome indices\nSep 16 07:51:28 ... writing Genome to disk ...\nSep 16 07:51:28 ... writing Suffix Array to disk ...\nSep 16 07:51:28 ... writing SAindex to disk\nSep 16 07:51:28 ..... finished successfully\nSep 16 07:51:28 ..... started STAR run\nSep 16 07:51:28 ..... loading genome\nSep 16 07:51:28 ..... started mapping\nSep 16 07:51:45 ..... finished mapping\nSep 16 07:51:46 ..... started Solo counting\nSep 16 07:51:46 ..... finished Solo counting\nSep 16 07:51:46 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "19 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "19.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:51:46", "plugin": "core", "name": "end_epoch", "raw_value": "1726473106.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:51:27", "plugin": "core", "name": "start_epoch", "raw_value": "1726473087.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-3", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 3, "time_seconds": 27.94780135154724, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-4", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 4, "time_seconds": 82.24241924285889, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "ec62e7e28d395c5c"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "dacd3c546e319c71"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "2e896f484692406d"}, "sc|input_types|input2": {"src": "hda", "id": "dda6fce212f8ea12"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "c4783d6471e6bf5b"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM_multi_pseudocounts", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "GeneFull", "solo|soloUMIfiltering": "MultiGeneUMI", "solo|filter|n_cells": "5", "solo|filter|filter_type": "topcells", "solo|soloOutFormatFeaturesGeneField3": "Dummy Text"}, "job": {"model_class": "Job", "id": "1da91e7b79dd3a85", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:52:35.533748", "update_time": "2024-09-16T07:53:19.746413", "galaxy_version": "24.1", "external_id": "gxy-p6kxz", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/a/4/c/dataset_a4cd5724-10a7-4382-8d4f-bfcb3d408daa.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/9/4/f/dataset_94fe5536-1390-4f7c-8a43-a27af60d3581.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/5/4/c/dataset_54c30ddf-1fea-4da6-a934-35bfdf3c3732.dat /galaxy/server/database/objects/5/0/d/dataset_50dd5a15-ae79-4136-b4e2-66b0bad1eac6.dat --soloCBmatchWLtype 1MM_multi_pseudocounts  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/d/b/c/dataset_dbc062b7-fba7-4064-a28c-3376329fa603.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering MultiGeneUMI --soloStrand Forward --soloFeatures GeneFull --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter TopCells 5  --soloOutFormatFeaturesGeneField3 'Dummy Text' && mv Solo.out/GeneFull Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/c/9/3/dataset_c935e470-2f96-4b18-809e-909ff10b9cf1.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/1/a/3/dataset_1a352111-00d6-41f9-9425-59b37dca0688.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 2, \"filter_type\": \"topcells\", \"n_cells\": \"5\"}, \"soloFeatures\": \"GeneFull\", \"soloOutFormatFeaturesGeneField3\": \"Dummy Text\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"MultiGeneUMI\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 419, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 420, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi_pseudocounts\", \"soloCBwhitelist\": {\"values\": [{\"id\": 421, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 422, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 418, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "8de90438c36e1a61", "src": "hda", "uuid": "a4cd5724-10a7-4382-8d4f-bfcb3d408daa"}, "refGenomeSource|sjdbGTFfile": {"id": "dacd3c546e319c71", "src": "hda", "uuid": "94fe5536-1390-4f7c-8a43-a27af60d3581"}, "sc|input_types|input1": {"id": "2e896f484692406d", "src": "hda", "uuid": "50dd5a15-ae79-4136-b4e2-66b0bad1eac6"}, "sc|input_types|input11": {"id": "2e896f484692406d", "src": "hda", "uuid": "50dd5a15-ae79-4136-b4e2-66b0bad1eac6"}, "sc|input_types|input2": {"id": "dda6fce212f8ea12", "src": "hda", "uuid": "54c30ddf-1fea-4da6-a934-35bfdf3c3732"}, "sc|input_types|input21": {"id": "dda6fce212f8ea12", "src": "hda", "uuid": "54c30ddf-1fea-4da6-a934-35bfdf3c3732"}, "sc|soloCBwhitelist": {"id": "c4783d6471e6bf5b", "src": "hda", "uuid": "dbc062b7-fba7-4064-a28c-3376329fa603"}}, "outputs": {"output_stats": {"id": "2d3527057e1f9ead", "src": "hda", "uuid": "c935e470-2f96-4b18-809e-909ff10b9cf1"}, "output_BAM": {"id": "5ac53bf18af34af9", "src": "hda", "uuid": "1a352111-00d6-41f9-9425-59b37dca0688"}, "output_matrixGeneFull_filtered": {"id": "375d754cd20ab33e", "src": "hda", "uuid": "110778fb-6a55-4f5f-b9f9-e61fefbc6588"}, "output_barcodes_filtered": {"id": "9e92c62540e4e544", "src": "hda", "uuid": "36af1fb1-bf7c-4b14-b643-4e371819129e"}, "output_genes_filtered": {"id": "28331fbe5ccf2687", "src": "hda", "uuid": "c50bae5b-7594-4aa2-bc6a-ff4525f2d57f"}, "output_log": {"id": "724c88b905709080", "src": "hda", "uuid": "1e4c01ec-7a88-4263-958c-bc22d70facac"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:52:50 ..... started STAR run\nSep 16 07:52:50 ... starting to generate Genome files\nSep 16 07:52:50 ..... processing annotations GTF\nSep 16 07:52:50 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:52:50 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:52:50 ... loading chunks from disk, packing SA...\nSep 16 07:52:50 ... finished generating suffix array\nSep 16 07:52:50 ... generating Suffix Array index\nSep 16 07:52:50 ... completed Suffix Array index\nSep 16 07:52:50 ..... inserting junctions into the genome indices\nSep 16 07:52:50 ... writing Genome to disk ...\nSep 16 07:52:50 ... writing Suffix Array to disk ...\nSep 16 07:52:50 ... writing SAindex to disk\nSep 16 07:52:50 ..... finished successfully\nSep 16 07:52:50 ..... started STAR run\nSep 16 07:52:50 ..... loading genome\nSep 16 07:52:50 ..... started mapping\nSep 16 07:53:08 ..... finished mapping\nSep 16 07:53:08 ..... started Solo counting\nSep 16 07:53:08 ..... finished Solo counting\nSep 16 07:53:08 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 07:52:50 ..... started STAR run\nSep 16 07:52:50 ... starting to generate Genome files\nSep 16 07:52:50 ..... processing annotations GTF\nSep 16 07:52:50 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:52:50 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:52:50 ... loading chunks from disk, packing SA...\nSep 16 07:52:50 ... finished generating suffix array\nSep 16 07:52:50 ... generating Suffix Array index\nSep 16 07:52:50 ... completed Suffix Array index\nSep 16 07:52:50 ..... inserting junctions into the genome indices\nSep 16 07:52:50 ... writing Genome to disk ...\nSep 16 07:52:50 ... writing Suffix Array to disk ...\nSep 16 07:52:50 ... writing SAindex to disk\nSep 16 07:52:50 ..... finished successfully\nSep 16 07:52:50 ..... started STAR run\nSep 16 07:52:50 ..... loading genome\nSep 16 07:52:50 ..... started mapping\nSep 16 07:53:08 ..... finished mapping\nSep 16 07:53:08 ..... started Solo counting\nSep 16 07:53:08 ..... finished Solo counting\nSep 16 07:53:08 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:53:08", "plugin": "core", "name": "end_epoch", "raw_value": "1726473188.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:52:50", "plugin": "core", "name": "start_epoch", "raw_value": "1726473170.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-4", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 4, "time_seconds": 3318.210367202759, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "b05bb67eebbcff96"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "1f145a30fb9f1b39"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "d041217931def956"}, "sc|input_types|input2": {"src": "hda", "id": "796c4482f766abbf"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "9a73c2ab9fb30698"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM_multi_pseudocounts", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "GeneFull", "solo|soloUMIfiltering": "MultiGeneUMI", "solo|filter|n_cells": "5", "solo|filter|filter_type": "topcells", "solo|soloOutFormatFeaturesGeneField3": "Dummy Text"}, "job": {"model_class": "Job", "id": "3110ad9ea2f6184b", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "paused", "exit_code": null, "create_time": "2024-09-16T08:02:42.264632", "update_time": "2024-09-16T08:02:46.850047", "galaxy_version": "24.1", "external_id": null, "handler": null, "job_runner_name": null, "command_line": null, "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 2, \"filter_type\": \"topcells\", \"n_cells\": \"5\"}, \"soloFeatures\": \"GeneFull\", \"soloOutFormatFeaturesGeneField3\": \"Dummy Text\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"MultiGeneUMI\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 518, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 519, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi_pseudocounts\", \"soloCBwhitelist\": {\"values\": [{\"id\": 520, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 521, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 517, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "c6bc71a208e62702", "src": "hda", "uuid": "e0a92d8b-28b3-4b01-8e74-cd1f91219fa7"}, "refGenomeSource|sjdbGTFfile": {"id": "1f145a30fb9f1b39", "src": "hda", "uuid": "1fbe3f83-f21b-4024-857a-f799bef61e36"}, "sc|input_types|input1": {"id": "d041217931def956", "src": "hda", "uuid": "edbb4fee-1a0f-4543-852d-a9e5c7914f6d"}, "sc|input_types|input11": {"id": "d041217931def956", "src": "hda", "uuid": "edbb4fee-1a0f-4543-852d-a9e5c7914f6d"}, "sc|input_types|input2": {"id": "796c4482f766abbf", "src": "hda", "uuid": "c69c5e33-9952-424d-a948-49782b0a0888"}, "sc|input_types|input21": {"id": "796c4482f766abbf", "src": "hda", "uuid": "c69c5e33-9952-424d-a948-49782b0a0888"}, "sc|soloCBwhitelist": {"id": "9a73c2ab9fb30698", "src": "hda", "uuid": "139fe718-dd6f-45c5-b5ed-1feaf8911465"}}, "outputs": {"output_stats": {"id": "d81083dc57144716", "src": "hda", "uuid": "f9c8ad14-cf97-4c27-b369-d2a883693ab3"}, "output_BAM": {"id": "6ddf22f7c9f8f5b2", "src": "hda", "uuid": "0caf19a8-737b-4380-945b-59ba5d824c78"}, "output_matrixGeneFull_filtered": {"id": "98a1013273000e0b", "src": "hda", "uuid": "912c1fc0-3d48-4a70-b41a-96cf993d7805"}, "output_barcodes_filtered": {"id": "f5d754bfb27440df", "src": "hda", "uuid": "26be3776-75ce-4bbf-afb8-4a49e3df3f3b"}, "output_genes_filtered": {"id": "c0a01c405e18310e", "src": "hda", "uuid": "d20dd324-8bca-483f-a92b-0c5cb94fb23d"}, "output_log": {"id": "7884c6cdcc17a2c1", "src": "hda", "uuid": "96d6fd3e-e0cb-4ac0-9132-708210f00eba"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": null, "tool_stderr": null, "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Timed out after 600.25 seconds waiting on tool test run.", "Timed out after 600.25 seconds waiting on tool test run.", "Timed out after 600.25 seconds waiting on tool test run.", "Timed out after 600.25 seconds waiting on tool test run."], "status": "failure"}}, {"id": "rna_starsolo/2.7.8a-5", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 5, "time_seconds": 81.0445499420166, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "c76d56270e1f30e7"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "38c1b93ef1ff3b20"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "ec884f5d7b0ed303"}, "sc|input_types|input2": {"src": "hda", "id": "21ece6359a34f2aa"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "3b42cae4a51fac75"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|nExpectedCells": "5", "solo|filter|maxPercentile": "0.99", "solo|filter|maxMinRatio": "10", "solo|filter|indMin": "45000", "solo|filter|indMax": "90000", "solo|filter|umiMin": "500", "solo|filter|umiMinFracMedian": "0.01", "solo|filter|candMaxN": "20000", "solo|filter|FDR": "0.01", "solo|filter|simN": "10000", "solo|filter|filter_type": "emptydrops"}, "job": {"model_class": "Job", "id": "b443b727d8806906", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:53:55.464136", "update_time": "2024-09-16T07:54:40.004075", "galaxy_version": "24.1", "external_id": "gxy-v4rk4", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/3/d/5/dataset_3d5179b4-c897-4d18-8f85-9f2cb206909c.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/9/e/8/dataset_9e84d1f3-192d-4ca0-9b28-38e25678782e.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/1/8/d/dataset_18d34a1c-3441-4660-ac50-0b699a6dd879.dat /galaxy/server/database/objects/3/2/2/dataset_32242e65-7b44-46a1-a6c5-242a279f0230.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/4/d/9/dataset_4d970d6b-89bb-449a-b132-1ce526b53ffb.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter EmptyDrops_CR 5 0.99 10.0 45000 90000 500 0.01 20000 0.01 10000  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/e/9/6/dataset_e962b831-1b57-4bfe-a528-7ea7df4a3ca2.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/9/5/4/dataset_954ec390-692a-450d-85a1-a59cc9b121fd.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"FDR\": \"0.01\", \"__current_case__\": 1, \"candMaxN\": \"20000\", \"filter_type\": \"emptydrops\", \"indMax\": \"90000\", \"indMin\": \"45000\", \"maxMinRatio\": \"10.0\", \"maxPercentile\": \"0.99\", \"nExpectedCells\": \"5\", \"simN\": \"10000\", \"umiMin\": \"500\", \"umiMinFracMedian\": \"0.01\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 431, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 432, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 433, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 434, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 430, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "a875f1f539203db6", "src": "hda", "uuid": "3d5179b4-c897-4d18-8f85-9f2cb206909c"}, "refGenomeSource|sjdbGTFfile": {"id": "38c1b93ef1ff3b20", "src": "hda", "uuid": "9e84d1f3-192d-4ca0-9b28-38e25678782e"}, "sc|input_types|input1": {"id": "ec884f5d7b0ed303", "src": "hda", "uuid": "32242e65-7b44-46a1-a6c5-242a279f0230"}, "sc|input_types|input11": {"id": "ec884f5d7b0ed303", "src": "hda", "uuid": "32242e65-7b44-46a1-a6c5-242a279f0230"}, "sc|input_types|input2": {"id": "21ece6359a34f2aa", "src": "hda", "uuid": "18d34a1c-3441-4660-ac50-0b699a6dd879"}, "sc|input_types|input21": {"id": "21ece6359a34f2aa", "src": "hda", "uuid": "18d34a1c-3441-4660-ac50-0b699a6dd879"}, "sc|soloCBwhitelist": {"id": "3b42cae4a51fac75", "src": "hda", "uuid": "4d970d6b-89bb-449a-b132-1ce526b53ffb"}}, "outputs": {"output_stats": {"id": "770873ef68f0b103", "src": "hda", "uuid": "e962b831-1b57-4bfe-a528-7ea7df4a3ca2"}, "output_BAM": {"id": "bc8469d541700ad0", "src": "hda", "uuid": "954ec390-692a-450d-85a1-a59cc9b121fd"}, "output_matrix_filtered": {"id": "d3f4d6a9e67ed235", "src": "hda", "uuid": "e1928ec6-8155-41e7-a6cf-6b31fd3497d5"}, "output_barcodes_filtered": {"id": "a0975dc41075bd8a", "src": "hda", "uuid": "6016e7b0-f4f4-4c41-8045-2f163858ae9f"}, "output_genes_filtered": {"id": "b3c855d709bc9b87", "src": "hda", "uuid": "d1eb20c7-9fd9-4137-a768-ddc3f77ddaad"}, "output_log": {"id": "bb909cbfd6b8980f", "src": "hda", "uuid": "5473a5d1-269a-44d2-916d-3f8e769d05ea"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:54:10 ..... started STAR run\nSep 16 07:54:10 ... starting to generate Genome files\nSep 16 07:54:10 ..... processing annotations GTF\nSep 16 07:54:10 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:54:10 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:54:10 ... loading chunks from disk, packing SA...\nSep 16 07:54:10 ... finished generating suffix array\nSep 16 07:54:10 ... generating Suffix Array index\nSep 16 07:54:10 ... completed Suffix Array index\nSep 16 07:54:10 ..... inserting junctions into the genome indices\nSep 16 07:54:10 ... writing Genome to disk ...\nSep 16 07:54:10 ... writing Suffix Array to disk ...\nSep 16 07:54:10 ... writing SAindex to disk\nSep 16 07:54:10 ..... finished successfully\nSep 16 07:54:10 ..... started STAR run\nSep 16 07:54:10 ..... loading genome\nSep 16 07:54:10 ..... started mapping\nSep 16 07:54:28 ..... finished mapping\nSep 16 07:54:28 ..... started Solo counting\nSep 16 07:54:28 ..... finished Solo counting\nSep 16 07:54:28 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 07:54:10 ..... started STAR run\nSep 16 07:54:10 ... starting to generate Genome files\nSep 16 07:54:10 ..... processing annotations GTF\nSep 16 07:54:10 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:54:10 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:54:10 ... loading chunks from disk, packing SA...\nSep 16 07:54:10 ... finished generating suffix array\nSep 16 07:54:10 ... generating Suffix Array index\nSep 16 07:54:10 ... completed Suffix Array index\nSep 16 07:54:10 ..... inserting junctions into the genome indices\nSep 16 07:54:10 ... writing Genome to disk ...\nSep 16 07:54:10 ... writing Suffix Array to disk ...\nSep 16 07:54:10 ... writing SAindex to disk\nSep 16 07:54:10 ..... finished successfully\nSep 16 07:54:10 ..... started STAR run\nSep 16 07:54:10 ..... loading genome\nSep 16 07:54:10 ..... started mapping\nSep 16 07:54:28 ..... finished mapping\nSep 16 07:54:28 ..... started Solo counting\nSep 16 07:54:28 ..... finished Solo counting\nSep 16 07:54:28 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:54:28", "plugin": "core", "name": "end_epoch", "raw_value": "1726473268.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:54:10", "plugin": "core", "name": "start_epoch", "raw_value": "1726473250.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-5", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 5, "time_seconds": 108.9787437915802, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "aebcca32a7ff67cc"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "b70f6c5929663548"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "b6fd99de188f0f2b"}, "sc|input_types|input2": {"src": "hda", "id": "091cabd4ae20d460"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "c773d30c2421c96f"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|nExpectedCells": "5", "solo|filter|maxPercentile": "0.99", "solo|filter|maxMinRatio": "10", "solo|filter|indMin": "45000", "solo|filter|indMax": "90000", "solo|filter|umiMin": "500", "solo|filter|umiMinFracMedian": "0.01", "solo|filter|candMaxN": "20000", "solo|filter|FDR": "0.01", "solo|filter|simN": "10000", "solo|filter|filter_type": "emptydrops"}, "job": {"model_class": "Job", "id": "d7a991d4a1f0d194", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T08:58:04.513466", "update_time": "2024-09-16T08:59:11.897232", "galaxy_version": "24.1", "external_id": "gxy-5jlh6", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/5/4/8/dataset_5486e50f-67d1-46ac-bdb2-59e99865fdd3.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/8/b/8/dataset_8b8c1554-061c-4d34-a5a8-9e427e52e18f.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/8/5/e/dataset_85eaa7be-b44a-42e5-9925-a544b45a625a.dat /galaxy/server/database/objects/a/5/3/dataset_a53d342c-301b-4108-a03a-c00a6cf7dab5.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/0/2/4/dataset_0241acbd-e494-4cff-bbff-dd56f268e164.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter EmptyDrops_CR 5 0.99 10.0 45000 90000 500 0.01 20000 0.01 10000  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/8/b/6/dataset_8b6ebcac-8bb3-4a2f-8ba0-13050161db6c.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/a/2/8/dataset_a289e69c-e067-45a3-9b71-3e28d4f72e45.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"FDR\": \"0.01\", \"__current_case__\": 1, \"candMaxN\": \"20000\", \"filter_type\": \"emptydrops\", \"indMax\": \"90000\", \"indMin\": \"45000\", \"maxMinRatio\": \"10.0\", \"maxPercentile\": \"0.99\", \"nExpectedCells\": \"5\", \"simN\": \"10000\", \"umiMin\": \"500\", \"umiMinFracMedian\": \"0.01\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 530, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 531, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 532, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 533, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 529, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "6cd646b9c08435e0", "src": "hda", "uuid": "5486e50f-67d1-46ac-bdb2-59e99865fdd3"}, "refGenomeSource|sjdbGTFfile": {"id": "b70f6c5929663548", "src": "hda", "uuid": "8b8c1554-061c-4d34-a5a8-9e427e52e18f"}, "sc|input_types|input1": {"id": "b6fd99de188f0f2b", "src": "hda", "uuid": "a53d342c-301b-4108-a03a-c00a6cf7dab5"}, "sc|input_types|input11": {"id": "b6fd99de188f0f2b", "src": "hda", "uuid": "a53d342c-301b-4108-a03a-c00a6cf7dab5"}, "sc|input_types|input2": {"id": "091cabd4ae20d460", "src": "hda", "uuid": "85eaa7be-b44a-42e5-9925-a544b45a625a"}, "sc|input_types|input21": {"id": "091cabd4ae20d460", "src": "hda", "uuid": "85eaa7be-b44a-42e5-9925-a544b45a625a"}, "sc|soloCBwhitelist": {"id": "c773d30c2421c96f", "src": "hda", "uuid": "0241acbd-e494-4cff-bbff-dd56f268e164"}}, "outputs": {"output_stats": {"id": "4a1464801180b5ad", "src": "hda", "uuid": "8b6ebcac-8bb3-4a2f-8ba0-13050161db6c"}, "output_BAM": {"id": "2e7d4a3022775ace", "src": "hda", "uuid": "a289e69c-e067-45a3-9b71-3e28d4f72e45"}, "output_matrix_filtered": {"id": "3f59148794af6c4f", "src": "hda", "uuid": "0f7729cb-85f5-4025-a1a7-974c692025f0"}, "output_barcodes_filtered": {"id": "760ed8cbfc016a55", "src": "hda", "uuid": "1aa63585-168d-4709-a708-0e6da3a0d24d"}, "output_genes_filtered": {"id": "bb08c5559fb3d91c", "src": "hda", "uuid": "eca58d97-9d7a-49f1-b27d-6c8dfcf1349f"}, "output_log": {"id": "4795bfe5bd00e68f", "src": "hda", "uuid": "7c399db3-1e7b-4e19-bbdb-fbe49b56d0e8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 08:58:42 ..... started STAR run\nSep 16 08:58:42 ... starting to generate Genome files\nSep 16 08:58:42 ..... processing annotations GTF\nSep 16 08:58:42 ... starting to sort Suffix Array. This may take a long time...\nSep 16 08:58:42 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 08:58:42 ... loading chunks from disk, packing SA...\nSep 16 08:58:42 ... finished generating suffix array\nSep 16 08:58:42 ... generating Suffix Array index\nSep 16 08:58:42 ... completed Suffix Array index\nSep 16 08:58:42 ..... inserting junctions into the genome indices\nSep 16 08:58:42 ... writing Genome to disk ...\nSep 16 08:58:42 ... writing Suffix Array to disk ...\nSep 16 08:58:42 ... writing SAindex to disk\nSep 16 08:58:42 ..... finished successfully\nSep 16 08:58:42 ..... started STAR run\nSep 16 08:58:42 ..... loading genome\nSep 16 08:58:42 ..... started mapping\nSep 16 08:59:00 ..... finished mapping\nSep 16 08:59:00 ..... started Solo counting\nSep 16 08:59:00 ..... finished Solo counting\nSep 16 08:59:00 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 08:58:42 ..... started STAR run\nSep 16 08:58:42 ... starting to generate Genome files\nSep 16 08:58:42 ..... processing annotations GTF\nSep 16 08:58:42 ... starting to sort Suffix Array. This may take a long time...\nSep 16 08:58:42 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 08:58:42 ... loading chunks from disk, packing SA...\nSep 16 08:58:42 ... finished generating suffix array\nSep 16 08:58:42 ... generating Suffix Array index\nSep 16 08:58:42 ... completed Suffix Array index\nSep 16 08:58:42 ..... inserting junctions into the genome indices\nSep 16 08:58:42 ... writing Genome to disk ...\nSep 16 08:58:42 ... writing Suffix Array to disk ...\nSep 16 08:58:42 ... writing SAindex to disk\nSep 16 08:58:42 ..... finished successfully\nSep 16 08:58:42 ..... started STAR run\nSep 16 08:58:42 ..... loading genome\nSep 16 08:58:42 ..... started mapping\nSep 16 08:59:00 ..... finished mapping\nSep 16 08:59:00 ..... started Solo counting\nSep 16 08:59:00 ..... finished Solo counting\nSep 16 08:59:00 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2024-09-16 08:59:00", "plugin": "core", "name": "end_epoch", "raw_value": "1726477140.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 08:58:42", "plugin": "core", "name": "start_epoch", "raw_value": "1726477122.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-6", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 6, "time_seconds": 66.50609517097473, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "7cf12f7d842f5234"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "016f09e2ea0c0d49"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "9995a5309b7d7852"}, "sc|input_types|input2": {"src": "hda", "id": "16bd6da9296e55f2"}, "sc|input_types|use": "repeat", "sc|cb_whitelists_0|whitelist_file": {"src": "hda", "id": "5eaf8ad8b5377176"}, "sc|cb_whitelists_0|cb_start_anchor": "0", "sc|cb_whitelists_0|cb_start_anchor_pos": "0", "sc|cb_whitelists_0|cb_end_anchor": "2", "sc|cb_whitelists_0|cb_end_anchor_pos": "-1", "sc|cb_whitelists_1|whitelist_file": {"src": "hda", "id": "df2f45509f6c5630"}, "sc|cb_whitelists_1|cb_start_anchor": "3", "sc|cb_whitelists_1|cb_start_anchor_pos": "1", "sc|cb_whitelists_1|cb_end_anchor": "3", "sc|cb_whitelists_1|cb_end_anchor_pos": "8", "sc|umi_start_anchor": "3", "sc|umi_start_anchor_pos": "9", "sc|umi_end_anchor": "3", "sc|umi_end_anchor_pos": "14", "sc|soloAdapterSequence": "GAGTGATTGCTTGTGACGCCTT", "sc|soloAdapterMismatchesNmax": "1", "sc|clipAdapterType": "CellRanger4", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM", "sc|solo_type": "CB_UMI_Complex"}, "job": {"model_class": "Job", "id": "845906f305432183", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T07:55:19.356782", "update_time": "2024-09-16T07:55:47.130142", "galaxy_version": "24.1", "external_id": "gxy-t2wpd", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/7/9/3/dataset_793d8be7-05f9-49f9-8f89-389344182e9b.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/9/8/9/dataset_98999e99-ccda-4e1a-9c2d-268e97dcb0fb.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Complex   --readFilesIn /galaxy/server/database/objects/c/3/e/dataset_c3e57035-8377-4f99-9cc2-dd745cc85d31.dat /galaxy/server/database/objects/e/3/9/dataset_e39a02ae-cdfe-4785-8606-f8501dd94772.dat --soloCBmatchWLtype 1MM  --readFilesCommand zcat   --soloCBwhitelist /galaxy/server/database/objects/d/8/4/dataset_d84aaad2-7f41-4288-9976-eea73f3430dd.dat /galaxy/server/database/objects/c/9/a/dataset_c9a667d9-046b-49ab-995a-9451e218896e.dat --soloCBposition 0_0_2_-1 3_1_3_8 --soloUMIposition 3_9_3_14 --soloAdapterSequence 'GAGTGATTGCTTGTGACGCCTT' --soloAdapterMismatchesNmax 1 --clipAdapterType CellRanger4   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/a/d/9/dataset_ad9dc90a-fa16-4590-b99a-9dc061508e3c.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/b/c/1/dataset_bc184975-d07e-46ac-bad8-205946f1c1c3.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 1, \"cb_whitelists\": [{\"__index__\": 0, \"cb_end_anchor\": \"2\", \"cb_end_anchor_pos\": \"-1\", \"cb_start_anchor\": \"0\", \"cb_start_anchor_pos\": \"0\", \"whitelist_file\": {\"values\": [{\"id\": 445, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"cb_end_anchor\": \"3\", \"cb_end_anchor_pos\": \"8\", \"cb_start_anchor\": \"3\", \"cb_start_anchor_pos\": \"1\", \"whitelist_file\": {\"values\": [{\"id\": 446, \"src\": \"hda\"}]}}], \"clipAdapterType\": \"CellRanger4\", \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 443, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 444, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"GAGTGATTGCTTGTGACGCCTT\", \"soloCBmatchWLtype\": \"1MM\", \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Complex\", \"umi_end_anchor\": \"3\", \"umi_end_anchor_pos\": \"14\", \"umi_start_anchor\": \"3\", \"umi_start_anchor_pos\": \"9\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 447, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 442, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "5df8484bbb755316", "src": "hda", "uuid": "793d8be7-05f9-49f9-8f89-389344182e9b"}, "refGenomeSource|sjdbGTFfile": {"id": "016f09e2ea0c0d49", "src": "hda", "uuid": "98999e99-ccda-4e1a-9c2d-268e97dcb0fb"}, "sc|input_types|input1": {"id": "9995a5309b7d7852", "src": "hda", "uuid": "e39a02ae-cdfe-4785-8606-f8501dd94772"}, "sc|input_types|input11": {"id": "9995a5309b7d7852", "src": "hda", "uuid": "e39a02ae-cdfe-4785-8606-f8501dd94772"}, "sc|input_types|input2": {"id": "16bd6da9296e55f2", "src": "hda", "uuid": "c3e57035-8377-4f99-9cc2-dd745cc85d31"}, "sc|input_types|input21": {"id": "16bd6da9296e55f2", "src": "hda", "uuid": "c3e57035-8377-4f99-9cc2-dd745cc85d31"}, "sc|cb_whitelists_0|whitelist_file": {"id": "5eaf8ad8b5377176", "src": "hda", "uuid": "d84aaad2-7f41-4288-9976-eea73f3430dd"}, "sc|cb_whitelists_1|whitelist_file": {"id": "df2f45509f6c5630", "src": "hda", "uuid": "c9a667d9-046b-49ab-995a-9451e218896e"}}, "outputs": {"output_stats": {"id": "22e73df47326ae06", "src": "hda", "uuid": "ad9dc90a-fa16-4590-b99a-9dc061508e3c"}, "output_BAM": {"id": "a747d05eae5f0171", "src": "hda", "uuid": "bc184975-d07e-46ac-bad8-205946f1c1c3"}, "output_matrix_filtered": {"id": "22fb040256f21bcf", "src": "hda", "uuid": "ca3aacbd-6a63-479a-986a-047c09a290ab"}, "output_barcodes_filtered": {"id": "ae4c5bcd70be6813", "src": "hda", "uuid": "d89b9357-72d0-48c9-abcb-da154e547c26"}, "output_genes_filtered": {"id": "c451d8760b966c28", "src": "hda", "uuid": "5f358245-9b7d-44c5-bdff-fc177dfb7f58"}, "output_log": {"id": "3c84b4a855402092", "src": "hda", "uuid": "37a0f6d5-dc79-4050-8288-c67f5e541ec5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 07:55:33 ..... started STAR run\nSep 16 07:55:33 ... starting to generate Genome files\nSep 16 07:55:33 ..... processing annotations GTF\nSep 16 07:55:33 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:55:33 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:55:34 ... loading chunks from disk, packing SA...\nSep 16 07:55:34 ... finished generating suffix array\nSep 16 07:55:34 ... generating Suffix Array index\nSep 16 07:55:34 ... completed Suffix Array index\nSep 16 07:55:34 ..... inserting junctions into the genome indices\nSep 16 07:55:34 ... writing Genome to disk ...\nSep 16 07:55:34 ... writing Suffix Array to disk ...\nSep 16 07:55:34 ... writing SAindex to disk\nSep 16 07:55:34 ..... finished successfully\nSep 16 07:55:34 ..... started STAR run\nSep 16 07:55:34 ..... loading genome\nSep 16 07:55:34 ..... started mapping\nSep 16 07:55:35 ..... finished mapping\nSep 16 07:55:35 ..... started Solo counting\nSep 16 07:55:35 ..... finished Solo counting\nSep 16 07:55:35 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 07:55:33 ..... started STAR run\nSep 16 07:55:33 ... starting to generate Genome files\nSep 16 07:55:33 ..... processing annotations GTF\nSep 16 07:55:33 ... starting to sort Suffix Array. This may take a long time...\nSep 16 07:55:33 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 07:55:34 ... loading chunks from disk, packing SA...\nSep 16 07:55:34 ... finished generating suffix array\nSep 16 07:55:34 ... generating Suffix Array index\nSep 16 07:55:34 ... completed Suffix Array index\nSep 16 07:55:34 ..... inserting junctions into the genome indices\nSep 16 07:55:34 ... writing Genome to disk ...\nSep 16 07:55:34 ... writing Suffix Array to disk ...\nSep 16 07:55:34 ... writing SAindex to disk\nSep 16 07:55:34 ..... finished successfully\nSep 16 07:55:34 ..... started STAR run\nSep 16 07:55:34 ..... loading genome\nSep 16 07:55:34 ..... started mapping\nSep 16 07:55:35 ..... finished mapping\nSep 16 07:55:35 ..... started Solo counting\nSep 16 07:55:35 ..... finished Solo counting\nSep 16 07:55:35 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 07:55:35", "plugin": "core", "name": "end_epoch", "raw_value": "1726473335.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 07:55:33", "plugin": "core", "name": "start_epoch", "raw_value": "1726473333.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-6", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 6, "time_seconds": 66.86065864562988, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "416c7189e081583e"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "7ed3036ab1ceeed2"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "318c23a1b69b180c"}, "sc|input_types|input2": {"src": "hda", "id": "a313dc25513ee63f"}, "sc|input_types|use": "repeat", "sc|cb_whitelists_0|whitelist_file": {"src": "hda", "id": "9ac0bfdcf17bcbbc"}, "sc|cb_whitelists_0|cb_start_anchor": "0", "sc|cb_whitelists_0|cb_start_anchor_pos": "0", "sc|cb_whitelists_0|cb_end_anchor": "2", "sc|cb_whitelists_0|cb_end_anchor_pos": "-1", "sc|cb_whitelists_1|whitelist_file": {"src": "hda", "id": "db0cda88718fc920"}, "sc|cb_whitelists_1|cb_start_anchor": "3", "sc|cb_whitelists_1|cb_start_anchor_pos": "1", "sc|cb_whitelists_1|cb_end_anchor": "3", "sc|cb_whitelists_1|cb_end_anchor_pos": "8", "sc|umi_start_anchor": "3", "sc|umi_start_anchor_pos": "9", "sc|umi_end_anchor": "3", "sc|umi_end_anchor_pos": "14", "sc|soloAdapterSequence": "GAGTGATTGCTTGTGACGCCTT", "sc|soloAdapterMismatchesNmax": "1", "sc|clipAdapterType": "CellRanger4", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM", "sc|solo_type": "CB_UMI_Complex"}, "job": {"model_class": "Job", "id": "55e3ea4afef1c12e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T08:59:51.217163", "update_time": "2024-09-16T09:00:19.448412", "galaxy_version": "24.1", "external_id": "gxy-whsmx", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/3/e/3/dataset_3e33619e-3450-47e4-a1d1-b897d6f56f67.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/a/d/6/dataset_ad6e9ad3-fa08-4fee-a91c-e5fbf80a2aa6.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Complex   --readFilesIn /galaxy/server/database/objects/a/1/0/dataset_a1011124-db9a-49be-977b-211d5fc375a1.dat /galaxy/server/database/objects/e/1/4/dataset_e14c61b4-c1a4-44e5-8503-19e4416aa593.dat --soloCBmatchWLtype 1MM  --readFilesCommand zcat   --soloCBwhitelist /galaxy/server/database/objects/c/e/6/dataset_ce60b37e-ecee-4f1f-b291-819ade4963f3.dat /galaxy/server/database/objects/d/0/1/dataset_d0125b02-be96-425c-ad45-4c3b61f82da7.dat --soloCBposition 0_0_2_-1 3_1_3_8 --soloUMIposition 3_9_3_14 --soloAdapterSequence 'GAGTGATTGCTTGTGACGCCTT' --soloAdapterMismatchesNmax 1 --clipAdapterType CellRanger4   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/5/0/b/dataset_50bc9dc9-6a03-45bf-afd5-85b590d235ff.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/f/8/9/dataset_f8940e54-6508-4169-bbb1-b92569bb3567.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 1, \"cb_whitelists\": [{\"__index__\": 0, \"cb_end_anchor\": \"2\", \"cb_end_anchor_pos\": \"-1\", \"cb_start_anchor\": \"0\", \"cb_start_anchor_pos\": \"0\", \"whitelist_file\": {\"values\": [{\"id\": 544, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"cb_end_anchor\": \"3\", \"cb_end_anchor_pos\": \"8\", \"cb_start_anchor\": \"3\", \"cb_start_anchor_pos\": \"1\", \"whitelist_file\": {\"values\": [{\"id\": 545, \"src\": \"hda\"}]}}], \"clipAdapterType\": \"CellRanger4\", \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 542, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 543, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"GAGTGATTGCTTGTGACGCCTT\", \"soloCBmatchWLtype\": \"1MM\", \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Complex\", \"umi_end_anchor\": \"3\", \"umi_end_anchor_pos\": \"14\", \"umi_start_anchor\": \"3\", \"umi_start_anchor_pos\": \"9\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 546, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 541, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "7b5fd406f45b32c7", "src": "hda", "uuid": "3e33619e-3450-47e4-a1d1-b897d6f56f67"}, "refGenomeSource|sjdbGTFfile": {"id": "7ed3036ab1ceeed2", "src": "hda", "uuid": "ad6e9ad3-fa08-4fee-a91c-e5fbf80a2aa6"}, "sc|input_types|input1": {"id": "318c23a1b69b180c", "src": "hda", "uuid": "e14c61b4-c1a4-44e5-8503-19e4416aa593"}, "sc|input_types|input11": {"id": "318c23a1b69b180c", "src": "hda", "uuid": "e14c61b4-c1a4-44e5-8503-19e4416aa593"}, "sc|input_types|input2": {"id": "a313dc25513ee63f", "src": "hda", "uuid": "a1011124-db9a-49be-977b-211d5fc375a1"}, "sc|input_types|input21": {"id": "a313dc25513ee63f", "src": "hda", "uuid": "a1011124-db9a-49be-977b-211d5fc375a1"}, "sc|cb_whitelists_0|whitelist_file": {"id": "9ac0bfdcf17bcbbc", "src": "hda", "uuid": "ce60b37e-ecee-4f1f-b291-819ade4963f3"}, "sc|cb_whitelists_1|whitelist_file": {"id": "db0cda88718fc920", "src": "hda", "uuid": "d0125b02-be96-425c-ad45-4c3b61f82da7"}}, "outputs": {"output_stats": {"id": "c657e52130e39228", "src": "hda", "uuid": "50bc9dc9-6a03-45bf-afd5-85b590d235ff"}, "output_BAM": {"id": "8b9a9ba1d6d78b38", "src": "hda", "uuid": "f8940e54-6508-4169-bbb1-b92569bb3567"}, "output_matrix_filtered": {"id": "d6e5f51453fbfdf2", "src": "hda", "uuid": "2c1deddd-e5a6-4e19-81ba-7b97e813cfa8"}, "output_barcodes_filtered": {"id": "7f560199c1609fb8", "src": "hda", "uuid": "454330d7-5098-47ff-a978-3ff447bc6993"}, "output_genes_filtered": {"id": "8123197656ab26ef", "src": "hda", "uuid": "b712d8a8-2a72-4406-9015-c53e0d3b46c5"}, "output_log": {"id": "a78a30e148017186", "src": "hda", "uuid": "49f154d3-fc8c-4de6-936a-3aa040e07bf2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Sep 16 09:00:06 ..... started STAR run\nSep 16 09:00:06 ... starting to generate Genome files\nSep 16 09:00:06 ..... processing annotations GTF\nSep 16 09:00:06 ... starting to sort Suffix Array. This may take a long time...\nSep 16 09:00:06 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 09:00:06 ... loading chunks from disk, packing SA...\nSep 16 09:00:06 ... finished generating suffix array\nSep 16 09:00:06 ... generating Suffix Array index\nSep 16 09:00:06 ... completed Suffix Array index\nSep 16 09:00:06 ..... inserting junctions into the genome indices\nSep 16 09:00:06 ... writing Genome to disk ...\nSep 16 09:00:06 ... writing Suffix Array to disk ...\nSep 16 09:00:06 ... writing SAindex to disk\nSep 16 09:00:06 ..... finished successfully\nSep 16 09:00:07 ..... started STAR run\nSep 16 09:00:07 ..... loading genome\nSep 16 09:00:07 ..... started mapping\nSep 16 09:00:07 ..... finished mapping\nSep 16 09:00:07 ..... started Solo counting\nSep 16 09:00:08 ..... finished Solo counting\nSep 16 09:00:08 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Sep 16 09:00:06 ..... started STAR run\nSep 16 09:00:06 ... starting to generate Genome files\nSep 16 09:00:06 ..... processing annotations GTF\nSep 16 09:00:06 ... starting to sort Suffix Array. This may take a long time...\nSep 16 09:00:06 ... sorting Suffix Array chunks and saving them to disk...\nSep 16 09:00:06 ... loading chunks from disk, packing SA...\nSep 16 09:00:06 ... finished generating suffix array\nSep 16 09:00:06 ... generating Suffix Array index\nSep 16 09:00:06 ... completed Suffix Array index\nSep 16 09:00:06 ..... inserting junctions into the genome indices\nSep 16 09:00:06 ... writing Genome to disk ...\nSep 16 09:00:06 ... writing Suffix Array to disk ...\nSep 16 09:00:06 ... writing SAindex to disk\nSep 16 09:00:06 ..... finished successfully\nSep 16 09:00:07 ..... started STAR run\nSep 16 09:00:07 ..... loading genome\nSep 16 09:00:07 ..... started mapping\nSep 16 09:00:07 ..... finished mapping\nSep 16 09:00:07 ..... started Solo counting\nSep 16 09:00:08 ..... finished Solo counting\nSep 16 09:00:08 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:00:08", "plugin": "core", "name": "end_epoch", "raw_value": "1726477208.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:00:06", "plugin": "core", "name": "start_epoch", "raw_value": "1726477206.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-7", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 7, "time_seconds": 12.500593900680542, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-7", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 7, "time_seconds": 83.89668726921082, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "samtools_split/1.9-0", "has_data": true, "data": {"tool_id": "samtools_split", "tool_version": "1.9", "test_index": 0, "time_seconds": 34.96559119224548, "inputs": {"input_bam": {"src": "hda", "id": "f6b8283798f8341d"}}, "job": {"model_class": "Job", "id": "db29933c92086197", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_split/samtools_split/1.9", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:17:27.517069", "update_time": "2024-09-16T09:17:42.770353", "galaxy_version": "24.1", "external_id": "gxy-5hw7v", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&  samtools split -f 'Read_Group_%!.bam' -u '/galaxy/server/database/objects/d/6/8/dataset_d6813421-1410-4363-abf3-16c4365f96ea.dat' -@ $addthreads '/galaxy/server/database/objects/5/8/1/dataset_58125939-7555-4ed1-aa38-df23fe13dd52.dat'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": null}, "inputs": {"input_bam": {"id": "f6b8283798f8341d", "src": "hda", "uuid": "58125939-7555-4ed1-aa38-df23fe13dd52"}}, "outputs": {"__new_primary_file_output|Mouse__": {"id": "64ba67dfaa4cf3bc", "src": "hda", "uuid": "505f5bc3-389b-4037-8589-4ad43c31b9b6"}, "__new_primary_file_output|Human__": {"id": "f20efbf5fedd864a", "src": "hda", "uuid": "8302709d-1d43-424b-b6be-ada61a0765a1"}, "__new_primary_file_output|Elephant__": {"id": "d8157fef7da7ce70", "src": "hda", "uuid": "d2e111c6-56d9-41c1-964b-31ba83b73f5a"}, "output": {"id": "62edc5431a051ad0", "src": "hda", "uuid": "d6813421-1410-4363-abf3-16c4365f96ea"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:17:31", "plugin": "core", "name": "end_epoch", "raw_value": "1726478251.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:17:31", "plugin": "core", "name": "start_epoch", "raw_value": "1726478251.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Primary output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_5mqoybed.sam v. /tmp/history_bam_converted_to_sam_xbge8eup.sam )\n--- local_file\n+++ history_data\n@@ -6,11 +6,11 @@\n @PG\tID:bowtie2-D76CD0\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-58C6F748\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-D76CD0-8B37AF2\tPN:bowtie2\tVN:2.1.0\n-@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/6/8/dataset_d6813421-1410-4363-abf3-16c4365f96ea.dat -@ 0 /galaxy/server/database/objects/5/8/1/dataset_58125939-7555-4ed1-aa38-df23fe13dd52.dat\n+@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/6/8/dataset_d6813421-1410-4363-abf3-16c4365f96ea.dat -@ 0 /galaxy/server/database/objects/5/8/1/dataset_58125939-7555-4ed1-aa38-df23fe13dd52.dat\n+@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/6/8/dataset_d6813421-1410-4363-abf3-16c4365f96ea.dat -@ 0 /galaxy/server/database/objects/5/8/1/dataset_58125939-7555-4ed1-aa38-df23fe13dd52.dat\n+@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/6/8/dataset_d6813421-1410-4363-abf3-16c4365f96ea.dat -@ 0 /galaxy/server/database/objects/5/8/1/dataset_58125939-7555-4ed1-aa38-df23fe13dd52.dat\n+@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/6/8/dataset_d6813421-1410-4363-abf3-16c4365f96ea.dat -@ 0 /galaxy/server/database/objects/5/8/1/dataset_58125939-7555-4ed1-aa38-df23fe13dd52.dat\n phiX174_9_527_1:0:0_0:0:0_54/1\t0\tphiX174\t9\t42\t70M\t*\t0\t0\tTCGCTTCCATGACGCAGAAGTTAACACTTTCGGATATTTCTGATGAGTCGAAAAATTATCTTGATCAAGC\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:65A4\tYT:Z:UU\tRG:Z:Mouse\n phiX174_71_657_0:0:0_1:0:0_72/1\t0\tphiX174\t71\t42\t70M\t*\t0\t0\tGATAAAGCAGGAATTACTACTGCTTGTTTACGAATTAAATCGAAGTGGACTGCTGGCGGAAAATGAGAAA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:0\tXN:i:0\tXM:i:0\tXO:i:0\tXG:i:0\tNM:i:0\tMD:Z:70\tYT:Z:UU\tRG:Z:Mouse\n phiX174_99_617_1:0:0_2:1:0_a2/1\t0\tphiX174\t99\t42\t70M\t*\t0\t0\tTACGAATTAAATCGAAGTGGACTGCTTGCGGAAAATGAGAAAATTCGACCTATCCTTGCGCAGCTCGAGA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:26G43\tYT:Z:UU\tRG:Z:Mouse\n"], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-0", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 0, "time_seconds": 10.137726783752441, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "samtools_view/1.9+galaxy3-1", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 1, "status": "skip"}}, {"id": "samtools_view/1.9+galaxy3-10", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 10, "time_seconds": 33.356924295425415, "inputs": {"input": {"src": "hda", "id": "3f2ef8c3fe5a0a97"}, "mode|output_options|output_format|with_header": true, "mode|output_options|output_format|oformat": "sam"}, "job": {"model_class": "Job", "id": "016f09e2ea0c0d49", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:08:19.465673", "update_time": "2024-09-16T09:08:32.156644", "galaxy_version": "24.1", "external_id": "gxy-7mfz4", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/9/b/4/dataset_9b4990ee-006e-4577-8ff6-a093f418965f.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/c/b/2/metadata_cb2d48ab-b754-4c16-bd81-c8a5bc6c99ea.dat' infile.bai &&        samtools view -@ $addthreads      -h  -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": true}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "3f2ef8c3fe5a0a97", "src": "hda", "uuid": "9b4990ee-006e-4577-8ff6-a093f418965f"}}, "outputs": {"outputsam": {"id": "f159d5de2d0bf190", "src": "hda", "uuid": "05b99b46-74b3-441c-aaee-ba1535908604"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:08:20", "plugin": "core", "name": "end_epoch", "raw_value": "1726477700.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:08:20", "plugin": "core", "name": "start_epoch", "raw_value": "1726477700.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out1.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-11", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 11, "time_seconds": 32.280072927474976, "inputs": {"input": {"src": "hda", "id": "3d6f4dbcf4512239"}, "mode|output_options|output_format|oformat": "sam", "mode|outtype": "header"}, "job": {"model_class": "Job", "id": "16bd6da9296e55f2", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:08:51.819529", "update_time": "2024-09-16T09:09:04.536708", "galaxy_version": "24.1", "external_id": "gxy-bhlxb", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/1/9/5/dataset_19505558-a0a0-41c8-aefd-c85ffc22d927.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/e/e/6/metadata_ee6abf91-964c-4881-a010-dfebc10fb4d0.dat' infile.bai &&    samtools view -H  -o outfile   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 2, \"output_options\": {\"__current_case__\": 0, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\"}, \"reads_report_type\": \"\"}, \"outtype\": \"header\"}"}, "inputs": {"input": {"id": "3d6f4dbcf4512239", "src": "hda", "uuid": "19505558-a0a0-41c8-aefd-c85ffc22d927"}}, "outputs": {"outputsam": {"id": "6a62944670ef7985", "src": "hda", "uuid": "5a6071a7-3409-4325-a581-fd021a81fd43"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:08:53", "plugin": "core", "name": "end_epoch", "raw_value": "1726477733.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:08:53", "plugin": "core", "name": "start_epoch", "raw_value": "1726477733.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out2.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-12", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 12, "time_seconds": 31.922574996948242, "inputs": {"input": {"src": "hda", "id": "fcd46ec4eabea197"}, "mode|output_options|output_format|with_header": false, "mode|output_options|output_format|oformat": "sam"}, "job": {"model_class": "Job", "id": "df2f45509f6c5630", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:09:24.143465", "update_time": "2024-09-16T09:09:36.740318", "galaxy_version": "24.1", "external_id": "gxy-wxs5g", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/e/7/5/dataset_e758a715-62bd-4703-9e04-70b46a54bb64.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/d/2/0/metadata_d205b55d-c78b-4f1e-bd01-549913115438.dat' infile.bai &&        samtools view -@ $addthreads        -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": false}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "fcd46ec4eabea197", "src": "hda", "uuid": "e758a715-62bd-4703-9e04-70b46a54bb64"}}, "outputs": {"outputsam": {"id": "ffd838eda7d4b377", "src": "hda", "uuid": "424142c8-ee39-4622-ace1-b814895cd52f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:09:26", "plugin": "core", "name": "end_epoch", "raw_value": "1726477766.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:09:26", "plugin": "core", "name": "start_epoch", "raw_value": "1726477766.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out3.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-13", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 13, "time_seconds": 33.55539274215698, "inputs": {"input": {"src": "hda", "id": "32fd41d99626f627"}, "mode|output_options|reads_report_type": "count", "mode|outtype": "all_reads"}, "job": {"model_class": "Job", "id": "3c84b4a855402092", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:09:57.442393", "update_time": "2024-09-16T09:10:10.428400", "galaxy_version": "24.1", "external_id": "gxy-cb4zr", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/e/7/b/dataset_e7b2bfae-7b23-4a92-a304-e770dbaa5aee.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/2/0/e/metadata_20e96eb9-ed5b-47b5-aefd-b79e12df17d5.dat' infile.bai &&        samtools view -@ $addthreads -c     -o outfile     infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 1, \"reads_report_type\": \"count\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "32fd41d99626f627", "src": "hda", "uuid": "e7b2bfae-7b23-4a92-a304-e770dbaa5aee"}}, "outputs": {"outputcnt": {"id": "451046fdeb2b1d01", "src": "hda", "uuid": "abc8d5d7-8908-41e1-9ff7-849b8e476010"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:09:59", "plugin": "core", "name": "end_epoch", "raw_value": "1726477799.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:09:59", "plugin": "core", "name": "start_epoch", "raw_value": "1726477799.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputcnt: Test output file (test_counts.tab) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-14", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 14, "time_seconds": 34.34035015106201, "inputs": {"input": {"src": "hda", "id": "d1c9b7f9b9964692"}, "mode|filter_config|cond_region|select_region": "no", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "49f173a9894210d0"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "22fb040256f21bcf", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:10:31.171247", "update_time": "2024-09-16T09:10:44.589301", "galaxy_version": "24.1", "external_id": "gxy-9dwm2", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/e/5/3/dataset_e53b6e22-fad8-4053-81c2-ec3377a23148.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/a/8/0/dataset_a80377b7-a3ff-46b4-9c39-90b3e7fc1a01.dat' infile &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 607, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "d1c9b7f9b9964692", "src": "hda", "uuid": "a80377b7-a3ff-46b4-9c39-90b3e7fc1a01"}, "addref_cond|ref": {"id": "49f173a9894210d0", "src": "hda", "uuid": "e53b6e22-fad8-4053-81c2-ec3377a23148"}}, "outputs": {"outputsam": {"id": "4f86a4f609e9cf58", "src": "hda", "uuid": "c6e3ac28-4dc7-4463-b32e-9ccc40b84c61"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:10:33", "plugin": "core", "name": "end_epoch", "raw_value": "1726477833.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:10:32", "plugin": "core", "name": "start_epoch", "raw_value": "1726477832.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-15", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 15, "time_seconds": 30.889390468597412, "inputs": {"input": {"src": "hda", "id": "5c96a6a06c14462f"}, "mode|filter_config|cond_region|select_region": "no", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "2fac1f644dcd9f65"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "ef9505bd8c1cad6f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:11:04.552279", "update_time": "2024-09-16T09:11:15.795638", "galaxy_version": "24.1", "external_id": "gxy-j96vp", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/c/1/1/dataset_c1156355-abe9-48ce-a530-317726e52994.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/4/c/f/dataset_4cf32926-54ff-42b4-8f08-32d788816271.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/6/7/8/metadata_67845379-89b5-4ec5-bfcd-6d3d951b8474.dat' infile.bai &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 610, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "5c96a6a06c14462f", "src": "hda", "uuid": "4cf32926-54ff-42b4-8f08-32d788816271"}, "addref_cond|ref": {"id": "2fac1f644dcd9f65", "src": "hda", "uuid": "c1156355-abe9-48ce-a530-317726e52994"}}, "outputs": {"outputsam": {"id": "ba0cb221fccd55ac", "src": "hda", "uuid": "fa698bff-8d1a-47e8-970e-a57c75f120b2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:11:05", "plugin": "core", "name": "end_epoch", "raw_value": "1726477865.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:11:05", "plugin": "core", "name": "start_epoch", "raw_value": "1726477865.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-16", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 16, "status": "skip"}}, {"id": "samtools_view/1.9+galaxy3-17", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 17, "time_seconds": 32.50620412826538, "inputs": {"input": {"src": "hda", "id": "7438c5fdaae1b8f1"}, "mode|filter_config|cond_region|regions": "CHROMOSOME_I", "mode|filter_config|cond_region|select_region": "text", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "9ca8c55694b0564b"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "d99c64448adf0330", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:11:36.258824", "update_time": "2024-09-16T09:11:48.491766", "galaxy_version": "24.1", "external_id": "gxy-k977t", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/f/5/9/dataset_f59f4663-ca01-4f2e-8ba7-c1c8b82df28b.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/3/9/6/dataset_3960fd0d-ec26-4cd5-ab50-1e4ece603a1d.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/a/f/c/metadata_afc66cd2-d091-40fa-aec3-308c48632045.dat' infile.bai &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile  'CHROMOSOME_I'", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 613, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "7438c5fdaae1b8f1", "src": "hda", "uuid": "3960fd0d-ec26-4cd5-ab50-1e4ece603a1d"}, "addref_cond|ref": {"id": "9ca8c55694b0564b", "src": "hda", "uuid": "f59f4663-ca01-4f2e-8ba7-c1c8b82df28b"}}, "outputs": {"outputsam": {"id": "9d2c642309d32133", "src": "hda", "uuid": "d3523d28-8b4f-4bfa-807c-dc212e9b607c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:11:37", "plugin": "core", "name": "end_epoch", "raw_value": "1726477897.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:11:37", "plugin": "core", "name": "start_epoch", "raw_value": "1726477897.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-18", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 18, "time_seconds": 32.50780010223389, "inputs": {"input": {"src": "hda", "id": "e6923222c5f5b480"}, "mode|filter_config|cond_region|regions": "CHROMOSOME_I", "mode|filter_config|cond_region|select_region": "text", "mode|output_options|output_format|oformat": "bam", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "d2d7bc28d12470a3"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "200b311ac993038b", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:12:08.127172", "update_time": "2024-09-16T09:12:20.751011", "galaxy_version": "24.1", "external_id": "gxy-5bb22", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/f/f/4/dataset_ff4e61e6-9367-47f4-8be3-c11b9a9f5d27.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/b/e/8/dataset_be8193f8-b268-445f-8893-a0c0d670fba0.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/6/8/7/metadata_687353d3-1ee9-4c86-97a1-6278bb0eb10e.dat' infile.crai &&         samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile  'CHROMOSOME_I'  && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"cram\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 616, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "e6923222c5f5b480", "src": "hda", "uuid": "be8193f8-b268-445f-8893-a0c0d670fba0"}, "addref_cond|ref": {"id": "d2d7bc28d12470a3", "src": "hda", "uuid": "ff4e61e6-9367-47f4-8be3-c11b9a9f5d27"}}, "outputs": {"outputsam": {"id": "670198646447f97f", "src": "hda", "uuid": "332a15f3-82f7-4836-a81f-453ed83452d0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:12:09", "plugin": "core", "name": "end_epoch", "raw_value": "1726477929.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:12:09", "plugin": "core", "name": "start_epoch", "raw_value": "1726477929.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-19", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 19, "time_seconds": 36.21579432487488, "inputs": {"input": {"src": "hda", "id": "292da3c3c822dc51"}, "mode|filter_config|cond_region|bedfile": {"src": "hda", "id": "a6823cd6e95cd03a"}, "mode|filter_config|cond_region|select_region": "bed", "mode|output_options|output_format|oformat": "bam", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "2d4a5462e4c93367"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "2824301e7dae9c50", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:12:44.801397", "update_time": "2024-09-16T09:12:57.077434", "galaxy_version": "24.1", "external_id": "gxy-8szds", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/6/d/6/dataset_6d62f469-90bd-4a40-a2cf-4cf6d1c825a4.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/0/a/7/dataset_0a7edb44-573b-4604-b993-0aae752176aa.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/c/d/9/metadata_cd96394b-b9e8-4fc7-8e28-31877a908b70.dat' infile.crai &&         samtools view -@ $addthreads -b  -L '/galaxy/server/database/objects/3/e/c/dataset_3ec96622-b921-4975-8684-63a147e84743.dat'    -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"cram\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 620, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 2, \"bedfile\": {\"values\": [{\"id\": 619, \"src\": \"hda\"}]}, \"select_region\": \"bed\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "292da3c3c822dc51", "src": "hda", "uuid": "0a7edb44-573b-4604-b993-0aae752176aa"}, "mode|filter_config|cond_region|bedfile": {"id": "a6823cd6e95cd03a", "src": "hda", "uuid": "3ec96622-b921-4975-8684-63a147e84743"}, "addref_cond|ref": {"id": "2d4a5462e4c93367", "src": "hda", "uuid": "6d62f469-90bd-4a40-a2cf-4cf6d1c825a4"}}, "outputs": {"outputsam": {"id": "1e03474e07ea0a7f", "src": "hda", "uuid": "4502024b-98cb-49a4-bb26-ba912f072856"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:12:46", "plugin": "core", "name": "end_epoch", "raw_value": "1726477966.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:12:46", "plugin": "core", "name": "start_epoch", "raw_value": "1726477966.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-2", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 2, "time_seconds": 34.94592881202698, "inputs": {"input": {"src": "hda", "id": "e08b965d633ef09d"}, "addref_cond|ref": {"src": "hda", "id": "b7a6907441a5023a"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "375d754cd20ab33e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:04:24.571033", "update_time": "2024-09-16T09:04:39.694157", "galaxy_version": "24.1", "external_id": "gxy-s6rdt", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/5/1/5/dataset_51506ac9-ac78-4699-9457-37e2515b0b5a.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/9/c/f/dataset_9cf6ff02-ecee-4262-bf2e-b5d09dbdf20a.dat' infile &&        samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"equCab2\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/equCab2.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 582, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "e08b965d633ef09d", "src": "hda", "uuid": "9cf6ff02-ecee-4262-bf2e-b5d09dbdf20a"}, "addref_cond|ref": {"id": "b7a6907441a5023a", "src": "hda", "uuid": "51506ac9-ac78-4699-9457-37e2515b0b5a"}}, "outputs": {"outputsam": {"id": "f3b55f60dfd2b0d2", "src": "hda", "uuid": "469130d4-27f5-4de3-83bd-69955de4fbb2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:04:29", "plugin": "core", "name": "end_epoch", "raw_value": "1726477469.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:04:28", "plugin": "core", "name": "start_epoch", "raw_value": "1726477468.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (sam_to_bam_out3.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-20", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 20, "time_seconds": 10.583502531051636, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "samtools_view/1.9+galaxy3-21", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 21, "time_seconds": 29.56628680229187, "inputs": {"input": {"src": "hda", "id": "1beb2f4dc9a4d426"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "b5a9317cea8dec35", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:13:25.808471", "update_time": "2024-09-16T09:13:37.629306", "galaxy_version": "24.1", "external_id": "gxy-8hn6p", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/3/8/dataset_338b4536-2f29-41b9-911b-42742a006083.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/20; print(frac > 1 ? 20575+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "1beb2f4dc9a4d426", "src": "hda", "uuid": "338b4536-2f29-41b9-911b-42742a006083"}}, "outputs": {"outputsam": {"id": "14ad90c9d7e7a006", "src": "hda", "uuid": "0c1c3f9d-97d7-430e-afea-b9012215ba9d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:13:27", "plugin": "core", "name": "end_epoch", "raw_value": "1726478007.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:13:27", "plugin": "core", "name": "start_epoch", "raw_value": "1726478007.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-22", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 22, "time_seconds": 29.86423659324646, "inputs": {"input": {"src": "hda", "id": "a829a000d56bdb1b"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "fa9444c18192995e", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:13:55.750220", "update_time": "2024-09-16T09:14:07.491508", "galaxy_version": "24.1", "external_id": "gxy-kvfxl", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/4/3/dataset_3432ebf3-e4b1-4d5b-b7dd-e521543e0f47.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/20; print(frac > 1 ? 3874+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "a829a000d56bdb1b", "src": "hda", "uuid": "3432ebf3-e4b1-4d5b-b7dd-e521543e0f47"}}, "outputs": {"outputsam": {"id": "967e4856195462e9", "src": "hda", "uuid": "4774e4ec-3643-4a0d-ac73-a4eb9a342573"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:13:57", "plugin": "core", "name": "end_epoch", "raw_value": "1726478037.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:13:57", "plugin": "core", "name": "start_epoch", "raw_value": "1726478037.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (no_reads.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-23", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 23, "time_seconds": 32.37930917739868, "inputs": {"input": {"src": "hda", "id": "8c436b502d83e282"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "6c7285449093217f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:14:26.946799", "update_time": "2024-09-16T09:14:39.870753", "galaxy_version": "24.1", "external_id": "gxy-dkv6f", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/d/c/8/dataset_dc8321da-23e2-401c-b422-c3a1f9f8a580.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/1/3/0/metadata_130fd30e-d0fe-47ce-a56f-743ee1d6396b.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/20; print(frac > 1 ? 30834+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "8c436b502d83e282", "src": "hda", "uuid": "dc8321da-23e2-401c-b422-c3a1f9f8a580"}}, "outputs": {"outputsam": {"id": "4bee3cc8a74962ae", "src": "hda", "uuid": "7a3517de-d0b6-4551-9d78-cc63119605e0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:14:28", "plugin": "core", "name": "end_epoch", "raw_value": "1726478068.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:14:28", "plugin": "core", "name": "start_epoch", "raw_value": "1726478068.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (no_reads.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-24", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 24, "time_seconds": 30.02047562599182, "inputs": {"input": {"src": "hda", "id": "9a6f4a10be91cec4"}, "mode|subsample_config|subsampling_mode|target": "2", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "3982e85c4c9a2e88", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:14:58.014276", "update_time": "2024-09-16T09:15:10.097090", "galaxy_version": "24.1", "external_id": "gxy-tfp89", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/9/1/6/dataset_916f96a1-305a-4d30-8704-86a07c568b0a.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/2; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"2\"}}}"}, "inputs": {"input": {"id": "9a6f4a10be91cec4", "src": "hda", "uuid": "916f96a1-305a-4d30-8704-86a07c568b0a"}}, "outputs": {"outputsam": {"id": "4eaee7fe17e7746e", "src": "hda", "uuid": "d1c81b0f-d986-4616-bae8-30f19b1472ff"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:14:59", "plugin": "core", "name": "end_epoch", "raw_value": "1726478099.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:14:59", "plugin": "core", "name": "start_epoch", "raw_value": "1726478099.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-25", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 25, "time_seconds": 31.44114327430725, "inputs": {"input": {"src": "hda", "id": "e53a793cc4ee92c1"}, "mode|subsample_config|subsampling_mode|target": "2", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "a0a371bc864d2b74", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:15:28.504249", "update_time": "2024-09-16T09:15:41.444343", "galaxy_version": "24.1", "external_id": "gxy-c2qgx", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/0/8/5/dataset_085d2677-d02a-434c-a21d-38a97c2dabdf.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/a/9/3/metadata_a93c2fb7-95fa-4730-9103-4de945eb7257.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/2; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"2\"}}}"}, "inputs": {"input": {"id": "e53a793cc4ee92c1", "src": "hda", "uuid": "085d2677-d02a-434c-a21d-38a97c2dabdf"}}, "outputs": {"outputsam": {"id": "92ac11c6f9a119e5", "src": "hda", "uuid": "e916bb6b-0cbd-4c02-bc7c-2b8fd08c8ca2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:15:30", "plugin": "core", "name": "end_epoch", "raw_value": "1726478130.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:15:30", "plugin": "core", "name": "start_epoch", "raw_value": "1726478130.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-26", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 26, "time_seconds": 23.106488943099976, "inputs": {"input": {"src": "hda", "id": "32c1314f80990d71"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "82c912f6d6b57bb7", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "error", "exit_code": null, "create_time": "2024-09-16T09:16:00.061648", "update_time": "2024-09-16T09:16:04.546184", "galaxy_version": "24.1", "external_id": "gxy-c5wwb", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/5/b/7/dataset_5b7a9e3f-7810-4219-847d-1381062d87e4.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/c/e/c/metadata_cec4139e-1452-4e98-9aca-cfc26aa0ebeb.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/20; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "32c1314f80990d71", "src": "hda", "uuid": "5b7a9e3f-7810-4219-847d-1381062d87e4"}}, "outputs": {"outputsam": {"id": "ff1ef6700bb9ab38", "src": "hda", "uuid": "965bf449-eae5-4ea2-ba7c-70626581ba8a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-27", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 27, "time_seconds": 31.110041856765747, "inputs": {"input": {"src": "hda", "id": "7c0986d1d1396ef5"}, "mode|subsample_config|subsampling_mode|factor": "5", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "fraction", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "54e3fd1d9970653c", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:16:23.237529", "update_time": "2024-09-16T09:16:35.773523", "galaxy_version": "24.1", "external_id": "gxy-tqhws", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/e/6/e/dataset_e6ed7060-a0ec-4b44-8f8a-210d2e671669.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/c/9/f/metadata_c9f81e11-7036-498f-8252-5ff79e4dbc78.dat' infile.bai &&          samtools view -@ $addthreads -b    -s 7.2   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"5.0\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "7c0986d1d1396ef5", "src": "hda", "uuid": "e6ed7060-a0ec-4b44-8f8a-210d2e671669"}}, "outputs": {"outputsam": {"id": "d1162e1ca06a7369", "src": "hda", "uuid": "2457ac3f-2f32-45aa-9a2b-0ec61b1172f0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:16:25", "plugin": "core", "name": "end_epoch", "raw_value": "1726478185.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:16:25", "plugin": "core", "name": "start_epoch", "raw_value": "1726478185.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-28", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 28, "time_seconds": 31.247087717056274, "inputs": {"input": {"src": "hda", "id": "9b32e97f97516dc4"}, "mode|subsample_config|subsampling_mode|factor": "1.25", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "fraction", "mode|output_options|output_format|oformat": "input", "mode|output_options|reads_report_type": "dropped", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "cf25d16be5c54702", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:16:55.479077", "update_time": "2024-09-16T09:17:07.208746", "galaxy_version": "24.1", "external_id": "gxy-gn457", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/e/7/dataset_3e7c6f5c-5930-4dc8-84af-3d4f6b1efc24.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/a/3/3/metadata_a3382664-4453-42e6-ae01-c9ba8742d171.dat' infile.bai &&          samtools view -@ $addthreads -b    -s 7.8   -U outfile -o /dev/null      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 1, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"dropped\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.25\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "9b32e97f97516dc4", "src": "hda", "uuid": "3e7c6f5c-5930-4dc8-84af-3d4f6b1efc24"}}, "outputs": {"outputsam": {"id": "e0380cfed6229cbb", "src": "hda", "uuid": "a855aa16-2de3-4e72-8761-b281addfce4d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:16:56", "plugin": "core", "name": "end_epoch", "raw_value": "1726478216.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:16:56", "plugin": "core", "name": "start_epoch", "raw_value": "1726478216.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-3", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 3, "time_seconds": 32.648393630981445, "inputs": {"input": {"src": "hda", "id": "c66e04a77058030b"}, "addref_cond|ref": {"src": "hda", "id": "9c7d88765e70ed10"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "c76d56270e1f30e7", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:04:59.753487", "update_time": "2024-09-16T09:05:12.167806", "galaxy_version": "24.1", "external_id": "gxy-2lnsr", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/c/3/9/dataset_c39a0941-da62-4d38-aacc-970bc8e6a225.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/3/b/0/dataset_3b0ee8a1-8cf4-4ac0-9b5d-6959b6b679d4.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/f/0/b/metadata_f0b192c8-a3cc-42da-8275-a12c7be61315.dat' infile.crai &&        samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"cram\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 585, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "c66e04a77058030b", "src": "hda", "uuid": "3b0ee8a1-8cf4-4ac0-9b5d-6959b6b679d4"}, "addref_cond|ref": {"id": "9c7d88765e70ed10", "src": "hda", "uuid": "c39a0941-da62-4d38-aacc-970bc8e6a225"}}, "outputs": {"outputsam": {"id": "bb2633b61fea16c1", "src": "hda", "uuid": "baf2e753-a49b-4ad5-9320-3ec0eedd73f8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:05:01", "plugin": "core", "name": "end_epoch", "raw_value": "1726477501.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:05:01", "plugin": "core", "name": "start_epoch", "raw_value": "1726477501.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-4", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 4, "time_seconds": 34.02327513694763, "inputs": {"input": {"src": "hda", "id": "83eba1595b57879a"}}, "job": {"model_class": "Job", "id": "ec884f5d7b0ed303", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:05:32.809927", "update_time": "2024-09-16T09:05:46.228219", "galaxy_version": "24.1", "external_id": "gxy-8b24l", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/5/6/b/dataset_56b70a89-17f0-4ede-ac0d-c8db75318fcd.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/b/6/7/metadata_b675dc65-130d-448b-bfd6-6ab2611f3199.dat' infile.bai &&        samtools view -@ $addthreads -b      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "83eba1595b57879a", "src": "hda", "uuid": "56b70a89-17f0-4ede-ac0d-c8db75318fcd"}}, "outputs": {"outputsam": {"id": "c8173bda0551e427", "src": "hda", "uuid": "1ac8d045-529c-4896-80c9-a1f04109f1b1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:05:34", "plugin": "core", "name": "end_epoch", "raw_value": "1726477534.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:05:34", "plugin": "core", "name": "start_epoch", "raw_value": "1726477534.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-5", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 5, "time_seconds": 11.680890083312988, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "samtools_view/1.9+galaxy3-6", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 6, "time_seconds": 23.332263708114624, "inputs": {"input": {"src": "hda", "id": "81b488132ca10676"}}, "job": {"model_class": "Job", "id": "a875f1f539203db6", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "error", "exit_code": null, "create_time": "2024-09-16T09:06:16.841741", "update_time": "2024-09-16T09:06:21.542892", "galaxy_version": "24.1", "external_id": "gxy-sm88g", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/b/5/5/dataset_b5556340-6da7-4837-8d0b-76a535f9018b.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"qname_sorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "81b488132ca10676", "src": "hda", "uuid": "b5556340-6da7-4837-8d0b-76a535f9018b"}}, "outputs": {"outputsam": {"id": "23eeebdf2a0bd569", "src": "hda", "uuid": "9677532f-700a-4f30-b898-13bdbb6478e3"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-7", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 7, "time_seconds": 31.404073476791382, "inputs": {"input": {"src": "hda", "id": "ed710d5f6390c98c"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "b3c855d709bc9b87", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:06:40.259462", "update_time": "2024-09-16T09:06:53.117732", "galaxy_version": "24.1", "external_id": "gxy-vp942", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/9/c/dataset_39ccb7cf-1f27-46be-9484-099fb368a4ca.dat' infile &&        samtools view -@ $addthreads -h      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"qname_sorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "ed710d5f6390c98c", "src": "hda", "uuid": "39ccb7cf-1f27-46be-9484-099fb368a4ca"}}, "outputs": {"outputsam": {"id": "cf908ef58b13c6bd", "src": "hda", "uuid": "1e0c25cf-0f88-45cc-b6c4-e1caa2e24a85"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:06:42", "plugin": "core", "name": "end_epoch", "raw_value": "1726477602.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:06:42", "plugin": "core", "name": "start_epoch", "raw_value": "1726477602.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort_read_names.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-8", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 8, "time_seconds": 32.62733483314514, "inputs": {"input": {"src": "hda", "id": "08356fa2e3706781"}}, "job": {"model_class": "Job", "id": "d3f4d6a9e67ed235", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:07:12.833109", "update_time": "2024-09-16T09:07:25.589028", "galaxy_version": "24.1", "external_id": "gxy-tqb47", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/0/6/6/dataset_06635b9b-35bf-481e-9405-4a0eb60b2d07.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"unsorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "08356fa2e3706781", "src": "hda", "uuid": "06635b9b-35bf-481e-9405-4a0eb60b2d07"}}, "outputs": {"outputsam": {"id": "d7539c27bfef4bec", "src": "hda", "uuid": "f3fe9d3d-e934-410f-a43e-f47693b5ce17"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:07:14", "plugin": "core", "name": "end_epoch", "raw_value": "1726477634.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:07:14", "plugin": "core", "name": "start_epoch", "raw_value": "1726477634.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-9", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 9, "time_seconds": 33.07295370101929, "inputs": {"input": {"src": "hda", "id": "5710a86584a7abfc"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "770873ef68f0b103", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:07:45.933913", "update_time": "2024-09-16T09:07:58.978971", "galaxy_version": "24.1", "external_id": "gxy-v6cdc", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/f/5/6/dataset_f564735a-c78d-4a43-912a-896935ac3d01.dat' infile &&        samtools view -@ $addthreads -h      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"unsorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "5710a86584a7abfc", "src": "hda", "uuid": "f564735a-c78d-4a43-912a-896935ac3d01"}}, "outputs": {"outputsam": {"id": "170b38143520e74a", "src": "hda", "uuid": "56c22c5b-2aa1-46fb-a124-7ecc735e7d8a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:07:47", "plugin": "core", "name": "end_epoch", "raw_value": "1726477667.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:07:47", "plugin": "core", "name": "start_epoch", "raw_value": "1726477667.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort_read_names.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "scanpy_plot_embed/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "scanpy_plot_embed", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.21362757682800293, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "scanpy_plot_embed/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "scanpy_plot_embed", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.20748257637023926, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "scater_normalize/1.12.2-0", "has_data": true, "data": {"tool_id": "scater_normalize", "tool_version": "1.12.2", "test_index": 0, "time_seconds": 66.12050342559814, "inputs": {"input_loom": {"src": "hda", "id": "5dfdf62b416479fe"}}, "job": {"model_class": "Job", "id": "c4c73a5c30840fa5", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/scater_normalize/1.12.2", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:18:05.915058", "update_time": "2024-09-16T09:18:51.881119", "galaxy_version": "24.1", "external_id": "gxy-4snzf", "handler": null, "job_runner_name": null, "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/946179ef029c/scater_normalize/scater-normalize.R' -i '/galaxy/server/database/objects/d/5/9/dataset_d593ae2f-5ae4-4e25-b9b7-49231320b53a.dat' -o '/galaxy/server/database/objects/a/4/a/dataset_a4a30b5a-cbbe-4f3a-b786-d6b31573a24b.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"loom\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input_loom": {"id": "5dfdf62b416479fe", "src": "hda", "uuid": "d593ae2f-5ae4-4e25-b9b7-49231320b53a"}}, "outputs": {"output_loom": {"id": "c42ad6675c8aa8d8", "src": "hda", "uuid": "a4a30b5a-cbbe-4f3a-b786-d6b31573a24b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "[1] \"Normalising....\"\n[1] \"Finished normalising\"\n[1] TRUE\n", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\nLoading required package: rhdf5\nLoading required package: rtracklayer\nLoading required package: ggplot2\n\nAttaching package: 'scater'\n\nThe following object is masked from 'package:S4Vectors':\n\n    rename\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nWarning message:\nIn .local(object, ...) : using library sizes as size factors\n", "job_stdout": "", "job_stderr": "", "stdout": "[1] \"Normalising....\"\n[1] \"Finished normalising\"\n[1] TRUE\n", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\nLoading required package: rhdf5\nLoading required package: rtracklayer\nLoading required package: ggplot2\n\nAttaching package: 'scater'\n\nThe following object is masked from 'package:S4Vectors':\n\n    rename\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nWarning message:\nIn .local(object, ...) : using library sizes as size factors\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "10 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "10.0000000"}, {"title": "Job End Time", "value": "2024-09-16 09:18:34", "plugin": "core", "name": "end_epoch", "raw_value": "1726478314.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:18:24", "plugin": "core", "name": "start_epoch", "raw_value": "1726478304.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-0", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 0, "time_seconds": 223.17897200584412, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "110a08ec2653df92"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "c93d3d487739c767"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "fda63d53a71a6a4f", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:28:06.489697", "update_time": "2024-09-16T06:31:17.599006", "galaxy_version": "24.1", "external_id": "gxy-sn727", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/6/f/0/dataset_6f0f6bc0-f878-4303-a60c-13b2479c7ecd.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/e/b/5/dataset_eb56c631-ecc1-422b-8a85-b37fb7476974.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"0\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "long": null, "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"paired_unpaired|fastq_input2": {"id": "c93d3d487739c767", "src": "hda", "uuid": "eb56c631-ecc1-422b-8a85-b37fb7476974"}, "paired_unpaired|fastq_input1": {"id": "110a08ec2653df92", "src": "hda", "uuid": "6f0f6bc0-f878-4303-a60c-13b2479c7ecd"}}, "outputs": {"assembly": {"id": "2653cb0dda5356bf", "src": "hda", "uuid": "ef2b51f6-a6e0-4320-a5bb-a7f72cd996f8"}, "assembly_graph": {"id": "fda63d53a71a6a4f", "src": "hda", "uuid": "a48cd809-c6bd-478e-bd11-b8ef7ebc2871"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:28:46)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/3/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:28:46)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:28:46)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.070    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.083    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.084    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.092    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.123     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.138     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.138     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.138     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.139     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.891     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.894     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.125     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.125     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.171     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.172     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.173     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.173     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.173     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.952  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.952  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.952     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.180     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.180     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.239     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.240     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.418     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.430     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.452     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.455     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.458     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.460     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.464     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.464     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.464     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.464     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.464     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.468     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.468     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.499     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.500     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.565     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.566     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.650     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.748     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.043     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.567     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.052     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.851     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.851     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.853     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.853     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.853     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.853     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: early_gapc\n..\n        : 292)   SPAdes finished\n  0:00:04.735     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:30:58)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:30:58)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:30:58)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:30:58)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:30:58)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-09-16 06:30:58)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:30:58)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:30:58)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:30:58)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:31:07)\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-09-16 06:28:46)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/3/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:28:46)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:28:46)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.070    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.083    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.084    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.092    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.123     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.138     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.138     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.138     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.139     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.891     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.894     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.125     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.125     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.171     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.172     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.173     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.173     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.173     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.952  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.952  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.952     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.180     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.180     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.239     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.240     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.418     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.430     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.452     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.455     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.458     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.460     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.464     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.464     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.464     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.464     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.464     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.466     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.468     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.468     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.499     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.500     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.565     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.566     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.650     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.748     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.043     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.567     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.052     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.851     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.851     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.853     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.853     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.853     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.853     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.853     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: early_gapc\n..\n        : 292)   SPAdes finished\n  0:00:04.735     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:30:58)\nFilter by read depth        (2024-09-16 06:30:58)\nFilter homopolymer loops    (2024-09-16 06:30:58)\nMerge all possible          (2024-09-16 06:30:58)\nNormalise read depths       (2024-09-16 06:30:58)\nRemove zero length segments (2024-09-16 06:30:58)\nSort link order             (2024-09-16 06:30:58)\nGraph cleaning finished     (2024-09-16 06:30:58)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:30:58)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:30:58)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:30:58)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:30:58)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:30:58)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-09-16 06:30:58)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:30:58)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:30:58)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:30:58)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:31:07)\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "141.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:31:07", "plugin": "core", "name": "end_epoch", "raw_value": "1726468267.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:28:46", "plugin": "core", "name": "start_epoch", "raw_value": "1726468126.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-1", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 1, "time_seconds": 180.860582113266, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "724d3f54a60d6a13"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "8414950d701877f4"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "f7cc85e5c8187cec"}, "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "f7cc85e5c8187cec", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:31:46.171042", "update_time": "2024-09-16T06:34:18.460694", "galaxy_version": "24.1", "external_id": "gxy-bpfdz", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/f/8/0/dataset_f8016a52-b443-4a5b-8dfc-796d71ee789b.dat' fq1.fastq.gz && ln -s '/galaxy/server/database/objects/1/6/f/dataset_16f9510e-3a8d-4d57-a6c3-cb2f4b3942c9.dat' fq2.fastq.gz && ln -s '/galaxy/server/database/objects/d/a/0/dataset_da078f11-7770-477e-ba65-668d18e03a06.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq.gz' -2 'fq2.fastq.gz' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 5, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 6, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "f7cc85e5c8187cec", "src": "hda", "uuid": "da078f11-7770-477e-ba65-668d18e03a06"}, "paired_unpaired|fastq_input2": {"id": "8414950d701877f4", "src": "hda", "uuid": "16f9510e-3a8d-4d57-a6c3-cb2f4b3942c9"}, "paired_unpaired|fastq_input1": {"id": "724d3f54a60d6a13", "src": "hda", "uuid": "f8016a52-b443-4a5b-8dfc-796d71ee789b"}}, "outputs": {"assembly": {"id": "1da50f882f945669", "src": "hda", "uuid": "6df4a815-116b-462e-b814-037f6d84398d"}, "assembly_graph": {"id": "d350d55bad3911cf", "src": "hda", "uuid": "7806b3be-32e0-44f9-8dc1-7adc673d6a04"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:31:47)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq.gz -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:31:48)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:31:48)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.073    82M / 82M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.076    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.089    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.091    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.099    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.134     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.152     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.152     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.153     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.153     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.153     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.921     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.924     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.156     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.157     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.208     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.209     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.210     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.210     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.210     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.960  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.960  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.960     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.167     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.167     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.216     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.216     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.389     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.400     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.420     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.422     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.425     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.427     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.432     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.432     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.432     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.432     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.432     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.436     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.436     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.467     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.468     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.528     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.530     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.581     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.676     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.966     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.484     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.950     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.737     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.737     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.738     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.738     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.738     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.738     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clos\n..\n33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:33:58)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:33:59)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:33:59)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:33:59)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:33:59)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:33:59)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:33:59)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-09-16 06:33:59)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-09-16 06:33:59)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:33:59)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-09-16 06:33:59)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.057 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-09-16 06:33:59)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:33:59)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:33:59)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:33:59)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:33:59)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:33:59)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:34:07)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-09-16 06:31:47)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq.gz -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:31:48)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:31:48)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.073    82M / 82M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.076    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.089    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.091    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.099    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.134     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.152     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.152     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.153     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.153     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.153     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.921     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.924     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.156     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.157     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.208     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.209     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.210     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.210     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.210     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.960  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.960  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.960     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.167     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.167     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.216     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.216     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.389     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.400     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.420     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.422     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.425     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.427     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.432     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.432     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.432     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.432     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.432     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.434     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.436     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.436     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.467     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.468     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.528     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.530     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.581     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.676     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.966     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.484     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.950     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.737     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.737     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.738     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.738     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.738     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.738     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.738     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clos\n..\n33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:33:58)\nFilter by read depth        (2024-09-16 06:33:58)\nFilter homopolymer loops    (2024-09-16 06:33:58)\nMerge all possible          (2024-09-16 06:33:58)\nNormalise read depths       (2024-09-16 06:33:58)\nRemove zero length segments (2024-09-16 06:33:58)\nSort link order             (2024-09-16 06:33:58)\nGraph cleaning finished     (2024-09-16 06:33:58)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:33:58)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:33:59)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:33:59)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:33:59)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:33:59)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:33:59)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:33:59)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-09-16 06:33:59)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-09-16 06:33:59)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:33:59)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-09-16 06:33:59)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.057 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-09-16 06:33:59)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:33:59)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:33:59)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:33:59)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:33:59)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:33:59)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:34:07)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "141.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:34:08", "plugin": "core", "name": "end_epoch", "raw_value": "1726468448.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:31:47", "plugin": "core", "name": "start_epoch", "raw_value": "1726468307.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-2", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 2, "time_seconds": 171.9901578426361, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "110a08ec2653df92"}, "paired_unpaired|fastq_input_selector": "paired_collection", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "9924fc50560b5f0a", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:34:40.285137", "update_time": "2024-09-16T06:37:10.445029", "galaxy_version": "24.1", "external_id": "gxy-nprmv", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/7/2/8/dataset_7280254c-7a95-437f-986b-ef408d8e0dbd.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/3/a/5/dataset_3a5f0c8c-3bb9-4021-9981-287a8b996e31.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input12": {"id": "79a6aad4694aea84", "src": "hda", "uuid": "3a5f0c8c-3bb9-4021-9981-287a8b996e31"}, "paired_unpaired|fastq_input11": {"id": "9924fc50560b5f0a", "src": "hda", "uuid": "7280254c-7a95-437f-986b-ef408d8e0dbd"}}, "outputs": {"assembly": {"id": "f4160be6c3df6c71", "src": "hda", "uuid": "5c99d5e6-f777-4124-a576-3ce1fd4db48f"}, "assembly_graph": {"id": "6ba14ed88bd722aa", "src": "hda", "uuid": "980ea339-2c5d-4b71-bf15-68c5b7fbc2ae"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:34:42)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:34:42)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:34:43)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.001     1M / 21M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 21M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 21M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.066    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.069    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.082    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.083    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.091    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.124     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.142     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.144     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.918     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.920     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.149     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.149     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.198     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.198     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.199     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.199     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.200     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.913  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.914  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.914     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.124     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.124     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.173     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.173     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.349     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.361     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.382     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.385     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.388     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.390     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.393     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.393     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.394     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.394     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.394     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.397     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.397     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.426     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.427     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.494     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.495     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.562     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.658     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.948     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.461     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.927     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.723     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.723     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.724     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.724     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.724     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.724     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\n / 160M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:36:50)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:36:50)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:36:50)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:36:50)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:36:50)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-09-16 06:36:50)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:36:50)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:36:50)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:36:50)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:36:59)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-09-16 06:34:42)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:34:42)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:34:43)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.001     1M / 21M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 21M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 21M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.066    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.069    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.082    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.083    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.091    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.124     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.142     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.144     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.918     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.920     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.149     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.149     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.198     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.198     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.199     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.199     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.200     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.913  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.914  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.914     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.124     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.124     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.173     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.173     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.349     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.361     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.382     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.385     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.388     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.390     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.393     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.393     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.394     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.394     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.394     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.395     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.397     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.397     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.426     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.427     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.494     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.495     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.562     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.562     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.658     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.948     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.461     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.927     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.723     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.723     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.724     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.724     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.724     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.724     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.724     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\n / 160M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:36:50)\nFilter by read depth        (2024-09-16 06:36:50)\nFilter homopolymer loops    (2024-09-16 06:36:50)\nMerge all possible          (2024-09-16 06:36:50)\nNormalise read depths       (2024-09-16 06:36:50)\nRemove zero length segments (2024-09-16 06:36:50)\nSort link order             (2024-09-16 06:36:50)\nGraph cleaning finished     (2024-09-16 06:36:50)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:36:50)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:36:50)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:36:50)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:36:50)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:36:50)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-09-16 06:36:50)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:36:50)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:36:50)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:36:50)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:36:59)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "137.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:36:59", "plugin": "core", "name": "end_epoch", "raw_value": "1726468619.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:34:42", "plugin": "core", "name": "start_epoch", "raw_value": "1726468482.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-3", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 3, "time_seconds": 33.139225244522095, "inputs": {"paired_unpaired|fastq_input_selector": "none", "long": {"src": "hda", "id": "646c2ad9853e7261"}, "min_anchor_seg_len": "10", "spades|kmers": "21,23", "keep": "0"}, "job": {"model_class": "Job", "id": "6ba14ed88bd722aa", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:37:29.993497", "update_time": "2024-09-16T06:37:43.729001", "galaxy_version": "24.1", "external_id": "gxy-fvlsz", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/9/6/3/dataset_9639feb1-b458-46b4-8865-3a3f71313544.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_anchor_seg_len '10' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmers '21,23' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"0\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"21,23\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"10\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "paired_unpaired": "{\"__current_case__\": 3, \"fastq_input_selector\": \"none\"}"}, "inputs": {"long": {"id": "646c2ad9853e7261", "src": "hda", "uuid": "9639feb1-b458-46b4-8865-3a3f71313544"}}, "outputs": {"assembly_graph": {"id": "a46d6c50e521c12a", "src": "hda", "uuid": "48c16a6f-d32c-4e84-8228-793f87a43456"}, "assembly": {"id": "7134b3b036f4a733", "src": "hda", "uuid": "04503ce9-4dda-4644-bee6-b47fc33017d4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:37:32)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py               not used                             \n  racon         1.5.0     good       /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nLoading reads (2024-09-16 06:37:32)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:37:32)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2024-09-16 06:37:32)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\n\n\nAssembly complete (2024-09-16 06:37:32)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-09-16 06:37:32)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py               not used                             \n  racon         1.5.0     good       /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nLoading reads (2024-09-16 06:37:32)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:37:32)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2024-09-16 06:37:32)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\n\n\nAssembly complete (2024-09-16 06:37:32)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:37:32", "plugin": "core", "name": "end_epoch", "raw_value": "1726468652.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:37:31", "plugin": "core", "name": "start_epoch", "raw_value": "1726468651.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-4", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 4, "time_seconds": 43.15192914009094, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "c93d3d487739c767"}, "paired_unpaired|fastq_input_selector": "paired_collection", "long": {"src": "hda", "id": "2663f1a7174665b5"}, "keep": "0", "reuse_0|reuse_file": {"src": "hda", "id": "5d14b328ce2d8b33"}, "reuse_0|reuse_step": "002_depth_filter"}, "job": {"model_class": "Job", "id": "e0f88ebcd058d6a3", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "error", "exit_code": null, "create_time": "2024-09-16T06:38:13.593842", "update_time": "2024-09-16T06:38:27.397633", "galaxy_version": "24.1", "external_id": "gxy-6ljw6", "handler": null, "job_runner_name": null, "command_line": "ln -s /galaxy/server/database/objects/5/6/1/dataset_561c80c7-57b5-4980-a8d6-44c5e961b7c8.dat 002_depth_filter.gfa &&  ln -s '/galaxy/server/database/objects/7/2/6/dataset_72623fbf-2403-4ce4-97af-c9d146e001f2.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/8/f/f/dataset_8ffc3ec7-18dc-4545-8d18-fb3673230c2f.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/d/4/c/dataset_d4ca9606-4ec9-4d28-bc41-eaeebcf1fc34.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": null, "params": {"paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 2, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[{\"__index__\": 0, \"reuse_file\": {\"values\": [{\"id\": 20, \"src\": \"hda\"}]}, \"reuse_step\": \"002_depth_filter\"}]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input12": {"id": "0669c6cbfd5a25cb", "src": "hda", "uuid": "8ffc3ec7-18dc-4545-8d18-fb3673230c2f"}, "paired_unpaired|fastq_input11": {"id": "e0f88ebcd058d6a3", "src": "hda", "uuid": "72623fbf-2403-4ce4-97af-c9d146e001f2"}, "reuse_0|reuse_file": {"id": "5d14b328ce2d8b33", "src": "hda", "uuid": "561c80c7-57b5-4980-a8d6-44c5e961b7c8"}, "long": {"id": "2663f1a7174665b5", "src": "hda", "uuid": "d4ca9606-4ec9-4d28-bc41-eaeebcf1fc34"}}, "outputs": {"assembly_graph": {"id": "cb2664d7ec617cde", "src": "hda", "uuid": "f490d0f3-6a3b-4a83-b7ef-fdf3d6a0dbf0"}, "assembly": {"id": "93c1851027ae906e", "src": "hda", "uuid": "7fcf2f84-2eb4-4db5-ab8d-7d82e9c7f3bd"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:38:15)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/17/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\nSPAdes graph already exists. Will use this graph instead of running SPAdes:\n  /galaxy/server/database/jobs_directory/000/17/working/002_depth_filter.gfa\n\n\nDetermining graph multiplicity (2024-09-16 06:38:16)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\nInitial single copy segments: none\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:38:16)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 4 (0.0%)\r1 / 4 (25.0%)\r2 / 4 (50.0%)\r3 / 4 (75.0%)\r4 / 4 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        64        63\n       2        63        64\nGraph overlaps removed\n\nRemoved zero-length segments:\n    2\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:38:16)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:38:16)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:38:16)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:38:16)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/all_segments.fasta\nNumber of minimap alignments: 0\n\nSaving to /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  0 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-09-16 06:38:16)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/simple_bridging/all_segments.fasta\nNumber of minimap alignments: 0\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-09-16 06:38:16)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:38:16)\n\nDone! 0 out of 40 reads aligned\n\n\nAligning reads (2024-09-16 06:38:16)\n1/40: 570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template (412 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n2/40: b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template (4435 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n3/40: 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template (4127 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n4/40: bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template (4275 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n5/40: f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template (1009 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n6/40: 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template (548 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n7/40: a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template (4456 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n8/40: d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template (475 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n9/40: 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template (658 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n10/40: 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template (11629 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n11/40: 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template (674 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n12/40: ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template (1811 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n13/40: f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template (4509 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n14/40: 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template (4333 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n15/40: ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template (873 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n16/40: 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template (1754 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n17/40: d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template (424 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n18/40: a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template (15194 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n19/40: 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template (683 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n20/40: bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template (1421 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n21/40: cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template (2712 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n22/40: a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template (433 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n23/40: c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template (471 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n24/40: 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template (2112 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n25/40: 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template (4536 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n26/40: ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template (1644 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n27/40: 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template (4615 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n28/40: 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template (4587 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n29/40: 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template (7266 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n30/40: f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template (756 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n31/40: 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template (107 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n32/40: 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template (593 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n33/40: 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template (2838 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n34/40: 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template (4286 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n35/40: 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template (18566 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n36/40: 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template (4605 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n37/40: c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template (31279 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n38/40: c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template (1148 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n39/40: 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template (1739 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n40/40: 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template (4413 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n\nRead alignment summary (2024-09-16 06:38:16)\nTotal read count:        40\nFully aligned reads:      0\nPartially aligned reads:  0\nUnaligned reads:         40\n570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template, b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template, 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template, bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template, f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template, 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template, a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template, d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template, 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template, 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template, 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template, ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template, f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template, 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template, ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template, 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template, d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template, a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template, 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template, bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template, cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template, a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template, c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template, 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template, 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template, ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template, 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template, 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template, 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template, f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template, 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template, 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template, 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template, 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template, 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template, 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template, c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template, c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template, 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template, 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\n\nTotal bases aligned:      0 bp\nMean alignment identity:  0.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/17/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:38:16)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:38:16)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:38:16)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:38:16)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:38:16)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:38:24)\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "\nStarting Unicycler (2024-09-16 06:38:15)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/17/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\nSPAdes graph already exists. Will use this graph instead of running SPAdes:\n  /galaxy/server/database/jobs_directory/000/17/working/002_depth_filter.gfa\n\n\nDetermining graph multiplicity (2024-09-16 06:38:16)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\nInitial single copy segments: none\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:38:16)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 4 (0.0%)\r1 / 4 (25.0%)\r2 / 4 (50.0%)\r3 / 4 (75.0%)\r4 / 4 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        64        63\n       2        63        64\nGraph overlaps removed\n\nRemoved zero-length segments:\n    2\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:38:16)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:38:16)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:38:16)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:38:16)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/all_segments.fasta\nNumber of minimap alignments: 0\n\nSaving to /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  0 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-09-16 06:38:16)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/simple_bridging/all_segments.fasta\nNumber of minimap alignments: 0\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-09-16 06:38:16)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:38:16)\n\nDone! 0 out of 40 reads aligned\n\n\nAligning reads (2024-09-16 06:38:16)\n1/40: 570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template (412 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n2/40: b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template (4435 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n3/40: 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template (4127 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n4/40: bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template (4275 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n5/40: f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template (1009 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n6/40: 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template (548 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n7/40: a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template (4456 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n8/40: d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template (475 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n9/40: 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template (658 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n10/40: 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template (11629 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n11/40: 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template (674 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n12/40: ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template (1811 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n13/40: f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template (4509 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n14/40: 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template (4333 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n15/40: ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template (873 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n16/40: 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template (1754 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n17/40: d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template (424 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n18/40: a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template (15194 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n19/40: 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template (683 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n20/40: bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template (1421 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n21/40: cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template (2712 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n22/40: a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template (433 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n23/40: c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template (471 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n24/40: 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template (2112 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n25/40: 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template (4536 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n26/40: ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template (1644 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n27/40: 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template (4615 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n28/40: 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template (4587 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n29/40: 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template (7266 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n30/40: f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template (756 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n31/40: 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template (107 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n32/40: 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template (593 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n33/40: 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template (2838 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n34/40: 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template (4286 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n35/40: 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template (18566 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n36/40: 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template (4605 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n37/40: c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template (31279 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n38/40: c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template (1148 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n39/40: 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template (1739 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n40/40: 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template (4413 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n\nRead alignment summary (2024-09-16 06:38:16)\nTotal read count:        40\nFully aligned reads:      0\nPartially aligned reads:  0\nUnaligned reads:         40\n570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template, b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template, 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template, bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template, f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template, 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template, a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template, d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template, 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template, 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template, 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template, ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template, f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template, 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template, ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template, 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template, d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template, a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template, 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template, bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template, cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template, a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template, c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template, 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template, 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template, ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template, 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template, 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template, 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template, f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template, 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template, 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template, 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template, 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template, 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template, 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template, c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template, c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template, 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template, 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\n\nTotal bases aligned:      0 bp\nMean alignment identity:  0.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/17/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:38:16)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:38:16)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:38:16)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:38:16)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:38:16)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:38:24)\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.fasta\n\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "unicycler/0.5.1+galaxy0-5", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 5, "time_seconds": 169.69347405433655, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "186945af1134eb58"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "666f0ffde631289d"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "keep": "1"}, "job": {"model_class": "Job", "id": "5d14b328ce2d8b33", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:38:47.607735", "update_time": "2024-09-16T06:41:16.576666", "galaxy_version": "24.1", "external_id": "gxy-27ns4", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/c/e/dataset_5ce689f0-21b6-4315-87a9-de5ca808686c.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/b/a/e/dataset_baebb2bc-9035-4312-90ae-808d2ee91cf1.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 1 && mkdir 'spades_graphs' && mv 00*gfa './spades_graphs/'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"1\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "long": null, "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 23, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 24, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"paired_unpaired|fastq_input1": {"id": "186945af1134eb58", "src": "hda", "uuid": "5ce689f0-21b6-4315-87a9-de5ca808686c"}, "paired_unpaired|fastq_input2": {"id": "666f0ffde631289d", "src": "hda", "uuid": "baebb2bc-9035-4312-90ae-808d2ee91cf1"}}, "outputs": {"assembly_graph": {"id": "4d0eee68b569719d", "src": "hda", "uuid": "a0c6a7c3-a122-4534-93e2-07958816aa25"}, "assembly": {"id": "21edf05803998460", "src": "hda", "uuid": "92da9a0b-9022-4fd3-8a45-a551815237a5"}, "__new_primary_file_spades_collection|001_spades_graph_k027__": {"id": "2cba83ce43d309d6", "src": "hda", "uuid": "9d450619-c557-4906-ae60-8f45df8aa96e"}, "__new_primary_file_spades_collection|001_spades_graph_k047__": {"id": "41824610aaf56b29", "src": "hda", "uuid": "38ad5134-4013-481b-88da-c630b99b7ec7"}, "__new_primary_file_spades_collection|001_spades_graph_k063__": {"id": "051b19fa0d0cdaad", "src": "hda", "uuid": "c0227835-5090-485b-8575-7c407e7cafe9"}, "__new_primary_file_spades_collection|001_spades_graph_k077__": {"id": "c8d05c751a82530b", "src": "hda", "uuid": "e2e823f8-1c28-44f0-999d-d2e65488bd6a"}, "__new_primary_file_spades_collection|001_spades_graph_k089__": {"id": "dfe21fd8771ecbba", "src": "hda", "uuid": "ac02c733-e008-460e-9519-103d439f50a1"}, "__new_primary_file_spades_collection|001_spades_graph_k099__": {"id": "a436d9cb254da94e", "src": "hda", "uuid": "9d92ed37-c8ad-4ecd-9e90-7e53db3481ee"}, "__new_primary_file_spades_collection|001_spades_graph_k107__": {"id": "b8bae5628a39c489", "src": "hda", "uuid": "10f1b69b-4759-4526-ac21-465c62ba3682"}, "__new_primary_file_spades_collection|001_spades_graph_k115__": {"id": "e42318fd2e75ddee", "src": "hda", "uuid": "63203500-4f93-4d3a-9d7d-76edf41cf130"}, "__new_primary_file_spades_collection|001_spades_graph_k121__": {"id": "abd706fdba0e05c9", "src": "hda", "uuid": "c64eca63-4f00-4342-aa79-6bc64291fe9f"}, "__new_primary_file_spades_collection|001_spades_graph_k127__": {"id": "c3b0faf4f03a2a85", "src": "hda", "uuid": "59de5d22-9534-4747-9f2c-9e2f373ab49e"}, "__new_primary_file_spades_collection|002_depth_filter__": {"id": "adc55671cdcdae4c", "src": "hda", "uuid": "354530f1-1b83-4c54-b333-0b4064b0435c"}, "__new_primary_file_spades_collection|003_overlaps_removed__": {"id": "dd98285e16bd80e5", "src": "hda", "uuid": "1e6031c8-e1fe-437f-b1b9-ba0e0ec6f6c9"}, "__new_primary_file_spades_collection|004_bridges_applied__": {"id": "fe95789085498f17", "src": "hda", "uuid": "5d51d7df-9d1c-41c1-97ba-f91ffd4f850b"}, "__new_primary_file_spades_collection|005_final_clean__": {"id": "40121ae230c060f4", "src": "hda", "uuid": "6e4ae7bb-c791-4a46-83d2-f4b8bf16e859"}}, "copied_from_job_id": null, "output_collections": {"spades_collection": {"src": "hdca", "id": "fda63d53a71a6a4f"}}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:38:49)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 1\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/20/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:38:49)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:38:49)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.067    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.070    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.084    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.092    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.122     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.137     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.137     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.139     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.915     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.918     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.136     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.136     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.179     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.179     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.180     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.180     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.180     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.948  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.949  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.949     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.175     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.175     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.221     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.221     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.420     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.432     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.455     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.460     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.463     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.465     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.470     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.470     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.471     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.471     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.471     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.474     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.474     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.475     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.475     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.508     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.509     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.575     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.577     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.649     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.745     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.036     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.548     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.015     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.806     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.806     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.807     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.807     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.807     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.807     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\ntabase/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta\n  0:00:04.558     3M / 160M  INFO    General                 (contig_output_stage.cpp   : 107)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths\n  0:00:04.561     3M / 160M  INFO    General                 (contig_output_stage.cpp   : 114)   Populating GFA with scaffold paths\n  0:00:04.568     3M / 160M  INFO    General                 (pipeline.cpp              : 292)   SPAdes finished\n  0:00:04.569     1M / 160M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:40:55)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:40:56)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/20/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-09-16 06:40:56)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:40:56)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:40:56)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-09-16 06:40:56)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-09-16 06:40:56)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:40:56)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:40:56)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:41:04)\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-09-16 06:38:49)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 1\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/20/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:38:49)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:38:49)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.067    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.070    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.084    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.092    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.122     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.137     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.137     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.139     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.139     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.915     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.918     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.136     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.136     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.179     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.179     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.180     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.180     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.180     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.948  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.949  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.949     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.175     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.175     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.221     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.221     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.420     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.432     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.455     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.460     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.463     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.465     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.470     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.470     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.471     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.471     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.471     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.473     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.474     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.474     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.475     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.475     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.508     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.509     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.575     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.577     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.649     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.745     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.036     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.548     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.015     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.806     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.806     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.807     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.807     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.807     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.807     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.807     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\ntabase/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta\n  0:00:04.558     3M / 160M  INFO    General                 (contig_output_stage.cpp   : 107)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths\n  0:00:04.561     3M / 160M  INFO    General                 (contig_output_stage.cpp   : 114)   Populating GFA with scaffold paths\n  0:00:04.568     3M / 160M  INFO    General                 (pipeline.cpp              : 292)   SPAdes finished\n  0:00:04.569     1M / 160M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:40:55)\nFilter by read depth        (2024-09-16 06:40:55)\nFilter homopolymer loops    (2024-09-16 06:40:55)\nMerge all possible          (2024-09-16 06:40:55)\nNormalise read depths       (2024-09-16 06:40:55)\nRemove zero length segments (2024-09-16 06:40:55)\nSort link order             (2024-09-16 06:40:55)\nGraph cleaning finished     (2024-09-16 06:40:55)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:40:55)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:40:56)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/20/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-09-16 06:40:56)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:40:56)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:40:56)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-09-16 06:40:56)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-09-16 06:40:56)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:40:56)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:40:56)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:41:04)\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:38:49", "plugin": "core", "name": "start_epoch", "raw_value": "1726468729.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:41:04", "plugin": "core", "name": "end_epoch", "raw_value": "1726468864.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "135.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-6", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 6, "time_seconds": 174.14943170547485, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "89109b7a43744a41"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "a31d217558126206"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "2ceabcbe1435ac5f"}, "mode": "normal", "keep": "2"}, "job": {"model_class": "Job", "id": "666f0ffde631289d", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:41:42.017917", "update_time": "2024-09-16T06:44:09.776948", "galaxy_version": "24.1", "external_id": "gxy-zhk8b", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/e/6/5/dataset_e659b0e5-34db-44c5-ad93-195433b117c5.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/a/3/a/dataset_a3a1eaad-356e-42c3-88cd-dcfad8f4dcb0.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/5/2/f/dataset_52ff82cd-7ec3-4621-a186-dae79cb9aba4.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 2 && mkdir 'spades_graphs' && mv 00*gfa './spades_graphs/' && samtools view -@ \"${GALAXY_SLOTS:-4}\" -u 'read_alignment/long_read_alignments.sam' | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -o 'read_alignment/long_read_alignments.bam'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"2\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 41, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 42, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"long": {"id": "2ceabcbe1435ac5f", "src": "hda", "uuid": "52ff82cd-7ec3-4621-a186-dae79cb9aba4"}, "paired_unpaired|fastq_input1": {"id": "89109b7a43744a41", "src": "hda", "uuid": "e659b0e5-34db-44c5-ad93-195433b117c5"}, "paired_unpaired|fastq_input2": {"id": "a31d217558126206", "src": "hda", "uuid": "a3a1eaad-356e-42c3-88cd-dcfad8f4dcb0"}}, "outputs": {"__new_primary_file_spades_collection|005_final_clean__": {"id": "9d9c7275144a8757", "src": "hda", "uuid": "ea53edc5-39a0-43ad-9e5d-86ea2b2beb88"}, "__new_primary_file_spades_collection|004_bridges_applied__": {"id": "d4bff936fcd55af7", "src": "hda", "uuid": "f7ff4355-3423-41c1-8270-48314e93c959"}, "__new_primary_file_spades_collection|003_overlaps_removed__": {"id": "5b0453e6853a40f9", "src": "hda", "uuid": "4156bcf2-d672-4080-a53b-61d4c44c5c41"}, "__new_primary_file_spades_collection|002_depth_filter__": {"id": "cb9e48107de1f7b5", "src": "hda", "uuid": "9063e06b-d24b-410d-a07f-b4163aab2538"}, "__new_primary_file_spades_collection|001_spades_graph_k127__": {"id": "0223248ed9301ce3", "src": "hda", "uuid": "b1722465-f616-4747-8fd3-49677774daaf"}, "__new_primary_file_spades_collection|001_spades_graph_k121__": {"id": "1f2dca3659d47dfa", "src": "hda", "uuid": "bd527fb5-4021-4402-a7bc-bac0973121a0"}, "__new_primary_file_spades_collection|001_spades_graph_k115__": {"id": "71129469a994a52d", "src": "hda", "uuid": "9d3d92c5-1291-47a4-b126-2156812b46aa"}, "__new_primary_file_spades_collection|001_spades_graph_k107__": {"id": "0786c9695150fe21", "src": "hda", "uuid": "24ae1a05-9911-44e1-beaf-f561f66fe290"}, "__new_primary_file_spades_collection|001_spades_graph_k099__": {"id": "0ff9c01aa0f651b7", "src": "hda", "uuid": "b78516d6-fe36-4665-b725-0cb3a46988bb"}, "__new_primary_file_spades_collection|001_spades_graph_k089__": {"id": "924d5e838898def7", "src": "hda", "uuid": "522b1cde-4e09-407a-9ed4-ae5d481d41c0"}, "__new_primary_file_spades_collection|001_spades_graph_k077__": {"id": "62784cb01cc51016", "src": "hda", "uuid": "07ae84da-2b55-499b-911b-6c1e9187ed09"}, "__new_primary_file_spades_collection|001_spades_graph_k063__": {"id": "cdee7d7db07938c5", "src": "hda", "uuid": "a84a8cc5-63ba-4b0c-b825-22926c14b461"}, "__new_primary_file_spades_collection|001_spades_graph_k047__": {"id": "dd9e559695e67e91", "src": "hda", "uuid": "e66161ec-f98f-4f5f-b739-c4af8313f41f"}, "__new_primary_file_spades_collection|001_spades_graph_k027__": {"id": "ba05435e64e13e2c", "src": "hda", "uuid": "2b873770-eb04-46c4-be2b-57fba146e1e7"}, "bam_file": {"id": "a28f391c37411761", "src": "hda", "uuid": "185e308e-b166-4fdd-8f55-390fae717197"}, "assembly": {"id": "13646060366cd2a2", "src": "hda", "uuid": "0c826156-4511-4ad6-a3e3-98b4811a4ec6"}, "assembly_graph": {"id": "5ed5bf7a5bf354b4", "src": "hda", "uuid": "1801eefe-a08b-4009-91d1-1963cf13f0c1"}}, "copied_from_job_id": null, "output_collections": {"spades_collection": {"src": "hdca", "id": "2653cb0dda5356bf"}}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:41:44)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 2\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/24/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:41:44)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:41:44)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 21M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 21M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.071    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.084    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.092    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.122     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.137     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.137     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.138     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.138     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.138     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.840     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.843     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.051     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.051     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.092     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.092     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.094     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.094     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.094     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.781  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.781  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.781     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.986     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.986     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.031     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.031     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.192     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.203     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.223     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.226     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.228     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.230     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.234     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.234     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.234     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.234     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.234     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.238     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.238     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.266     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.267     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.329     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.330     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.391     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.486     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.778     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.288     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.751     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.539     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.539     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.540     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.540     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.540     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.540     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: ear\n..\nall possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:43:49)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:43:49)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/24/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-09-16 06:43:49)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:43:49)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:43:49)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:43:49)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:43:49)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-09-16 06:43:49)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-09-16 06:43:49)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:43:49)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-09-16 06:43:49)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.055 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-09-16 06:43:49)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:43:49)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:43:49)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-09-16 06:43:49)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:43:49)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:43:49)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:43:58)\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-09-16 06:41:44)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 2\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/24/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:41:44)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:41:44)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 21M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 21M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.071    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.084    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.092    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.122     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.137     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.137     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.137     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.138     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.138     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.138     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.840     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.843     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.051     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.051     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.092     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.092     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.094     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.094     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.094     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.781  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.781  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.781     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.986     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.986     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.031     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.031     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.192     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.203     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.223     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.226     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.228     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.230     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.234     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.234     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.234     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.234     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.234     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.236     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.238     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.238     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.266     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.267     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.329     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.330     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.391     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.391     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.486     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.778     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.288     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.751     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.539     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.539     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.540     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.540     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.540     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.540     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.540     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: ear\n..\nall possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:43:49)\nFilter by read depth        (2024-09-16 06:43:49)\nFilter homopolymer loops    (2024-09-16 06:43:49)\nMerge all possible          (2024-09-16 06:43:49)\nNormalise read depths       (2024-09-16 06:43:49)\nRemove zero length segments (2024-09-16 06:43:49)\nSort link order             (2024-09-16 06:43:49)\nGraph cleaning finished     (2024-09-16 06:43:49)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:43:49)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:43:49)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/24/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-09-16 06:43:49)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:43:49)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:43:49)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:43:49)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:43:49)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-09-16 06:43:49)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-09-16 06:43:49)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:43:49)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-09-16 06:43:49)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.055 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-09-16 06:43:49)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:43:49)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:43:49)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-09-16 06:43:49)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:43:49)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:43:49)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:43:58)\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:41:43", "plugin": "core", "name": "start_epoch", "raw_value": "1726468903.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:43:58", "plugin": "core", "name": "end_epoch", "raw_value": "1726469038.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "135.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-7", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 7, "time_seconds": 173.86692261695862, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "2fdaf3ea63606562"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "09387bf8a74ffe83"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "b81e35e26139f92b"}, "mode": "normal", "lr_align|no_simple_bridges": true, "keep": "0"}, "job": {"model_class": "Job", "id": "41824610aaf56b29", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T06:44:36.833342", "update_time": "2024-09-16T06:47:04.859761", "galaxy_version": "24.1", "external_id": "gxy-g5fl2", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/6/a/dataset_46a1ae11-380e-4c4a-95c6-7e04aa23f59f.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/a/4/6/dataset_a46301c4-095c-46e2-aa76-a1ef1c3db7b3.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/e/0/8/dataset_e0833c83-0d89-4a20-acb5-834e753b9c80.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2' --no_simple_bridges --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"0\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": true, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 61, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 62, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"paired_unpaired|fastq_input1": {"id": "2fdaf3ea63606562", "src": "hda", "uuid": "46a1ae11-380e-4c4a-95c6-7e04aa23f59f"}, "paired_unpaired|fastq_input2": {"id": "09387bf8a74ffe83", "src": "hda", "uuid": "a46301c4-095c-46e2-aa76-a1ef1c3db7b3"}, "long": {"id": "b81e35e26139f92b", "src": "hda", "uuid": "e0833c83-0d89-4a20-acb5-834e753b9c80"}}, "outputs": {"assembly_graph": {"id": "8c5111ff018d9f9d", "src": "hda", "uuid": "0cb146a1-8313-4351-a6a2-154a32ccca70"}, "assembly": {"id": "25856f760879fcd7", "src": "hda", "uuid": "fb290ddf-8643-4fbb-8d32-fcebe0d894a8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-09-16 06:44:38)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --no_simple_bridges --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/28/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:44:38)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:44:38)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.071    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.073    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.087    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.089    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.096    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.130     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.145     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.146     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.146     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.146     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.147     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.855     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.858     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.058     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.058     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.102     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.102     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.103     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.103     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.103     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.780  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.780  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.780     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.986     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.986     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.031     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.031     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.194     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.206     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.227     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.230     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.233     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.234     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.237     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.238     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.238     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.238     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.238     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.242     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.242     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.273     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.274     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.342     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.343     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.403     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.500     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.793     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.305     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.770     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.568     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.569     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.570     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.570     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.570     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.570     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE ==\n..\n-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:46:44)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:46:44)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:46:44)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:46:44)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:46:44)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:46:44)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:46:44)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nDetermining low score threshold (2024-09-16 06:46:44)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:46:44)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-09-16 06:46:44)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-09-16 06:46:45)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/28/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:46:45)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:46:45)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:46:45)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:46:45)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:46:45)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:46:53)\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-09-16 06:44:38)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --no_simple_bridges --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/28/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-09-16 06:44:38)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-09-16 06:44:38)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.90+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.071    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.073    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.087    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.089    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.096    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.130     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.145     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.146     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.146     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.146     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.147     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.855     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.858     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.058     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.058     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.102     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.102     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.103     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.103     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.103     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.780  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.780  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.780     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.986     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.986     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.031     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.031     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.194     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.206     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.227     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.230     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.233     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.234     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.237     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.238     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.238     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.238     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.238     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.240     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.242     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.242     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.273     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.274     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.342     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.343     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.403     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.500     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.793     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.305     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.770     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.568     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.569     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.570     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.570     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.570     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.570     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.570     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE ==\n..\n-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-09-16 06:46:44)\nFilter by read depth        (2024-09-16 06:46:44)\nFilter homopolymer loops    (2024-09-16 06:46:44)\nMerge all possible          (2024-09-16 06:46:44)\nNormalise read depths       (2024-09-16 06:46:44)\nRemove zero length segments (2024-09-16 06:46:44)\nSort link order             (2024-09-16 06:46:44)\nGraph cleaning finished     (2024-09-16 06:46:44)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-09-16 06:46:44)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-09-16 06:46:44)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-09-16 06:46:44)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-09-16 06:46:44)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-09-16 06:46:44)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-09-16 06:46:44)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-09-16 06:46:44)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nDetermining low score threshold (2024-09-16 06:46:44)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-09-16 06:46:44)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-09-16 06:46:44)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-09-16 06:46:45)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/28/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-09-16 06:46:45)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-09-16 06:46:45)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-09-16 06:46:45)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-09-16 06:46:45)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-09-16 06:46:45)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-09-16 06:46:53)\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "135.0000000"}, {"title": "Job End Time", "value": "2024-09-16 06:46:53", "plugin": "core", "name": "end_epoch", "raw_value": "1726469213.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 06:44:38", "plugin": "core", "name": "start_epoch", "raw_value": "1726469078.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "vcfcheck/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfcheck", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 37.2482693195343, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "bb3d60f596cecd6a"}, "reference_source|input_vcf": {"src": "hda", "id": "8e3e9734912d94fc"}, "reference_source|reference_source_selector": "history", "failure_selector": "-x"}, "job": {"model_class": "Job", "id": "796c4482f766abbf", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcheck/vcfcheck/1.0.0_rc3+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:27:37.693634", "update_time": "2024-09-16T09:27:55.297631", "galaxy_version": "24.1", "external_id": "gxy-6cfs8", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/f/7/1/dataset_f712ae80-13ca-4875-b5cf-985deaf4cbd9.dat' 'localref.fa' && vcfcheck -x -f 'localref.fa' '/galaxy/server/database/objects/b/2/f/dataset_b2ff05e5-1d0a-43d0-a504-9a340c3141f9.dat' > '/galaxy/server/database/objects/4/a/c/dataset_4ac9f480-a439-4ee3-b5bf-697cb8b939da.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "failure_selector": "\"-x\"", "reference_source": "{\"__current_case__\": 1, \"input_vcf\": {\"values\": [{\"id\": 678, \"src\": \"hda\"}]}, \"ref_file\": {\"values\": [{\"id\": 677, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"reference_source|input_vcf": {"id": "8e3e9734912d94fc", "src": "hda", "uuid": "b2ff05e5-1d0a-43d0-a504-9a340c3141f9"}, "reference_source|ref_file": {"id": "bb3d60f596cecd6a", "src": "hda", "uuid": "f712ae80-13ca-4875-b5cf-985deaf4cbd9"}}, "outputs": {"out_file1": {"id": "9f41a95f6180b7bd", "src": "hda", "uuid": "4ac9f480-a439-4ee3-b5bf-697cb8b939da"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file localref.fa.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "index file localref.fa.fai not found, generating...\n", "job_messages": [{"code_desc": null, "desc": "Warning: Matched on index file", "error_level": 2, "match": "index file", "stream": "stderr", "type": "regex"}], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:27:43", "plugin": "core", "name": "end_epoch", "raw_value": "1726478863.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:27:43", "plugin": "core", "name": "start_epoch", "raw_value": "1726478863.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "vcfdistance/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfdistance", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 32.8321487903595, "inputs": {"input1": {"src": "hda", "id": "1b300c6e275442f0"}}, "job": {"model_class": "Job", "id": "c6bc71a208e62702", "history_id": "110a08ec2653df92", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfdistance/vcfdistance/1.0.0_rc3+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-09-16T09:28:15.848942", "update_time": "2024-09-16T09:28:28.830639", "galaxy_version": "24.1", "external_id": "gxy-jfdnz", "handler": null, "job_runner_name": null, "command_line": "cat '/galaxy/server/database/objects/4/4/9/dataset_449919b8-b388-425b-914c-f675c9b9093d.dat' | vcfdistance > '/galaxy/server/database/objects/4/0/f/dataset_40fda0c0-7cf3-4f8b-9752-e98b43723709.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input1": {"id": "1b300c6e275442f0", "src": "hda", "uuid": "449919b8-b388-425b-914c-f675c9b9093d"}}, "outputs": {"out_file1": {"id": "c01f27db08916457", "src": "hda", "uuid": "40fda0c0-7cf3-4f8b-9752-e98b43723709"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-09-16 09:28:17", "plugin": "core", "name": "end_epoch", "raw_value": "1726478897.0000000"}, {"title": "Job Start Time", "value": "2024-09-16 09:28:17", "plugin": "core", "name": "start_epoch", "raw_value": "1726478897.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}], "galaxy_url": "http://34.148.23.95:8000/galaxy/"}