<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="5"
           failures="8"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="34.50887703895569">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="28.897549867630005">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="29.18796706199646">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="22.52645254135132">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "dfb1111c7581e06d",   "src": "hda"  },  "output_type": "v",  "sec_filter|soft_filter": "XX",  "sec_restrict|exclude": "INFO/DP=19" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/3/e/a/dataset_3ea1ed55-75e9-4c84-8cd6-b04b0f7ef90e.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026            bcftools filter  --soft-filter \"XX\"             --exclude \u0027INFO/DP=19\u0027    --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  \u003e \u0027/galaxy/server/database/objects/f/9/c/dataset_f9ca1be2-3098-4500-bae8-13fe9d937e36.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-03-11T19:08:43.172931",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-8mn6d",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "60de21477dcc341b",  "inputs": {   "input_file": {    "id": "dfb1111c7581e06d",    "src": "hda",    "uuid": "3ea1ed55-75e9-4c84-8cd6-b04b0f7ef90e"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "449843a01c64f1b9",    "src": "hda",    "uuid": "f9ca1be2-3098-4500-bae8-13fe9d937e36"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"XX\"}",   "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-03-11T19:08:47.821979",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 22.52645254135132, "tool_id": "bcftools_filter", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="29.38587236404419">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="30.24171233177185">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="30.13155484199524">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="27.98697781562805">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="28.258163690567017">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="37.21936750411987">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="30.33063006401062">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="23.094130277633667">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 23.094130277633667, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="39.01615619659424">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="39.414592027664185">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="64.84218311309814">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="38.59756016731262">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.4571056365966797">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.4571056365966797, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="37.16479539871216">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="28.23469305038452">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="28.372042894363403">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="29.738451957702637">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="29.389150857925415">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="21.78203296661377">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute",  "fastq_filters_0|offset_type|left_column_offset": "1",  "fastq_filters_0|offset_type|right_column_offset": "1",  "fastq_filters_0|score": "1",  "fastq_filters_0|score_comparison": "\u003e=",  "fastq_filters_0|score_operation": "min",  "input_file": {   "id": "a1e359629944e249",   "src": "hda"  },  "max_num_deviants": "0",  "max_quality": "0",  "max_size": "0",  "min_quality": "0",  "min_size": "0",  "paired_end": false }, "job": {  "command_line": "gx-fastq-filter \u0027/galaxy/server/database/objects/0/2/a/dataset_02aa382c-82a8-411a-bc93-b2aa5b931ccc.dat\u0027 \u0027/galaxy/server/database/jobs_directory/000/39/configs/tmpe__q0ass\u0027 \u0027/galaxy/server/database/objects/e/d/0/dataset_ed0cf8aa-9136-4ece-9ea4-c8f62f95d6f9.dat\u0027 \u0027/galaxy/server/database/objects/e/d/0/dataset_ed0cf8aa-9136-4ece-9ea4-c8f62f95d6f9_files\u0027 \u0027sanger\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-03-11T18:41:12.569814",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-2qbgz",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "81743dd470cc4639",  "inputs": {   "input_file": {    "id": "a1e359629944e249",    "src": "hda",    "uuid": "02aa382c-82a8-411a-bc93-b2aa5b931ccc"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "e90eb07ee65e1db6",    "src": "hda",    "uuid": "ed0cf8aa-9136-4ece-9ea4-c8f62f95d6f9"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"1\", \"right_column_offset\": \"1\"}, \"score\": \"1.0\", \"score_comparison\": \"\u003e=\", \"score_operation\": \"min\"}]",   "max_num_deviants": "\"0\"",   "max_quality": "\"0.0\"",   "max_size": "\"0\"",   "min_quality": "\"0.0\"",   "min_size": "\"0\"",   "paired_end": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-03-11T18:41:17.389378",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 21.78203296661377, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="28.16895580291748">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="29.558891773223877">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="28.984966278076172">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="34.617536544799805">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="29.30623197555542">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="30.29010558128357">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="56.4470317363739">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="57.96213245391846">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="28.778306484222412">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "extension": "pdf",  "input": {   "id": "ff2179671d63433b",   "src": "hda"  },  "plot_type": "total_bp" }, "job": {  "command_line": "export MPLBACKEND=\"agg\" \u0026\u0026 poretools occupancy \u0027/galaxy/server/database/objects/4/5/1/dataset_451746ca-d30e-4b58-a5de-8cf1c6841b37.dat\u0027 --saveas occupancy.pdf --plot-type total_bp \u0026\u0026 mv occupancy.pdf \u0027/galaxy/server/database/objects/7/3/6/dataset_7361f3fc-9043-4942-8c4b-103d0d7aac00.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-03-11T18:51:29.059918",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-7g672",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "882ed861d08c71d4",  "inputs": {   "input": {    "id": "ff2179671d63433b",    "src": "hda",    "uuid": "451746ca-d30e-4b58-a5de-8cf1c6841b37"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "6dfc527789407b65",    "src": "hda",    "uuid": "7361f3fc-9043-4942-8c4b-103d0d7aac00"   }  },  "params": {   "__input_ext": "\"fast5.tar\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "extension": "\"pdf\"",   "plot_type": "\"total_bp\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-03-11T18:51:37.652164",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 28.778306484222412, "tool_id": "poretools_occupancy", "tool_version": "0.6.1a1.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="48.70428395271301">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/b/3/e/dataset_b3ec62de-bba4-44c5-9b2d-069f481295c1.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/a/c/a/dataset_acad6970-92c6-47fb-8234-809b334b239e.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/c/4/c/dataset_c4c01b9f-d5fa-41ba-9d0b-cb61a6aa7b40.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-03-11T19:01:34.402424",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qhn46",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "6338e2d66686e61d",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "21.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "21 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1710183719.0000000",    "title": "Job End Time",    "value": "2024-03-11 19:01:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1710183698.0000000",    "title": "Job Start Time",    "value": "2024-03-11 19:01:38"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "187d7743aa5c3559",    "src": "hda",    "uuid": "c4c01b9f-d5fa-41ba-9d0b-cb61a6aa7b40"   },   "design_tsv": {    "id": "7954896e98846e2c",    "src": "hda",    "uuid": "902de3bd-3887-4636-b570-5c9e948d6446"   },   "genes_tsv": {    "id": "1696f0d457f6ac3b",    "src": "hda",    "uuid": "acad6970-92c6-47fb-8234-809b334b239e"   },   "matrix_mtx": {    "id": "802e5baad8dd3e66",    "src": "hda",    "uuid": "b3ec62de-bba4-44c5-9b2d-069f481295c1"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-03-11 19:01:38--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  283K\n    50K .......... .......... .......... .......... ..........  282K\n   100K .......... .......... .......... .......... ..........  283K\n   150K .......... .......... .......... .......... ..........  283K\n   200K .......... .......... .......... .......... ..........  566K\n   250K .......... .......... .......... .......... ..........  546K\n   300K .......... .......... .......... .......... ..........  568K\n   350K .......... .......... .......... .......... ..........  568K\n   400K .......... .......... .......... .......... ..........  286K\n   450K .......... .......... .......... .......... .......... 37.9M\n   500K .......... .......... .......... .......... ..........  569K\n   550K .......... .......... .......... .......... ..........  565K\n   600K .......... .......... .......... .......... ..........  566K\n   650K .......... .......... .......... .......... .......... 18.6M\n   700K .......... .......... .......... .......... ..........  581K\n   750K .......... .......... .......... .......... ..........  567K\n   800K .......... .......... .......... .......... .......... 19.8M\n   850K .......... .......... .......... .......... ..........  580K\n   900K .......... .......... .......... .......... .......... 20.0M\n   950K .......... .......... .......... .......... ..........  582K\n  1000K .......... .......... .......... .......... .......... 20.6M\n  1050K .......... .......... .......... .......... ..........  580K\n  1100K .......... .......... .......... .......... .......... 23.8M\n  1150K .......... .......... .......... .......... ..........  575K\n  1200K .......... .......... .......... .......... .......... 31.5M\n  1250K .......... .......... .......... .......... ..........  576K\n  1300K .......... .......... .......... .......... .......... 27.4M\n  1350K .......... .......... .......... .......... ..........  577K\n  1400K .......... .......... .......... .......... .......... 46.0M\n  1450K .......... .......... .......... .......... .......... 35.0M\n  1500K .......... .......... .......... .......... ..........  580K\n  1550K .......... .......... .......... .......... .......... 16.3M\n  1600K .......... .......... .......... .......... ..........  585K\n  1650K .......... .......... .......... .......... .......... 24.8M\n  1700K .......... .......... .......... .......... ..........  580K\n  1750K .......... .......... .......... .......... .......... 88.1M\n  1800K .......... .......... .......... .......... .......... 19.5M\n  1850K .......... .......... .......... .......... ..........  587K\n  1900K .......... .......... .......... .......... .......... 97.9M\n  1950K .......... .......... .......... .......... .......... 17.8M\n  2000K .......... .......... .......... .......... ..........  587K\n  2050K .......... .......... .......... .......... .......... 94.8M\n  2100K .......... .......... .......... .......... .......... 16.4M\n  2150K .......... .......... .......... .......... ..........  591K\n  2200K .......... .......... .......... .......... .......... 55.1M\n  2250K .......... .......... .......... .......... .......... 22.4M\n  2300K .......... .......... .......... .......... .......... 48.2M\n  2350K .......... .......... .......... .......... ..........  588K\n  2400K .......... .......... .......... .......... .......... 16.9M\n  2450K .......... .......... .......... .......... .......... 64.6M\n  2500K .......... .......... .......... .......... ..........  592K\n  2550K .......... .......... .......... .......... .......... 84.5M\n  2600K .......... .......... .......... .......... .......... 17.8M\n  2650K .......... .......... .......... .......... .......... 58.3M\n  2700K .......... .......... .......... .......... ..........  590K\n  2750K .......... .......... .......... .......... ..........  185M\n  2800K .......... .......... .......... .......... .......... 17.7M\n  2850K .......... .......... .......... .......... ..........  587K\n  2900K .......... .......... .......... .......... ..........  160M\n  2950K .......... .......... .......... .......... ..........  281M\n  3000K .......... .......... .......... .......... .......... 18.4M\n  3050K .......... .......... .......... .......... ..........  586K\n  3100K .......... .......... .......... .......... ..........  252M\n  3150K .......... .......... .......... .......... ..........  161M\n  3200K .......... .......... .......... .......... .......... 17.3M\n  3250K .......... .......... .......... .......... ..........  587K\n  3300K .......... .......... .......... .......... ..........  179M\n  3350K .......... .......... .......... .......... ..........  180M\n  3400K .......... .......... .......... .......... .......... 30.3M\n  3450K .......... .......... .......... .......... .......... 39.3M\n  3500K .......... .......... .......... .......... ..........  587K\n  3550K .......... .......... .......... .......... ..........  135M\n  3600K .......... .......... .......... .......... .......... 36.1M\n  3650K .......... .......... .......... .......... .......... 39.5M\n  3700K .......... .......... .......... .......... .......... 32.2M\n  3750K .......... .......... .......... .......... ..........  594K\n  3800K .......... .......... .......... .......... .......... 77.7M\n  3850K .......... .......... .......... .......... .......... 76.8M\n  3900K .......... .......... .......... .......... .......... 21.5M\n  3950K .......... .......... .......... .......... .......... 49.5M\n  4000K .......... .......... .......... .......... ..........  595K\n  4050K .......... .......... .......... .......... .......... 85.4M\n  4100K .......... .......... .......... .......... .......... 81.6M\n  4150K .......... .......... .......... .......... .......... 24.1M\n  4200K .......... .......... .......... .......... ..........  218M\n  4250K .......... .......... .......... .......... ..........  588K\n  4300K .......... .......... .......... .......... ..........  260M\n  4350K .......... .......... .......... .......... .......... 72.7M\n  4400K .......... .......... .......... .......... .......... 35.7M\n  4450K .......... .......... .......... .......... .......... 40.4M\n  4500K .......... .......... .......... .......... ..........  589K\n  4550K .......... .......... .......... .......... ..........  182M\n  4600K .......... .......... .......... .......... ..........  148M\n  4650K .......... .......... .......... .......... ..........  222M\n  4700K .......... .......... .......... .......... .......... 37.2M\n  4750K .......... .......... .......... .......... .......... 22.3M\n  4800K .......... .......... .......... .......... ..........  595K\n  4850K .......... .......... .......... .......... .......... 98.2M\n  4900K .......... .......... .......... .......... ..........  126M\n  4950K .......... .......... .......... .......... ..........  255M\n  5000K .......... .......... .......... .......... .......... 61.5M\n  5050K .......... .......... .......... .......... .......... 19.9M\n  5100K .......... .......... .......... .......... ..........  128M\n  5150K .......... .......... .......... .......... ..........  595K\n  5200K .......... .......... .......... .......... ..........  164M\n  5250K .......... .......... .......... .......... ..........  127M\n  5300K .......... .......... .......... .......... .......... 98.3M\n  5350K .......... .......... .......... .......... .......... 19.0M\n  5400K .......... .......... .......... .......... .......... 81.3M\n  5450K .......... .......... .......... .......... ..........  594K\n  5500K .......... .......... .......... .......... ..........  179M\n  5550K .......... .......... .......... .......... ..........  283M\n  5600K .......... .......... .......... .......... ..........  329M\n  5650K .......... .......... .......... .......... .......... 44.5M\n  5700K .......... .......... .......... .......... .......... 19.0M\n  5750K .......... .......... .......... .......... ..........  318M\n  5800K .......... .......... .......... .......... ..........  595K\n  5850K .......... .......... .......... .......... ..........  225M\n  5900K .......... .......... .......... .......... ..........  184M\n  5950K .......... .......... .......... .......... ..........  148M\n  6000K .......... .......... .......... .......... .......... 61.2M\n  6050K .......... .......... .......... .......... .......... 19.8M\n  6100K .......... .......... .......... .......... ..........  197M\n  6150K .......... .......... .......... .......... ..........  595K\n  6200K .......... .......... .......... .......... ..........  107M\n  6250K .......... .......... .......... .......... ..........  212M\n  6300K .......... .......... .......... .......... ..........  178M\n  6350K .......... .......... .......... .......... ..........  152M\n  6400K .......... .......... .......... .......... .......... 17.5M\n  6450K .......... .......... .......... .......... ..........  287M\n  6500K .......... .......... .......... .......... ..........  594K\n  6550K .......... .......... .......... .......... ..........  279M\n  6600K .......... .......... .......... .......... ..........  298M\n  6650K .......... .......... .......... .......... ..........  255M\n  6700K .......... .......... .......... .......... ..........  237M\n  6750K .......... .......... .......... .......... ..........  182M\n  6800K .......... .......... .......... .......... .......... 15.7M\n  6850K .......... .......... .......... .......... ..........  378M\n  6900K .......... .......... .......... .......... ..........  595K\n  6950K .......... .......... .......... .......... ..........  191M\n  7000K .......... .......... .......... .......... ..........  255M\n  7050K .......... .......... .......... .......... ..........  294M\n  7100K .......... .......... .......... .......... ..........  194M\n  7150K .......... .......... .......... .......... ..........  164M\n  7200K .......... .......... .......... .......... .......... 16.9M\n  7250K .......... .......... .......... .......... ..........  208M\n  7300K .......... .......... .......... .......... ..........  592K\n  7350K .......... .......... .......... .......... ..........  187M\n  7400K .......... .......... .......... .......... ..........  165M\n  7450K .......... .......... .......... .......... ..........  188M\n  7500K .......... .......... .......... .......... ..........  175M\n  7550K .......... .......... .......... .......... ..........  203M\n  7600K .......... .......... .......... .......... .......... 21.5M\n  7650K .......... .......... .......... .......... ..........  194M\n  7700K .......... .......... .......... .......... ..........  593K\n  7750K .......... .......... .......... .......... ..........  147M\n  7800K .......... .......... .......... .......... ..........  240M\n  7850K .......... .......... .......... .......... ..........  264M\n  7900K .......... .......... .......... .......... ..........  288M\n  7950K .......... .......... .......... .......... ..........  365M\n  8000K .......... .......... .......... .......... .......... 18.2M\n  8050K .......... .......... .......... .......... ..........  269M\n  8100K .......... .......... .......... .......... ..........  380M\n  8150K .......... .......... .......... .......... ..........  591K\n  8200K .......... .......... .......... .......... ..........  251M\n  8250K .......... .......... .......... .......... ..........  253M\n  8300K .......... .......... .......... .......... ..........  303M\n  8350K .......... .......... .......... .......... ..........  320M\n  8400K .......... .......... .......... .......... ..........  260M\n  8450K .......... .......... .......... .......... .......... 18.9M\n  8500K .......... .......... .......... .......... ..........  251M\n  8550K .......... .......... .......... .......... ..........  370M\n  8600K .......... .......... .......... .......... ..........  589K\n  8650K .......... .......... .......... .......... ..........  244M\n  8700K .......... .......... .......... .......... ..........  196M\n  8750K .......... .......... .......... .......... ..........  299M\n  8800K .......... .......... .......... .......... ..........  305M\n  8850K .......... .......... .......... .......... ..........  325M\n  8900K .......... .......... .......... .......... .......... 19.2M\n  8950K .......... .......... .......... .......... ..........  253M\n  9000K .......... .......... .......... .......... ..........  188M\n  9050K .......... .......... .......... .......... ..........  594K\n  9100K .......... .......... .......... .......... ..........  210M\n  9150K .......... .......... .......... .......... ..........  202M\n  9200K .......... .......... .......... .......... ..........  231M\n  9250K .......... .......... .......... .......... ..........  298M\n  9300K .......... .......... .......... .......... ..........  264M\n  9350K .......... .......... .......... .......... .......... 21.1M\n  9400K .......... .......... .......... .......... ..........  214M\n  9450K .......... .......... .......... .......... ..........  267M\n  9500K .......... .......... .......... .......... ..........  590K\n  9550K .......... .......... .......... .......... ..........  246M\n  9600K .......... .......... .......... .......... ..........  134M\n  9650K .......... .......... .......... .......... ..........  165M\n  9700K .......... .......... .......... .......... ..........  214M\n  9750K .......... .......... .......... .......... ..........  208M\n  9800K .......... .......... .......... .......... ..........  141M\n  9850K .......... .......... .......... .......... .......... 24.9M\n  9900K .......... .......... .......... .......... ..........  143M\n  9950K .......... .......... .......... .......... ..........  593K\n 10000K .......... .......... .......... .......... ..........  151M\n 10050K .......... .......... .......... .......... ..........  152M\n 10100K .......... .......... .......... .......... ..........  311M\n 10150K .......... .......... .......... .......... ..........  371M\n 10200K .......... .......... .......... .......... ..........  272M\n 10250K .......... .......... .......... .......... ..........  334M\n 10300K .......... .......... .......... .......... .......... 22.8M\n 10350K .......... .......... .......... .......... ..........  163M\n 10400K .......... .......... .......... .......... ..........  344M\n 10450K .......... .......... .......... .......... ..........  587K\n 10500K .......... .......... .......... .......... ..........  173M\n 10550K .......... .......... .......... .......... ..........  124M\n 10600K .......... .......... .......... .......... ..........  348M\n 10650K .......... .......... .......... .......... ..........  340M\n 10700K .......... .......... .......... .......... ..........  326M\n 10750K .......... .......... .......... .......... ..........  308M\n 10800K .......... .......... .......... .......... .......... 25.3M\n 10850K .......... .......... .......... .......... ..........  281M\n 10900K .......... .......... .......... .......... ..........  377M\n 10950K .......... .......... .......... .......... ..........  589K\n 11000K .......... .......... .......... .......... ..........  181M\n 11050K .......... .......... .......... .......... ..........  302M\n 11100K .......... .......... .......... .......... ..........  331M\n 11150K .......... .......... .......... .......... ..........  369M\n 11200K .......... .......... .......... .......... ..........  288M\n 11250K .......... .......... .......... .......... ..........  295M\n 11300K .......... .......... .......... .......... ..........  303M\n 11350K .......... .......... .......... .......... .......... 26.5M\n 11400K .......... .......... .......... .......... ..........  218M\n 11450K .......... .......... .......... .......... ..........  309M\n 11500K .......... .......... .......... .......... ..........  587K\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.60M\n 50150K .......... .......... .......... .......... .......... 4.71M\n 50200K .......... .......... .......... .......... .......... 4.59M\n 50250K .......... .......... .......... .......... .......... 8.73M\n 50300K .......... .......... .......... .......... .......... 4.41M\n 50350K .......... .......... .......... .......... .......... 4.64M\n 50400K .......... .......... .......... .......... .......... 4.68M\n 50450K .......... .......... .......... .......... .......... 8.37M\n 50500K .......... .......... .......... .......... .......... 4.47M\n 50550K .......... .......... .......... .......... .......... 4.74M\n 50600K .......... .......... .......... .......... .......... 4.44M\n 50650K .......... .......... .......... .......... .......... 9.91M\n 50700K .......... .......... .......... .......... .......... 4.24M\n 50750K .......... .......... .......... .......... .......... 4.83M\n 50800K .......... .......... .......... .......... .......... 4.62M\n 50850K .......... .......... .......... .......... .......... 8.53M\n 50900K .......... .......... .......... .......... .......... 4.52M\n 50950K .......... .......... .......... .......... .......... 4.53M\n 51000K .......... .......... .......... .......... .......... 4.41M\n 51050K .......... .......... .......... .......... .......... 8.39M\n 51100K .......... .......... .......... .......... .......... 4.75M\n 51150K .......... .......... .......... .......... .......... 4.30M\n 51200K .......... .......... .......... .......... .......... 4.64M\n 51250K .......... .......... .......... .......... .......... 4.10M\n 51300K .......... .......... .......... .......... .......... 11.7M\n 51350K .......... .......... .......... .......... .......... 4.26M\n 51400K .......... .......... .......... .......... .......... 4.20M\n 51450K .......... .......... .......... .......... .......... 5.67M\n 51500K .......... .......... .......... .......... .......... 8.28M\n 51550K .......... .......... .......... .......... .......... 4.79M\n 51600K .......... .......... .......... .......... .......... 4.10M\n 51650K .......... .......... .......... .......... .......... 5.06M\n 51700K .......... .......... .......... .......... .......... 4.48M\n 51750K .......... .......... .......... .......... .......... 8.99M\n 51800K .......... .......... .......... .......... .......... 4.70M\n 51850K .......... .......... .......... .......... .......... 4.60M\n 51900K .......... .......... .......... .......... .......... 4.62M\n 51950K .......... .......... .......... .......... .......... 8.77M\n 52000K .......... .......... .......... .......... .......... 4.60M\n 52050K .......... .......... .......... .......... .......... 4.58M\n 52100K .......... .......... .......... .......... .......... 4.43M\n 52150K .......... .......... .......... .......... .......... 9.23M\n 52200K .......... .......... .......... .......... .......... 4.28M\n 52250K .......... .......... .......... .......... .......... 4.60M\n 52300K .......... .......... .......... .......... .......... 4.94M\n 52350K .......... .......... .......... .......... .......... 5.82M\n 52400K .......... .......... .......... .......... .......... 5.73M\n 52450K .......... .......... .......... .......... .......... 5.00M\n 52500K .......... .......... .......... .......... .......... 4.55M\n 52550K .......... .......... .......... .......... .......... 8.93M\n 52600K .......... .......... .......... .......... .......... 4.35M\n 52650K .......... .......... .......... .......... .......... 4.77M\n 52700K .......... .......... .......... .......... .......... 4.63M\n 52750K .......... .......... .......... .......... .......... 8.87M\n 52800K .......... .......... .......... .......... .......... 4.50M\n 52850K .......... .......... .......... .......... .......... 4.28M\n 52900K .......... .......... .......... .......... .......... 4.05M\n 52950K .......... .......... .......... .......... .......... 12.6M\n 53000K .......... .......... .......... .......... .......... 4.52M\n 53050K .......... .......... .......... .......... .......... 4.77M\n 53100K .......... .......... .......... .......... .......... 4.62M\n 53150K .......... .......... .......... .......... .......... 8.38M\n 53200K .......... .......... .......... .......... .......... 4.09M\n 53250K .......... .......... .......... .......... .......... 4.89M\n 53300K .......... .......... .......... .......... .......... 4.31M\n 53350K .......... .......... .......... .......... .......... 7.66M\n 53400K .......... .......... .......... .......... .......... 4.49M\n 53450K .......... .......... .......... .......... .......... 4.77M\n 53500K .......... .......... .......... .......... .......... 4.60M\n 53550K .......... .......... .......... .......... .......... 7.35M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... .......... 4.58M\n 53700K .......... .......... .......... .......... .......... 3.14M\n 53750K .......... .......... .......... .......... .......... 12.3M\n 53800K .......... .......... .......... .......... .......... 5.03M\n 53850K .......... .......... .......... .......... .......... 4.09M\n 53900K .......... .......... .......... .......... .......... 4.64M\n 53950K .......... .......... .......... .......... .......... 5.13M\n 54000K .......... .......... .......... .......... .......... 8.26M\n 54050K .......... .......... .......... .......... .......... 4.52M\n 54100K .......... .......... .......... .......... .......... 4.19M\n 54150K .......... .......... .......... .......... .......... 4.96M\n 54200K .......... .......... .......... .......... .......... 8.06M\n 54250K .......... .......... .......... .......... .......... 4.76M\n 54300K .......... .......... .......... .......... .......... 4.45M\n 54350K .......... .......... .......... .......... .......... 4.46M\n 54400K .......... .......... .......... .......... .......... 9.40M\n 54450K .......... .......... .......... .......... .......... 4.25M\n 54500K .......... .......... .......... .......... .......... 4.77M\n 54550K .......... .......... .......... .......... .......... 4.61M\n 54600K .......... .......... .......... .......... .......... 8.24M\n 54650K .......... .......... .......... .......... .......... 4.78M\n 54700K .......... .......... .......... .......... .......... 4.56M\n 54750K .......... .......... .......... .......... .......... 4.47M\n 54800K .......... .......... .......... .......... .......... 8.80M\n 54850K .......... .......... .......... .......... .......... 4.49M\n 54900K .......... .......... .......... .......... .......... 3.78M\n 54950K .......... .......... .......... .......... .......... 5.85M\n 55000K .......... .......... .......... .......... .......... 9.36M\n 55050K .......... .......... .......... .......... .......... 2.97M\n 55100K .......... .......... .......... .......... .......... 9.44M\n 55150K .......... .......... .......... .......... .......... 4.65M\n 55200K .......... .......... .......... .......... .......... 3.58M\n 55250K .......... .......... .......... .......... .......... 13.3M\n 55300K .......... .......... .......... .......... .......... 4.64M\n 55350K .......... .......... .......... .......... .......... 4.29M\n 55400K .......... .......... .......... .......... .......... 4.90M\n 55450K .......... .......... .......... .......... .......... 8.72M\n 55500K .......... .......... .......... .......... .......... 4.46M\n 55550K .......... .......... .......... .......... .......... 4.58M\n 55600K .......... .......... .......... .......... .......... 4.66M\n 55650K .......... .......... .......... .......... .......... 7.60M\n 55700K .......... .......... .......... .......... .......... 4.81M\n 55750K .......... .......... .......... .......... .......... 4.72M\n 55800K .......... .......... .......... .......... .......... 4.56M\n 55850K .......... .......... .......... .......... .......... 7.99M\n 55900K .......... .......... .......... .......... .......... 4.75M\n 55950K .......... .......... .......... .......... .......... 4.27M\n 56000K .......... .......... .......... .......... .......... 4.87M\n 56050K .......... .......... .......... .......... .......... 8.24M\n 56100K .......... .......... .......... .......... .......... 4.74M\n 56150K .......... .......... .......... .......... .......... 4.26M\n 56200K .......... .......... .......... .......... .......... 5.14M\n 56250K .......... .......... .......... .......... .......... 8.71M\n 56300K .......... .......... .......... .......... .......... 4.61M\n 56350K .......... .......... .......... .......... .......... 4.54M\n 56400K .......... .......... .......... .......... .......... 4.40M\n 56450K .......... .......... .......... .......... .......... 8.46M\n 56500K .......... .......... .......... .......... .......... 4.69M\n 56550K .......... .......... .......... .......... .......... 4.72M\n 56600K .......... .......... .......... .......... .......... 4.59M\n 56650K .......... .......... .......... .......... .......... 8.67M\n 56700K .......... .......... .......... .......... .......... 4.74M\n 56750K .......... .......... .......... .......... .......... 4.52M\n 56800K .......... .......... .......... .......... .......... 3.98M\n 56850K .......... .......... .......... .......... .......... 5.21M\n 56900K .......... .......... .......... .......... .......... 8.27M\n 56950K .......... .......... .......... .......... .......... 4.56M\n 57000K .......... .......... .......... .......... .......... 4.63M\n 57050K .......... .......... .......... .......... .......... 4.56M\n 57100K .......... .......... .......... .......... .......... 8.37M\n 57150K .......... .......... .......... .......... .......... 4.65M\n 57200K .......... .......... .......... .......... .......... 4.60M\n 57250K .......... .......... .......... .......... .......... 8.69M\n 57300K .......... .......... .......... .......... .......... 4.47M\n 57350K .......... .......... .......... .......... .......... 4.54M\n 57400K .......... .......... .......... .......... .......... 4.80M\n 57450K .......... .......... .......... .......... .......... 7.05M\n 57500K .......... .......... .......... .......... .......... 5.29M\n 57550K .......... .......... .......... .......... .......... 3.88M\n 57600K .......... .......... .......... .......... .......... 5.50M\n 57650K .......... .......... .......... .......... .......... 7.38M\n 57700K .......... .......... .......... .......... .......... 5.30M\n 57750K .......... .......... .......... .......... .......... 4.23M\n 57800K .......... .......... .......... .......... .......... 3.73M\n 57850K .......... .......... .......... .......... .......... 14.6M\n 57900K .......... .......... .......... .......... .......... 4.52M\n 57950K .......... .......... .......... .......... .......... 4.70M\n 58000K .......... .......... .......... .......... .......... 4.44M\n 58050K .......... .......... .......... .......... .......... 9.33M\n 58100K .......... .......... .......... .......... .......... 4.57M\n 58150K .......... .......... .......... .......... .......... 3.97M\n 58200K .......... .......... .......... .......... .......... 5.33M\n 58250K .......... .......... .......... .......... .......... 7.03M\n 58300K .......... .......... .......... .......... .......... 5.44M\n 58350K .......... .......... .......... .......... .......... 4.39M\n 58400K .......... .......... .......... .......... .......... 4.36M\n 58450K .......... .......... .......... .......... .......... 7.37M\n 58500K .......... .......... .......... .......... .......... 5.68M\n 58550K .......... .......... .......... .......... .......... 4.53M\n 58600K .......... .......... .......... .......... .......... 4.38M\n 58650K .......... .......... .......... .......... .......... 9.57M\n 58700K .......... .......... .......... .......... .......... 4.69M\n 58750K .......... .......... .......... .......... .......... 4.32M\n 58800K .......... .......... .......... .......... .......... 4.51M\n 58850K .......... .......... .......... .......... .......... 7.60M\n 58900K .......... .......... .......... .......... .......... 4.70M\n 58950K .......... .......... .......... .......... .......... 4.59M\n 59000K .......... .......... .......... .......... .......... 4.55M\n 59050K .......... .......... .......... .......... .......... 4.61M\n 59100K .......... .......... .......... .......... .......... 8.33M\n 59150K .......... .......... .......... .......... .......... 4.55M\n 59200K .......... .......... .......... .......... .......... 4.30M\n 59250K .......... .......... .......... .......... .......... 3.92M\n 59300K .......... .......... .......... .......... .......... 6.07M\n 59350K .......... .......... .......... .......... .......... 7.99M\n 59400K .......... .......... .......... .......... .......... 4.57M\n 59450K .......... .......... .......... .......... .......... 4.49M\n 59500K .......... .......... .......... .......... .......... 4.72M\n 59550K .......... .......... .......... .......... .......... 8.66M\n 59600K .......... .......... .......... .......... .......... 4.50M\n 59650K .......... .......... .......... .......... .......... 4.59M\n 59700K .......... .......... .......... .......... .......... 4.66M\n 59750K .......... .......... .......... .......... .......... 8.20M\n 59800K .......... .......... .......... .......... .......... 4.55M\n 59850K .......... .......... .......... .......... .......... 4.65M\n 59900K .......... .......... .......... .......... .......... 4.41M\n 59950K .......... .......... .......... .......... .......... 8.25M\n 60000K .......... .......... .......... .......... .......... 4.72M\n 60050K .......... .......... .......... .......... .......... 4.50M\n 60100K .......... .......... .......... .......... .......... 4.28M\n 60150K .......... .......... .......... .......... .......... 9.45M\n 60200K .......... .......... .......... .......... .......... 4.53M\n 60250K .......... .......... .......... .......... .......... 4.72M\n 60300K .......... .......... .......... .......... .......... 4.30M\n 60350K .......... .......... .......... .......... .......... 9.45M\n 60400K .......... .......... .......... .......... .......... 4.47M\n 60450K .......... .......... .......... .......... .......... 3.84M\n 60500K .......... .......... .......... .......... .......... 5.19M\n 60550K .......... .......... .......... .......... .......... 9.74M\n 60600K .......... .......... .......... .......... .......... 2.49M\n 60650K .......... .........                                   38.5M=15s\n\n2024-03-11 19:01:54 (4.04 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-03-11 19:01:57--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  187K 4s\n    50K .......... .......... .......... .......... .......... 12%  281K 3s\n   100K .......... .......... .......... .......... .......... 18%  281K 3s\n   150K .......... .......... .......... .......... .......... 24%  559K 2s\n   200K .......... .......... .......... .......... .......... 30%  560K 2s\n   250K .......... .......... .......... .......... .......... 36%  561K 2s\n   300K .......... .......... .......... .......... .......... 42%  562K 1s\n   350K .......... .......... .......... .......... .......... 48%  559K 1s\n   400K .......... .......... .......... .......... .......... 54%  561K 1s\n   450K .......... .......... .......... .......... .......... 60%  563K 1s\n   500K .......... .......... .......... .......... .......... 66% 90.2M 1s\n   550K .......... .......... .......... .......... .......... 72%  562K 1s\n   600K .......... .......... .......... .......... .......... 78%  560K 0s\n   650K .......... .......... .......... .......... .......... 84%  319M 0s\n   700K .......... .......... .......... .......... .......... 90%  561K 0s\n   750K .......... .......... .......... .......... .......... 96%  560K 0s\n   800K .......... .......... .......                         100%  157M=1.6s\n\n2024-03-11 19:01:59 (516 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-03-11 19:01:38--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  283K\n    50K .......... .......... .......... .......... ..........  282K\n   100K .......... .......... .......... .......... ..........  283K\n   150K .......... .......... .......... .......... ..........  283K\n   200K .......... .......... .......... .......... ..........  566K\n   250K .......... .......... .......... .......... ..........  546K\n   300K .......... .......... .......... .......... ..........  568K\n   350K .......... .......... .......... .......... ..........  568K\n   400K .......... .......... .......... .......... ..........  286K\n   450K .......... .......... .......... .......... .......... 37.9M\n   500K .......... .......... .......... .......... ..........  569K\n   550K .......... .......... .......... .......... ..........  565K\n   600K .......... .......... .......... .......... ..........  566K\n   650K .......... .......... .......... .......... .......... 18.6M\n   700K .......... .......... .......... .......... ..........  581K\n   750K .......... .......... .......... .......... ..........  567K\n   800K .......... .......... .......... .......... .......... 19.8M\n   850K .......... .......... .......... .......... ..........  580K\n   900K .......... .......... .......... .......... .......... 20.0M\n   950K .......... .......... .......... .......... ..........  582K\n  1000K .......... .......... .......... .......... .......... 20.6M\n  1050K .......... .......... .......... .......... ..........  580K\n  1100K .......... .......... .......... .......... .......... 23.8M\n  1150K .......... .......... .......... .......... ..........  575K\n  1200K .......... .......... .......... .......... .......... 31.5M\n  1250K .......... .......... .......... .......... ..........  576K\n  1300K .......... .......... .......... .......... .......... 27.4M\n  1350K .......... .......... .......... .......... ..........  577K\n  1400K .......... .......... .......... .......... .......... 46.0M\n  1450K .......... .......... .......... .......... .......... 35.0M\n  1500K .......... .......... .......... .......... ..........  580K\n  1550K .......... .......... .......... .......... .......... 16.3M\n  1600K .......... .......... .......... .......... ..........  585K\n  1650K .......... .......... .......... .......... .......... 24.8M\n  1700K .......... .......... .......... .......... ..........  580K\n  1750K .......... .......... .......... .......... .......... 88.1M\n  1800K .......... .......... .......... .......... .......... 19.5M\n  1850K .......... .......... .......... .......... ..........  587K\n  1900K .......... .......... .......... .......... .......... 97.9M\n  1950K .......... .......... .......... .......... .......... 17.8M\n  2000K .......... .......... .......... .......... ..........  587K\n  2050K .......... .......... .......... .......... .......... 94.8M\n  2100K .......... .......... .......... .......... .......... 16.4M\n  2150K .......... .......... .......... .......... ..........  591K\n  2200K .......... .......... .......... .......... .......... 55.1M\n  2250K .......... .......... .......... .......... .......... 22.4M\n  2300K .......... .......... .......... .......... .......... 48.2M\n  2350K .......... .......... .......... .......... ..........  588K\n  2400K .......... .......... .......... .......... .......... 16.9M\n  2450K .......... .......... .......... .......... .......... 64.6M\n  2500K .......... .......... .......... .......... ..........  592K\n  2550K .......... .......... .......... .......... .......... 84.5M\n  2600K .......... .......... .......... .......... .......... 17.8M\n  2650K .......... .......... .......... .......... .......... 58.3M\n  2700K .......... .......... .......... .......... ..........  590K\n  2750K .......... .......... .......... .......... ..........  185M\n  2800K .......... .......... .......... .......... .......... 17.7M\n  2850K .......... .......... .......... .......... ..........  587K\n  2900K .......... .......... .......... .......... ..........  160M\n  2950K .......... .......... .......... .......... ..........  281M\n  3000K .......... .......... .......... .......... .......... 18.4M\n  3050K .......... .......... .......... .......... ..........  586K\n  3100K .......... .......... .......... .......... ..........  252M\n  3150K .......... .......... .......... .......... ..........  161M\n  3200K .......... .......... .......... .......... .......... 17.3M\n  3250K .......... .......... .......... .......... ..........  587K\n  3300K .......... .......... .......... .......... ..........  179M\n  3350K .......... .......... .......... .......... ..........  180M\n  3400K .......... .......... .......... .......... .......... 30.3M\n  3450K .......... .......... .......... .......... .......... 39.3M\n  3500K .......... .......... .......... .......... ..........  587K\n  3550K .......... .......... .......... .......... ..........  135M\n  3600K .......... .......... .......... .......... .......... 36.1M\n  3650K .......... .......... .......... .......... .......... 39.5M\n  3700K .......... .......... .......... .......... .......... 32.2M\n  3750K .......... .......... .......... .......... ..........  594K\n  3800K .......... .......... .......... .......... .......... 77.7M\n  3850K .......... .......... .......... .......... .......... 76.8M\n  3900K .......... .......... .......... .......... .......... 21.5M\n  3950K .......... .......... .......... .......... .......... 49.5M\n  4000K .......... .......... .......... .......... ..........  595K\n  4050K .......... .......... .......... .......... .......... 85.4M\n  4100K .......... .......... .......... .......... .......... 81.6M\n  4150K .......... .......... .......... .......... .......... 24.1M\n  4200K .......... .......... .......... .......... ..........  218M\n  4250K .......... .......... .......... .......... ..........  588K\n  4300K .......... .......... .......... .......... ..........  260M\n  4350K .......... .......... .......... .......... .......... 72.7M\n  4400K .......... .......... .......... .......... .......... 35.7M\n  4450K .......... .......... .......... .......... .......... 40.4M\n  4500K .......... .......... .......... .......... ..........  589K\n  4550K .......... .......... .......... .......... ..........  182M\n  4600K .......... .......... .......... .......... ..........  148M\n  4650K .......... .......... .......... .......... ..........  222M\n  4700K .......... .......... .......... .......... .......... 37.2M\n  4750K .......... .......... .......... .......... .......... 22.3M\n  4800K .......... .......... .......... .......... ..........  595K\n  4850K .......... .......... .......... .......... .......... 98.2M\n  4900K .......... .......... .......... .......... ..........  126M\n  4950K .......... .......... .......... .......... ..........  255M\n  5000K .......... .......... .......... .......... .......... 61.5M\n  5050K .......... .......... .......... .......... .......... 19.9M\n  5100K .......... .......... .......... .......... ..........  128M\n  5150K .......... .......... .......... .......... ..........  595K\n  5200K .......... .......... .......... .......... ..........  164M\n  5250K .......... .......... .......... .......... ..........  127M\n  5300K .......... .......... .......... .......... .......... 98.3M\n  5350K .......... .......... .......... .......... .......... 19.0M\n  5400K .......... .......... .......... .......... .......... 81.3M\n  5450K .......... .......... .......... .......... ..........  594K\n  5500K .......... .......... .......... .......... ..........  179M\n  5550K .......... .......... .......... .......... ..........  283M\n  5600K .......... .......... .......... .......... ..........  329M\n  5650K .......... .......... .......... .......... .......... 44.5M\n  5700K .......... .......... .......... .......... .......... 19.0M\n  5750K .......... .......... .......... .......... ..........  318M\n  5800K .......... .......... .......... .......... ..........  595K\n  5850K .......... .......... .......... .......... ..........  225M\n  5900K .......... .......... .......... .......... ..........  184M\n  5950K .......... .......... .......... .......... ..........  148M\n  6000K .......... .......... .......... .......... .......... 61.2M\n  6050K .......... .......... .......... .......... .......... 19.8M\n  6100K .......... .......... .......... .......... ..........  197M\n  6150K .......... .......... .......... .......... ..........  595K\n  6200K .......... .......... .......... .......... ..........  107M\n  6250K .......... .......... .......... .......... ..........  212M\n  6300K .......... .......... .......... .......... ..........  178M\n  6350K .......... .......... .......... .......... ..........  152M\n  6400K .......... .......... .......... .......... .......... 17.5M\n  6450K .......... .......... .......... .......... ..........  287M\n  6500K .......... .......... .......... .......... ..........  594K\n  6550K .......... .......... .......... .......... ..........  279M\n  6600K .......... .......... .......... .......... ..........  298M\n  6650K .......... .......... .......... .......... ..........  255M\n  6700K .......... .......... .......... .......... ..........  237M\n  6750K .......... .......... .......... .......... ..........  182M\n  6800K .......... .......... .......... .......... .......... 15.7M\n  6850K .......... .......... .......... .......... ..........  378M\n  6900K .......... .......... .......... .......... ..........  595K\n  6950K .......... .......... .......... .......... ..........  191M\n  7000K .......... .......... .......... .......... ..........  255M\n  7050K .......... .......... .......... .......... ..........  294M\n  7100K .......... .......... .......... .......... ..........  194M\n  7150K .......... .......... .......... .......... ..........  164M\n  7200K .......... .......... .......... .......... .......... 16.9M\n  7250K .......... .......... .......... .......... ..........  208M\n  7300K .......... .......... .......... .......... ..........  592K\n  7350K .......... .......... .......... .......... ..........  187M\n  7400K .......... .......... .......... .......... ..........  165M\n  7450K .......... .......... .......... .......... ..........  188M\n  7500K .......... .......... .......... .......... ..........  175M\n  7550K .......... .......... .......... .......... ..........  203M\n  7600K .......... .......... .......... .......... .......... 21.5M\n  7650K .......... .......... .......... .......... ..........  194M\n  7700K .......... .......... .......... .......... ..........  593K\n  7750K .......... .......... .......... .......... ..........  147M\n  7800K .......... .......... .......... .......... ..........  240M\n  7850K .......... .......... .......... .......... ..........  264M\n  7900K .......... .......... .......... .......... ..........  288M\n  7950K .......... .......... .......... .......... ..........  365M\n  8000K .......... .......... .......... .......... .......... 18.2M\n  8050K .......... .......... .......... .......... ..........  269M\n  8100K .......... .......... .......... .......... ..........  380M\n  8150K .......... .......... .......... .......... ..........  591K\n  8200K .......... .......... .......... .......... ..........  251M\n  8250K .......... .......... .......... .......... ..........  253M\n  8300K .......... .......... .......... .......... ..........  303M\n  8350K .......... .......... .......... .......... ..........  320M\n  8400K .......... .......... .......... .......... ..........  260M\n  8450K .......... .......... .......... .......... .......... 18.9M\n  8500K .......... .......... .......... .......... ..........  251M\n  8550K .......... .......... .......... .......... ..........  370M\n  8600K .......... .......... .......... .......... ..........  589K\n  8650K .......... .......... .......... .......... ..........  244M\n  8700K .......... .......... .......... .......... ..........  196M\n  8750K .......... .......... .......... .......... ..........  299M\n  8800K .......... .......... .......... .......... ..........  305M\n  8850K .......... .......... .......... .......... ..........  325M\n  8900K .......... .......... .......... .......... .......... 19.2M\n  8950K .......... .......... .......... .......... ..........  253M\n  9000K .......... .......... .......... .......... ..........  188M\n  9050K .......... .......... .......... .......... ..........  594K\n  9100K .......... .......... .......... .......... ..........  210M\n  9150K .......... .......... .......... .......... ..........  202M\n  9200K .......... .......... .......... .......... ..........  231M\n  9250K .......... .......... .......... .......... ..........  298M\n  9300K .......... .......... .......... .......... ..........  264M\n  9350K .......... .......... .......... .......... .......... 21.1M\n  9400K .......... .......... .......... .......... ..........  214M\n  9450K .......... .......... .......... .......... ..........  267M\n  9500K .......... .......... .......... .......... ..........  590K\n  9550K .......... .......... .......... .......... ..........  246M\n  9600K .......... .......... .......... .......... ..........  134M\n  9650K .......... .......... .......... .......... ..........  165M\n  9700K .......... .......... .......... .......... ..........  214M\n  9750K .......... .......... .......... .......... ..........  208M\n  9800K .......... .......... .......... .......... ..........  141M\n  9850K .......... .......... .......... .......... .......... 24.9M\n  9900K .......... .......... .......... .......... ..........  143M\n  9950K .......... .......... .......... .......... ..........  593K\n 10000K .......... .......... .......... .......... ..........  151M\n 10050K .......... .......... .......... .......... ..........  152M\n 10100K .......... .......... .......... .......... ..........  311M\n 10150K .......... .......... .......... .......... ..........  371M\n 10200K .......... .......... .......... .......... ..........  272M\n 10250K .......... .......... .......... .......... ..........  334M\n 10300K .......... .......... .......... .......... .......... 22.8M\n 10350K .......... .......... .......... .......... ..........  163M\n 10400K .......... .......... .......... .......... ..........  344M\n 10450K .......... .......... .......... .......... ..........  587K\n 10500K .......... .......... .......... .......... ..........  173M\n 10550K .......... .......... .......... .......... ..........  124M\n 10600K .......... .......... .......... .......... ..........  348M\n 10650K .......... .......... .......... .......... ..........  340M\n 10700K .......... .......... .......... .......... ..........  326M\n 10750K .......... .......... .......... .......... ..........  308M\n 10800K .......... .......... .......... .......... .......... 25.3M\n 10850K .......... .......... .......... .......... ..........  281M\n 10900K .......... .......... .......... .......... ..........  377M\n 10950K .......... .......... .......... .......... ..........  589K\n 11000K .......... .......... .......... .......... ..........  181M\n 11050K .......... .......... .......... .......... ..........  302M\n 11100K .......... .......... .......... .......... ..........  331M\n 11150K .......... .......... .......... .......... ..........  369M\n 11200K .......... .......... .......... .......... ..........  288M\n 11250K .......... .......... .......... .......... ..........  295M\n 11300K .......... .......... .......... .......... ..........  303M\n 11350K .......... .......... .......... .......... .......... 26.5M\n 11400K .......... .......... .......... .......... ..........  218M\n 11450K .......... .......... .......... .......... ..........  309M\n 11500K .......... .......... .......... .......... ..........  587K\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.60M\n 50150K .......... .......... .......... .......... .......... 4.71M\n 50200K .......... .......... .......... .......... .......... 4.59M\n 50250K .......... .......... .......... .......... .......... 8.73M\n 50300K .......... .......... .......... .......... .......... 4.41M\n 50350K .......... .......... .......... .......... .......... 4.64M\n 50400K .......... .......... .......... .......... .......... 4.68M\n 50450K .......... .......... .......... .......... .......... 8.37M\n 50500K .......... .......... .......... .......... .......... 4.47M\n 50550K .......... .......... .......... .......... .......... 4.74M\n 50600K .......... .......... .......... .......... .......... 4.44M\n 50650K .......... .......... .......... .......... .......... 9.91M\n 50700K .......... .......... .......... .......... .......... 4.24M\n 50750K .......... .......... .......... .......... .......... 4.83M\n 50800K .......... .......... .......... .......... .......... 4.62M\n 50850K .......... .......... .......... .......... .......... 8.53M\n 50900K .......... .......... .......... .......... .......... 4.52M\n 50950K .......... .......... .......... .......... .......... 4.53M\n 51000K .......... .......... .......... .......... .......... 4.41M\n 51050K .......... .......... .......... .......... .......... 8.39M\n 51100K .......... .......... .......... .......... .......... 4.75M\n 51150K .......... .......... .......... .......... .......... 4.30M\n 51200K .......... .......... .......... .......... .......... 4.64M\n 51250K .......... .......... .......... .......... .......... 4.10M\n 51300K .......... .......... .......... .......... .......... 11.7M\n 51350K .......... .......... .......... .......... .......... 4.26M\n 51400K .......... .......... .......... .......... .......... 4.20M\n 51450K .......... .......... .......... .......... .......... 5.67M\n 51500K .......... .......... .......... .......... .......... 8.28M\n 51550K .......... .......... .......... .......... .......... 4.79M\n 51600K .......... .......... .......... .......... .......... 4.10M\n 51650K .......... .......... .......... .......... .......... 5.06M\n 51700K .......... .......... .......... .......... .......... 4.48M\n 51750K .......... .......... .......... .......... .......... 8.99M\n 51800K .......... .......... .......... .......... .......... 4.70M\n 51850K .......... .......... .......... .......... .......... 4.60M\n 51900K .......... .......... .......... .......... .......... 4.62M\n 51950K .......... .......... .......... .......... .......... 8.77M\n 52000K .......... .......... .......... .......... .......... 4.60M\n 52050K .......... .......... .......... .......... .......... 4.58M\n 52100K .......... .......... .......... .......... .......... 4.43M\n 52150K .......... .......... .......... .......... .......... 9.23M\n 52200K .......... .......... .......... .......... .......... 4.28M\n 52250K .......... .......... .......... .......... .......... 4.60M\n 52300K .......... .......... .......... .......... .......... 4.94M\n 52350K .......... .......... .......... .......... .......... 5.82M\n 52400K .......... .......... .......... .......... .......... 5.73M\n 52450K .......... .......... .......... .......... .......... 5.00M\n 52500K .......... .......... .......... .......... .......... 4.55M\n 52550K .......... .......... .......... .......... .......... 8.93M\n 52600K .......... .......... .......... .......... .......... 4.35M\n 52650K .......... .......... .......... .......... .......... 4.77M\n 52700K .......... .......... .......... .......... .......... 4.63M\n 52750K .......... .......... .......... .......... .......... 8.87M\n 52800K .......... .......... .......... .......... .......... 4.50M\n 52850K .......... .......... .......... .......... .......... 4.28M\n 52900K .......... .......... .......... .......... .......... 4.05M\n 52950K .......... .......... .......... .......... .......... 12.6M\n 53000K .......... .......... .......... .......... .......... 4.52M\n 53050K .......... .......... .......... .......... .......... 4.77M\n 53100K .......... .......... .......... .......... .......... 4.62M\n 53150K .......... .......... .......... .......... .......... 8.38M\n 53200K .......... .......... .......... .......... .......... 4.09M\n 53250K .......... .......... .......... .......... .......... 4.89M\n 53300K .......... .......... .......... .......... .......... 4.31M\n 53350K .......... .......... .......... .......... .......... 7.66M\n 53400K .......... .......... .......... .......... .......... 4.49M\n 53450K .......... .......... .......... .......... .......... 4.77M\n 53500K .......... .......... .......... .......... .......... 4.60M\n 53550K .......... .......... .......... .......... .......... 7.35M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... .......... 4.58M\n 53700K .......... .......... .......... .......... .......... 3.14M\n 53750K .......... .......... .......... .......... .......... 12.3M\n 53800K .......... .......... .......... .......... .......... 5.03M\n 53850K .......... .......... .......... .......... .......... 4.09M\n 53900K .......... .......... .......... .......... .......... 4.64M\n 53950K .......... .......... .......... .......... .......... 5.13M\n 54000K .......... .......... .......... .......... .......... 8.26M\n 54050K .......... .......... .......... .......... .......... 4.52M\n 54100K .......... .......... .......... .......... .......... 4.19M\n 54150K .......... .......... .......... .......... .......... 4.96M\n 54200K .......... .......... .......... .......... .......... 8.06M\n 54250K .......... .......... .......... .......... .......... 4.76M\n 54300K .......... .......... .......... .......... .......... 4.45M\n 54350K .......... .......... .......... .......... .......... 4.46M\n 54400K .......... .......... .......... .......... .......... 9.40M\n 54450K .......... .......... .......... .......... .......... 4.25M\n 54500K .......... .......... .......... .......... .......... 4.77M\n 54550K .......... .......... .......... .......... .......... 4.61M\n 54600K .......... .......... .......... .......... .......... 8.24M\n 54650K .......... .......... .......... .......... .......... 4.78M\n 54700K .......... .......... .......... .......... .......... 4.56M\n 54750K .......... .......... .......... .......... .......... 4.47M\n 54800K .......... .......... .......... .......... .......... 8.80M\n 54850K .......... .......... .......... .......... .......... 4.49M\n 54900K .......... .......... .......... .......... .......... 3.78M\n 54950K .......... .......... .......... .......... .......... 5.85M\n 55000K .......... .......... .......... .......... .......... 9.36M\n 55050K .......... .......... .......... .......... .......... 2.97M\n 55100K .......... .......... .......... .......... .......... 9.44M\n 55150K .......... .......... .......... .......... .......... 4.65M\n 55200K .......... .......... .......... .......... .......... 3.58M\n 55250K .......... .......... .......... .......... .......... 13.3M\n 55300K .......... .......... .......... .......... .......... 4.64M\n 55350K .......... .......... .......... .......... .......... 4.29M\n 55400K .......... .......... .......... .......... .......... 4.90M\n 55450K .......... .......... .......... .......... .......... 8.72M\n 55500K .......... .......... .......... .......... .......... 4.46M\n 55550K .......... .......... .......... .......... .......... 4.58M\n 55600K .......... .......... .......... .......... .......... 4.66M\n 55650K .......... .......... .......... .......... .......... 7.60M\n 55700K .......... .......... .......... .......... .......... 4.81M\n 55750K .......... .......... .......... .......... .......... 4.72M\n 55800K .......... .......... .......... .......... .......... 4.56M\n 55850K .......... .......... .......... .......... .......... 7.99M\n 55900K .......... .......... .......... .......... .......... 4.75M\n 55950K .......... .......... .......... .......... .......... 4.27M\n 56000K .......... .......... .......... .......... .......... 4.87M\n 56050K .......... .......... .......... .......... .......... 8.24M\n 56100K .......... .......... .......... .......... .......... 4.74M\n 56150K .......... .......... .......... .......... .......... 4.26M\n 56200K .......... .......... .......... .......... .......... 5.14M\n 56250K .......... .......... .......... .......... .......... 8.71M\n 56300K .......... .......... .......... .......... .......... 4.61M\n 56350K .......... .......... .......... .......... .......... 4.54M\n 56400K .......... .......... .......... .......... .......... 4.40M\n 56450K .......... .......... .......... .......... .......... 8.46M\n 56500K .......... .......... .......... .......... .......... 4.69M\n 56550K .......... .......... .......... .......... .......... 4.72M\n 56600K .......... .......... .......... .......... .......... 4.59M\n 56650K .......... .......... .......... .......... .......... 8.67M\n 56700K .......... .......... .......... .......... .......... 4.74M\n 56750K .......... .......... .......... .......... .......... 4.52M\n 56800K .......... .......... .......... .......... .......... 3.98M\n 56850K .......... .......... .......... .......... .......... 5.21M\n 56900K .......... .......... .......... .......... .......... 8.27M\n 56950K .......... .......... .......... .......... .......... 4.56M\n 57000K .......... .......... .......... .......... .......... 4.63M\n 57050K .......... .......... .......... .......... .......... 4.56M\n 57100K .......... .......... .......... .......... .......... 8.37M\n 57150K .......... .......... .......... .......... .......... 4.65M\n 57200K .......... .......... .......... .......... .......... 4.60M\n 57250K .......... .......... .......... .......... .......... 8.69M\n 57300K .......... .......... .......... .......... .......... 4.47M\n 57350K .......... .......... .......... .......... .......... 4.54M\n 57400K .......... .......... .......... .......... .......... 4.80M\n 57450K .......... .......... .......... .......... .......... 7.05M\n 57500K .......... .......... .......... .......... .......... 5.29M\n 57550K .......... .......... .......... .......... .......... 3.88M\n 57600K .......... .......... .......... .......... .......... 5.50M\n 57650K .......... .......... .......... .......... .......... 7.38M\n 57700K .......... .......... .......... .......... .......... 5.30M\n 57750K .......... .......... .......... .......... .......... 4.23M\n 57800K .......... .......... .......... .......... .......... 3.73M\n 57850K .......... .......... .......... .......... .......... 14.6M\n 57900K .......... .......... .......... .......... .......... 4.52M\n 57950K .......... .......... .......... .......... .......... 4.70M\n 58000K .......... .......... .......... .......... .......... 4.44M\n 58050K .......... .......... .......... .......... .......... 9.33M\n 58100K .......... .......... .......... .......... .......... 4.57M\n 58150K .......... .......... .......... .......... .......... 3.97M\n 58200K .......... .......... .......... .......... .......... 5.33M\n 58250K .......... .......... .......... .......... .......... 7.03M\n 58300K .......... .......... .......... .......... .......... 5.44M\n 58350K .......... .......... .......... .......... .......... 4.39M\n 58400K .......... .......... .......... .......... .......... 4.36M\n 58450K .......... .......... .......... .......... .......... 7.37M\n 58500K .......... .......... .......... .......... .......... 5.68M\n 58550K .......... .......... .......... .......... .......... 4.53M\n 58600K .......... .......... .......... .......... .......... 4.38M\n 58650K .......... .......... .......... .......... .......... 9.57M\n 58700K .......... .......... .......... .......... .......... 4.69M\n 58750K .......... .......... .......... .......... .......... 4.32M\n 58800K .......... .......... .......... .......... .......... 4.51M\n 58850K .......... .......... .......... .......... .......... 7.60M\n 58900K .......... .......... .......... .......... .......... 4.70M\n 58950K .......... .......... .......... .......... .......... 4.59M\n 59000K .......... .......... .......... .......... .......... 4.55M\n 59050K .......... .......... .......... .......... .......... 4.61M\n 59100K .......... .......... .......... .......... .......... 8.33M\n 59150K .......... .......... .......... .......... .......... 4.55M\n 59200K .......... .......... .......... .......... .......... 4.30M\n 59250K .......... .......... .......... .......... .......... 3.92M\n 59300K .......... .......... .......... .......... .......... 6.07M\n 59350K .......... .......... .......... .......... .......... 7.99M\n 59400K .......... .......... .......... .......... .......... 4.57M\n 59450K .......... .......... .......... .......... .......... 4.49M\n 59500K .......... .......... .......... .......... .......... 4.72M\n 59550K .......... .......... .......... .......... .......... 8.66M\n 59600K .......... .......... .......... .......... .......... 4.50M\n 59650K .......... .......... .......... .......... .......... 4.59M\n 59700K .......... .......... .......... .......... .......... 4.66M\n 59750K .......... .......... .......... .......... .......... 8.20M\n 59800K .......... .......... .......... .......... .......... 4.55M\n 59850K .......... .......... .......... .......... .......... 4.65M\n 59900K .......... .......... .......... .......... .......... 4.41M\n 59950K .......... .......... .......... .......... .......... 8.25M\n 60000K .......... .......... .......... .......... .......... 4.72M\n 60050K .......... .......... .......... .......... .......... 4.50M\n 60100K .......... .......... .......... .......... .......... 4.28M\n 60150K .......... .......... .......... .......... .......... 9.45M\n 60200K .......... .......... .......... .......... .......... 4.53M\n 60250K .......... .......... .......... .......... .......... 4.72M\n 60300K .......... .......... .......... .......... .......... 4.30M\n 60350K .......... .......... .......... .......... .......... 9.45M\n 60400K .......... .......... .......... .......... .......... 4.47M\n 60450K .......... .......... .......... .......... .......... 3.84M\n 60500K .......... .......... .......... .......... .......... 5.19M\n 60550K .......... .......... .......... .......... .......... 9.74M\n 60600K .......... .......... .......... .......... .......... 2.49M\n 60650K .......... .........                                   38.5M=15s\n\n2024-03-11 19:01:54 (4.04 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-03-11 19:01:57--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  187K 4s\n    50K .......... .......... .......... .......... .......... 12%  281K 3s\n   100K .......... .......... .......... .......... .......... 18%  281K 3s\n   150K .......... .......... .......... .......... .......... 24%  559K 2s\n   200K .......... .......... .......... .......... .......... 30%  560K 2s\n   250K .......... .......... .......... .......... .......... 36%  561K 2s\n   300K .......... .......... .......... .......... .......... 42%  562K 1s\n   350K .......... .......... .......... .......... .......... 48%  559K 1s\n   400K .......... .......... .......... .......... .......... 54%  561K 1s\n   450K .......... .......... .......... .......... .......... 60%  563K 1s\n   500K .......... .......... .......... .......... .......... 66% 90.2M 1s\n   550K .......... .......... .......... .......... .......... 72%  562K 1s\n   600K .......... .......... .......... .......... .......... 78%  560K 0s\n   650K .......... .......... .......... .......... .......... 84%  319M 0s\n   700K .......... .......... .......... .......... .......... 90%  561K 0s\n   750K .......... .......... .......... .......... .......... 96%  560K 0s\n   800K .......... .......... .......                         100%  157M=1.6s\n\n2024-03-11 19:01:59 (516 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2024-03-11T19:02:11.200580",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 48.70428395271301, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-03-11 19:01:38--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  283K    50K .......... .......... .......... .......... ..........  282K   100K .......... .......... .......... .......... ..........  283K   150K .......... .......... .......... .......... ..........  283K   200K .......... .......... .......... .......... ..........  566K   250K .......... .......... .......... .......... ..........  546K   300K .......... .......... .......... .......... ..........  568K   350K .......... .......... .......... .......... ..........  568K   400K .......... .......... .......... .......... ..........  286K   450K .......... .......... .......... .......... .......... 37.9M   500K .......... .......... .......... .......... ..........  569K   550K .......... .......... .......... .......... ..........  565K   600K .......... .......... .......... .......... ..........  566K   650K .......... .......... .......... .......... .......... 18.6M   700K .......... .......... .......... .......... ..........  581K   750K .......... .......... .......... .......... ..........  567K   800K .......... .......... .......... .......... .......... 19.8M   850K .......... .......... .......... .......... ..........  580K   900K .......... .......... .......... .......... .......... 20.0M   950K .......... .......... .......... .......... ..........  582K  1000K .......... .......... .......... .......... .......... 20.6M  1050K .......... .......... .......... .......... ..........  580K  1100K .......... .......... .......... .......... .......... 23.8M  1150K .......... .......... .......... .......... ..........  575K  1200K .......... .......... .......... .......... .......... 31.5M  1250K .......... .......... .......... .......... ..........  576K  1300K .......... .......... .......... .......... .......... 27.4M  1350K .......... .......... .......... .......... ..........  577K  1400K .......... .......... .......... .......... .......... 46.0M  1450K .......... .......... .......... .......... .......... 35.0M  1500K .......... .......... .......... .......... ..........  580K  1550K .......... .......... .......... .......... .......... 16.3M  1600K .......... .......... .......... .......... ..........  585K  1650K .......... .......... .......... .......... .......... 24.8M  1700K .......... .......... .......... .......... ..........  580K  1750K .......... .......... .......... .......... .......... 88.1M  1800K .......... .......... .......... .......... .......... 19.5M  1850K .......... .......... .......... .......... ..........  587K  1900K .......... .......... .......... .......... .......... 97.9M  1950K .......... .......... .......... .......... .......... 17.8M  2000K .......... .......... .......... .......... ..........  587K  2050K .......... .......... .......... .......... .......... 94.8M  2100K .......... .......... .......... .......... .......... 16.4M  2150K .......... .......... .......... .......... ..........  591K  2200K .......... .......... .......... .......... .......... 55.1M  2250K .......... .......... .......... .......... .......... 22.4M  2300K .......... .......... .......... .......... .......... 48.2M  2350K .......... .......... .......... .......... ..........  588K  2400K .......... .......... .......... .......... .......... 16.9M  2450K .......... .......... .......... .......... .......... 64.6M  2500K .......... .......... .......... .......... ..........  592K  2550K .......... .......... .......... .......... .......... 84.5M  2600K .......... .......... .......... .......... .......... 17.8M  2650K .......... .......... .......... .......... .......... 58.3M  2700K .......... .......... .......... .......... ..........  590K  2750K .......... .......... .......... .......... ..........  185M  2800K .......... .......... .......... .......... .......... 17.7M  2850K .......... .......... .......... .......... ..........  587K  2900K .......... .......... .......... .......... ..........  160M  2950K .......... .......... .......... .......... ..........  281M  3000K .......... .......... .......... .......... .......... 18.4M  3050K .......... .......... .......... .......... ..........  586K  3100K .......... .......... .......... .......... ..........  252M  3150K .......... .......... .......... .......... ..........  161M  3200K .......... .......... .......... .......... .......... 17.3M  3250K .......... .......... .......... .......... ..........  587K  3300K .......... .......... .......... .......... ..........  179M  3350K .......... .......... .......... .......... ..........  180M  3400K .......... .......... .......... .......... .......... 30.3M  3450K .......... .......... .......... .......... .......... 39.3M  3500K .......... .......... .......... .......... ..........  587K  3550K .......... .......... .......... .......... ..........  135M  3600K .......... .......... .......... .......... .......... 36.1M  3650K .......... .......... .......... .......... .......... 39.5M  3700K .......... .......... .......... .......... .......... 32.2M  3750K .......... .......... .......... .......... ..........  594K  3800K .......... .......... .......... .......... .......... 77.7M  3850K .......... .......... .......... .......... .......... 76.8M  3900K .......... .......... .......... .......... .......... 21.5M  3950K .......... .......... .......... .......... .......... 49.5M  4000K .......... .......... .......... .......... ..........  595K  4050K .......... .......... .......... .......... .......... 85.4M  4100K .......... .......... .......... .......... .......... 81.6M  4150K .......... .......... .......... .......... .......... 24.1M  4200K .......... .......... .......... .......... ..........  218M  4250K .......... .......... .......... .......... ..........  588K  4300K .......... .......... .......... .......... ..........  260M  4350K .......... .......... .......... .......... .......... 72.7M  4400K .......... .......... .......... .......... .......... 35.7M  4450K .......... .......... .......... .......... .......... 40.4M  4500K .......... .......... .......... .......... ..........  589K  4550K .......... .......... .......... .......... ..........  182M  4600K .......... .......... .......... .......... ..........  148M  4650K .......... .......... .......... .......... ..........  222M  4700K .......... .......... .......... .......... .......... 37.2M  4750K .......... .......... .......... .......... .......... 22.3M  4800K .......... .......... .......... .......... ..........  595K  4850K .......... .......... .......... .......... .......... 98.2M  4900K .......... .......... .......... .......... ..........  126M  4950K .......... .......... .......... .......... ..........  255M  5000K .......... .......... .......... .......... .......... 61.5M  5050K .......... .......... .......... .......... .......... 19.9M  5100K .......... .......... .......... .......... ..........  128M  5150K .......... .......... .......... .......... ..........  595K  5200K .......... .......... .......... .......... ..........  164M  5250K .......... .......... .......... .......... ..........  127M  5300K .......... .......... .......... .......... .......... 98.3M  5350K .......... .......... .......... .......... .......... 19.0M  5400K .......... .......... .......... .......... .......... 81.3M  5450K .......... .......... .......... .......... ..........  594K  5500K .......... .......... .......... .......... ..........  179M  5550K .......... .......... .......... .......... ..........  283M  5600K .......... .......... .......... .......... ..........  329M  5650K .......... .......... .......... .......... .......... 44.5M  5700K .......... .......... .......... .......... .......... 19.0M  5750K .......... .......... .......... .......... ..........  318M  5800K .......... .......... .......... .......... ..........  595K  5850K .......... .......... .......... .......... ..........  225M  5900K .......... .......... .......... .......... ..........  184M  5950K .......... .......... .......... .......... ..........  148M  6000K .......... .......... .......... .......... .......... 61.2M  6050K .......... .......... .......... .......... .......... 19.8M  6100K .......... .......... .......... .......... ..........  197M  6150K .......... .......... .......... .......... ..........  595K  6200K .......... .......... .......... .......... ..........  107M  6250K .......... .......... .......... .......... ..........  212M  6300K .......... .......... .......... .......... ..........  178M  6350K .......... .......... .......... .......... ..........  152M  6400K .......... .......... .......... .......... .......... 17.5M  6450K .......... .......... .......... .......... ..........  287M  6500K .......... .......... .......... .......... ..........  594K  6550K .......... .......... .......... .......... ..........  279M  6600K .......... .......... .......... .......... ..........  298M  6650K .......... .......... .......... .......... ..........  255M  6700K .......... .......... .......... .......... ..........  237M  6750K .......... .......... .......... .......... ..........  182M  6800K .......... .......... .......... .......... .......... 15.7M  6850K .......... .......... .......... .......... ..........  378M  6900K .......... .......... .......... .......... ..........  595K  6950K .......... .......... .......... .......... ..........  191M  7000K .......... .......... .......... .......... ..........  255M  7050K .......... .......... .......... .......... ..........  294M  7100K .......... .......... .......... .......... ..........  194M  7150K .......... .......... .......... .......... ..........  164M  7200K .......... .......... .......... .......... .......... 16.9M  7250K .......... .......... .......... .......... ..........  208M  7300K .......... .......... .......... .......... ..........  592K  7350K .......... .......... .......... .......... ..........  187M  7400K .......... .......... .......... .......... ..........  165M  7450K .......... .......... .......... .......... ..........  188M  7500K .......... .......... .......... .......... ..........  175M  7550K .......... .......... .......... .......... ..........  203M  7600K .......... .......... .......... .......... .......... 21.5M  7650K .......... .......... .......... .......... ..........  194M  7700K .......... .......... .......... .......... ..........  593K  7750K .......... .......... .......... .......... ..........  147M  7800K .......... .......... .......... .......... ..........  240M  7850K .......... .......... .......... .......... ..........  264M  7900K .......... .......... .......... .......... ..........  288M  7950K .......... .......... .......... .......... ..........  365M  8000K .......... .......... .......... .......... .......... 18.2M  8050K .......... .......... .......... .......... ..........  269M  8100K .......... .......... .......... .......... ..........  380M  8150K .......... .......... .......... .......... ..........  591K  8200K .......... .......... .......... .......... ..........  251M  8250K .......... .......... .......... .......... ..........  253M  8300K .......... .......... .......... .......... ..........  303M  8350K .......... .......... .......... .......... ..........  320M  8400K .......... .......... .......... .......... ..........  260M  8450K .......... .......... .......... .......... .......... 18.9M  8500K .......... .......... .......... .......... ..........  251M  8550K .......... .......... .......... .......... ..........  370M  8600K .......... .......... .......... .......... ..........  589K  8650K .......... .......... .......... .......... ..........  244M  8700K .......... .......... .......... .......... ..........  196M  8750K .......... .......... .......... .......... ..........  299M  8800K .......... .......... .......... .......... ..........  305M  8850K .......... .......... .......... .......... ..........  325M  8900K .......... .......... .......... .......... .......... 19.2M  8950K .......... .......... .......... .......... ..........  253M  9000K .......... .......... .......... .......... ..........  188M  9050K .......... .......... .......... .......... ..........  594K  9100K .......... .......... .......... .......... ..........  210M  9150K .......... .......... .......... .......... ..........  202M  9200K .......... .......... .......... .......... ..........  231M  9250K .......... .......... .......... .......... ..........  298M  9300K .......... .......... .......... .......... ..........  264M  9350K .......... .......... .......... .......... .......... 21.1M  9400K .......... .......... .......... .......... ..........  214M  9450K .......... .......... .......... .......... ..........  267M  9500K .......... .......... .......... .......... ..........  590K  9550K .......... .......... .......... .......... ..........  246M  9600K .......... .......... .......... .......... ..........  134M  9650K .......... .......... .......... .......... ..........  165M  9700K .......... .......... .......... .......... ..........  214M  9750K .......... .......... .......... .......... ..........  208M  9800K .......... .......... .......... .......... ..........  141M  9850K .......... .......... .......... .......... .......... 24.9M  9900K .......... .......... .......... .......... ..........  143M  9950K .......... .......... .......... .......... ..........  593K 10000K .......... .......... .......... .......... ..........  151M 10050K .......... .......... .......... .......... ..........  152M 10100K .......... .......... .......... .......... ..........  311M 10150K .......... .......... .......... .......... ..........  371M 10200K .......... .......... .......... .......... ..........  272M 10250K .......... .......... .......... .......... ..........  334M 10300K .......... .......... .......... .......... .......... 22.8M 10350K .......... .......... .......... .......... ..........  163M 10400K .......... .......... .......... .......... ..........  344M 10450K .......... .......... .......... .......... ..........  587K 10500K .......... .......... .......... .......... ..........  173M 10550K .......... .......... .......... .......... ..........  124M 10600K .......... .......... .......... .......... ..........  348M 10650K .......... .......... .......... .......... ..........  340M 10700K .......... .......... .......... .......... ..........  326M 10750K .......... .......... .......... .......... ..........  308M 10800K .......... .......... .......... .......... .......... 25.3M 10850K .......... .......... .......... .......... ..........  281M 10900K .......... .......... .......... .......... ..........  377M 10950K .......... .......... .......... .......... ..........  589K 11000K .......... .......... .......... .......... ..........  181M 11050K .......... .......... .......... .......... ..........  302M 11100K .......... .......... .......... .......... ..........  331M 11150K .......... .......... .......... .......... ..........  369M 11200K .......... .......... .......... .......... ..........  288M 11250K .......... .......... .......... .......... ..........  295M 11300K .......... .......... .......... .......... ..........  303M 11350K .......... .......... .......... .......... .......... 26.5M 11400K .......... .......... .......... .......... ..........  218M 11450K .......... .......... .......... .......... ..........  309M 11500K .......... .......... .......... .......... ..........  587K 11550K .......... .......... .......... .......... .................. 4.60M 50150K .......... .......... .......... .......... .......... 4.71M 50200K .......... .......... .......... .......... .......... 4.59M 50250K .......... .......... .......... .......... .......... 8.73M 50300K .......... .......... .......... .......... .......... 4.41M 50350K .......... .......... .......... .......... .......... 4.64M 50400K .......... .......... .......... .......... .......... 4.68M 50450K .......... .......... .......... .......... .......... 8.37M 50500K .......... .......... .......... .......... .......... 4.47M 50550K .......... .......... .......... .......... .......... 4.74M 50600K .......... .......... .......... .......... .......... 4.44M 50650K .......... .......... .......... .......... .......... 9.91M 50700K .......... .......... .......... .......... .......... 4.24M 50750K .......... .......... .......... .......... .......... 4.83M 50800K .......... .......... .......... .......... .......... 4.62M 50850K .......... .......... .......... .......... .......... 8.53M 50900K .......... .......... .......... .......... .......... 4.52M 50950K .......... .......... .......... .......... .......... 4.53M 51000K .......... .......... .......... .......... .......... 4.41M 51050K .......... .......... .......... .......... .......... 8.39M 51100K .......... .......... .......... .......... .......... 4.75M 51150K .......... .......... .......... .......... .......... 4.30M 51200K .......... .......... .......... .......... .......... 4.64M 51250K .......... .......... .......... .......... .......... 4.10M 51300K .......... .......... .......... .......... .......... 11.7M 51350K .......... .......... .......... .......... .......... 4.26M 51400K .......... .......... .......... .......... .......... 4.20M 51450K .......... .......... .......... .......... .......... 5.67M 51500K .......... .......... .......... .......... .......... 8.28M 51550K .......... .......... .......... .......... .......... 4.79M 51600K .......... .......... .......... .......... .......... 4.10M 51650K .......... .......... .......... .......... .......... 5.06M 51700K .......... .......... .......... .......... .......... 4.48M 51750K .......... .......... .......... .......... .......... 8.99M 51800K .......... .......... .......... .......... .......... 4.70M 51850K .......... .......... .......... .......... .......... 4.60M 51900K .......... .......... .......... .......... .......... 4.62M 51950K .......... .......... .......... .......... .......... 8.77M 52000K .......... .......... .......... .......... .......... 4.60M 52050K .......... .......... .......... .......... .......... 4.58M 52100K .......... .......... .......... .......... .......... 4.43M 52150K .......... .......... .......... .......... .......... 9.23M 52200K .......... .......... .......... .......... .......... 4.28M 52250K .......... .......... .......... .......... .......... 4.60M 52300K .......... .......... .......... .......... .......... 4.94M 52350K .......... .......... .......... .......... .......... 5.82M 52400K .......... .......... .......... .......... .......... 5.73M 52450K .......... .......... .......... .......... .......... 5.00M 52500K .......... .......... .......... .......... .......... 4.55M 52550K .......... .......... .......... .......... .......... 8.93M 52600K .......... .......... .......... .......... .......... 4.35M 52650K .......... .......... .......... .......... .......... 4.77M 52700K .......... .......... .......... .......... .......... 4.63M 52750K .......... .......... .......... .......... .......... 8.87M 52800K .......... .......... .......... .......... .......... 4.50M 52850K .......... .......... .......... .......... .......... 4.28M 52900K .......... .......... .......... .......... .......... 4.05M 52950K .......... .......... .......... .......... .......... 12.6M 53000K .......... .......... .......... .......... .......... 4.52M 53050K .......... .......... .......... .......... .......... 4.77M 53100K .......... .......... .......... .......... .......... 4.62M 53150K .......... .......... .......... .......... .......... 8.38M 53200K .......... .......... .......... .......... .......... 4.09M 53250K .......... .......... .......... .......... .......... 4.89M 53300K .......... .......... .......... .......... .......... 4.31M 53350K .......... .......... .......... .......... .......... 7.66M 53400K .......... .......... .......... .......... .......... 4.49M 53450K .......... .......... .......... .......... .......... 4.77M 53500K .......... .......... .......... .......... .......... 4.60M 53550K .......... .......... .......... .......... .......... 7.35M 53600K .......... .......... .......... .......... .......... 4.81M 53650K .......... .......... .......... .......... .......... 4.58M 53700K .......... .......... .......... .......... .......... 3.14M 53750K .......... .......... .......... .......... .......... 12.3M 53800K .......... .......... .......... .......... .......... 5.03M 53850K .......... .......... .......... .......... .......... 4.09M 53900K .......... .......... .......... .......... .......... 4.64M 53950K .......... .......... .......... .......... .......... 5.13M 54000K .......... .......... .......... .......... .......... 8.26M 54050K .......... .......... .......... .......... .......... 4.52M 54100K .......... .......... .......... .......... .......... 4.19M 54150K .......... .......... .......... .......... .......... 4.96M 54200K .......... .......... .......... .......... .......... 8.06M 54250K .......... .......... .......... .......... .......... 4.76M 54300K .......... .......... .......... .......... .......... 4.45M 54350K .......... .......... .......... .......... .......... 4.46M 54400K .......... .......... .......... .......... .......... 9.40M 54450K .......... .......... .......... .......... .......... 4.25M 54500K .......... .......... .......... .......... .......... 4.77M 54550K .......... .......... .......... .......... .......... 4.61M 54600K .......... .......... .......... .......... .......... 8.24M 54650K .......... .......... .......... .......... .......... 4.78M 54700K .......... .......... .......... .......... .......... 4.56M 54750K .......... .......... .......... .......... .......... 4.47M 54800K .......... .......... .......... .......... .......... 8.80M 54850K .......... .......... .......... .......... .......... 4.49M 54900K .......... .......... .......... .......... .......... 3.78M 54950K .......... .......... .......... .......... .......... 5.85M 55000K .......... .......... .......... .......... .......... 9.36M 55050K .......... .......... .......... .......... .......... 2.97M 55100K .......... .......... .......... .......... .......... 9.44M 55150K .......... .......... .......... .......... .......... 4.65M 55200K .......... .......... .......... .......... .......... 3.58M 55250K .......... .......... .......... .......... .......... 13.3M 55300K .......... .......... .......... .......... .......... 4.64M 55350K .......... .......... .......... .......... .......... 4.29M 55400K .......... .......... .......... .......... .......... 4.90M 55450K .......... .......... .......... .......... .......... 8.72M 55500K .......... .......... .......... .......... .......... 4.46M 55550K .......... .......... .......... .......... .......... 4.58M 55600K .......... .......... .......... .......... .......... 4.66M 55650K .......... .......... .......... .......... .......... 7.60M 55700K .......... .......... .......... .......... .......... 4.81M 55750K .......... .......... .......... .......... .......... 4.72M 55800K .......... .......... .......... .......... .......... 4.56M 55850K .......... .......... .......... .......... .......... 7.99M 55900K .......... .......... .......... .......... .......... 4.75M 55950K .......... .......... .......... .......... .......... 4.27M 56000K .......... .......... .......... .......... .......... 4.87M 56050K .......... .......... .......... .......... .......... 8.24M 56100K .......... .......... .......... .......... .......... 4.74M 56150K .......... .......... .......... .......... .......... 4.26M 56200K .......... .......... .......... .......... .......... 5.14M 56250K .......... .......... .......... .......... .......... 8.71M 56300K .......... .......... .......... .......... .......... 4.61M 56350K .......... .......... .......... .......... .......... 4.54M 56400K .......... .......... .......... .......... .......... 4.40M 56450K .......... .......... .......... .......... .......... 8.46M 56500K .......... .......... .......... .......... .......... 4.69M 56550K .......... .......... .......... .......... .......... 4.72M 56600K .......... .......... .......... .......... .......... 4.59M 56650K .......... .......... .......... .......... .......... 8.67M 56700K .......... .......... .......... .......... .......... 4.74M 56750K .......... .......... .......... .......... .......... 4.52M 56800K .......... .......... .......... .......... .......... 3.98M 56850K .......... .......... .......... .......... .......... 5.21M 56900K .......... .......... .......... .......... .......... 8.27M 56950K .......... .......... .......... .......... .......... 4.56M 57000K .......... .......... .......... .......... .......... 4.63M 57050K .......... .......... .......... .......... .......... 4.56M 57100K .......... .......... .......... .......... .......... 8.37M 57150K .......... .......... .......... .......... .......... 4.65M 57200K .......... .......... .......... .......... .......... 4.60M 57250K .......... .......... .......... .......... .......... 8.69M 57300K .......... .......... .......... .......... .......... 4.47M 57350K .......... .......... .......... .......... .......... 4.54M 57400K .......... .......... .......... .......... .......... 4.80M 57450K .......... .......... .......... .......... .......... 7.05M 57500K .......... .......... .......... .......... .......... 5.29M 57550K .......... .......... .......... .......... .......... 3.88M 57600K .......... .......... .......... .......... .......... 5.50M 57650K .......... .......... .......... .......... .......... 7.38M 57700K .......... .......... .......... .......... .......... 5.30M 57750K .......... .......... .......... .......... .......... 4.23M 57800K .......... .......... .......... .......... .......... 3.73M 57850K .......... .......... .......... .......... .......... 14.6M 57900K .......... .......... .......... .......... .......... 4.52M 57950K .......... .......... .......... .......... .......... 4.70M 58000K .......... .......... .......... .......... .......... 4.44M 58050K .......... .......... .......... .......... .......... 9.33M 58100K .......... .......... .......... .......... .......... 4.57M 58150K .......... .......... .......... .......... .......... 3.97M 58200K .......... .......... .......... .......... .......... 5.33M 58250K .......... .......... .......... .......... .......... 7.03M 58300K .......... .......... .......... .......... .......... 5.44M 58350K .......... .......... .......... .......... .......... 4.39M 58400K .......... .......... .......... .......... .......... 4.36M 58450K .......... .......... .......... .......... .......... 7.37M 58500K .......... .......... .......... .......... .......... 5.68M 58550K .......... .......... .......... .......... .......... 4.53M 58600K .......... .......... .......... .......... .......... 4.38M 58650K .......... .......... .......... .......... .......... 9.57M 58700K .......... .......... .......... .......... .......... 4.69M 58750K .......... .......... .......... .......... .......... 4.32M 58800K .......... .......... .......... .......... .......... 4.51M 58850K .......... .......... .......... .......... .......... 7.60M 58900K .......... .......... .......... .......... .......... 4.70M 58950K .......... .......... .......... .......... .......... 4.59M 59000K .......... .......... .......... .......... .......... 4.55M 59050K .......... .......... .......... .......... .......... 4.61M 59100K .......... .......... .......... .......... .......... 8.33M 59150K .......... .......... .......... .......... .......... 4.55M 59200K .......... .......... .......... .......... .......... 4.30M 59250K .......... .......... .......... .......... .......... 3.92M 59300K .......... .......... .......... .......... .......... 6.07M 59350K .......... .......... .......... .......... .......... 7.99M 59400K .......... .......... .......... .......... .......... 4.57M 59450K .......... .......... .......... .......... .......... 4.49M 59500K .......... .......... .......... .......... .......... 4.72M 59550K .......... .......... .......... .......... .......... 8.66M 59600K .......... .......... .......... .......... .......... 4.50M 59650K .......... .......... .......... .......... .......... 4.59M 59700K .......... .......... .......... .......... .......... 4.66M 59750K .......... .......... .......... .......... .......... 8.20M 59800K .......... .......... .......... .......... .......... 4.55M 59850K .......... .......... .......... .......... .......... 4.65M 59900K .......... .......... .......... .......... .......... 4.41M 59950K .......... .......... .......... .......... .......... 8.25M 60000K .......... .......... .......... .......... .......... 4.72M 60050K .......... .......... .......... .......... .......... 4.50M 60100K .......... .......... .......... .......... .......... 4.28M 60150K .......... .......... .......... .......... .......... 9.45M 60200K .......... .......... .......... .......... .......... 4.53M 60250K .......... .......... .......... .......... .......... 4.72M 60300K .......... .......... .......... .......... .......... 4.30M 60350K .......... .......... .......... .......... .......... 9.45M 60400K .......... .......... .......... .......... .......... 4.47M 60450K .......... .......... .......... .......... .......... 3.84M 60500K .......... .......... .......... .......... .......... 5.19M 60550K .......... .......... .......... .......... .......... 9.74M 60600K .......... .......... .......... .......... .......... 2.49M 60650K .......... .........                                   38.5M=15s2024-03-11 19:01:54 (4.04 MB/s) - 'exp_quant.zip' saved [62125370]--2024-03-11 19:01:57--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  187K 4s    50K .......... .......... .......... .......... .......... 12%  281K 3s   100K .......... .......... .......... .......... .......... 18%  281K 3s   150K .......... .......... .......... .......... .......... 24%  559K 2s   200K .......... .......... .......... .......... .......... 30%  560K 2s   250K .......... .......... .......... .......... .......... 36%  561K 2s   300K .......... .......... .......... .......... .......... 42%  562K 1s   350K .......... .......... .......... .......... .......... 48%  559K 1s   400K .......... .......... .......... .......... .......... 54%  561K 1s   450K .......... .......... .......... .......... .......... 60%  563K 1s   500K .......... .......... .......... .......... .......... 66% 90.2M 1s   550K .......... .......... .......... .......... .......... 72%  562K 1s   600K .......... .......... .......... .......... .......... 78%  560K 0s   650K .......... .......... .......... .......... .......... 84%  319M 0s   700K .......... .......... .......... .......... .......... 90%  561K 0s   750K .......... .......... .......... .......... .......... 96%  560K 0s   800K .......... .......... .......                         100%  157M=1.6s2024-03-11 19:01:59 (516 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="43.51270413398743">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-03-11 18:52:08.308] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-03-11 18:52:08.308] [jLog] [info] building indexout : ./index[2024-03-11 18:52:08.309] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-03-11 18:52:08.318] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-03-11 18:52:08.318] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-03-11 18:52:08.333] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-03-11 18:52:08.335] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-03-11 18:52:08.406] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-03-11 18:52:08.406] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.4629 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 1.2142 ms-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-03-11 18:52:08.409] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-03-11 18:52:08.409] [puff::index::jointLog] [info] contig count for validation: 23[2024-03-11 18:52:08.410] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-03-11 18:52:08.410] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-03-11 18:52:08.410] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-03-11 18:52:08.410] [puff::index::jointLog] [info] bits per offset entry 6[2024-03-11 18:52:08.410] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-03-11 18:52:08.423] [puff::index::jointLog] [info] # segments = 23[2024-03-11 18:52:08.423] [puff::index::jointLog] [info] total length = 19592[2024-03-11 18:52:08.423] [puff::index::jointLog] [info] Reading the reference files ...[2024-03-11 18:52:08.438] [puff::index::jointLog] [info] positional integer width = 15[2024-03-11 18:52:08.438] [puff::index::jointLog] [info] seqSize = 19592[2024-03-11 18:52:08.438] [puff::index::jointLog] [info] rankSize = 19592[2024-03-11 18:52:08.438] [puff::index::jointLog] [info] edgeVecSize = 0[2024-03-11 18:52:08.438] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-03-11 18:52:08.541] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-03-11 18:52:08.541] [puff::index::jointLog] [info] chunk size = 9796[2024-03-11 18:52:08.541] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-03-11 18:52:08.541] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-03-11 18:52:08.543] [puff::index::jointLog] [info] finished populating pos vector[2024-03-11 18:52:08.543] [puff::index::jointLog] [info] writing index components[2024-03-11 18:52:08.560] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-03-11 18:52:08.567] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-03-11 18:52:08.953] [jointLog] [info] setting maxHashResizeThreads to 6[2024-03-11 18:52:08.953] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-03-11 18:52:08.953] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-03-11 18:52:08.953] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-03-11 18:52:08.953] [jointLog] [info] parsing read library format[2024-03-11 18:52:08.953] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 957.82 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.9704 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 525.04 us----------------------------------------------------------------------------------| Loading mphf table | Time = 1.4307 ms-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.9116 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 1.0576 ms-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 2.062 ms-----------------------------------------[2024-03-11 18:52:09.019] [jointLog] [info] Loading pufferfish index[2024-03-11 18:52:09.020] [jointLog] [info] Loading dense pufferfish index.size = 28562-----------------------------------------| Loading reference sequence | Time = 1.2417 ms----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 508.6 us-----------------------------------------[2024-03-11 18:52:09.035] [jointLog] [info] done[2024-03-11 18:52:09.035] [jointLog] [info] Index contained 15 targets[2024-03-11 18:52:09.035] [jointLog] [info] Number of decoys : 0[2024-03-11 18:52:09.084] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-03-11 18:52:09.084] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-03-11 18:52:09.086] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-03-11 18:52:09.086] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-03-11 18:52:09.086] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-03-11 18:52:09.086] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-03-11 18:52:09.086] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-03-11 18:52:09.086] [jointLog] [info] Mapping rate = 100%[2024-03-11 18:52:09.086] [jointLog] [info] finished quantifyLibrary()[2024-03-11 18:52:09.092] [jointLog] [info] Starting optimizer[2024-03-11 18:52:09.093] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-03-11 18:52:09.093] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-03-11 18:52:09.094] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-03-11 18:52:09.095] [jointLog] [info] Finished optimizer[2024-03-11 18:52:09.095] [jointLog] [info] writing output [2024-03-11 18:52:09.101] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="30.460216522216797">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-03-11 18:52:42.510] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-03-11 18:52:42.510] [jLog] [info] building indexout : ./index[2024-03-11 18:52:42.511] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-03-11 18:52:42.519] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-03-11 18:52:42.520] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-03-11 18:52:42.535] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-03-11 18:52:42.537] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-03-11 18:52:42.601] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-03-11 18:52:42.601] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.1324 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 872.6 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-03-11 18:52:42.603] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-03-11 18:52:42.603] [puff::index::jointLog] [info] contig count for validation: 23[2024-03-11 18:52:42.604] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-03-11 18:52:42.604] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-03-11 18:52:42.604] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-03-11 18:52:42.604] [puff::index::jointLog] [info] bits per offset entry 6[2024-03-11 18:52:42.604] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-03-11 18:52:42.618] [puff::index::jointLog] [info] # segments = 23[2024-03-11 18:52:42.618] [puff::index::jointLog] [info] total length = 19592[2024-03-11 18:52:42.618] [puff::index::jointLog] [info] Reading the reference files ...[2024-03-11 18:52:42.628] [puff::index::jointLog] [info] positional integer width = 15[2024-03-11 18:52:42.628] [puff::index::jointLog] [info] seqSize = 19592[2024-03-11 18:52:42.628] [puff::index::jointLog] [info] rankSize = 19592[2024-03-11 18:52:42.628] [puff::index::jointLog] [info] edgeVecSize = 0[2024-03-11 18:52:42.628] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elap..%   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-03-11 18:52:42.715] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-03-11 18:52:42.715] [puff::index::jointLog] [info] chunk size = 9796[2024-03-11 18:52:42.715] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-03-11 18:52:42.715] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-03-11 18:52:42.716] [puff::index::jointLog] [info] finished populating pos vector[2024-03-11 18:52:42.716] [puff::index::jointLog] [info] writing index components[2024-03-11 18:52:42.732] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-03-11 18:52:42.738] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-03-11 18:52:42.824] [jointLog] [info] setting maxHashResizeThreads to 6[2024-03-11 18:52:42.824] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-03-11 18:52:42.824] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-03-11 18:52:42.824] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-03-11 18:52:42.824] [jointLog] [info] parsing read library format[2024-03-11 18:52:42.824] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 764.22 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 814.18 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 938.76 us-----------------------------------------[2024-03-11 18:52:42.880] [jointLog] [info] Loading pufferfish index[2024-03-11 18:52:42.881] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading mphf table | Time = 893.54 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 781.9 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 734.42 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 930.8 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 1.0356 ms----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 713.91 us-----------------------------------------[2024-03-11 18:52:42.891] [jointLog] [info] done[2024-03-11 18:52:42.891] [jointLog] [info] Index contained 15 targets[2024-03-11 18:52:42.891] [jointLog] [info] Number of decoys : 0[2024-03-11 18:52:42.938] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-03-11 18:52:42.938] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-03-11 18:52:42.939] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-03-11 18:52:42.939] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-03-11 18:52:42.939] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-03-11 18:52:42.939] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-03-11 18:52:42.939] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-03-11 18:52:42.939] [jointLog] [info] Mapping rate = 100%[2024-03-11 18:52:42.939] [jointLog] [info] finished quantifyLibrary()[2024-03-11 18:52:42.945] [jointLog] [info] Starting optimizer[2024-03-11 18:52:42.945] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-03-11 18:52:42.945] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-03-11 18:52:42.947] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-03-11 18:52:42.947] [jointLog] [info] Finished optimizer[2024-03-11 18:52:42.947] [jointLog] [info] writing output [2024-03-11 18:52:42.952] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="32.129355669021606">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-03-11 18:53:13.540] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-03-11 18:53:13.540] [jLog] [info] building indexout : ./index[2024-03-11 18:53:13.541] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-03-11 18:53:13.550] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-03-11 18:53:13.550] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-03-11 18:53:13.565] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-03-11 18:53:13.568] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-03-11 18:53:13.635] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-03-11 18:53:13.635] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.5527 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 767.79 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-03-11 18:53:13.638] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-03-11 18:53:13.638] [puff::index::jointLog] [info] contig count for validation: 23[2024-03-11 18:53:13.639] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-03-11 18:53:13.639] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-03-11 18:53:13.639] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-03-11 18:53:13.639] [puff::index::jointLog] [info] bits per offset entry 6[2024-03-11 18:53:13.639] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-03-11 18:53:13.652] [puff::index::jointLog] [info] # segments = 23[2024-03-11 18:53:13.652] [puff::index::jointLog] [info] total length = 19592[2024-03-11 18:53:13.652] [puff::index::jointLog] [info] Reading the reference files ...[2024-03-11 18:53:13.663] [puff::index::jointLog] [info] positional integer width = 15[2024-03-11 18:53:13.663] [puff::index::jointLog] [info] seqSize = 19592[2024-03-11 18:53:13.663] [puff::index::jointLog] [info] rankSize = 19592[2024-03-11 18:53:13.663] [puff::index::jointLog] [info] edgeVecSize = 0[2024-03-11 18:53:13.663] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-03-11 18:53:13.751] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-03-11 18:53:13.751] [puff::index::jointLog] [info] chunk size = 9796[2024-03-11 18:53:13.752] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-03-11 18:53:13.752] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-03-11 18:53:13.753] [puff::index::jointLog] [info] finished populating pos vector[2024-03-11 18:53:13.753] [puff::index::jointLog] [info] writing index components[2024-03-11 18:53:13.769] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-03-11 18:53:13.775] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-03-11 18:53:13.848] [jointLog] [info] setting maxHashResizeThreads to 6[2024-03-11 18:53:13.848] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-03-11 18:53:13.848] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-03-11 18:53:13.848] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-03-11 18:53:13.848] [jointLog] [info] parsing read library format[2024-03-11 18:53:13.848] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 861.6 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.4768 ms-----------------------------------------[2024-03-11 18:53:13.905] [jointLog] [info] Loading pufferfish index[2024-03-11 18:53:13.906] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading reference lengths | Time = 1.3886 ms----------------------------------------------------------------------------------| Loading mphf table | Time = 1.1949 ms-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.2526 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 1.3675 ms-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.8754 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 1.4677 ms----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 1.0314 ms-----------------------------------------[2024-03-11 18:53:13.920] [jointLog] [info] done[2024-03-11 18:53:13.920] [jointLog] [info] Index contained 15 targets[2024-03-11 18:53:13.920] [jointLog] [info] Number of decoys : 0[2024-03-11 18:53:13.967] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-03-11 18:53:13.967] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-03-11 18:53:13.969] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-03-11 18:53:13.969] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-03-11 18:53:13.969] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-03-11 18:53:13.969] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-03-11 18:53:13.969] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-03-11 18:53:13.969] [jointLog] [info] Mapping rate = 100%[2024-03-11 18:53:13.969] [jointLog] [info] finished quantifyLibrary()[2024-03-11 18:53:13.974] [jointLog] [info] Starting optimizer[2024-03-11 18:53:13.975] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-03-11 18:53:13.975] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-03-11 18:53:13.976] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-03-11 18:53:13.976] [jointLog] [info] Finished optimizer[2024-03-11 18:53:13.976] [jointLog] [info] writing output [2024-03-11 18:53:13.983] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="33.74332928657532">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "6d29a3eea048c2b0",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "a3e3114d440d1bda",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/c/1/9/dataset_c19ea8ed-c63b-4f71-8cf7-f1471f4ba243.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-03-11T18:53:45.506472",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-nvr4q",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "d402e44eb58e9485",  "inputs": {   "quant_type|afile": {    "id": "6d29a3eea048c2b0",    "src": "hda",    "uuid": "0a468ea6-0eab-46d6-85b4-32af398e5245"   },   "quant_type|transcript": {    "id": "a3e3114d440d1bda",    "src": "hda",    "uuid": "c19ea8ed-c63b-4f71-8cf7-f1471f4ba243"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1710183229.0000000",    "title": "Job End Time",    "value": "2024-03-11 18:53:49"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1710183227.0000000",    "title": "Job Start Time",    "value": "2024-03-11 18:53:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "0d53fdbd4a4cc6ff",    "src": "hda",    "uuid": "078d7340-f6ab-4208-a392-d96808a0911c"   },   "postSample": {    "id": "79da25c29afc931b",    "src": "hda",    "uuid": "8d43647b-a44d-4614-8157-a4cb9e8db29b"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/c/1/9/dataset_c19ea8ed-c63b-4f71-8cf7-f1471f4ba243.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-03-11 18:53:47.819] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-03-11 18:53:47.819] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-03-11 18:53:47.820] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat\", fasta = \"/galaxy/server/database/objects/c/1/9/dataset_c19ea8ed-c63b-4f71-8cf7-f1471f4ba243.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat\" \nClosed all files . . . \nEmptied frag queue. . . [2024-03-11 18:53:48.115] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2024-03-11 18:53:48.291] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-03-11 18:53:48.296] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-03-11 18:53:48.296] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-03-11 18:53:48.297] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-03-11 18:53:48.298] [jointLog] [info] starting optimizer\n[2024-03-11 18:53:48.298] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-03-11 18:53:48.298] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-03-11 18:53:48.300] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-03-11 18:53:48.300] [jointLog] [info] finished optimizer\n[2024-03-11 18:53:48.300] [jointLog] [info] writing output\n[2024-03-11 18:53:48.306] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/c/1/9/dataset_c19ea8ed-c63b-4f71-8cf7-f1471f4ba243.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-03-11 18:53:47.819] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-03-11 18:53:47.819] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-03-11 18:53:47.820] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat\", fasta = \"/galaxy/server/database/objects/c/1/9/dataset_c19ea8ed-c63b-4f71-8cf7-f1471f4ba243.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat\" \nClosed all files . . . \nEmptied frag queue. . . [2024-03-11 18:53:48.115] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2024-03-11 18:53:48.291] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-03-11 18:53:48.296] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-03-11 18:53:48.296] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-03-11 18:53:48.297] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-03-11 18:53:48.298] [jointLog] [info] starting optimizer\n[2024-03-11 18:53:48.298] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-03-11 18:53:48.298] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-03-11 18:53:48.300] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-03-11 18:53:48.300] [jointLog] [info] finished optimizer\n[2024-03-11 18:53:48.300] [jointLog] [info] writing output\n[2024-03-11 18:53:48.306] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-03-11T18:53:58.848699",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_waktdt0g.sam v. /tmp/history_bam_converted_to_sam_8ehje_je.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -5014,8 +5015,8 @@\n 1043:NM_174914:1249:169\t419\tNM_174914\t1250\t1\t50M\t=\t1369\t169\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6249:NR_031764:1249:146\t355\tNM_174914\t1250\t1\t50M\t=\t1346\t146\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 1366:NM_174914:1104:195\t339\tNM_174914\t1250\t1\t50M\t=\t1105\t-195\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n+6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 2822:NR_031764:1132:169\t403\tNM_174914\t1252\t1\t50M\t=\t1133\t-169\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n-6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 6516:NM_174914:1111:191\t403\tNM_174914\t1253\t1\t50M\t=\t1112\t-191\tGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 7029:NM_174914:1253:199\t419\tNM_174914\t1254\t1\t50M\t=\t1403\t199\tAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6563:NM_174914:1254:180\t419\tNM_174914\t1255\t1\t50M\t=\t1385\t180\tACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTGT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n@@ -13014,8 +13015,8 @@\n 6453:NM_014620:1998:186\t99\tNM_014620\t1999\t1\t50M\t=\t2135\t186\tGTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAG\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 428:NM_153633:1236:178\t83\tNM_014620\t1999\t1\t50M\t=\t1871\t-178\tGTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAG\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 4517:NM_014620:1999:178\t163\tNM_014620\t2000\t1\t50M\t=\t2128\t178\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n+8069:NM_014620:1862:187\t147\tNM_014620\t2000\t1\t50M\t=\t1863\t-187\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 6736:NM_014620:1871:178\t147\tNM_014620\t2000\t1\t50M\t=\t1872\t-178\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n********\n*SNIP *\n********\n@@ -22012,10 +22013,10 @@\n 6874:NM_022658:1707:180\t147\tNM_022658\t1838\t1\t50M\t=\t1708\t-180\tAGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4482:NM_022658:1838:177\t99\tNM_022658\t1839\t1\t50M\t=\t1966\t177\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8901:NM_022658:1838:169\t99\tNM_022658\t1839\t1\t50M\t=\t1958\t169\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+9927:NM_022658:1720:168\t147\tNM_022658\t1839\t1\t50M\t=\t1721\t-168\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5538:NM_022658:1715:173\t147\tNM_022658\t1839\t1\t50M\t=\t1716\t-173\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6384:NM_022658:1685:203\t147\tNM_022658\t1839\t1\t50M\t=\t1686\t-203\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8172:NM_022658:1682:206\t83\tNM_022658\t1839\t1\t50M\t=\t1683\t-206\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-9927:NM_022658:1720:168\t147\tNM_022658\t1839\t1\t50M\t=\t1721\t-168\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 772:NM_022658:1839:175\t99\tNM_022658\t1840\t1\t50M\t=\t1965\t175\tGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5740:NM_022658:1839:166\t163\tNM_022658\t1840\t1\t50M\t=\t1956\t166\tGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7033:NM_022658:1839:174\t99\tNM_022658\t1840\t1\t50M\t=\t1964\t174\tGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -23013,10 +23014,10 @@\n 1776:NM_022658:1915:185\t147\tNM_022658\t2051\t1\t50M\t=\t1916\t-185\tTAACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1065:NM_022658:1903:198\t83\tNM_022658\t2052\t1\t50M\t=\t1904\t-198\tAACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2296:NM_022658:2052:188\t99\tNM_022658\t2053\t1\t50M\t=\t2191\t188\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+2417:NM_022658:1907:195\t83\tNM_022658\t2053\t1\t50M\t=\t1908\t-195\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+4610:NM_022658:1910:192\t83\tNM_022658\t2053\t1\t50M\t=\t1911\t-192\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 108:NM_022658:1901:201\t147\tNM_022658\t2053\t1\t50M\t=\t1902\t-201\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1092:NM_022658:1909:193\t147\tNM_022658\t2053\t1\t50M\t=\t1910\t-193\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-2417:NM_022658:1907:195\t83\tNM_022658\t2053\t1\t50M\t=\t1908\t-195\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-4610:NM_022658:1910:192\t83\tNM_022658\t2053\t1\t50M\t=\t1911\t-192\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7619:NM_022658:2053:198\t99\tNM_022658\t2054\t1\t50M\t=\t2202\t198\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1801:NM_022658:1928:175\t83\tNM_022658\t2054\t1\t50M\t=\t1929\t-175\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3189:NM_022658:1932:171\t83\tNM_022658\t2054\t1\t50M\t=\t1933\t-171\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 33.74332928657532, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/c/1/9/dataset_c19ea8ed-c63b-4f71-8cf7-f1471f4ba243.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-03-11 18:53:47.819] [jointLog] [info] setting maxHashResizeThreads to 6[2024-03-11 18:53:47.819] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2024-03-11 18:53:47.820] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat", fasta = "/galaxy/server/database/objects/c/1/9/dataset_c19ea8ed-c63b-4f71-8cf7-f1471f4ba243.dat" . . .done[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[AResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/0/a/4/dataset_0a468ea6-0eab-46d6-85b4-32af398e5245.dat" Closed all files . . . Emptied frag queue. . . [2024-03-11 18:53:48.115] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[2024-03-11 18:53:48.291] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2024-03-11 18:53:48.296] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-03-11 18:53:48.296] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-03-11 18:53:48.297] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-03-11 18:53:48.298] [jointLog] [info] starting optimizer[2024-03-11 18:53:48.298] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-03-11 18:53:48.298] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2024-03-11 18:53:48.300] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-03-11 18:53:48.300] [jointLog] [info] finished optimizer[2024-03-11 18:53:48.300] [jointLog] [info] writing output[2024-03-11 18:53:48.306] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamEmptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="32.14062452316284">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-03-11 18:54:19.813] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-03-11 18:54:19.813] [jLog] [info] building indexout : ./index[2024-03-11 18:54:19.814] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-03-11 18:54:19.823] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-03-11 18:54:19.823] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-03-11 18:54:19.837] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-03-11 18:54:19.839] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-03-11 18:54:19.903] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-03-11 18:54:19.903] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.5061 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 530.92 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-03-11 18:54:19.905] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-03-11 18:54:19.905] [puff::index::jointLog] [info] contig count for validation: 23[2024-03-11 18:54:19.906] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-03-11 18:54:19.906] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-03-11 18:54:19.906] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-03-11 18:54:19.906] [puff::index::jointLog] [info] bits per offset entry 6[2024-03-11 18:54:19.906] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-03-11 18:54:19.919] [puff::index::jointLog] [info] # segments = 23[2024-03-11 18:54:19.919] [puff::index::jointLog] [info] total length = 19592[2024-03-11 18:54:19.919] [puff::index::jointLog] [info] Reading the reference files ...[2024-03-11 18:54:19.932] [puff::index::jointLog] [info] positional integer width = 15[2024-03-11 18:54:19.932] [puff::index::jointLog] [info] seqSize = 19592[2024-03-11 18:54:19.932] [puff::index::jointLog] [info] rankSize = 19592[2024-03-11 18:54:19.932] [puff::index::jointLog] [info] edgeVecSize = 0[2024-03-11 18:54:19.932] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..ec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-03-11 18:54:20.037] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-03-11 18:54:20.037] [puff::index::jointLog] [info] chunk size = 9796[2024-03-11 18:54:20.037] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-03-11 18:54:20.037] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-03-11 18:54:20.039] [puff::index::jointLog] [info] finished populating pos vector[2024-03-11 18:54:20.039] [puff::index::jointLog] [info] writing index components[2024-03-11 18:54:20.056] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-03-11 18:54:20.064] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-03-11 18:54:20.145] [jointLog] [info] setting maxHashResizeThreads to 6[2024-03-11 18:54:20.145] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-03-11 18:54:20.145] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-03-11 18:54:20.145] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-03-11 18:54:20.145] [jointLog] [info] parsing read library format[2024-03-11 18:54:20.145] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 1.2496 ms-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.7995 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 359.06 us----------------------------------------------------------------------------------| Loading mphf table | Time = 552.86 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 708.06 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 770.22 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.2464 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 926.04 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 434.12 us-----------------------------------------[2024-03-11 18:54:20.210] [jointLog] [info] Loading pufferfish index[2024-03-11 18:54:20.211] [jointLog] [info] Loading dense pufferfish index.[2024-03-11 18:54:20.222] [jointLog] [info] done[2024-03-11 18:54:20.222] [jointLog] [info] Index contained 15 targets[2024-03-11 18:54:20.222] [jointLog] [info] Number of decoys : 0[2024-03-11 18:54:20.269] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-03-11 18:54:20.269] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-03-11 18:54:20.271] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-03-11 18:54:20.271] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-03-11 18:54:20.271] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-03-11 18:54:20.271] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-03-11 18:54:20.271] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-03-11 18:54:20.271] [jointLog] [info] Mapping rate = 100%[2024-03-11 18:54:20.271] [jointLog] [info] finished quantifyLibrary()[2024-03-11 18:54:20.278] [jointLog] [info] Starting optimizer[2024-03-11 18:54:20.279] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-03-11 18:54:20.279] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-03-11 18:54:20.280] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-03-11 18:54:20.280] [jointLog] [info] Finished optimizer[2024-03-11 18:54:20.280] [jointLog] [info] writing output [2024-03-11 18:54:20.287] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="29.928966522216797">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-03-11 18:54:51.179] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-03-11 18:54:51.179] [jLog] [info] building indexout : ./index[2024-03-11 18:54:51.180] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-03-11 18:54:51.189] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-03-11 18:54:51.189] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-03-11 18:54:51.206] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-03-11 18:54:51.208] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-03-11 18:54:51.272] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-03-11 18:54:51.272] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.3588 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 1.0271 ms-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-03-11 18:54:51.275] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-03-11 18:54:51.275] [puff::index::jointLog] [info] contig count for validation: 23[2024-03-11 18:54:51.275] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-03-11 18:54:51.275] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-03-11 18:54:51.276] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-03-11 18:54:51.276] [puff::index::jointLog] [info] bits per offset entry 6[2024-03-11 18:54:51.276] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-03-11 18:54:51.287] [puff::index::jointLog] [info] # segments = 23[2024-03-11 18:54:51.287] [puff::index::jointLog] [info] total length = 19592[2024-03-11 18:54:51.287] [puff::index::jointLog] [info] Reading the reference files ...[2024-03-11 18:54:51.299] [puff::index::jointLog] [info] positional integer width = 15[2024-03-11 18:54:51.299] [puff::index::jointLog] [info] seqSize = 19592[2024-03-11 18:54:51.299] [puff::index::jointLog] [info] rankSize = 19592[2024-03-11 18:54:51.299] [puff::index::jointLog] [info] edgeVecSize = 0[2024-03-11 18:54:51.299] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-03-11 18:54:51.396] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-03-11 18:54:51.396] [puff::index::jointLog] [info] chunk size = 9796[2024-03-11 18:54:51.396] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-03-11 18:54:51.396] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-03-11 18:54:51.397] [puff::index::jointLog] [info] finished populating pos vector[2024-03-11 18:54:51.397] [puff::index::jointLog] [info] writing index components[2024-03-11 18:54:51.414] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-03-11 18:54:51.421] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-03-11 18:54:51.512] [jointLog] [info] setting maxHashResizeThreads to 6[2024-03-11 18:54:51.512] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-03-11 18:54:51.512] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-03-11 18:54:51.512] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-03-11 18:54:51.512] [jointLog] [info] parsing read library format[2024-03-11 18:54:51.513] [jointLog] [info] There is 1 library.[2024-03-11 18:54:51.572] [jointLog] [info] Loading pufferfish index[2024-03-11 18:54:51.573] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading contig table | Time = 667.6 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.7717 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 1.2551 ms----------------------------------------------------------------------------------| Loading mphf table | Time = 389.19 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.1151 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 952.19 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.5893 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 626.14 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 656.75 us-----------------------------------------[2024-03-11 18:54:51.585] [jointLog] [info] done[2024-03-11 18:54:51.585] [jointLog] [info] Index contained 15 targets[2024-03-11 18:54:51.585] [jointLog] [info] Number of decoys : 0[2024-03-11 18:54:51.585] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-03-11 18:54:51.631] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-03-11 18:54:51.631] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-03-11 18:54:51.633] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-03-11 18:54:51.633] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-03-11 18:54:51.633] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-03-11 18:54:51.633] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-03-11 18:54:51.633] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-03-11 18:54:51.633] [jointLog] [info] Mapping rate = 100%[2024-03-11 18:54:51.633] [jointLog] [info] finished quantifyLibrary()[2024-03-11 18:54:51.639] [jointLog] [info] Starting optimizer[2024-03-11 18:54:51.640] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-03-11 18:54:51.640] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-03-11 18:54:51.640] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-03-11 18:54:51.644] [jointLog] [info] Computed expected counts (for bias correction)[2024-03-11 18:54:51.645] [jointLog] [info] processed bias for 20.0% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 66.7% of the transcripts[2024-03-11 18:54:51.646] [jointLog] [info] processed bias for 66.7% of the transcripts[2024-03-11 18:54:51.647] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-03-11 18:54:51.648] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-03-11 18:54:51.648] [jointLog] [info] Finished optimizer[2024-03-11 18:54:51.648] [jointLog] [info] writing output [2024-03-11 18:54:51.655] [jointLog] [info] writing equivalence class counts.[2024-03-11 18:54:51.656] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-03-11 18:54:51.656] [jointLog] [info] done.[2024-03-11 18:54:51.660] [jointLog] [info] done writing equivalence class counts.[2024-03-11 18:54:51.661] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="31.5517578125">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="27.60670256614685">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_bams": [   {    "id": "e6763e6ac743a58b",    "src": "hda"   },   {    "id": "4881ee5857e849b1",    "src": "hda"   }  ],  "input_bed": {   "id": "faed9ca33d7a6b1a",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/4/2/8/dataset_42855917-b402-472b-bb92-1f91ca4174d2.dat\u0027 \u00270\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/1/a/d/metadata_1add0f15-f585-4a5d-9dbf-aea382ae5f47.dat\u0027 \u00270.bai\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/3/a/7/dataset_3a7d4cc0-92b6-407c-8770-41e37b16869f.dat\u0027 \u00271\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/6/e/4/metadata_6e48d80f-a6b0-4553-bfdd-e815a2fe82a0.dat\u0027 \u00271.bai\u0027 \u0026\u0026   samtools bedcov  \u0027/galaxy/server/database/objects/0/2/9/dataset_02901c2f-aec6-4a62-920b-cb26b4ed2bdb.dat\u0027 \u00270\u0027 \u00271\u0027 \u003e \u0027/galaxy/server/database/objects/d/1/2/dataset_d126f703-3a5c-4a65-bcfa-1ad611a68d11.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-03-11T18:57:03.638832",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-4kl92",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "f6f44c59ba0d76f9",  "inputs": {   "input_bams": {    "id": "e6763e6ac743a58b",    "src": "hda",    "uuid": "42855917-b402-472b-bb92-1f91ca4174d2"   },   "input_bams1": {    "id": "e6763e6ac743a58b",    "src": "hda",    "uuid": "42855917-b402-472b-bb92-1f91ca4174d2"   },   "input_bams2": {    "id": "4881ee5857e849b1",    "src": "hda",    "uuid": "3a7d4cc0-92b6-407c-8770-41e37b16869f"   },   "input_bed": {    "id": "faed9ca33d7a6b1a",    "src": "hda",    "uuid": "02901c2f-aec6-4a62-920b-cb26b4ed2bdb"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "c9f7908fb4653320",    "src": "hda",    "uuid": "d126f703-3a5c-4a65-bcfa-1ad611a68d11"   }  },  "params": {   "__input_ext": "\"bed\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "countdel": "false",   "dbkey": "\"?\"",   "mapq": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-03-11T18:57:09.328266",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 27.60670256614685, "tool_id": "samtools_bedcov", "tool_version": "2.0.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="32.02363395690918">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="33.42074966430664">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="34.00569033622742">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="31.5657639503479">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="71.55677914619446">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="40.23172402381897">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="39.88084435462952">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="40.11845111846924">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="85.16805911064148">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/b/0/c/dataset_b0c9435b-f909-4d27-88b5-29f818d16ffa.dat--pe1-2fastq:/galaxy/server/database/objects/6/b/c/dataset_6bc3dcdf-3998-4e42-881d-9fa5e75a16c4.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.58+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/b/0/c/dataset_b0c9435b-f909-4d27-88b5-29f818d16ffa.dat']      right reads: ['/galaxy/server/database/objects/6/b/c/dataset_6bc3dcdf-3998-4e42-881d-9fa5e75a16c4.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/0/c/dataset_b0c9435b-f909-4d27-88b5-29f818d16ffa.dat  0:00:01.320     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/b/c/dataset_6bc3dcdf-3998-4e42-881d-9fa5e75a16c4.dat  0:00:02.468     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.476    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.841    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.841    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.143    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.169    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.195    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.198    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.202    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.203    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.215    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.215    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.215    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/0/c/dataset_b0c9435b-f909-4d27-88b5-29f818d16ffa.dat  0:00:03.233    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/b/c/dataset_6bc3dcdf-3998-4e42-881d-9fa5e75a16c4.dat  0:00:03.250    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.250    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.250    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.265    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.267    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.267    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.279    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.279    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.279    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.279    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/0/c/dataset_b0c9435b-f909-4d27-88b5-29f818d16ffa.dat and /galaxy/server/database/objects/6/b/c/dataset_6bc3dcdf-3998-4e42-881d-9fa5e75a16c4.dat  0:00:03.309    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.314    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.317    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.354    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.354    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.354    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:03.360    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.072    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.077     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.192   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.198     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.305   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.424     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.424     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.424     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.425     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.426     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.426     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.426     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.064     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.072    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.072    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.293    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.293    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.428    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.429    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.429    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.430    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.430    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.430    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.643     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.657    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.120    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.120    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.399    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.422    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.445    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.445    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.449    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.450    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing..      : 346)   Closing short gaps  0:00:10.387    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.390    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.390    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.390    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.391    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.391    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.391    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.391    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.391    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.391    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.391    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.391    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.391    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.392    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.392    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.392    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.392    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.392    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.392    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.392    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.392    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.392    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.404    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.405    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.405    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.412    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.412    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.413    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.418    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.424    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:10.429    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:10.436    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.436    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.436    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.436    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.436    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.436    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.519   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.687   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.937   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.937   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.948    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.021   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.028   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.031   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.037   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.037   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.037   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.049   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.055   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.076    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.076    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.076    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.076    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.077    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.077    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.077    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.077    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.077    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.077    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.078    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.078    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.078    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.078    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.079    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.079    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.079    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.079    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.079    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.079    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.080    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.080    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.080    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.080    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.080    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.080    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.080    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.080    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.080    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.080    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.080    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.080    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.080    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.082    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:11.087    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:11.092    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:11.101    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:11.119    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.123    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="37.932023763656616">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "careful": false,  "kmer_choice|kmers": "33",  "libraries_0|files_0|file_type|fwd_reads": {   "id": "19034a7d704827d8",   "src": "hda"  },  "libraries_0|files_0|file_type|rev_reads": {   "id": "e6f2ad7740c361a0",   "src": "hda"  },  "libraries_0|lib_type": "paired_end",  "onlyassembler": true,  "sc": false }, "job": {  "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi \u0026\u0026  spades.py -o . --disable-gzip-output  --only-assembler  -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fasta:/galaxy/server/database/objects/8/f/2/dataset_8f2c631e-5890-4010-b7d5-77fea133b81f.dat --pe1-2 fasta:/galaxy/server/database/objects/4/7/3/dataset_47337d62-fa46-4965-a226-6b3140e6a869.dat \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/6/configs/tmp5v4127_l\u0027 \u003c contigs.fasta \u003e \u0027/galaxy/server/database/objects/9/3/4/dataset_934daf46-7fff-41a1-a291-f5b10d3ce187.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/6/configs/tmp5v4127_l\u0027 \u003c scaffolds.fasta \u003e \u0027/galaxy/server/database/objects/3/8/e/dataset_38e68435-4402-43c9-ae65-134552cfd9fb.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-03-11T18:31:54.382592",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-c6cqd",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "e8973d31d514436d",  "inputs": {   "libraries_0|files_0|file_type|fwd_reads": {    "id": "19034a7d704827d8",    "src": "hda",    "uuid": "8f2c631e-5890-4010-b7d5-77fea133b81f"   },   "libraries_0|files_0|file_type|rev_reads": {    "id": "e6f2ad7740c361a0",    "src": "hda",    "uuid": "47337d62-fa46-4965-a226-6b3140e6a869"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_contig_stats": {    "id": "64333bf078a58912",    "src": "hda",    "uuid": "934daf46-7fff-41a1-a291-f5b10d3ce187"   },   "out_contigs": {    "id": "60d1a2783e281294",    "src": "hda",    "uuid": "d44039c2-f84f-4678-9b1a-3864229a15af"   },   "out_log": {    "id": "288b937cdd16fd8a",    "src": "hda",    "uuid": "02ee10bb-258d-4041-9a81-86e3ff8d1b48"   },   "out_scaffold_stats": {    "id": "8f36482ce23b8b1d",    "src": "hda",    "uuid": "38e68435-4402-43c9-ae65-134552cfd9fb"   },   "out_scaffolds": {    "id": "0df872ff6b562f89",    "src": "hda",    "uuid": "c52d5908-398e-4c11-ab12-6ec2cce6b2f8"   }  },  "params": {   "__input_ext": "\"fasta\"",   "careful": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contig_graph_out": "false",   "cov": "{\"__current_case__\": 0, \"state\": \"off\"}",   "dbkey": "\"?\"",   "iontorrent": "false",   "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}",   "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 8, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 9, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]",   "nanopore_reads": null,   "onlyassembler": "true",   "pacbio_reads": null,   "sanger_reads": null,   "sc": "false",   "scaffold_graph_out": "false",   "trusted_contigs": null,   "untrusted_contigs": null  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-03-11T18:32:12.359029",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 37.932023763656616, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="46.46240568161011">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/9/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/9/7/0/dataset_970949aa-d6a1-43b0-aac6-9b9e1b3c1b18.dat--pe1-2fastq.gz:/galaxy/server/database/objects/0/6/7/dataset_0671329a-1a8a-4db9-8638-f9f1a55c647c.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.58+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/9/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/9/7/0/dataset_970949aa-d6a1-43b0-aac6-9b9e1b3c1b18.dat']      right reads: ['/galaxy/server/database/objects/0/6/7/dataset_0671329a-1a8a-4db9-8638-f9f1a55c647c.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/7/0/dataset_970949aa-d6a1-43b0-aac6-9b9e1b3c1b18.dat  0:00:01.236     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/6/7/dataset_0671329a-1a8a-4db9-8638-f9f1a55c647c.dat  0:00:02.400     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.411    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.809    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.809    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.076    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.098    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.122    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.125    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.129    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.130    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.140    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.140    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.140    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/7/0/dataset_970949aa-d6a1-43b0-aac6-9b9e1b3c1b18.dat  0:00:03.158    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/6/7/dataset_0671329a-1a8a-4db9-8638-f9f1a55c647c.dat  0:00:03.177    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.177    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.177    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.195    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.197    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.197    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.212    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.212    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.212    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.212    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/9/7/0/dataset_970949aa-d6a1-43b0-aac6-9b9e1b3c1b18.dat and /galaxy/server/database/objects/0/6/7/dataset_0671329a-1a8a-4db9-8638-f9f1a55c647c.dat  0:00:03.245    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.249    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.253    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.289    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.289    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.289    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml  0:00:03.295    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.079    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.085     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.196   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.203     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.314   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.428     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.428     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.428     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.429     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.430     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.430     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.430     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.071     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.080    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.081    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.296    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.296    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.432    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.433    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.433    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.435    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.435    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.435    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.565     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.579    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.008    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.008    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.272    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.294    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.326    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.326    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.332    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.333    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Cond..      : 346)   Closing short gaps  0:00:09.891    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.894    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.894    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.894    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.894    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.895    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.895    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.895    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.895    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.895    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:09.895    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.895    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.895    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.909    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.909    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.909    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.915    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.916    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.916    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:09.922    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:09.926    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta  0:00:09.931    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta  0:00:09.940    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.940    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.940    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.940    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.940    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.940    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.027   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.201   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.451   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.451   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.464    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.534   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.540   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.543   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.548   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.548   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.548   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.563   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.571   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.590    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.590    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.590    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.590    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.591    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.591    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.591    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.591    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.591    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.591    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.592    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.592    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.592    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.592    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.593    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.593    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.593    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.593    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.593    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.593    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.593    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.594    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.594    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.594    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.594    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.594    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.594    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.594    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.594    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.594    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.594    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.594    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.594    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.594    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.597    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:10.602    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:10.607    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths  0:00:10.616    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths  0:00:10.633    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.636    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="57.49746870994568">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/12/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/7/5/8/dataset_7588c354-e9cc-49d5-9a5e-4f608dfab787.dat--pe1-2fastq:/galaxy/server/database/objects/9/1/f/dataset_91f9560d-1d8d-4cc5-982e-e0f50425f842.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.58+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/12/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/5/8/dataset_7588c354-e9cc-49d5-9a5e-4f608dfab787.dat']      right reads: ['/galaxy/server/database/objects/9/1/f/dataset_91f9560d-1d8d-4cc5-982e-e0f50425f842.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.011     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/5/8/dataset_7588c354-e9cc-49d5-9a5e-4f608dfab787.dat  0:00:01.260     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/1/f/dataset_91f9560d-1d8d-4cc5-982e-e0f50425f842.dat  0:00:02.376     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.387    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.761    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.762    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.029    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.053    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.078    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.081    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.085    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.086    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.098    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.098    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.098    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/5/8/dataset_7588c354-e9cc-49d5-9a5e-4f608dfab787.dat  0:00:03.116    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/1/f/dataset_91f9560d-1d8d-4cc5-982e-e0f50425f842.dat  0:00:03.134    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.134    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.134    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.151    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.153    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.153    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.166    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.166    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.166    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.166    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/5/8/dataset_7588c354-e9cc-49d5-9a5e-4f608dfab787.dat and /galaxy/server/database/objects/9/1/f/dataset_91f9560d-1d8d-4cc5-982e-e0f50425f842.dat  0:00:03.198    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.204    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.208    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.250    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.250    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.250    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml  0:00:03.256    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.079    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.086     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.198   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.205     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.314   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.430     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.430     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.430     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.431     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.432     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.432     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.432     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:01.080     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.091    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.091    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.327    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.327    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.461    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.462    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.462    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.463    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.463    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.463    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.774     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.788    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.245    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:03.245    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.482    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.503    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.524    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:03.524    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.527    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.528    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:03.528    32M / 8G    INFO    General                 (construction.cpp          : 253)   Earl.. short gaps  0:00:07.811    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.813    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.813    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.813    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.813    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.813    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.813    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:07.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.822    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.822    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.822    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.827    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.827    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:07.827    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:07.832    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:07.836    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta  0:00:07.841    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta  0:00:07.851    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.851    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.851    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.851    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:07.851    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.851    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:07.944   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.115   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.367   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:08.367   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:08.380    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:08.452   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:08.459   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.461   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.465   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:08.465   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:08.465   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:08.479   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.486   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.508    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:08.508    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:08.508    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:08.508    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:08.508    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.508    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.508    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.508    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:08.508    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:08.508    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:08.508    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.509    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.509    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:08.509    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:08.509    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.509    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.509    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.509    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:08.509    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:08.509    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:08.509    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:08.510    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:08.510    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:08.510    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:08.510    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:08.510    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.510    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.510    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.510    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.510    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.510    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.510    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:08.510    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.510    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:08.511    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:08.517    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:08.523    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths  0:00:08.533    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths  0:00:08.551    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:08.554    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="11.812664985656738">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.812664985656738, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="49.42307209968567">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/17/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/6/1/2/dataset_612d8e28-0da3-43cd-98cb-f01ae4b9b41b.dat--pe1-2fastq:/galaxy/server/database/objects/f/1/f/dataset_f1f6fdaa-a0a0-4223-bd0f-402e73b0c351.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.58+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/17/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/6/1/2/dataset_612d8e28-0da3-43cd-98cb-f01ae4b9b41b.dat']      right reads: ['/galaxy/server/database/objects/f/1/f/dataset_f1f6fdaa-a0a0-4223-bd0f-402e73b0c351.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/1/2/dataset_612d8e28-0da3-43cd-98cb-f01ae4b9b41b.dat  0:00:01.277     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/1/f/dataset_f1f6fdaa-a0a0-4223-bd0f-402e73b0c351.dat  0:00:02.369     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.380    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.737    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.737    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.988    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.011    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.033    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.036    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.039    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.041    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.051    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.051    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.051    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/1/2/dataset_612d8e28-0da3-43cd-98cb-f01ae4b9b41b.dat  0:00:03.069    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/1/f/dataset_f1f6fdaa-a0a0-4223-bd0f-402e73b0c351.dat  0:00:03.086    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.086    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.086    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.103    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.104    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.104    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.116    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.116    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.116    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.116    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/6/1/2/dataset_612d8e28-0da3-43cd-98cb-f01ae4b9b41b.dat and /galaxy/server/database/objects/f/1/f/dataset_f1f6fdaa-a0a0-4223-bd0f-402e73b0c351.dat  0:00:03.146    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.150    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.153    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.188    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.188    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.188    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml  0:00:03.193    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.077    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.083     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.192   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.202     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.321   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.440     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.441     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.441     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.442     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.442     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.443     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.443     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.057     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.067    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.068    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.314    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.314    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.466    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.468    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.468    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.469    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.469    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.469    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.727     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.742    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.165    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.165    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.436    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.459    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.484    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.484    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.487    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.488    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..sing short gaps  0:00:10.156    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.160    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.160    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.160    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.160    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.160    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.160    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.160    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.161    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.161    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.161    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.161    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.161    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.175    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.175    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.175    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.183    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.183    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.184    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:10.189    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:10.194    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta  0:00:10.200    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta  0:00:10.209    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.209    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.209    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.209    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.209    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.209    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.298   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.466   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.719   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.720   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.731    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.803   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.810   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.816   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.820   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.820   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.820   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.833   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.840   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.861    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.862    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.862    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.862    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.862    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.862    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.862    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.862    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.862    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.862    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.862    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.863    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.863    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.863    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.863    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.863    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.863    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.863    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.863    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.863    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.863    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.864    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.864    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.864    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.864    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.864    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.864    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.864    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.865    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.865    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.865    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.865    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.865    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.865    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.865    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.865    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.867    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:10.872    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:10.878    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths  0:00:10.887    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths  0:00:10.904    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.906    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/17/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="48.16643834114075">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/20/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/3/8/4/dataset_384bd613-408e-44bf-9e68-ef6850ac1b1e.dat--pe1-2fastq:/galaxy/server/database/objects/7/1/e/dataset_71e764c4-e58e-4e35-9c83-5b66cfd1aae8.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.58+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/20/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/8/4/dataset_384bd613-408e-44bf-9e68-ef6850ac1b1e.dat']      right reads: ['/galaxy/server/database/objects/7/1/e/dataset_71e764c4-e58e-4e35-9c83-5b66cfd1aae8.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/8/4/dataset_384bd613-408e-44bf-9e68-ef6850ac1b1e.dat  0:00:01.343     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/1/e/dataset_71e764c4-e58e-4e35-9c83-5b66cfd1aae8.dat  0:00:02.557     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.568    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.970    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.970    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.278    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.306    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.338    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.342    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.346    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.348    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.360    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.360    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.360    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/8/4/dataset_384bd613-408e-44bf-9e68-ef6850ac1b1e.dat  0:00:03.374    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/1/e/dataset_71e764c4-e58e-4e35-9c83-5b66cfd1aae8.dat  0:00:03.392    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.392    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.392    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.406    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.407    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.407    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.418    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.418    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.418    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.418    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/8/4/dataset_384bd613-408e-44bf-9e68-ef6850ac1b1e.dat and /galaxy/server/database/objects/7/1/e/dataset_71e764c4-e58e-4e35-9c83-5b66cfd1aae8.dat  0:00:03.451    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.455    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.458    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.496    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.496    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.496    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml  0:00:03.501    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.075    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.080     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.193   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.200     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.313   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.447     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.447     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.448     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.449     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.449     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.450     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.450     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.136     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.147    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.147    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.429    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.430    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.584    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.585    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.585    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.586    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.586    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.587    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.950     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.964    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.412    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.412    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.678    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.702    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.733    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.733    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.736    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.737    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..sing short gaps  0:00:10.603    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.606    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.606    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.606    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.606    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.606    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.606    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.606    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.606    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.606    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.606    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.606    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.620    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.621    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.621    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.628    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.629    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.630    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:10.636    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:10.642    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta  0:00:10.648    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta  0:00:10.658    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.658    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.658    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.658    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.658    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.658    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.750   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.922   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.178   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.179   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.195    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.269   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.276   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.279   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.285   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.285   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.285   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.298   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.305   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.325    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.326    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.326    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.326    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.328    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.328    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.328    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.328    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.328    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.328    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.330    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.331    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.331    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.331    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.331    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.331    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.331    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.331    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.331    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.331    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.331    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.332    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.332    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.332    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.333    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:11.340    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:11.345    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths  0:00:11.355    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths  0:00:11.374    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.376    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="48.81992149353027">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/23/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/3/f/0/dataset_3f02c5c2-e698-4b24-85b0-74565814b9b5.dat--pe1-2fastq.gz:/galaxy/server/database/objects/9/7/2/dataset_972c66f0-11f7-4751-acb8-7e1859bccfbd.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.58+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/23/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/f/0/dataset_3f02c5c2-e698-4b24-85b0-74565814b9b5.dat']      right reads: ['/galaxy/server/database/objects/9/7/2/dataset_972c66f0-11f7-4751-acb8-7e1859bccfbd.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/f/0/dataset_3f02c5c2-e698-4b24-85b0-74565814b9b5.dat  0:00:01.333     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/7/2/dataset_972c66f0-11f7-4751-acb8-7e1859bccfbd.dat  0:00:02.586     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.600    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.001    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:03.001    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.269    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.294    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.321    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.323    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.330    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.331    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.342    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.342    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.342    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/f/0/dataset_3f02c5c2-e698-4b24-85b0-74565814b9b5.dat  0:00:03.359    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/7/2/dataset_972c66f0-11f7-4751-acb8-7e1859bccfbd.dat  0:00:03.377    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.377    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.377    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.392    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.392    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.393    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.393    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.393    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.393    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.393    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.393    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.393    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.395    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.396    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.412    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.413    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.413    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.413    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/f/0/dataset_3f02c5c2-e698-4b24-85b0-74565814b9b5.dat and /galaxy/server/database/objects/9/7/2/dataset_972c66f0-11f7-4751-acb8-7e1859bccfbd.dat  0:00:03.452    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.458    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.462    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.501    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.501    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.501    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml  0:00:03.508    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.077    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.082     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.192   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.199     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.310   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.441     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.442     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.442     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.443     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.444     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.444     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.444     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.153     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.163    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.163    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.396    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.396    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.544    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.545    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.545    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.546    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.546    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.546    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.923     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.938    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.426    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.426    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.718    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.747    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.779    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.780    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.787    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.788    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDU..sing short gaps  0:00:10.886    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.888    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.888    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.888    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.888    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.888    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.888    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.888    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.888    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.888    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.888    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.888    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.888    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.901    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.902    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.902    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.908    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.908    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.909    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:10.914    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:10.920    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/simplified_contigs.fasta  0:00:10.926    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/intermediate_contigs.fasta  0:00:10.938    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.938    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.938    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.938    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.938    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.938    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:11.026   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.196   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.447   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.447   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.461    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.533   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.542   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.544   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.550   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.550   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.550   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.564   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.571   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.592    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.592    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.593    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.593    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.593    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.593    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.594    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.594    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.594    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.594    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.594    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.594    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.594    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.595    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.595    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.595    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.595    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.595    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.595    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.595    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.595    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.596    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.596    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.596    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.596    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.596    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.596    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.596    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.597    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.597    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.597    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.597    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.597    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.597    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.597    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.597    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.598    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:11.605    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:11.612    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/final_contigs.paths  0:00:11.622    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/scaffolds.paths  0:00:11.643    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.646    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="43.170735597610474">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "6898fabec80b0724",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/5/0/3/dataset_50333a7d-afdc-4d5d-be8d-35a0d333d93e.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/9/c/0/dataset_9c0b8c85-842d-48ea-8aee-de2e513012b7.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-03-11T18:43:02.722648",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-2fmwq",  "galaxy_version": "23.1",  "history_id": "1717e2a50987db4e",  "id": "35b845df28552b6c",  "inputs": {   "readtype|fastq_in": {    "id": "6898fabec80b0724",    "src": "hda",    "uuid": "50333a7d-afdc-4d5d-be8d-35a0d333d93e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1710182594.0000000",    "title": "Job Start Time",    "value": "2024-03-11 18:43:14"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1710182594.0000000",    "title": "Job End Time",    "value": "2024-03-11 18:43:14"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "882ed861d08c71d4",    "src": "hda",    "uuid": "4cea73f4-4146-4cd0-9ead-4be656f7e263"   },   "fastq_out": {    "id": "5ab77213df5f8c8b",    "src": "hda",    "uuid": "9c0b8c85-842d-48ea-8aee-de2e513012b7"   },   "log_file": {    "id": "03d64d38670c0b43",    "src": "hda",    "uuid": "82a25e22-9924-4445-8d3d-3d1c91d797e7"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 81, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2024-03-11T18:43:27.141981",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpiqtta55ctrimmomatic_se_out1.err v. /tmp/tmpnw2745v0trimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 43.170735597610474, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="28.508575201034546">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="30.204294443130493">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="33.19820213317871">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="34.645901679992676">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/77/configs/tmp6jrxb74e:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="9.49060344696045">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 9.49060344696045, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="33.21122169494629">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="34.468942403793335">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="33.676644802093506">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="10.642158031463623">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 10.642158031463623, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="32.479475021362305">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="31.405944108963013">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="29.38200044631958">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="35.691646337509155">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>