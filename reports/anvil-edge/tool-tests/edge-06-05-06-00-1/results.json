{"version": "0.1", "suitename": "Ephemeris tool tests targeting http://34.148.130.197:8000/galaxy/", "results": {"total": 223, "errors": 33, "failures": 0, "skips": 0}, "tests": [{"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 27.192132472991943, "inputs": {"bamFile1": {"src": "hda", "id": "96687ab742aaac42"}, "bamFile2": {"src": "hda", "id": "96687ab742aaac42"}, "binSize": "5", "comparison|type": "ratio", "outFileFormat": "bedgraph", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "6a3b1a0c9dc85da7", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:25:32.027159", "create_time": "2023-06-05T07:25:21.227687", "galaxy_version": "23.0", "command_version": "bamCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-4g49b", "command_line": "ln -s '/galaxy/server/database/objects/b/b/9/dataset_bb9e6266-c05e-4f6c-a750-f0032c0c943a.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/c/0/2/metadata_c0283e36-1a3c-465b-a07b-38fe89dd66fa.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/b/b/9/dataset_bb9e6266-c05e-4f6c-a750-f0032c0c943a.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/c/0/2/metadata_c0283e36-1a3c-465b-a07b-38fe89dd66fa.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/9/3/9/dataset_939833ab-475f-45fc-a715-7908400fab01.dat' --outFileFormat 'bedgraph'  --binSize 5  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "region": "\"\"", "outFileFormat": "\"bedgraph\"", "exactScaling": "false", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "binSize": "\"5\""}, "inputs": {"bamFile2": {"id": "96687ab742aaac42", "src": "hda", "uuid": "bb9e6266-c05e-4f6c-a750-f0032c0c943a"}, "bamFile1": {"id": "96687ab742aaac42", "src": "hda", "uuid": "bb9e6266-c05e-4f6c-a750-f0032c0c943a"}}, "outputs": {"outFileName": {"id": "7726cc0a487cfc11", "src": "hda", "uuid": "939833ab-475f-45fc-a715-7908400fab01"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:25:23", "plugin": "core", "name": "end_epoch", "raw_value": "1685949923.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:25:22", "plugin": "core", "name": "start_epoch", "raw_value": "1685949922.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 31.68482255935669, "inputs": {"bamFile1": {"src": "hda", "id": "0cd0bee50c6b1528"}, "bamFile2": {"src": "hda", "id": "0cd0bee50c6b1528"}, "binSize": "10", "comparison|type": "ratio", "outFileFormat": "bigwig", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "bc615f0c79e4dd1d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:26:01.909126", "create_time": "2023-06-05T07:25:47.407072", "galaxy_version": "23.0", "command_version": "bamCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-kxg52", "command_line": "ln -s '/galaxy/server/database/objects/5/9/f/dataset_59ff7ddf-4f60-4c90-8301-becde7f97d72.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/5/a/b/metadata_5abf5abd-0724-4143-aa17-a63c2c5be394.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/5/9/f/dataset_59ff7ddf-4f60-4c90-8301-becde7f97d72.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/5/a/b/metadata_5abf5abd-0724-4143-aa17-a63c2c5be394.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/e/d/7/dataset_ed751e5d-1e59-4668-b630-11983f7d4d8e.dat' --outFileFormat 'bigwig'  --binSize 10  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1       --minMappingQuality '1'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"blackListFileName\": null, \"centerReads\": false, \"doExtendCustom\": {\"__current_case__\": 0, \"doExtend\": \"no\"}, \"ignoreDuplicates\": false, \"ignoreForNormalization\": \"\", \"maxFragmentLength\": \"0\", \"minFragmentLength\": \"0\", \"minMappingQuality\": \"1\", \"samFlagExclude\": \"\", \"samFlagInclude\": \"\", \"showAdvancedOpt\": \"yes\", \"skipNAs\": false, \"skipZeroOverZero\": \"\", \"smoothLength\": \"\"}", "region": "\"\"", "outFileFormat": "\"bigwig\"", "exactScaling": "false", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "binSize": "\"10\""}, "inputs": {"bamFile2": {"id": "0cd0bee50c6b1528", "src": "hda", "uuid": "59ff7ddf-4f60-4c90-8301-becde7f97d72"}, "bamFile1": {"id": "0cd0bee50c6b1528", "src": "hda", "uuid": "59ff7ddf-4f60-4c90-8301-becde7f97d72"}}, "outputs": {"outFileName": {"id": "d8414457d4cd1ab6", "src": "hda", "uuid": "ed751e5d-1e59-4668-b630-11983f7d4d8e"}}, "output_collections": {}, "tool_stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:25:52", "plugin": "core", "name": "end_epoch", "raw_value": "1685949952.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:25:52", "plugin": "core", "name": "start_epoch", "raw_value": "1685949952.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 38.18828868865967, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "0cd0bee50c6b1528"}, "histogram": true, "plotTitle": "Test Plot"}, "job": {"model_class": "Job", "id": "79717b5ee5fdc82f", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:26:09.426205", "create_time": "2023-06-05T07:25:49.991401", "galaxy_version": "23.0", "command_version": "bamPEFragmentSize 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6vjdt", "command_line": "ln -s '/galaxy/server/database/objects/5/9/f/dataset_59ff7ddf-4f60-4c90-8301-becde7f97d72.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/5/a/b/metadata_5abf5abd-0724-4143-aa17-a63c2c5be394.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --histogram '/galaxy/server/database/objects/d/a/0/dataset_da02dc3a-a626-42ce-922e-2b8dea3a590e.dat' --plotFileFormat 'png' --plotTitle 'Test Plot' > '/galaxy/server/database/objects/3/7/5/dataset_375e498e-cdc5-4c2d-8ac5-8d377fbd0943.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "plotTitle": "\"Test Plot\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "true", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 688, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"bamfiles1": {"id": "0cd0bee50c6b1528", "src": "hda", "uuid": "59ff7ddf-4f60-4c90-8301-becde7f97d72"}, "bamfiles": {"id": "0cd0bee50c6b1528", "src": "hda", "uuid": "59ff7ddf-4f60-4c90-8301-becde7f97d72"}}, "outputs": {"fragLengths": {"id": "62d6c4facaa1f063", "src": "hda", "uuid": "b42244a5-1500-4ad2-802e-9b1ad60c6fbf"}, "table": {"id": "614b9ebeb1c6e7fd", "src": "hda", "uuid": "f54438ba-e755-4aae-b09f-6f8d006a6d2d"}, "histogram_outfile": {"id": "3bfc2bf3809963b3", "src": "hda", "uuid": "da02dc3a-a626-42ce-922e-2b8dea3a590e"}, "outfile": {"id": "e02a212d92580304", "src": "hda", "uuid": "375e498e-cdc5-4c2d-8ac5-8d377fbd0943"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:25:59", "plugin": "core", "name": "end_epoch", "raw_value": "1685949959.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:25:56", "plugin": "core", "name": "start_epoch", "raw_value": "1685949956.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 32.265870332717896, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "f402f8280f29a761"}, "advancedOpt|table": true, "advancedOpt|outRawFragmentLengths": true, "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "aaf2b645e4c38c4a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:26:33.161593", "create_time": "2023-06-05T07:26:19.143578", "galaxy_version": "23.0", "command_version": "bamPEFragmentSize 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-p5tdk", "command_line": "ln -s '/galaxy/server/database/objects/8/7/2/dataset_8726e223-6c34-4eaf-bc51-2fc1ab838b5d.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/4/0/1/metadata_40172861-3ae5-47a4-ac0b-2d9b10039400.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --plotTitle '' --binSize '1000' --distanceBetweenBins '1000000'  --maxFragmentLength '0'     --table '/galaxy/server/database/objects/b/5/a/dataset_b5a17313-b4c8-41d7-8efa-6756ee3f9015.dat' --outRawFragmentLengths '/galaxy/server/database/objects/f/2/5/dataset_f25202b7-0a9d-4170-ac48-14ecf25ac0da.dat' > '/galaxy/server/database/objects/0/2/1/dataset_0213d05b-77a8-4522-bbf9-95208e1f366e.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"binSize\": \"1000\", \"blackListFileName\": null, \"distanceBetweenBins\": \"1000000\", \"logScale\": false, \"maxFragmentLength\": \"0\", \"outRawFragmentLengths\": true, \"showAdvancedOpt\": \"yes\", \"table\": true}", "plotTitle": "\"\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "false", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 694, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"bamfiles1": {"id": "f402f8280f29a761", "src": "hda", "uuid": "8726e223-6c34-4eaf-bc51-2fc1ab838b5d"}, "bamfiles": {"id": "f402f8280f29a761", "src": "hda", "uuid": "8726e223-6c34-4eaf-bc51-2fc1ab838b5d"}}, "outputs": {"fragLengths": {"id": "cb70475944317cbc", "src": "hda", "uuid": "f25202b7-0a9d-4170-ac48-14ecf25ac0da"}, "table": {"id": "941cf66e0fd15eaf", "src": "hda", "uuid": "b5a17313-b4c8-41d7-8efa-6756ee3f9015"}, "outfile": {"id": "c307e47bed44c98d", "src": "hda", "uuid": "0213d05b-77a8-4522-bbf9-95208e1f366e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:26:24", "plugin": "core", "name": "end_epoch", "raw_value": "1685949984.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:26:20", "plugin": "core", "name": "start_epoch", "raw_value": "1685949980.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 28.672544479370117, "inputs": {"bigwigFile1": {"src": "hda", "id": "77ef6fb9157d551d"}, "bigwigFile2": {"src": "hda", "id": "77ef6fb9157d551d"}, "comparison|comparison_select": "ratio", "outFileFormat": "bigwig", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "de26133c7edb82b8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:26:39.283013", "create_time": "2023-06-05T07:26:27.139432", "galaxy_version": "23.0", "command_version": "bigwigCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-qjd2n", "command_line": "bigwigCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bigwig1 '/galaxy/server/database/objects/2/c/e/dataset_2cef880b-6e1e-43ec-8d1e-50f3e97e8814.dat' --bigwig2 '/galaxy/server/database/objects/2/c/e/dataset_2cef880b-6e1e-43ec-8d1e-50f3e97e8814.dat'  --outFileName '/galaxy/server/database/objects/2/8/b/dataset_28b5f2ff-1c89-4dbd-9872-608a4c88f1e5.dat' --outFileFormat 'bigwig'  --operation ratio  --pseudocount 1 1", "traceback": null, "params": {"__input_ext": "\"bigwig\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "region": "\"\"", "outFileFormat": "\"bigwig\"", "comparison": "{\"__current_case__\": 1, \"comparison_select\": \"ratio\", \"pseudocount\": \"1 1\"}"}, "inputs": {"bigwigFile2": {"id": "77ef6fb9157d551d", "src": "hda", "uuid": "2cef880b-6e1e-43ec-8d1e-50f3e97e8814"}, "bigwigFile1": {"id": "77ef6fb9157d551d", "src": "hda", "uuid": "2cef880b-6e1e-43ec-8d1e-50f3e97e8814"}}, "outputs": {"outFileName": {"id": "72fc1840e909557c", "src": "hda", "uuid": "28b5f2ff-1c89-4dbd-9872-608a4c88f1e5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:26:29", "plugin": "core", "name": "end_epoch", "raw_value": "1685949989.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:26:29", "plugin": "core", "name": "start_epoch", "raw_value": "1685949989.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 32.30230927467346, "inputs": {"bigwigFile1": {"src": "hda", "id": "7b153e8d06ca1894"}, "bigwigFile2": {"src": "hda", "id": "7b153e8d06ca1894"}, "comparison|comparison_select": "ratio", "outFileFormat": "bedgraph", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "c57ba938480463c8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:27:06.639485", "create_time": "2023-06-05T07:26:53.498305", "galaxy_version": "23.0", "command_version": "bigwigCompare 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ql8qv", "command_line": "bigwigCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bigwig1 '/galaxy/server/database/objects/e/2/8/dataset_e287dc43-5dfb-4247-9196-66a11fa4939f.dat' --bigwig2 '/galaxy/server/database/objects/e/2/8/dataset_e287dc43-5dfb-4247-9196-66a11fa4939f.dat'  --outFileName '/galaxy/server/database/objects/8/6/3/dataset_86389fc4-1c45-4bf1-b077-a02fbeaba6d6.dat' --outFileFormat 'bedgraph'  --operation ratio  --pseudocount 1 1", "traceback": null, "params": {"__input_ext": "\"bigwig\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "region": "\"\"", "outFileFormat": "\"bedgraph\"", "comparison": "{\"__current_case__\": 1, \"comparison_select\": \"ratio\", \"pseudocount\": \"1 1\"}"}, "inputs": {"bigwigFile2": {"id": "7b153e8d06ca1894", "src": "hda", "uuid": "e287dc43-5dfb-4247-9196-66a11fa4939f"}, "bigwigFile1": {"id": "7b153e8d06ca1894", "src": "hda", "uuid": "e287dc43-5dfb-4247-9196-66a11fa4939f"}}, "outputs": {"outFileName": {"id": "b51df43885e2f9bc", "src": "hda", "uuid": "86389fc4-1c45-4bf1-b077-a02fbeaba6d6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:26:56", "plugin": "core", "name": "end_epoch", "raw_value": "1685950016.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:26:55", "plugin": "core", "name": "start_epoch", "raw_value": "1685950015.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_gc_bias/deeptools_compute_gc_bias/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_gc_bias/deeptools_compute_gc_bias", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 31.495513916015625, "inputs": {"bamInput": {"src": "hda", "id": "6523aead66e56ef4"}, "source|input1": {"src": "hda", "id": "8ebc7b7268aebe1f"}, "source|ref_source": "history", "effectiveGenomeSize|effectiveGenomeSize": "10050", "effectiveGenomeSize|effectiveGenomeSize_opt": "specific", "fragmentLength": "300", "region": "chr2L", "advancedOpt|sampleSize": "10", "advancedOpt|regionSize": "1", "advancedOpt|showAdvancedOpt": "yes", "image_format": "none"}, "job": {"model_class": "Job", "id": "3239088958c0def9", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:27:10.691276", "create_time": "2023-06-05T07:26:59.153935", "galaxy_version": "23.0", "command_version": "computeGCBias 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_gc_bias/deeptools_compute_gc_bias/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-m2nqz", "command_line": "ln -s '/galaxy/server/database/objects/c/9/8/dataset_c981848d-fba1-415f-836b-05606590c922.dat' local_bamInput.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/9/f/metadata_a9f98c40-da68-429b-b82e-b10fc0f70223.dat' local_bamInput.bam.bai &&  computeGCBias --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile local_bamInput.bam --GCbiasFrequenciesFile /galaxy/server/database/objects/0/5/3/dataset_05343621-fbce-4ac2-aca5-fb456fd28138.dat  --fragmentLength 300   --genome /galaxy/server/database/objects/8/3/1/dataset_83106263-c633-4a08-a219-bd1b5e002467.dat   --effectiveGenomeSize 10050  --region 'chr2L'  --sampleSize '10' --regionSize '1'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "image_format": "\"none\"", "advancedOpt": "{\"__current_case__\": 1, \"blackListFileName\": null, \"extraSampling\": null, \"regionSize\": \"1\", \"sampleSize\": \"10\", \"showAdvancedOpt\": \"yes\"}", "region": "\"chr2L\"", "fragmentLength": "\"300\"", "effectiveGenomeSize": "{\"__current_case__\": 0, \"effectiveGenomeSize\": \"10050\", \"effectiveGenomeSize_opt\": \"specific\"}", "source": "{\"__current_case__\": 1, \"input1\": {\"values\": [{\"id\": 702, \"src\": \"hda\"}]}, \"ref_source\": \"history\"}"}, "inputs": {"input1": {"id": "8ebc7b7268aebe1f", "src": "hda", "uuid": "83106263-c633-4a08-a219-bd1b5e002467"}, "bamInput": {"id": "6523aead66e56ef4", "src": "hda", "uuid": "c981848d-fba1-415f-836b-05606590c922"}}, "outputs": {"outFileName": {"id": "d2b0a413e9981850", "src": "hda", "uuid": "05343621-fbce-4ac2-aca5-fb456fd28138"}}, "output_collections": {}, "tool_stdout": "2bit: /galaxy/server/database/objects/8/3/1/dataset_83106263-c633-4a08-a219-bd1b5e002467.dat\nbam: local_bamInput.bam\nfilter_out: None\nextra_sampling_file: None\ngenome_size: 10050\ntotal_reads: 12589\nreads_per_bp: 1.252636815920398\nmax_reads: 1553.0\nmin_reads: 82.0\ncomputing frequencies\nstepSize: 1005\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "2bit: /galaxy/server/database/objects/8/3/1/dataset_83106263-c633-4a08-a219-bd1b5e002467.dat\nbam: local_bamInput.bam\nfilter_out: None\nextra_sampling_file: None\ngenome_size: 10050\ntotal_reads: 12589\nreads_per_bp: 1.252636815920398\nmax_reads: 1553.0\nmin_reads: 82.0\ncomputing frequencies\nstepSize: 1005\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:27:01", "plugin": "core", "name": "end_epoch", "raw_value": "1685950021.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:27:00", "plugin": "core", "name": "start_epoch", "raw_value": "1685950020.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 58.94920349121094, "inputs": {"regionsFiles_0|regionsFile": {"src": "hda", "id": "64e63a6fa3317e46"}, "multibigwig_conditional|bigwigfiles": {"src": "hda", "id": "428d1db218e4979d"}, "mode|beforeRegionStartLength": "10", "mode|afterRegionStartLength": "10", "mode|mode_select": "reference-point", "advancedOpt|binSize": "10", "advancedOpt|sortUsing": "sum", "advancedOpt|averageTypeBins": "sum", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "eb425438ca3eed4c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:24:28.830782", "create_time": "2023-06-05T07:23:50.820049", "galaxy_version": "23.0", "command_version": "computeMatrix 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-llvbx", "command_line": "ln -f -s '/galaxy/server/database/objects/d/8/1/dataset_d81f6d87-b588-4f03-89ea-1a05152f53aa.dat' 'bamCoverage_result4.bw_0.bw' &&    ln -f -s '/galaxy/server/database/objects/d/5/7/dataset_d5746d34-e38c-4902-bb22-2b293f8b88f7.dat' 'computeMatrix1_bed_0.bed' &&  computeMatrix  reference-point --regionsFileName 'computeMatrix1_bed_0.bed'  --scoreFileName 'bamCoverage_result4.bw_0.bw'  --outFileName '/galaxy/server/database/objects/c/8/3/dataset_c835e953-ea31-4e3f-a598-a9b032c69dde.dat' --samplesLabel 'bamCoverage_result4.bw'  --numberOfProcessors \"${GALAXY_SLOTS:-4}\"   --referencePoint TSS  --beforeRegionStartLength 10 --afterRegionStartLength 10  --sortRegions 'keep' --sortUsing 'sum' --averageTypeBins 'sum'   --binSize 10     --transcriptID transcript --exonID exon --transcript_id_designator transcript_id", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"averageTypeBins\": \"sum\", \"binSize\": \"10\", \"blackListFileName\": null, \"exonID\": \"exon\", \"maxThreshold\": \"\", \"metagene\": false, \"minThreshold\": \"\", \"missingDataAsZero\": false, \"scale\": \"\", \"showAdvancedOpt\": \"yes\", \"skipZeros\": false, \"sortRegions\": \"keep\", \"sortUsing\": \"sum\", \"transcriptID\": \"transcript\", \"transcript_id_designator\": \"transcript_id\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}", "mode": "{\"__current_case__\": 1, \"afterRegionStartLength\": \"10\", \"beforeRegionStartLength\": \"10\", \"mode_select\": \"reference-point\", \"nanAfterEnd\": false, \"referencePoint\": \"TSS\"}", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibigwig_conditional": "{\"__current_case__\": 0, \"bigwigfiles\": {\"values\": [{\"id\": 672, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "regionsFiles": "[{\"__index__\": 0, \"regionsFile\": {\"values\": [{\"id\": 671, \"src\": \"hda\"}]}}]"}, "inputs": {"bigwigfiles1": {"id": "428d1db218e4979d", "src": "hda", "uuid": "d81f6d87-b588-4f03-89ea-1a05152f53aa"}, "bigwigfiles": {"id": "428d1db218e4979d", "src": "hda", "uuid": "d81f6d87-b588-4f03-89ea-1a05152f53aa"}, "regionsFiles_0|regionsFile": {"id": "64e63a6fa3317e46", "src": "hda", "uuid": "d5746d34-e38c-4902-bb22-2b293f8b88f7"}}, "outputs": {"outFileName": {"id": "a0bd28be2155a5b1", "src": "hda", "uuid": "c835e953-ea31-4e3f-a598-a9b032c69dde"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:24:14", "plugin": "core", "name": "end_epoch", "raw_value": "1685949854.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:24:13", "plugin": "core", "name": "start_epoch", "raw_value": "1685949853.0000000"}, {"title": "Memory Allocated (MB)", "value": "32212", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32212.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 41.397854804992676, "inputs": {"regionsFiles_0|regionsFile": {"src": "hda", "id": "ae97d76e0a55e1eb"}, "multibigwig_conditional|bigwigfiles": {"src": "hda", "id": "0f55aac89f7d1808"}, "mode|beforeRegionStartLength": "10", "mode|afterRegionStartLength": "10", "mode|mode_select": "reference-point", "advancedOpt|binSize": "10", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "633d8e08584efe71", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:24:34.040903", "create_time": "2023-06-05T07:24:12.013879", "galaxy_version": "23.0", "command_version": "computeMatrix 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-8klwz", "command_line": "ln -f -s '/galaxy/server/database/objects/0/3/9/dataset_039bddc8-6898-4019-8a6b-cfd9b61a05dd.dat' 'computeMatrix2.bw_0.bw' &&    ln -f -s '/galaxy/server/database/objects/e/9/e/dataset_e9ea0ff6-c43b-4648-ba55-c7c3c329f97c.dat' 'computeMatrix2_bed_0.bed' &&  computeMatrix  reference-point --regionsFileName 'computeMatrix2_bed_0.bed'  --scoreFileName 'computeMatrix2.bw_0.bw'  --outFileName '/galaxy/server/database/objects/8/2/6/dataset_82642b41-0526-4eb0-b070-0c3f372c9357.dat' --samplesLabel 'computeMatrix2.bw'  --numberOfProcessors \"${GALAXY_SLOTS:-4}\"   --referencePoint TSS  --beforeRegionStartLength 10 --afterRegionStartLength 10  --sortRegions 'keep' --sortUsing 'mean' --averageTypeBins 'mean'   --binSize 10     --transcriptID transcript --exonID exon --transcript_id_designator transcript_id", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"averageTypeBins\": \"mean\", \"binSize\": \"10\", \"blackListFileName\": null, \"exonID\": \"exon\", \"maxThreshold\": \"\", \"metagene\": false, \"minThreshold\": \"\", \"missingDataAsZero\": false, \"scale\": \"\", \"showAdvancedOpt\": \"yes\", \"skipZeros\": false, \"sortRegions\": \"keep\", \"sortUsing\": \"mean\", \"transcriptID\": \"transcript\", \"transcript_id_designator\": \"transcript_id\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}", "mode": "{\"__current_case__\": 1, \"afterRegionStartLength\": \"10\", \"beforeRegionStartLength\": \"10\", \"mode_select\": \"reference-point\", \"nanAfterEnd\": false, \"referencePoint\": \"TSS\"}", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibigwig_conditional": "{\"__current_case__\": 0, \"bigwigfiles\": {\"values\": [{\"id\": 676, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "regionsFiles": "[{\"__index__\": 0, \"regionsFile\": {\"values\": [{\"id\": 675, \"src\": \"hda\"}]}}]"}, "inputs": {"bigwigfiles1": {"id": "0f55aac89f7d1808", "src": "hda", "uuid": "039bddc8-6898-4019-8a6b-cfd9b61a05dd"}, "bigwigfiles": {"id": "0f55aac89f7d1808", "src": "hda", "uuid": "039bddc8-6898-4019-8a6b-cfd9b61a05dd"}, "regionsFiles_0|regionsFile": {"id": "ae97d76e0a55e1eb", "src": "hda", "uuid": "e9ea0ff6-c43b-4648-ba55-c7c3c329f97c"}}, "outputs": {"outFileName": {"id": "cb9e6be9cb3360a6", "src": "hda", "uuid": "82642b41-0526-4eb0-b070-0c3f372c9357"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:24:24", "plugin": "core", "name": "end_epoch", "raw_value": "1685949864.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:24:23", "plugin": "core", "name": "start_epoch", "raw_value": "1685949863.0000000"}, {"title": "Memory Allocated (MB)", "value": "32212", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32212.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix", "tool_version": "3.3.2.0.0", "test_index": 2, "time_seconds": 31.130776405334473, "inputs": {"regionsFiles_0|regionsFile": {"src": "hda", "id": "a8347e8de6293844"}, "multibigwig_conditional|bigwigfiles": {"src": "hda", "id": "33ff0f7d7a5cbff0"}, "mode|mode_select": "scale-regions", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "fe286dd7fbab2812", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:24:59.978880", "create_time": "2023-06-05T07:24:48.637522", "galaxy_version": "23.0", "command_version": "computeMatrix 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_compute_matrix/deeptools_compute_matrix/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-t9cvv", "command_line": "ln -f -s '/galaxy/server/database/objects/b/8/0/dataset_b80aa1cc-3f56-4d40-b5c4-40c8ead1e54c.dat' 'computeMatrix2.bw_0.bw' &&    ln -f -s '/galaxy/server/database/objects/0/6/f/dataset_06fac052-87c9-4123-b870-551b7e3d8a6c.dat' 'computeMatrix2_bed_0.bed' &&  computeMatrix  scale-regions --regionsFileName 'computeMatrix2_bed_0.bed'  --scoreFileName 'computeMatrix2.bw_0.bw'  --outFileName '/galaxy/server/database/objects/2/4/6/dataset_24673a40-e816-4831-8bbe-f47f07b28bd2.dat' --samplesLabel 'computeMatrix2.bw'  --numberOfProcessors \"${GALAXY_SLOTS:-4}\"   --regionBodyLength 500   --sortRegions 'keep' --sortUsing 'mean' --averageTypeBins 'mean'   --binSize 50     --transcriptID transcript --exonID exon --transcript_id_designator transcript_id", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"averageTypeBins\": \"mean\", \"binSize\": \"50\", \"blackListFileName\": null, \"exonID\": \"exon\", \"maxThreshold\": \"\", \"metagene\": false, \"minThreshold\": \"\", \"missingDataAsZero\": false, \"scale\": \"\", \"showAdvancedOpt\": \"yes\", \"skipZeros\": false, \"sortRegions\": \"keep\", \"sortUsing\": \"mean\", \"transcriptID\": \"transcript\", \"transcript_id_designator\": \"transcript_id\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}", "mode": "{\"__current_case__\": 0, \"mode_select\": \"scale-regions\", \"regionBodyLength\": \"500\", \"regionStartLength\": {\"__current_case__\": 0, \"regionStartLength_select\": \"no\"}}", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibigwig_conditional": "{\"__current_case__\": 0, \"bigwigfiles\": {\"values\": [{\"id\": 679, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}", "regionsFiles": "[{\"__index__\": 0, \"regionsFile\": {\"values\": [{\"id\": 678, \"src\": \"hda\"}]}}]"}, "inputs": {"bigwigfiles1": {"id": "33ff0f7d7a5cbff0", "src": "hda", "uuid": "b80aa1cc-3f56-4d40-b5c4-40c8ead1e54c"}, "bigwigfiles": {"id": "33ff0f7d7a5cbff0", "src": "hda", "uuid": "b80aa1cc-3f56-4d40-b5c4-40c8ead1e54c"}, "regionsFiles_0|regionsFile": {"id": "a8347e8de6293844", "src": "hda", "uuid": "06fac052-87c9-4123-b870-551b7e3d8a6c"}}, "outputs": {"outFileName": {"id": "7a641906f0d91eb8", "src": "hda", "uuid": "24673a40-e816-4831-8bbe-f47f07b28bd2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...\n", "job_stdout": "", "job_stderr": "", "stderr": "A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...\nA region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:24:51", "plugin": "core", "name": "end_epoch", "raw_value": "1685949891.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:24:50", "plugin": "core", "name": "start_epoch", "raw_value": "1685949890.0000000"}, {"title": "Memory Allocated (MB)", "value": "32212", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32212.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_correct_gc_bias/deeptools_correct_gc_bias/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_correct_gc_bias/deeptools_correct_gc_bias", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 37.020774126052856, "inputs": {"GCbiasFrequenciesFile": {"src": "hda", "id": "787c86bd5a0752dc"}, "bamInput": {"src": "hda", "id": "9acba3fae60fa30c"}, "source|input1": {"src": "hda", "id": "8d40f0e6d975c417"}, "source|ref_source": "history", "effectiveGenomeSize|effectiveGenomeSize": "10050", "effectiveGenomeSize|effectiveGenomeSize_opt": "specific"}, "job": {"model_class": "Job", "id": "c162c88f95926c6c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:27:43.446891", "create_time": "2023-06-05T07:27:30.077859", "galaxy_version": "23.0", "command_version": "correctGCBias 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_correct_gc_bias/deeptools_correct_gc_bias/3.3.2.0.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-44x95", "command_line": "ln -s '/galaxy/server/database/objects/7/8/e/dataset_78e9cd01-bfa2-47c5-8e5f-66c4d881148e.dat' local_bamInput.bam && ln -s '/galaxy/server/database/objects/_metadata_files/4/f/3/metadata_4f34234f-207a-411b-80c9-9e7755c93e52.dat' local_bamInput.bam.bai &&  correctGCBias --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile local_bamInput.bam --GCbiasFrequenciesFile '/galaxy/server/database/objects/9/a/6/dataset_9a6fdc80-52a3-44c6-ab3e-878738ff7f5a.dat'   --genome /galaxy/server/database/objects/f/5/8/dataset_f5886f0c-4f7b-4e31-b569-72afec96da0c.dat   --effectiveGenomeSize 10050  --correctedFile corrected.bam", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "region": "\"\"", "effectiveGenomeSize": "{\"__current_case__\": 0, \"effectiveGenomeSize\": \"10050\", \"effectiveGenomeSize_opt\": \"specific\"}", "source": "{\"__current_case__\": 1, \"input1\": {\"values\": [{\"id\": 707, \"src\": \"hda\"}]}, \"ref_source\": \"history\"}"}, "inputs": {"input1": {"id": "8d40f0e6d975c417", "src": "hda", "uuid": "f5886f0c-4f7b-4e31-b569-72afec96da0c"}, "bamInput": {"id": "9acba3fae60fa30c", "src": "hda", "uuid": "78e9cd01-bfa2-47c5-8e5f-66c4d881148e"}, "GCbiasFrequenciesFile": {"id": "787c86bd5a0752dc", "src": "hda", "uuid": "9a6fdc80-52a3-44c6-ab3e-878738ff7f5a"}}, "outputs": {"outFileName": {"id": "b2fd6883ba3eec4a", "src": "hda", "uuid": "d964722d-f623-4b36-bfce-a7d17ae7253f"}}, "output_collections": {}, "tool_stdout": "applying correction\ngenome partition size for multiprocessing: 319326\nusing region None\n{'chr2L': 'chr2L'} {'chr2L': 'chr2L'}\nusing 8 processors for 73 number of tasks\nconcatenating (sorted) intermediate BAMs\nindexing BAM\nSam for chr2L 1915956 2235282 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:1915956-2235282\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2235282 2554608 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2235282-2554608\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2554608 2873934 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2554608-2873934\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8621802 8941128 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:8621802-8941128\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8941128 9260454 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:8941128-9260454\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9260454 9579780 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:9260454-9579780\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14369670 14688996 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:14369670-14688996\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14688996 15008322 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:14688996-15008322\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15008322 15327648 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:15008322-15327648\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 957978 1277304 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:957978-1277304\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1277304 1596630 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1277304-1596630\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1596630 1915956 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1596630-1915956\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13411692 13731018 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13411692-13731018\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13731018 14050344 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13731018-14050344\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14050344 14369670 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:14050344-14369670\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18201582 18520908 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:18201582-18520908\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18520908 18840234 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:18520908-18840234\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18840234 19159560 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:18840234-19159560\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5747868 6067194 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:5747868-6067194\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6067194 6386520 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6067194-6386520\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6386520 6705846 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6386520-6705846\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11495736 11815062 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:11495736-11815062\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11815062 12134388 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:11815062-12134388\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12134388 12453714 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:12134388-12453714\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19159560 19478886 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19159560-19478886\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19478886 19798212 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19478886-19798212\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19798212 20117538 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19798212-20117538\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3831912 4151238 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:3831912-4151238\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4151238 4470564 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4151238-4470564\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4470564 4789890 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4470564-4789890\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10537758 10857084 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10537758-10857084\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10857084 11176410 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10857084-11176410\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11176410 11495736 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:11176410-11495736\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17243604 17562930 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:17243604-17562930\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17562930 17882256 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:17562930-17882256\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17882256 18201582 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:17882256-18201582\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2873934 3193260 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:2873934-3193260\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3193260 3512586 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3193260-3512586\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3512586 3831912 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3512586-3831912\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12453714 12773040 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:12453714-12773040\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12773040 13092366 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:12773040-13092366\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13092366 13411692 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:13092366-13411692\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20117538 20436864 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:20117538-20436864\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20436864 20756190 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:20436864-20756190\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20756190 21075516 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:20756190-21075516\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22991472 23011544 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:22991472-23011544\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4789890 5109216 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:4789890-5109216\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5109216 5428542 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5109216-5428542\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5428542 5747868 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5428542-5747868\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7663824 7983150 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:7663824-7983150\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7983150 8302476 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:7983150-8302476\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8302476 8621802 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:8302476-8621802\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15327648 15646974 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:15327648-15646974\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15646974 15966300 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:15646974-15966300\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15966300 16285626 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:15966300-16285626\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22033494 22352820 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22033494-22352820\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22352820 22672146 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22352820-22672146\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22672146 22991472 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22672146-22991472\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6705846 7025172 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:6705846-7025172\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7025172 7344498 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7025172-7344498\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7344498 7663824 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7344498-7663824\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9579780 9899106 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:9579780-9899106\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9899106 10218432 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:9899106-10218432\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10218432 10537758 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:10218432-10537758\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16285626 16604952 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:16285626-16604952\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16604952 16924278 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:16604952-16924278\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16924278 17243604 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:16924278-17243604\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21075516 21394842 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:21075516-21394842\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21394842 21714168 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:21394842-21714168\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21714168 22033494 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:21714168-22033494\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 0 319326 \nForkPoolWorker-1,  processing 12589 (22496.6 per sec) reads @ chr2L:0-319326\nduplicated reads removed 426 of 12589 (3.38) \nSam for chr2L 319326 638652 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:319326-638652\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 638652 957978 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:638652-957978\nduplicated reads removed 0 of 0 (0.00) \n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "applying correction\ngenome partition size for multiprocessing: 319326\nusing region None\n{'chr2L': 'chr2L'} {'chr2L': 'chr2L'}\nusing 8 processors for 73 number of tasks\nconcatenating (sorted) intermediate BAMs\nindexing BAM\nSam for chr2L 1915956 2235282 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:1915956-2235282\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2235282 2554608 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2235282-2554608\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2554608 2873934 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:2554608-2873934\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8621802 8941128 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:8621802-8941128\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8941128 9260454 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:8941128-9260454\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9260454 9579780 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:9260454-9579780\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14369670 14688996 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:14369670-14688996\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14688996 15008322 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:14688996-15008322\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15008322 15327648 \nForkPoolWorker-3,  processing 0 (0.0 per sec) reads @ chr2L:15008322-15327648\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 957978 1277304 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:957978-1277304\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1277304 1596630 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1277304-1596630\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 1596630 1915956 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:1596630-1915956\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13411692 13731018 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13411692-13731018\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13731018 14050344 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:13731018-14050344\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 14050344 14369670 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:14050344-14369670\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18201582 18520908 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:18201582-18520908\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18520908 18840234 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:18520908-18840234\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 18840234 19159560 \nForkPoolWorker-2,  processing 0 (0.0 per sec) reads @ chr2L:18840234-19159560\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5747868 6067194 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:5747868-6067194\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6067194 6386520 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6067194-6386520\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6386520 6705846 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:6386520-6705846\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11495736 11815062 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:11495736-11815062\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11815062 12134388 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:11815062-12134388\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12134388 12453714 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:12134388-12453714\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19159560 19478886 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19159560-19478886\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19478886 19798212 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19478886-19798212\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 19798212 20117538 \nForkPoolWorker-7,  processing 0 (0.0 per sec) reads @ chr2L:19798212-20117538\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3831912 4151238 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:3831912-4151238\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4151238 4470564 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4151238-4470564\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4470564 4789890 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:4470564-4789890\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10537758 10857084 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10537758-10857084\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10857084 11176410 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:10857084-11176410\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 11176410 11495736 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:11176410-11495736\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17243604 17562930 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:17243604-17562930\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17562930 17882256 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:17562930-17882256\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 17882256 18201582 \nForkPoolWorker-5,  processing 0 (0.0 per sec) reads @ chr2L:17882256-18201582\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 2873934 3193260 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:2873934-3193260\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3193260 3512586 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3193260-3512586\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 3512586 3831912 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:3512586-3831912\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12453714 12773040 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:12453714-12773040\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 12773040 13092366 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:12773040-13092366\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 13092366 13411692 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:13092366-13411692\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20117538 20436864 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:20117538-20436864\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20436864 20756190 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:20436864-20756190\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 20756190 21075516 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:20756190-21075516\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22991472 23011544 \nForkPoolWorker-4,  processing 0 (0.0 per sec) reads @ chr2L:22991472-23011544\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 4789890 5109216 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:4789890-5109216\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5109216 5428542 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5109216-5428542\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 5428542 5747868 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:5428542-5747868\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7663824 7983150 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:7663824-7983150\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7983150 8302476 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:7983150-8302476\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 8302476 8621802 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:8302476-8621802\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15327648 15646974 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:15327648-15646974\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15646974 15966300 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:15646974-15966300\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 15966300 16285626 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:15966300-16285626\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22033494 22352820 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22033494-22352820\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22352820 22672146 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22352820-22672146\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 22672146 22991472 \nForkPoolWorker-6,  processing 0 (0.0 per sec) reads @ chr2L:22672146-22991472\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 6705846 7025172 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:6705846-7025172\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7025172 7344498 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7025172-7344498\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 7344498 7663824 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:7344498-7663824\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9579780 9899106 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:9579780-9899106\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 9899106 10218432 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:9899106-10218432\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 10218432 10537758 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:10218432-10537758\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16285626 16604952 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:16285626-16604952\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16604952 16924278 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:16604952-16924278\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 16924278 17243604 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:16924278-17243604\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21075516 21394842 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:21075516-21394842\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21394842 21714168 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:21394842-21714168\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 21714168 22033494 \nForkPoolWorker-8,  processing 0 (0.0 per sec) reads @ chr2L:21714168-22033494\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 0 319326 \nForkPoolWorker-1,  processing 12589 (22496.6 per sec) reads @ chr2L:0-319326\nduplicated reads removed 426 of 12589 (3.38) \nSam for chr2L 319326 638652 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:319326-638652\nduplicated reads removed 0 of 0 (0.00) \nSam for chr2L 638652 957978 \nForkPoolWorker-1,  processing 0 (0.0 per sec) reads @ chr2L:638652-957978\nduplicated reads removed 0 of 0 (0.00) \n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:27:33", "plugin": "core", "name": "end_epoch", "raw_value": "1685950053.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:27:31", "plugin": "core", "name": "start_epoch", "raw_value": "1685950051.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap", "tool_version": "3.3.2.0.1", "test_index": 0, "time_seconds": 30.21349048614502, "inputs": {"matrixFile": {"src": "hda", "id": "04cca4f4559529ae"}}, "job": {"model_class": "Job", "id": "90165bd5ad8eedd0", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:25:04.288226", "create_time": "2023-06-05T07:24:52.430980", "galaxy_version": "23.0", "command_version": "plotHeatmap 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-cvd86", "command_line": "plotHeatmap --matrixFile '/galaxy/server/database/objects/0/8/7/dataset_087e8125-d7e1-4c7b-bf0a-4accb1cb67fa.dat' --outFileName '/galaxy/server/database/objects/c/e/5/dataset_ce507907-f905-4ffc-a988-b3817450ea6f.dat'  --plotFileFormat 'png'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}"}, "inputs": {"matrixFile": {"id": "04cca4f4559529ae", "src": "hda", "uuid": "087e8125-d7e1-4c7b-bf0a-4accb1cb67fa"}}, "outputs": {"outFileName": {"id": "5730da507c9d0672", "src": "hda", "uuid": "ce507907-f905-4ffc-a988-b3817450ea6f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:24:55", "plugin": "core", "name": "end_epoch", "raw_value": "1685949895.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:24:53", "plugin": "core", "name": "start_epoch", "raw_value": "1685949893.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap", "tool_version": "3.3.2.0.1", "test_index": 1, "time_seconds": 29.821688175201416, "inputs": {"matrixFile": {"src": "hda", "id": "4802bee9a2ebd32f"}, "advancedOpt|whatToShow": "heatmap and colorbar", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "5b3c5c242c6d76a0", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:25:30.087072", "create_time": "2023-06-05T07:25:17.064425", "galaxy_version": "23.0", "command_version": "plotHeatmap 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.3.2.0.1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zbvgs", "command_line": "plotHeatmap --matrixFile '/galaxy/server/database/objects/8/e/e/dataset_8ee9f510-56fe-4d21-9171-045d0ca73cb0.dat' --outFileName '/galaxy/server/database/objects/f/b/1/dataset_fb1230d4-2f0d-4bd6-aa16-a52438019adf.dat'  --plotFileFormat 'png'  --sortRegions 'descend'  --sortUsing 'mean'  --averageTypeSummaryPlot 'mean'  --plotType 'lines'  --missingDataColor 'black'   --alpha '1.0'    --xAxisLabel 'distance from TSS (bp)' --yAxisLabel 'genes'  --heatmapWidth 7.5 --heatmapHeight 25.0  --whatToShow 'heatmap and colorbar'  --startLabel 'TSS' --endLabel 'TES'  --refPointLabel 'TSS'     --legendLocation 'best'  --labelRotation '0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"alpha\": \"1.0\", \"averageTypeSummaryPlot\": \"mean\", \"colorList\": \"\", \"colorMapRepeat\": [], \"endLabel\": \"TES\", \"heatmapHeight\": \"25.0\", \"heatmapWidth\": \"7.5\", \"labelRotation\": \"0\", \"legendLocation\": \"best\", \"missingDataColor\": \"black\", \"perGroup\": false, \"plotTitle\": \"\", \"plotType\": \"lines\", \"referencePointLabel\": \"TSS\", \"regionsLabel\": null, \"samplesLabel\": null, \"showAdvancedOpt\": \"yes\", \"sortRegions\": \"descend\", \"sortUsing\": \"mean\", \"startLabel\": \"TSS\", \"used_multiple_regions\": {\"__current_case__\": 1, \"used_multiple_regions_options\": \"yes\"}, \"whatToShow\": \"heatmap and colorbar\", \"xAxisLabel\": \"distance from TSS (bp)\", \"yAxisLabel\": \"genes\", \"yMax\": \"\", \"yMin\": \"\", \"zMax\": \"\", \"zMin\": \"\"}", "output": "{\"__current_case__\": 0, \"showOutputSettings\": \"no\"}"}, "inputs": {"matrixFile": {"id": "4802bee9a2ebd32f", "src": "hda", "uuid": "8ee9f510-56fe-4d21-9171-045d0ca73cb0"}}, "outputs": {"outFileName": {"id": "45f746fa38328a4f", "src": "hda", "uuid": "fb1230d4-2f0d-4bd6-aa16-a52438019adf"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:25:20", "plugin": "core", "name": "end_epoch", "raw_value": "1685949920.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:25:18", "plugin": "core", "name": "start_epoch", "raw_value": "1685949918.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon", "tool_version": "1.4.13", "test_index": 0, "time_seconds": 46.24245357513428, "inputs": {"reads": {"src": "hda", "id": "41696e5265200b1e"}, "overlaps": {"src": "hda", "id": "a3bd474088b9bf9a"}, "corrected_reads": {"src": "hda", "id": "0cccc2ef143848a1"}, "u": true, "f": true, "w": "800", "e": "0.2"}, "job": {"model_class": "Job", "id": "fcb7cb909e5e76a6", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:30:06.191169", "create_time": "2023-06-05T06:29:43.139782", "galaxy_version": "23.0", "command_version": "v1.4.13", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-66pxr", "command_line": "ln -s '/galaxy/server/database/objects/9/4/c/dataset_94cf7079-32b0-4b14-a4c2-8e1b65e17c92.dat' reads.fasta && ln -s '/galaxy/server/database/objects/1/f/5/dataset_1f571367-4f72-41e3-9a78-2a7d3893acf6.dat' overlaps.sam && ln -s '/galaxy/server/database/objects/3/0/0/dataset_300679e0-41fa-4b32-b269-6dcc6a79df9d.dat' corrected_reads.fasta &&  racon reads.fasta overlaps.sam corrected_reads.fasta -t ${GALAXY_SLOTS:-4} -u -f -w 800 -q 10.0 -e 0.2 -m 5 -x -4 -g -8 > racon_polished_consensus.fa", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "g": "\"-8\"", "x": "\"-4\"", "m": "\"5\"", "e": "\"0.2\"", "q": "\"10.0\"", "w": "\"800\"", "f": "true", "u": "true"}, "inputs": {"reads": {"id": "41696e5265200b1e", "src": "hda", "uuid": "94cf7079-32b0-4b14-a4c2-8e1b65e17c92"}, "overlaps": {"id": "a3bd474088b9bf9a", "src": "hda", "uuid": "1f571367-4f72-41e3-9a78-2a7d3893acf6"}, "corrected_reads": {"id": "0cccc2ef143848a1", "src": "hda", "uuid": "300679e0-41fa-4b32-b269-6dcc6a79df9d"}}, "outputs": {"consensus": {"id": "235a3063964f7910", "src": "hda", "uuid": "d3ff2688-b789-42fb-a438-509377640470"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[racon::Polisher::initialize] loaded target sequences 0.001174 s\n[racon::Polisher::initialize] loaded sequences 0.012307 s\n[racon::Polisher::initialize] loaded overlaps 0.010703 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.005792 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.005815 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.005821 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.005827 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.005833 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.005838 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.005844 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.005849 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.005854 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.005859 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.005865 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.005872 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.005877 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.005882 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.005887 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.005893 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.005898 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.005906 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.005992 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.006103 s\n[racon::Polisher::initialize] transformed data into windows 0.000268 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.089379 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.089626 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.102200 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.102227 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.102239 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.116613 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.120009 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.148987 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.171446 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.197859 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.238146 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.247999 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.297213 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.306409 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.306444 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.348800 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.348832 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.371277 s\r[racon::Polisher::polish] generating consensus [===================>] 0.404037 s\r[racon::Polisher::polish] generating consensus [====================] 0.404259 s\n[racon::Polisher::] total = 0.440784 s\n", "job_stdout": "", "job_stderr": "", "stderr": "[racon::Polisher::initialize] loaded target sequences 0.001174 s\n[racon::Polisher::initialize] loaded sequences 0.012307 s\n[racon::Polisher::initialize] loaded overlaps 0.010703 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.005792 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.005815 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.005821 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.005827 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.005833 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.005838 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.005844 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.005849 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.005854 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.005859 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.005865 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.005872 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.005877 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.005882 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.005887 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.005893 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.005898 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.005906 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.005992 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.006103 s\n[racon::Polisher::initialize] transformed data into windows 0.000268 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.089379 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.089626 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.102200 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.102227 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.102239 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.116613 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.120009 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.148987 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.171446 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.197859 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.238146 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.247999 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.297213 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.306409 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.306444 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.348800 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.348832 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.371277 s\r[racon::Polisher::polish] generating consensus [===================>] 0.404037 s\r[racon::Polisher::polish] generating consensus [====================] 0.404259 s\n[racon::Polisher::] total = 0.440784 s\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:29:52", "plugin": "core", "name": "end_epoch", "raw_value": "1685946592.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:29:51", "plugin": "core", "name": "start_epoch", "raw_value": "1685946591.0000000"}, {"title": "Memory Allocated (MB)", "value": "38654", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "38654.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon", "tool_version": "1.4.13", "test_index": 1, "time_seconds": 38.078709840774536, "inputs": {"reads": {"src": "hda", "id": "54095b8172af50ef"}, "overlaps": {"src": "hda", "id": "5c470b38c7941d62"}, "corrected_reads": {"src": "hda", "id": "58f523d78760932a"}}, "job": {"model_class": "Job", "id": "f7f53aa4ee53ceda", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:30:18.137162", "create_time": "2023-06-05T06:30:06.727019", "galaxy_version": "23.0", "command_version": "v1.4.13", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.4.13", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zhgj8", "command_line": "ln -s '/galaxy/server/database/objects/d/2/2/dataset_d22ee323-5f16-4652-b2bc-b9842217dea7.dat' reads.fasta && ln -s '/galaxy/server/database/objects/c/c/4/dataset_cc4794cd-bf0e-4bb7-a655-69342af5359b.dat' overlaps.paf && ln -s '/galaxy/server/database/objects/4/5/0/dataset_45001a74-7d40-4891-9f01-d986d26a718a.dat' corrected_reads.fasta &&  racon reads.fasta overlaps.paf corrected_reads.fasta -t ${GALAXY_SLOTS:-4}   -w 500 -q 10.0 -e 0.3 -m 5 -x -4 -g -8 > racon_polished_consensus.fa", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "g": "\"-8\"", "x": "\"-4\"", "m": "\"5\"", "e": "\"0.3\"", "q": "\"10.0\"", "w": "\"500\"", "f": "false", "u": "false"}, "inputs": {"reads": {"id": "54095b8172af50ef", "src": "hda", "uuid": "d22ee323-5f16-4652-b2bc-b9842217dea7"}, "overlaps": {"id": "5c470b38c7941d62", "src": "hda", "uuid": "cc4794cd-bf0e-4bb7-a655-69342af5359b"}, "corrected_reads": {"id": "58f523d78760932a", "src": "hda", "uuid": "45001a74-7d40-4891-9f01-d986d26a718a"}}, "outputs": {"consensus": {"id": "979f06215f24aa11", "src": "hda", "uuid": "45447f75-93fd-49a6-a53f-5003c9d3802e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[racon::Polisher::initialize] loaded target sequences 0.000930 s\n[racon::Polisher::initialize] loaded sequences 0.012485 s\n[racon::Polisher::initialize] loaded overlaps 0.000535 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.023469 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.027870 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.027889 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.032466 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.037822 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.040313 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.044241 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.048563 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.059906 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.059926 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.062761 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.070039 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.076817 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.077805 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.084201 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.087298 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.092525 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.094797 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.098009 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.111223 s\n[racon::Polisher::initialize] transformed data into windows 0.000253 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.019560 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.025195 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.029553 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.034936 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.034968 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.037212 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.040529 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.045968 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.048789 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.058169 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.068716 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.077006 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.099558 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.107194 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.119675 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.124087 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.135001 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.135148 s\r[racon::Polisher::polish] generating consensus [===================>] 0.152700 s\r[racon::Polisher::polish] generating consensus [====================] 0.193753 s\n[racon::Polisher::] total = 0.322992 s\n", "job_stdout": "", "job_stderr": "", "stderr": "[racon::Polisher::initialize] loaded target sequences 0.000930 s\n[racon::Polisher::initialize] loaded sequences 0.012485 s\n[racon::Polisher::initialize] loaded overlaps 0.000535 s\n[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.023469 s\r[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.027870 s\r[racon::Polisher::initialize] aligning overlaps [===>                ] 0.027889 s\r[racon::Polisher::initialize] aligning overlaps [====>               ] 0.032466 s\r[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.037822 s\r[racon::Polisher::initialize] aligning overlaps [======>             ] 0.040313 s\r[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.044241 s\r[racon::Polisher::initialize] aligning overlaps [========>           ] 0.048563 s\r[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.059906 s\r[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.059926 s\r[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.062761 s\r[racon::Polisher::initialize] aligning overlaps [============>       ] 0.070039 s\r[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.076817 s\r[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.077805 s\r[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.084201 s\r[racon::Polisher::initialize] aligning overlaps [================>   ] 0.087298 s\r[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.092525 s\r[racon::Polisher::initialize] aligning overlaps [==================> ] 0.094797 s\r[racon::Polisher::initialize] aligning overlaps [===================>] 0.098009 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.111223 s\n[racon::Polisher::initialize] transformed data into windows 0.000253 s\n[racon::Polisher::polish] generating consensus [=>                  ] 0.019560 s\r[racon::Polisher::polish] generating consensus [==>                 ] 0.025195 s\r[racon::Polisher::polish] generating consensus [===>                ] 0.029553 s\r[racon::Polisher::polish] generating consensus [====>               ] 0.034936 s\r[racon::Polisher::polish] generating consensus [=====>              ] 0.034968 s\r[racon::Polisher::polish] generating consensus [======>             ] 0.037212 s\r[racon::Polisher::polish] generating consensus [=======>            ] 0.040529 s\r[racon::Polisher::polish] generating consensus [========>           ] 0.045968 s\r[racon::Polisher::polish] generating consensus [=========>          ] 0.048789 s\r[racon::Polisher::polish] generating consensus [==========>         ] 0.058169 s\r[racon::Polisher::polish] generating consensus [===========>        ] 0.068716 s\r[racon::Polisher::polish] generating consensus [============>       ] 0.077006 s\r[racon::Polisher::polish] generating consensus [=============>      ] 0.099558 s\r[racon::Polisher::polish] generating consensus [==============>     ] 0.107194 s\r[racon::Polisher::polish] generating consensus [===============>    ] 0.119675 s\r[racon::Polisher::polish] generating consensus [================>   ] 0.124087 s\r[racon::Polisher::polish] generating consensus [=================>  ] 0.135001 s\r[racon::Polisher::polish] generating consensus [==================> ] 0.135148 s\r[racon::Polisher::polish] generating consensus [===================>] 0.152700 s\r[racon::Polisher::polish] generating consensus [====================] 0.193753 s\n[racon::Polisher::] total = 0.322992 s\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:30:09", "plugin": "core", "name": "end_epoch", "raw_value": "1685946609.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:30:08", "plugin": "core", "name": "start_epoch", "raw_value": "1685946608.0000000"}, {"title": "Memory Allocated (MB)", "value": "38654", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "38654.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 0, "time_seconds": 39.890647411346436, "inputs": {"split_parms|input": {"src": "hda", "id": "1379e34152c78d00"}, "split_parms|top": "2", "split_parms|split_by|id_col": "1", "split_parms|split_by|match_regex": "(.*)\\.mgf", "split_parms|split_by|sub_regex": "\\1.tab", "split_parms|split_by|select_split_by": "col", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "4584406d8d6e952d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:15:43.533796", "create_time": "2023-06-05T07:15:26.856751", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-tjhkn", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/1/4/9/dataset_1495cdc0-8314-425c-aa57-693493793e05.dat' --ftype 'tabular' --top '2' --by 'col' --id_column '1' --match '(.*)__backslash__.mgf' --sub '__backslash__1.tab'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 559, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 0, \"id_col\": \"1\", \"match_regex\": \"(.*)\\\\.mgf\", \"select_split_by\": \"col\", \"sub_regex\": \"\\\\1.tab\"}, \"top\": \"2\"}"}, "inputs": {"input": {"id": "1379e34152c78d00", "src": "hda", "uuid": "1495cdc0-8314-425c-aa57-693493793e05"}}, "outputs": {"__new_primary_file_list_output_tab|foo3.tab__": {"id": "9751e6b8a6c952ee", "src": "hda", "uuid": "c4854414-d8c2-49ba-ac31-9e17143c344f"}, "__new_primary_file_list_output_tab|foo2.tab__": {"id": "49ac2f708b4a00d3", "src": "hda", "uuid": "26d71d52-86b5-4376-8dde-b76a4fa525fc"}, "__new_primary_file_list_output_tab|foo.tab__": {"id": "8b1bb0e561633edb", "src": "hda", "uuid": "ba515b59-00bc-4f0f-8e4b-15b742a6bf98"}}, "output_collections": {"list_output_tab": {"id": "4658257b878ad57e", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:15:33", "plugin": "core", "name": "end_epoch", "raw_value": "1685949333.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:15:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685949332.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 1, "time_seconds": 36.25036573410034, "inputs": {"split_parms|input": {"src": "hda", "id": "dac8bba5ac90af75"}, "split_parms|top": "2", "split_parms|split_by|select_mode|numnew": "2", "split_parms|split_by|select_mode|mode": "numnew", "split_parms|split_by|newfilenames": "test", "split_parms|split_by|select_split_by": "row", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "fc4224f815d05bf3", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:16:11.436212", "create_time": "2023-06-05T07:15:51.054396", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-g9j77", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/f/0/3/dataset_f0368b50-e172-42e9-b4c7-36cd6817cfbc.dat' --ftype 'tabular' --top '2' --by 'row' --numnew '2' --file_names 'test' --file_ext 'tabular'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 565, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 1, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"select_split_by\": \"row\"}, \"top\": \"2\"}"}, "inputs": {"input": {"id": "dac8bba5ac90af75", "src": "hda", "uuid": "f0368b50-e172-42e9-b4c7-36cd6817cfbc"}}, "outputs": {"__new_primary_file_list_output_tab|test_000001.tabular__": {"id": "a02dc8a541183a00", "src": "hda", "uuid": "d37912bc-84ef-44b2-8ed1-abc7816751e4"}, "__new_primary_file_list_output_tab|test_000000.tabular__": {"id": "ae1f911355347e14", "src": "hda", "uuid": "e27a97e1-6d63-49d9-8ecd-895796ecdac0"}}, "output_collections": {"list_output_tab": {"id": "9c8803d3c0389406", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:16:01", "plugin": "core", "name": "end_epoch", "raw_value": "1685949361.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:16:01", "plugin": "core", "name": "start_epoch", "raw_value": "1685949361.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-10", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 10, "time_seconds": 28.625036239624023, "inputs": {"split_parms|input": {"src": "hda", "id": "a1f13d33f2824e72"}, "split_parms|split_method|record_length": "4", "split_parms|split_method|select_split_method": "number", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "43f9f789ef643ca9", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:18:23.671687", "create_time": "2023-06-05T07:18:12.020546", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-tq4qk", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/f/9/d/dataset_f9d2753e-fb45-4cd2-a816-56acbe9e3781.dat' --ftype 'generic' --generic_num 4 --numnew '2' --file_names 'test' --file_ext 'fastq'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 614, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 1, \"record_length\": \"4\", \"select_split_method\": \"number\"}}"}, "inputs": {"input": {"id": "a1f13d33f2824e72", "src": "hda", "uuid": "f9d2753e-fb45-4cd2-a816-56acbe9e3781"}}, "outputs": {"__new_primary_file_list_output_generic|test_000001__": {"id": "523651c9cd9b1cb0", "src": "hda", "uuid": "1d11149a-dfbe-4ea9-bbce-927e0758d208"}, "__new_primary_file_list_output_generic|test_000000__": {"id": "3239088958c0def9", "src": "hda", "uuid": "cc29f15a-9889-4ee5-90bd-07cfc8e9eb33"}}, "output_collections": {"list_output_generic": {"id": "ef0b04359058ce31", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:18:14", "plugin": "core", "name": "end_epoch", "raw_value": "1685949494.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:18:14", "plugin": "core", "name": "start_epoch", "raw_value": "1685949494.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-11", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 11, "time_seconds": 28.909664392471313, "inputs": {"split_parms|input": {"src": "hda", "id": "b9c14adbae9b6db9"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "rand", "split_parms|select_allocate|seed": "1010", "split_parms|select_allocate|allocate": "random", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "5f17e8815e3a015c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:18:50.592117", "create_time": "2023-06-05T07:18:38.627865", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-kt228", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/6/7/7/dataset_6779d6b4-9f1f-4206-8054-80b2e317a2de.dat' --ftype 'fasta' --numnew '2' --rand --seed '1010' --file_names 'rand' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 620, \"src\": \"hda\"}]}, \"newfilenames\": \"rand\", \"select_allocate\": {\"__current_case__\": 0, \"allocate\": \"random\", \"seed\": \"1010\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "b9c14adbae9b6db9", "src": "hda", "uuid": "6779d6b4-9f1f-4206-8054-80b2e317a2de"}}, "outputs": {"__new_primary_file_list_output_fasta|rand_000001.fasta__": {"id": "88fa700215156717", "src": "hda", "uuid": "b4bdadea-7454-4f52-bc31-214e3e47bd34"}, "__new_primary_file_list_output_fasta|rand_000000.fasta__": {"id": "c162c88f95926c6c", "src": "hda", "uuid": "3d7bb930-928d-4d26-bc49-97be18f71b1e"}}, "output_collections": {"list_output_fasta": {"id": "3e00b21b54f36394", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:18:41", "plugin": "core", "name": "end_epoch", "raw_value": "1685949521.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:18:41", "plugin": "core", "name": "start_epoch", "raw_value": "1685949521.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-12", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 12, "time_seconds": 28.932466506958008, "inputs": {"split_parms|input": {"src": "hda", "id": "b9c14adbae9b6db9"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "fasta_batch", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "5bbdb3f74b4362fc", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:18:52.612794", "create_time": "2023-06-05T07:18:40.660355", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-tmf8s", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/6/7/7/dataset_6779d6b4-9f1f-4206-8054-80b2e317a2de.dat' --ftype 'fasta' --numnew '2' --batch --file_names 'fasta_batch' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 620, \"src\": \"hda\"}]}, \"newfilenames\": \"fasta_batch\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "b9c14adbae9b6db9", "src": "hda", "uuid": "6779d6b4-9f1f-4206-8054-80b2e317a2de"}}, "outputs": {"__new_primary_file_list_output_fasta|fasta_batch_000001.fasta__": {"id": "de0c0d211517e262", "src": "hda", "uuid": "132b2100-13de-4e7a-8d35-ede9ceb999ef"}, "__new_primary_file_list_output_fasta|fasta_batch_000000.fasta__": {"id": "1496a81e1768e6fe", "src": "hda", "uuid": "57c26078-a5a1-417b-ae00-1f363e4ac421"}}, "output_collections": {"list_output_fasta": {"id": "4f1529388dc6378e", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:18:43", "plugin": "core", "name": "end_epoch", "raw_value": "1685949523.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:18:43", "plugin": "core", "name": "start_epoch", "raw_value": "1685949523.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-13", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 13, "time_seconds": 30.564295291900635, "inputs": {"split_parms|input": {"src": "hda", "id": "3c436dbc794ad914"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "txt"}, "job": {"model_class": "Job", "id": "9e2f100b2b6bc27d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:19:21.449063", "create_time": "2023-06-05T07:19:06.805335", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-4vhpq", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/0/4/0/dataset_0401e11c-1ff2-40af-97d0-b3290a835c00.dat' --ftype 'txt' --numnew '2' --file_names 'test' --file_ext 'txt'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 5, \"input\": {\"values\": [{\"id\": 626, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"txt\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "3c436dbc794ad914", "src": "hda", "uuid": "0401e11c-1ff2-40af-97d0-b3290a835c00"}}, "outputs": {"__new_primary_file_list_output_txt|test_000001.txt__": {"id": "cf5a9007b1e922a1", "src": "hda", "uuid": "47130b2d-e9b0-44d4-bc42-21fc641c8f53"}, "__new_primary_file_list_output_txt|test_000000.txt__": {"id": "d968f9edc97f45a9", "src": "hda", "uuid": "1fb6f6bc-994d-4297-8b61-34df75c7b4f5"}}, "output_collections": {"list_output_txt": {"id": "057c01e7b86ac4a7", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:19:11", "plugin": "core", "name": "end_epoch", "raw_value": "1685949551.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:19:11", "plugin": "core", "name": "start_epoch", "raw_value": "1685949551.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-14", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 14, "time_seconds": 24.145506620407104, "inputs": {"split_parms|input": {"src": "hda", "id": "3c436dbc794ad914"}, "split_parms|split_method|generic_regex": "^.*", "split_parms|split_method|select_split_method": "regex", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "cb4bf16bb0079524", "state": "error", "exit_code": null, "update_time": "2023-06-05T07:19:17.553875", "create_time": "2023-06-05T07:19:09.661894", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-p4mcp", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/0/4/0/dataset_0401e11c-1ff2-40af-97d0-b3290a835c00.dat' --ftype 'generic' --generic_re '^.*' --numnew '2' --file_names 'test' --file_ext 'txt'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 626, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 0, \"generic_regex\": \"^.*\", \"select_split_method\": \"regex\", \"split_after\": \"false\"}}"}, "inputs": {"input": {"id": "3c436dbc794ad914", "src": "hda", "uuid": "0401e11c-1ff2-40af-97d0-b3290a835c00"}}, "outputs": {}, "output_collections": {"list_output_generic": {"id": "227ed6b246eda85d", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0, exit_code: None, stderr: .", "Output collection 'list_output_generic': failed to find identifier 'test_000000' in the tool generated elements []"], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-15", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 15, "time_seconds": 64.21514129638672, "inputs": {"split_parms|input": {"src": "hda", "id": "6be67f9f9281e366"}, "split_parms|split_method|generic_regex": "^>.*", "split_parms|split_method|select_split_method": "regex", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "rand", "split_parms|select_allocate|seed": "1010", "split_parms|select_allocate|allocate": "random", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "88622c826b59df20", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:20:21.257360", "create_time": "2023-06-05T07:19:33.159914", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-xvwnp", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/4/0/5/dataset_4050938b-514e-4cc3-ab98-1f685025db16.dat' --ftype 'generic' --generic_re '^>.*' --numnew '2' --rand --seed '1010' --file_names 'rand' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 627, \"src\": \"hda\"}]}, \"newfilenames\": \"rand\", \"select_allocate\": {\"__current_case__\": 0, \"allocate\": \"random\", \"seed\": \"1010\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 0, \"generic_regex\": \"^>.*\", \"select_split_method\": \"regex\", \"split_after\": \"false\"}}"}, "inputs": {"input": {"id": "6be67f9f9281e366", "src": "hda", "uuid": "4050938b-514e-4cc3-ab98-1f685025db16"}}, "outputs": {"__new_primary_file_list_output_generic|rand_000001__": {"id": "850d07f93e5dfed1", "src": "hda", "uuid": "b98624e0-df86-4509-84e4-7f075f9cd035"}, "__new_primary_file_list_output_generic|rand_000000__": {"id": "485fbc0cf9a927ed", "src": "hda", "uuid": "77692069-b695-4253-a44c-954ae329cdad"}}, "output_collections": {"list_output_generic": {"id": "b2d75b3436ef7b11", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:20:11", "plugin": "core", "name": "end_epoch", "raw_value": "1685949611.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:20:11", "plugin": "core", "name": "start_epoch", "raw_value": "1685949611.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-16", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 16, "time_seconds": 65.51114654541016, "inputs": {"split_parms|input": {"src": "hda", "id": "1f01f8bcf1e7d3ad"}, "split_parms|select_mode|numnew": "10", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "mol", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "sdf"}, "job": {"model_class": "Job", "id": "1023beb58f40afb0", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:20:26.566122", "create_time": "2023-06-05T07:19:38.343813", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-bm4zc", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/b/5/b/dataset_b5b23259-de06-45a6-9355-1a778f0ec58a.dat' --ftype 'sdf' --numnew '10' --batch --file_names 'mol' --file_ext 'sdf'", "traceback": null, "params": {"__input_ext": "\"sdf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 4, \"input\": {\"values\": [{\"id\": 630, \"src\": \"hda\"}]}, \"newfilenames\": \"mol\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"sdf\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"10\"}}"}, "inputs": {"input": {"id": "1f01f8bcf1e7d3ad", "src": "hda", "uuid": "b5b23259-de06-45a6-9355-1a778f0ec58a"}}, "outputs": {"__new_primary_file_list_output_sdf|mol_000002.sdf__": {"id": "c087539b9c7e65cd", "src": "hda", "uuid": "ad043ff0-375b-440c-8e73-a69cc35b3e8c"}, "__new_primary_file_list_output_sdf|mol_000001.sdf__": {"id": "669d39e129566179", "src": "hda", "uuid": "687332d4-46ef-4db5-a4ce-028778ed568f"}, "__new_primary_file_list_output_sdf|mol_000000.sdf__": {"id": "ec0a792bbe7638a2", "src": "hda", "uuid": "5deb79f2-8924-46ec-a773-ac9cde78d957"}}, "output_collections": {"list_output_sdf": {"id": "c839800f2f12bcc7", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:20:17", "plugin": "core", "name": "end_epoch", "raw_value": "1685949617.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:20:17", "plugin": "core", "name": "start_epoch", "raw_value": "1685949617.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-17", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 17, "time_seconds": 27.3585102558136, "inputs": {"split_parms|input": {"src": "hda", "id": "adb44f6ade516d98"}, "split_parms|select_mode|chunksize": "1", "split_parms|select_mode|mode": "chunk", "split_parms|newfilenames": "mol", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "sdf"}, "job": {"model_class": "Job", "id": "1379e34152c78d00", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:20:48.320847", "create_time": "2023-06-05T07:20:37.529436", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-n4dld", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/5/b/3/dataset_5b3eb60e-59ea-4ba9-9304-6284a0da10bf.dat' --ftype 'sdf' --chunksize 1 --batch --file_names 'mol' --file_ext 'sdf'", "traceback": null, "params": {"__input_ext": "\"sdf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 4, \"input\": {\"values\": [{\"id\": 633, \"src\": \"hda\"}]}, \"newfilenames\": \"mol\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"sdf\", \"select_mode\": {\"__current_case__\": 0, \"chunksize\": \"1\", \"mode\": \"chunk\"}}"}, "inputs": {"input": {"id": "adb44f6ade516d98", "src": "hda", "uuid": "5b3eb60e-59ea-4ba9-9304-6284a0da10bf"}}, "outputs": {"__new_primary_file_list_output_sdf|mol_000002.sdf__": {"id": "ae996e3ef1e4bbf8", "src": "hda", "uuid": "1620d44f-67be-435d-ba2b-945f8dc5d648"}, "__new_primary_file_list_output_sdf|mol_000001.sdf__": {"id": "5261adb17402a25c", "src": "hda", "uuid": "af832d5e-02d7-46b4-8f0c-c64ddba8573a"}, "__new_primary_file_list_output_sdf|mol_000000.sdf__": {"id": "edc963f636c3b744", "src": "hda", "uuid": "161f1b1e-8b28-464a-ad5d-2821e906b093"}}, "output_collections": {"list_output_sdf": {"id": "2d799cc75c89b5fa", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:20:39", "plugin": "core", "name": "end_epoch", "raw_value": "1685949639.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:20:39", "plugin": "core", "name": "start_epoch", "raw_value": "1685949639.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-18", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 18, "time_seconds": 28.214134454727173, "inputs": {"split_parms|input": {"src": "hda", "id": "b0225bf32e6fcceb"}, "split_parms|split_method|generic_regex": "^[^>].*", "split_parms|split_method|split_after": "true", "split_parms|split_method|select_split_method": "regex", "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "rand", "split_parms|select_allocate|seed": "1010", "split_parms|select_allocate|allocate": "random", "split_parms|select_ftype": "generic"}, "job": {"model_class": "Job", "id": "6e8f7c60ed63238c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:20:55.408050", "create_time": "2023-06-05T07:20:43.311331", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-28jhl", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/0/1/9/dataset_019255cd-5851-42d3-b073-f90c8111178a.dat' --ftype 'generic' --generic_re '^[^>].*' --split_after --numnew '2' --rand --seed '1010' --file_names 'rand' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 6, \"input\": {\"values\": [{\"id\": 637, \"src\": \"hda\"}]}, \"newfilenames\": \"rand\", \"select_allocate\": {\"__current_case__\": 0, \"allocate\": \"random\", \"seed\": \"1010\"}, \"select_ftype\": \"generic\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"split_method\": {\"__current_case__\": 0, \"generic_regex\": \"^[^>].*\", \"select_split_method\": \"regex\", \"split_after\": \"true\"}}"}, "inputs": {"input": {"id": "b0225bf32e6fcceb", "src": "hda", "uuid": "019255cd-5851-42d3-b073-f90c8111178a"}}, "outputs": {"__new_primary_file_list_output_generic|rand_000001__": {"id": "9e7f4c818fa3069a", "src": "hda", "uuid": "ac26103c-a0be-4474-94c9-3d64857f8146"}, "__new_primary_file_list_output_generic|rand_000000__": {"id": "7b4ae33724d703a9", "src": "hda", "uuid": "f28f1b16-c1b6-420d-bd80-ca24b67d85ec"}}, "output_collections": {"list_output_generic": {"id": "67652236b1a762af", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:20:45", "plugin": "core", "name": "end_epoch", "raw_value": "1685949645.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:20:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685949645.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 2, "time_seconds": 28.91521644592285, "inputs": {"split_parms|input": {"src": "hda", "id": "dac8bba5ac90af75"}, "split_parms|top": "2", "split_parms|split_by|select_mode|numnew": "2", "split_parms|split_by|select_mode|mode": "numnew", "split_parms|split_by|newfilenames": "batch_tab", "split_parms|split_by|select_allocate|allocate": "batch", "split_parms|split_by|select_split_by": "row", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "21e4339312d2eef9", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:16:13.300222", "create_time": "2023-06-05T07:16:00.291352", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-n6km2", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/f/0/3/dataset_f0368b50-e172-42e9-b4c7-36cd6817cfbc.dat' --ftype 'tabular' --top '2' --by 'row' --numnew '2' --batch --file_names 'batch_tab' --file_ext 'tabular'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 565, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 1, \"newfilenames\": \"batch_tab\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}, \"select_split_by\": \"row\"}, \"top\": \"2\"}"}, "inputs": {"input": {"id": "dac8bba5ac90af75", "src": "hda", "uuid": "f0368b50-e172-42e9-b4c7-36cd6817cfbc"}}, "outputs": {"__new_primary_file_list_output_tab|batch_tab_000001.tabular__": {"id": "c00cc3d148b8a94f", "src": "hda", "uuid": "c0b6d58b-ee32-41e1-81fd-79d67d774d69"}, "__new_primary_file_list_output_tab|batch_tab_000000.tabular__": {"id": "c36383c1861ebba6", "src": "hda", "uuid": "e7ad6d43-affe-4265-bf3e-e05fb54adba1"}}, "output_collections": {"list_output_tab": {"id": "1054fdc383c1feb4", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:16:04", "plugin": "core", "name": "end_epoch", "raw_value": "1685949364.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:16:04", "plugin": "core", "name": "start_epoch", "raw_value": "1685949364.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 3, "time_seconds": 28.635393857955933, "inputs": {"split_parms|input": {"src": "hda", "id": "95aea4a25463eb5e"}, "split_parms|top": "2", "split_parms|split_by|select_mode|chunksize": "2", "split_parms|split_by|select_mode|mode": "chunk", "split_parms|split_by|newfilenames": "batch_tab", "split_parms|split_by|select_allocate|allocate": "batch", "split_parms|split_by|select_split_by": "row", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "4b36fcbd44c887ff", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:16:40.221181", "create_time": "2023-06-05T07:16:29.633586", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-xxmsp", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/f/9/f/dataset_f9fa85d7-3138-4c89-a073-8d0374d952d0.dat' --ftype 'tabular' --top '2' --by 'row' --chunksize 2 --batch --file_names 'batch_tab' --file_ext 'tabular'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 570, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 1, \"newfilenames\": \"batch_tab\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_mode\": {\"__current_case__\": 0, \"chunksize\": \"2\", \"mode\": \"chunk\"}, \"select_split_by\": \"row\"}, \"top\": \"2\"}"}, "inputs": {"input": {"id": "95aea4a25463eb5e", "src": "hda", "uuid": "f9fa85d7-3138-4c89-a073-8d0374d952d0"}}, "outputs": {"__new_primary_file_list_output_tab|batch_tab_000001.tabular__": {"id": "a32f1ffe195e4c7b", "src": "hda", "uuid": "047c2374-4aee-484d-a75c-b8f5ae4d9064"}, "__new_primary_file_list_output_tab|batch_tab_000000.tabular__": {"id": "5caa6af3789ee9b9", "src": "hda", "uuid": "e6889e05-3cf3-4513-9f24-208cb8f51356"}}, "output_collections": {"list_output_tab": {"id": "395fe53f1e455f5c", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:16:31", "plugin": "core", "name": "end_epoch", "raw_value": "1685949391.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:16:31", "plugin": "core", "name": "start_epoch", "raw_value": "1685949391.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 4, "time_seconds": 41.481489419937134, "inputs": {"split_parms|input": {"src": "hda", "id": "60d6f521f328ec2a"}, "split_parms|select_mode|numnew": "24", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "chr", "split_parms|select_allocate|allocate": "batch", "split_parms|select_ftype": "txt"}, "job": {"model_class": "Job", "id": "6812e9e1d2942cf4", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:16:43.598496", "create_time": "2023-06-05T07:16:30.351721", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-tfq2c", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/6/7/1/dataset_671391fc-3314-42e8-bab6-c0d2259650af.dat' --ftype 'txt' --numnew '24' --batch --file_names 'chr' --file_ext 'txt'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 5, \"input\": {\"values\": [{\"id\": 571, \"src\": \"hda\"}]}, \"newfilenames\": \"chr\", \"select_allocate\": {\"__current_case__\": 1, \"allocate\": \"batch\"}, \"select_ftype\": \"txt\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"24\"}}"}, "inputs": {"input": {"id": "60d6f521f328ec2a", "src": "hda", "uuid": "671391fc-3314-42e8-bab6-c0d2259650af"}}, "outputs": {"__new_primary_file_list_output_txt|chr_000023.txt__": {"id": "136133148394f47b", "src": "hda", "uuid": "bd7d87e4-4585-461c-b705-58825f4d2272"}, "__new_primary_file_list_output_txt|chr_000022.txt__": {"id": "43a915a873fab2ce", "src": "hda", "uuid": "045a56ca-ee1e-4ea3-a7fc-17633356484f"}, "__new_primary_file_list_output_txt|chr_000021.txt__": {"id": "331c8deac61257f3", "src": "hda", "uuid": "92f0a3e3-eb54-4001-9d65-50b4f2841251"}, "__new_primary_file_list_output_txt|chr_000020.txt__": {"id": "633d8e08584efe71", "src": "hda", "uuid": "38fd48c8-063b-41e8-8642-b0def9e5a522"}, "__new_primary_file_list_output_txt|chr_000019.txt__": {"id": "440c5e28725e7fab", "src": "hda", "uuid": "e1cbf31f-2d0a-49e5-8b72-6e3e112f423f"}, "__new_primary_file_list_output_txt|chr_000018.txt__": {"id": "60aaf7e5b0f0d614", "src": "hda", "uuid": "bf58ac63-ddc1-4d05-b9c7-6c303677a1ac"}, "__new_primary_file_list_output_txt|chr_000017.txt__": {"id": "eb425438ca3eed4c", "src": "hda", "uuid": "bcd9e4cc-7b62-4a21-8eae-de47fb50b027"}, "__new_primary_file_list_output_txt|chr_000016.txt__": {"id": "e97aad754e2909f6", "src": "hda", "uuid": "66b1d328-a2ca-4bdf-80c9-2b6f2414c16b"}, "__new_primary_file_list_output_txt|chr_000015.txt__": {"id": "33241e9d2de37595", "src": "hda", "uuid": "bbd9a95b-61e3-4598-8743-ee8b903e8abd"}, "__new_primary_file_list_output_txt|chr_000014.txt__": {"id": "d9090d9939e37259", "src": "hda", "uuid": "63ab1096-1e7c-41d7-a23b-eb6aca48b9a4"}, "__new_primary_file_list_output_txt|chr_000013.txt__": {"id": "0e53c106e3900195", "src": "hda", "uuid": "dc903df3-bf4c-42d6-803d-56650db1c7af"}, "__new_primary_file_list_output_txt|chr_000012.txt__": {"id": "ca990fb565a7b185", "src": "hda", "uuid": "59cc3f08-32d2-4987-ad31-986fecb7b9cb"}, "__new_primary_file_list_output_txt|chr_000011.txt__": {"id": "86d7a92a3b87af95", "src": "hda", "uuid": "f86af748-722d-4ad9-9527-2ff1529f9725"}, "__new_primary_file_list_output_txt|chr_000010.txt__": {"id": "9d8c9ebc0f20c3fe", "src": "hda", "uuid": "5813f420-5df0-4796-815d-352998021adc"}, "__new_primary_file_list_output_txt|chr_000009.txt__": {"id": "591e7b82b76e5836", "src": "hda", "uuid": "997752ed-f1ff-4788-b343-d56488c05648"}, "__new_primary_file_list_output_txt|chr_000008.txt__": {"id": "be924053e04e7b78", "src": "hda", "uuid": "77008b02-f747-4ef0-a833-11db779b5970"}, "__new_primary_file_list_output_txt|chr_000007.txt__": {"id": "f3060d7e40ff815a", "src": "hda", "uuid": "bb20343e-c01c-4144-bd9b-17ce8d2bd7fe"}, "__new_primary_file_list_output_txt|chr_000006.txt__": {"id": "ba86cae1185b5b3c", "src": "hda", "uuid": "78a770e5-8318-4803-941f-a0a1c8e3c1ee"}, "__new_primary_file_list_output_txt|chr_000005.txt__": {"id": "d50fc3520a827c74", "src": "hda", "uuid": "316770d3-25d3-4b77-a3c3-b717f854a010"}, "__new_primary_file_list_output_txt|chr_000004.txt__": {"id": "43bf54ebb74945db", "src": "hda", "uuid": "24f69d92-e0a0-4ab6-a0fa-7e8d7f92e5a4"}, "__new_primary_file_list_output_txt|chr_000003.txt__": {"id": "3673436534c0bece", "src": "hda", "uuid": "bb5c65c4-bdd4-4491-989f-3e374ecd60c5"}, "__new_primary_file_list_output_txt|chr_000002.txt__": {"id": "117eede23afc48aa", "src": "hda", "uuid": "d3f97e8a-ad5f-4784-8ff5-8c727b14bada"}, "__new_primary_file_list_output_txt|chr_000001.txt__": {"id": "775a1cee03b598c0", "src": "hda", "uuid": "12567055-3517-40bb-9e89-c9bebe5b3e98"}, "__new_primary_file_list_output_txt|chr_000000.txt__": {"id": "cd38fd41ca084dd8", "src": "hda", "uuid": "90485ff9-09a3-4259-ab07-a2658f99488b"}}, "output_collections": {"list_output_txt": {"id": "80963a306f6f7a80", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:16:33", "plugin": "core", "name": "end_epoch", "raw_value": "1685949393.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:16:33", "plugin": "core", "name": "start_epoch", "raw_value": "1685949393.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 5, "time_seconds": 31.559231519699097, "inputs": {"split_parms|input": {"src": "hda", "id": "240a239f5b20900f"}, "split_parms|top": "1", "split_parms|split_by|id_col": "10", "split_parms|split_by|match_regex": "(.*)\\.mgf", "split_parms|split_by|sub_regex": "\\1.tab", "split_parms|split_by|select_split_by": "col", "split_parms|select_ftype": "tabular"}, "job": {"model_class": "Job", "id": "ee1b20362bd3802b", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:17:10.920166", "create_time": "2023-06-05T07:16:57.692129", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zzlns", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/2/f/e/dataset_2fea6d86-e4ef-4c45-bc3c-0f6763d00f2b.dat' --ftype 'tabular' --top '1' --by 'col' --id_column '10' --match '(.*)__backslash__.mgf' --sub '__backslash__1.tab'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 574, \"src\": \"hda\"}]}, \"select_ftype\": \"tabular\", \"split_by\": {\"__current_case__\": 0, \"id_col\": \"10\", \"match_regex\": \"(.*)\\\\.mgf\", \"select_split_by\": \"col\", \"sub_regex\": \"\\\\1.tab\"}, \"top\": \"1\"}"}, "inputs": {"input": {"id": "240a239f5b20900f", "src": "hda", "uuid": "2fea6d86-e4ef-4c45-bc3c-0f6763d00f2b"}}, "outputs": {"__new_primary_file_list_output_tab|file4.tab__": {"id": "5b3c5c242c6d76a0", "src": "hda", "uuid": "ea151996-57d0-4764-9383-4e11aff4120d"}, "__new_primary_file_list_output_tab|file3.tab__": {"id": "be3e5dcc786e9f7b", "src": "hda", "uuid": "8ce88f24-34ec-4660-9ae8-e6e78ff7893e"}, "__new_primary_file_list_output_tab|file2.tab__": {"id": "d398ae011f05df89", "src": "hda", "uuid": "b352ac97-a5ca-4e58-99d1-869181c6df3c"}, "__new_primary_file_list_output_tab|file1.tab__": {"id": "90165bd5ad8eedd0", "src": "hda", "uuid": "05a1e5bb-2e12-448b-9470-3cc133fe655b"}}, "output_collections": {"list_output_tab": {"id": "9a00d6c0d27540d6", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:17:00", "plugin": "core", "name": "end_epoch", "raw_value": "1685949420.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:16:59", "plugin": "core", "name": "start_epoch", "raw_value": "1685949419.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 6, "time_seconds": 29.93707823753357, "inputs": {"split_parms|input": {"src": "hda", "id": "fe286dd7fbab2812"}, "split_parms|select_mode|numnew": "3", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "demo", "split_parms|select_ftype": "mgf"}, "job": {"model_class": "Job", "id": "0ef06cd6db59c0c8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:17:24.432224", "create_time": "2023-06-05T07:17:13.270457", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-klkkl", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/d/e/5/dataset_de5bb0be-a6f1-4af8-b8d4-3ff159dfc813.dat' --ftype 'mgf' --numnew '3' --file_names 'demo' --file_ext 'mgf'", "traceback": null, "params": {"__input_ext": "\"mgf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 1, \"input\": {\"values\": [{\"id\": 599, \"src\": \"hda\"}]}, \"newfilenames\": \"demo\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"mgf\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"3\"}}"}, "inputs": {"input": {"id": "fe286dd7fbab2812", "src": "hda", "uuid": "de5bb0be-a6f1-4af8-b8d4-3ff159dfc813"}}, "outputs": {"__new_primary_file_list_output_mgf|demo_000002.mgf__": {"id": "bc615f0c79e4dd1d", "src": "hda", "uuid": "9a8d9ddb-ea44-4b40-803e-901576d8e5e1"}, "__new_primary_file_list_output_mgf|demo_000001.mgf__": {"id": "0955e06f0b886674", "src": "hda", "uuid": "c2c3b5ac-a2fc-4da7-9284-5ec6a8d44e77"}, "__new_primary_file_list_output_mgf|demo_000000.mgf__": {"id": "904b814d3c602624", "src": "hda", "uuid": "e51900b0-3a17-4d0a-840b-cd3e4f5730b2"}}, "output_collections": {"list_output_mgf": {"id": "16c094ab8d7cf4bd", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:17:14", "plugin": "core", "name": "end_epoch", "raw_value": "1685949434.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:17:14", "plugin": "core", "name": "start_epoch", "raw_value": "1685949434.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 7, "time_seconds": 41.370723247528076, "inputs": {"split_parms|input": {"src": "hda", "id": "79717b5ee5fdc82f"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "c36c0dcfcd8df136", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:17:53.865859", "create_time": "2023-06-05T07:17:28.900191", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-prpwm", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/e/d/4/dataset_ed4e194e-f058-47c6-95fa-41fe130315a7.dat' --ftype 'fasta' --numnew '2' --file_names 'test' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 608, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "79717b5ee5fdc82f", "src": "hda", "uuid": "ed4e194e-f058-47c6-95fa-41fe130315a7"}}, "outputs": {"__new_primary_file_list_output_fasta|test_000001.fasta__": {"id": "24edfdb6ee1e80b0", "src": "hda", "uuid": "131929fa-60c5-4e0f-97dc-967cff644ae5"}, "__new_primary_file_list_output_fasta|test_000000.fasta__": {"id": "a29ef153c9db9ea1", "src": "hda", "uuid": "29b8a83e-f66d-4475-ae22-27045c21b9df"}}, "output_collections": {"list_output_fasta": {"id": "56a79832e2c625c3", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:17:44", "plugin": "core", "name": "end_epoch", "raw_value": "1685949464.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:17:44", "plugin": "core", "name": "start_epoch", "raw_value": "1685949464.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 8, "time_seconds": 29.749065160751343, "inputs": {"split_parms|input": {"src": "hda", "id": "79717b5ee5fdc82f"}, "split_parms|select_mode|chunksize": "3", "split_parms|select_mode|mode": "chunk", "split_parms|newfilenames": "test", "split_parms|select_ftype": "fasta"}, "job": {"model_class": "Job", "id": "239ae7b8257d249a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:17:54.897377", "create_time": "2023-06-05T07:17:41.976903", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zk67m", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/e/d/4/dataset_ed4e194e-f058-47c6-95fa-41fe130315a7.dat' --ftype 'fasta' --chunksize 3 --file_names 'test' --file_ext 'fasta'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 3, \"input\": {\"values\": [{\"id\": 608, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"fasta\", \"select_mode\": {\"__current_case__\": 0, \"chunksize\": \"3\", \"mode\": \"chunk\"}}"}, "inputs": {"input": {"id": "79717b5ee5fdc82f", "src": "hda", "uuid": "ed4e194e-f058-47c6-95fa-41fe130315a7"}}, "outputs": {"__new_primary_file_list_output_fasta|test_000001.fasta__": {"id": "de26133c7edb82b8", "src": "hda", "uuid": "0e9a69dc-f6f6-4a80-b14d-f2d5f1c01ec0"}, "__new_primary_file_list_output_fasta|test_000000.fasta__": {"id": "aaf2b645e4c38c4a", "src": "hda", "uuid": "d5f51189-0731-45de-a934-8a9b8a786385"}}, "output_collections": {"list_output_fasta": {"id": "99ba897e93722d0c", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:17:45", "plugin": "core", "name": "end_epoch", "raw_value": "1685949465.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:17:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685949465.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0-9", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection", "tool_version": "0.5.0", "test_index": 9, "time_seconds": 27.689520835876465, "inputs": {"split_parms|input": {"src": "hda", "id": "a1f13d33f2824e72"}, "split_parms|select_mode|numnew": "2", "split_parms|select_mode|mode": "numnew", "split_parms|newfilenames": "test", "split_parms|select_ftype": "fastq"}, "job": {"model_class": "Job", "id": "22fd74662b33e9a7", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:18:21.716559", "create_time": "2023-06-05T07:18:10.864519", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-rvg44", "command_line": "mkdir ./out && python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/6cbe2f30c2d7/split_file_to_collection/split_file_to_collection.py' --out ./out --in '/galaxy/server/database/objects/f/9/d/dataset_f9d2753e-fb45-4cd2-a816-56acbe9e3781.dat' --ftype 'fastq' --numnew '2' --file_names 'test' --file_ext 'fastq'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split_parms": "{\"__current_case__\": 2, \"input\": {\"values\": [{\"id\": 614, \"src\": \"hda\"}]}, \"newfilenames\": \"test\", \"select_allocate\": {\"__current_case__\": 2, \"allocate\": \"byrow\"}, \"select_ftype\": \"fastq\", \"select_mode\": {\"__current_case__\": 1, \"mode\": \"numnew\", \"numnew\": \"2\"}}"}, "inputs": {"input": {"id": "a1f13d33f2824e72", "src": "hda", "uuid": "f9d2753e-fb45-4cd2-a816-56acbe9e3781"}}, "outputs": {"__new_primary_file_list_output_fastq|test_000001.fastq__": {"id": "c57ba938480463c8", "src": "hda", "uuid": "0f16da74-83b8-4b4d-a644-c75cdaa793b2"}, "__new_primary_file_list_output_fastq|test_000000.fastq__": {"id": "1ec36f9ec96dbb11", "src": "hda", "uuid": "2aff54c5-bc96-4155-b138-47d29314c2db"}}, "output_collections": {"list_output_fastq": {"id": "5fad8cb7bd24e64b", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:18:12", "plugin": "core", "name": "end_epoch", "raw_value": "1685949492.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:18:12", "plugin": "core", "name": "start_epoch", "raw_value": "1685949492.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 39.779112100601196, "inputs": {"inputA": {"src": "hda", "id": "03401fb3c3e47f38"}, "names|beds": [{"src": "hda", "id": "5fc0c3506e8b7463"}, {"src": "hda", "id": "768f50002a04a1ba"}, {"src": "hda", "id": "56ca2a83beb3dea3"}], "names|names_select": "no"}, "job": {"model_class": "Job", "id": "bd9d9fb654604943", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:44:03.491134", "create_time": "2023-06-05T06:43:51.116520", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_annotatebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-njtsr", "command_line": "bedtools annotate -i '/galaxy/server/database/objects/a/2/6/dataset_a269fcaf-a382-4a6e-9def-b2084b1d0008.dat' -files '/galaxy/server/database/objects/1/b/8/dataset_1b837a3e-8899-4032-aab1-569be4ea62e1.dat' '/galaxy/server/database/objects/e/9/9/dataset_e99c79aa-9298-48b9-adb3-40eaab352227.dat' '/galaxy/server/database/objects/9/6/1/dataset_9613f3d2-5aab-4af5-a103-adddbd6a5a65.dat' -names 'annotateBed2.bed' 'annotateBed3.bed' 'annotateBed4.bed'    > '/galaxy/server/database/objects/d/c/7/dataset_dc7ac4fb-6f02-456d-b2b9-930b13918024.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "both": "false", "counts": "false", "strand": "\"\"", "names": "{\"__current_case__\": 1, \"beds\": {\"values\": [{\"id\": 222, \"src\": \"hda\"}, {\"id\": 223, \"src\": \"hda\"}, {\"id\": 224, \"src\": \"hda\"}]}, \"names_select\": \"no\"}"}, "inputs": {"inputA": {"id": "03401fb3c3e47f38", "src": "hda", "uuid": "a269fcaf-a382-4a6e-9def-b2084b1d0008"}, "beds": {"id": "5fc0c3506e8b7463", "src": "hda", "uuid": "1b837a3e-8899-4032-aab1-569be4ea62e1"}, "beds1": {"id": "5fc0c3506e8b7463", "src": "hda", "uuid": "1b837a3e-8899-4032-aab1-569be4ea62e1"}, "beds2": {"id": "768f50002a04a1ba", "src": "hda", "uuid": "e99c79aa-9298-48b9-adb3-40eaab352227"}, "beds3": {"id": "56ca2a83beb3dea3", "src": "hda", "uuid": "9613f3d2-5aab-4af5-a103-adddbd6a5a65"}}, "outputs": {"output": {"id": "eb3792ea4b7b63be", "src": "hda", "uuid": "dc7ac4fb-6f02-456d-b2b9-930b13918024"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:43:53", "plugin": "core", "name": "end_epoch", "raw_value": "1685947433.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:43:53", "plugin": "core", "name": "start_epoch", "raw_value": "1685947433.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0+galaxy2", "test_index": 0, "time_seconds": 31.834941148757935, "inputs": {"input": {"src": "hda", "id": "d961f0dcf5f53094"}, "option": "", "tag": ""}, "job": {"model_class": "Job", "id": "064a41a449192b35", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:01:42.576974", "create_time": "2023-06-05T07:01:27.589032", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-fczr9", "command_line": "ln -s '/galaxy/server/database/objects/6/7/f/dataset_67f5f2af-73a7-494d-8001-f32d750c07e9.dat' ./input.bam &&  bedtools bamtobed    -i ./input.bam > '/galaxy/server/database/objects/9/3/e/dataset_93e87a34-e16f-4e41-8c89-c263fac0a506.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "d961f0dcf5f53094", "src": "hda", "uuid": "67f5f2af-73a7-494d-8001-f32d750c07e9"}}, "outputs": {"output": {"id": "486451b4624c7428", "src": "hda", "uuid": "93e87a34-e16f-4e41-8c89-c263fac0a506"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:01:32", "plugin": "core", "name": "end_epoch", "raw_value": "1685948492.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:01:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685948492.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0+galaxy2", "test_index": 1, "time_seconds": 31.628437757492065, "inputs": {"input": {"src": "hda", "id": "d961f0dcf5f53094"}, "option": "", "tag": "NM"}, "job": {"model_class": "Job", "id": "c451f8bb14b6a6e0", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:01:44.623325", "create_time": "2023-06-05T07:01:32.658893", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-t5h4h", "command_line": "ln -s '/galaxy/server/database/objects/6/7/f/dataset_67f5f2af-73a7-494d-8001-f32d750c07e9.dat' ./input.bam &&  bedtools bamtobed    -tag 'NM' -i ./input.bam > '/galaxy/server/database/objects/9/7/3/dataset_9738d6fc-023a-41d0-a0db-c520e1dc9eef.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"NM\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "d961f0dcf5f53094", "src": "hda", "uuid": "67f5f2af-73a7-494d-8001-f32d750c07e9"}}, "outputs": {"output": {"id": "0b0cea9ea0360df5", "src": "hda", "uuid": "9738d6fc-023a-41d0-a0db-c520e1dc9eef"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:01:35", "plugin": "core", "name": "end_epoch", "raw_value": "1685948495.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:01:35", "plugin": "core", "name": "start_epoch", "raw_value": "1685948495.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0+galaxy2", "test_index": 2, "time_seconds": 29.00771188735962, "inputs": {"input": {"src": "hda", "id": "d1abd8110d7c5fb5"}, "option": "-bedpe", "tag": ""}, "job": {"model_class": "Job", "id": "d300774015205f58", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:02:11.615702", "create_time": "2023-06-05T07:02:00.125908", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0+galaxy2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-4fx29", "command_line": "samtools sort -n -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" '/galaxy/server/database/objects/7/a/b/dataset_7ab3072e-72c5-4b6b-a275-948c693d8797.dat' > ./input.bam &&  bedtools bamtobed -bedpe   -i ./input.bam > '/galaxy/server/database/objects/8/5/d/dataset_85dcb3f9-f139-43e1-8c25-f3e61a3ec5fd.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"\"", "ed_score": "false", "split": "false", "option": "\"-bedpe\""}, "inputs": {"input": {"id": "d1abd8110d7c5fb5", "src": "hda", "uuid": "7ab3072e-72c5-4b6b-a275-948c693d8797"}}, "outputs": {"output": {"id": "e7296dee81e8c014", "src": "hda", "uuid": "85dcb3f9-f139-43e1-8c25-f3e61a3ec5fd"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:02:01", "plugin": "core", "name": "end_epoch", "raw_value": "1685948521.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:02:01", "plugin": "core", "name": "start_epoch", "raw_value": "1685948521.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 45.759615421295166, "inputs": {"input": {"src": "hda", "id": "89e6d27c1e62ded6"}, "option": "", "tag": ""}, "job": {"model_class": "Job", "id": "bbf082a9c5e53940", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:41:43.263130", "create_time": "2023-06-05T06:41:17.295841", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zvqvg", "command_line": "ln -s '/galaxy/server/database/objects/c/4/6/dataset_c46f2b58-9f57-44b5-ae0d-a4a3e1b3f269.dat' ./input.bam &&  bedtools bamtobed    -i ./input.bam > '/galaxy/server/database/objects/9/9/4/dataset_994c8b45-5c13-4f44-8dc5-96048eacf6ea.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "89e6d27c1e62ded6", "src": "hda", "uuid": "c46f2b58-9f57-44b5-ae0d-a4a3e1b3f269"}}, "outputs": {"output": {"id": "b22128c571284f46", "src": "hda", "uuid": "994c8b45-5c13-4f44-8dc5-96048eacf6ea"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:41:32", "plugin": "core", "name": "end_epoch", "raw_value": "1685947292.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:41:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685947292.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 29.11879873275757, "inputs": {"input": {"src": "hda", "id": "89e6d27c1e62ded6"}, "option": "", "tag": "NM"}, "job": {"model_class": "Job", "id": "947f41c0c5a94ceb", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:41:43.231113", "create_time": "2023-06-05T06:41:30.947926", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bamtobed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zsvdn", "command_line": "ln -s '/galaxy/server/database/objects/c/4/6/dataset_c46f2b58-9f57-44b5-ae0d-a4a3e1b3f269.dat' ./input.bam &&  bedtools bamtobed    -tag 'NM' -i ./input.bam > '/galaxy/server/database/objects/9/6/4/dataset_9648955a-51ca-4907-a2b7-9728448bab7c.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tag": "\"NM\"", "ed_score": "false", "split": "false", "option": "\"\""}, "inputs": {"input": {"id": "89e6d27c1e62ded6", "src": "hda", "uuid": "c46f2b58-9f57-44b5-ae0d-a4a3e1b3f269"}}, "outputs": {"output": {"id": "0871cc24c9bac773", "src": "hda", "uuid": "9648955a-51ca-4907-a2b7-9728448bab7c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:41:34", "plugin": "core", "name": "end_epoch", "raw_value": "1685947294.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:41:34", "plugin": "core", "name": "start_epoch", "raw_value": "1685947294.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 26.847691297531128, "inputs": {"input": {"src": "hda", "id": "e7a3aa4db37c1850"}}, "job": {"model_class": "Job", "id": "8f11ca549a87c802", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:47:52.647296", "create_time": "2023-06-05T06:47:41.890898", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bed12tobed6/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-w746m", "command_line": "bed12ToBed6 -i '/galaxy/server/database/objects/c/4/6/dataset_c46aeddd-aeda-45b2-825f-5f123b26901e.dat' > '/galaxy/server/database/objects/8/6/f/dataset_86f62006-25ff-4e07-b762-6d39417d907c.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input": {"id": "e7a3aa4db37c1850", "src": "hda", "uuid": "c46aeddd-aeda-45b2-825f-5f123b26901e"}}, "outputs": {"output": {"id": "8a7042c91f66372b", "src": "hda", "uuid": "86f62006-25ff-4e07-b762-6d39417d907c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:47:43", "plugin": "core", "name": "end_epoch", "raw_value": "1685947663.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:47:43", "plugin": "core", "name": "start_epoch", "raw_value": "1685947663.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 36.23236107826233, "inputs": {"input": {"src": "hda", "id": "ee390893ef113ab9"}, "genome_file_opts|genome": {"src": "hda", "id": "8e62e0acb89cfad1"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "4fc576dfbda12c4d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:12:45.520073", "create_time": "2023-06-05T07:12:32.349080", "galaxy_version": "23.0", "command_version": "bedtools v2.27.1", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7vgf9", "command_line": "bedtools bedpetobam -mapq 255 -i '/galaxy/server/database/objects/7/e/d/dataset_7ed86749-c962-440c-8523-ecf08bd5146b.dat'  -g '/galaxy/server/database/objects/b/9/5/dataset_b95c8ba0-f6b5-4a7e-8e24-28225779665b.dat'  > '/galaxy/server/database/objects/2/c/e/dataset_2ce78318-1896-4bfe-9eaf-24669d7ea512.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mapq": "\"255\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 530, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "ee390893ef113ab9", "src": "hda", "uuid": "7ed86749-c962-440c-8523-ecf08bd5146b"}, "genome": {"id": "8e62e0acb89cfad1", "src": "hda", "uuid": "b95c8ba0-f6b5-4a7e-8e24-28225779665b"}}, "outputs": {"output": {"id": "2be05ad9583e8105", "src": "hda", "uuid": "2ce78318-1896-4bfe-9eaf-24669d7ea512"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:12:36", "plugin": "core", "name": "end_epoch", "raw_value": "1685949156.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:12:35", "plugin": "core", "name": "start_epoch", "raw_value": "1685949155.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedpetobam", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 15.967498779296875, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 33.81793260574341, "inputs": {"input": {"src": "hda", "id": "487da31455a3677d"}, "genome_file_opts|genome": {"src": "hda", "id": "da266366271350c6"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "3b6718f9c6da7c95", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:00:18.186325", "create_time": "2023-06-05T07:00:06.905938", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-mzhsf", "command_line": "bedtools bedtobam  -mapq 255  -g '/galaxy/server/database/objects/9/0/4/dataset_90443996-4ee6-41ec-8794-83a2c8ab1da6.dat'  -i '/galaxy/server/database/objects/1/4/5/dataset_1454f63f-75b7-41a4-9232-c8b29ae8ad2f.dat' > '/galaxy/server/database/objects/0/a/c/dataset_0ac129fe-584a-45c0-b241-94cf77469bc7.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mapq": "\"255\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 399, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bed12": "false"}, "inputs": {"input": {"id": "487da31455a3677d", "src": "hda", "uuid": "1454f63f-75b7-41a4-9232-c8b29ae8ad2f"}, "genome": {"id": "da266366271350c6", "src": "hda", "uuid": "90443996-4ee6-41ec-8794-83a2c8ab1da6"}}, "outputs": {"output": {"id": "71644d8392712835", "src": "hda", "uuid": "0ac129fe-584a-45c0-b241-94cf77469bc7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:00:08", "plugin": "core", "name": "end_epoch", "raw_value": "1685948408.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:00:08", "plugin": "core", "name": "start_epoch", "raw_value": "1685948408.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtobam", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 9.346144676208496, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 33.7102689743042, "inputs": {"input": {"src": "hda", "id": "73b55825fae02795"}}, "job": {"model_class": "Job", "id": "dd1cce9c9d6770b1", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:44:23.544263", "create_time": "2023-06-05T06:44:06.719383", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_bedtoigv/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-bsww2", "command_line": "bedToIgv -i '/galaxy/server/database/objects/4/4/9/dataset_449440f3-f88c-4a05-8626-5ee215b70b41.dat'   -slop 0 -img png > '/galaxy/server/database/objects/8/a/0/dataset_8a060c05-3dc7-415a-9481-e68846266113.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "img": "\"png\"", "slop": "\"0\"", "name": "false", "clps": "false", "sort": "\"\""}, "inputs": {"input": {"id": "73b55825fae02795", "src": "hda", "uuid": "449440f3-f88c-4a05-8626-5ee215b70b41"}}, "outputs": {"output": {"id": "8f11ca549a87c802", "src": "hda", "uuid": "8a060c05-3dc7-415a-9481-e68846266113"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:44:12", "plugin": "core", "name": "end_epoch", "raw_value": "1685947452.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:44:12", "plugin": "core", "name": "start_epoch", "raw_value": "1685947452.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 36.61602544784546, "inputs": {"inputA": {"src": "hda", "id": "caf678cf24bd9565"}, "overlap_with|inputB": {"src": "hda", "id": "7512e2d5e012ff61"}, "overlap_with|source": "history"}, "job": {"model_class": "Job", "id": "b3157582f523ed01", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:34:25.261559", "create_time": "2023-06-05T06:34:13.309545", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-nb92k", "command_line": "closestBed    -mdb each -t all -k 1 -a '/galaxy/server/database/objects/7/d/f/dataset_7df5b033-9a28-46cf-b547-5376a953b3bd.dat' -b '/galaxy/server/database/objects/2/7/e/dataset_27ee2c94-222c-49ff-a499-d7cba316e519.dat' > '/galaxy/server/database/objects/f/4/7/dataset_f4711e7b-aa40-48db-8036-ed3e7dd58669.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "false", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 128, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "caf678cf24bd9565", "src": "hda", "uuid": "7df5b033-9a28-46cf-b547-5376a953b3bd"}, "inputB": {"id": "7512e2d5e012ff61", "src": "hda", "uuid": "27ee2c94-222c-49ff-a499-d7cba316e519"}, "inputB1": {"id": "7512e2d5e012ff61", "src": "hda", "uuid": "27ee2c94-222c-49ff-a499-d7cba316e519"}}, "outputs": {"output": {"id": "40e4761728ac2856", "src": "hda", "uuid": "f4711e7b-aa40-48db-8036-ed3e7dd58669"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:34:15", "plugin": "core", "name": "end_epoch", "raw_value": "1685946855.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:34:15", "plugin": "core", "name": "start_epoch", "raw_value": "1685946855.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 36.80512189865112, "inputs": {"inputA": {"src": "hda", "id": "be8e8e7adb04c5b0"}, "overlap_with|inputB": [{"src": "hda", "id": "25c5cd58a0f88878"}, {"src": "hda", "id": "31c62475b61625cf"}], "overlap_with|source": "history", "addition": true}, "job": {"model_class": "Job", "id": "d9d21003711e079d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:34:25.332875", "create_time": "2023-06-05T06:34:14.806580", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-mwbkg", "command_line": "closestBed  -d  -mdb each -t all -k 1 -a '/galaxy/server/database/objects/b/9/a/dataset_b9a92e77-b773-4d28-aae6-317cd6a48e4b.dat' -b '/galaxy/server/database/objects/8/5/d/dataset_85d9ee9c-9d30-49f1-b71c-a0a8b20c8ed4.dat' '/galaxy/server/database/objects/9/1/5/dataset_9157781b-168b-423b-abd0-5488e5cc764c.dat' > '/galaxy/server/database/objects/9/5/7/dataset_95764161-6226-4450-970e-b859941ee76e.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "true", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}, {\"id\": 130, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "be8e8e7adb04c5b0", "src": "hda", "uuid": "b9a92e77-b773-4d28-aae6-317cd6a48e4b"}, "inputB": {"id": "25c5cd58a0f88878", "src": "hda", "uuid": "85d9ee9c-9d30-49f1-b71c-a0a8b20c8ed4"}, "inputB1": {"id": "25c5cd58a0f88878", "src": "hda", "uuid": "85d9ee9c-9d30-49f1-b71c-a0a8b20c8ed4"}, "inputB2": {"id": "31c62475b61625cf", "src": "hda", "uuid": "9157781b-168b-423b-abd0-5488e5cc764c"}}, "outputs": {"output": {"id": "523cd23ab45df808", "src": "hda", "uuid": "95764161-6226-4450-970e-b859941ee76e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:34:16", "plugin": "core", "name": "end_epoch", "raw_value": "1685946856.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:34:16", "plugin": "core", "name": "start_epoch", "raw_value": "1685946856.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 37.15535831451416, "inputs": {"inputA": {"src": "hda", "id": "ee9eb7f0c1bae48c"}, "overlap_with|inputB": [{"src": "hda", "id": "76be7d203044ab3f"}, {"src": "hda", "id": "4654b9910f758606"}], "overlap_with|source": "history", "addition": true, "mdb": "all"}, "job": {"model_class": "Job", "id": "37beacf7aee5ff13", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:35:01.660691", "create_time": "2023-06-05T06:34:50.693214", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-w59bn", "command_line": "closestBed  -d  -mdb all -t all -k 1 -a '/galaxy/server/database/objects/3/7/5/dataset_37559d47-4f45-4ab3-834f-4ee9562b12bf.dat' -b '/galaxy/server/database/objects/d/4/1/dataset_d4175cd1-07d6-47ad-a3a6-ff41847178ba.dat' '/galaxy/server/database/objects/e/7/5/dataset_e759b53f-1395-437f-8aa3-7dace540ae4f.dat' > '/galaxy/server/database/objects/3/b/1/dataset_3b1e5c8f-d491-49b2-b7ac-db1ec53e5ca7.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"all\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "true", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}, {\"id\": 137, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "ee9eb7f0c1bae48c", "src": "hda", "uuid": "37559d47-4f45-4ab3-834f-4ee9562b12bf"}, "inputB": {"id": "76be7d203044ab3f", "src": "hda", "uuid": "d4175cd1-07d6-47ad-a3a6-ff41847178ba"}, "inputB1": {"id": "76be7d203044ab3f", "src": "hda", "uuid": "d4175cd1-07d6-47ad-a3a6-ff41847178ba"}, "inputB2": {"id": "4654b9910f758606", "src": "hda", "uuid": "e759b53f-1395-437f-8aa3-7dace540ae4f"}}, "outputs": {"output": {"id": "9c38115922b84a1a", "src": "hda", "uuid": "3b1e5c8f-d491-49b2-b7ac-db1ec53e5ca7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:34:52", "plugin": "core", "name": "end_epoch", "raw_value": "1685946892.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:34:52", "plugin": "core", "name": "start_epoch", "raw_value": "1685946892.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 39.06757688522339, "inputs": {"inputA": {"src": "hda", "id": "2fc26e5e25ab52f1"}, "overlap_with|inputB": {"src": "hda", "id": "b6d2b234d9ee0749"}, "overlap_with|source": "history", "addition2|addition2_select": "ref"}, "job": {"model_class": "Job", "id": "523819df6367a0c4", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:35:04.857301", "create_time": "2023-06-05T06:34:52.881874", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-sjj6b", "command_line": "closestBed   -D ref    -mdb each -t all -k 1 -a '/galaxy/server/database/objects/9/f/f/dataset_9ff9237c-af87-4168-9f15-136d6650dbda.dat' -b '/galaxy/server/database/objects/8/0/5/dataset_805c51a5-e2b5-4358-879f-9b9b78c0c574.dat' > '/galaxy/server/database/objects/6/2/4/dataset_624ec21c-9238-45fc-a7a9-92b675614550.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 1, \"addition2_select\": \"ref\", \"fd\": false, \"fu\": false, \"id\": false, \"iu\": false}", "addition": "false", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "2fc26e5e25ab52f1", "src": "hda", "uuid": "9ff9237c-af87-4168-9f15-136d6650dbda"}, "inputB": {"id": "b6d2b234d9ee0749", "src": "hda", "uuid": "805c51a5-e2b5-4358-879f-9b9b78c0c574"}, "inputB1": {"id": "b6d2b234d9ee0749", "src": "hda", "uuid": "805c51a5-e2b5-4358-879f-9b9b78c0c574"}}, "outputs": {"output": {"id": "bc2f8545694b6da1", "src": "hda", "uuid": "624ec21c-9238-45fc-a7a9-92b675614550"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:34:55", "plugin": "core", "name": "end_epoch", "raw_value": "1685946895.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:34:54", "plugin": "core", "name": "start_epoch", "raw_value": "1685946894.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 29.117624282836914, "inputs": {"inputA": {"src": "hda", "id": "95f9b43ca5263082"}, "overlap_with|inputB": {"src": "hda", "id": "8d9fcad29daa945d"}, "overlap_with|source": "history", "addition2|addition2_select": "a"}, "job": {"model_class": "Job", "id": "2561af9c62d489b9", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:35:31.954445", "create_time": "2023-06-05T06:35:20.173384", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-z2fkz", "command_line": "closestBed   -D a    -mdb each -t all -k 1 -a '/galaxy/server/database/objects/2/a/a/dataset_2aa3f824-7f25-4c2b-8ac6-6941088b1f6a.dat' -b '/galaxy/server/database/objects/c/3/b/dataset_c3bbfd46-f3f2-40cc-af03-f440078633c2.dat' > '/galaxy/server/database/objects/4/0/0/dataset_4009a69c-3335-4bdd-a2d7-9507d0ddf37b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"1\"", "addition2": "{\"__current_case__\": 2, \"addition2_select\": \"a\", \"fd\": false, \"fu\": false, \"id\": false, \"iu\": false}", "addition": "false", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 141, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "95f9b43ca5263082", "src": "hda", "uuid": "2aa3f824-7f25-4c2b-8ac6-6941088b1f6a"}, "inputB": {"id": "8d9fcad29daa945d", "src": "hda", "uuid": "c3bbfd46-f3f2-40cc-af03-f440078633c2"}, "inputB1": {"id": "8d9fcad29daa945d", "src": "hda", "uuid": "c3bbfd46-f3f2-40cc-af03-f440078633c2"}}, "outputs": {"output": {"id": "cf1c90decbef0c8c", "src": "hda", "uuid": "4009a69c-3335-4bdd-a2d7-9507d0ddf37b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:35:22", "plugin": "core", "name": "end_epoch", "raw_value": "1685946922.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:35:22", "plugin": "core", "name": "start_epoch", "raw_value": "1685946922.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 5, "time_seconds": 35.10928249359131, "inputs": {"inputA": {"src": "hda", "id": "f9f37426428ab4bb"}, "overlap_with|inputB": {"src": "hda", "id": "79c5edb16f46cb1d"}, "overlap_with|source": "history", "k": "3"}, "job": {"model_class": "Job", "id": "30bc31d381ad0ee0", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:35:40.040152", "create_time": "2023-06-05T06:35:28.774238", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-k9q7w", "command_line": "closestBed    -mdb each -t all -k 3 -a '/galaxy/server/database/objects/3/0/2/dataset_3024af6a-386f-42a8-9fd6-7a13208f3828.dat' -b '/galaxy/server/database/objects/7/2/d/dataset_72d3878c-d2cd-4049-bcad-43ed20845c24.dat' > '/galaxy/server/database/objects/9/6/1/dataset_96154c56-9f4e-426d-a63f-3ee777a446b3.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mdb": "\"each\"", "io": "false", "k": "\"3\"", "addition2": "{\"__current_case__\": 0, \"addition2_select\": \"\"}", "addition": "false", "strand": "\"\"", "ties": "\"all\"", "overlap_with": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"source\": \"history\"}"}, "inputs": {"inputA": {"id": "f9f37426428ab4bb", "src": "hda", "uuid": "3024af6a-386f-42a8-9fd6-7a13208f3828"}, "inputB": {"id": "79c5edb16f46cb1d", "src": "hda", "uuid": "72d3878c-d2cd-4049-bcad-43ed20845c24"}, "inputB1": {"id": "79c5edb16f46cb1d", "src": "hda", "uuid": "72d3878c-d2cd-4049-bcad-43ed20845c24"}}, "outputs": {"output": {"id": "be3988ea5d999a1a", "src": "hda", "uuid": "96154c56-9f4e-426d-a63f-3ee777a446b3"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:35:30", "plugin": "core", "name": "end_epoch", "raw_value": "1685946930.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:35:30", "plugin": "core", "name": "start_epoch", "raw_value": "1685946930.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed/2.30.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_closestbed", "tool_version": "2.30.0", "test_index": 6, "time_seconds": 14.500727653503418, "inputs": {"inputA": {"src": "hda", "id": "da63b5542551aad0"}, "overlap_with|source": "data_table", "k": "3"}, "execution_problem": "parameter 'table': an invalid option (None) was selected, please verify", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 27.956745862960815, "inputs": {"inputA": {"src": "hda", "id": "ef4f509551d5c40a"}}, "job": {"model_class": "Job", "id": "e39435d71d973529", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:40:24.373125", "create_time": "2023-06-05T06:40:12.328557", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_clusterbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-xcgd5", "command_line": "bedtools cluster  -d 0 -i '/galaxy/server/database/objects/7/2/7/dataset_727a93bf-75d1-41fd-97bf-0afe4745725f.dat' > '/galaxy/server/database/objects/1/b/a/dataset_1bada4de-28e7-4787-92d5-e176cbbedab8.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "distance": "\"0\"", "strand": "false"}, "inputs": {"inputA": {"id": "ef4f509551d5c40a", "src": "hda", "uuid": "727a93bf-75d1-41fd-97bf-0afe4745725f"}}, "outputs": {"output": {"id": "e65605e3f8ea1c86", "src": "hda", "uuid": "1bada4de-28e7-4787-92d5-e176cbbedab8"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:40:14", "plugin": "core", "name": "end_epoch", "raw_value": "1685947214.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:40:14", "plugin": "core", "name": "start_epoch", "raw_value": "1685947214.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 36.44259762763977, "inputs": {"input": {"src": "hda", "id": "eea2ec11712d6606"}, "genome_file_opts|genome": {"src": "hda", "id": "59b886f6648a4a9c"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "51a711a3ce0c1e4e", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:11:31.361690", "create_time": "2023-06-05T07:11:19.596201", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7fmhd", "command_line": "complementBed -i '/galaxy/server/database/objects/e/6/0/dataset_e607aed3-76c7-4243-80db-0b1f2d62b7df.dat'  -g '/galaxy/server/database/objects/2/c/c/dataset_2cc6365f-a16f-4392-a65e-e67ca8928339.dat'  > '/galaxy/server/database/objects/e/5/c/dataset_e5c9a8c3-2ecd-4264-ae2c-8e2328e9490a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 517, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "eea2ec11712d6606", "src": "hda", "uuid": "e607aed3-76c7-4243-80db-0b1f2d62b7df"}, "genome": {"id": "59b886f6648a4a9c", "src": "hda", "uuid": "2cc6365f-a16f-4392-a65e-e67ca8928339"}}, "outputs": {"output": {"id": "2bfd36e9157b3223", "src": "hda", "uuid": "e5c9a8c3-2ecd-4264-ae2c-8e2328e9490a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:11:21", "plugin": "core", "name": "end_epoch", "raw_value": "1685949081.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:11:21", "plugin": "core", "name": "start_epoch", "raw_value": "1685949081.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 31.83368444442749, "inputs": {"input": {"src": "hda", "id": "ce66b175a9cc2a83"}, "genome_file_opts|genome": {"src": "hda", "id": "fb078b9e341c604f"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "b7733f80cb7e4af0", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:31:40.636560", "create_time": "2023-06-05T06:31:29.267665", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_complementbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-m75ks", "command_line": "complementBed -i '/galaxy/server/database/objects/d/3/4/dataset_d348fb08-be1b-427a-8cbe-a4cbfd225b75.dat' -g '/galaxy/server/database/objects/c/d/c/dataset_cdcca832-b1db-405d-8df6-4d9f319ece0f.dat'  > '/galaxy/server/database/objects/5/c/e/dataset_5ce30d1d-b3b6-4dc5-b15f-cdb31040b4d2.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 97, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "ce66b175a9cc2a83", "src": "hda", "uuid": "d348fb08-be1b-427a-8cbe-a4cbfd225b75"}, "genome": {"id": "fb078b9e341c604f", "src": "hda", "uuid": "cdcca832-b1db-405d-8df6-4d9f319ece0f"}}, "outputs": {"output": {"id": "d18e979becb5e901", "src": "hda", "uuid": "5ce30d1d-b3b6-4dc5-b15f-cdb31040b4d2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:31:30", "plugin": "core", "name": "end_epoch", "raw_value": "1685946690.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:31:30", "plugin": "core", "name": "start_epoch", "raw_value": "1685946690.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 37.63407278060913, "inputs": {"inputA": {"src": "hda", "id": "ffd19bef3915c2d1"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c103b69b8672fcbb"}}, "job": {"model_class": "Job", "id": "b6d2b234d9ee0749", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:38:41.255639", "create_time": "2023-06-05T06:38:24.173821", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-fsw42", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/9/4/d/dataset_94da99a3-77c0-45e9-af1b-c1f4cfddf8ac.dat' -b '/galaxy/server/database/objects/7/c/f/dataset_7cf3282c-6e2b-4166-91ae-5ff9d762928c.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/5/a/4/dataset_5a44b879-c65f-4551-a503-207b91d19f6f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 170, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "c103b69b8672fcbb", "src": "hda", "uuid": "7cf3282c-6e2b-4166-91ae-5ff9d762928c"}, "inputA": {"id": "ffd19bef3915c2d1", "src": "hda", "uuid": "94da99a3-77c0-45e9-af1b-c1f4cfddf8ac"}}, "outputs": {"output": {"id": "45c498b4cfe8b22d", "src": "hda", "uuid": "5a44b879-c65f-4551-a503-207b91d19f6f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:38:30", "plugin": "core", "name": "end_epoch", "raw_value": "1685947110.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:38:30", "plugin": "core", "name": "start_epoch", "raw_value": "1685947110.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 35.85139727592468, "inputs": {"inputA": {"src": "hda", "id": "aa3c526bcc4d7750"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "5bdb8856f3ba4782"}, "sorted": true}, "job": {"model_class": "Job", "id": "4654b9910f758606", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:38:41.285595", "create_time": "2023-06-05T06:38:29.377182", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zsjrg", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/b/c/3/dataset_bc32b5fe-ae90-4720-a62d-5043fcac940a.dat' -b '/galaxy/server/database/objects/7/5/a/dataset_75a2fdff-f3da-4f89-894e-e94021a1ec28.dat'   -sorted -g <(samtools view -H /galaxy/server/database/objects/7/5/a/dataset_75a2fdff-f3da-4f89-894e-e94021a1ec28.dat | tr ':' '\\t' | grep SN | cut -f 3,5)   | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/0/5/c/dataset_05c307da-a994-4c6e-9dbc-577bf1971ed0.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "true", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 172, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "5bdb8856f3ba4782", "src": "hda", "uuid": "75a2fdff-f3da-4f89-894e-e94021a1ec28"}, "inputA": {"id": "aa3c526bcc4d7750", "src": "hda", "uuid": "bc32b5fe-ae90-4720-a62d-5043fcac940a"}}, "outputs": {"output": {"id": "9c5a325298cebb62", "src": "hda", "uuid": "05c307da-a994-4c6e-9dbc-577bf1971ed0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:38:31", "plugin": "core", "name": "end_epoch", "raw_value": "1685947111.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:38:31", "plugin": "core", "name": "start_epoch", "raw_value": "1685947111.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 34.51319861412048, "inputs": {"inputA": {"src": "hda", "id": "d120df3db0a7a283"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "d7354753f158b0a6"}, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "sorted": true}, "job": {"model_class": "Job", "id": "f9f37426428ab4bb", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:39:15.811018", "create_time": "2023-06-05T06:39:05.366610", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-9rzd8", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/a/1/8/dataset_a18e4e6b-e92f-4105-8382-94d1e964bfc8.dat' -b '/galaxy/server/database/objects/a/5/a/dataset_a5aeee52-0741-474b-8404-814dc0395eb3.dat'   -sorted -g <(samtools view -H /galaxy/server/database/objects/a/5/a/dataset_a5aeee52-0741-474b-8404-814dc0395eb3.dat | tr ':' '\\t' | grep SN | cut -f 3,5)   | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/f/1/6/dataset_f16e872d-3021-4d94-859a-c3158d26ae8f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "true", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 177, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputB1": {"id": "d7354753f158b0a6", "src": "hda", "uuid": "a5aeee52-0741-474b-8404-814dc0395eb3"}, "inputB": {"id": "d7354753f158b0a6", "src": "hda", "uuid": "a5aeee52-0741-474b-8404-814dc0395eb3"}, "inputA": {"id": "d120df3db0a7a283", "src": "hda", "uuid": "a18e4e6b-e92f-4105-8382-94d1e964bfc8"}}, "outputs": {"output": {"id": "2eb846066267ae96", "src": "hda", "uuid": "f16e872d-3021-4d94-859a-c3158d26ae8f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:39:06", "plugin": "core", "name": "end_epoch", "raw_value": "1685947146.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:39:06", "plugin": "core", "name": "start_epoch", "raw_value": "1685947146.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 37.128642559051514, "inputs": {"inputA": {"src": "hda", "id": "663ad6af3d187e17"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "5ff8da96fd5cbab5"}, "overlap_b": "1"}, "job": {"model_class": "Job", "id": "79c5edb16f46cb1d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:39:18.724832", "create_time": "2023-06-05T06:39:07.600991", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zb527", "command_line": "bedtools coverage     -F 1.0   -a '/galaxy/server/database/objects/2/3/b/dataset_23b417ed-88c4-41c5-9bb5-a646294439e0.dat' -b '/galaxy/server/database/objects/2/d/4/dataset_2d4b1600-706a-4420-80fa-1b20751ab6d5.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/9/0/9/dataset_9097d148-65d1-41e0-be54-c58c53b7c867.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"1.0\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 178, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputB": {"id": "5ff8da96fd5cbab5", "src": "hda", "uuid": "2d4b1600-706a-4420-80fa-1b20751ab6d5"}, "inputA": {"id": "663ad6af3d187e17", "src": "hda", "uuid": "23b417ed-88c4-41c5-9bb5-a646294439e0"}}, "outputs": {"output": {"id": "14893675fd495732", "src": "hda", "uuid": "9097d148-65d1-41e0-be54-c58c53b7c867"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:39:09", "plugin": "core", "name": "end_epoch", "raw_value": "1685947149.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:39:09", "plugin": "core", "name": "start_epoch", "raw_value": "1685947149.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 32.44747805595398, "inputs": {"inputA": {"src": "hda", "id": "d4a06620a4259d89"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "ad776b324049337f"}, "overlap_a": "1E-5", "reciprocal_overlap": true}, "job": {"model_class": "Job", "id": "9eed05a5a3451196", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:39:48.541955", "create_time": "2023-06-05T06:39:35.312510", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-wmhc6", "command_line": "bedtools coverage     -f 1e-05 -r  -a '/galaxy/server/database/objects/5/d/d/dataset_5ddd012f-c719-4674-b88e-c7dfc1e72082.dat' -b '/galaxy/server/database/objects/1/b/d/dataset_1bd1edf0-867f-44cd-b735-72d80a4225b4.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/5/5/5/dataset_555fd282-4728-4fae-85cc-876e216ddd05.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "true", "overlap_b": "\"\"", "overlap_a": "\"1e-05\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 182, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "d4a06620a4259d89", "src": "hda", "uuid": "5ddd012f-c719-4674-b88e-c7dfc1e72082"}, "inputB": {"id": "ad776b324049337f", "src": "hda", "uuid": "1bd1edf0-867f-44cd-b735-72d80a4225b4"}}, "outputs": {"output": {"id": "4c44c185110e4f31", "src": "hda", "uuid": "555fd282-4728-4fae-85cc-876e216ddd05"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:39:39", "plugin": "core", "name": "end_epoch", "raw_value": "1685947179.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:39:38", "plugin": "core", "name": "start_epoch", "raw_value": "1685947178.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 5, "time_seconds": 37.375110387802124, "inputs": {"inputA": {"src": "hda", "id": "4be59e667294c7e7"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "40aa310967b7d768"}, {"src": "hda", "id": "86bcdc8bc8f5decd"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "sorted": true}, "job": {"model_class": "Job", "id": "9c840dc7ee12f02e", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:39:56.350326", "create_time": "2023-06-05T06:39:45.498810", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7j99f", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/b/f/3/dataset_bf31cae6-dc4f-402f-8eab-3dece9d25794.dat' -b '/galaxy/server/database/objects/7/e/7/dataset_7e78fb38-3753-40ce-a8fb-961fa86b29b1.dat' '/galaxy/server/database/objects/9/d/5/dataset_9d5ca9e4-a24d-486f-b20d-17b1db59ce12.dat'   -sorted -g <(samtools view -H /galaxy/server/database/objects/7/e/7/dataset_7e78fb38-3753-40ce-a8fb-961fa86b29b1.dat | tr ':' '\\t' | grep SN | cut -f 3,5)   | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/9/8/f/dataset_98fef8ff-effc-4bb9-a8fe-010eabe3c378.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "true", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 184, \"src\": \"hda\"}, {\"id\": 185, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "4be59e667294c7e7", "src": "hda", "uuid": "bf31cae6-dc4f-402f-8eab-3dece9d25794"}, "inputB1": {"id": "40aa310967b7d768", "src": "hda", "uuid": "7e78fb38-3753-40ce-a8fb-961fa86b29b1"}, "inputB": {"id": "40aa310967b7d768", "src": "hda", "uuid": "7e78fb38-3753-40ce-a8fb-961fa86b29b1"}, "inputB2": {"id": "86bcdc8bc8f5decd", "src": "hda", "uuid": "9d5ca9e4-a24d-486f-b20d-17b1db59ce12"}}, "outputs": {"output": {"id": "a89cefba3e175f9c", "src": "hda", "uuid": "98fef8ff-effc-4bb9-a8fe-010eabe3c378"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:39:47", "plugin": "core", "name": "end_epoch", "raw_value": "1685947187.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:39:47", "plugin": "core", "name": "start_epoch", "raw_value": "1685947187.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed", "tool_version": "2.30.0", "test_index": 6, "time_seconds": 30.290363311767578, "inputs": {"inputA": {"src": "hda", "id": "6774d02e2bacba2a"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "bd9d9fb654604943"}}, "job": {"model_class": "Job", "id": "39be267e0e073b7a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:40:19.205254", "create_time": "2023-06-05T06:40:07.515835", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_coveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-w6ms6", "command_line": "bedtools coverage       -a '/galaxy/server/database/objects/8/f/b/dataset_8fb14cc1-d0de-40fc-b4cf-7103d7be8c73.dat' -b '/galaxy/server/database/objects/3/a/8/dataset_3a8d3397-db6b-42d7-9917-ac5ea219cd79.dat'      | sort -k1,1 -k2,2n > '/galaxy/server/database/objects/1/c/f/dataset_1cf9f35b-69e9-4a79-9503-363e01523210.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sorted": "false", "a_or_b": "false", "reciprocal_overlap": "false", "overlap_b": "\"\"", "overlap_a": "\"\"", "hist": "false", "d": "false", "strandedness": "false", "split": "false", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 189, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "6774d02e2bacba2a", "src": "hda", "uuid": "8fb14cc1-d0de-40fc-b4cf-7103d7be8c73"}, "inputB": {"id": "bd9d9fb654604943", "src": "hda", "uuid": "3a8d3397-db6b-42d7-9917-ac5ea219cd79"}}, "outputs": {"output": {"id": "bd674ebfe43631e5", "src": "hda", "uuid": "1cf9f35b-69e9-4a79-9503-363e01523210"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:40:09", "plugin": "core", "name": "end_epoch", "raw_value": "1685947209.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:40:09", "plugin": "core", "name": "start_epoch", "raw_value": "1685947209.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 32.07467842102051, "inputs": {"input": {"src": "hda", "id": "896d8917c15b5afc"}, "cols": "5"}, "job": {"model_class": "Job", "id": "14893675fd495732", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:43:14.023300", "create_time": "2023-06-05T06:43:02.999541", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6kxlz", "command_line": "bedtools expand -c '5' -i '/galaxy/server/database/objects/5/2/a/dataset_52a7abc7-e633-4292-bb47-cc357339ff0f.dat' > '/galaxy/server/database/objects/4/b/c/dataset_4bc43a65-5542-4bee-8369-159235646f2a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "cols": "\"5\""}, "inputs": {"input": {"id": "896d8917c15b5afc", "src": "hda", "uuid": "52a7abc7-e633-4292-bb47-cc357339ff0f"}}, "outputs": {"output": {"id": "412bc2e7e54cd0e7", "src": "hda", "uuid": "4bc43a65-5542-4bee-8369-159235646f2a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:43:04", "plugin": "core", "name": "end_epoch", "raw_value": "1685947384.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:43:04", "plugin": "core", "name": "start_epoch", "raw_value": "1685947384.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 37.50461435317993, "inputs": {"input": {"src": "hda", "id": "30441aa2f1005660"}, "cols": "4,5"}, "job": {"model_class": "Job", "id": "6774d02e2bacba2a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:43:49.827917", "create_time": "2023-06-05T06:43:29.970815", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_expandbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-rd8bs", "command_line": "bedtools expand -c '4,5' -i '/galaxy/server/database/objects/4/3/7/dataset_4377c735-e3e4-4809-9f81-aa9ceca2f8ee.dat' > '/galaxy/server/database/objects/f/1/6/dataset_f16d3f08-a64d-47cb-a36a-87db9b5ee2c3.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "cols": "\"4,5\""}, "inputs": {"input": {"id": "30441aa2f1005660", "src": "hda", "uuid": "4377c735-e3e4-4809-9f81-aa9ceca2f8ee"}}, "outputs": {"output": {"id": "f4704898eb3699f5", "src": "hda", "uuid": "f16d3f08-a64d-47cb-a36a-87db9b5ee2c3"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:43:37", "plugin": "core", "name": "end_epoch", "raw_value": "1685947417.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:43:37", "plugin": "core", "name": "start_epoch", "raw_value": "1685947417.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 41.00634789466858, "inputs": {"inputA": {"src": "hda", "id": "d1124559088896b1"}, "inputB": {"src": "hda", "id": "f5632f66b0088088"}, "genome_file_opts|genome": {"src": "hda", "id": "c45f7cd7d7380fb1"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "414b6361508ad378", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:11:36.553688", "create_time": "2023-06-05T07:11:25.230526", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6v5ph", "command_line": "bedtools fisher   -a '/galaxy/server/database/objects/5/f/1/dataset_5f19bcb9-7ff4-49d9-8c52-fb29aca0f9cd.dat' -b '/galaxy/server/database/objects/9/8/7/dataset_987381fc-1750-4a83-b35d-e114f6e17dee.dat'    -g '/galaxy/server/database/objects/3/d/e/dataset_3de945bc-bf86-4a33-840e-b35c8a5c8015.dat'    > '/galaxy/server/database/objects/1/e/0/dataset_1e06433a-fe21-49f7-b1d9-aed05b023e9d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "m": "false", "reciprocal": "\"\"", "overlap": "\"\"", "split": "false", "strand": "\"\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 520, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "d1124559088896b1", "src": "hda", "uuid": "5f19bcb9-7ff4-49d9-8c52-fb29aca0f9cd"}, "inputB": {"id": "f5632f66b0088088", "src": "hda", "uuid": "987381fc-1750-4a83-b35d-e114f6e17dee"}, "genome": {"id": "c45f7cd7d7380fb1", "src": "hda", "uuid": "3de945bc-bf86-4a33-840e-b35c8a5c8015"}}, "outputs": {"output": {"id": "973b033b93bebfc8", "src": "hda", "uuid": "1e06433a-fe21-49f7-b1d9-aed05b023e9d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:11:27", "plugin": "core", "name": "end_epoch", "raw_value": "1685949087.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:11:27", "plugin": "core", "name": "start_epoch", "raw_value": "1685949087.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 33.532339334487915, "inputs": {"inputA": {"src": "hda", "id": "6802a3f959ffafe2"}, "inputB": {"src": "hda", "id": "44e6879396417c6c"}, "genome_file_opts|genome": {"src": "hda", "id": "0657418fb106ac37"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "2da3e20a78590fdf", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:00:10.757296", "create_time": "2023-06-05T06:59:59.752596", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_fisher/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-cmlkb", "command_line": "bedtools fisher   -a '/galaxy/server/database/objects/b/9/2/dataset_b9275183-0606-4ccb-882d-0736757ea3be.dat' -b '/galaxy/server/database/objects/b/b/c/dataset_bbce4f84-46e3-4431-a79a-b0f7cc42cbf9.dat'   -g '/galaxy/server/database/objects/d/1/e/dataset_d1efd53a-07bd-4dbc-96b7-77f35125fb24.dat'    > '/galaxy/server/database/objects/8/5/1/dataset_8515287e-41a0-48e5-9cb5-8046e390eea5.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "m": "false", "reciprocal": "\"\"", "overlap": "\"\"", "split": "false", "strand": "\"\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 397, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "6802a3f959ffafe2", "src": "hda", "uuid": "b9275183-0606-4ccb-882d-0736757ea3be"}, "inputB": {"id": "44e6879396417c6c", "src": "hda", "uuid": "bbce4f84-46e3-4431-a79a-b0f7cc42cbf9"}, "genome": {"id": "0657418fb106ac37", "src": "hda", "uuid": "d1efd53a-07bd-4dbc-96b7-77f35125fb24"}}, "outputs": {"output": {"id": "40ed93243575bd4a", "src": "hda", "uuid": "8515287e-41a0-48e5-9cb5-8046e390eea5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:00:01", "plugin": "core", "name": "end_epoch", "raw_value": "1685948401.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:00:01", "plugin": "core", "name": "start_epoch", "raw_value": "1685948401.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 37.69741630554199, "inputs": {"input": {"src": "hda", "id": "a96f229b8088c056"}, "genome_file_opts|genome": {"src": "hda", "id": "07c1ba796d6712c7"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|b": "5", "addition|addition_select": "b"}, "job": {"model_class": "Job", "id": "7a0bea66c450a9d8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:12:09.050860", "create_time": "2023-06-05T07:11:51.881611", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ctd7j", "command_line": "flankBed    -g '/galaxy/server/database/objects/9/f/7/dataset_9f7057b2-8c39-4956-a4e2-cbeb80b91548.dat'  -i '/galaxy/server/database/objects/7/f/8/dataset_7f8f2eee-3756-41ab-874f-49a04b96a6b9.dat'  -b 5 > '/galaxy/server/database/objects/4/9/6/dataset_49607f96-1536-4b68-8dfd-66ccb02ade89.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 526, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "a96f229b8088c056", "src": "hda", "uuid": "7f8f2eee-3756-41ab-874f-49a04b96a6b9"}, "genome": {"id": "07c1ba796d6712c7", "src": "hda", "uuid": "9f7057b2-8c39-4956-a4e2-cbeb80b91548"}}, "outputs": {"output": {"id": "fc4224f815d05bf3", "src": "hda", "uuid": "49607f96-1536-4b68-8dfd-66ccb02ade89"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:11:59", "plugin": "core", "name": "end_epoch", "raw_value": "1685949119.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:11:59", "plugin": "core", "name": "start_epoch", "raw_value": "1685949119.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 34.648136377334595, "inputs": {"input": {"src": "hda", "id": "a96f229b8088c056"}, "genome_file_opts|genome": {"src": "hda", "id": "07c1ba796d6712c7"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|l": "2", "addition|r": "3", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "77b85b06502c8d1e", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:12:10.946811", "create_time": "2023-06-05T07:11:57.434815", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-mlkt6", "command_line": "flankBed    -g '/galaxy/server/database/objects/9/f/7/dataset_9f7057b2-8c39-4956-a4e2-cbeb80b91548.dat'  -i '/galaxy/server/database/objects/7/f/8/dataset_7f8f2eee-3756-41ab-874f-49a04b96a6b9.dat'  -l 2 -r 3 > '/galaxy/server/database/objects/9/a/d/dataset_9addb9cf-6180-4b2d-8d17-2b1d498cf511.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 526, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "a96f229b8088c056", "src": "hda", "uuid": "7f8f2eee-3756-41ab-874f-49a04b96a6b9"}, "genome": {"id": "07c1ba796d6712c7", "src": "hda", "uuid": "9f7057b2-8c39-4956-a4e2-cbeb80b91548"}}, "outputs": {"output": {"id": "21e4339312d2eef9", "src": "hda", "uuid": "9addb9cf-6180-4b2d-8d17-2b1d498cf511"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:12:00", "plugin": "core", "name": "end_epoch", "raw_value": "1685949120.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:12:00", "plugin": "core", "name": "start_epoch", "raw_value": "1685949120.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 35.79139995574951, "inputs": {"input": {"src": "hda", "id": "d92d2f87c82dc428"}, "genome_file_opts|genome": {"src": "hda", "id": "edd5065af5720b82"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|b": "5", "addition|addition_select": "b"}, "job": {"model_class": "Job", "id": "26f549f19ac9ba36", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:48:56.804571", "create_time": "2023-06-05T06:48:44.584758", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-sl4tr", "command_line": "flankBed   -g '/galaxy/server/database/objects/6/7/1/dataset_6714ec37-3363-4e1b-9252-a7a149e2dd71.dat'  -i '/galaxy/server/database/objects/1/a/5/dataset_1a52b7d2-d296-4676-87a9-4db73f8ab0bb.dat'  -b 5 > '/galaxy/server/database/objects/a/0/e/dataset_a0e38b5f-bb22-45c8-a74c-266c44218c92.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 277, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "d92d2f87c82dc428", "src": "hda", "uuid": "1a52b7d2-d296-4676-87a9-4db73f8ab0bb"}, "genome": {"id": "edd5065af5720b82", "src": "hda", "uuid": "6714ec37-3363-4e1b-9252-a7a149e2dd71"}}, "outputs": {"output": {"id": "aa62b5b579586fac", "src": "hda", "uuid": "a0e38b5f-bb22-45c8-a74c-266c44218c92"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:48:47", "plugin": "core", "name": "end_epoch", "raw_value": "1685947727.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:48:47", "plugin": "core", "name": "start_epoch", "raw_value": "1685947727.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 36.68141508102417, "inputs": {"input": {"src": "hda", "id": "d92d2f87c82dc428"}, "genome_file_opts|genome": {"src": "hda", "id": "edd5065af5720b82"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|l": "2", "addition|r": "3", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "432e8850a01ac218", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:48:58.761730", "create_time": "2023-06-05T06:48:46.673032", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_flankbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-blbgh", "command_line": "flankBed   -g '/galaxy/server/database/objects/6/7/1/dataset_6714ec37-3363-4e1b-9252-a7a149e2dd71.dat'  -i '/galaxy/server/database/objects/1/a/5/dataset_1a52b7d2-d296-4676-87a9-4db73f8ab0bb.dat'  -l 2 -r 3 > '/galaxy/server/database/objects/1/e/4/dataset_1e422431-034d-49f3-bb95-0918c05951db.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 277, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"input": {"id": "d92d2f87c82dc428", "src": "hda", "uuid": "1a52b7d2-d296-4676-87a9-4db73f8ab0bb"}, "genome": {"id": "edd5065af5720b82", "src": "hda", "uuid": "6714ec37-3363-4e1b-9252-a7a149e2dd71"}}, "outputs": {"output": {"id": "7cfe3fa9ef0b6ad0", "src": "hda", "uuid": "1e422431-034d-49f3-bb95-0918c05951db"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:48:49", "plugin": "core", "name": "end_epoch", "raw_value": "1685947729.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:48:49", "plugin": "core", "name": "start_epoch", "raw_value": "1685947729.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 28.887389421463013, "inputs": {"input_type|input": {"src": "hda", "id": "8ceb42bde110f056"}, "input_type|genome_file_opts|genome": {"src": "hda", "id": "6feaa7f169960c2e"}, "input_type|genome_file_opts|genome_file_opts_selector": "hist", "input_type|input_type_select": "bed", "report|report_select": "hist"}, "job": {"model_class": "Job", "id": "f4a840e48bd7c5aa", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:59:44.112826", "create_time": "2023-06-05T06:59:33.417254", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_genomecoveragebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-2qlrk", "command_line": "bedtools genomecov  -i '/galaxy/server/database/objects/b/6/b/dataset_b6b52a20-cbc2-4ae3-b0ce-8130fc2a7eef.dat' -g '/galaxy/server/database/objects/0/8/f/dataset_08f94ae1-352a-4b44-8c63-780ea389798b.dat'      -max 0     > '/galaxy/server/database/objects/2/1/5/dataset_2155efdd-6bd8-4114-bb7c-e50395e4268f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "three": "false", "five": "false", "dz": "false", "d": "false", "strand": "\"\"", "split": "false", "report": "{\"__current_case__\": 1, \"max\": \"0\", \"report_select\": \"hist\"}", "input_type": "{\"__current_case__\": 0, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 392, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"input\": {\"values\": [{\"id\": 391, \"src\": \"hda\"}]}, \"input_type_select\": \"bed\"}"}, "inputs": {"input": {"id": "8ceb42bde110f056", "src": "hda", "uuid": "b6b52a20-cbc2-4ae3-b0ce-8130fc2a7eef"}, "input_type|genome": {"id": "6feaa7f169960c2e", "src": "hda", "uuid": "08f94ae1-352a-4b44-8c63-780ea389798b"}}, "outputs": {"output": {"id": "6d76120189930849", "src": "hda", "uuid": "2155efdd-6bd8-4114-bb7c-e50395e4268f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:59:35", "plugin": "core", "name": "end_epoch", "raw_value": "1685948375.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:59:35", "plugin": "core", "name": "start_epoch", "raw_value": "1685948375.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 35.396005630493164, "inputs": {"input": {"src": "hda", "id": "4b36fcbd44c887ff"}, "fasta_source|fasta": {"src": "hda", "id": "6812e9e1d2942cf4"}, "nameOnly": false, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "c7ff6f936dbdae1b", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:12:46.541855", "create_time": "2023-06-05T07:12:35.965442", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-stzzf", "command_line": "ln -s '/galaxy/server/database/objects/a/4/9/dataset_a49a8814-96e2-4c2c-be2c-a85a85666f7c.dat' 'input.fasta' && bedtools getfasta      -fi 'input.fasta' -bed '/galaxy/server/database/objects/5/c/7/dataset_5c7aa00a-ee8f-4013-84f1-4ec645696ca7.dat' -fo '/galaxy/server/database/objects/3/a/3/dataset_3a3925d6-347a-4619-a7fe-7499a069a22b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "nameOnly": "false", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 532, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "6812e9e1d2942cf4", "src": "hda", "uuid": "a49a8814-96e2-4c2c-be2c-a85a85666f7c"}, "input": {"id": "4b36fcbd44c887ff", "src": "hda", "uuid": "5c7aa00a-ee8f-4013-84f1-4ec645696ca7"}}, "outputs": {"output": {"id": "ee1b20362bd3802b", "src": "hda", "uuid": "3a3925d6-347a-4619-a7fe-7499a069a22b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:12:37", "plugin": "core", "name": "end_epoch", "raw_value": "1685949157.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:12:37", "plugin": "core", "name": "start_epoch", "raw_value": "1685949157.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 36.340455770492554, "inputs": {"input": {"src": "hda", "id": "278c6d6ff4d994ba"}, "fasta_source|fasta": {"src": "hda", "id": "e51585affb74b102"}, "nameOnly": false, "tab": true, "split": false}, "job": {"model_class": "Job", "id": "f594574b9e5e6697", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:13:21.877365", "create_time": "2023-06-05T07:13:05.306342", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-vnbs9", "command_line": "ln -s '/galaxy/server/database/objects/2/7/1/dataset_27102f3c-ac30-40bc-808a-878bdfb8359e.dat' 'input.fasta' && bedtools getfasta   -tab   -fi 'input.fasta' -bed '/galaxy/server/database/objects/2/a/e/dataset_2ae4e586-f745-4aa5-a418-42909e18afb4.dat' -fo '/galaxy/server/database/objects/e/5/4/dataset_e543b69b-9fcf-42ff-b691-eb692cd5450b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "true", "nameOnly": "false", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 538, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "e51585affb74b102", "src": "hda", "uuid": "27102f3c-ac30-40bc-808a-878bdfb8359e"}, "input": {"id": "278c6d6ff4d994ba", "src": "hda", "uuid": "2ae4e586-f745-4aa5-a418-42909e18afb4"}}, "outputs": {"output": {"id": "c36c0dcfcd8df136", "src": "hda", "uuid": "e543b69b-9fcf-42ff-b691-eb692cd5450b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:13:11", "plugin": "core", "name": "end_epoch", "raw_value": "1685949191.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:13:11", "plugin": "core", "name": "start_epoch", "raw_value": "1685949191.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 35.81409311294556, "inputs": {"input": {"src": "hda", "id": "278c6d6ff4d994ba"}, "fasta_source|fasta": {"src": "hda", "id": "e51585affb74b102"}, "name": true, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "722b7ae42dea99b8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:13:22.756516", "create_time": "2023-06-05T07:13:10.733747", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-gbbs2", "command_line": "ln -s '/galaxy/server/database/objects/2/7/1/dataset_27102f3c-ac30-40bc-808a-878bdfb8359e.dat' 'input.fasta' && bedtools getfasta -name     -fi 'input.fasta' -bed '/galaxy/server/database/objects/2/a/e/dataset_2ae4e586-f745-4aa5-a418-42909e18afb4.dat' -fo '/galaxy/server/database/objects/5/c/9/dataset_5c9a160d-bd90-47db-87f0-3292b4ce0dd9.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "nameOnly": "false", "name": "true", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 538, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "e51585affb74b102", "src": "hda", "uuid": "27102f3c-ac30-40bc-808a-878bdfb8359e"}, "input": {"id": "278c6d6ff4d994ba", "src": "hda", "uuid": "2ae4e586-f745-4aa5-a418-42909e18afb4"}}, "outputs": {"output": {"id": "239ae7b8257d249a", "src": "hda", "uuid": "5c9a160d-bd90-47db-87f0-3292b4ce0dd9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:13:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685949193.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:13:13", "plugin": "core", "name": "start_epoch", "raw_value": "1685949193.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 3, "time_seconds": 33.74034404754639, "inputs": {"input": {"src": "hda", "id": "22fd74662b33e9a7"}, "fasta_source|fasta": {"src": "hda", "id": "3557f9950af273a2"}, "nameOnly": true, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "2c8c28eebd80e4ce", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:13:55.989558", "create_time": "2023-06-05T07:13:42.562388", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6wdwg", "command_line": "ln -s '/galaxy/server/database/objects/7/6/2/dataset_762d8c30-2926-44e4-89b2-b0359a2a1b07.dat' 'input.fasta' && bedtools getfasta  -nameOnly    -fi 'input.fasta' -bed '/galaxy/server/database/objects/7/4/c/dataset_74c54576-6cc1-4b1b-bcde-dca37bb4c47a.dat' -fo '/galaxy/server/database/objects/4/f/e/dataset_4fe0b26f-dea2-4e1b-8513-f29b3dc44c61.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "nameOnly": "true", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 542, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"fasta": {"id": "3557f9950af273a2", "src": "hda", "uuid": "762d8c30-2926-44e4-89b2-b0359a2a1b07"}, "input": {"id": "22fd74662b33e9a7", "src": "hda", "uuid": "74c54576-6cc1-4b1b-bcde-dca37bb4c47a"}}, "outputs": {"output": {"id": "43f9f789ef643ca9", "src": "hda", "uuid": "4fe0b26f-dea2-4e1b-8513-f29b3dc44c61"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:13:45", "plugin": "core", "name": "end_epoch", "raw_value": "1685949225.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:13:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685949225.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0+galaxy1", "test_index": 4, "time_seconds": 19.67093324661255, "inputs": {"input": {"src": "hda", "id": "22fd74662b33e9a7"}, "fasta_source|fasta_id": "testid", "fasta_source|fasta_source_selector": "preloaded", "nameOnly": true, "tab": false, "split": false}, "execution_problem": "parameter 'fasta_id': an invalid option ('testid') was selected (valid options: droPer1,dm3,mm9,oryCun1,aptMan1,bosTau7,danRer6,Amel_4.5,caePb3,ce6,caeJap1,canFam2,Sscrofa9.58,petMar1,danRer10,dp4,braFlo1,borEut13,felCat5,hg_g1k_v37,eschColi_O157H7_EDL933,caeRem3,dipOrd1,mm10,rn5,cerSim1,loxAfr1,anoCar2,Tcas_3.0,triCas2,caeJap3,droVir3,AaegL1,danRer5,dm6,calJac3,mm8,cb3,apiMel2,caeJap2,saiBol1,susScr2,otoGar1,rn3,papAnu2,panTro3,eschColi_O157H7_EC4115,sorAra1,susScr1,anoCar1,felCat4,tarSyr1,oryza_sativa_japonica_nipponbare_IRGSP4.0,caeRem4,bosTau6,loxAfr3,Arabidopsis_thaliana_TAIR9,ente638,eschColi_O157H7_TW14359,strePneu_R6,droWil1,burkPseu_K96243,bosTau4,monDom4,ce8,droVir2,panTro2,strPur2,otoGar3,cavPor3,myoLuc2,ailMel1,Zea_mays_B73_RefGen_v2,venter1,phiX,turTru2,baciSubt,pseuAeru_UCBPP_PA14,ce7,caePb1,droGri2,Schizosaccharomyces_pombe_1.1,eschColi_CFT073,bosTau3,hg18,monDom5,ponAbe2,canFam1,burkPseu_1710B,hg38,rn6,27835,PhumU1,hg19_rCRS_pUC18_phiX174,ce5,panTro4,bordBron,eschColi_K12_DH10B,eschColi_O157H7,felCat8,strPur3,sacCer2,nomLeu3,burkPseu_1106A,oviAri1,eschColi_K12_W3110,pseuAeru_PAO1,xenTro2,Hydra_JCVI,papHam1,melUnd1,apiMel4,taeGut1,dasNov3,ce3,Tcacao_1.0,chrPic1,ci2,droYak2,Homo_sapiens_nuHg19_mtrCRS,ce2,canFam3,galGal4,calJac1,gasAcu1,sarHar1,nomLeu1,caeRem1,Araly1,eschColi_APEC_O1,galGal3,echTel1,tupBel1,susScr3,droEre2,speTri2,caeJap4,Spur_v2.6,priPac1,gorGor3,apiMel1,musFur1,nomLeu2,bosTau5,eschColi_K12,bosTauMd3,oryCun2,burkPseu_668,ornAna1,Homo_sapiens_AK1,monDom1,hg19,Xanthomonas_oryzae_KACC10331,ce4,vicPac2,AgamP3,droSec1,caeRem2,pseuAeru_PA7,vicPac1,panPan1,droSim1,droAna3,allMis1,aplCal1,micMur1,Arabidopsis_thaliana_TAIR10,xenTro3,equCab2,hetGla1,dasNov1,caePb2,rheMac2,droMoj3,Bombyx_mori_p50T_2.0,gadMor1,Ptrichocarpa_156,bosTau8,Xanthomonas_oryzae_PXO99A,rheMac3,oryLat2,ce10,Xanthomonas_oryzae_MAFF_311018,felCat3,geoFor1,ce9,CpipJ1,bosTau2,IscaW1,xenTro1,rn4,danRer7,choHof1,sacCer3,melGal1,apiMel3,panTro1)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 37.38794136047363, "inputs": {"input": {"src": "hda", "id": "4ef5bb81a42c6f45"}, "fasta_source|fasta": {"src": "hda", "id": "06131dfcb7c46c95"}, "tab": false, "split": false}, "job": {"model_class": "Job", "id": "ff71fd00445839ed", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:48:20.892331", "create_time": "2023-06-05T06:48:01.754270", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7rgcc", "command_line": "bedtools getfasta     -fi '/galaxy/server/database/objects/9/8/2/dataset_98265c46-744d-457a-b0f1-58d635589907.dat' -bed '/galaxy/server/database/objects/a/d/3/dataset_ad3ed192-adcd-4e20-acd9-b28c095040d1.dat' -fo '/galaxy/server/database/objects/7/a/7/dataset_7a7eed53-0bf0-4778-a5cd-7000cc10254c.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "false", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 271, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"input": {"id": "4ef5bb81a42c6f45", "src": "hda", "uuid": "ad3ed192-adcd-4e20-acd9-b28c095040d1"}, "fasta": {"id": "06131dfcb7c46c95", "src": "hda", "uuid": "98265c46-744d-457a-b0f1-58d635589907"}}, "outputs": {"output": {"id": "6adbec0d9117d076", "src": "hda", "uuid": "7a7eed53-0bf0-4778-a5cd-7000cc10254c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file /galaxy/server/database/objects/9/8/2/dataset_98265c46-744d-457a-b0f1-58d635589907.dat.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file /galaxy/server/database/objects/9/8/2/dataset_98265c46-744d-457a-b0f1-58d635589907.dat.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:48:11", "plugin": "core", "name": "end_epoch", "raw_value": "1685947691.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:48:11", "plugin": "core", "name": "start_epoch", "raw_value": "1685947691.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 29.22761607170105, "inputs": {"input": {"src": "hda", "id": "4ef5bb81a42c6f45"}, "fasta_source|fasta": {"src": "hda", "id": "06131dfcb7c46c95"}, "tab": true, "split": false}, "job": {"model_class": "Job", "id": "224141ea24b1cc1d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:48:21.793912", "create_time": "2023-06-05T06:48:10.755546", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_getfastabed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-hmfrp", "command_line": "bedtools getfasta  -tab   -fi '/galaxy/server/database/objects/9/8/2/dataset_98265c46-744d-457a-b0f1-58d635589907.dat' -bed '/galaxy/server/database/objects/a/d/3/dataset_ad3ed192-adcd-4e20-acd9-b28c095040d1.dat' -fo '/galaxy/server/database/objects/c/e/a/dataset_cea02d8c-4516-40d8-9d32-35875f4d4f5e.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "false", "tab": "true", "name": "false", "fasta_source": "{\"__current_case__\": 0, \"fasta\": {\"values\": [{\"id\": 271, \"src\": \"hda\"}]}, \"fasta_source_selector\": \"history\"}"}, "inputs": {"input": {"id": "4ef5bb81a42c6f45", "src": "hda", "uuid": "ad3ed192-adcd-4e20-acd9-b28c095040d1"}, "fasta": {"id": "06131dfcb7c46c95", "src": "hda", "uuid": "98265c46-744d-457a-b0f1-58d635589907"}}, "outputs": {"output": {"id": "f85d18ce0088acc5", "src": "hda", "uuid": "cea02d8c-4516-40d8-9d32-35875f4d4f5e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:48:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685947693.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:48:13", "plugin": "core", "name": "start_epoch", "raw_value": "1685947693.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 26.490846872329712, "inputs": {"inputA": {"src": "hda", "id": "d300774015205f58"}, "cols": "9", "group": "1,2,3", "operation": "sum"}, "job": {"model_class": "Job", "id": "62eb3bb956fdab2e", "state": "error", "exit_code": null, "update_time": "2023-06-05T06:58:45.975626", "create_time": "2023-06-05T06:58:35.782729", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-h8z2v", "command_line": "bedtools groupby -i '/galaxy/server/database/objects/3/1/b/dataset_31bc68c4-c5ab-44b1-93e6-bf4f269d6cc7.dat' -g '1,2,3' -c '9' -o sum > '/galaxy/server/database/objects/c/a/9/dataset_ca979ff8-ee5a-460b-b490-aafcd3baa363.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operation": "\"sum\"", "group": "\"1,2,3\"", "cols": "\"9\""}, "inputs": {"inputA": {"id": "d300774015205f58", "src": "hda", "uuid": "31bc68c4-c5ab-44b1-93e6-bf4f269d6cc7"}}, "outputs": {"output": {"id": "b0b756da183dc853", "src": "hda", "uuid": "ca979ff8-ee5a-460b-b490-aafcd3baa363"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 27.608314990997314, "inputs": {"inputA": {"src": "hda", "id": "d300774015205f58"}, "cols": "9", "group": "1,2,3", "operation": "min"}, "job": {"model_class": "Job", "id": "b51be06e4a3f899f", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:58:51.951051", "create_time": "2023-06-05T06:58:39.883710", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-rr4zf", "command_line": "bedtools groupby -i '/galaxy/server/database/objects/3/1/b/dataset_31bc68c4-c5ab-44b1-93e6-bf4f269d6cc7.dat' -g '1,2,3' -c '9' -o min > '/galaxy/server/database/objects/f/c/7/dataset_fc743983-f968-4191-89f2-1672d35d1264.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operation": "\"min\"", "group": "\"1,2,3\"", "cols": "\"9\""}, "inputs": {"inputA": {"id": "d300774015205f58", "src": "hda", "uuid": "31bc68c4-c5ab-44b1-93e6-bf4f269d6cc7"}}, "outputs": {"output": {"id": "61a0e36161ec5376", "src": "hda", "uuid": "fc743983-f968-4191-89f2-1672d35d1264"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:58:43", "plugin": "core", "name": "end_epoch", "raw_value": "1685948323.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:58:43", "plugin": "core", "name": "start_epoch", "raw_value": "1685948323.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 29.272440195083618, "inputs": {"inputA": {"src": "hda", "id": "b1ba276afd8084c1"}, "cols": "9", "group": "1-4", "operation": "median"}, "job": {"model_class": "Job", "id": "eecb86e0a2c3326c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:59:15.013333", "create_time": "2023-06-05T06:59:03.911502", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_groupbybed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7mrlb", "command_line": "bedtools groupby -i '/galaxy/server/database/objects/9/c/3/dataset_9c3ded95-af6d-4bfe-88ee-964c4c6fa96f.dat' -g '1-4' -c '9' -o median > '/galaxy/server/database/objects/a/5/7/dataset_a57fb754-efe9-43b6-a172-b4d6b68ffed0.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operation": "\"median\"", "group": "\"1-4\"", "cols": "\"9\""}, "inputs": {"inputA": {"id": "b1ba276afd8084c1", "src": "hda", "uuid": "9c3ded95-af6d-4bfe-88ee-964c4c6fa96f"}}, "outputs": {"output": {"id": "02b38d1ed8ad784e", "src": "hda", "uuid": "a57fb754-efe9-43b6-a172-b4d6b68ffed0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:59:06", "plugin": "core", "name": "end_epoch", "raw_value": "1685948346.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:59:06", "plugin": "core", "name": "start_epoch", "raw_value": "1685948346.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 30.88593816757202, "inputs": {"inputA": {"src": "hda", "id": "1e431fb039f4ac67"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "428700497ac8b488"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate"}, "job": {"model_class": "Job", "id": "71644d8392712835", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:03:47.402835", "create_time": "2023-06-05T07:03:36.970629", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-hdcj7", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/8/9/f/dataset_89f2bf94-7a7e-4b24-9b25-f23c87d25efc.dat'  -b '/galaxy/server/database/objects/4/0/d/dataset_40d4bd85-4949-40c3-a45c-65777c277503.dat'                > '/galaxy/server/database/objects/1/9/7/dataset_19717076-c622-41ee-9474-187f3aa56eec.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 436, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "1e431fb039f4ac67", "src": "hda", "uuid": "89f2bf94-7a7e-4b24-9b25-f23c87d25efc"}, "inputB": {"id": "428700497ac8b488", "src": "hda", "uuid": "40d4bd85-4949-40c3-a45c-65777c277503"}}, "outputs": {"output": {"id": "1c32e3a5175ffc0d", "src": "hda", "uuid": "19717076-c622-41ee-9474-187f3aa56eec"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:03:38", "plugin": "core", "name": "end_epoch", "raw_value": "1685948618.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:03:38", "plugin": "core", "name": "start_epoch", "raw_value": "1685948618.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 9.475774765014648, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-10", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 10, "time_seconds": 36.39772272109985, "inputs": {"inputA": {"src": "hda", "id": "057950a09b663e5c"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "f4d7c4e7057eacc9"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wo"}, "job": {"model_class": "Job", "id": "1b623902d2801dad", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:07:12.643971", "create_time": "2023-06-05T07:06:57.735809", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-tc9fn", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/3/c/6/dataset_3c668fc6-105f-4894-b087-e127c1d3285f.dat'  -b '/galaxy/server/database/objects/9/2/4/dataset_924877d3-72df-4fb2-8b2d-c5bdf25bb2e8.dat'      -wo          > '/galaxy/server/database/objects/7/4/1/dataset_74148c5e-5c0d-49b2-b988-b391b027f246.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wo\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 476, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "057950a09b663e5c", "src": "hda", "uuid": "3c668fc6-105f-4894-b087-e127c1d3285f"}, "inputB": {"id": "f4d7c4e7057eacc9", "src": "hda", "uuid": "924877d3-72df-4fb2-8b2d-c5bdf25bb2e8"}}, "outputs": {"output": {"id": "22233fe738750800", "src": "hda", "uuid": "74148c5e-5c0d-49b2-b988-b391b027f246"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:07:03", "plugin": "core", "name": "end_epoch", "raw_value": "1685948823.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:07:03", "plugin": "core", "name": "start_epoch", "raw_value": "1685948823.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-11", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 11, "time_seconds": 36.41324734687805, "inputs": {"inputA": {"src": "hda", "id": "057950a09b663e5c"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "f4d7c4e7057eacc9"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wao"}, "job": {"model_class": "Job", "id": "28edb1ffcff08671", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:07:15.726108", "create_time": "2023-06-05T07:07:02.589968", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ls4zg", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/3/c/6/dataset_3c668fc6-105f-4894-b087-e127c1d3285f.dat'  -b '/galaxy/server/database/objects/9/2/4/dataset_924877d3-72df-4fb2-8b2d-c5bdf25bb2e8.dat'      -wao          > '/galaxy/server/database/objects/8/5/2/dataset_8521f178-5e7a-4187-89ac-537ce6816ec2.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wao\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 476, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "057950a09b663e5c", "src": "hda", "uuid": "3c668fc6-105f-4894-b087-e127c1d3285f"}, "inputB": {"id": "f4d7c4e7057eacc9", "src": "hda", "uuid": "924877d3-72df-4fb2-8b2d-c5bdf25bb2e8"}}, "outputs": {"output": {"id": "3714368987c14601", "src": "hda", "uuid": "8521f178-5e7a-4187-89ac-537ce6816ec2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:07:06", "plugin": "core", "name": "end_epoch", "raw_value": "1685948826.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:07:06", "plugin": "core", "name": "start_epoch", "raw_value": "1685948826.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-12", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 12, "time_seconds": 39.2986581325531, "inputs": {"inputA": {"src": "hda", "id": "b59f9944e1c75fa5"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "358751fb5005f4ea"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "once": true}, "job": {"model_class": "Job", "id": "586421914393f5ce", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:07:52.324990", "create_time": "2023-06-05T07:07:39.341642", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7sjzw", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/b/3/7/dataset_b37e01d5-4107-49cb-a8bd-ac17bc4f4d72.dat'  -b '/galaxy/server/database/objects/6/c/c/dataset_6ccfa55e-fdb1-44fe-9157-099075e8363d.dat'    -u            > '/galaxy/server/database/objects/6/4/5/dataset_6456d962-8b67-446c-bc35-a633962ad3be.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "true", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 482, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "b59f9944e1c75fa5", "src": "hda", "uuid": "b37e01d5-4107-49cb-a8bd-ac17bc4f4d72"}, "inputB": {"id": "358751fb5005f4ea", "src": "hda", "uuid": "6ccfa55e-fdb1-44fe-9157-099075e8363d"}}, "outputs": {"output": {"id": "d14be9c2b82e7ba5", "src": "hda", "uuid": "6456d962-8b67-446c-bc35-a633962ad3be"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:07:42", "plugin": "core", "name": "end_epoch", "raw_value": "1685948862.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:07:42", "plugin": "core", "name": "start_epoch", "raw_value": "1685948862.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-13", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 13, "time_seconds": 39.33591938018799, "inputs": {"inputA": {"src": "hda", "id": "b59f9944e1c75fa5"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "358751fb5005f4ea"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "count": true}, "job": {"model_class": "Job", "id": "042eb4e164dd8481", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:07:55.417947", "create_time": "2023-06-05T07:07:40.643089", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6r4gx", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/b/3/7/dataset_b37e01d5-4107-49cb-a8bd-ac17bc4f4d72.dat'  -b '/galaxy/server/database/objects/6/c/c/dataset_6ccfa55e-fdb1-44fe-9157-099075e8363d.dat'               -c > '/galaxy/server/database/objects/a/0/0/dataset_a00680d3-f631-44fb-8946-c425773ff68f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "true", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 482, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "b59f9944e1c75fa5", "src": "hda", "uuid": "b37e01d5-4107-49cb-a8bd-ac17bc4f4d72"}, "inputB": {"id": "358751fb5005f4ea", "src": "hda", "uuid": "6ccfa55e-fdb1-44fe-9157-099075e8363d"}}, "outputs": {"output": {"id": "51a711a3ce0c1e4e", "src": "hda", "uuid": "a00680d3-f631-44fb-8946-c425773ff68f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:07:46", "plugin": "core", "name": "end_epoch", "raw_value": "1685948866.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:07:46", "plugin": "core", "name": "start_epoch", "raw_value": "1685948866.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-14", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 14, "time_seconds": 29.52092742919922, "inputs": {"inputA": {"src": "hda", "id": "414b6361508ad378"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "6a100592861cf6aa"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "invert": true}, "job": {"model_class": "Job", "id": "adb9b83e0b1e3b6c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:08:21.920286", "create_time": "2023-06-05T07:08:10.760930", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-4fsd6", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/a/3/7/dataset_a376134c-1b37-43bb-83fb-6d6b3b30c76d.dat'  -b '/galaxy/server/database/objects/d/8/7/dataset_d871f245-02ad-42ec-b3a3-e66e7b34f099.dat'   -v             > '/galaxy/server/database/objects/9/8/c/dataset_98c56039-5790-4432-83a2-66cd1e98d9b3.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 486, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "414b6361508ad378", "src": "hda", "uuid": "a376134c-1b37-43bb-83fb-6d6b3b30c76d"}, "inputB": {"id": "6a100592861cf6aa", "src": "hda", "uuid": "d871f245-02ad-42ec-b3a3-e66e7b34f099"}}, "outputs": {"output": {"id": "50b877b859e6123d", "src": "hda", "uuid": "98c56039-5790-4432-83a2-66cd1e98d9b3"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:08:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685948893.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:08:12", "plugin": "core", "name": "start_epoch", "raw_value": "1685948892.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-15", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 15, "time_seconds": 35.49115324020386, "inputs": {"inputA": {"src": "hda", "id": "adf771be1e0a5423"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "851bb244eef39c36"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "55a367201c8bbbcf", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:08:31.134794", "create_time": "2023-06-05T07:08:20.239095", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-wrmhf", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/9/f/1/dataset_9f16c062-79cd-4f0d-9130-6de8bbcb8a34.dat'  -b '/galaxy/server/database/objects/0/a/8/dataset_0a81c656-0b11-49f9-81a0-d1c1aae9961f.dat'   -f 0.5      -wa -wb          > '/galaxy/server/database/objects/7/0/7/dataset_707ecf45-78df-4deb-879e-69305d01c79d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 488, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "adf771be1e0a5423", "src": "hda", "uuid": "9f16c062-79cd-4f0d-9130-6de8bbcb8a34"}, "inputB": {"id": "851bb244eef39c36", "src": "hda", "uuid": "0a81c656-0b11-49f9-81a0-d1c1aae9961f"}}, "outputs": {"output": {"id": "7a0bea66c450a9d8", "src": "hda", "uuid": "707ecf45-78df-4deb-879e-69305d01c79d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:08:22", "plugin": "core", "name": "end_epoch", "raw_value": "1685948902.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:08:22", "plugin": "core", "name": "start_epoch", "raw_value": "1685948902.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-16", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 16, "time_seconds": 39.704912185668945, "inputs": {"inputA": {"src": "hda", "id": "dccf45ea55c10587"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "05f1180354c05efe"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|reciprocal": "-r", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "6482c6e8cd16fe7e", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:09:01.622922", "create_time": "2023-06-05T07:08:41.222890", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-j7lwb", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/1/5/dataset_015f1340-a5ea-41d1-91e5-cfa162ac365c.dat'  -b '/galaxy/server/database/objects/4/b/f/dataset_4bfdef2d-11f9-443e-a735-c23f2ceb68ba.dat'   -f 0.5 -r    -wa -wb          > '/galaxy/server/database/objects/3/e/7/dataset_3e7e9487-5b71-4fa5-844e-d62a82c10545.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 0, \"reciprocal\": \"-r\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 494, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "dccf45ea55c10587", "src": "hda", "uuid": "015f1340-a5ea-41d1-91e5-cfa162ac365c"}, "inputB": {"id": "05f1180354c05efe", "src": "hda", "uuid": "4bfdef2d-11f9-443e-a735-c23f2ceb68ba"}}, "outputs": {"output": {"id": "a7bcc6740dda807e", "src": "hda", "uuid": "3e7e9487-5b71-4fa5-844e-d62a82c10545"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:08:51", "plugin": "core", "name": "end_epoch", "raw_value": "1685948931.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:08:51", "plugin": "core", "name": "start_epoch", "raw_value": "1685948931.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-17", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 17, "time_seconds": 33.7452495098114, "inputs": {"inputA": {"src": "hda", "id": "dccf45ea55c10587"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "05f1180354c05efe"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "a48f052e4509e945", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:09:04.864931", "create_time": "2023-06-05T07:08:49.936319", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-g2jmh", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/1/5/dataset_015f1340-a5ea-41d1-91e5-cfa162ac365c.dat'  -b '/galaxy/server/database/objects/4/b/f/dataset_4bfdef2d-11f9-443e-a735-c23f2ceb68ba.dat'   -f 0.5  -F 0.5     -wa -wb          > '/galaxy/server/database/objects/d/a/2/dataset_da2aac94-f5c7-4245-88fb-1a27aa5fd0e7.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 494, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "dccf45ea55c10587", "src": "hda", "uuid": "015f1340-a5ea-41d1-91e5-cfa162ac365c"}, "inputB": {"id": "05f1180354c05efe", "src": "hda", "uuid": "4bfdef2d-11f9-443e-a735-c23f2ceb68ba"}}, "outputs": {"output": {"id": "4fc576dfbda12c4d", "src": "hda", "uuid": "da2aac94-f5c7-4245-88fb-1a27aa5fd0e7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:08:55", "plugin": "core", "name": "end_epoch", "raw_value": "1685948935.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:08:55", "plugin": "core", "name": "start_epoch", "raw_value": "1685948935.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-18", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 18, "time_seconds": 30.8089702129364, "inputs": {"inputA": {"src": "hda", "id": "c7ff6f936dbdae1b"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "f8ade5ae77b6bfca"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|reciprocal_cond|disjoint": true, "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "de0cc1a1d5f97d22", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:09:32.890400", "create_time": "2023-06-05T07:09:21.906576", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-l8hgf", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/a/f/8/dataset_af82d4d7-f90c-4ec3-8ce6-b9cd60ad61f7.dat'  -b '/galaxy/server/database/objects/7/4/1/dataset_74118841-d98a-45d8-bac3-77fd19889338.dat'   -f 0.5  -F 0.5 -e    -wa -wb          > '/galaxy/server/database/objects/f/c/b/dataset_fcbc6761-a9b7-48ef-afe5-7284877c37fd.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": true, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 498, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "c7ff6f936dbdae1b", "src": "hda", "uuid": "af82d4d7-f90c-4ec3-8ce6-b9cd60ad61f7"}, "inputB": {"id": "f8ade5ae77b6bfca", "src": "hda", "uuid": "74118841-d98a-45d8-bac3-77fd19889338"}}, "outputs": {"output": {"id": "b78206af8c7f57b7", "src": "hda", "uuid": "fcbc6761-a9b7-48ef-afe5-7284877c37fd"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:09:23", "plugin": "core", "name": "end_epoch", "raw_value": "1685948963.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:09:23", "plugin": "core", "name": "start_epoch", "raw_value": "1685948963.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-19", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 19, "time_seconds": 33.38951849937439, "inputs": {"inputA": {"src": "hda", "id": "178fde0ff2a15384"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "0fe2ff0ef757dddb"}, "overlap_mode": "-wa", "split": false}, "job": {"model_class": "Job", "id": "f54f215b2583f283", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:09:38.258956", "create_time": "2023-06-05T07:09:26.890683", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-k7wh2", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/f/f/1/dataset_ff1e9d8f-eeee-4242-ab1f-8fbe32202d09.dat'  -b '/galaxy/server/database/objects/8/8/7/dataset_887d4e1b-a28e-4096-809f-ae57d533d82a.dat'      -wa          > '/galaxy/server/database/objects/8/a/3/dataset_8a3420c4-1446-4bff-a7ef-2e00f7b71fd1.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wa\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 500, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "178fde0ff2a15384", "src": "hda", "uuid": "ff1e9d8f-eeee-4242-ab1f-8fbe32202d09"}, "inputB": {"id": "0fe2ff0ef757dddb", "src": "hda", "uuid": "887d4e1b-a28e-4096-809f-ae57d533d82a"}}, "outputs": {"output": {"id": "f594574b9e5e6697", "src": "hda", "uuid": "8a3420c4-1446-4bff-a7ef-2e00f7b71fd1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:09:29", "plugin": "core", "name": "end_epoch", "raw_value": "1685948969.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:09:29", "plugin": "core", "name": "start_epoch", "raw_value": "1685948969.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 54.025941610336304, "inputs": {"inputA": {"src": "hda", "id": "042eb4e164dd8481"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "4787078f579459a9"}, {"src": "hda", "id": "233386c9fb71f6c9"}, {"src": "hda", "id": "23114b97d71c8454"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "d961f0dcf5f53094", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:04:41.543596", "create_time": "2023-06-05T07:04:26.827414", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-8cprz", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/4/5/d/dataset_45dc3f5f-858f-4f92-87a6-5d97b9bcc800.dat'  -b '/galaxy/server/database/objects/5/f/f/dataset_5ff94a84-4619-41e0-b0c7-52788b0bb9fd.dat' '/galaxy/server/database/objects/2/4/9/dataset_249a4c81-9bbf-40b3-8dd8-781e811df44b.dat' '/galaxy/server/database/objects/c/7/9/dataset_c797f909-1f1e-4418-954d-bb7ed68dbeef.dat'       -wa -wb   -sorted       > '/galaxy/server/database/objects/4/8/1/dataset_4818c766-20fb-46f5-8eff-8b4a0a3ba578.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 448, \"src\": \"hda\"}, {\"id\": 449, \"src\": \"hda\"}, {\"id\": 450, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "042eb4e164dd8481", "src": "hda", "uuid": "45dc3f5f-858f-4f92-87a6-5d97b9bcc800"}, "inputB": {"id": "4787078f579459a9", "src": "hda", "uuid": "5ff94a84-4619-41e0-b0c7-52788b0bb9fd"}, "inputB1": {"id": "4787078f579459a9", "src": "hda", "uuid": "5ff94a84-4619-41e0-b0c7-52788b0bb9fd"}, "inputB2": {"id": "233386c9fb71f6c9", "src": "hda", "uuid": "249a4c81-9bbf-40b3-8dd8-781e811df44b"}, "inputB3": {"id": "23114b97d71c8454", "src": "hda", "uuid": "c797f909-1f1e-4418-954d-bb7ed68dbeef"}}, "outputs": {"output": {"id": "e3dc1db23b5157a4", "src": "hda", "uuid": "4818c766-20fb-46f5-8eff-8b4a0a3ba578"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:04:32", "plugin": "core", "name": "end_epoch", "raw_value": "1685948672.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:04:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685948672.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-20", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 20, "time_seconds": 15.152429580688477, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-21", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 21, "time_seconds": 32.82067608833313, "inputs": {"inputA": {"src": "hda", "id": "164208c3cc7a3aa3"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "2dd0c8a76a90adba"}, "split": false, "invert": true}, "job": {"model_class": "Job", "id": "ae96b0e767eb1519", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:10:11.590594", "create_time": "2023-06-05T07:09:59.028770", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-bhfws", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/c/5/c/dataset_c5c67307-c409-4c3f-b05b-11b8512e1093.dat'  -b '/galaxy/server/database/objects/9/c/3/dataset_9c328041-4a75-4a27-b488-5580125e93eb.dat'   -v             > '/galaxy/server/database/objects/0/e/c/dataset_0eccfdf6-b5b1-401a-abef-ecdb25d4c31a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 506, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "164208c3cc7a3aa3", "src": "hda", "uuid": "c5c67307-c409-4c3f-b05b-11b8512e1093"}, "inputB": {"id": "2dd0c8a76a90adba", "src": "hda", "uuid": "9c328041-4a75-4a27-b488-5580125e93eb"}}, "outputs": {"output": {"id": "b9ae6e62a4c76871", "src": "hda", "uuid": "0eccfdf6-b5b1-401a-abef-ecdb25d4c31a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:10:02", "plugin": "core", "name": "end_epoch", "raw_value": "1685949002.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:10:02", "plugin": "core", "name": "start_epoch", "raw_value": "1685949002.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 3, "time_seconds": 50.14563488960266, "inputs": {"inputA": {"src": "hda", "id": "042eb4e164dd8481"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "4787078f579459a9"}, {"src": "hda", "id": "233386c9fb71f6c9"}, {"src": "hda", "id": "23114b97d71c8454"}], "reduce_or_iterate|names": true, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "486451b4624c7428", "state": "error", "exit_code": null, "update_time": "2023-06-05T07:04:39.645485", "create_time": "2023-06-05T07:04:31.695688", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-xgnlc", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/4/5/d/dataset_45dc3f5f-858f-4f92-87a6-5d97b9bcc800.dat'  -b '/galaxy/server/database/objects/5/f/f/dataset_5ff94a84-4619-41e0-b0c7-52788b0bb9fd.dat' '/galaxy/server/database/objects/2/4/9/dataset_249a4c81-9bbf-40b3-8dd8-781e811df44b.dat' '/galaxy/server/database/objects/c/7/9/dataset_c797f909-1f1e-4418-954d-bb7ed68dbeef.dat'  -names 'intersect-d1_bed' 'intersect-d2_bed' 'intersect-d3_bed'      -wa -wb   -sorted       > '/galaxy/server/database/objects/7/6/6/dataset_76647b79-69ce-4561-8829-6334506e5000.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 448, \"src\": \"hda\"}, {\"id\": 449, \"src\": \"hda\"}, {\"id\": 450, \"src\": \"hda\"}]}, \"names\": true, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "042eb4e164dd8481", "src": "hda", "uuid": "45dc3f5f-858f-4f92-87a6-5d97b9bcc800"}, "inputB": {"id": "4787078f579459a9", "src": "hda", "uuid": "5ff94a84-4619-41e0-b0c7-52788b0bb9fd"}, "inputB1": {"id": "4787078f579459a9", "src": "hda", "uuid": "5ff94a84-4619-41e0-b0c7-52788b0bb9fd"}, "inputB2": {"id": "233386c9fb71f6c9", "src": "hda", "uuid": "249a4c81-9bbf-40b3-8dd8-781e811df44b"}, "inputB3": {"id": "23114b97d71c8454", "src": "hda", "uuid": "c797f909-1f1e-4418-954d-bb7ed68dbeef"}}, "outputs": {"output": {"id": "adb9b83e0b1e3b6c", "src": "hda", "uuid": "76647b79-69ce-4561-8829-6334506e5000"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 4, "time_seconds": 41.92224717140198, "inputs": {"inputA": {"src": "hda", "id": "f61203034e76aec9"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "6482c6e8cd16fe7e"}, {"src": "hda", "id": "a48f052e4509e945"}, {"src": "hda", "id": "a01daba19add0c78"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "invert": true, "sorted": true}, "execution_problem": "parameter 'inputB': the previously selected dataset has entered an unusable state", "dynamic_param_error": false, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 5, "time_seconds": 37.06196427345276, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 6, "time_seconds": 38.58041334152222, "inputs": {"inputA": {"src": "hda", "id": "4dbad1ca4ab90839"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "de0cc1a1d5f97d22"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wa"}, "job": {"model_class": "Job", "id": "52270c1b5bcf6dc4", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:05:57.217847", "create_time": "2023-06-05T07:05:39.425297", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-8x6tj", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/6/a/1/dataset_6a1953a8-7d89-4c7a-a1af-07fc2aee501a.dat'  -b '/galaxy/server/database/objects/e/c/e/dataset_ecebfe62-66c2-4a0e-a178-53c23208b3ab.dat'      -wa          > '/galaxy/server/database/objects/b/5/a/dataset_b5a633e8-aaf4-4182-ab90-0c79cdf63f4d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wa\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 464, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "4dbad1ca4ab90839", "src": "hda", "uuid": "6a1953a8-7d89-4c7a-a1af-07fc2aee501a"}, "inputB": {"id": "de0cc1a1d5f97d22", "src": "hda", "uuid": "ecebfe62-66c2-4a0e-a178-53c23208b3ab"}}, "outputs": {"output": {"id": "f54f215b2583f283", "src": "hda", "uuid": "b5a633e8-aaf4-4182-ab90-0c79cdf63f4d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:05:47", "plugin": "core", "name": "end_epoch", "raw_value": "1685948747.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:05:47", "plugin": "core", "name": "start_epoch", "raw_value": "1685948747.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 7, "time_seconds": 38.55130362510681, "inputs": {"inputA": {"src": "hda", "id": "4dbad1ca4ab90839"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "de0cc1a1d5f97d22"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wb"}, "job": {"model_class": "Job", "id": "e7f09f78d17af43b", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:06:00.209375", "create_time": "2023-06-05T07:05:46.464152", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-vmg9s", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/6/a/1/dataset_6a1953a8-7d89-4c7a-a1af-07fc2aee501a.dat'  -b '/galaxy/server/database/objects/e/c/e/dataset_ecebfe62-66c2-4a0e-a178-53c23208b3ab.dat'      -wb          > '/galaxy/server/database/objects/a/e/e/dataset_aeef17f2-9d47-4099-b805-1dbc32842647.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wb\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 464, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "4dbad1ca4ab90839", "src": "hda", "uuid": "6a1953a8-7d89-4c7a-a1af-07fc2aee501a"}, "inputB": {"id": "de0cc1a1d5f97d22", "src": "hda", "uuid": "ecebfe62-66c2-4a0e-a178-53c23208b3ab"}}, "outputs": {"output": {"id": "54e849633c81059d", "src": "hda", "uuid": "aeef17f2-9d47-4099-b805-1dbc32842647"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:05:50", "plugin": "core", "name": "end_epoch", "raw_value": "1685948750.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:05:50", "plugin": "core", "name": "start_epoch", "raw_value": "1685948750.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 8, "time_seconds": 38.59835195541382, "inputs": {"inputA": {"src": "hda", "id": "b8ac730c9c8e5e68"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "74763ddc4318a350"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"]}, "job": {"model_class": "Job", "id": "93e687379cfb4126", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:06:36.230730", "create_time": "2023-06-05T07:06:21.157384", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-c5pkp", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/9/3/2/dataset_9321e7ff-7683-4886-a81d-613de7183934.dat'  -b '/galaxy/server/database/objects/d/7/5/dataset_d75b40f6-615a-4832-8b8c-eb7d476a12b7.dat'      -wa -wb          > '/galaxy/server/database/objects/c/8/3/dataset_c83b47e0-0265-48be-9197-d1089c97c3f4.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 470, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "b8ac730c9c8e5e68", "src": "hda", "uuid": "9321e7ff-7683-4886-a81d-613de7183934"}, "inputB": {"id": "74763ddc4318a350", "src": "hda", "uuid": "d75b40f6-615a-4832-8b8c-eb7d476a12b7"}}, "outputs": {"output": {"id": "2655fb5567b91690", "src": "hda", "uuid": "c83b47e0-0265-48be-9197-d1089c97c3f4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:06:25", "plugin": "core", "name": "end_epoch", "raw_value": "1685948785.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:06:25", "plugin": "core", "name": "start_epoch", "raw_value": "1685948785.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1-9", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0+galaxy1", "test_index": 9, "time_seconds": 38.99313545227051, "inputs": {"inputA": {"src": "hda", "id": "b8ac730c9c8e5e68"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "74763ddc4318a350"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-loj"}, "job": {"model_class": "Job", "id": "1e431fb039f4ac67", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:06:39.372494", "create_time": "2023-06-05T07:06:24.287372", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-wbb5w", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/9/3/2/dataset_9321e7ff-7683-4886-a81d-613de7183934.dat'  -b '/galaxy/server/database/objects/d/7/5/dataset_d75b40f6-615a-4832-8b8c-eb7d476a12b7.dat'      -loj          > '/galaxy/server/database/objects/e/8/4/dataset_e843963e-ffe1-40d7-bb8f-8332f93fe7b4.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-loj\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 470, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "b8ac730c9c8e5e68", "src": "hda", "uuid": "9321e7ff-7683-4886-a81d-613de7183934"}, "inputB": {"id": "74763ddc4318a350", "src": "hda", "uuid": "d75b40f6-615a-4832-8b8c-eb7d476a12b7"}}, "outputs": {"output": {"id": "ae96b0e767eb1519", "src": "hda", "uuid": "e843963e-ffe1-40d7-bb8f-8332f93fe7b4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:06:29", "plugin": "core", "name": "end_epoch", "raw_value": "1685948789.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:06:29", "plugin": "core", "name": "start_epoch", "raw_value": "1685948789.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 35.36683011054993, "inputs": {"inputA": {"src": "hda", "id": "2567f540ef9eeaac"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "c0f9e050cea08550"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate"}, "job": {"model_class": "Job", "id": "5aa91b0091299f57", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:50:57.614727", "create_time": "2023-06-05T06:50:41.215805", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-sq2b2", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/e/3/dataset_0e323be3-476e-4499-b110-5fa2d10faf63.dat'  -b '/galaxy/server/database/objects/b/f/1/dataset_bf1e2de8-c048-49bf-8a62-fcc7bee7cf09.dat'              > '/galaxy/server/database/objects/4/e/f/dataset_4efc195e-6417-41b8-b672-e3295fcb0379.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 298, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "2567f540ef9eeaac", "src": "hda", "uuid": "0e323be3-476e-4499-b110-5fa2d10faf63"}, "inputB": {"id": "c0f9e050cea08550", "src": "hda", "uuid": "bf1e2de8-c048-49bf-8a62-fcc7bee7cf09"}}, "outputs": {"output": {"id": "47258bfde82a2c5d", "src": "hda", "uuid": "4efc195e-6417-41b8-b672-e3295fcb0379"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:50:47", "plugin": "core", "name": "end_epoch", "raw_value": "1685947847.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:50:47", "plugin": "core", "name": "start_epoch", "raw_value": "1685947847.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 64.11800146102905, "inputs": {"inputA": {"src": "hda", "id": "f872c053e822a34e"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "de7330b56f6d9360"}, {"src": "hda", "id": "3c0d3f3099b76619"}, {"src": "hda", "id": "02cc6f7236d0fb64"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce"}, "job": {"model_class": "Job", "id": "06131dfcb7c46c95", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:51:36.008260", "create_time": "2023-06-05T06:51:02.336553", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-svskf", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/1/3/dataset_e131b00b-4622-4da8-97c3-0cb4e42ac678.dat'  -b '/galaxy/server/database/objects/9/e/1/dataset_9e13a162-9a80-49e0-9892-8f6287456fca.dat' '/galaxy/server/database/objects/e/4/f/dataset_e4f13b94-adb9-4c06-a6a5-edf9958a739c.dat' '/galaxy/server/database/objects/c/d/3/dataset_cd347293-6599-4268-a366-9ec0fe8d9baf.dat'               > '/galaxy/server/database/objects/3/f/d/dataset_3fdbad4f-3a8e-4f4d-9001-b37ad4fc17a3.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 305, \"src\": \"hda\"}, {\"id\": 306, \"src\": \"hda\"}, {\"id\": 307, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "f872c053e822a34e", "src": "hda", "uuid": "e131b00b-4622-4da8-97c3-0cb4e42ac678"}, "inputB": {"id": "de7330b56f6d9360", "src": "hda", "uuid": "9e13a162-9a80-49e0-9892-8f6287456fca"}, "inputB1": {"id": "de7330b56f6d9360", "src": "hda", "uuid": "9e13a162-9a80-49e0-9892-8f6287456fca"}, "inputB2": {"id": "3c0d3f3099b76619", "src": "hda", "uuid": "e4f13b94-adb9-4c06-a6a5-edf9958a739c"}, "inputB3": {"id": "02cc6f7236d0fb64", "src": "hda", "uuid": "cd347293-6599-4268-a366-9ec0fe8d9baf"}}, "outputs": {"output": {"id": "f97bdf0dbc0f3fc2", "src": "hda", "uuid": "3fdbad4f-3a8e-4f4d-9001-b37ad4fc17a3"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:51:26", "plugin": "core", "name": "end_epoch", "raw_value": "1685947886.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:51:26", "plugin": "core", "name": "start_epoch", "raw_value": "1685947886.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-10", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 10, "time_seconds": 35.34747505187988, "inputs": {"inputA": {"src": "hda", "id": "a060687d5045fe30"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "05dde19e1d20c4db"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wo"}, "job": {"model_class": "Job", "id": "cf3c8064fee74138", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:54:20.760027", "create_time": "2023-06-05T06:54:08.248112", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-xdb5b", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/7/4/0/dataset_740ea1c8-5a25-4ef7-a496-c2e3a5ca2083.dat'  -b '/galaxy/server/database/objects/8/9/f/dataset_89ff9c0c-c6ce-4a81-8f68-8d13408623c3.dat'      -wo        > '/galaxy/server/database/objects/5/d/3/dataset_5d36ce45-5eef-439c-80cb-748a9b367fc4.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wo\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 337, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "a060687d5045fe30", "src": "hda", "uuid": "740ea1c8-5a25-4ef7-a496-c2e3a5ca2083"}, "inputB": {"id": "05dde19e1d20c4db", "src": "hda", "uuid": "89ff9c0c-c6ce-4a81-8f68-8d13408623c3"}}, "outputs": {"output": {"id": "daecfab12be36928", "src": "hda", "uuid": "5d36ce45-5eef-439c-80cb-748a9b367fc4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:54:12", "plugin": "core", "name": "end_epoch", "raw_value": "1685948052.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:54:12", "plugin": "core", "name": "start_epoch", "raw_value": "1685948052.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-11", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 11, "time_seconds": 37.530391454696655, "inputs": {"inputA": {"src": "hda", "id": "644102e3bee8eaa6"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "ad141c400280054a"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wao"}, "job": {"model_class": "Job", "id": "02cc6f7236d0fb64", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:54:55.553333", "create_time": "2023-06-05T06:54:41.883863", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-d2m5w", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/c/6/8/dataset_c688c826-07b6-4028-b7ae-afddc8ae4940.dat'  -b '/galaxy/server/database/objects/0/c/0/dataset_0c0709d5-47d4-46d7-9ece-5ca5336b1f54.dat'      -wao        > '/galaxy/server/database/objects/1/8/e/dataset_18ee290e-e5f7-429d-a5a3-2b12abe8c8ca.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wao\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "644102e3bee8eaa6", "src": "hda", "uuid": "c688c826-07b6-4028-b7ae-afddc8ae4940"}, "inputB": {"id": "ad141c400280054a", "src": "hda", "uuid": "0c0709d5-47d4-46d7-9ece-5ca5336b1f54"}}, "outputs": {"output": {"id": "3bf4286af4eb17e5", "src": "hda", "uuid": "18ee290e-e5f7-429d-a5a3-2b12abe8c8ca"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:54:45", "plugin": "core", "name": "end_epoch", "raw_value": "1685948085.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:54:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685948085.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-12", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 12, "time_seconds": 37.947364807128906, "inputs": {"inputA": {"src": "hda", "id": "644102e3bee8eaa6"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "ad141c400280054a"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "once": true}, "job": {"model_class": "Job", "id": "f97bdf0dbc0f3fc2", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:54:58.565650", "create_time": "2023-06-05T06:54:44.560988", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-pggmb", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/c/6/8/dataset_c688c826-07b6-4028-b7ae-afddc8ae4940.dat'  -b '/galaxy/server/database/objects/0/c/0/dataset_0c0709d5-47d4-46d7-9ece-5ca5336b1f54.dat'    -u          > '/galaxy/server/database/objects/8/7/5/dataset_87540921-b304-44f9-832b-a0f1587a698b.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "true", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "644102e3bee8eaa6", "src": "hda", "uuid": "c688c826-07b6-4028-b7ae-afddc8ae4940"}, "inputB": {"id": "ad141c400280054a", "src": "hda", "uuid": "0c0709d5-47d4-46d7-9ece-5ca5336b1f54"}}, "outputs": {"output": {"id": "d7d0af19d2f2d0f1", "src": "hda", "uuid": "87540921-b304-44f9-832b-a0f1587a698b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:54:49", "plugin": "core", "name": "end_epoch", "raw_value": "1685948089.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:54:49", "plugin": "core", "name": "start_epoch", "raw_value": "1685948089.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-13", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 13, "time_seconds": 37.773170709609985, "inputs": {"inputA": {"src": "hda", "id": "b51be06e4a3f899f"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "4e911223ff7a979e"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "count": true}, "job": {"model_class": "Job", "id": "bcdb0fdc889fcef8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:55:33.615373", "create_time": "2023-06-05T06:55:18.782629", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-hn55d", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/4/6/7/dataset_467444cf-a08b-4887-b0e6-52936ceff6b4.dat'  -b '/galaxy/server/database/objects/7/b/a/dataset_7ba7201c-32b2-434a-84b1-7135f39d2415.dat'             -c > '/galaxy/server/database/objects/f/a/0/dataset_fa0f28c3-6111-4058-96e7-4def94b0cf2b.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "true", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 349, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "b51be06e4a3f899f", "src": "hda", "uuid": "467444cf-a08b-4887-b0e6-52936ceff6b4"}, "inputB": {"id": "4e911223ff7a979e", "src": "hda", "uuid": "7ba7201c-32b2-434a-84b1-7135f39d2415"}}, "outputs": {"output": {"id": "3fbbce9468e1e406", "src": "hda", "uuid": "fa0f28c3-6111-4058-96e7-4def94b0cf2b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:55:23", "plugin": "core", "name": "end_epoch", "raw_value": "1685948123.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:55:23", "plugin": "core", "name": "start_epoch", "raw_value": "1685948123.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-14", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 14, "time_seconds": 37.80115270614624, "inputs": {"inputA": {"src": "hda", "id": "b51be06e4a3f899f"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "4e911223ff7a979e"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "invert": true}, "job": {"model_class": "Job", "id": "eea305ef33e8f959", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:55:36.828388", "create_time": "2023-06-05T06:55:23.480829", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-tvvth", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/4/6/7/dataset_467444cf-a08b-4887-b0e6-52936ceff6b4.dat'  -b '/galaxy/server/database/objects/7/b/a/dataset_7ba7201c-32b2-434a-84b1-7135f39d2415.dat'   -v           > '/galaxy/server/database/objects/3/0/f/dataset_30f45895-4464-472f-bdc9-66c716e3d959.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 349, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "b51be06e4a3f899f", "src": "hda", "uuid": "467444cf-a08b-4887-b0e6-52936ceff6b4"}, "inputB": {"id": "4e911223ff7a979e", "src": "hda", "uuid": "7ba7201c-32b2-434a-84b1-7135f39d2415"}}, "outputs": {"output": {"id": "32c49b9aa7c5edb3", "src": "hda", "uuid": "30f45895-4464-472f-bdc9-66c716e3d959"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:55:27", "plugin": "core", "name": "end_epoch", "raw_value": "1685948127.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:55:27", "plugin": "core", "name": "start_epoch", "raw_value": "1685948127.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-15", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 15, "time_seconds": 20.176496028900146, "inputs": {"inputA": {"src": "hda", "id": "9612f60c334f1af5"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "7a72dfed2f393ef2"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|fraction_select": "specify"}, "execution_problem": "parameter 'inputB': the previously selected dataset has entered an unusable state", "dynamic_param_error": false, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-16", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 16, "time_seconds": 18.144598484039307, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-17", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 17, "time_seconds": 35.0980122089386, "inputs": {"inputA": {"src": "hda", "id": "bd4b1145c759ff87"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "d4f855740ed9a868"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "ad1527f7f27c9513", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:56:29.247757", "create_time": "2023-06-05T06:56:15.683660", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-hvmz2", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/2/c/0/dataset_2c02329c-c3dc-42bc-8750-2b9fe2e22d6f.dat'  -b '/galaxy/server/database/objects/d/9/d/dataset_d9d55ead-7ff3-4966-8c70-8ef19cc57736.dat'   -f 0.5  -F 0.5     -wa -wb        > '/galaxy/server/database/objects/8/e/f/dataset_8ef3d0f8-c151-47d8-9ecc-cb91bf13a8b0.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 359, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "bd4b1145c759ff87", "src": "hda", "uuid": "2c02329c-c3dc-42bc-8750-2b9fe2e22d6f"}, "inputB": {"id": "d4f855740ed9a868", "src": "hda", "uuid": "d9d55ead-7ff3-4966-8c70-8ef19cc57736"}}, "outputs": {"output": {"id": "87305978d06dd507", "src": "hda", "uuid": "8ef3d0f8-c151-47d8-9ecc-cb91bf13a8b0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:56:20", "plugin": "core", "name": "end_epoch", "raw_value": "1685948180.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:56:20", "plugin": "core", "name": "start_epoch", "raw_value": "1685948180.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-18", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 18, "time_seconds": 37.06869149208069, "inputs": {"inputA": {"src": "hda", "id": "bd4b1145c759ff87"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "d4f855740ed9a868"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "0.5", "fraction_cond|reciprocal_cond|overlapB": "0.5", "fraction_cond|reciprocal_cond|disjoint": true, "fraction_cond|fraction_select": "specify"}, "job": {"model_class": "Job", "id": "68d2b4139686a956", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:56:32.227919", "create_time": "2023-06-05T06:56:18.466909", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-874ff", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/2/c/0/dataset_2c02329c-c3dc-42bc-8750-2b9fe2e22d6f.dat'  -b '/galaxy/server/database/objects/d/9/d/dataset_d9d55ead-7ff3-4966-8c70-8ef19cc57736.dat'   -f 0.5  -F 0.5 -e    -wa -wb        > '/galaxy/server/database/objects/1/2/c/dataset_12c83157-5e58-48bd-abda-2346e2e48bba.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"0.5\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": true, \"overlapB\": \"0.5\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 359, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "bd4b1145c759ff87", "src": "hda", "uuid": "2c02329c-c3dc-42bc-8750-2b9fe2e22d6f"}, "inputB": {"id": "d4f855740ed9a868", "src": "hda", "uuid": "d9d55ead-7ff3-4966-8c70-8ef19cc57736"}}, "outputs": {"output": {"id": "424c7eb756fafb2b", "src": "hda", "uuid": "12c83157-5e58-48bd-abda-2346e2e48bba"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:56:23", "plugin": "core", "name": "end_epoch", "raw_value": "1685948183.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:56:23", "plugin": "core", "name": "start_epoch", "raw_value": "1685948183.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-19", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 19, "time_seconds": 46.09508681297302, "inputs": {"inputA": {"src": "hda", "id": "6524f878b7cd627f"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "af877b13e0e9bf21"}, "overlap_mode": "-wa", "split": false}, "job": {"model_class": "Job", "id": "584b86c35d02db4f", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:57:15.171629", "create_time": "2023-06-05T06:56:48.779100", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-4ndqd", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/5/a/9/dataset_5a96b94a-0774-4f92-a513-6584050d0ecc.dat'  -b '/galaxy/server/database/objects/3/1/d/dataset_31d59314-9d5e-473c-a3c7-7dbcdaf08a82.dat'      -wa        > '/galaxy/server/database/objects/1/b/c/dataset_1bc26717-c2d8-4e69-8cbe-3c43857a52e7.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wa\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 367, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "6524f878b7cd627f", "src": "hda", "uuid": "5a96b94a-0774-4f92-a513-6584050d0ecc"}, "inputB": {"id": "af877b13e0e9bf21", "src": "hda", "uuid": "31d59314-9d5e-473c-a3c7-7dbcdaf08a82"}}, "outputs": {"output": {"id": "c95909eb41310662", "src": "hda", "uuid": "1bc26717-c2d8-4e69-8cbe-3c43857a52e7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:57:05", "plugin": "core", "name": "end_epoch", "raw_value": "1685948225.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:57:05", "plugin": "core", "name": "start_epoch", "raw_value": "1685948225.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 42.63709735870361, "inputs": {"inputA": {"src": "hda", "id": "f872c053e822a34e"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "de7330b56f6d9360"}, {"src": "hda", "id": "3c0d3f3099b76619"}, {"src": "hda", "id": "02cc6f7236d0fb64"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "6adbec0d9117d076", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:51:40.160054", "create_time": "2023-06-05T06:51:24.480819", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-2jh57", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/e/1/3/dataset_e131b00b-4622-4da8-97c3-0cb4e42ac678.dat'  -b '/galaxy/server/database/objects/9/e/1/dataset_9e13a162-9a80-49e0-9892-8f6287456fca.dat' '/galaxy/server/database/objects/e/4/f/dataset_e4f13b94-adb9-4c06-a6a5-edf9958a739c.dat' '/galaxy/server/database/objects/c/d/3/dataset_cd347293-6599-4268-a366-9ec0fe8d9baf.dat'       -wa -wb   -sorted     > '/galaxy/server/database/objects/a/5/7/dataset_a57b637c-a67f-463b-b3b7-1e06da851e8d.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 305, \"src\": \"hda\"}, {\"id\": 306, \"src\": \"hda\"}, {\"id\": 307, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "f872c053e822a34e", "src": "hda", "uuid": "e131b00b-4622-4da8-97c3-0cb4e42ac678"}, "inputB": {"id": "de7330b56f6d9360", "src": "hda", "uuid": "9e13a162-9a80-49e0-9892-8f6287456fca"}, "inputB1": {"id": "de7330b56f6d9360", "src": "hda", "uuid": "9e13a162-9a80-49e0-9892-8f6287456fca"}, "inputB2": {"id": "3c0d3f3099b76619", "src": "hda", "uuid": "e4f13b94-adb9-4c06-a6a5-edf9958a739c"}, "inputB3": {"id": "02cc6f7236d0fb64", "src": "hda", "uuid": "cd347293-6599-4268-a366-9ec0fe8d9baf"}}, "outputs": {"output": {"id": "1871f933dadf17fe", "src": "hda", "uuid": "a57b637c-a67f-463b-b3b7-1e06da851e8d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:51:30", "plugin": "core", "name": "end_epoch", "raw_value": "1685947890.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:51:30", "plugin": "core", "name": "start_epoch", "raw_value": "1685947890.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-20", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 20, "time_seconds": 13.628478050231934, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-21", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 21, "time_seconds": 25.414841651916504, "inputs": {"inputA": {"src": "hda", "id": "6524f878b7cd627f"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "af877b13e0e9bf21"}, "split": false, "invert": true}, "job": {"model_class": "Job", "id": "ced18eb97dfec752", "state": "error", "exit_code": null, "update_time": "2023-06-05T06:57:12.272486", "create_time": "2023-06-05T06:57:04.397066", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-82ml5", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/5/a/9/dataset_5a96b94a-0774-4f92-a513-6584050d0ecc.dat'  -b '/galaxy/server/database/objects/3/1/d/dataset_31d59314-9d5e-473c-a3c7-7dbcdaf08a82.dat'   -v           > '/galaxy/server/database/objects/4/3/b/dataset_43b8bd3d-c1e4-460f-b4b2-4924d2489bb6.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 367, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "6524f878b7cd627f", "src": "hda", "uuid": "5a96b94a-0774-4f92-a513-6584050d0ecc"}, "inputB": {"id": "af877b13e0e9bf21", "src": "hda", "uuid": "31d59314-9d5e-473c-a3c7-7dbcdaf08a82"}}, "outputs": {"output": {"id": "b989c187289ba170", "src": "hda", "uuid": "43b8bd3d-c1e4-460f-b4b2-4924d2489bb6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 50.406498670578, "inputs": {"inputA": {"src": "hda", "id": "eea305ef33e8f959"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "02231957bb74dee6"}, {"src": "hda", "id": "01b394d20fd7ea18"}, {"src": "hda", "id": "d611a5744068aa3b"}], "reduce_or_iterate|names": true, "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "sorted": true}, "job": {"model_class": "Job", "id": "af13faeecb73af77", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:52:26.424575", "create_time": "2023-06-05T06:52:04.300871", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-m92qh", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/4/1/9/dataset_419a97d6-5aac-4fee-9670-d000234a3a74.dat'  -b '/galaxy/server/database/objects/5/e/2/dataset_5e270320-e740-4385-a91f-e0bf1c2b6eb6.dat' '/galaxy/server/database/objects/1/7/1/dataset_17177567-e36b-404a-9fc2-4dccec972e3c.dat' '/galaxy/server/database/objects/c/d/e/dataset_cde30278-6b30-4f37-9557-5ba17a65ead1.dat'  -names 'intersect-d1_bed' 'intersect-d2_bed' 'intersect-d3_bed'      -wa -wb   -sorted     > '/galaxy/server/database/objects/6/d/6/dataset_6d6867b2-892d-44ee-9c6a-152e692bcc7d.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 315, \"src\": \"hda\"}, {\"id\": 316, \"src\": \"hda\"}, {\"id\": 317, \"src\": \"hda\"}]}, \"names\": true, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "eea305ef33e8f959", "src": "hda", "uuid": "419a97d6-5aac-4fee-9670-d000234a3a74"}, "inputB": {"id": "02231957bb74dee6", "src": "hda", "uuid": "5e270320-e740-4385-a91f-e0bf1c2b6eb6"}, "inputB1": {"id": "02231957bb74dee6", "src": "hda", "uuid": "5e270320-e740-4385-a91f-e0bf1c2b6eb6"}, "inputB2": {"id": "01b394d20fd7ea18", "src": "hda", "uuid": "17177567-e36b-404a-9fc2-4dccec972e3c"}, "inputB3": {"id": "d611a5744068aa3b", "src": "hda", "uuid": "cde30278-6b30-4f37-9557-5ba17a65ead1"}}, "outputs": {"output": {"id": "a619f14b96f4ad5c", "src": "hda", "uuid": "6d6867b2-892d-44ee-9c6a-152e692bcc7d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:52:17", "plugin": "core", "name": "end_epoch", "raw_value": "1685947937.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:52:17", "plugin": "core", "name": "start_epoch", "raw_value": "1685947937.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 48.87617874145508, "inputs": {"inputA": {"src": "hda", "id": "eea305ef33e8f959"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "02231957bb74dee6"}, {"src": "hda", "id": "01b394d20fd7ea18"}, {"src": "hda", "id": "d611a5744068aa3b"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "invert": true, "sorted": true}, "job": {"model_class": "Job", "id": "514acbec0fef4878", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:52:29.457426", "create_time": "2023-06-05T06:52:16.116414", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-nsb85", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/4/1/9/dataset_419a97d6-5aac-4fee-9670-d000234a3a74.dat'  -b '/galaxy/server/database/objects/5/e/2/dataset_5e270320-e740-4385-a91f-e0bf1c2b6eb6.dat' '/galaxy/server/database/objects/1/7/1/dataset_17177567-e36b-404a-9fc2-4dccec972e3c.dat' '/galaxy/server/database/objects/c/d/e/dataset_cde30278-6b30-4f37-9557-5ba17a65ead1.dat'    -v      -sorted     > '/galaxy/server/database/objects/a/1/f/dataset_a1f84729-928a-4a71-820c-d70a4a91d399.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "true", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": null, "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 315, \"src\": \"hda\"}, {\"id\": 316, \"src\": \"hda\"}, {\"id\": 317, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "eea305ef33e8f959", "src": "hda", "uuid": "419a97d6-5aac-4fee-9670-d000234a3a74"}, "inputB": {"id": "02231957bb74dee6", "src": "hda", "uuid": "5e270320-e740-4385-a91f-e0bf1c2b6eb6"}, "inputB1": {"id": "02231957bb74dee6", "src": "hda", "uuid": "5e270320-e740-4385-a91f-e0bf1c2b6eb6"}, "inputB2": {"id": "01b394d20fd7ea18", "src": "hda", "uuid": "17177567-e36b-404a-9fc2-4dccec972e3c"}, "inputB3": {"id": "d611a5744068aa3b", "src": "hda", "uuid": "cde30278-6b30-4f37-9557-5ba17a65ead1"}}, "outputs": {"output": {"id": "3acc9cf2b34f14b6", "src": "hda", "uuid": "a1f84729-928a-4a71-820c-d70a4a91d399"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:52:20", "plugin": "core", "name": "end_epoch", "raw_value": "1685947940.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:52:20", "plugin": "core", "name": "start_epoch", "raw_value": "1685947940.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 5, "time_seconds": 36.833953619003296, "inputs": {"inputA": {"src": "hda", "id": "da22d14ccf6be107"}, "reduce_or_iterate|inputB": [{"src": "hda", "id": "cbfc6def9707f89e"}, {"src": "hda", "id": "188a77ce45e49245"}, {"src": "hda", "id": "ad1527f7f27c9513"}], "reduce_or_iterate|reduce_or_iterate_selector": "reduce", "overlap_mode": ["-wa", "-wb"], "fraction_cond|overlap": "1.0", "fraction_cond|fraction_select": "specify", "sorted": true}, "job": {"model_class": "Job", "id": "661e438f075a94c4", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:53:03.641583", "create_time": "2023-06-05T06:52:52.026094", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-gt2xn", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/0/8/8/dataset_088b4c99-0a0e-4699-a739-725fa71de232.dat'  -b '/galaxy/server/database/objects/9/0/c/dataset_90ca2f90-32e7-491d-a569-40042bfb400b.dat' '/galaxy/server/database/objects/8/9/c/dataset_89c7ab36-f516-4dae-b1f3-da1c770388a7.dat' '/galaxy/server/database/objects/d/5/8/dataset_d584a4ab-54c2-4985-831d-c1c152dc4390.dat'    -f 1.0      -wa -wb   -sorted     > '/galaxy/server/database/objects/4/5/d/dataset_45dc270b-f60f-4a52-86ed-3880237cd454.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "true", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 1, \"fraction_select\": \"specify\", \"overlap\": \"1.0\", \"reciprocal_cond\": {\"__current_case__\": 1, \"disjoint\": false, \"overlapB\": \"\", \"reciprocal\": \"\"}}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 1, \"inputB\": {\"values\": [{\"id\": 321, \"src\": \"hda\"}, {\"id\": 322, \"src\": \"hda\"}, {\"id\": 323, \"src\": \"hda\"}]}, \"names\": false, \"reduce_or_iterate_selector\": \"reduce\"}"}, "inputs": {"inputA": {"id": "da22d14ccf6be107", "src": "hda", "uuid": "088b4c99-0a0e-4699-a739-725fa71de232"}, "inputB": {"id": "cbfc6def9707f89e", "src": "hda", "uuid": "90ca2f90-32e7-491d-a569-40042bfb400b"}, "inputB1": {"id": "cbfc6def9707f89e", "src": "hda", "uuid": "90ca2f90-32e7-491d-a569-40042bfb400b"}, "inputB2": {"id": "188a77ce45e49245", "src": "hda", "uuid": "89c7ab36-f516-4dae-b1f3-da1c770388a7"}, "inputB3": {"id": "ad1527f7f27c9513", "src": "hda", "uuid": "d584a4ab-54c2-4985-831d-c1c152dc4390"}}, "outputs": {"output": {"id": "fc2d4ded2c45c157", "src": "hda", "uuid": "45dc270b-f60f-4a52-86ed-3880237cd454"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:52:54", "plugin": "core", "name": "end_epoch", "raw_value": "1685947974.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:52:54", "plugin": "core", "name": "start_epoch", "raw_value": "1685947974.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 6, "time_seconds": 41.08674097061157, "inputs": {"inputA": {"src": "hda", "id": "68d2b4139686a956"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "a1be396eae3954f8"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wa"}, "job": {"model_class": "Job", "id": "688c01050db3095d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:53:10.718385", "create_time": "2023-06-05T06:52:59.342072", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-wtn66", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/4/e/2/dataset_4e2655e1-13ca-416e-a2a7-dba1f486a78b.dat'  -b '/galaxy/server/database/objects/6/2/3/dataset_62348d42-6849-401c-8567-e8bdddbdc57d.dat'      -wa        > '/galaxy/server/database/objects/1/8/0/dataset_1806b18c-a685-458b-a1bf-bcff5cdb8971.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wa\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 325, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "68d2b4139686a956", "src": "hda", "uuid": "4e2655e1-13ca-416e-a2a7-dba1f486a78b"}, "inputB": {"id": "a1be396eae3954f8", "src": "hda", "uuid": "62348d42-6849-401c-8567-e8bdddbdc57d"}}, "outputs": {"output": {"id": "8d2c7afd94b629a4", "src": "hda", "uuid": "1806b18c-a685-458b-a1bf-bcff5cdb8971"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:53:01", "plugin": "core", "name": "end_epoch", "raw_value": "1685947981.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:53:01", "plugin": "core", "name": "start_epoch", "raw_value": "1685947981.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 7, "time_seconds": 38.202962160110474, "inputs": {"inputA": {"src": "hda", "id": "f42e5b0d7d4ae6ef"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "584b86c35d02db4f"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-wb"}, "job": {"model_class": "Job", "id": "2103ac3a748d7506", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:53:42.148163", "create_time": "2023-06-05T06:53:23.736613", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-t78zp", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/5/f/9/dataset_5f97ab51-2524-4702-b851-96bc3a941060.dat'  -b '/galaxy/server/database/objects/8/8/4/dataset_884bdcbe-cbb7-405a-a182-1ff5b0d5c269.dat'      -wb        > '/galaxy/server/database/objects/9/f/7/dataset_9f7acc45-469b-4dfb-859f-ba49099f61be.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-wb\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 331, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "f42e5b0d7d4ae6ef", "src": "hda", "uuid": "5f97ab51-2524-4702-b851-96bc3a941060"}, "inputB": {"id": "584b86c35d02db4f", "src": "hda", "uuid": "884bdcbe-cbb7-405a-a182-1ff5b0d5c269"}}, "outputs": {"output": {"id": "ced18eb97dfec752", "src": "hda", "uuid": "9f7acc45-469b-4dfb-859f-ba49099f61be"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:53:32", "plugin": "core", "name": "end_epoch", "raw_value": "1685948012.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:53:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685948012.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-8", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 8, "time_seconds": 34.41352343559265, "inputs": {"inputA": {"src": "hda", "id": "f42e5b0d7d4ae6ef"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "584b86c35d02db4f"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": ["-wa", "-wb"]}, "job": {"model_class": "Job", "id": "d429703810b7b566", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:53:45.316036", "create_time": "2023-06-05T06:53:31.034286", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-dp7hr", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/5/f/9/dataset_5f97ab51-2524-4702-b851-96bc3a941060.dat'  -b '/galaxy/server/database/objects/8/8/4/dataset_884bdcbe-cbb7-405a-a182-1ff5b0d5c269.dat'      -wa -wb        > '/galaxy/server/database/objects/4/6/7/dataset_46758ab9-adf3-46a0-b251-981c8abe3749.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "[\"-wa\", \"-wb\"]", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 331, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "f42e5b0d7d4ae6ef", "src": "hda", "uuid": "5f97ab51-2524-4702-b851-96bc3a941060"}, "inputB": {"id": "584b86c35d02db4f", "src": "hda", "uuid": "884bdcbe-cbb7-405a-a182-1ff5b0d5c269"}}, "outputs": {"output": {"id": "26644e73eeca6e66", "src": "hda", "uuid": "46758ab9-adf3-46a0-b251-981c8abe3749"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:53:35", "plugin": "core", "name": "end_epoch", "raw_value": "1685948015.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:53:35", "plugin": "core", "name": "start_epoch", "raw_value": "1685948015.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0-9", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed", "tool_version": "2.30.0", "test_index": 9, "time_seconds": 35.76899170875549, "inputs": {"inputA": {"src": "hda", "id": "a060687d5045fe30"}, "reduce_or_iterate|inputB": {"src": "hda", "id": "05dde19e1d20c4db"}, "reduce_or_iterate|reduce_or_iterate_selector": "iterate", "overlap_mode": "-loj"}, "job": {"model_class": "Job", "id": "2070d1f52257bf37", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:54:17.891720", "create_time": "2023-06-05T06:53:59.976573", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_intersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-gljbp", "command_line": "bedtools intersect -a '/galaxy/server/database/objects/7/4/0/dataset_740ea1c8-5a25-4ef7-a496-c2e3a5ca2083.dat'  -b '/galaxy/server/database/objects/8/9/f/dataset_89ff9c0c-c6ce-4a81-8f68-8d13408623c3.dat'      -loj        > '/galaxy/server/database/objects/2/c/c/dataset_2cc41e42-da7d-45a8-afb5-84e392cf53a2.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "sorted": "false", "bed": "false", "count": "false", "once": "false", "invert": "false", "fraction_cond": "{\"__current_case__\": 0, \"fraction_select\": \"default\"}", "split": "false", "overlap_mode": "\"-loj\"", "strand": "\"\"", "reduce_or_iterate": "{\"__current_case__\": 0, \"inputB\": {\"values\": [{\"id\": 337, \"src\": \"hda\"}]}, \"reduce_or_iterate_selector\": \"iterate\"}"}, "inputs": {"inputA": {"id": "a060687d5045fe30", "src": "hda", "uuid": "740ea1c8-5a25-4ef7-a496-c2e3a5ca2083"}, "inputB": {"id": "05dde19e1d20c4db", "src": "hda", "uuid": "89ff9c0c-c6ce-4a81-8f68-8d13408623c3"}}, "outputs": {"output": {"id": "8efbf207b4bfa4d8", "src": "hda", "uuid": "2cc41e42-da7d-45a8-afb5-84e392cf53a2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:54:09", "plugin": "core", "name": "end_epoch", "raw_value": "1685948049.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:54:09", "plugin": "core", "name": "start_epoch", "raw_value": "1685948049.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 32.96797323226929, "inputs": {"inputA": {"src": "hda", "id": "7872d8e18a929a42"}, "inputB": {"src": "hda", "id": "6c92181f3193c6a2"}}, "job": {"model_class": "Job", "id": "f7f4b275129047ff", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:44:36.549574", "create_time": "2023-06-05T06:44:25.102073", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-plkgs", "command_line": "bedtools jaccard      -a '/galaxy/server/database/objects/b/4/8/dataset_b481297c-a58e-4068-8ef9-ef32bb3a26e7.dat' -b '/galaxy/server/database/objects/5/0/b/dataset_50b452e8-10c4-49f0-9452-0ab7568a5e37.dat' > '/galaxy/server/database/objects/6/d/b/dataset_6db62756-5e79-481b-a30b-a4b6ebabacbc.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "\"\"", "reciprocal": "\"\"", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "7872d8e18a929a42", "src": "hda", "uuid": "b481297c-a58e-4068-8ef9-ef32bb3a26e7"}, "inputB": {"id": "6c92181f3193c6a2", "src": "hda", "uuid": "50b452e8-10c4-49f0-9452-0ab7568a5e37"}}, "outputs": {"output": {"id": "7685bb1072749492", "src": "hda", "uuid": "6db62756-5e79-481b-a30b-a4b6ebabacbc"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:44:26", "plugin": "core", "name": "end_epoch", "raw_value": "1685947466.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:44:26", "plugin": "core", "name": "start_epoch", "raw_value": "1685947466.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 30.458627700805664, "inputs": {"inputA": {"src": "hda", "id": "553e998b5eb10e9f"}, "inputB": {"src": "hda", "id": "3a5885178bbc4bea"}, "overlap": "0.1"}, "job": {"model_class": "Job", "id": "078b8309e597435a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:44:54.313024", "create_time": "2023-06-05T06:44:43.311600", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_jaccard/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-fb7qf", "command_line": "bedtools jaccard     -f 0.1  -a '/galaxy/server/database/objects/7/e/4/dataset_7e4bfcca-dcf5-4ba2-9ff4-77b80d0e0ec1.dat' -b '/galaxy/server/database/objects/c/4/a/dataset_c4a3aa22-3dc4-4021-a907-a74f2ee9ec7a.dat' > '/galaxy/server/database/objects/7/3/5/dataset_735efa9c-67d7-45c6-9992-e3c5d419a4ea.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "split": "false", "strand": "\"\"", "reciprocal": "\"\"", "overlapB": "\"\"", "overlap": "\"0.1\""}, "inputs": {"inputA": {"id": "553e998b5eb10e9f", "src": "hda", "uuid": "7e4bfcca-dcf5-4ba2-9ff4-77b80d0e0ec1"}, "inputB": {"id": "3a5885178bbc4bea", "src": "hda", "uuid": "c4a3aa22-3dc4-4021-a907-a74f2ee9ec7a"}}, "outputs": {"output": {"id": "ff71fd00445839ed", "src": "hda", "uuid": "735efa9c-67d7-45c6-9992-e3c5d419a4ea"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:44:45", "plugin": "core", "name": "end_epoch", "raw_value": "1685947485.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:44:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685947485.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 28.20295238494873, "inputs": {"input": {"src": "hda", "id": "999c7324a26bcbff"}, "basename": "http://genome.ucsc.edu", "org": "", "db": ""}, "job": {"model_class": "Job", "id": "c103b69b8672fcbb", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:42:11.789295", "create_time": "2023-06-05T06:42:00.152262", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-vk8hs", "command_line": "bedtools links -base 'http://genome.ucsc.edu' -org '' -db '' -i '/galaxy/server/database/objects/5/3/9/dataset_539a3447-73dd-40d9-825d-8a6d6004697a.dat' > '/galaxy/server/database/objects/a/f/0/dataset_af07f6c0-4200-4bd2-ad77-bfb1a5a5102f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "db": "\"\"", "org": "\"\"", "basename": "\"http://genome.ucsc.edu\""}, "inputs": {"input": {"id": "999c7324a26bcbff", "src": "hda", "uuid": "539a3447-73dd-40d9-825d-8a6d6004697a"}}, "outputs": {"output": {"id": "0cf4a4c1e6acdef2", "src": "hda", "uuid": "af07f6c0-4200-4bd2-ad77-bfb1a5a5102f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:42:02", "plugin": "core", "name": "end_epoch", "raw_value": "1685947322.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:42:02", "plugin": "core", "name": "start_epoch", "raw_value": "1685947322.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 30.365846395492554, "inputs": {"input": {"src": "hda", "id": "999c7324a26bcbff"}, "basename": "http://genome.ucsc.edu", "org": "mouse", "db": "mm9"}, "job": {"model_class": "Job", "id": "aa3c526bcc4d7750", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:42:13.796913", "create_time": "2023-06-05T06:42:01.079936", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_links/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-8kvbh", "command_line": "bedtools links -base 'http://genome.ucsc.edu' -org 'mouse' -db 'mm9' -i '/galaxy/server/database/objects/5/3/9/dataset_539a3447-73dd-40d9-825d-8a6d6004697a.dat' > '/galaxy/server/database/objects/4/2/3/dataset_423770c7-3883-499e-8bcc-451725c1c996.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "db": "\"mm9\"", "org": "\"mouse\"", "basename": "\"http://genome.ucsc.edu\""}, "inputs": {"input": {"id": "999c7324a26bcbff", "src": "hda", "uuid": "539a3447-73dd-40d9-825d-8a6d6004697a"}}, "outputs": {"output": {"id": "65e2a939a702b1c6", "src": "hda", "uuid": "423770c7-3883-499e-8bcc-451725c1c996"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:42:03", "plugin": "core", "name": "end_epoch", "raw_value": "1685947323.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:42:03", "plugin": "core", "name": "start_epoch", "raw_value": "1685947323.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 33.20296597480774, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "35324759b5f101b2"}, "type|genome_file_opts|genome_file_opts_selector": "hist", "type|type_select": "genome", "action|windowsize": "1000000", "action|action_select": "windowsize"}, "job": {"model_class": "Job", "id": "75d30c2538647c2d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:36:26.380816", "create_time": "2023-06-05T06:36:13.938096", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-z2hp2", "command_line": "bedtools makewindows  -g '/galaxy/server/database/objects/4/8/9/dataset_489f06d6-1fd6-4f39-8452-53301b049788.dat'  -w 1000000  > '/galaxy/server/database/objects/3/3/1/dataset_331fb211-43d0-4cd2-ab63-c8194e0efb20.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sourcename": "\"\"", "action": "{\"__current_case__\": 0, \"action_select\": \"windowsize\", \"step_size\": {\"__current_case__\": 1, \"step_size_select\": \"no\"}, \"windowsize\": \"1000000\"}", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}"}, "inputs": {"type|genome": {"id": "35324759b5f101b2", "src": "hda", "uuid": "489f06d6-1fd6-4f39-8452-53301b049788"}}, "outputs": {"output": {"id": "32e04e2e907aae8e", "src": "hda", "uuid": "331fb211-43d0-4cd2-ab63-c8194e0efb20"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:36:17", "plugin": "core", "name": "end_epoch", "raw_value": "1685946977.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:36:17", "plugin": "core", "name": "start_epoch", "raw_value": "1685946977.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 29.72810959815979, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "e39435d71d973529"}, "type|genome_file_opts|genome_file_opts_selector": "hist", "type|type_select": "genome", "action|windowsize": "1000000", "action|step_size|step_size": "50000", "action|step_size|step_size_select": "yes", "action|action_select": "windowsize"}, "job": {"model_class": "Job", "id": "ac09b69d4d4cc070", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:36:56.108645", "create_time": "2023-06-05T06:36:44.079312", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-vjgjj", "command_line": "bedtools makewindows  -g '/galaxy/server/database/objects/0/6/5/dataset_0655acdc-8bd9-456e-b5be-09cca0172de1.dat'  -w 1000000 -s 50000  > '/galaxy/server/database/objects/f/5/d/dataset_f5d66b8c-7e4e-4336-866b-62d42d66319d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sourcename": "\"\"", "action": "{\"__current_case__\": 0, \"action_select\": \"windowsize\", \"step_size\": {\"__current_case__\": 0, \"step_size\": \"50000\", \"step_size_select\": \"yes\"}, \"windowsize\": \"1000000\"}", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}"}, "inputs": {"type|genome": {"id": "e39435d71d973529", "src": "hda", "uuid": "0655acdc-8bd9-456e-b5be-09cca0172de1"}}, "outputs": {"output": {"id": "3f64cd49ad0eac6a", "src": "hda", "uuid": "f5d66b8c-7e4e-4336-866b-62d42d66319d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:36:45", "plugin": "core", "name": "end_epoch", "raw_value": "1685947005.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:36:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685947005.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 29.58770442008972, "inputs": {"type|genome_file_opts|genome": {"src": "hda", "id": "e39435d71d973529"}, "type|genome_file_opts|genome_file_opts_selector": "hist", "type|type_select": "genome", "action|number": "100", "action|action_select": "number"}, "job": {"model_class": "Job", "id": "1c09be6ab473a6db", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:36:56.150620", "create_time": "2023-06-05T06:36:44.693262", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-k7p57", "command_line": "bedtools makewindows  -g '/galaxy/server/database/objects/0/6/5/dataset_0655acdc-8bd9-456e-b5be-09cca0172de1.dat'  -n 100  > '/galaxy/server/database/objects/6/e/6/dataset_6e663e7d-7e6b-42af-86a4-fc18669b0c1b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sourcename": "\"\"", "action": "{\"__current_case__\": 1, \"action_select\": \"number\", \"number\": \"100\"}", "type": "{\"__current_case__\": 1, \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}, \"type_select\": \"genome\"}"}, "inputs": {"type|genome": {"id": "e39435d71d973529", "src": "hda", "uuid": "0655acdc-8bd9-456e-b5be-09cca0172de1"}}, "outputs": {"output": {"id": "d8842e62d7a55f73", "src": "hda", "uuid": "6e663e7d-7e6b-42af-86a4-fc18669b0c1b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "WARNING: Interval :0-0 is smaller than the number of windows requested. Skipping.\n", "job_stdout": "", "job_stderr": "", "stderr": "WARNING: Interval :0-0 is smaller than the number of windows requested. Skipping.\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:36:47", "plugin": "core", "name": "end_epoch", "raw_value": "1685947007.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:36:47", "plugin": "core", "name": "start_epoch", "raw_value": "1685947007.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 29.503549337387085, "inputs": {"type|input": {"src": "hda", "id": "acb203f3998ec978"}, "type|type_select": "bed", "action|number": "15", "action|action_select": "number"}, "job": {"model_class": "Job", "id": "3acd8ac1e2a5e4d4", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:37:25.769980", "create_time": "2023-06-05T06:37:15.634608", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_makewindowsbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-zm4k6", "command_line": "bedtools makewindows -b '/galaxy/server/database/objects/d/b/e/dataset_dbef1939-5077-4fd9-8ee2-be56a4faaf40.dat' -n 15  > '/galaxy/server/database/objects/d/c/6/dataset_dc69b4eb-7e54-472c-a668-cf9b04433739.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sourcename": "\"\"", "action": "{\"__current_case__\": 1, \"action_select\": \"number\", \"number\": \"15\"}", "type": "{\"__current_case__\": 0, \"input\": {\"values\": [{\"id\": 158, \"src\": \"hda\"}]}, \"type_select\": \"bed\"}"}, "inputs": {"input": {"id": "acb203f3998ec978", "src": "hda", "uuid": "dbef1939-5077-4fd9-8ee2-be56a4faaf40"}}, "outputs": {"output": {"id": "d1cbe52692a16691", "src": "hda", "uuid": "dc69b4eb-7e54-472c-a668-cf9b04433739"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:37:17", "plugin": "core", "name": "end_epoch", "raw_value": "1685947037.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:37:17", "plugin": "core", "name": "start_epoch", "raw_value": "1685947037.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 0, "time_seconds": 36.30381774902344, "inputs": {"inputA": {"src": "hda", "id": "514acbec0fef4878"}, "inputB": {"src": "hda", "id": "7c224925e285a700"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "mean"}, "job": {"model_class": "Job", "id": "60885a659d2052cf", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:49:35.358737", "create_time": "2023-06-05T06:49:23.314983", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-hrqgx", "command_line": "bedtools map -a '/galaxy/server/database/objects/8/9/d/dataset_89d9b391-a1ae-4631-9a72-70371ea7cd4d.dat' -b '/galaxy/server/database/objects/a/9/0/dataset_a90fdced-345d-444a-8a67-dfae23c9e885.dat'   -c 5 -o mean         > '/galaxy/server/database/objects/d/2/9/dataset_d29a57b9-79af-4e32-be91-848db5370a2e.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"mean\"}]", "strand": "\"\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "514acbec0fef4878", "src": "hda", "uuid": "89d9b391-a1ae-4631-9a72-70371ea7cd4d"}, "inputB": {"id": "7c224925e285a700", "src": "hda", "uuid": "a90fdced-345d-444a-8a67-dfae23c9e885"}}, "outputs": {"output": {"id": "c2f854c3ea850a7e", "src": "hda", "uuid": "d29a57b9-79af-4e32-be91-848db5370a2e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:49:26", "plugin": "core", "name": "end_epoch", "raw_value": "1685947766.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:49:26", "plugin": "core", "name": "start_epoch", "raw_value": "1685947766.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 1, "time_seconds": 9.366093635559082, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 2, "time_seconds": 21.497843027114868, "inputs": {"inputA": {"src": "hda", "id": "688c01050db3095d"}, "inputB": {"src": "hda", "id": "26286f79b8ae037d"}, "strand": "-S", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "execution_problem": "parameter 'col': an invalid option ('5') was selected (valid options: 3,1,2)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 3, "time_seconds": 40.05487036705017, "inputs": {"inputA": {"src": "hda", "id": "688c01050db3095d"}, "inputB": {"src": "hda", "id": "26286f79b8ae037d"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "job": {"model_class": "Job", "id": "1398cd17bcd7b2e9", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:50:22.026031", "create_time": "2023-06-05T06:50:06.218179", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ktmcw", "command_line": "bedtools map -a '/galaxy/server/database/objects/f/3/4/dataset_f341a361-ffae-479f-b778-d8e5d1536d46.dat' -b '/galaxy/server/database/objects/2/1/d/dataset_21d008e7-d635-4429-8682-8556e3c8fedc.dat' -s  -c 5 -o collapse         > '/galaxy/server/database/objects/0/6/8/dataset_0681ab33-f475-4b70-8a7e-b4e03d6cfb55.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "688c01050db3095d", "src": "hda", "uuid": "f341a361-ffae-479f-b778-d8e5d1536d46"}, "inputB": {"id": "26286f79b8ae037d", "src": "hda", "uuid": "21d008e7-d635-4429-8682-8556e3c8fedc"}}, "outputs": {"output": {"id": "2103ac3a748d7506", "src": "hda", "uuid": "0681ab33-f475-4b70-8a7e-b4e03d6cfb55"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:50:11", "plugin": "core", "name": "end_epoch", "raw_value": "1685947811.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:50:11", "plugin": "core", "name": "start_epoch", "raw_value": "1685947811.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.2", "test_index": 4, "time_seconds": 34.71467995643616, "inputs": {"inputA": {"src": "hda", "id": "175254385a60534c"}, "inputB": {"src": "hda", "id": "aff0ac01ffee389b"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "genome|genome_file_opts|genome": {"src": "hda", "id": "9b04361bd619e131"}, "genome|genome_file_opts|genome_file_opts_selector": "hist", "genome|genome_choose": "-g"}, "job": {"model_class": "Job", "id": "a127ae8903f41dd6", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:50:31.735301", "create_time": "2023-06-05T06:50:21.159919", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-hqlc9", "command_line": "bedtools map -a '/galaxy/server/database/objects/0/d/4/dataset_0d413f56-78ce-402d-89b4-8deb40961866.dat' -b '/galaxy/server/database/objects/5/b/e/dataset_5bef983f-b26d-4075-9c73-51c65895fe00.dat' -s  -c 5 -o collapse        -g '/galaxy/server/database/objects/f/0/e/dataset_f0e1d5aa-469d-4129-aabc-ac6ca4fecdfe.dat'  > '/galaxy/server/database/objects/9/0/0/dataset_90057735-b41b-4a90-a2d4-1f4c661f682d.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 0, \"genome_choose\": \"-g\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 294, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "175254385a60534c", "src": "hda", "uuid": "0d413f56-78ce-402d-89b4-8deb40961866"}, "inputB": {"id": "aff0ac01ffee389b", "src": "hda", "uuid": "5bef983f-b26d-4075-9c73-51c65895fe00"}, "genome|genome": {"id": "9b04361bd619e131", "src": "hda", "uuid": "f0e1d5aa-469d-4129-aabc-ac6ca4fecdfe"}}, "outputs": {"output": {"id": "d429703810b7b566", "src": "hda", "uuid": "90057735-b41b-4a90-a2d4-1f4c661f682d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:50:22", "plugin": "core", "name": "end_epoch", "raw_value": "1685947822.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:50:22", "plugin": "core", "name": "start_epoch", "raw_value": "1685947822.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 0, "time_seconds": 31.31064486503601, "inputs": {"inputA": {"src": "hda", "id": "5de589ed6827db78"}, "inputB": {"src": "hda", "id": "bc64733f6a6e0e88"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "mean"}, "job": {"model_class": "Job", "id": "b0b756da183dc853", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:02:16.052085", "create_time": "2023-06-05T07:02:05.314077", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6vjv7", "command_line": "bedtools map -a '/galaxy/server/database/objects/a/0/d/dataset_a0dd1615-aad4-4cf4-85ce-c80023053b96.dat' -b '/galaxy/server/database/objects/9/b/c/dataset_9bcb6c29-8334-4b6a-b80f-94017384d4a6.dat'   -c 5 -o mean         > '/galaxy/server/database/objects/3/f/c/dataset_3fcbd7c4-d9a4-4a71-9b88-07c77990aea6.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"mean\"}]", "strand": "\"\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "5de589ed6827db78", "src": "hda", "uuid": "a0dd1615-aad4-4cf4-85ce-c80023053b96"}, "inputB": {"id": "bc64733f6a6e0e88", "src": "hda", "uuid": "9bcb6c29-8334-4b6a-b80f-94017384d4a6"}}, "outputs": {"output": {"id": "8f4f11ee8c131d08", "src": "hda", "uuid": "3fcbd7c4-d9a4-4a71-9b88-07c77990aea6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:02:07", "plugin": "core", "name": "end_epoch", "raw_value": "1685948527.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:02:07", "plugin": "core", "name": "start_epoch", "raw_value": "1685948527.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 1, "time_seconds": 16.84170150756836, "inputs": {"inputA": {"src": "hda", "id": "e1aa9e8d8a6fc162"}, "inputB": {"src": "hda", "id": "738f216fa651aed6"}, "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "execution_problem": "parameter 'col': an invalid option ('5') was selected (valid options: 3,1,2)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 2, "time_seconds": 20.78097915649414, "inputs": {"inputA": {"src": "hda", "id": "5d50c3cbf2952e29"}, "inputB": {"src": "hda", "id": "d933ebed2c87320b"}, "strand": "-S", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "execution_problem": "parameter 'col': an invalid option ('5') was selected (valid options: 3,1,2)", "dynamic_param_error": true, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 3, "time_seconds": 36.44647455215454, "inputs": {"inputA": {"src": "hda", "id": "5d50c3cbf2952e29"}, "inputB": {"src": "hda", "id": "d933ebed2c87320b"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse"}, "job": {"model_class": "Job", "id": "6d76120189930849", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:03:05.477828", "create_time": "2023-06-05T07:02:48.315454", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-qrnzg", "command_line": "bedtools map -a '/galaxy/server/database/objects/e/1/e/dataset_e1ee64cb-3170-4cbd-bc59-e199fab1e320.dat' -b '/galaxy/server/database/objects/c/6/f/dataset_c6fbf1f7-8a5c-4fec-af15-a139dcba53c9.dat' -s  -c 5 -o collapse         > '/galaxy/server/database/objects/8/c/0/dataset_8c053733-19b1-4026-a429-50ca50014b2f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": null, \"genome_file_opts_selector\": \"loc\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "5d50c3cbf2952e29", "src": "hda", "uuid": "e1ee64cb-3170-4cbd-bc59-e199fab1e320"}, "inputB": {"id": "d933ebed2c87320b", "src": "hda", "uuid": "c6fbf1f7-8a5c-4fec-af15-a139dcba53c9"}}, "outputs": {"output": {"id": "d9ffeb08d0419c00", "src": "hda", "uuid": "8c053733-19b1-4026-a429-50ca50014b2f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:02:53", "plugin": "core", "name": "end_epoch", "raw_value": "1685948573.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:02:53", "plugin": "core", "name": "start_epoch", "raw_value": "1685948573.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 4, "time_seconds": 39.133156061172485, "inputs": {"inputA": {"src": "hda", "id": "52270c1b5bcf6dc4"}, "inputB": {"src": "hda", "id": "e7f09f78d17af43b"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "genome_file_opts|genome": {"src": "hda", "id": "001eebd83954a651"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "6802a3f959ffafe2", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:03:16.147348", "create_time": "2023-06-05T07:03:04.225957", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-rmwfz", "command_line": "bedtools map -a '/galaxy/server/database/objects/d/b/3/dataset_db37eff3-0d69-4161-a765-74445d6a622c.dat' -b '/galaxy/server/database/objects/a/0/2/dataset_a02023ea-f591-4769-9915-de80eb5612bb.dat' -s  -c 5 -o collapse        -g '/galaxy/server/database/objects/a/0/0/dataset_a006e36b-7988-498b-a4dd-d2770ab0ef65.dat'  > '/galaxy/server/database/objects/7/3/9/dataset_739c62aa-d8f1-470e-bff1-ce3e7c155d50.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 430, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "52270c1b5bcf6dc4", "src": "hda", "uuid": "db37eff3-0d69-4161-a765-74445d6a622c"}, "inputB": {"id": "e7f09f78d17af43b", "src": "hda", "uuid": "a02023ea-f591-4769-9915-de80eb5612bb"}, "genome": {"id": "001eebd83954a651", "src": "hda", "uuid": "a006e36b-7988-498b-a4dd-d2770ab0ef65"}}, "outputs": {"output": {"id": "a568bab6589b7d29", "src": "hda", "uuid": "739c62aa-d8f1-470e-bff1-ce3e7c155d50"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:03:06", "plugin": "core", "name": "end_epoch", "raw_value": "1685948586.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:03:05", "plugin": "core", "name": "start_epoch", "raw_value": "1685948585.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map", "tool_version": "2.30.0.3", "test_index": 5, "time_seconds": 33.88428497314453, "inputs": {"inputA": {"src": "hda", "id": "fa12cc36998cda18"}, "inputB": {"src": "hda", "id": "93e687379cfb4126"}, "strand": "-s", "c_and_o_argument_repeat_0|col": "5", "c_and_o_argument_repeat_0|operation": "collapse", "genome_file_opts|genome": "mm9", "genome_file_opts|genome_file_opts_selector": "loc"}, "job": {"model_class": "Job", "id": "40ed93243575bd4a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:03:39.549917", "create_time": "2023-06-05T07:03:25.274086", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_map/2.30.0.3", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-mw77l", "command_line": "bedtools map -a '/galaxy/server/database/objects/8/b/a/dataset_8bad5cd4-28b0-4168-8a18-fa0656329afe.dat' -b '/galaxy/server/database/objects/8/2/7/dataset_827f5d4f-3983-40e5-80eb-b59353aaa18f.dat' -s  -c 5 -o collapse        -g '/cvmfs/data.galaxyproject.org/managed/len/ucsc/mm9.len'  > '/galaxy/server/database/objects/c/e/7/dataset_ce7350c0-cb74-4400-adef-a67b5de83291.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": \"mm9\", \"genome_file_opts_selector\": \"loc\"}", "header": "false", "split": "false", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"5\", \"operation\": \"collapse\"}]", "strand": "\"-s\"", "reciprocal": "false", "overlapB": "\"\"", "overlap": "\"\""}, "inputs": {"inputA": {"id": "fa12cc36998cda18", "src": "hda", "uuid": "8bad5cd4-28b0-4168-8a18-fa0656329afe"}, "inputB": {"id": "93e687379cfb4126", "src": "hda", "uuid": "827f5d4f-3983-40e5-80eb-b59353aaa18f"}}, "outputs": {"output": {"id": "d2759da9bd35634c", "src": "hda", "uuid": "ce7350c0-cb74-4400-adef-a67b5de83291"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:03:30", "plugin": "core", "name": "end_epoch", "raw_value": "1685948610.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:03:29", "plugin": "core", "name": "start_epoch", "raw_value": "1685948609.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 34.05782079696655, "inputs": {"input": {"src": "hda", "id": "f86cae4116bfc763"}, "fasta": {"src": "hda", "id": "f34586527a1b60c4"}, "soft": false}, "job": {"model_class": "Job", "id": "05dde19e1d20c4db", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:57:45.863024", "create_time": "2023-06-05T06:57:31.713552", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-m2559", "command_line": "bedtools maskfasta  -mc 'N' -fi '/galaxy/server/database/objects/7/7/3/dataset_7737bca9-cafa-4038-afac-4206ebe401fe.dat' -bed '/galaxy/server/database/objects/2/6/0/dataset_26054a90-dc1c-464f-88cc-cd71df23672b.dat' -fo '/galaxy/server/database/objects/f/4/2/dataset_f425084f-de81-411b-bf33-60dfd69ea730.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fullheader": "false", "mc": "\"N\"", "soft": "false"}, "inputs": {"input": {"id": "f86cae4116bfc763", "src": "hda", "uuid": "26054a90-dc1c-464f-88cc-cd71df23672b"}, "fasta": {"id": "f34586527a1b60c4", "src": "hda", "uuid": "7737bca9-cafa-4038-afac-4206ebe401fe"}}, "outputs": {"output": {"id": "fe2c02aa100b455b", "src": "hda", "uuid": "f425084f-de81-411b-bf33-60dfd69ea730"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:57:37", "plugin": "core", "name": "end_epoch", "raw_value": "1685948257.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:57:37", "plugin": "core", "name": "start_epoch", "raw_value": "1685948257.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 33.670692443847656, "inputs": {"input": {"src": "hda", "id": "f86cae4116bfc763"}, "fasta": {"src": "hda", "id": "f34586527a1b60c4"}, "soft": true}, "job": {"model_class": "Job", "id": "8efbf207b4bfa4d8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:57:48.991040", "create_time": "2023-06-05T06:57:36.777576", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-g57ms", "command_line": "bedtools maskfasta -soft -mc 'N' -fi '/galaxy/server/database/objects/7/7/3/dataset_7737bca9-cafa-4038-afac-4206ebe401fe.dat' -bed '/galaxy/server/database/objects/2/6/0/dataset_26054a90-dc1c-464f-88cc-cd71df23672b.dat' -fo '/galaxy/server/database/objects/9/f/a/dataset_9fa77587-7c17-4657-8264-7f445fae96cc.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fullheader": "false", "mc": "\"N\"", "soft": "true"}, "inputs": {"input": {"id": "f86cae4116bfc763", "src": "hda", "uuid": "26054a90-dc1c-464f-88cc-cd71df23672b"}, "fasta": {"id": "f34586527a1b60c4", "src": "hda", "uuid": "7737bca9-cafa-4038-afac-4206ebe401fe"}}, "outputs": {"output": {"id": "6cd09c5b2a50ed0c", "src": "hda", "uuid": "9fa77587-7c17-4657-8264-7f445fae96cc"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:57:39", "plugin": "core", "name": "end_epoch", "raw_value": "1685948259.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:57:39", "plugin": "core", "name": "start_epoch", "raw_value": "1685948259.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 32.99780988693237, "inputs": {"input": {"src": "hda", "id": "71da663bb0944102"}, "fasta": {"src": "hda", "id": "c89074844faecbf4"}, "soft": true, "fullheader": true}, "job": {"model_class": "Job", "id": "ad141c400280054a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:58:19.149929", "create_time": "2023-06-05T06:58:07.008785", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_maskfastabed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7pqsl", "command_line": "bedtools maskfasta -soft -mc 'N' -fi '/galaxy/server/database/objects/e/2/4/dataset_e2430bb5-f5c6-4dca-bb10-24bab3bfcb4e.dat' -bed '/galaxy/server/database/objects/d/1/d/dataset_d1d7cbad-b3eb-4e7e-876c-f3300f70c1a0.dat' -fo '/galaxy/server/database/objects/6/2/e/dataset_62ecb877-8fcc-4965-982c-7107bb3c286b.dat' -fullHeader", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fullheader": "true", "mc": "\"N\"", "soft": "true"}, "inputs": {"input": {"id": "71da663bb0944102", "src": "hda", "uuid": "d1d7cbad-b3eb-4e7e-876c-f3300f70c1a0"}, "fasta": {"id": "c89074844faecbf4", "src": "hda", "uuid": "e2430bb5-f5c6-4dca-bb10-24bab3bfcb4e"}}, "outputs": {"output": {"id": "5333f0bfe2a40feb", "src": "hda", "uuid": "62ecb877-8fcc-4965-982c-7107bb3c286b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:58:09", "plugin": "core", "name": "end_epoch", "raw_value": "1685948289.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:58:09", "plugin": "core", "name": "start_epoch", "raw_value": "1685948289.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 30.348724126815796, "inputs": {"input": {"src": "hda", "id": "c826403e07515b60"}}, "job": {"model_class": "Job", "id": "71a3ca5efcd177ec", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:30:36.652097", "create_time": "2023-06-05T06:30:22.419892", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-n84h5", "command_line": "mergeBed -i '/galaxy/server/database/objects/3/2/4/dataset_32455609-ed9c-4535-8e5f-f7c2e2b25123.dat'  -d 0    > '/galaxy/server/database/objects/0/3/9/dataset_039d5e62-96f3-4b05-91cc-b1652496f9af.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"0\"", "strand": "\"\""}, "inputs": {"input": {"id": "c826403e07515b60", "src": "hda", "uuid": "32455609-ed9c-4535-8e5f-f7c2e2b25123"}}, "outputs": {"output": {"id": "ef758e7bef81b609", "src": "hda", "uuid": "039d5e62-96f3-4b05-91cc-b1652496f9af"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:30:27", "plugin": "core", "name": "end_epoch", "raw_value": "1685946627.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:30:27", "plugin": "core", "name": "start_epoch", "raw_value": "1685946627.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 21.736470937728882, "inputs": {"input": {"src": "hda", "id": "3b5c5ca2ef3b272a"}}, "job": {"model_class": "Job", "id": "ad39a9c794df934b", "state": "error", "exit_code": null, "update_time": "2023-06-05T06:30:40.794895", "create_time": "2023-06-05T06:30:35.266679", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-dbcff", "command_line": "mergeBed -i '/galaxy/server/database/objects/c/7/3/dataset_c73c1358-4f52-4243-8a21-b0a07a656039.dat'  -d 0    > '/galaxy/server/database/objects/f/1/c/dataset_f1c67775-3289-422a-9d0e-ba23f67f9182.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"0\"", "strand": "\"\""}, "inputs": {"input": {"id": "3b5c5ca2ef3b272a", "src": "hda", "uuid": "c73c1358-4f52-4243-8a21-b0a07a656039"}}, "outputs": {"output": {"id": "fc496c463253513e", "src": "hda", "uuid": "f1c67775-3289-422a-9d0e-ba23f67f9182"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 28.761026859283447, "inputs": {"input": {"src": "hda", "id": "bd62b303a5398ade"}}, "job": {"model_class": "Job", "id": "b0907a04a55b163d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:31:05.826364", "create_time": "2023-06-05T06:30:53.706190", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-p8j68", "command_line": "mergeBed -i '/galaxy/server/database/objects/3/0/a/dataset_30a3f101-e60e-4e82-9824-4d37422cf392.dat'  -d 0    > '/galaxy/server/database/objects/4/f/c/dataset_4fc4e02e-1fd2-4b73-9c25-eeb4cda6c3c0.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"0\"", "strand": "\"\""}, "inputs": {"input": {"id": "bd62b303a5398ade", "src": "hda", "uuid": "30a3f101-e60e-4e82-9824-4d37422cf392"}}, "outputs": {"output": {"id": "ff923297c5ef594d", "src": "hda", "uuid": "4fc4e02e-1fd2-4b73-9c25-eeb4cda6c3c0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:30:56", "plugin": "core", "name": "end_epoch", "raw_value": "1685946656.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:30:55", "plugin": "core", "name": "start_epoch", "raw_value": "1685946655.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 28.35579490661621, "inputs": {"input": {"src": "hda", "id": "299cdac2bbb97595"}, "distance": "1000"}, "job": {"model_class": "Job", "id": "2d08f013cfb5496c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:31:08.808278", "create_time": "2023-06-05T06:30:56.732127", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-nmtmr", "command_line": "mergeBed -i '/galaxy/server/database/objects/4/b/f/dataset_4bf77f54-40aa-436a-9885-2a5d7d820a9e.dat'  -d 1000    > '/galaxy/server/database/objects/3/6/e/dataset_36eff73a-8f01-4ae2-8486-9272bf1901c7.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[]", "header": "false", "distance": "\"1000\"", "strand": "\"\""}, "inputs": {"input": {"id": "299cdac2bbb97595", "src": "hda", "uuid": "4bf77f54-40aa-436a-9885-2a5d7d820a9e"}}, "outputs": {"output": {"id": "b3157582f523ed01", "src": "hda", "uuid": "36eff73a-8f01-4ae2-8486-9272bf1901c7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:30:58", "plugin": "core", "name": "end_epoch", "raw_value": "1685946658.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:30:58", "plugin": "core", "name": "start_epoch", "raw_value": "1685946658.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed", "tool_version": "2.30.0", "test_index": 4, "time_seconds": 25.562545776367188, "inputs": {"input": {"src": "hda", "id": "d9d21003711e079d"}, "distance": "1000", "c_and_o_argument_repeat_0|col": "1", "c_and_o_argument_repeat_0|operation": "count"}, "job": {"model_class": "Job", "id": "4de468f269e5aafe", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:31:31.517908", "create_time": "2023-06-05T06:31:21.299979", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_mergebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-lgw88", "command_line": "mergeBed -i '/galaxy/server/database/objects/b/a/f/dataset_baf15985-b024-4e46-be6e-43aa621dc528.dat'  -d 1000   -c 1 -o count  > '/galaxy/server/database/objects/e/c/3/dataset_ec37222a-ebef-4e41-a3b0-aae2ca334954.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "c_and_o_argument_repeat": "[{\"__index__\": 0, \"col\": \"1\", \"operation\": \"count\"}]", "header": "false", "distance": "\"1000\"", "strand": "\"\""}, "inputs": {"input": {"id": "d9d21003711e079d", "src": "hda", "uuid": "baf15985-b024-4e46-be6e-43aa621dc528"}}, "outputs": {"output": {"id": "b0cc4ed2f62abb64", "src": "hda", "uuid": "ec37222a-ebef-4e41-a3b0-aae2ca334954"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:31:22", "plugin": "core", "name": "end_epoch", "raw_value": "1685946682.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:31:22", "plugin": "core", "name": "start_epoch", "raw_value": "1685946682.0000000"}, {"title": "Memory Allocated (MB)", "value": "16106", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "16106.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multicovtbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multicovtbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 35.43363976478577, "inputs": {"input": {"src": "hda", "id": "30826712256bebc2"}, "bams": [{"src": "hda", "id": "af13faeecb73af77"}, {"src": "hda", "id": "af13faeecb73af77"}], "split": false, "q": "1"}, "job": {"model_class": "Job", "id": "1239ffbac6e30da4", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:49:32.086532", "create_time": "2023-06-05T06:49:20.271220", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multicovtbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-cdhpq", "command_line": "ln -s -f '/galaxy/server/database/objects/7/4/9/dataset_74995923-dd63-4c7a-99a9-d9ae2227240f.dat' 0.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/6/6/0/metadata_660e2bb3-91d0-442a-b289-c14bd9d5a03d.dat' 0.bam.bai && ln -s -f '/galaxy/server/database/objects/7/4/9/dataset_74995923-dd63-4c7a-99a9-d9ae2227240f.dat' 1.bam && ln -s -f '/galaxy/server/database/objects/_metadata_files/6/6/0/metadata_660e2bb3-91d0-442a-b289-c14bd9d5a03d.dat' 1.bam.bai &&  bedtools multicov -bed '/galaxy/server/database/objects/7/9/0/dataset_790f4a31-99c2-42f4-8618-0d90993105f7.dat' -bams '0.bam' '1.bam'      -q 1    > '/galaxy/server/database/objects/0/5/5/dataset_055ce678-f011-4e9c-ac29-d7192db25433.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "proper": "false", "failed": "false", "duplicate": "false", "q": "\"1\"", "split": "false", "reciprocal": "\"\"", "overlap": "\"\"", "strand": "\"\""}, "inputs": {"input": {"id": "30826712256bebc2", "src": "hda", "uuid": "790f4a31-99c2-42f4-8618-0d90993105f7"}, "bams": {"id": "af13faeecb73af77", "src": "hda", "uuid": "74995923-dd63-4c7a-99a9-d9ae2227240f"}, "bams1": {"id": "af13faeecb73af77", "src": "hda", "uuid": "74995923-dd63-4c7a-99a9-d9ae2227240f"}, "bams2": {"id": "af13faeecb73af77", "src": "hda", "uuid": "74995923-dd63-4c7a-99a9-d9ae2227240f"}}, "outputs": {"output": {"id": "f0365267a253db09", "src": "hda", "uuid": "055ce678-f011-4e9c-ac29-d7192db25433"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:49:22", "plugin": "core", "name": "end_epoch", "raw_value": "1685947762.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:49:22", "plugin": "core", "name": "start_epoch", "raw_value": "1685947762.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 46.618298292160034, "inputs": {"tag|inputs": [{"src": "hda", "id": "0f2bd1171a5e88d1"}, {"src": "hda", "id": "26f549f19ac9ba36"}, {"src": "hda", "id": "432e8850a01ac218"}], "tag|tag_select": "tag", "empty|empty_selector": ""}, "job": {"model_class": "Job", "id": "999c7324a26bcbff", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:45:41.183775", "create_time": "2023-06-05T06:45:15.493537", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-2vgtc", "command_line": "bedtools multiinter   -filler 'N/A'     -i '/galaxy/server/database/objects/4/6/c/dataset_46c0f48c-a3a1-4a65-b829-0e466031439e.dat' '/galaxy/server/database/objects/1/8/e/dataset_18e9c9ff-1b4a-4a64-adef-63751b99e5d3.dat' '/galaxy/server/database/objects/1/8/d/dataset_18d0f6f7-dc35-49ca-9953-0e446cf1d263.dat' > '/galaxy/server/database/objects/a/0/c/dataset_a0cd11a7-89d8-4fc3-9b60-2d06747e79f4.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}", "cluster": "false", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 240, \"src\": \"hda\"}, {\"id\": 241, \"src\": \"hda\"}, {\"id\": 242, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "0f2bd1171a5e88d1", "src": "hda", "uuid": "46c0f48c-a3a1-4a65-b829-0e466031439e"}, "inputs1": {"id": "0f2bd1171a5e88d1", "src": "hda", "uuid": "46c0f48c-a3a1-4a65-b829-0e466031439e"}, "inputs2": {"id": "26f549f19ac9ba36", "src": "hda", "uuid": "18e9c9ff-1b4a-4a64-adef-63751b99e5d3"}, "inputs3": {"id": "432e8850a01ac218", "src": "hda", "uuid": "18d0f6f7-dc35-49ca-9953-0e446cf1d263"}}, "outputs": {"output": {"id": "6ac787ab97121ea0", "src": "hda", "uuid": "a0cd11a7-89d8-4fc3-9b60-2d06747e79f4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:45:31", "plugin": "core", "name": "end_epoch", "raw_value": "1685947531.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:45:31", "plugin": "core", "name": "start_epoch", "raw_value": "1685947531.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 32.47224426269531, "inputs": {"tag|inputs": [{"src": "hda", "id": "0f2bd1171a5e88d1"}, {"src": "hda", "id": "26f549f19ac9ba36"}, {"src": "hda", "id": "432e8850a01ac218"}], "tag|tag_select": "tag", "empty|empty_selector": "", "header": true}, "job": {"model_class": "Job", "id": "0cf4a4c1e6acdef2", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:45:41.141428", "create_time": "2023-06-05T06:45:29.986123", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-d6bvt", "command_line": "bedtools multiinter -header  -filler 'N/A'     -i '/galaxy/server/database/objects/4/6/c/dataset_46c0f48c-a3a1-4a65-b829-0e466031439e.dat' '/galaxy/server/database/objects/1/8/e/dataset_18e9c9ff-1b4a-4a64-adef-63751b99e5d3.dat' '/galaxy/server/database/objects/1/8/d/dataset_18d0f6f7-dc35-49ca-9953-0e446cf1d263.dat' > '/galaxy/server/database/objects/7/2/8/dataset_7287c36b-e2f8-4bad-8359-a1add105148a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "true", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}", "cluster": "false", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 240, \"src\": \"hda\"}, {\"id\": 241, \"src\": \"hda\"}, {\"id\": 242, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "0f2bd1171a5e88d1", "src": "hda", "uuid": "46c0f48c-a3a1-4a65-b829-0e466031439e"}, "inputs1": {"id": "0f2bd1171a5e88d1", "src": "hda", "uuid": "46c0f48c-a3a1-4a65-b829-0e466031439e"}, "inputs2": {"id": "26f549f19ac9ba36", "src": "hda", "uuid": "18e9c9ff-1b4a-4a64-adef-63751b99e5d3"}, "inputs3": {"id": "432e8850a01ac218", "src": "hda", "uuid": "18d0f6f7-dc35-49ca-9953-0e446cf1d263"}}, "outputs": {"output": {"id": "c7b1bfc115b356f4", "src": "hda", "uuid": "7287c36b-e2f8-4bad-8359-a1add105148a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:45:32", "plugin": "core", "name": "end_epoch", "raw_value": "1685947532.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:45:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685947532.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 41.86079168319702, "inputs": {"tag|inputs": [{"src": "hda", "id": "2ac786c8441261de"}, {"src": "hda", "id": "1239ffbac6e30da4"}, {"src": "hda", "id": "60885a659d2052cf"}], "tag|tag_select": "tag", "empty|genome_file_opts|genome": {"src": "hda", "id": "a30f246580d569c2"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty"}, "job": {"model_class": "Job", "id": "8581fb782fbc3175", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:46:23.030591", "create_time": "2023-06-05T06:46:11.922814", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_multiintersectbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-klnmk", "command_line": "bedtools multiinter   -filler 'N/A' -empty  -g '/galaxy/server/database/objects/e/2/0/dataset_e20ad0d8-1151-4fa4-ab37-6febd48e438d.dat'   -i '/galaxy/server/database/objects/d/b/7/dataset_db700455-f84b-4d05-ab18-0734d0c21263.dat' '/galaxy/server/database/objects/2/e/4/dataset_2e4ff316-a682-4a18-af53-0b3442edfd18.dat' '/galaxy/server/database/objects/4/1/2/dataset_41255823-818b-4952-8d60-d01e4d256d15.dat' > '/galaxy/server/database/objects/a/f/0/dataset_af093525-682c-4f42-af62-531ac851b938.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 249, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "cluster": "false", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 245, \"src\": \"hda\"}, {\"id\": 247, \"src\": \"hda\"}, {\"id\": 248, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "2ac786c8441261de", "src": "hda", "uuid": "db700455-f84b-4d05-ab18-0734d0c21263"}, "inputs1": {"id": "2ac786c8441261de", "src": "hda", "uuid": "db700455-f84b-4d05-ab18-0734d0c21263"}, "inputs2": {"id": "1239ffbac6e30da4", "src": "hda", "uuid": "2e4ff316-a682-4a18-af53-0b3442edfd18"}, "inputs3": {"id": "60885a659d2052cf", "src": "hda", "uuid": "41255823-818b-4952-8d60-d01e4d256d15"}, "empty|genome": {"id": "a30f246580d569c2", "src": "hda", "uuid": "e20ad0d8-1151-4fa4-ab37-6febd48e438d"}}, "outputs": {"output": {"id": "86b6d1a29371b1aa", "src": "hda", "uuid": "af093525-682c-4f42-af62-531ac851b938"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:46:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685947573.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:46:13", "plugin": "core", "name": "start_epoch", "raw_value": "1685947573.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 39.58919334411621, "inputs": {"input": {"src": "hda", "id": "523819df6367a0c4"}, "fasta": {"src": "hda", "id": "672e80f31d9cbe4b"}}, "job": {"model_class": "Job", "id": "932be22bceadffe5", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:32:11.105934", "create_time": "2023-06-05T06:31:48.985030", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-z5k5n", "command_line": "ln -s '/galaxy/server/database/objects/f/0/0/dataset_f00394da-b9eb-4695-89c2-cec55bd8c93a.dat' 'input.fasta' && bedtools nuc   -fi 'input.fasta' -bed '/galaxy/server/database/objects/2/7/5/dataset_275fb9be-38c4-4c2f-bde7-d75a5bc7e7a8.dat' > '/galaxy/server/database/objects/7/4/d/dataset_74d6262a-6eae-4148-ad21-da71e934f927.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "C": "false", "pattern": null, "seq": "false", "s": "false"}, "inputs": {"input": {"id": "523819df6367a0c4", "src": "hda", "uuid": "275fb9be-38c4-4c2f-bde7-d75a5bc7e7a8"}, "fasta": {"id": "672e80f31d9cbe4b", "src": "hda", "uuid": "f00394da-b9eb-4695-89c2-cec55bd8c93a"}}, "outputs": {"output": {"id": "44d87d412fe0928e", "src": "hda", "uuid": "74d6262a-6eae-4148-ad21-da71e934f927"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:32:01", "plugin": "core", "name": "end_epoch", "raw_value": "1685946721.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:32:01", "plugin": "core", "name": "start_epoch", "raw_value": "1685946721.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 32.08031177520752, "inputs": {"input": {"src": "hda", "id": "523819df6367a0c4"}, "fasta": {"src": "hda", "id": "672e80f31d9cbe4b"}, "seq": true}, "job": {"model_class": "Job", "id": "19390db43d1eab17", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:32:13.011853", "create_time": "2023-06-05T06:32:00.098117", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-r28c2", "command_line": "ln -s '/galaxy/server/database/objects/f/0/0/dataset_f00394da-b9eb-4695-89c2-cec55bd8c93a.dat' 'input.fasta' && bedtools nuc  -seq -fi 'input.fasta' -bed '/galaxy/server/database/objects/2/7/5/dataset_275fb9be-38c4-4c2f-bde7-d75a5bc7e7a8.dat' > '/galaxy/server/database/objects/8/0/0/dataset_8004cd5b-2318-4bd3-b4ae-363cacefc10f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "C": "false", "pattern": null, "seq": "true", "s": "false"}, "inputs": {"input": {"id": "523819df6367a0c4", "src": "hda", "uuid": "275fb9be-38c4-4c2f-bde7-d75a5bc7e7a8"}, "fasta": {"id": "672e80f31d9cbe4b", "src": "hda", "uuid": "f00394da-b9eb-4695-89c2-cec55bd8c93a"}}, "outputs": {"output": {"id": "600f08a9eb37914c", "src": "hda", "uuid": "8004cd5b-2318-4bd3-b4ae-363cacefc10f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file input.fasta.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stderr": "index file input.fasta.fai not found, generating...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:32:03", "plugin": "core", "name": "end_epoch", "raw_value": "1685946723.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:32:03", "plugin": "core", "name": "start_epoch", "raw_value": "1685946723.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_nucbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 9.32478141784668, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 31.659871339797974, "inputs": {"input": {"src": "hda", "id": "e643ae6704e73e5c"}, "cols": ["2", "3", "5", "6"]}, "job": {"model_class": "Job", "id": "3a0cc2a25e3fb4f4", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:45:08.320217", "create_time": "2023-06-05T06:44:53.789201", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_overlapbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-t4kpv", "command_line": "bedtools overlap -i '/galaxy/server/database/objects/6/2/4/dataset_6247e486-1eda-48da-bac8-3cba729edd42.dat' -cols 2,3,5,6 > '/galaxy/server/database/objects/b/e/2/dataset_be284ad6-840d-40fb-b901-251b57ef9c3d.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "cols": "[\"2\", \"3\", \"5\", \"6\"]"}, "inputs": {"input": {"id": "e643ae6704e73e5c", "src": "hda", "uuid": "6247e486-1eda-48da-bac8-3cba729edd42"}}, "outputs": {"output": {"id": "224141ea24b1cc1d", "src": "hda", "uuid": "be284ad6-840d-40fb-b901-251b57ef9c3d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:44:55", "plugin": "core", "name": "end_epoch", "raw_value": "1685947495.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:44:55", "plugin": "core", "name": "start_epoch", "raw_value": "1685947495.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 29.321597576141357, "inputs": {"genome_file_opts|genome": {"src": "hda", "id": "22eaa38bb848854b"}, "genome_file_opts|genome_file_opts_selector": "hist", "length": "5", "intervals": "3", "seed|seed_choose": "False"}, "job": {"model_class": "Job", "id": "3714368987c14601", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:10:55.699065", "create_time": "2023-06-05T07:10:42.339624", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-g4c8r", "command_line": "bedtools random  -g '/galaxy/server/database/objects/b/d/a/dataset_bda32e3d-8c75-4fe0-bc16-c608c636b865.dat'  -l 5 -n 3 > '/galaxy/server/database/objects/e/3/e/dataset_e3e9d209-6171-4736-a2a0-3a48e6caf329.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "seed": "{\"__current_case__\": 1, \"seed_choose\": \"False\"}", "intervals": "\"3\"", "length": "\"5\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 513, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "22eaa38bb848854b", "src": "hda", "uuid": "bda32e3d-8c75-4fe0-bc16-c608c636b865"}}, "outputs": {"output": {"id": "3f130e2c271601db", "src": "hda", "uuid": "e3e9d209-6171-4736-a2a0-3a48e6caf329"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:10:46", "plugin": "core", "name": "end_epoch", "raw_value": "1685949046.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:10:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685949045.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 36.57522487640381, "inputs": {"genome_file_opts|genome": {"src": "hda", "id": "406c413828fef553"}, "genome_file_opts|genome_file_opts_selector": "hist", "length": "5", "intervals": "3", "seed|seed_choose": "False"}, "job": {"model_class": "Job", "id": "426e6eadf2853d16", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:46:18.021365", "create_time": "2023-06-05T06:46:06.574363", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_randombed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-rclb5", "command_line": "bedtools random -g '/galaxy/server/database/objects/3/5/7/dataset_3578261b-708d-475c-a957-6d50efa74e6a.dat'  -l 5 -n 3 > '/galaxy/server/database/objects/1/8/1/dataset_18192430-136f-4dfe-8b9d-cc34888f19df.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "seed": "{\"__current_case__\": 1, \"seed_choose\": \"False\"}", "intervals": "\"3\"", "length": "\"5\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 246, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"genome": {"id": "406c413828fef553", "src": "hda", "uuid": "3578261b-708d-475c-a957-6d50efa74e6a"}}, "outputs": {"output": {"id": "b84ebd33cd1be2e1", "src": "hda", "uuid": "18192430-136f-4dfe-8b9d-cc34888f19df"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:46:08", "plugin": "core", "name": "end_epoch", "raw_value": "1685947568.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:46:08", "plugin": "core", "name": "start_epoch", "raw_value": "1685947568.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 29.992088556289673, "inputs": {"inputA": {"src": "hda", "id": "f2bff3e10749e680"}, "inputB": {"src": "hda", "id": "f2bff3e10749e680"}}, "job": {"model_class": "Job", "id": "30441aa2f1005660", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:46:47.829067", "create_time": "2023-06-05T06:46:36.834399", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_reldistbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-dqd5z", "command_line": "bedtools reldist -a '/galaxy/server/database/objects/b/a/6/dataset_ba6ec147-7822-45af-a038-53c0db0db0cc.dat' -b '/galaxy/server/database/objects/b/a/6/dataset_ba6ec147-7822-45af-a038-53c0db0db0cc.dat'  > '/galaxy/server/database/objects/2/4/0/dataset_240816ae-e79d-4cc4-92db-b221a9758db2.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "detail": "false"}, "inputs": {"inputA": {"id": "f2bff3e10749e680", "src": "hda", "uuid": "ba6ec147-7822-45af-a038-53c0db0db0cc"}, "inputB": {"id": "f2bff3e10749e680", "src": "hda", "uuid": "ba6ec147-7822-45af-a038-53c0db0db0cc"}}, "outputs": {"output": {"id": "07972ef7f4ba04c4", "src": "hda", "uuid": "240816ae-e79d-4cc4-92db-b221a9758db2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:46:38", "plugin": "core", "name": "end_epoch", "raw_value": "1685947598.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:46:38", "plugin": "core", "name": "start_epoch", "raw_value": "1685947598.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 20.327189922332764, "inputs": {"inputA": {"src": "hda", "id": "ac9b5478ef249b4a"}, "genome_file_opts|genome": {"src": "hda", "id": "8cd1980b3d1c3b1f"}, "genome_file_opts|genome_file_opts_selector": "hist", "chrom": false, "seed|seed": "1", "seed|seed_choose": "True"}, "execution_problem": "parameter 'genome': the previously selected dataset has entered an unusable state", "dynamic_param_error": false, "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 16.04257559776306, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 39.50937509536743, "inputs": {"inputA": {"src": "hda", "id": "b8dc79c90605ef1a"}, "genome_file_opts|genome": {"src": "hda", "id": "c1b3267bb144d95a"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed": "1", "seed|seed_choose": "True", "add_bed|excl": {"src": "hda", "id": "3bb1802cd5708910"}, "add_bed|add_bed_select": "not_be"}, "job": {"model_class": "Job", "id": "fe2c02aa100b455b", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:01:10.877668", "create_time": "2023-06-05T07:00:52.620180", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-9xdw2", "command_line": "bedtools shuffle  -g '/galaxy/server/database/objects/4/6/c/dataset_46c3b5fe-aa94-4bdf-8c10-c033fa6fa301.dat'  -i '/galaxy/server/database/objects/f/0/7/dataset_f072ada2-8002-4b29-bf8d-e6b86486e269.dat'  -seed 1 -excl /galaxy/server/database/objects/5/6/1/dataset_561363f0-fe8d-4eff-a58a-1cdd462bfec5.dat     -maxTries 1000 > '/galaxy/server/database/objects/c/5/8/dataset_c589aa04-40b4-456d-a4e7-577f20af2a4a.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 1, \"add_bed_select\": \"not_be\", \"excl\": {\"values\": [{\"id\": 408, \"src\": \"hda\"}]}, \"overlap\": \"\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 410, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "b8dc79c90605ef1a", "src": "hda", "uuid": "f072ada2-8002-4b29-bf8d-e6b86486e269"}, "genome": {"id": "c1b3267bb144d95a", "src": "hda", "uuid": "46c3b5fe-aa94-4bdf-8c10-c033fa6fa301"}, "excl": {"id": "3bb1802cd5708910", "src": "hda", "uuid": "561363f0-fe8d-4eff-a58a-1cdd462bfec5"}}, "outputs": {"output": {"id": "21cdb468c48bc428", "src": "hda", "uuid": "c589aa04-40b4-456d-a4e7-577f20af2a4a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:01:01", "plugin": "core", "name": "end_epoch", "raw_value": "1685948461.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:01:01", "plugin": "core", "name": "start_epoch", "raw_value": "1685948461.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0+galaxy1", "test_index": 3, "time_seconds": 38.41705775260925, "inputs": {"inputA": {"src": "hda", "id": "b8dc79c90605ef1a"}, "genome_file_opts|genome": {"src": "hda", "id": "c1b3267bb144d95a"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed": "3", "seed|seed_choose": "True", "allow_beyond": true}, "job": {"model_class": "Job", "id": "6cd09c5b2a50ed0c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:01:12.953078", "create_time": "2023-06-05T07:01:00.795061", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-fsqcx", "command_line": "bedtools shuffle  -g '/galaxy/server/database/objects/4/6/c/dataset_46c3b5fe-aa94-4bdf-8c10-c033fa6fa301.dat'  -i '/galaxy/server/database/objects/f/0/7/dataset_f072ada2-8002-4b29-bf8d-e6b86486e269.dat'  -seed 3    -allowBeyondChromEnd -maxTries 1000 > '/galaxy/server/database/objects/b/2/6/dataset_b265f4d4-094d-404c-a37b-e7ba70ac2388.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "true", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"3\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 410, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "b8dc79c90605ef1a", "src": "hda", "uuid": "f072ada2-8002-4b29-bf8d-e6b86486e269"}, "genome": {"id": "c1b3267bb144d95a", "src": "hda", "uuid": "46c3b5fe-aa94-4bdf-8c10-c033fa6fa301"}}, "outputs": {"output": {"id": "77851a41e0148fda", "src": "hda", "uuid": "b265f4d4-094d-404c-a37b-e7ba70ac2388"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:01:03", "plugin": "core", "name": "end_epoch", "raw_value": "1685948463.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:01:03", "plugin": "core", "name": "start_epoch", "raw_value": "1685948463.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 29.76781129837036, "inputs": {"inputA": {"src": "hda", "id": "6fc640d67094aabd"}, "genome_file_opts|genome": {"src": "hda", "id": "f71745e20df593ea"}, "genome_file_opts|genome_file_opts_selector": "hist", "chrom": false, "seed|seed": "1", "seed|seed_choose": "True"}, "job": {"model_class": "Job", "id": "ae05b9136b28b28b", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:46:52.973433", "create_time": "2023-06-05T06:46:41.788208", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ns46n", "command_line": "bedtools shuffle -g '/galaxy/server/database/objects/1/a/b/dataset_1ab9b9f2-8da5-42c1-9bdf-95a699fd13ca.dat'  -i '/galaxy/server/database/objects/8/0/4/dataset_80466bab-a4e7-4e79-a2e7-b4fb34e6e5ef.dat'  -seed 1     -maxTries 1000 > '/galaxy/server/database/objects/4/8/b/dataset_48b29968-2c0d-478f-b155-62a9b807b207.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 254, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "6fc640d67094aabd", "src": "hda", "uuid": "80466bab-a4e7-4e79-a2e7-b4fb34e6e5ef"}, "genome": {"id": "f71745e20df593ea", "src": "hda", "uuid": "1ab9b9f2-8da5-42c1-9bdf-95a699fd13ca"}}, "outputs": {"output": {"id": "c99a90e227ca7d73", "src": "hda", "uuid": "48b29968-2c0d-478f-b155-62a9b807b207"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:46:43", "plugin": "core", "name": "end_epoch", "raw_value": "1685947603.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:46:43", "plugin": "core", "name": "start_epoch", "raw_value": "1685947603.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 37.51429271697998, "inputs": {"inputA": {"src": "hda", "id": "a127ae8903f41dd6"}, "genome_file_opts|genome": {"src": "hda", "id": "54005d381a7ff7d1"}, "genome_file_opts|genome_file_opts_selector": "hist", "chrom": true, "seed|seed": "1", "seed|seed_choose": "True"}, "job": {"model_class": "Job", "id": "f4704898eb3699f5", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:47:25.760351", "create_time": "2023-06-05T06:47:08.127476", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6phrj", "command_line": "bedtools shuffle -g '/galaxy/server/database/objects/2/b/7/dataset_2b7bc539-3c00-48ac-ad9e-540010736098.dat'  -i '/galaxy/server/database/objects/7/e/8/dataset_7e89eaa2-7d33-4d6e-85c7-118649bbb095.dat'  -seed 1 -chrom    -maxTries 1000 > '/galaxy/server/database/objects/5/0/7/dataset_5077e474-0735-41e2-af22-adf4fbcaf1a6.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "false", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"1\", \"seed_choose\": \"True\"}", "chrom": "true", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 260, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "a127ae8903f41dd6", "src": "hda", "uuid": "7e89eaa2-7d33-4d6e-85c7-118649bbb095"}, "genome": {"id": "54005d381a7ff7d1", "src": "hda", "uuid": "2b7bc539-3c00-48ac-ad9e-540010736098"}}, "outputs": {"output": {"id": "5d6baf4d65fb0a18", "src": "hda", "uuid": "5077e474-0735-41e2-af22-adf4fbcaf1a6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:47:15", "plugin": "core", "name": "end_epoch", "raw_value": "1685947635.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:47:15", "plugin": "core", "name": "start_epoch", "raw_value": "1685947635.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 20.449328899383545, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 29.510323762893677, "inputs": {"inputA": {"src": "hda", "id": "f2d19bedd6cfac11"}, "genome_file_opts|genome": {"src": "hda", "id": "afce58a340fc87fd"}, "genome_file_opts|genome_file_opts_selector": "hist", "seed|seed": "3", "seed|seed_choose": "True", "allow_beyond": true}, "job": {"model_class": "Job", "id": "6c92181f3193c6a2", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:47:43.337779", "create_time": "2023-06-05T06:47:31.910778", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_shufflebed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-v95pt", "command_line": "bedtools shuffle -g '/galaxy/server/database/objects/9/b/c/dataset_9bc032c0-968b-4e96-b139-5d1a42414066.dat'  -i '/galaxy/server/database/objects/7/6/1/dataset_76194ed5-4455-4f04-9c10-1ec2c7eb3e12.dat'  -seed 3    -allowBeyondChromEnd -maxTries 1000 > '/galaxy/server/database/objects/3/f/7/dataset_3f7d3ad8-0f7f-43d0-a2da-38b5f499e754.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "allow_beyond": "true", "no_overlap": "false", "maxtries": "\"1000\"", "chromfirst": "false", "add_bed": "{\"__current_case__\": 0, \"add_bed_select\": \"no\"}", "seed": "{\"__current_case__\": 0, \"seed\": \"3\", \"seed_choose\": \"True\"}", "chrom": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 264, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "bedpe": "false"}, "inputs": {"inputA": {"id": "f2d19bedd6cfac11", "src": "hda", "uuid": "76194ed5-4455-4f04-9c10-1ec2c7eb3e12"}, "genome": {"id": "afce58a340fc87fd", "src": "hda", "uuid": "9bc032c0-968b-4e96-b139-5d1a42414066"}}, "outputs": {"output": {"id": "5aa91b0091299f57", "src": "hda", "uuid": "3f7d3ad8-0f7f-43d0-a2da-38b5f499e754"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:47:33", "plugin": "core", "name": "end_epoch", "raw_value": "1685947653.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:47:33", "plugin": "core", "name": "start_epoch", "raw_value": "1685947653.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 37.55007457733154, "inputs": {"inputA": {"src": "hda", "id": "2c8c28eebd80e4ce"}, "genome_file_opts|genome": {"src": "hda", "id": "3a9b2edc0fbf67c7"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|b": "5", "addition|addition_select": "b"}, "job": {"model_class": "Job", "id": "889b88e30d08d1a2", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:10:25.676344", "create_time": "2023-06-05T07:10:11.162726", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-xcwzt", "command_line": "bedtools slop    -g '/galaxy/server/database/objects/9/1/4/dataset_91406b67-5ff6-4145-97da-fb3a6799b15c.dat'  -i '/galaxy/server/database/objects/3/e/1/dataset_3e1eaea9-d5b0-4ded-95d0-3175a7aba7bf.dat' -b 5  > '/galaxy/server/database/objects/9/c/9/dataset_9c97cc23-93af-4a28-8f8d-0cf0bf6d7bf9.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "addition": "{\"__current_case__\": 0, \"addition_select\": \"b\", \"b\": \"5\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 508, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "2c8c28eebd80e4ce", "src": "hda", "uuid": "3e1eaea9-d5b0-4ded-95d0-3175a7aba7bf"}, "genome": {"id": "3a9b2edc0fbf67c7", "src": "hda", "uuid": "91406b67-5ff6-4145-97da-fb3a6799b15c"}}, "outputs": {"output": {"id": "1608280806f77fe1", "src": "hda", "uuid": "9c97cc23-93af-4a28-8f8d-0cf0bf6d7bf9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:10:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685949013.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:10:13", "plugin": "core", "name": "start_epoch", "raw_value": "1685949013.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 43.06760859489441, "inputs": {"inputA": {"src": "hda", "id": "89db68e9b569b234"}, "genome_file_opts|genome": {"src": "hda", "id": "22eaa38bb848854b"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|l": "2", "addition|r": "3", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "22233fe738750800", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:10:54.738888", "create_time": "2023-06-05T07:10:30.294775", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-85xq5", "command_line": "bedtools slop    -g '/galaxy/server/database/objects/b/d/a/dataset_bda32e3d-8c75-4fe0-bc16-c608c636b865.dat'  -i '/galaxy/server/database/objects/c/c/2/dataset_cc22b191-42ad-48ba-9aa6-802972821b3b.dat' -l 2 -r 3  > '/galaxy/server/database/objects/9/4/f/dataset_94f620d8-1aa8-4153-8da2-f9a1a23e53b7.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 513, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "89db68e9b569b234", "src": "hda", "uuid": "cc22b191-42ad-48ba-9aa6-802972821b3b"}, "genome": {"id": "22eaa38bb848854b", "src": "hda", "uuid": "bda32e3d-8c75-4fe0-bc16-c608c636b865"}}, "outputs": {"output": {"id": "01701a901c468158", "src": "hda", "uuid": "94f620d8-1aa8-4153-8da2-f9a1a23e53b7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:10:44", "plugin": "core", "name": "end_epoch", "raw_value": "1685949044.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:10:44", "plugin": "core", "name": "start_epoch", "raw_value": "1685949044.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 12.754882097244263, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 39.82978701591492, "inputs": {"inputA": {"src": "hda", "id": "9eed05a5a3451196"}, "genome_file_opts|genome": {"src": "hda", "id": "35324759b5f101b2"}, "genome_file_opts|genome_file_opts_selector": "hist", "addition|l": "2", "addition|r": "3", "addition|addition_select": "lr"}, "job": {"model_class": "Job", "id": "1434e13c539c4063", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:36:26.260981", "create_time": "2023-06-05T06:36:07.283196", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_slopbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ncxk8", "command_line": "bedtools slop   -g '/galaxy/server/database/objects/4/8/9/dataset_489f06d6-1fd6-4f39-8452-53301b049788.dat'  -i '/galaxy/server/database/objects/3/d/7/dataset_3d7b9a7d-8491-4f18-bcad-99f8f41b1781.dat' -l 2 -r 3  > '/galaxy/server/database/objects/4/a/7/dataset_4a70c19d-592b-4b73-90db-218a3fc9d6bf.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "addition": "{\"__current_case__\": 1, \"addition_select\": \"lr\", \"l\": \"2\", \"r\": \"3\"}", "strand": "false", "pct": "false", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}"}, "inputs": {"inputA": {"id": "9eed05a5a3451196", "src": "hda", "uuid": "3d7b9a7d-8491-4f18-bcad-99f8f41b1781"}, "genome": {"id": "35324759b5f101b2", "src": "hda", "uuid": "489f06d6-1fd6-4f39-8452-53301b049788"}}, "outputs": {"output": {"id": "5c1b0fb2fbab670b", "src": "hda", "uuid": "4a70c19d-592b-4b73-90db-218a3fc9d6bf"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:36:16", "plugin": "core", "name": "end_epoch", "raw_value": "1685946976.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:36:16", "plugin": "core", "name": "start_epoch", "raw_value": "1685946976.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0+galaxy1", "test_index": 0, "time_seconds": 10.606726884841919, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0+galaxy1", "test_index": 1, "time_seconds": 32.16607618331909, "inputs": {"input": {"src": "hda", "id": "5f17e8815e3a015c"}, "option": ""}, "job": {"model_class": "Job", "id": "654b721b692f0aa8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:14:25.712502", "create_time": "2023-06-05T07:14:10.966461", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-h7vjl", "command_line": "sortBed -i '/galaxy/server/database/objects/f/5/d/dataset_f5d01ccd-b158-4d20-9fa0-1119bfe3716b.dat'   -g '/cvmfs/data.galaxyproject.org/managed/len/hg19_rCRS_pUC18_phiX174.len'  > '/galaxy/server/database/objects/b/d/1/dataset_bd1e3fe9-027c-4e5f-9f32-3479c718f6ef.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 0, \"genome\": \"hg19_rCRS_pUC18_phiX174\", \"genome_file_opts_selector\": \"loc\"}", "option": "\"\""}, "inputs": {"input": {"id": "5f17e8815e3a015c", "src": "hda", "uuid": "f5d01ccd-b158-4d20-9fa0-1119bfe3716b"}}, "outputs": {"output": {"id": "f1ce96c859159419", "src": "hda", "uuid": "bd1e3fe9-027c-4e5f-9f32-3479c718f6ef"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:14:16", "plugin": "core", "name": "end_epoch", "raw_value": "1685949256.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:14:16", "plugin": "core", "name": "start_epoch", "raw_value": "1685949256.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0+galaxy1", "test_index": 2, "time_seconds": 31.826326608657837, "inputs": {"input": {"src": "hda", "id": "5f17e8815e3a015c"}, "option": "", "genome_file_opts|genome": {"src": "hda", "id": "5bbdb3f74b4362fc"}, "genome_file_opts|genome_file_opts_selector": "hist"}, "job": {"model_class": "Job", "id": "22eaa38bb848854b", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:14:27.707312", "create_time": "2023-06-05T07:14:16.745303", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ct78r", "command_line": "sortBed -i '/galaxy/server/database/objects/f/5/d/dataset_f5d01ccd-b158-4d20-9fa0-1119bfe3716b.dat'   -g '/galaxy/server/database/objects/a/a/3/dataset_aa34be95-4f8e-4691-ac48-43348c5dc9b8.dat'  > '/galaxy/server/database/objects/b/8/d/dataset_b8d6b6c1-1363-4cc9-9060-318516093ca5.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome_file_opts": "{\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 548, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}", "option": "\"\""}, "inputs": {"genome": {"id": "5bbdb3f74b4362fc", "src": "hda", "uuid": "aa34be95-4f8e-4691-ac48-43348c5dc9b8"}, "input": {"id": "5f17e8815e3a015c", "src": "hda", "uuid": "f5d01ccd-b158-4d20-9fa0-1119bfe3716b"}}, "outputs": {"output": {"id": "4b240ef8d1a1e8c0", "src": "hda", "uuid": "b8d6b6c1-1363-4cc9-9060-318516093ca5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:14:18", "plugin": "core", "name": "end_epoch", "raw_value": "1685949258.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:14:18", "plugin": "core", "name": "start_epoch", "raw_value": "1685949258.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 27.864447832107544, "inputs": {"input": {"src": "hda", "id": "cdcca44111a39874"}, "option": ""}, "job": {"model_class": "Job", "id": "9c5a325298cebb62", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:42:39.741938", "create_time": "2023-06-05T06:42:28.034648", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-qrf6v", "command_line": "sortBed -i '/galaxy/server/database/objects/a/5/1/dataset_a51ee9ac-17db-4dc4-9701-ae6252cdd672.dat'    > '/galaxy/server/database/objects/a/e/7/dataset_ae782093-973d-40e3-8c9b-6ee66beb8532.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "option": "\"\""}, "inputs": {"input": {"id": "cdcca44111a39874", "src": "hda", "uuid": "a51ee9ac-17db-4dc4-9701-ae6252cdd672"}}, "outputs": {"output": {"id": "9d20d8dce83fadbd", "src": "hda", "uuid": "ae782093-973d-40e3-8c9b-6ee66beb8532"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:42:30", "plugin": "core", "name": "end_epoch", "raw_value": "1685947350.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:42:30", "plugin": "core", "name": "start_epoch", "raw_value": "1685947350.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 27.86940598487854, "inputs": {"input": {"src": "hda", "id": "33ca93c184fd1082"}, "option": ""}, "job": {"model_class": "Job", "id": "d120df3db0a7a283", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:42:41.710256", "create_time": "2023-06-05T06:42:30.792293", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-tr8r5", "command_line": "sortBed -i '/galaxy/server/database/objects/6/3/e/dataset_63e69e8c-2de8-4433-afa4-c2a4efb0a5a6.dat'    > '/galaxy/server/database/objects/2/a/f/dataset_2af98590-1557-48ee-a7dc-31077b7eaa33.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 1, \"genome_choose\": \"\"}", "option": "\"\""}, "inputs": {"input": {"id": "33ca93c184fd1082", "src": "hda", "uuid": "63e69e8c-2de8-4433-afa4-c2a4efb0a5a6"}}, "outputs": {"output": {"id": "ccc78c21fa912a28", "src": "hda", "uuid": "2af98590-1557-48ee-a7dc-31077b7eaa33"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:42:32", "plugin": "core", "name": "end_epoch", "raw_value": "1685947352.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:42:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685947352.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 32.31031799316406, "inputs": {"input": {"src": "hda", "id": "426e6eadf2853d16"}, "option": "", "genome|genome_file_opts|genome": {"src": "hda", "id": "8581fb782fbc3175"}, "genome|genome_file_opts|genome_file_opts_selector": "hist", "genome|genome_choose": "-g"}, "job": {"model_class": "Job", "id": "2eb846066267ae96", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:43:12.112279", "create_time": "2023-06-05T06:43:00.147863", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_sortbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-fbrvq", "command_line": "sortBed -i '/galaxy/server/database/objects/f/3/6/dataset_f36a6600-3e58-4d43-8f92-36e2ebcd6855.dat'   -g '/galaxy/server/database/objects/9/5/a/dataset_95a6b848-2311-4435-b9f9-d8fd4720e9ff.dat'  > '/galaxy/server/database/objects/9/a/e/dataset_9ae10eba-de11-41bc-8687-f35df2910c25.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "genome": "{\"__current_case__\": 0, \"genome_choose\": \"-g\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 214, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "option": "\"\""}, "inputs": {"input": {"id": "426e6eadf2853d16", "src": "hda", "uuid": "f36a6600-3e58-4d43-8f92-36e2ebcd6855"}, "genome|genome": {"id": "8581fb782fbc3175", "src": "hda", "uuid": "95a6b848-2311-4435-b9f9-d8fd4720e9ff"}}, "outputs": {"output": {"id": "e0fd17b190dcbcad", "src": "hda", "uuid": "9ae10eba-de11-41bc-8687-f35df2910c25"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:43:02", "plugin": "core", "name": "end_epoch", "raw_value": "1685947382.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:43:02", "plugin": "core", "name": "start_epoch", "raw_value": "1685947382.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 28.65647315979004, "inputs": {"input": {"src": "hda", "id": "e1e67f85f5d09b7c"}}, "job": {"model_class": "Job", "id": "880617cead5d5b06", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:59:37.004845", "create_time": "2023-06-05T06:59:23.719532", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_spacingbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-hxrs4", "command_line": "bedtools spacing -i '/galaxy/server/database/objects/2/e/4/dataset_2e457a33-8dd3-48b6-996c-150ae9ef8298.dat' > '/galaxy/server/database/objects/1/b/3/dataset_1b31563c-c230-43a9-abee-de424e073635.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input": {"id": "e1e67f85f5d09b7c", "src": "hda", "uuid": "2e457a33-8dd3-48b6-996c-150ae9ef8298"}}, "outputs": {"output": {"id": "c7562987e979ca58", "src": "hda", "uuid": "1b31563c-c230-43a9-abee-de424e073635"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:59:28", "plugin": "core", "name": "end_epoch", "raw_value": "1685948368.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:59:28", "plugin": "core", "name": "start_epoch", "raw_value": "1685948368.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 34.45911502838135, "inputs": {"inputA": {"src": "hda", "id": "d9ad687b6006ab7e"}, "inputB": {"src": "hda", "id": "37a77f853890434e"}}, "job": {"model_class": "Job", "id": "d6cb001dfe6fcaf7", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:37:30.959505", "create_time": "2023-06-05T06:37:19.712585", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-t7rwl", "command_line": "bedtools subtract  -a '/galaxy/server/database/objects/8/0/d/dataset_80de739e-ff94-47c5-a832-29ecef9feaa8.dat' -b '/galaxy/server/database/objects/c/1/1/dataset_c110e1f1-2253-46d1-80e2-e92d73b8aebc.dat'    > '/galaxy/server/database/objects/1/f/0/dataset_1f0a40d8-dae9-4728-800e-df2e949411b6.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "removeIfOverlap": "\"\"", "overlap": "\"\"", "strand": "\"\""}, "inputs": {"inputA": {"id": "d9ad687b6006ab7e", "src": "hda", "uuid": "80de739e-ff94-47c5-a832-29ecef9feaa8"}, "inputB": {"id": "37a77f853890434e", "src": "hda", "uuid": "c110e1f1-2253-46d1-80e2-e92d73b8aebc"}}, "outputs": {"output": {"id": "ad4f0b1e89506d2b", "src": "hda", "uuid": "1f0a40d8-dae9-4728-800e-df2e949411b6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:37:21", "plugin": "core", "name": "end_epoch", "raw_value": "1685947041.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:37:21", "plugin": "core", "name": "start_epoch", "raw_value": "1685947041.0000000"}, {"title": "Memory Allocated (MB)", "value": "8589", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8589.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 37.590837240219116, "inputs": {"inputA": {"src": "hda", "id": "ed068ebc52f8188e"}, "inputB": {"src": "hda", "id": "bbf082a9c5e53940"}, "overlap": "0.80"}, "job": {"model_class": "Job", "id": "31c62475b61625cf", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:38:03.432534", "create_time": "2023-06-05T06:37:44.289398", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-8ksvc", "command_line": "bedtools subtract  -a '/galaxy/server/database/objects/f/d/d/dataset_fddbeb3d-a512-41c6-acac-4f41ff7618a2.dat' -b '/galaxy/server/database/objects/d/2/9/dataset_d2947a06-3c38-498f-9557-11eacbb8b387.dat'  -f 0.8   > '/galaxy/server/database/objects/c/8/7/dataset_c874ed2d-59bd-467c-8bde-6a307b68f331.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "removeIfOverlap": "\"\"", "overlap": "\"0.8\"", "strand": "\"\""}, "inputs": {"inputB": {"id": "bbf082a9c5e53940", "src": "hda", "uuid": "d2947a06-3c38-498f-9557-11eacbb8b387"}, "inputA": {"id": "ed068ebc52f8188e", "src": "hda", "uuid": "fddbeb3d-a512-41c6-acac-4f41ff7618a2"}}, "outputs": {"output": {"id": "947f41c0c5a94ceb", "src": "hda", "uuid": "c874ed2d-59bd-467c-8bde-6a307b68f331"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:37:54", "plugin": "core", "name": "end_epoch", "raw_value": "1685947074.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:37:54", "plugin": "core", "name": "start_epoch", "raw_value": "1685947074.0000000"}, {"title": "Memory Allocated (MB)", "value": "8589", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8589.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 34.43687152862549, "inputs": {"inputA": {"src": "hda", "id": "ed068ebc52f8188e"}, "inputB": {"src": "hda", "id": "bbf082a9c5e53940"}, "removeIfOverlap": "-A"}, "job": {"model_class": "Job", "id": "40e4761728ac2856", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:38:05.486019", "create_time": "2023-06-05T06:37:53.492978", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_subtractbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-4f8k6", "command_line": "bedtools subtract  -a '/galaxy/server/database/objects/f/d/d/dataset_fddbeb3d-a512-41c6-acac-4f41ff7618a2.dat' -b '/galaxy/server/database/objects/d/2/9/dataset_d2947a06-3c38-498f-9557-11eacbb8b387.dat'   -A > '/galaxy/server/database/objects/f/a/2/dataset_fa2836a5-f7cd-44e0-b6b3-62b7eb2eafb9.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "removeIfOverlap": "\"-A\"", "overlap": "\"\"", "strand": "\"\""}, "inputs": {"inputA": {"id": "ed068ebc52f8188e", "src": "hda", "uuid": "fddbeb3d-a512-41c6-acac-4f41ff7618a2"}, "inputB": {"id": "bbf082a9c5e53940", "src": "hda", "uuid": "d2947a06-3c38-498f-9557-11eacbb8b387"}}, "outputs": {"output": {"id": "b6f727b8d71c11e6", "src": "hda", "uuid": "fa2836a5-f7cd-44e0-b6b3-62b7eb2eafb9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:37:56", "plugin": "core", "name": "end_epoch", "raw_value": "1685947076.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:37:56", "plugin": "core", "name": "start_epoch", "raw_value": "1685947076.0000000"}, {"title": "Memory Allocated (MB)", "value": "8589", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "8589.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_tagbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_tagbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 34.835907220840454, "inputs": {"inputA": {"src": "hda", "id": "064a41a449192b35"}, "inputB": {"src": "hda", "id": "c451f8bb14b6a6e0"}, "field": "-names"}, "job": {"model_class": "Job", "id": "3bf4286af4eb17e5", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:58:24.219147", "create_time": "2023-06-05T06:58:12.574607", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_tagbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-drv24", "command_line": "bedtools tag -i '/galaxy/server/database/objects/8/6/e/dataset_86e789bf-0376-4b8f-8171-64baeb10a4dc.dat' -files '/galaxy/server/database/objects/2/6/c/dataset_26c79bde-8661-444a-a6e8-da01c2c21d27.dat'    -tag 'YB' -names > '/galaxy/server/database/objects/9/c/9/dataset_9c941bd4-3045-441b-9688-0b74cf34f086.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "field": "\"-names\"", "tag": "\"YB\"", "overlap": "\"\"", "strand": "\"\""}, "inputs": {"inputA": {"id": "064a41a449192b35", "src": "hda", "uuid": "86e789bf-0376-4b8f-8171-64baeb10a4dc"}, "inputB": {"id": "c451f8bb14b6a6e0", "src": "hda", "uuid": "26c79bde-8661-444a-a6e8-da01c2c21d27"}, "inputB1": {"id": "c451f8bb14b6a6e0", "src": "hda", "uuid": "26c79bde-8661-444a-a6e8-da01c2c21d27"}}, "outputs": {"output": {"id": "64143cdbca09bb46", "src": "hda", "uuid": "9c941bd4-3045-441b-9688-0b74cf34f086"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:58:14", "plugin": "core", "name": "end_epoch", "raw_value": "1685948294.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:58:14", "plugin": "core", "name": "start_epoch", "raw_value": "1685948294.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 44.92777419090271, "inputs": {"tag|inputs": [{"src": "hda", "id": "d7b31c91890076a0"}, {"src": "hda", "id": "c240b9a946c60dd3"}, {"src": "hda", "id": "d5a8fb5b6c7b3337"}], "tag|tag_select": "tag", "empty|empty_selector": ""}, "job": {"model_class": "Job", "id": "164681cdf63e4202", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:32:57.998345", "create_time": "2023-06-05T06:32:42.265496", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6l5xt", "command_line": "unionBedGraphs  -filler 'N/A'     -i '/galaxy/server/database/objects/d/8/7/dataset_d87f86a0-c072-4f0b-8f92-bd5dc60c4208.dat' '/galaxy/server/database/objects/a/a/6/dataset_aa6100b3-1700-4b39-a930-219aabd271b7.dat' '/galaxy/server/database/objects/d/6/4/dataset_d648fc61-597a-42ee-b4e2-c5ff24759de4.dat' > '/galaxy/server/database/objects/8/7/7/dataset_8778b751-8d41-48e7-88c8-2636cc3cfa56.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 111, \"src\": \"hda\"}, {\"id\": 112, \"src\": \"hda\"}, {\"id\": 113, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "d7b31c91890076a0", "src": "hda", "uuid": "d87f86a0-c072-4f0b-8f92-bd5dc60c4208"}, "inputs1": {"id": "d7b31c91890076a0", "src": "hda", "uuid": "d87f86a0-c072-4f0b-8f92-bd5dc60c4208"}, "inputs2": {"id": "c240b9a946c60dd3", "src": "hda", "uuid": "aa6100b3-1700-4b39-a930-219aabd271b7"}, "inputs3": {"id": "d5a8fb5b6c7b3337", "src": "hda", "uuid": "d648fc61-597a-42ee-b4e2-c5ff24759de4"}}, "outputs": {"output": {"id": "69c4e246e921022f", "src": "hda", "uuid": "8778b751-8d41-48e7-88c8-2636cc3cfa56"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:32:49", "plugin": "core", "name": "end_epoch", "raw_value": "1685946769.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:32:49", "plugin": "core", "name": "start_epoch", "raw_value": "1685946769.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 40.277485370635986, "inputs": {"tag|inputs": [{"src": "hda", "id": "d7b31c91890076a0"}, {"src": "hda", "id": "c240b9a946c60dd3"}, {"src": "hda", "id": "d5a8fb5b6c7b3337"}], "tag|tag_select": "tag", "empty|empty_selector": "", "header": true}, "job": {"model_class": "Job", "id": "41696e5265200b1e", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:33:00.879472", "create_time": "2023-06-05T06:32:47.822323", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7x6h7", "command_line": "unionBedGraphs -header -filler 'N/A'     -i '/galaxy/server/database/objects/d/8/7/dataset_d87f86a0-c072-4f0b-8f92-bd5dc60c4208.dat' '/galaxy/server/database/objects/a/a/6/dataset_aa6100b3-1700-4b39-a930-219aabd271b7.dat' '/galaxy/server/database/objects/d/6/4/dataset_d648fc61-597a-42ee-b4e2-c5ff24759de4.dat' > '/galaxy/server/database/objects/2/1/c/dataset_21c8b3f1-84df-4f62-9b73-2da5213384f4.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "true", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 1, \"empty_selector\": \"\"}", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 111, \"src\": \"hda\"}, {\"id\": 112, \"src\": \"hda\"}, {\"id\": 113, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "d7b31c91890076a0", "src": "hda", "uuid": "d87f86a0-c072-4f0b-8f92-bd5dc60c4208"}, "inputs1": {"id": "d7b31c91890076a0", "src": "hda", "uuid": "d87f86a0-c072-4f0b-8f92-bd5dc60c4208"}, "inputs2": {"id": "c240b9a946c60dd3", "src": "hda", "uuid": "aa6100b3-1700-4b39-a930-219aabd271b7"}, "inputs3": {"id": "d5a8fb5b6c7b3337", "src": "hda", "uuid": "d648fc61-597a-42ee-b4e2-c5ff24759de4"}}, "outputs": {"output": {"id": "1434e13c539c4063", "src": "hda", "uuid": "21c8b3f1-84df-4f62-9b73-2da5213384f4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:32:51", "plugin": "core", "name": "end_epoch", "raw_value": "1685946771.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:32:51", "plugin": "core", "name": "start_epoch", "raw_value": "1685946771.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 50.24857783317566, "inputs": {"tag|inputs": [{"src": "hda", "id": "1c09be6ab473a6db"}, {"src": "hda", "id": "fea0ff7a00273399"}, {"src": "hda", "id": "f73c7fb151e70573"}], "tag|tag_select": "tag", "empty|genome_file_opts|genome": {"src": "hda", "id": "03662e02ab38445d"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty"}, "job": {"model_class": "Job", "id": "c826403e07515b60", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:33:48.574860", "create_time": "2023-06-05T06:33:25.535142", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-7l4f5", "command_line": "unionBedGraphs  -filler 'N/A' -empty  -g '/galaxy/server/database/objects/3/6/3/dataset_3637671d-22b4-4b37-8057-91a217a8dc10.dat'   -i '/galaxy/server/database/objects/4/8/b/dataset_48b8fb39-1269-472b-9e4b-c35c26a9aa1e.dat' '/galaxy/server/database/objects/9/f/9/dataset_9f930183-56e3-45ef-b81e-42731dc122e3.dat' '/galaxy/server/database/objects/a/f/d/dataset_afd5ca6f-aead-4458-afc5-bc0abcd5fba4.dat' > '/galaxy/server/database/objects/7/3/6/dataset_7363d861-8d8e-46da-af1a-73ece6f16680.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 123, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "tag": "{\"__current_case__\": 0, \"inputs\": {\"values\": [{\"id\": 120, \"src\": \"hda\"}, {\"id\": 121, \"src\": \"hda\"}, {\"id\": 122, \"src\": \"hda\"}]}, \"tag_select\": \"tag\"}"}, "inputs": {"inputs": {"id": "1c09be6ab473a6db", "src": "hda", "uuid": "48b8fb39-1269-472b-9e4b-c35c26a9aa1e"}, "inputs1": {"id": "1c09be6ab473a6db", "src": "hda", "uuid": "48b8fb39-1269-472b-9e4b-c35c26a9aa1e"}, "inputs2": {"id": "fea0ff7a00273399", "src": "hda", "uuid": "9f930183-56e3-45ef-b81e-42731dc122e3"}, "inputs3": {"id": "f73c7fb151e70573", "src": "hda", "uuid": "afd5ca6f-aead-4458-afc5-bc0abcd5fba4"}, "empty|genome": {"id": "03662e02ab38445d", "src": "hda", "uuid": "3637671d-22b4-4b37-8057-91a217a8dc10"}}, "outputs": {"output": {"id": "3acd8ac1e2a5e4d4", "src": "hda", "uuid": "7363d861-8d8e-46da-af1a-73ece6f16680"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:33:38", "plugin": "core", "name": "end_epoch", "raw_value": "1685946818.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:33:38", "plugin": "core", "name": "start_epoch", "raw_value": "1685946818.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph", "tool_version": "2.30.0", "test_index": 3, "time_seconds": 47.315470457077026, "inputs": {"tag|bedgraphs_0|input": {"src": "hda", "id": "1c09be6ab473a6db"}, "tag|bedgraphs_0|custom_name": "first", "tag|bedgraphs_1|input": {"src": "hda", "id": "fea0ff7a00273399"}, "tag|bedgraphs_1|custom_name": "second", "tag|bedgraphs_2|input": {"src": "hda", "id": "f73c7fb151e70573"}, "tag|bedgraphs_2|custom_name": "third", "tag|tag_select": "custom", "empty|genome_file_opts|genome": {"src": "hda", "id": "03662e02ab38445d"}, "empty|genome_file_opts|genome_file_opts_selector": "hist", "empty|empty_selector": "-empty"}, "job": {"model_class": "Job", "id": "3b5c5ca2ef3b272a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:33:48.497801", "create_time": "2023-06-05T06:33:35.805421", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_unionbedgraph/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-chmk9", "command_line": "unionBedGraphs  -filler 'N/A' -empty  -g '/galaxy/server/database/objects/3/6/3/dataset_3637671d-22b4-4b37-8057-91a217a8dc10.dat'   -i '/galaxy/server/database/objects/4/8/b/dataset_48b8fb39-1269-472b-9e4b-c35c26a9aa1e.dat' '/galaxy/server/database/objects/9/f/9/dataset_9f930183-56e3-45ef-b81e-42731dc122e3.dat' '/galaxy/server/database/objects/a/f/d/dataset_afd5ca6f-aead-4458-afc5-bc0abcd5fba4.dat' -names 'first' 'second' 'third' > '/galaxy/server/database/objects/6/b/a/dataset_6ba48b7d-80a0-4959-b313-79713c5a8bb1.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "filler": "\"N/A\"", "empty": "{\"__current_case__\": 0, \"empty_selector\": \"-empty\", \"genome_file_opts\": {\"__current_case__\": 1, \"genome\": {\"values\": [{\"id\": 123, \"src\": \"hda\"}]}, \"genome_file_opts_selector\": \"hist\"}}", "tag": "{\"__current_case__\": 1, \"bedgraphs\": [{\"__index__\": 0, \"custom_name\": \"first\", \"input\": {\"values\": [{\"id\": 120, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"custom_name\": \"second\", \"input\": {\"values\": [{\"id\": 121, \"src\": \"hda\"}]}}, {\"__index__\": 2, \"custom_name\": \"third\", \"input\": {\"values\": [{\"id\": 122, \"src\": \"hda\"}]}}], \"tag_select\": \"custom\"}"}, "inputs": {"tag|bedgraphs_0|input": {"id": "1c09be6ab473a6db", "src": "hda", "uuid": "48b8fb39-1269-472b-9e4b-c35c26a9aa1e"}, "tag|bedgraphs_0|input1": {"id": "1c09be6ab473a6db", "src": "hda", "uuid": "48b8fb39-1269-472b-9e4b-c35c26a9aa1e"}, "tag|bedgraphs_1|input": {"id": "fea0ff7a00273399", "src": "hda", "uuid": "9f930183-56e3-45ef-b81e-42731dc122e3"}, "tag|bedgraphs_1|input1": {"id": "fea0ff7a00273399", "src": "hda", "uuid": "9f930183-56e3-45ef-b81e-42731dc122e3"}, "tag|bedgraphs_2|input": {"id": "f73c7fb151e70573", "src": "hda", "uuid": "afd5ca6f-aead-4458-afc5-bc0abcd5fba4"}, "tag|bedgraphs_2|input1": {"id": "f73c7fb151e70573", "src": "hda", "uuid": "afd5ca6f-aead-4458-afc5-bc0abcd5fba4"}, "empty|genome": {"id": "03662e02ab38445d", "src": "hda", "uuid": "3637671d-22b4-4b37-8057-91a217a8dc10"}}, "outputs": {"output": {"id": "d6cb001dfe6fcaf7", "src": "hda", "uuid": "6ba48b7d-80a0-4959-b313-79713c5a8bb1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:33:38", "plugin": "core", "name": "end_epoch", "raw_value": "1685946818.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:33:38", "plugin": "core", "name": "start_epoch", "raw_value": "1685946818.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed", "tool_version": "2.30.0", "test_index": 0, "time_seconds": 37.07110786437988, "inputs": {"inputA": {"src": "hda", "id": "85f2cf82ed8f1068"}, "inputB": {"src": "hda", "id": "77bb79dd9e6d252d"}}, "job": {"model_class": "Job", "id": "37a77f853890434e", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:40:56.167079", "create_time": "2023-06-05T06:40:38.808837", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-5d8tb", "command_line": "bedtools window -a '/galaxy/server/database/objects/e/5/a/dataset_e5ae2012-a016-419d-ba28-2aa9d7b9e7e5.dat' -b '/galaxy/server/database/objects/a/a/f/dataset_aaf35203-1c69-43d0-92da-f6aae029b092.dat'   -w 1000     > '/galaxy/server/database/objects/d/0/c/dataset_d0c11b40-7726-49e2-95cc-a861988d5852.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "nooverlaps": "false", "number": "false", "original": "false", "strandB": "\"\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"window\", \"w\": \"1000\"}", "bed": "false"}, "inputs": {"inputA": {"id": "85f2cf82ed8f1068", "src": "hda", "uuid": "e5ae2012-a016-419d-ba28-2aa9d7b9e7e5"}, "inputB": {"id": "77bb79dd9e6d252d", "src": "hda", "uuid": "aaf35203-1c69-43d0-92da-f6aae029b092"}}, "outputs": {"output": {"id": "bef484a3c171d60e", "src": "hda", "uuid": "d0c11b40-7726-49e2-95cc-a861988d5852"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:40:46", "plugin": "core", "name": "end_epoch", "raw_value": "1685947246.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:40:46", "plugin": "core", "name": "start_epoch", "raw_value": "1685947246.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed", "tool_version": "2.30.0", "test_index": 1, "time_seconds": 32.832186222076416, "inputs": {"inputA": {"src": "hda", "id": "85f2cf82ed8f1068"}, "inputB": {"src": "hda", "id": "77bb79dd9e6d252d"}, "addition|w": "5000", "addition|addition_select": "window"}, "job": {"model_class": "Job", "id": "d1cbe52692a16691", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:40:57.077932", "create_time": "2023-06-05T06:40:45.684426", "galaxy_version": "23.0", "command_version": "bedtools v2.30.0", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-2nqqr", "command_line": "bedtools window -a '/galaxy/server/database/objects/e/5/a/dataset_e5ae2012-a016-419d-ba28-2aa9d7b9e7e5.dat' -b '/galaxy/server/database/objects/a/a/f/dataset_aaf35203-1c69-43d0-92da-f6aae029b092.dat'   -w 5000     > '/galaxy/server/database/objects/5/1/8/dataset_518bfa20-8c71-4b23-97b2-5a1821711a21.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": "false", "nooverlaps": "false", "number": "false", "original": "false", "strandB": "\"\"", "addition": "{\"__current_case__\": 0, \"addition_select\": \"window\", \"w\": \"5000\"}", "bed": "false"}, "inputs": {"inputA": {"id": "85f2cf82ed8f1068", "src": "hda", "uuid": "e5ae2012-a016-419d-ba28-2aa9d7b9e7e5"}, "inputB": {"id": "77bb79dd9e6d252d", "src": "hda", "uuid": "aaf35203-1c69-43d0-92da-f6aae029b092"}}, "outputs": {"output": {"id": "078b8309e597435a", "src": "hda", "uuid": "518bfa20-8c71-4b23-97b2-5a1821711a21"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 06:40:48", "plugin": "core", "name": "end_epoch", "raw_value": "1685947248.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:40:48", "plugin": "core", "name": "start_epoch", "raw_value": "1685947248.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed/2.30.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bedtools/bedtools_windowbed", "tool_version": "2.30.0", "test_index": 2, "time_seconds": 17.637407541275024, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 0, "time_seconds": 38.970674991607666, "inputs": {"input_tabular": [{"src": "hda", "id": "41cf1cacd146fe94"}, {"src": "hda", "id": "ac6af553d2407d1c"}, {"src": "hda", "id": "490ffa4d4d8f3d2a"}], "identifier_column": "1", "has_header": "1", "old_col_in_header": true, "fill_char": ".", "include_outputs": null}, "job": {"model_class": "Job", "id": "60d6f521f328ec2a", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:22:00.446370", "create_time": "2023-06-05T07:21:47.076145", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-qfgv7", "command_line": "sh '/galaxy/server/database/jobs_directory/000/571/configs/tmprpne4bjg'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "include_outputs": null, "fill_char": "\".\"", "old_col_in_header": "true", "has_header": "\"1\"", "identifier_column": "\"1\""}, "inputs": {"input_tabular3": {"id": "490ffa4d4d8f3d2a", "src": "hda", "uuid": "904cc467-fcd1-4ab8-89d7-87ed5f1af3ad"}, "input_tabular2": {"id": "ac6af553d2407d1c", "src": "hda", "uuid": "1f2dee82-b30e-40a6-bb41-0faa7a7b1677"}, "input_tabular1": {"id": "41cf1cacd146fe94", "src": "hda", "uuid": "12b2fffa-e43f-4475-9c42-217371a5d710"}, "input_tabular": {"id": "41cf1cacd146fe94", "src": "hda", "uuid": "12b2fffa-e43f-4475-9c42-217371a5d710"}}, "outputs": {"tabular_output": {"id": "267b7d25700a0157", "src": "hda", "uuid": "1b8f9ee2-68cf-4c46-9dbf-1e52bbe0a3d9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:21:51", "plugin": "core", "name": "end_epoch", "raw_value": "1685949711.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:21:51", "plugin": "core", "name": "start_epoch", "raw_value": "1685949711.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 1, "time_seconds": 41.573219776153564, "inputs": {"input_tabular": [{"src": "hda", "id": "12610d44923b2623"}, {"src": "hda", "id": "786517f8dfdab532"}, {"src": "hda", "id": "a680c10c418a75b2"}], "identifier_column": "1", "has_header": "0", "old_col_in_header": true, "fill_char": ".", "include_outputs": null}, "job": {"model_class": "Job", "id": "5caa6af3789ee9b9", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:22:03.623759", "create_time": "2023-06-05T07:21:52.113170", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-gfmhm", "command_line": "sh '/galaxy/server/database/jobs_directory/000/572/configs/tmpelrxx2hh'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "include_outputs": null, "fill_char": "\".\"", "old_col_in_header": "true", "has_header": "\"0\"", "identifier_column": "\"1\""}, "inputs": {"input_tabular3": {"id": "a680c10c418a75b2", "src": "hda", "uuid": "b01a63d3-1db2-4c6d-b9ad-be440a2d1593"}, "input_tabular2": {"id": "786517f8dfdab532", "src": "hda", "uuid": "ff0fd6e1-27ac-49e0-b9c1-fdd39ad9a416"}, "input_tabular1": {"id": "12610d44923b2623", "src": "hda", "uuid": "b22adcc4-a180-4116-868e-2999dc9e2c4c"}, "input_tabular": {"id": "12610d44923b2623", "src": "hda", "uuid": "b22adcc4-a180-4116-868e-2999dc9e2c4c"}}, "outputs": {"tabular_output": {"id": "42bc8cef88013262", "src": "hda", "uuid": "5308837e-03bd-4927-a2cf-8705eda9af65"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:21:54", "plugin": "core", "name": "end_epoch", "raw_value": "1685949714.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:21:54", "plugin": "core", "name": "start_epoch", "raw_value": "1685949714.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 2, "time_seconds": 14.8666353225708, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join", "tool_version": "0.0.3", "test_index": 3, "time_seconds": 40.024951219558716, "inputs": {"input_tabular": [{"src": "hda", "id": "6e684d1c86982053"}, {"src": "hda", "id": "b368bcec42aae598"}, {"src": "hda", "id": "d3280eda4577f730"}], "identifier_column": "1", "has_header": "0", "old_col_in_header": false, "fill_char": ".", "include_outputs": null}, "job": {"model_class": "Job", "id": "d50fc3520a827c74", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:22:43.946035", "create_time": "2023-06-05T07:22:33.552191", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-vq5nk", "command_line": "sh '/galaxy/server/database/jobs_directory/000/580/configs/tmp_27dhyln'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "include_outputs": null, "fill_char": "\".\"", "old_col_in_header": "false", "has_header": "\"0\"", "identifier_column": "\"1\""}, "inputs": {"input_tabular3": {"id": "d3280eda4577f730", "src": "hda", "uuid": "4259dcdc-169a-49dc-abfb-f0ab096fafd5"}, "input_tabular2": {"id": "b368bcec42aae598", "src": "hda", "uuid": "76632acd-8e30-4131-a5a4-e0c2324a6ed7"}, "input_tabular1": {"id": "6e684d1c86982053", "src": "hda", "uuid": "bf6e46ba-9096-43b5-bfee-86afdff08fa6"}, "input_tabular": {"id": "6e684d1c86982053", "src": "hda", "uuid": "bf6e46ba-9096-43b5-bfee-86afdff08fa6"}}, "outputs": {"tabular_output": {"id": "b870e7400209ac25", "src": "hda", "uuid": "229f9a11-779b-4e38-ba17-5840152a6a79"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:22:35", "plugin": "core", "name": "end_epoch", "raw_value": "1685949755.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:22:34", "plugin": "core", "name": "start_epoch", "raw_value": "1685949754.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers", "tool_version": "0.0.2", "test_index": 0, "time_seconds": 32.12168288230896, "inputs": {"input_collection": {"src": "hdca", "id": "5679f60e9424a352"}}, "job": {"model_class": "Job", "id": "49ac2f708b4a00d3", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:21:21.195759", "create_time": "2023-06-05T07:21:06.519223", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-jx2sq", "command_line": "mv '/galaxy/server/database/jobs_directory/000/563/configs/tmpa80c_mvb' '/galaxy/server/database/objects/f/d/6/dataset_fd68a9b6-93e0-40c2-ae0d-1d6b4af52559.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "input_collection": "{\"values\": [{\"id\": 21, \"src\": \"hdca\"}]}"}, "inputs": {"input_collection1": {"id": "4f7620a2a7153015", "src": "hda", "uuid": "0cae5ca7-fe95-448f-b7c2-67b9c64d004c"}}, "outputs": {"output": {"id": "bad49cc4b961266d", "src": "hda", "uuid": "fd68a9b6-93e0-40c2-ae0d-1d6b4af52559"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:21:12", "plugin": "core", "name": "end_epoch", "raw_value": "1685949672.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:21:12", "plugin": "core", "name": "start_epoch", "raw_value": "1685949672.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers", "tool_version": "0.0.2", "test_index": 1, "time_seconds": 26.205336570739746, "inputs": {"input_collection": {"src": "hdca", "id": "1a6d33b3c055c69a"}}, "job": {"model_class": "Job", "id": "9751e6b8a6c952ee", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:21:22.090897", "create_time": "2023-06-05T07:21:11.429738", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-9tdk6", "command_line": "mv '/galaxy/server/database/jobs_directory/000/564/configs/tmpolmv5het' '/galaxy/server/database/objects/4/d/a/dataset_4dae8168-36e9-47b0-a498-cc13515253a6.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "input_collection": "{\"values\": [{\"id\": 22, \"src\": \"hdca\"}]}"}, "inputs": {"input_collection1": {"id": "4f7620a2a7153015", "src": "hda", "uuid": "0cae5ca7-fe95-448f-b7c2-67b9c64d004c"}}, "outputs": {"output": {"id": "f82ade0834136909", "src": "hda", "uuid": "4dae8168-36e9-47b0-a498-cc13515253a6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:21:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685949673.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:21:13", "plugin": "core", "name": "start_epoch", "raw_value": "1685949673.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 0, "time_seconds": 29.706084966659546, "inputs": {"in_file": {"src": "hda", "id": "efb8fca0f86d2f3f"}, "grouping": "2", "need_sort": true, "header_in": true, "header_out": true, "print_full_line": false, "ignore_case": false, "operations_0|op_name": "sum", "operations_0|op_column": "3"}, "job": {"model_class": "Job", "id": "9d8c9ebc0f20c3fe", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:23:20.132901", "create_time": "2023-06-05T07:23:07.324294", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-jc7rv", "command_line": "datamash --header-in --header-out --sort      --group '2' sum 3 < /galaxy/server/database/objects/a/a/2/dataset_aa2a8aae-9ecd-4661-b92d-c4457cb6cc25.dat > '/galaxy/server/database/objects/f/1/2/dataset_f12c1d99-e364-4028-84e3-f3c16c57d169.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"sum\"}]", "narm": "false", "ignore_case": "false", "print_full_line": "false", "header_out": "true", "header_in": "true", "need_sort": "true", "grouping": "\"2\""}, "inputs": {"in_file": {"id": "efb8fca0f86d2f3f", "src": "hda", "uuid": "aa2a8aae-9ecd-4661-b92d-c4457cb6cc25"}}, "outputs": {"out_file": {"id": "d085f635290a3e3f", "src": "hda", "uuid": "f12c1d99-e364-4028-84e3-f3c16c57d169"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:23:11", "plugin": "core", "name": "end_epoch", "raw_value": "1685949791.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:23:11", "plugin": "core", "name": "start_epoch", "raw_value": "1685949791.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Dataset metadata verification for [file_ext] failed, expected [tabular] but found [tsv]. Dataset API value was [{'id': 'd085f635290a3e3f', 'name': 'Datamash on data 688', 'history_id': 'cf9a32ff1d9b463b', 'hid': 689, 'history_content_type': 'dataset', 'deleted': False, 'visible': True, 'type_id': 'dataset-d085f635290a3e3f', 'type': 'file', 'create_time': '2023-06-05T07:23:07.329902', 'update_time': '2023-06-05T07:23:20.104885', 'url': '/api/histories/cf9a32ff1d9b463b/contents/d085f635290a3e3f', 'tags': [], 'dataset_id': 'd085f635290a3e3f', 'state': 'ok', 'extension': 'tsv', 'purged': False, 'display_types': [], 'misc_blurb': '6 lines, 1 comments', 'file_size': 124, 'metadata_data_lines': 6, 'metadata_column_names': ['GroupBy(Major)', 'sum(Score)'], 'display_apps': [], 'rerunnable': True, 'download_url': '/api/histories/cf9a32ff1d9b463b/contents/d085f635290a3e3f/display', 'hda_ldda': 'hda', 'misc_info': '', 'uuid': 'f12c1d99-e364-4028-84e3-f3c16c57d169', 'api_type': 'file', 'meta_files': [], 'accessible': True, 'copied_from_ldda_id': None, 'validated_state_message': None, 'genome_build': '?', 'hashes': [], 'created_from_basename': None, 'annotation': None, 'peek': '<table cellspacing=\"0\" cellpadding=\"3\"><tr><th>1.GroupBy(Major)</th><th>2.sum(Score)</th></tr><tr><td>GroupBy(Major)</td><td>sum(Score)</td></tr><tr><td>Arts</td><td>1310</td></tr><tr><td>Business</td><td>961</td></tr><tr><td>Engineering</td><td>865</td></tr><tr><td>Health-Medicine</td><td>1178</td></tr></table>', 'metadata_column_types': ['str', 'int'], 'data_type': 'galaxy.datatypes.tabular.TSV', 'drs_id': 'hda-36d1b9a12b78270b', 'metadata_comment_lines': 1, 'validated_state': 'unknown', 'metadata_dbkey': '?', 'metadata_columns': 2, 'model_class': 'HistoryDatasetAssociation', 'metadata_delimiter': '\\t', 'resubmitted': False, 'file_ext': 'tsv', 'permissions': {'manage': ['cf9a32ff1d9b463b'], 'access': []}, 'file_name': '/galaxy/server/database/objects/f/1/2/dataset_f12c1d99-e364-4028-84e3-f3c16c57d169.dat', 'creating_job': '9d8c9ebc0f20c3fe', 'sources': []}]."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 1, "time_seconds": 28.343637466430664, "inputs": {"in_file": {"src": "hda", "id": "efb8fca0f86d2f3f"}, "grouping": "2", "need_sort": true, "header_in": true, "header_out": true, "print_full_line": false, "ignore_case": false, "operations_0|op_name": "sum", "operations_0|op_column": "3"}, "job": {"model_class": "Job", "id": "86d7a92a3b87af95", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:23:22.118922", "create_time": "2023-06-05T07:23:10.211394", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-xbkxr", "command_line": "datamash --header-in --header-out --sort      --group '2' sum 3 < /galaxy/server/database/objects/a/a/2/dataset_aa2a8aae-9ecd-4661-b92d-c4457cb6cc25.dat > '/galaxy/server/database/objects/9/2/b/dataset_92b8d7db-2650-4231-85bb-bdd46ea22d36.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"sum\"}]", "narm": "false", "ignore_case": "false", "print_full_line": "false", "header_out": "true", "header_in": "true", "need_sort": "true", "grouping": "\"2\""}, "inputs": {"in_file": {"id": "efb8fca0f86d2f3f", "src": "hda", "uuid": "aa2a8aae-9ecd-4661-b92d-c4457cb6cc25"}}, "outputs": {"out_file": {"id": "64043d462c1e276d", "src": "hda", "uuid": "92b8d7db-2650-4231-85bb-bdd46ea22d36"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:23:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685949793.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:23:13", "plugin": "core", "name": "start_epoch", "raw_value": "1685949793.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 2, "time_seconds": 9.786569595336914, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops", "tool_version": "1.1.0+galaxy2", "test_index": 3, "time_seconds": 30.380988359451294, "inputs": {"in_file": {"src": "hda", "id": "23a38e96a9462308"}, "grouping": "2", "need_sort": true, "header_in": true, "print_full_line": false, "narm": true, "operations_0|op_name": "mean", "operations_0|op_column": "3"}, "job": {"model_class": "Job", "id": "e97aad754e2909f6", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:23:53.006649", "create_time": "2023-06-05T07:23:38.313175", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-mphjp", "command_line": "datamash --header-in  --sort   --narm   --group '2' mean 3 < /galaxy/server/database/objects/0/5/9/dataset_059aa6b6-553f-45de-836d-3236ae2a88a0.dat > '/galaxy/server/database/objects/7/7/a/dataset_77ac7c35-dfd1-402f-a373-958d62ccc9c2.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"mean\"}]", "narm": "true", "ignore_case": "false", "print_full_line": "false", "header_out": "false", "header_in": "true", "need_sort": "true", "grouping": "\"2\""}, "inputs": {"in_file": {"id": "23a38e96a9462308", "src": "hda", "uuid": "059aa6b6-553f-45de-836d-3236ae2a88a0"}}, "outputs": {"out_file": {"id": "0c8260769e66083a", "src": "hda", "uuid": "77ac7c35-dfd1-402f-a373-958d62ccc9c2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:23:42", "plugin": "core", "name": "end_epoch", "raw_value": "1685949822.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:23:42", "plugin": "core", "name": "start_epoch", "raw_value": "1685949822.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_reverse/datamash_reverse/1.1.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_reverse/datamash_reverse", "tool_version": "1.1.0+galaxy2", "test_index": 0, "time_seconds": 34.471055030822754, "inputs": {"in_file": {"src": "hda", "id": "32676accc6118513"}}, "job": {"model_class": "Job", "id": "ba86cae1185b5b3c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:22:50.165017", "create_time": "2023-06-05T07:22:36.942922", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_reverse/datamash_reverse/1.1.0+galaxy2", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-fmsx4", "command_line": "datamash reverse   < /galaxy/server/database/objects/d/3/f/dataset_d3f2a12e-eb78-4982-b991-c076148f9007.dat > /galaxy/server/database/objects/e/f/f/dataset_eff63250-0c35-4937-b728-2a47a5c7c7de.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"in_file": {"id": "32676accc6118513", "src": "hda", "uuid": "d3f2a12e-eb78-4982-b991-c076148f9007"}}, "outputs": {"out_file": {"id": "89c4f91bd094c671", "src": "hda", "uuid": "eff63250-0c35-4937-b728-2a47a5c7c7de"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:22:40", "plugin": "core", "name": "end_epoch", "raw_value": "1685949760.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:22:40", "plugin": "core", "name": "start_epoch", "raw_value": "1685949760.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_transpose/datamash_transpose/1.1.0+galaxy2-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_transpose/datamash_transpose", "tool_version": "1.1.0+galaxy2", "test_index": 0, "time_seconds": 9.71672534942627, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm", "tool_version": "0.3+galaxy0", "test_index": 0, "time_seconds": 35.65457081794739, "inputs": {"readFile": {"src": "hda", "id": "1d0cfe9b40762f41"}, "paf": {"src": "hda", "id": "b0d36b582bd29a30"}}, "job": {"model_class": "Job", "id": "7bedae578e5175c8", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:29:20.045799", "create_time": "2023-06-05T06:29:06.359299", "galaxy_version": "23.0", "command_version": "0.3-r179", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-j4mzx", "command_line": "miniasm -f '/galaxy/server/database/objects/b/c/3/dataset_bc3a4329-d16f-4796-a43e-dcc2f4401bd6.dat' -m '100' -i '0.05' -s '1000' -c '3' -o '1000' -h '1000' -I '0.08' -g '1000' -d '50000' -e '4' -n '3' -F '0.8' '/galaxy/server/database/objects/3/1/a/dataset_31a4973d-58aa-4ca8-b4e3-ae5115d7cb58.dat' > '/galaxy/server/database/objects/c/0/d/dataset_c0dcedf1-b9e7-499c-b415-9e9efa9d9e25.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "graph": "{\"finalDropRatio\": \"0.8\", \"maxBubDist\": \"50000\", \"maxGapDiff\": \"1000\", \"minUtgSize\": \"4\", \"nRounds\": \"3\"}", "overlapping": "{\"intThres\": \"0.08\", \"maxHang\": \"1000\", \"minOvlp\": \"1000\"}", "preselection": "{\"minCov\": \"3\", \"minIden\": \"0.05\", \"minMatch\": \"100\", \"minSpan\": \"1000\"}"}, "inputs": {"readFile": {"id": "1d0cfe9b40762f41", "src": "hda", "uuid": "bc3a4329-d16f-4796-a43e-dcc2f4401bd6"}, "paf": {"id": "b0d36b582bd29a30", "src": "hda", "uuid": "31a4973d-58aa-4ca8-b4e3-ae5115d7cb58"}}, "outputs": {"gfa": {"id": "9732e23be0a3bbe7", "src": "hda", "uuid": "c0dcedf1-b9e7-499c-b415-9e9efa9d9e25"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.145*1.00] read 100000 hits; stored 187742 hits and 12067 sequences (111354001 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.165*1.00] 9155 query sequences remain after sub\n[M::ma_hit_cut::0.167*1.00] 161122 hits remain after cut\n[M::ma_hit_flt::0.170*1.00] 156936 hits remain after filtering; crude coverage after filtering: 11.85\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.180*1.00] 9023 query sequences remain after sub\n[M::ma_hit_cut::0.182*1.00] 152071 hits remain after cut\n[M::ma_hit_contained::0.185*1.00] 1536 sequences and 8359 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 8236 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4182 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 362 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 260 tips\n[M::asg_pop_bubble] popped 105 bubbles and trimmed 4 tips\n[M::main] ===> Step 4.3: cutting short overlaps (3 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 29 asymmetric arcs\n[M::asg_arc_del_short] removed 37 short overlaps\n[M::asg_cut_tip] cut 104 tips\n[M::asg_pop_bubble] popped 1 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 1 asymmetric arcs\n[M::asg_arc_del_short] removed 1 short overlaps\n[M::asg_cut_tip] cut 3 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/b/c/3/dataset_bc3a4329-d16f-4796-a43e-dcc2f4401bd6.dat -m 100 -i 0.05 -s 1000 -c 3 -o 1000 -h 1000 -I 0.08 -g 1000 -d 50000 -e 4 -n 3 -F 0.8 /galaxy/server/database/objects/3/1/a/dataset_31a4973d-58aa-4ca8-b4e3-ae5115d7cb58.dat\n[M::main] Real time: 0.193 sec; CPU: 0.190 sec\n", "job_stdout": "", "job_stderr": "", "stderr": "[M::main] ===> Step 1: reading read mappings <===\n[M::ma_hit_read::0.145*1.00] read 100000 hits; stored 187742 hits and 12067 sequences (111354001 bp)\n[M::main] ===> Step 2: 1-pass (crude) read selection <===\n[M::ma_hit_sub::0.165*1.00] 9155 query sequences remain after sub\n[M::ma_hit_cut::0.167*1.00] 161122 hits remain after cut\n[M::ma_hit_flt::0.170*1.00] 156936 hits remain after filtering; crude coverage after filtering: 11.85\n[M::main] ===> Step 3: 2-pass (fine) read selection <===\n[M::ma_hit_sub::0.180*1.00] 9023 query sequences remain after sub\n[M::ma_hit_cut::0.182*1.00] 152071 hits remain after cut\n[M::ma_hit_contained::0.185*1.00] 1536 sequences and 8359 hits remain after containment removal\n[M::main] ===> Step 4: graph cleaning <===\n[M::ma_sg_gen] read 8236 arcs\n[M::main] ===> Step 4.1: transitive reduction <===\n[M::asg_arc_del_trans] transitively reduced 4182 arcs\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 362 asymmetric arcs\n[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===\n[M::asg_cut_tip] cut 260 tips\n[M::asg_pop_bubble] popped 105 bubbles and trimmed 4 tips\n[M::main] ===> Step 4.3: cutting short overlaps (3 rounds in total) <===\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 29 asymmetric arcs\n[M::asg_arc_del_short] removed 37 short overlaps\n[M::asg_cut_tip] cut 104 tips\n[M::asg_pop_bubble] popped 1 bubbles and trimmed 0 tips\n[M::asg_arc_del_multi] removed 0 multi-arcs\n[M::asg_arc_del_asymm] removed 1 asymmetric arcs\n[M::asg_arc_del_short] removed 1 short overlaps\n[M::asg_cut_tip] cut 3 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===\n[M::asg_cut_internal] cut 0 internal sequences\n[M::asg_cut_biloop] cut 0 small bi-loops\n[M::asg_cut_tip] cut 0 tips\n[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips\n[M::main] ===> Step 4.5: aggressively cutting short overlaps <===\n[M::asg_arc_del_short] removed 0 short overlaps\n[M::main] ===> Step 5: generating unitigs <===\n[M::main] Version: 0.3-r179\n[M::main] CMD: miniasm -f /galaxy/server/database/objects/b/c/3/dataset_bc3a4329-d16f-4796-a43e-dcc2f4401bd6.dat -m 100 -i 0.05 -s 1000 -c 3 -o 1000 -h 1000 -I 0.08 -g 1000 -d 50000 -e 4 -n 3 -F 0.8 /galaxy/server/database/objects/3/1/a/dataset_31a4973d-58aa-4ca8-b4e3-ae5115d7cb58.dat\n[M::main] Real time: 0.193 sec; CPU: 0.190 sec\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:29:10", "plugin": "core", "name": "end_epoch", "raw_value": "1685946550.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:29:09", "plugin": "core", "name": "start_epoch", "raw_value": "1685946549.0000000"}, {"title": "Memory Allocated (MB)", "value": "34359", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "34359.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm", "tool_version": "0.3+galaxy0", "test_index": 1, "time_seconds": 27.241855144500732, "inputs": {"readFile": {"src": "hda", "id": "849f9b85370401dd"}, "paf": {"src": "hda", "id": "164681cdf63e4202"}, "preselection|minMatch": "99", "preselection|minIden": "0.04", "preselection|minSpan": "999", "preselection|minCov": "2", "overlapping|minOvlp": "999", "overlapping|maxHang": "999", "overlapping|intThres": "0.7", "graph|maxGapDiff": "999", "graph|maxBubDist": "45000", "graph|minUtgSize": "3", "graph|nRounds": "2", "graph|finalDropRatio": "0.7"}, "job": {"model_class": "Job", "id": "c0825964d0b1c4da", "state": "error", "exit_code": null, "update_time": "2023-06-05T06:29:40.577048", "create_time": "2023-06-05T06:29:31.190629", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-48rmr", "command_line": "miniasm -f '/galaxy/server/database/objects/3/a/1/dataset_3a1462e7-b89d-4dcd-bd53-54f1eed3a23b.dat' -m '99' -i '0.04' -s '999' -c '2' -o '999' -h '999' -I '0.7' -g '999' -d '45000' -e '3' -n '2' -F '0.7' '/galaxy/server/database/objects/4/3/e/dataset_43ee1121-c9ed-4091-8b31-942ce97644c4.dat' > '/galaxy/server/database/objects/a/2/4/dataset_a2429b5b-fde2-4db4-9922-ebe9a932b555.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "graph": "{\"finalDropRatio\": \"0.7\", \"maxBubDist\": \"45000\", \"maxGapDiff\": \"999\", \"minUtgSize\": \"3\", \"nRounds\": \"2\"}", "overlapping": "{\"intThres\": \"0.7\", \"maxHang\": \"999\", \"minOvlp\": \"999\"}", "preselection": "{\"minCov\": \"2\", \"minIden\": \"0.04\", \"minMatch\": \"99\", \"minSpan\": \"999\"}"}, "inputs": {"readFile": {"id": "849f9b85370401dd", "src": "hda", "uuid": "3a1462e7-b89d-4dcd-bd53-54f1eed3a23b"}, "paf": {"id": "164681cdf63e4202", "src": "hda", "uuid": "43ee1121-c9ed-4091-8b31-942ce97644c4"}}, "outputs": {"gfa": {"id": "84d90a4c67bbc6d0", "src": "hda", "uuid": "a2429b5b-fde2-4db4-9922-ebe9a932b555"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/miniasm/miniasm/0.3+galaxy0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 0, "time_seconds": 325.86201524734497, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "4658257b878ad57e"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "1054fdc383c1feb4"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": false, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "80963a306f6f7a80", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:23:45.641029", "create_time": "2023-06-05T06:18:49.284526", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-6fdc4", "command_line": "ln -s '/galaxy/server/database/objects/4/4/d/dataset_44da49af-9a1f-4a17-ac94-f1aff4f7730e.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/3/2/b/dataset_32b6263e-b90c-4691-9b7f-9cc5d445ceba.dat' fq2.fastq.gz && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq.gz' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "traceback": null, "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 4, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": true}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": false}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"fastq_input2": {"id": "1054fdc383c1feb4", "src": "hda", "uuid": "32b6263e-b90c-4691-9b7f-9cc5d445ceba"}, "fastq_input1": {"id": "4658257b878ad57e", "src": "hda", "uuid": "44da49af-9a1f-4a17-ac94-f1aff4f7730e"}}, "outputs": {"assembly": {"id": "9a00d6c0d27540d6", "src": "hda", "uuid": "0aa9f7b6-e423-4688-9a82-5f876af199fb"}, "assembly_graph": {"id": "80963a306f6f7a80", "src": "hda", "uuid": "af106297-b8d4-46dd-8976-13fb80423f4d"}}, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2023-06-05 06:21:46)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq.gz --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/6/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon                               not used                                          \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-06-05 06:21:47)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-06-05 06:21:47)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 19M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 19M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.006     5M / 19M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     5M / 19M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.120    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.120    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.122    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.122    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.123    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.158    25M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.174    25M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.174    25M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.174    25M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.175    25M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.175    25M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.176    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.176    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.823    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.823    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.067    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.067    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.185    40M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.186    40M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.187    40M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.187    40M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.188    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.188    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.376     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.376     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.389   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.883   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.883   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.136   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.166   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.196   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.197   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.201   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.203   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.203   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.203   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.213   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.213   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.214   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.214   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.218   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.221   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.223   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.228   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.231   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.232   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.232   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.254   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.254   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.316   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.318   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.322   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.323   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.323   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.323   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.324   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.405   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.608   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.093   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.658   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.617   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.617   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.620   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.620   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.620   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.620   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.620   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.621   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.621   131M / 13\n..\nalizing paths\n  0:00:09.229    59M / 172M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:09.229    59M / 172M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.230    59M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.230    59M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.231    59M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:09.231    59M / 172M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:09.231    54M / 172M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:09.231    54M / 172M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:09.239    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:09.239    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:09.245    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:09.246    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:09.251    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:09.255    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:09.259    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:09.264    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:09.273    54M / 172M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:09.277    53M / 172M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 9 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:09.226    59M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-06-05 06:23:22)\nFilter by read depth        (2023-06-05 06:23:22)\nFilter homopolymer loops    (2023-06-05 06:23:22)\nMerge all possible          (2023-06-05 06:23:22)\nNormalise read depths       (2023-06-05 06:23:22)\nRemove zero length segments (2023-06-05 06:23:22)\nSort link order             (2023-06-05 06:23:22)\nGraph cleaning finished     (2023-06-05 06:23:22)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-06-05 06:23:22)\nFilter by read depth        (2023-06-05 06:23:22)\nFilter homopolymer loops    (2023-06-05 06:23:22)\nMerge all possible          (2023-06-05 06:23:22)\nNormalise read depths       (2023-06-05 06:23:22)\nRemove zero length segments (2023-06-05 06:23:22)\nSort link order             (2023-06-05 06:23:22)\nGraph cleaning finished     (2023-06-05 06:23:22)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-06-05 06:23:22)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-06-05 06:23:22)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/6/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-06-05 06:23:22)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-06-05 06:23:22)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-06-05 06:23:22)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-06-05 06:23:22)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-06-05 06:23:22)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-06-05 06:23:22)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-06-05 06:23:22)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/6/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/005_polished.gfa\n\n\nRotating completed replicons (2023-06-05 06:23:26)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-06-05 06:23:36)\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "\nStarting Unicycler (2023-06-05 06:21:46)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq.gz --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/6/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon                               not used                                          \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-06-05 06:21:47)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-06-05 06:21:47)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/6/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 19M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 19M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.006     5M / 19M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     5M / 19M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.120    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.120    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.122    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.122    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.123    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.158    25M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.174    25M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.174    25M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.174    25M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.175    25M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.175    25M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.176    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.176    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.823    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.823    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.067    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.067    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.185    40M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.186    40M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.187    40M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.187    40M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.188    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.188    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.376     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.376     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.389   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.883   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.883   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.136   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.166   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.196   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.197   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.201   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.203   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.203   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.203   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.213   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.213   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.214   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.214   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.218   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.221   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.223   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.228   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.231   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.232   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.232   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.254   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.254   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.316   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.318   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.322   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.323   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.323   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.323   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.324   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.405   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.608   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.093   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.658   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.617   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.617   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.619   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.620   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.620   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.620   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.620   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.620   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.621   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.621   131M / 13\n..\nalizing paths\n  0:00:09.229    59M / 172M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:09.229    59M / 172M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.230    59M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.230    59M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.230    59M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.231    59M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:09.231    59M / 172M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:09.231    54M / 172M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:09.231    54M / 172M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:09.239    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:09.239    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:09.245    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:09.246    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:09.251    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:09.255    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:09.259    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:09.264    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:09.273    54M / 172M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:09.277    53M / 172M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 9 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:09.226    59M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-06-05 06:23:22)\nFilter by read depth        (2023-06-05 06:23:22)\nFilter homopolymer loops    (2023-06-05 06:23:22)\nMerge all possible          (2023-06-05 06:23:22)\nNormalise read depths       (2023-06-05 06:23:22)\nRemove zero length segments (2023-06-05 06:23:22)\nSort link order             (2023-06-05 06:23:22)\nGraph cleaning finished     (2023-06-05 06:23:22)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-06-05 06:23:22)\nFilter by read depth        (2023-06-05 06:23:22)\nFilter homopolymer loops    (2023-06-05 06:23:22)\nMerge all possible          (2023-06-05 06:23:22)\nNormalise read depths       (2023-06-05 06:23:22)\nRemove zero length segments (2023-06-05 06:23:22)\nSort link order             (2023-06-05 06:23:22)\nGraph cleaning finished     (2023-06-05 06:23:22)\nSaving /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-06-05 06:23:22)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/6/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-06-05 06:23:22)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/6/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-06-05 06:23:22)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-06-05 06:23:22)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-06-05 06:23:22)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-06-05 06:23:22)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-06-05 06:23:22)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-06-05 06:23:22)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-06-05 06:23:22)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/6/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/6/working/fq2.fastq.gz\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/6/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/6/working/005_polished.gfa\n\n\nRotating completed replicons (2023-06-05 06:23:26)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-06-05 06:23:36)\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/6/working/assembly.fasta\n\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 minute", "plugin": "core", "name": "runtime_seconds", "raw_value": "110.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:23:36", "plugin": "core", "name": "end_epoch", "raw_value": "1685946216.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:21:46", "plugin": "core", "name": "start_epoch", "raw_value": "1685946106.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 1, "time_seconds": 212.67878580093384, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "4658257b878ad57e"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "1054fdc383c1feb4"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "395fe53f1e455f5c"}, "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": false, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "9a00d6c0d27540d6", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:21:52.141649", "create_time": "2023-06-05T06:18:53.758461", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-p95rr", "command_line": "ln -s '/galaxy/server/database/objects/4/4/d/dataset_44da49af-9a1f-4a17-ac94-f1aff4f7730e.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/3/2/b/dataset_32b6263e-b90c-4691-9b7f-9cc5d445ceba.dat' fq2.fastq.gz && ln -s '/galaxy/server/database/objects/6/c/4/dataset_6c413c8e-100c-463f-a950-6d1cd142946b.dat' 'lr.fasta' && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq.gz' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0'  --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "traceback": null, "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 4, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": true}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": false}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "395fe53f1e455f5c", "src": "hda", "uuid": "6c413c8e-100c-463f-a950-6d1cd142946b"}, "fastq_input2": {"id": "1054fdc383c1feb4", "src": "hda", "uuid": "32b6263e-b90c-4691-9b7f-9cc5d445ceba"}, "fastq_input1": {"id": "4658257b878ad57e", "src": "hda", "uuid": "44da49af-9a1f-4a17-ac94-f1aff4f7730e"}}, "outputs": {"assembly": {"id": "56a79832e2c625c3", "src": "hda", "uuid": "48c63f20-e657-40fc-8297-37fa7127752f"}, "assembly_graph": {"id": "16c094ab8d7cf4bd", "src": "hda", "uuid": "e8844e68-9c87-4b93-9c01-7c6b152ae6d5"}}, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2023-06-05 06:19:50)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon           1.4.20              good       /usr/local/bin/racon                   \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-06-05 06:19:52)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-06-05 06:19:52)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 19M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 19M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.005     5M / 19M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     5M / 19M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.115    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.115    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.117    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.117    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.119    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.166    25M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.182    25M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.182    25M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.182    25M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.183    25M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.184    25M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.184    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.184    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.803    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.803    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.028    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.028    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.137    38M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.138    38M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.138    38M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.139    38M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.139    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.139    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.281     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.282     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.296   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.757   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.757   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.030   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.056   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.082   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.083   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.090   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.094   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.094   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.094   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.102   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.102   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.103   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.103   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.106   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.110   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.112   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.116   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.118   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.118   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.118   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.135   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.136   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.203   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.204   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.209   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.291   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.498   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.980   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.541   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.499   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.500   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.502   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.502   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.502   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.502   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.502   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.503   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.503   131M / 131M\n..\nn /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:09.144    62M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-06-05 06:21:25)\nFilter by read depth        (2023-06-05 06:21:25)\nFilter homopolymer loops    (2023-06-05 06:21:25)\nMerge all possible          (2023-06-05 06:21:25)\nNormalise read depths       (2023-06-05 06:21:25)\nRemove zero length segments (2023-06-05 06:21:25)\nSort link order             (2023-06-05 06:21:25)\nGraph cleaning finished     (2023-06-05 06:21:25)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-06-05 06:21:25)\nFilter by read depth        (2023-06-05 06:21:25)\nFilter homopolymer loops    (2023-06-05 06:21:25)\nMerge all possible          (2023-06-05 06:21:25)\nNormalise read depths       (2023-06-05 06:21:25)\nRemove zero length segments (2023-06-05 06:21:25)\nSort link order             (2023-06-05 06:21:25)\nGraph cleaning finished     (2023-06-05 06:21:25)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-06-05 06:21:25)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-06-05 06:21:25)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/7/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-06-05 06:21:25)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-06-05 06:21:25)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-06-05 06:21:25)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2023-06-05 06:21:25)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2023-06-05 06:21:25)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2023-06-05 06:21:25)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2023-06-05 06:21:25)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2023-06-05 06:21:25)\n1\t5386\t5\t5077\t-\t1\t5386\t8\t5080\t5072\t5072\t255\tcm:i:945\n1\t5386\t5093\t5384\t-\t1\t5386\t5087\t5378\t291\t291\t255\tcm:i:52\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2023-06-05 06:21:25)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5077,-,1,8,5080\n    5093,5384,-,1,5087,5378\nReference ranges:\n    1-: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 5076 points, score=5074.000394 (good)\n    line 2: 292 points, score=290.006826 (good)\nAll Seqan alignments (time to align = 0.041 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\n\n\nRead alignment summary (2023-06-05 06:21:25)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2023-06-05 06:21:25)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2023-06-05 06:21:25)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-06-05 06:21:25)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-06-05 06:21:25)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-06-05 06:21:25)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nPilon polish round 2\n  bowtie2-build 2_polish_input.fasta 2_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 2_polish_input.fasta -S 2_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz\n  samtools sort -@ 8 -o 2_paired_alignments.bam -O bam -T temp 2_paired_alignments.sam\n  samtools index 2_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 2_polish_input.fasta --changes --output 2_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix all --frags 2_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/005_polished.gfa\n\n\nRotating completed replicons (2023-06-05 06:21:32)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-06-05 06:21:42)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "\nStarting Unicycler (2023-06-05 06:19:50)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version             Status     Path                                   \n  spades.py       3.14.1              good       /usr/local/bin/spades.py               \n  racon           1.4.20              good       /usr/local/bin/racon                   \n  makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb             \n  tblastn         2.12.0+             good       /usr/local/bin/tblastn                 \n  bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build           \n  bowtie2         2.4.4               good       /usr/local/bin/bowtie2                 \n  samtools        1.14                good       /usr/local/bin/samtools                \n  java            11.0.9.1-internal   good       /usr/local/bin/java                    \n  pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar\n  bcftools                            not used                                          \n\n\nChoosing k-mer range for assembly (2023-06-05 06:19:52)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-06-05 06:19:52)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 19M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 19M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.005     5M / 19M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     5M / 19M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.115    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.115    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.117    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.117    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.119    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.166    25M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.182    25M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.182    25M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.182    25M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.183    25M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.184    25M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.184    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.184    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.803    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.803    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.028    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.028    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.137    38M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.138    38M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.138    38M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.139    38M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.139    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.139    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.281     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.282     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.296   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.757   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.757   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.030   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.056   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.082   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.083   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.090   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.094   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.094   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.094   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.102   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.102   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.103   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.103   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.106   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.110   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.112   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.116   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.118   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.118   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.118   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.135   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.136   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.203   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.204   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.209   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.210   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.291   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.498   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.980   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.541   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.499   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.500   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.501   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.502   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.502   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.502   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.502   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.502   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.503   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.503   131M / 131M\n..\nn /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:09.144    62M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-06-05 06:21:25)\nFilter by read depth        (2023-06-05 06:21:25)\nFilter homopolymer loops    (2023-06-05 06:21:25)\nMerge all possible          (2023-06-05 06:21:25)\nNormalise read depths       (2023-06-05 06:21:25)\nRemove zero length segments (2023-06-05 06:21:25)\nSort link order             (2023-06-05 06:21:25)\nGraph cleaning finished     (2023-06-05 06:21:25)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-06-05 06:21:25)\nFilter by read depth        (2023-06-05 06:21:25)\nFilter homopolymer loops    (2023-06-05 06:21:25)\nMerge all possible          (2023-06-05 06:21:25)\nNormalise read depths       (2023-06-05 06:21:25)\nRemove zero length segments (2023-06-05 06:21:25)\nSort link order             (2023-06-05 06:21:25)\nGraph cleaning finished     (2023-06-05 06:21:25)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-06-05 06:21:25)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-06-05 06:21:25)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/7/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-06-05 06:21:25)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-06-05 06:21:25)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-06-05 06:21:25)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2023-06-05 06:21:25)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2023-06-05 06:21:25)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2023-06-05 06:21:25)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5081\t-\t1\t5386\t4\t5082\t5078\t5078\t255\tcm:i:1134\n1\t5386\t5090\t5383\t-\t1\t5386\t5088\t5381\t293\t293\t255\tcm:i:63\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2023-06-05 06:21:25)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2023-06-05 06:21:25)\n1\t5386\t5\t5077\t-\t1\t5386\t8\t5080\t5072\t5072\t255\tcm:i:945\n1\t5386\t5093\t5384\t-\t1\t5386\t5087\t5378\t291\t291\t255\tcm:i:52\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2023-06-05 06:21:25)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5077,-,1,8,5080\n    5093,5384,-,1,5087,5378\nReference ranges:\n    1-: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 5076 points, score=5074.000394 (good)\n    line 2: 292 points, score=290.006826 (good)\nAll Seqan alignments (time to align = 0.041 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0     5085           0      5085       -      15255        100.00   100.00%\n         1       5085     5386        5085      5386       -        903        100.00   100.00%\n\n\nRead alignment summary (2023-06-05 06:21:25)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2023-06-05 06:21:25)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2023-06-05 06:21:25)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-06-05 06:21:25)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-06-05 06:21:25)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nPolishing assembly with Pilon (2023-06-05 06:21:25)\n    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any\nremaining small-scale errors with the assembly.\n\nAligning reads to find appropriate insert size range...\n  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta\n  bowtie2 -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.sam\nInsert size 1st percentile:  263\nInsert size 99th percentile: 450\n\nPilon polish round 1\n  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz\n  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam\n  samtools index 1_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix bases --frags 1_paired_alignments.bam\nNo Pilon changes\n\nPilon polish round 2\n  bowtie2-build 2_polish_input.fasta 2_polish_input.fasta\n  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 2_polish_input.fasta -S 2_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz\n  samtools sort -@ 8 -o 2_paired_alignments.bam -O bam -T temp 2_paired_alignments.sam\n  samtools index 2_paired_alignments.bam\n  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 2_polish_input.fasta --changes --output 2_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix all --frags 2_paired_alignments.bam\nNo Pilon changes\n\nSaving /galaxy/server/database/jobs_directory/000/7/working/005_polished.gfa\n\n\nRotating completed replicons (2023-06-05 06:21:32)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-06-05 06:21:42)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 minute", "plugin": "core", "name": "runtime_seconds", "raw_value": "113.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:21:43", "plugin": "core", "name": "end_epoch", "raw_value": "1685946103.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:19:50", "plugin": "core", "name": "start_epoch", "raw_value": "1685945990.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 2, "time_seconds": 220.5657377243042, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "cf9a32ff1d9b463b"}, "paired_unpaired|fastq_input_selector": "paired_collection", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|no_correct": true, "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "pilon|no_pilon": true, "pilon|min_polish_size": "1000", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2"}, "job": {"model_class": "Job", "id": "99ba897e93722d0c", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:25:32.799171", "create_time": "2023-06-05T06:22:11.868182", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-khkvt", "command_line": "ln -s '/galaxy/server/database/objects/e/8/b/dataset_e8b089f7-4390-47cf-b81a-bf14549b35c2.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/6/d/a/dataset_6dab8096-ff7b-4b96-b959-5dab18c3865c.dat' fq2.fastq && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --no_pilon --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'", "traceback": null, "params": {"paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": true}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": true}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"fastq_input12": {"id": "5fad8cb7bd24e64b", "src": "hda", "uuid": "6dab8096-ff7b-4b96-b959-5dab18c3865c"}, "fastq_input11": {"id": "99ba897e93722d0c", "src": "hda", "uuid": "e8b089f7-4390-47cf-b81a-bf14549b35c2"}}, "outputs": {"assembly_graph": {"id": "ef0b04359058ce31", "src": "hda", "uuid": "cc62c9fe-6f98-4d72-856b-a252426d4e78"}, "assembly": {"id": "3e00b21b54f36394", "src": "hda", "uuid": "30c525fd-1827-4bb4-9522-c69be27da55d"}}, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2023-06-05 06:23:39)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --no_pilon --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py       3.14.1    good       /usr/local/bin/spades.py  \n  racon                     not used                             \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nChoosing k-mer range for assembly (2023-06-05 06:23:40)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-06-05 06:23:40)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.103    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.103    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.105    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.105    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.107    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.142    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.155    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.155    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.155    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.156    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.157    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.157    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.157    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.794    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.794    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.023    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.024    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.148    40M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.150    40M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.150    40M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.152    40M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.152    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.152    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.338     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.339     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.351   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.803   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.804   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.054   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.084   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.111   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.112   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.117   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.119   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.119   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.120   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.127   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.127   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.128   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.128   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.132   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.136   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.138   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.142   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.145   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.145   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.145   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.165   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.166   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.236   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.238   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.243   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.326   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.530   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.010   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.568   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.525   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.526   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.527   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.527   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.527   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.528   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.528   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.528   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.528   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.528   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.528   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.529   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.529   131M / 131M  INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:05.529   131M / 131M  INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover trigger\n..\n   (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.082    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.083    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.083    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.083    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.083    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.083    54M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 439)   Closing gaps in paths\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 467)   Gap closing completed\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 296)   Traversing tandem repeats\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 306)   Traversed 0 loops\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 244)   Finalizing paths\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.085    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.085    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.086    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.086    54M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:09.086    54M / 172M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:09.086    54M / 172M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:09.086    54M / 172M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:09.092    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:09.093    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:09.099    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:09.099    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:09.104    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:09.110    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:09.114    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:09.119    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:09.128    54M / 172M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:09.131    54M / 172M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 9 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:09.079    54M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-06-05 06:25:13)\nFilter by read depth        (2023-06-05 06:25:13)\nFilter homopolymer loops    (2023-06-05 06:25:13)\nMerge all possible          (2023-06-05 06:25:13)\nNormalise read depths       (2023-06-05 06:25:13)\nRemove zero length segments (2023-06-05 06:25:13)\nSort link order             (2023-06-05 06:25:13)\nGraph cleaning finished     (2023-06-05 06:25:13)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-06-05 06:25:13)\nFilter by read depth        (2023-06-05 06:25:13)\nFilter homopolymer loops    (2023-06-05 06:25:13)\nMerge all possible          (2023-06-05 06:25:13)\nNormalise read depths       (2023-06-05 06:25:13)\nRemove zero length segments (2023-06-05 06:25:13)\nSort link order             (2023-06-05 06:25:13)\nGraph cleaning finished     (2023-06-05 06:25:13)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-06-05 06:25:13)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-06-05 06:25:13)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/10/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-06-05 06:25:13)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-06-05 06:25:13)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-06-05 06:25:13)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-06-05 06:25:13)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-06-05 06:25:13)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-06-05 06:25:13)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2023-06-05 06:25:13)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-06-05 06:25:23)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "\nStarting Unicycler (2023-06-05 06:23:39)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --no_pilon --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py       3.14.1    good       /usr/local/bin/spades.py  \n  racon                     not used                             \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nChoosing k-mer range for assembly (2023-06-05 06:23:40)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2023-06-05 06:23:40)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.103    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.103    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.105    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.105    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.107    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.142    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.155    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.155    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.155    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.156    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.157    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.157    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.157    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.794    45M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.794    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.023    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.024    45M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.148    40M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.150    40M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.150    40M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.152    40M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.152    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.152    40M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.338     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.339     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.351   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.803   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.804   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.054   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.084   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.111   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:03.112   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.117   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.119   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:03.119   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:03.120   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:03.127   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:03.127   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:03.128   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:03.128   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:03.132   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:03.136   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:03.138   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:03.142   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.145   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.145   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.145   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.165   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:03.166   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.236   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:03.238   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:03.243   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.244   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.326   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.530   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.010   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.568   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.525   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.526   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.527   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.527   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.527   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.528   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.528   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.528   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.528   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.528   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.528   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.529   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.529   131M / 131M  INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:05.529   131M / 131M  INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover trigger\n..\n   (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.082    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.083    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.083    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.083    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.083    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.083    54M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 439)   Closing gaps in paths\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 467)   Gap closing completed\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 296)   Traversing tandem repeats\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 306)   Traversed 0 loops\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 244)   Finalizing paths\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:09.084    54M / 172M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.085    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.085    54M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.085    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.086    54M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.086    54M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:09.086    54M / 172M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:09.086    54M / 172M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:09.086    54M / 172M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:09.092    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:09.093    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:09.099    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:09.099    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:09.104    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:09.110    54M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:09.114    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:09.119    54M / 172M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:09.128    54M / 172M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:09.131    54M / 172M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 9 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:09.079    54M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2023-06-05 06:25:13)\nFilter by read depth        (2023-06-05 06:25:13)\nFilter homopolymer loops    (2023-06-05 06:25:13)\nMerge all possible          (2023-06-05 06:25:13)\nNormalise read depths       (2023-06-05 06:25:13)\nRemove zero length segments (2023-06-05 06:25:13)\nSort link order             (2023-06-05 06:25:13)\nGraph cleaning finished     (2023-06-05 06:25:13)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2023-06-05 06:25:13)\nFilter by read depth        (2023-06-05 06:25:13)\nFilter homopolymer loops    (2023-06-05 06:25:13)\nMerge all possible          (2023-06-05 06:25:13)\nNormalise read depths       (2023-06-05 06:25:13)\nRemove zero length segments (2023-06-05 06:25:13)\nSort link order             (2023-06-05 06:25:13)\nGraph cleaning finished     (2023-06-05 06:25:13)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2023-06-05 06:25:13)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2023-06-05 06:25:13)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/10/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2023-06-05 06:25:13)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2023-06-05 06:25:13)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2023-06-05 06:25:13)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2023-06-05 06:25:13)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2023-06-05 06:25:13)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2023-06-05 06:25:13)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/10/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2023-06-05 06:25:13)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2023-06-05 06:25:23)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:23:39", "plugin": "core", "name": "start_epoch", "raw_value": "1685946219.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:25:23", "plugin": "core", "name": "end_epoch", "raw_value": "1685946323.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 minute", "plugin": "core", "name": "runtime_seconds", "raw_value": "104.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler", "tool_version": "0.4.8.0", "test_index": 3, "time_seconds": 9.58351755142212, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset", "tool_version": "5.1.0", "test_index": 0, "time_seconds": 37.047425270080566, "inputs": {"input_list": [{"src": "hda", "id": "9e2f100b2b6bc27d"}, {"src": "hda", "id": "cb4bf16bb0079524"}]}, "job": {"model_class": "Job", "id": "d1124559088896b1", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:15:03.104563", "create_time": "2023-06-05T07:14:48.843379", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-8p559", "command_line": "(   cat \"/galaxy/server/database/objects/b/9/6/dataset_b9654602-86ac-4393-94c0-b1255052afc7.dat\" ;   cat \"/galaxy/server/database/objects/7/4/8/dataset_748b0ec6-2313-42f3-9c61-7da6e683f987.dat\" ;   ) > /galaxy/server/database/objects/7/f/a/dataset_7fa4147d-ff56-4a3e-8ca8-fd16106b8559.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filename": "{\"__current_case__\": 1, \"add_name\": false}", "one_header": "false"}, "inputs": {"input_list2": {"id": "cb4bf16bb0079524", "src": "hda", "uuid": "748b0ec6-2313-42f3-9c61-7da6e683f987"}, "input_list1": {"id": "9e2f100b2b6bc27d", "src": "hda", "uuid": "b9654602-86ac-4393-94c0-b1255052afc7"}, "input_list": {"id": "9e2f100b2b6bc27d", "src": "hda", "uuid": "b9654602-86ac-4393-94c0-b1255052afc7"}}, "outputs": {"output": {"id": "88622c826b59df20", "src": "hda", "uuid": "7fa4147d-ff56-4a3e-8ca8-fd16106b8559"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-05 07:14:53", "plugin": "core", "name": "end_epoch", "raw_value": "1685949293.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:14:52", "plugin": "core", "name": "start_epoch", "raw_value": "1685949292.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset", "tool_version": "5.1.0", "test_index": 1, "time_seconds": 36.16005849838257, "inputs": {"input_list": [{"src": "hda", "id": "9db5e990aedc0a40"}, {"src": "hda", "id": "536615b49d56fc4c"}], "one_header": true, "filename|place_name": "same_multiple", "filename|add_name": true}, "job": {"model_class": "Job", "id": "f5632f66b0088088", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:15:04.176068", "create_time": "2023-06-05T07:14:52.812145", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-5v4mz", "command_line": "( awk '{if (NR==1) {print \"Sample\\t\"$0}}' \"/galaxy/server/database/objects/f/2/e/dataset_f2eaae24-4298-4734-9e61-3354db2ad4f9.dat\";   awk '{if (NR!=1) {print \"strain1.tsv\\t\"$0}}' \"/galaxy/server/database/objects/f/2/e/dataset_f2eaae24-4298-4734-9e61-3354db2ad4f9.dat\";   awk '{if (NR!=1) {print \"strain2.tsv\\t\"$0}}' \"/galaxy/server/database/objects/b/d/0/dataset_bd0f54e9-c1f8-4132-83f3-0da0bad4daab.dat\";   ) > /galaxy/server/database/objects/f/a/c/dataset_facf9e6d-950a-45da-8a06-8d09fbc1e210.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filename": "{\"__current_case__\": 0, \"add_name\": true, \"place_name\": \"same_multiple\"}", "one_header": "true"}, "inputs": {"input_list2": {"id": "536615b49d56fc4c", "src": "hda", "uuid": "bd0f54e9-c1f8-4132-83f3-0da0bad4daab"}, "input_list1": {"id": "9db5e990aedc0a40", "src": "hda", "uuid": "f2eaae24-4298-4734-9e61-3354db2ad4f9"}, "input_list": {"id": "9db5e990aedc0a40", "src": "hda", "uuid": "f2eaae24-4298-4734-9e61-3354db2ad4f9"}}, "outputs": {"output": {"id": "1023beb58f40afb0", "src": "hda", "uuid": "facf9e6d-950a-45da-8a06-8d09fbc1e210"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:14:54", "plugin": "core", "name": "end_epoch", "raw_value": "1685949294.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:14:54", "plugin": "core", "name": "start_epoch", "raw_value": "1685949294.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset", "tool_version": "5.1.0", "test_index": 2, "time_seconds": 32.4389488697052, "inputs": {"input_list": [{"src": "hda", "id": "608dc0ee4db5ceda"}, {"src": "hda", "id": "c107b3a9651c443a"}], "one_header": true}, "job": {"model_class": "Job", "id": "7150e87bf1ffb64d", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T07:15:35.605464", "create_time": "2023-06-05T07:15:23.952976", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/5.1.0", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-cr6wm", "command_line": "( awk '{if (NR==1) {print}}' \"/galaxy/server/database/objects/f/d/9/dataset_fd971435-b0b7-4109-899c-ea27836f0eca.dat\";   awk '{if (NR!=1) {print}}' \"/galaxy/server/database/objects/f/d/9/dataset_fd971435-b0b7-4109-899c-ea27836f0eca.dat\";   awk '{if (NR!=1) {print}}' \"/galaxy/server/database/objects/9/d/4/dataset_9d4373e9-3c01-41d5-87b1-e0a8833bf98a.dat\";   ) > /galaxy/server/database/objects/8/a/9/dataset_8a9e7a94-ed5e-436c-8707-4c2c34fb6511.dat", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "filename": "{\"__current_case__\": 1, \"add_name\": false}", "one_header": "true"}, "inputs": {"input_list2": {"id": "c107b3a9651c443a", "src": "hda", "uuid": "9d4373e9-3c01-41d5-87b1-e0a8833bf98a"}, "input_list1": {"id": "608dc0ee4db5ceda", "src": "hda", "uuid": "fd971435-b0b7-4109-899c-ea27836f0eca"}, "input_list": {"id": "608dc0ee4db5ceda", "src": "hda", "uuid": "fd971435-b0b7-4109-899c-ea27836f0eca"}}, "outputs": {"output": {"id": "6e8f7c60ed63238c", "src": "hda", "uuid": "8a9e7a94-ed5e-436c-8707-4c2c34fb6511"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-05 07:15:25", "plugin": "core", "name": "end_epoch", "raw_value": "1685949325.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 07:15:25", "plugin": "core", "name": "start_epoch", "raw_value": "1685949325.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-0", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 0, "time_seconds": 126.64332628250122, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "057c01e7b86ac4a7"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "227ed6b246eda85d"}}, "job": {"model_class": "Job", "id": "4f1529388dc6378e", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:26:01.990574", "create_time": "2023-06-05T06:24:15.090462", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-f4vzz", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat --pe1-2 fastq:/galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat && python '/galaxy/server/database/jobs_directory/000/14/configs/tmpm74nfy3d' < contigs.fasta > '/galaxy/server/database/objects/0/0/8/dataset_008a37ff-15a6-405f-abf7-a7048e6c7c4f.dat' && python '/galaxy/server/database/jobs_directory/000/14/configs/tmpm74nfy3d' < scaffolds.fasta > '/galaxy/server/database/objects/1/1/f/dataset_11f8b594-a19d-4370-a1e2-12db162df663.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 15, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 16, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "057c01e7b86ac4a7", "src": "hda", "uuid": "ce1491a4-fbcd-4176-aac2-89fcd674828f"}, "libraries_0|files_0|rev_reads": {"id": "227ed6b246eda85d", "src": "hda", "uuid": "90e74a73-e6ae-4c80-b5f3-87b945722b9b"}}, "outputs": {"out_contig_stats": {"id": "b2d75b3436ef7b11", "src": "hda", "uuid": "008a37ff-15a6-405f-abf7-a7048e6c7c4f"}, "out_scaffold_stats": {"id": "c839800f2f12bcc7", "src": "hda", "uuid": "11f8b594-a19d-4370-a1e2-12db162df663"}, "out_contigs": {"id": "2d799cc75c89b5fa", "src": "hda", "uuid": "0500cd41-5bdd-4a0e-86f0-878aec630909"}, "out_scaffolds": {"id": "67652236b1a762af", "src": "hda", "uuid": "37efcf2f-a5d2-4e8a-83e5-e7d39def6d5d"}, "out_log": {"id": "5679f60e9424a352", "src": "hda", "uuid": "f164e355-de5a-4e02-a046-f85e4d7076cf"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/14/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/14/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat']\n      right reads: ['/galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/14/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat\n  0:00:01.203     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\n  0:00:02.367     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.377    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.744    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.745    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.001    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.025    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.048    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.050    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.055    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.056    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.066    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.066    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.066    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat\n  0:00:03.080    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\n  0:00:03.095    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.095    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.095    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:08.382    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:08.382    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:08.392    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:08.392    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:08.392    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:08.392    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat and /galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\n  0:00:08.417    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:08.422    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:08.425    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:08.457    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:08.457    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:08.457    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml\n  0:00:08.462    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/14/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/14/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.068    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.072     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.173   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.178     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.266   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.392     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.393     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.393     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.394     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.394     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.394     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.394     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.991     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.001    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.235    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.236    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.361    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.362    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.362    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.362    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.363    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.363    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.500     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.513    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.041    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.041    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.284    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.309    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.334    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.334    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.338    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.339    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:10.007    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.009    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.009    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.009    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.009    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.009    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.010    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.011    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.011    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.011    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.022    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.023    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.023    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.029    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.029    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.030    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/before_rr.fasta\n  0:00:10.035    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph.fastg\n  0:00:10.040    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/simplified_contigs.fasta\n  0:00:10.046    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/intermediate_contigs.fasta\n  0:00:10.055    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.055    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.055    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.056    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.056    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.056    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.123   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.292   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.541   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.541   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.549    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.604   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.610   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.613   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.620   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.620   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.620   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.633   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.639   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.652    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.652    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.653    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.653    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.654    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.654    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.654    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.655    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.655    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.655    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.655    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.655    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.655    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.655    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.655    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.655    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.655    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.657    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.657    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.659    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/before_rr.fasta\n  0:00:10.666    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph.fastg\n  0:00:10.673    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K33/final_contigs.paths\n  0:00:10.684    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K33/scaffolds.paths\n  0:00:10.710    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.714    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/14/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/14/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/14/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat']\n      right reads: ['/galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/14/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat\n  0:00:01.203     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\n  0:00:02.367     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.377    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.744    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.745    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.001    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.025    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.048    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.050    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.055    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.056    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.066    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.066    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.066    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat\n  0:00:03.080    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\n  0:00:03.095    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.095    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.095    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:08.380    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:08.381    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:08.382    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:08.382    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:08.392    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:08.392    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:08.392    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:08.392    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/e/1/dataset_ce1491a4-fbcd-4176-aac2-89fcd674828f.dat and /galaxy/server/database/objects/9/0/e/dataset_90e74a73-e6ae-4c80-b5f3-87b945722b9b.dat\n  0:00:08.417    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:08.422    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:08.425    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:08.457    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:08.457    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:08.457    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml\n  0:00:08.462    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/14/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/14/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.068    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.072     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.173   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.178     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.266   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.392     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.393     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.393     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.394     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.394     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.394     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.394     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.991     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.001    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.235    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.236    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.361    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.362    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.362    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.362    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.363    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.363    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.500     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.513    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.041    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.041    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.284    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.309    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.334    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.334    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.338    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.339    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:10.007    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.009    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.009    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.009    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.009    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.009    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.010    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.010    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.011    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.011    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.011    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.011    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.011    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.022    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.023    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.023    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.029    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.029    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.030    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/before_rr.fasta\n  0:00:10.035    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph.fastg\n  0:00:10.040    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/simplified_contigs.fasta\n  0:00:10.046    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/intermediate_contigs.fasta\n  0:00:10.055    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.055    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.055    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.056    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.056    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.056    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.123   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.292   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.541   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.541   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.549    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.604   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.610   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.613   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.620   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.620   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.620   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.633   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.639   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.652    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.652    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.653    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.653    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.654    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.654    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.654    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.654    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.655    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.655    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.655    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.655    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.655    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.655    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.655    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.655    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.655    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.655    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.657    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.657    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.657    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.657    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.657    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.657    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.659    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K33/before_rr.fasta\n  0:00:10.666    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K33/assembly_graph.fastg\n  0:00:10.673    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K33/final_contigs.paths\n  0:00:10.684    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K33/scaffolds.paths\n  0:00:10.710    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.714    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/14/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:25:32", "plugin": "core", "name": "start_epoch", "raw_value": "1685946332.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:25:52", "plugin": "core", "name": "end_epoch", "raw_value": "1685946352.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "20 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "20.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-1", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 1, "time_seconds": 47.71561336517334, "inputs": {"sc": false, "onlyassembler": true, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "1a6d33b3c055c69a"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "aa7632c394a9f3c2"}}, "job": {"model_class": "Job", "id": "b2d75b3436ef7b11", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:26:21.112940", "create_time": "2023-06-05T06:25:53.490835", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-mqljc", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output  --only-assembler  -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fasta:/galaxy/server/database/objects/9/5/1/dataset_951edb08-dfe0-4fdc-a801-e6ed74e39141.dat --pe1-2 fasta:/galaxy/server/database/objects/4/1/c/dataset_41c7f20b-d66b-4a27-849f-d389fd7fd9fe.dat && python '/galaxy/server/database/jobs_directory/000/17/configs/tmp8kkci4m6' < contigs.fasta > '/galaxy/server/database/objects/0/3/4/dataset_034bf84b-d1a1-453a-8a19-833374b7e6b9.dat' && python '/galaxy/server/database/jobs_directory/000/17/configs/tmp8kkci4m6' < scaffolds.fasta > '/galaxy/server/database/objects/9/3/3/dataset_933256a4-da56-445d-81d2-99e7cc8377dc.dat'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 22, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 23, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "true", "sc": "false"}, "inputs": {"libraries_0|files_0|rev_reads": {"id": "aa7632c394a9f3c2", "src": "hda", "uuid": "41c7f20b-d66b-4a27-849f-d389fd7fd9fe"}, "libraries_0|files_0|fwd_reads": {"id": "1a6d33b3c055c69a", "src": "hda", "uuid": "951edb08-dfe0-4fdc-a801-e6ed74e39141"}}, "outputs": {"out_contig_stats": {"id": "5196f1bdb307630a", "src": "hda", "uuid": "034bf84b-d1a1-453a-8a19-833374b7e6b9"}, "out_scaffold_stats": {"id": "6b6ef07bcc40abe9", "src": "hda", "uuid": "933256a4-da56-445d-81d2-99e7cc8377dc"}, "out_contigs": {"id": "6fcbfb480a76c94f", "src": "hda", "uuid": "e2d0fc03-28a3-46c4-bf48-dddbca7fcfee"}, "out_scaffolds": {"id": "b6590621bac62c29", "src": "hda", "uuid": "d4d31e20-5f88-4951-afc3-d0d97ff4dea5"}, "out_log": {"id": "532fedf68c7946cc", "src": "hda", "uuid": "10b70813-d114-44b4-8d80-0ec2dc418b3f"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/17/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/9/5/1/dataset_951edb08-dfe0-4fdc-a801-e6ed74e39141.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/4/1/c/dataset_41c7f20b-d66b-4a27-849f-d389fd7fd9fe.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/17/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/9/5/1/dataset_951edb08-dfe0-4fdc-a801-e6ed74e39141.dat']\n      right reads: ['/galaxy/server/database/objects/4/1/c/dataset_41c7f20b-d66b-4a27-849f-d389fd7fd9fe.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.066    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.071     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.162   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.168     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.259   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.388     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.389     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.389     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.390     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.006     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.371    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.372    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.372    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.372    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.373    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.373    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.518     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:02.535    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.027    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:03.028    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.277    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.301    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.327    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.327    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.329    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.331    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.331    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.332    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.332    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.333    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.333    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.333    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.333    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.349    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.349    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.355    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.368    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.405    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.500    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.850    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.444    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.501    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.229    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.230    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.230    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.230    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.230    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.230    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.232    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.232    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.233    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.233    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.233    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:08.434     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:08.443    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:08.918    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:08.918    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:09.161    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:09.185    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:09.216    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:09.216    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:09.217    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:09.221    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:09.221    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:09.223    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:09.223    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:09.223    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:09.223    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.227    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:09.227    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:09.227    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:09.227    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:09.227    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:09.227    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:0\n..\n.284    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:11.284    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.286    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.286    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.286    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.286    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:11.286    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.286    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.286    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.296    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.296    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.296    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.304    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.304    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.305    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:11.310    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:11.316    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta\n  0:00:11.322    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta\n  0:00:11.331    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.332    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.332    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.332    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.332    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.332    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.396   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.572   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.832   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.833   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:11.845    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.903   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.909   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.912   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.917   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.917   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.917   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.927   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.932   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.949    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.949    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.949    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.949    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.950    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.950    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.951    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.952    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.952    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.952    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.952    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.952    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.952    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.952    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.952    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.952    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.952    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.953    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.953    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.957    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:11.964    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:11.969    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths\n  0:00:11.979    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths\n  0:00:11.998    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.001    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/17/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/9/5/1/dataset_951edb08-dfe0-4fdc-a801-e6ed74e39141.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/4/1/c/dataset_41c7f20b-d66b-4a27-849f-d389fd7fd9fe.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/17/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/9/5/1/dataset_951edb08-dfe0-4fdc-a801-e6ed74e39141.dat']\n      right reads: ['/galaxy/server/database/objects/4/1/c/dataset_41c7f20b-d66b-4a27-849f-d389fd7fd9fe.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.066    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.071     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.162   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.168     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.259   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.388     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.389     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.389     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.390     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.006     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.371    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.372    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.372    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.372    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.373    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.373    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.518     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:02.535    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.027    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:03.028    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.277    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.301    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.327    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.327    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.329    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.331    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.331    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.332    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.332    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.333    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.333    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.333    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.333    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.349    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.349    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.355    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.368    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.405    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.500    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.850    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.444    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.501    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.229    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.230    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.230    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.230    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.230    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.230    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.230    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.232    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.232    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.233    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.233    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.233    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:08.434     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:08.443    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:08.918    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:08.918    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:09.161    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:09.185    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:09.216    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:09.216    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:09.217    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:09.221    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:09.221    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:09.223    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:09.223    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:09.223    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:09.223    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.227    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:09.227    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:09.227    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:09.227    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:09.227    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:09.227    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:09.227    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:0\n..\n.284    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:11.284    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.286    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.286    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.286    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.286    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.286    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.286    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:11.286    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.286    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.286    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.296    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.296    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.296    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.304    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.304    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.305    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:11.310    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:11.316    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta\n  0:00:11.322    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta\n  0:00:11.331    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.332    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.332    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.332    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.332    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.332    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.396   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.572   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.832   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.833   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:11.845    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.903   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.909   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.912   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.917   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.917   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.917   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.927   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.932   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.949    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.949    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.949    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.949    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.950    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.950    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.950    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.951    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.952    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.952    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.952    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.952    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.952    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.952    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.952    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.952    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.952    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.952    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.953    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.953    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.953    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.953    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.953    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.953    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.957    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:11.964    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:11.969    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths\n  0:00:11.979    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths\n  0:00:11.998    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.001    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:25:56", "plugin": "core", "name": "start_epoch", "raw_value": "1685946356.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:26:09", "plugin": "core", "name": "end_epoch", "raw_value": "1685946369.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "13 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "13.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-2", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 2, "time_seconds": 45.76675629615784, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "049435b83d842013"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "941d489abb854e3f"}}, "job": {"model_class": "Job", "id": "67652236b1a762af", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:26:48.086200", "create_time": "2023-06-05T06:26:22.539199", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-bdc8k", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat && python '/galaxy/server/database/jobs_directory/000/20/configs/tmp_mqe_wwr' < contigs.fasta > '/galaxy/server/database/objects/3/0/a/dataset_30a891d6-8291-4315-9a13-4cc733f690f0.dat' && python '/galaxy/server/database/jobs_directory/000/20/configs/tmp_mqe_wwr' < scaffolds.fasta > '/galaxy/server/database/objects/a/4/0/dataset_a407d2e5-c6b1-45e8-ab6f-e9824d4e76a8.dat'", "traceback": null, "params": {"__input_ext": "\"fastq.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 29, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 30, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "049435b83d842013", "src": "hda", "uuid": "47128eed-6924-47d4-859a-7f78ec8fbc46"}, "libraries_0|files_0|rev_reads": {"id": "941d489abb854e3f", "src": "hda", "uuid": "334e656e-c71d-44d7-b2b5-a4912040ecf0"}}, "outputs": {"out_contig_stats": {"id": "cd72094718c367ee", "src": "hda", "uuid": "30a891d6-8291-4315-9a13-4cc733f690f0"}, "out_scaffold_stats": {"id": "3947e396b92d4892", "src": "hda", "uuid": "a407d2e5-c6b1-45e8-ab6f-e9824d4e76a8"}, "out_scaffolds": {"id": "b7355fb7f45e9bdd", "src": "hda", "uuid": "49ea4ce4-e159-4eb6-b742-396f189f1e1f"}, "out_log": {"id": "25ae25ff031db736", "src": "hda", "uuid": "48ed00c3-21f4-481e-a680-b976d077f9b1"}, "out_contigs": {"id": "42272e8b18870074", "src": "hda", "uuid": "97a0da85-83ca-489d-a195-b84b809b0f02"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/20/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat']\n      right reads: ['/galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat\n  0:00:01.238     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\n  0:00:02.406     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.416    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.818    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.818    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.094    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.125    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.153    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.155    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.159    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.160    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.173    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.173    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.173    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat\n  0:00:03.190    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\n  0:00:03.208    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.208    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.208    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.228    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.228    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.246    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.246    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.246    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.246    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat and /galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\n  0:00:03.278    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.283    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.286    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.319    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n  0:00:03.324    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.063    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.067     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.154   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.159     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.252   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.366     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.367     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.367     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.367     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.368     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.368     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.368     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.998     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.007    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.007    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.388    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.389    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.389    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.389    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.390    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.390    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.598     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.612    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.339    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.365    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.389    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.389    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.392    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.392    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:10.092    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.095    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.095    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.095    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.095    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.095    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.095    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.095    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.110    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.111    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.111    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.121    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.121    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.122    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:10.128    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:10.133    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta\n  0:00:10.139    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta\n  0:00:10.148    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.148    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.148    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.148    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.148    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.148    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.206   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.378   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.635   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.635   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.643    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.697   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.704   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.713   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.719   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.719   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.719   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.730   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.734   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.750    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.750    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.750    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.750    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.751    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.751    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.751    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.752    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.752    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.752    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.752    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.752    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.752    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.752    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.752    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.752    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.752    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.754    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.754    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.754    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.754    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:10.764    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:10.771    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths\n  0:00:10.780    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths\n  0:00:10.797    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.800    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/20/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat']\n      right reads: ['/galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat\n  0:00:01.238     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\n  0:00:02.406     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.416    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.818    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.818    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.094    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.125    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.153    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.155    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.159    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.160    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.173    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.173    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.173    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat\n  0:00:03.190    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\n  0:00:03.208    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.208    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.208    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.227    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.228    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.228    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.246    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.246    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.246    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.246    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/7/1/dataset_47128eed-6924-47d4-859a-7f78ec8fbc46.dat and /galaxy/server/database/objects/3/3/4/dataset_334e656e-c71d-44d7-b2b5-a4912040ecf0.dat\n  0:00:03.278    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.283    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.286    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.319    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n  0:00:03.324    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.063    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.067     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.154   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.159     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.252   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.366     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.367     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.367     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.367     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.368     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.368     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.368     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.998     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.007    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.007    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.249    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.388    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.389    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.389    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.389    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.390    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.390    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.598     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.612    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.339    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.365    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.389    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.389    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.392    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.392    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:10.092    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.095    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.095    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.095    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.095    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.095    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.095    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.095    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.095    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.095    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.110    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.111    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.111    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.121    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.121    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.122    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:10.128    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:10.133    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta\n  0:00:10.139    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta\n  0:00:10.148    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.148    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.148    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.148    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.148    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.148    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.206   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.378   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.635   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.635   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.643    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.697   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.704   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.713   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.719   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.719   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.719   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.730   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.734   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.750    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.750    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.750    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.750    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.751    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.751    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.751    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.751    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.752    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.752    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.752    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.752    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.752    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.752    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.752    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.752    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.752    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.752    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.753    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.753    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.753    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.753    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.754    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.754    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.754    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.754    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta\n  0:00:10.764    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg\n  0:00:10.771    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths\n  0:00:10.780    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths\n  0:00:10.797    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.800    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:26:24", "plugin": "core", "name": "start_epoch", "raw_value": "1685946384.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:26:38", "plugin": "core", "name": "end_epoch", "raw_value": "1685946398.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "14 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "14.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-3", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 3, "time_seconds": 58.51159644126892, "inputs": {"sc": false, "careful": false, "kmer_choice|auto_kmer_choice": true, "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "908853c7c834eebf"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "4103412ad0d8e2cc"}}, "job": {"model_class": "Job", "id": "aa7632c394a9f3c2", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:27:20.181759", "create_time": "2023-06-05T06:26:42.983946", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-ggzkv", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250}  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat --pe1-2 fastq:/galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat && python '/galaxy/server/database/jobs_directory/000/23/configs/tmpcrbwm4e_' < contigs.fasta > '/galaxy/server/database/objects/d/8/f/dataset_d8f10d1c-2350-4c9e-a8b9-3c8a42e4aa23.dat' && python '/galaxy/server/database/jobs_directory/000/23/configs/tmpcrbwm4e_' < scaffolds.fasta > '/galaxy/server/database/objects/8/3/c/dataset_83cce761-6ef4-4b2c-add7-4f2e8af6dd00.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 36, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 37, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 1, \"auto_kmer_choice\": true}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "908853c7c834eebf", "src": "hda", "uuid": "f5ebb90f-7f4f-4862-bf10-0c4112a95b1d"}, "libraries_0|files_0|rev_reads": {"id": "4103412ad0d8e2cc", "src": "hda", "uuid": "e942931e-aed7-40f8-b394-4248ecef4587"}}, "outputs": {"out_contig_stats": {"id": "7bedae578e5175c8", "src": "hda", "uuid": "d8f10d1c-2350-4c9e-a8b9-3c8a42e4aa23"}, "out_scaffold_stats": {"id": "a90bf9f88ba5c095", "src": "hda", "uuid": "83cce761-6ef4-4b2c-add7-4f2e8af6dd00"}, "out_contigs": {"id": "f9153a235bd8ec71", "src": "hda", "uuid": "8d39ff17-9aed-4e85-839e-c12d8cc2cf5b"}, "out_scaffolds": {"id": "4c45bc36dcab1d21", "src": "hda", "uuid": "0b7e836e-fb70-4a55-b237-ffdc14ede620"}, "out_log": {"id": "36caea444d5d823f", "src": "hda", "uuid": "4eebbc83-61c9-493d-ab37-d2065ee820d1"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/23/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/23/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat']\n      right reads: ['/galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat\n  0:00:01.256     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\n  0:00:02.498     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.508    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.938    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.938    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.182    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.206    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.230    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.233    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.237    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.238    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.248    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.248    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.248    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat\n  0:00:03.263    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\n  0:00:03.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.277    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.295    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.295    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.306    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.306    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.306    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.306    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat and /galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\n  0:00:03.335    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.339    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.342    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.379    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.379    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.379    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n  0:00:03.384    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.067    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.073     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.165   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.172     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.267   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.382     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.382     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.382     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.383     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.384     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.384     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.384     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.014     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.024    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.024    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.267    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.268    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.398    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.399    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.399    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.400    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.400    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.400    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.624     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:02.639    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.144    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.144    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.407    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.433    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.460    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:03.460    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.469    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.471    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:03.471    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea\n..\n short gaps\n  0:00:08.070    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:08.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:08.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:08.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:08.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:08.072    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.072    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.085    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:08.085    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:08.085    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:08.092    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.092    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:08.093    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:08.098    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:08.104    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/simplified_contigs.fasta\n  0:00:08.109    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/intermediate_contigs.fasta\n  0:00:08.118    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:08.119    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.119    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.119    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:08.119    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:08.119    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:08.184   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.353   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.610   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.610   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:08.622    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.680   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.686   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.689   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.693   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.693   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.693   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.704   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.708   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.724    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.725    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.725    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.725    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.725    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.726    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.726    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.726    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.726    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.726    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.726    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.727    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.727    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.728    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.728    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:08.729    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:08.735    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:08.740    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/final_contigs.paths\n  0:00:08.749    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/scaffolds.paths\n  0:00:08.766    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.769    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/23/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/23/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat']\n      right reads: ['/galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat\n  0:00:01.256     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\n  0:00:02.498     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.508    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.938    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.938    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.182    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.206    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.230    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.233    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.237    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.238    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.248    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.248    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.248    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat\n  0:00:03.263    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\n  0:00:03.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.277    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.293    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.295    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.295    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.306    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.306    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.306    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.306    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/5/e/dataset_f5ebb90f-7f4f-4862-bf10-0c4112a95b1d.dat and /galaxy/server/database/objects/e/9/4/dataset_e942931e-aed7-40f8-b394-4248ecef4587.dat\n  0:00:03.335    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.339    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.342    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.379    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.379    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.379    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n  0:00:03.384    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.067    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.073     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.165   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.172     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.267   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.382     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.382     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.382     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.383     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.384     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.384     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.384     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.014     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.024    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.024    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.267    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.268    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.398    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.399    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.399    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.400    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.400    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.400    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.624     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:02.639    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.144    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.144    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.407    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.433    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.460    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:03.460    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.469    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.471    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:03.471    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea\n..\n short gaps\n  0:00:08.070    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:08.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:08.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:08.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:08.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:08.072    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:08.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:08.072    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.072    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.085    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:08.085    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:08.085    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:08.092    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.092    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:08.093    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:08.098    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:08.104    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/simplified_contigs.fasta\n  0:00:08.109    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/intermediate_contigs.fasta\n  0:00:08.118    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:08.119    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.119    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.119    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:08.119    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:08.119    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:08.184   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.353   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.610   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.610   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:08.622    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.680   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.686   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.689   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.693   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.693   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.693   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.704   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.708   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.724    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.725    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.725    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.725    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.725    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.725    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.726    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.726    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.726    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.726    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.726    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.726    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.726    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.726    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.727    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.727    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.728    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.728    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.728    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.728    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.728    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.728    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:08.729    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K55/before_rr.fasta\n  0:00:08.735    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K55/assembly_graph.fastg\n  0:00:08.740    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/final_contigs.paths\n  0:00:08.749    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K55/scaffolds.paths\n  0:00:08.766    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.769    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:26:45", "plugin": "core", "name": "start_epoch", "raw_value": "1685946405.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:27:11", "plugin": "core", "name": "end_epoch", "raw_value": "1685946431.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "26 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "26.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-4", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 4, "time_seconds": 49.50653409957886, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "77", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "54bdd771e1fa2064"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "c0825964d0b1c4da"}}, "job": {"model_class": "Job", "id": "6fcbfb480a76c94f", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:27:38.403633", "create_time": "2023-06-05T06:27:09.197659", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-w7zpq", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"77\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat --pe1-2 fastq:/galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat && python '/galaxy/server/database/jobs_directory/000/26/configs/tmpf14qy8do' < contigs.fasta > '/galaxy/server/database/objects/b/c/f/dataset_bcf7a3ba-44a1-4004-be8f-5b47a5c54b14.dat' && python '/galaxy/server/database/jobs_directory/000/26/configs/tmpf14qy8do' < scaffolds.fasta > '/galaxy/server/database/objects/8/0/a/dataset_80a41232-5f50-43d0-9c35-de2c4e9905ae.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 43, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 44, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"77\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "54bdd771e1fa2064", "src": "hda", "uuid": "7242b59d-50e3-4492-9a06-e53e3928e582"}, "libraries_0|files_0|rev_reads": {"id": "c0825964d0b1c4da", "src": "hda", "uuid": "478ed469-7abf-45fe-9486-fdaa4af6bcbc"}}, "outputs": {"out_contig_stats": {"id": "55b3f22ba671bcaa", "src": "hda", "uuid": "bcf7a3ba-44a1-4004-be8f-5b47a5c54b14"}, "out_scaffold_stats": {"id": "fcb7cb909e5e76a6", "src": "hda", "uuid": "80a41232-5f50-43d0-9c35-de2c4e9905ae"}, "out_contigs": {"id": "021b10e1269692c0", "src": "hda", "uuid": "622d98f2-8583-4174-8b03-0c7da616057c"}, "out_scaffolds": {"id": "249a5d70e527f098", "src": "hda", "uuid": "d2f373ca-bffc-4688-9925-58a7a3463a07"}, "out_log": {"id": "f7f53aa4ee53ceda", "src": "hda", "uuid": "98f3d979-d203-4028-b6d3-68f657b86183"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/26/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/26/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat']\n      right reads: ['/galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/26/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat\n  0:00:01.220     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\n  0:00:02.364     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.373    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.771    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.771    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.053    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.081    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.111    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.114    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.118    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.119    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.129    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.129    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.129    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat\n  0:00:03.143    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\n  0:00:03.157    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.157    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.157    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.174    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.174    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.183    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.183    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.183    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.183    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat and /galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\n  0:00:03.207    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.212    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.215    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.247    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.247    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.247    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n  0:00:03.251    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/26/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/26/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.062    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.065     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.153   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.158     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.247   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.357     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.357     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.358     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.358     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.359     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.360     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.360     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:00.954     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.962    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.963    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.202    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.202    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.343    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.344    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.344    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.345    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.345    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.345    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:02.465     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:02.476    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.933    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:02.933    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.181    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.206    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.236    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.236    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.243    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.245    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:07.555    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.557    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.557    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.557    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.557    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.558    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.558    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.559    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.559    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.559    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.559    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:07.559    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.559    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.559    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.567    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.567    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.567    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.573    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.573    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:07.574    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:07.579    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:07.583    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/simplified_contigs.fasta\n  0:00:07.589    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/intermediate_contigs.fasta\n  0:00:07.598    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:07.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.655   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.830   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.080   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.080   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:08.092    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.146   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.154   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.156   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.163   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.163   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.163   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.174   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.178   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.192    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.193    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.193    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.193    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.193    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.194    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.194    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.194    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.194    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.194    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.194    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.194    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.195    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.195    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.195    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.196    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.196    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.197    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.197    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.197    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.197    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:08.198    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:08.204    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:08.212    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/final_contigs.paths\n  0:00:08.221    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/scaffolds.paths\n  0:00:08.240    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.242    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/26/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/26/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/26/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat']\n      right reads: ['/galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/26/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/26/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat\n  0:00:01.220     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\n  0:00:02.364     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.373    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.771    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.771    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.053    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.081    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.111    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.114    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.118    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.119    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.129    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.129    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.129    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat\n  0:00:03.143    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\n  0:00:03.157    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.157    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.157    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.173    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.174    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.174    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.183    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.183    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.183    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.183    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/2/4/dataset_7242b59d-50e3-4492-9a06-e53e3928e582.dat and /galaxy/server/database/objects/4/7/8/dataset_478ed469-7abf-45fe-9486-fdaa4af6bcbc.dat\n  0:00:03.207    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.212    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.215    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.247    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.247    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.247    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n  0:00:03.251    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/26/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/26/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/26/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.062    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.065     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.153   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.158     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.247   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.357     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.357     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.358     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.358     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.359     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.360     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.360     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:00.954     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.962    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.963    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.202    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.202    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.343    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.344    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.344    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.345    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.345    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.345    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:02.465     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:02.476    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.933    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:02.933    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.181    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.206    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.236    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.236    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.243    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.245    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:07.555    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.557    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.557    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.557    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.557    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.558    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.558    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.558    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.559    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.559    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.559    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.559    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:07.559    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.559    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.559    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.567    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.567    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.567    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.573    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.573    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:07.574    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:07.579    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:07.583    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/simplified_contigs.fasta\n  0:00:07.589    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/intermediate_contigs.fasta\n  0:00:07.598    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.598    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:07.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.598    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.655   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.830   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.080   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.080   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:08.092    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.146   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.154   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.156   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.163   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.163   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.163   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.174   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.178   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.192    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.193    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.193    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.193    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.193    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.193    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.194    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.194    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.194    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.194    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.194    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.194    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.194    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.195    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.195    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.195    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.196    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.196    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.196    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.196    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.196    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.197    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.197    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.197    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.197    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.197    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.197    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:08.198    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/26/working//K77/before_rr.fasta\n  0:00:08.204    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/26/working//K77/assembly_graph.fastg\n  0:00:08.212    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/final_contigs.paths\n  0:00:08.221    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/26/working//K77/scaffolds.paths\n  0:00:08.240    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.242    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/26/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/26/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/26/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/26/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/26/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:27:14", "plugin": "core", "name": "start_epoch", "raw_value": "1685946434.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:27:27", "plugin": "core", "name": "end_epoch", "raw_value": "1685946447.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "13 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "13.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-5", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 5, "time_seconds": 65.07450079917908, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "71a3ca5efcd177ec"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "7e6cc497086454ee"}, "contig_graph_out": true, "scaffold_graph_out": true}, "job": {"model_class": "Job", "id": "941d489abb854e3f", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:28:23.479336", "create_time": "2023-06-05T06:27:41.157892", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-dtwlb", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat --pe1-2 fastq:/galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat && python '/galaxy/server/database/jobs_directory/000/30/configs/tmpkww7mzo5' < contigs.fasta > '/galaxy/server/database/objects/6/1/9/dataset_619452d7-6ea5-4420-86da-9a35033e3480.dat' && python '/galaxy/server/database/jobs_directory/000/30/configs/tmpkww7mzo5' < scaffolds.fasta > '/galaxy/server/database/objects/3/e/0/dataset_3e0692db-eec7-49c9-b088-3bfd9a741dd0.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "true", "contig_graph_out": "true", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 52, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 51, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "71a3ca5efcd177ec", "src": "hda", "uuid": "5fc36e9b-1b84-4c37-b245-c01ee06d515e"}, "libraries_0|files_0|rev_reads": {"id": "7e6cc497086454ee", "src": "hda", "uuid": "4f129e59-f58d-4b8f-93cf-61cd896baf5e"}}, "outputs": {"out_scaffolds": {"id": "b0907a04a55b163d", "src": "hda", "uuid": "35273034-9ed0-4e47-8e9c-ed0df61d4532"}, "contig_graph": {"id": "33f40c912ba294d5", "src": "hda", "uuid": "dd2b58ed-7311-4918-bb92-7e97bac138bf"}, "out_contigs": {"id": "bb73f67fc5abd14c", "src": "hda", "uuid": "60648dd1-7097-40b4-a019-63355917cbc8"}, "out_log": {"id": "2d08f013cfb5496c", "src": "hda", "uuid": "50289a4b-680d-41ed-bd5c-d16e00f2828e"}, "scaffold_graph": {"id": "23e1cae28125f3cb", "src": "hda", "uuid": "f0070314-8881-4440-95e4-120663449fa5"}, "out_contig_stats": {"id": "ad39a9c794df934b", "src": "hda", "uuid": "619452d7-6ea5-4420-86da-9a35033e3480"}, "out_scaffold_stats": {"id": "f7fbe0c5e24a03f0", "src": "hda", "uuid": "3e0692db-eec7-49c9-b088-3bfd9a741dd0"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/30/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/30/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat']\n      right reads: ['/galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/30/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/30/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/30/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/30/working/corrected/configs/config.info\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.004     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.006     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.006     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.006     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:01.303     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\n  0:00:02.604     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.615    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.047    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.048    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.331    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.404    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.407    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.413    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.414    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.426    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:03.443    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\n  0:00:03.459    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.459    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.459    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.473    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.473    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.486    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.486    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.486    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.486    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat and /galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\n  0:00:03.513    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.517    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.520    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.557    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.557    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.557    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/30/working/corrected/corrected.yaml\n  0:00:03.564    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/30/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/30/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/30/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.073    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.079     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.186   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.192     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.288   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.422     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.422     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.423     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.423     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.423     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.165     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.174    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.174    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.446    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.446    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.586    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.587    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.587    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.588    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.588    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.588    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.885     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.899    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.371    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.371    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.657    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.709    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.709    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.714    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.716    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:10.340    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.342    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.343    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.343    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.343    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.343    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.343    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.343    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.356    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.356    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.356    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.361    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.362    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.362    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/before_rr.fasta\n  0:00:10.367    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph.fastg\n  0:00:10.372    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/simplified_contigs.fasta\n  0:00:10.377    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/intermediate_contigs.fasta\n  0:00:10.385    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.385    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.385    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.385    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.385    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.385    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.446   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.612   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.861   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.861   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.875    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.931   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.937   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.939   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.946   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.947   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.947   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.955   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.959   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.975    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.975    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.975    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.975    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.975    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.976    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.976    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.976    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.976    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.976    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.976    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.976    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.977    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.977    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.977    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.977    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.977    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.977    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.977    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.977    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.977    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.978    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.978    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.978    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.979    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.979    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.979    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.979    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.979    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.980    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/before_rr.fasta\n  0:00:10.985    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph.fastg\n  0:00:10.990    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/30/working//K33/final_contigs.paths\n  0:00:10.999    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/30/working//K33/scaffolds.paths\n  0:00:11.016    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.019    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/30/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/30/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/30/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/30/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/30/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/30/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/30/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/30/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/30/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/30/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat']\n      right reads: ['/galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/30/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/30/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/30/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/30/working/corrected/configs/config.info\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.004     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.006     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.006     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.006     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:01.303     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\n  0:00:02.604     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.615    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.047    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.048    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.331    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.368    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.404    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.407    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.413    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.414    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.426    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:03.443    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\n  0:00:03.459    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.459    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.459    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.472    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.473    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.473    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.486    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.486    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.486    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.486    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat and /galaxy/server/database/objects/4/f/1/dataset_4f129e59-f58d-4b8f-93cf-61cd896baf5e.dat\n  0:00:03.513    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.517    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.520    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.557    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.557    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.557    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/30/working/corrected/corrected.yaml\n  0:00:03.564    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/30/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/30/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/30/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.073    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.079     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.186   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.192     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.288   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.422     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.422     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.423     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.423     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.423     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.165     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.174    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.174    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.446    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.446    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.586    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.587    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.587    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.588    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.588    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.588    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.885     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.899    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.371    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.371    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.657    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.709    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.709    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.714    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.716    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:10.340    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.342    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.343    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.343    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.343    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.343    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.343    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.343    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.343    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.343    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.356    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.356    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.356    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.361    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.362    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.362    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/before_rr.fasta\n  0:00:10.367    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph.fastg\n  0:00:10.372    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/simplified_contigs.fasta\n  0:00:10.377    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/intermediate_contigs.fasta\n  0:00:10.385    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.385    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.385    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.385    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.385    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.385    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.446   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.612   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.861   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.861   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.875    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.931   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.937   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.939   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.946   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.947   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.947   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.955   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.959   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.975    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.975    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.975    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.975    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.975    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.976    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.976    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.976    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.976    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.976    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.976    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.976    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.977    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.977    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.977    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.977    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.977    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.977    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.977    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.977    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.977    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.978    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.978    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.978    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.979    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.979    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.979    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.979    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.979    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.979    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.979    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.979    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.980    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/30/working//K33/before_rr.fasta\n  0:00:10.985    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/30/working//K33/assembly_graph.fastg\n  0:00:10.990    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/30/working//K33/final_contigs.paths\n  0:00:10.999    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/30/working//K33/scaffolds.paths\n  0:00:11.016    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.019    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/30/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/30/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/30/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/30/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/30/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/30/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/30/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/30/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "16 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "16.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:28:13", "plugin": "core", "name": "end_epoch", "raw_value": "1685946493.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:27:57", "plugin": "core", "name": "start_epoch", "raw_value": "1685946477.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-6", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 6, "time_seconds": 65.68726682662964, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "71a3ca5efcd177ec"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "d3f50e784bc8a099"}}, "job": {"model_class": "Job", "id": "3947e396b92d4892", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:28:43.644685", "create_time": "2023-06-05T06:27:57.145990", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-8gp7z", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat --pe1-2 fastq:/galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat && python '/galaxy/server/database/jobs_directory/000/32/configs/tmpncqo9vq9' < contigs.fasta > '/galaxy/server/database/objects/6/3/1/dataset_631199ac-a56e-45ae-9783-fa0c9ef5d721.dat' && python '/galaxy/server/database/jobs_directory/000/32/configs/tmpncqo9vq9' < scaffolds.fasta > '/galaxy/server/database/objects/a/3/2/dataset_a326b9cf-1dcb-4e41-8e21-24917c7df70a.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 52, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 60, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "71a3ca5efcd177ec", "src": "hda", "uuid": "5fc36e9b-1b84-4c37-b245-c01ee06d515e"}, "libraries_0|files_0|rev_reads": {"id": "d3f50e784bc8a099", "src": "hda", "uuid": "03a846c8-cb95-4089-9682-98a985afa4b6"}}, "outputs": {"out_contig_stats": {"id": "4de468f269e5aafe", "src": "hda", "uuid": "631199ac-a56e-45ae-9783-fa0c9ef5d721"}, "out_scaffold_stats": {"id": "b7733f80cb7e4af0", "src": "hda", "uuid": "a326b9cf-1dcb-4e41-8e21-24917c7df70a"}, "out_contigs": {"id": "663eaf109f53ec32", "src": "hda", "uuid": "0d2b68e3-294d-42f5-b16f-a7f3369f8743"}, "out_scaffolds": {"id": "ff045eeba99cfa36", "src": "hda", "uuid": "1c1eab6f-16b5-467c-8a50-038e2ab2589e"}, "out_log": {"id": "1595d1f78039647a", "src": "hda", "uuid": "4d86fce8-acf8-4fa5-a148-6718ddeadef8"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/32/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/32/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat']\n      right reads: ['/galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/32/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:01.204     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\n  0:00:02.414     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.423    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.798    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.798    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.048    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.073    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.105    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.108    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.112    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.113    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.124    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.124    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.124    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:03.138    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\n  0:00:03.154    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.154    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.154    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.177    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.177    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.190    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.190    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.190    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.190    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat and /galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\n  0:00:03.216    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.220    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.223    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.259    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.259    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.259    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n  0:00:03.264    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/32/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/32/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.066    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.070     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.164   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.168     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.259   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.397     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.398     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.398     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.399     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.400     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.400     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.400     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.019     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.031    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.031    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.280    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.280    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.405    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.405    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.406    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.406    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.406    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.594     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.606    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.123    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.123    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.377    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.403    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.427    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.427    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.430    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.431    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:10.021    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.022    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.022    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.022    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.022    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.022    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.022    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.023    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.023    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.023    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.023    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.023    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.023    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.033    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.033    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.033    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.040    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.040    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.041    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:10.046    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:10.051    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/simplified_contigs.fasta\n  0:00:10.055    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/intermediate_contigs.fasta\n  0:00:10.065    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.065    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.065    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.065    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.065    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.065    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.126   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.294   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.550   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.550   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.560    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.617   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.624   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.629   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.645   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.651   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.668    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.668    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.668    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.668    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.668    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.669    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.669    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.669    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.669    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.670    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.670    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.670    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.670    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.670    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.670    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.670    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.671    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.671    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.672    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:10.679    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:10.684    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/final_contigs.paths\n  0:00:10.692    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/scaffolds.paths\n  0:00:10.710    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.712    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/32/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/32/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/32/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat']\n      right reads: ['/galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/32/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/32/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:01.204     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\n  0:00:02.414     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.423    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.798    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.798    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.048    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.073    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.105    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.108    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.112    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.113    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.124    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.124    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.124    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat\n  0:00:03.138    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\n  0:00:03.154    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.154    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.154    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.176    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.177    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.177    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.190    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.190    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.190    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.190    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/5/f/c/dataset_5fc36e9b-1b84-4c37-b245-c01ee06d515e.dat and /galaxy/server/database/objects/0/3/a/dataset_03a846c8-cb95-4089-9682-98a985afa4b6.dat\n  0:00:03.216    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.220    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.223    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.259    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.259    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.259    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n  0:00:03.264    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/32/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/32/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/32/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.066    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.070     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.164   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.168     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.259   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.397     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.398     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.398     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.399     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.400     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.400     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.400     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.019     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.031    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.031    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.280    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.280    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.405    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.405    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.406    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.406    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.406    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.594     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.606    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.123    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.123    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.377    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.403    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.427    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.427    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.430    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.431    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nsing short gaps\n  0:00:10.021    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.022    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.022    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.022    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.022    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.022    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.022    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.022    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.023    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.023    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.023    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.023    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.023    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.023    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.033    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.033    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.033    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.040    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.040    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.041    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:10.046    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:10.051    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/simplified_contigs.fasta\n  0:00:10.055    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/intermediate_contigs.fasta\n  0:00:10.065    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.065    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.065    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.065    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.065    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.065    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.126   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.294   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.550   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.550   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.560    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.617   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.624   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.629   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.645   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.651   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.668    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.668    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.668    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.668    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.668    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.668    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.669    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.669    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.669    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.669    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.670    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.670    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.670    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.670    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.670    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.670    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.670    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.671    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.671    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.671    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.671    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.671    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.671    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.672    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/32/working//K33/before_rr.fasta\n  0:00:10.679    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/32/working//K33/assembly_graph.fastg\n  0:00:10.684    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/final_contigs.paths\n  0:00:10.692    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/32/working//K33/scaffolds.paths\n  0:00:10.710    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.712    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/32/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/32/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/32/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/32/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/32/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "15 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "15.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:28:31", "plugin": "core", "name": "end_epoch", "raw_value": "1685946511.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:28:16", "plugin": "core", "name": "start_epoch", "raw_value": "1685946496.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1-7", "has_data": true, "data": {"tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades", "tool_version": "3.12.0+galaxy1", "test_index": 7, "time_seconds": 47.1407310962677, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "40bbeab1617183a1"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "932be22bceadffe5"}}, "job": {"model_class": "Job", "id": "25ae25ff031db736", "state": "ok", "exit_code": 0, "update_time": "2023-06-05T06:29:12.014872", "create_time": "2023-06-05T06:28:45.937415", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "cf9a32ff1d9b463b", "external_id": "gxy-f49bk", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat && python '/galaxy/server/database/jobs_directory/000/35/configs/tmpbbddma1u' < contigs.fasta > '/galaxy/server/database/objects/5/8/2/dataset_58274d75-79f9-4424-8a8c-400c656a1df9.dat' && python '/galaxy/server/database/jobs_directory/000/35/configs/tmpbbddma1u' < scaffolds.fasta > '/galaxy/server/database/objects/6/b/5/dataset_6b5b4dc4-8c4e-4d60-a447-c3f5b6ef380b.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 66, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 67, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "40bbeab1617183a1", "src": "hda", "uuid": "a6d95112-20ab-447c-af26-6a0e39c94a21"}, "libraries_0|files_0|rev_reads": {"id": "932be22bceadffe5", "src": "hda", "uuid": "a7407b29-61d9-4083-9b1f-b4132a1e5636"}}, "outputs": {"out_contig_stats": {"id": "19390db43d1eab17", "src": "hda", "uuid": "58274d75-79f9-4424-8a8c-400c656a1df9"}, "out_scaffold_stats": {"id": "123afa3e27781dc4", "src": "hda", "uuid": "6b5b4dc4-8c4e-4d60-a447-c3f5b6ef380b"}, "out_contigs": {"id": "1acd8b4691b2068b", "src": "hda", "uuid": "ca9f9d50-a57d-40be-bb31-18ed42976e8a"}, "out_scaffolds": {"id": "0749b9178b5e3207", "src": "hda", "uuid": "c22b59a7-bb4e-4fa8-a530-96abc724bbc7"}, "out_log": {"id": "89d432a11ff21937", "src": "hda", "uuid": "70fa1f8b-dd18-42b2-b9f3-6ece7c10bc0c"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/35/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/35/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat']\n      right reads: ['/galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/35/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat\n  0:00:01.208     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\n  0:00:02.370     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.381    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.813    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.814    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.088    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.115    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.143    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.145    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.156    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.158    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.168    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.168    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.168    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat\n  0:00:03.186    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\n  0:00:03.203    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.203    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.203    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.223    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.223    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.240    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.240    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.240    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.240    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat and /galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\n  0:00:03.271    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.276    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.279    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.315    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.316    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.316    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n  0:00:03.322    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/35/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/35/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.063    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.066     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.158   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.163     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.258   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.389     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.389     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.389     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.390     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.005     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.014    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.014    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.359    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.360    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.360    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.361    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.361    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.361    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.529     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.541    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.056    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.056    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.330    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.361    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.395    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.395    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.401    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.402    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:09.983    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.985    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.986    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.986    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.986    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:09.986    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.999    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.999    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.999    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.004    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.005    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.005    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:10.014    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:10.019    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/simplified_contigs.fasta\n  0:00:10.024    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/intermediate_contigs.fasta\n  0:00:10.032    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.032    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.032    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.032    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.032    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.033    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.094   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.267   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.519   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.519   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.531    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.589   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.598   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.600   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.605   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.605   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.605   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.617   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.623   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.643    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.644    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.644    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.644    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.644    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.645    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.645    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.645    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.645    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.645    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.645    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.645    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.645    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.645    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.645    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.646    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.647    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.647    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.647    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.647    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.647    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.649    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:10.655    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:10.660    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/final_contigs.paths\n  0:00:10.671    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/scaffolds.paths\n  0:00:10.690    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.693    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/35/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/35/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.162+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/35/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat']\n      right reads: ['/galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/35/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/35/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat\n  0:00:01.208     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\n  0:00:02.370     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.381    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.813    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.814    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.088    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.115    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.143    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.145    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.156    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.158    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.168    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.168    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.168    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat\n  0:00:03.186    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\n  0:00:03.203    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.203    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.203    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.223    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.223    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.240    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.240    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.240    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.240    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/a/6/d/dataset_a6d95112-20ab-447c-af26-6a0e39c94a21.dat and /galaxy/server/database/objects/a/7/4/dataset_a7407b29-61d9-4083-9b1f-b4132a1e5636.dat\n  0:00:03.271    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.276    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.279    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.315    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.316    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.316    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n  0:00:03.322    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/35/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/35/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/35/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.009     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.063    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.066     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.158   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.163     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.258   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.389     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.389     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.389     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.390     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.390     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.005     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.014    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.014    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.359    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.360    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.360    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.361    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.361    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.361    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.529     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.541    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.056    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.056    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.330    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.361    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.395    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.395    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.401    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.402    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nsing short gaps\n  0:00:09.983    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.985    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.986    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.986    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.986    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.986    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.986    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:09.986    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.999    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.999    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.999    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.004    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.005    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.005    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:10.014    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:10.019    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/simplified_contigs.fasta\n  0:00:10.024    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/intermediate_contigs.fasta\n  0:00:10.032    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.032    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.032    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.032    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.032    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.033    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.094   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.267   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.519   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.519   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.531    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.589   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.598   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.600   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.605   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.605   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.605   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.617   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.623   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.643    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.644    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.644    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.644    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.644    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.645    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.645    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.645    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.645    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.645    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.645    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.645    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.645    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.645    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.645    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.646    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.647    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.647    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.647    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.647    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.647    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.647    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.649    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/35/working//K33/before_rr.fasta\n  0:00:10.655    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/35/working//K33/assembly_graph.fastg\n  0:00:10.660    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/final_contigs.paths\n  0:00:10.671    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/35/working//K33/scaffolds.paths\n  0:00:10.690    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.693    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/35/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/35/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/35/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/35/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/35/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "15 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "15.0000000"}, {"title": "Job End Time", "value": "2023-06-05 06:29:02", "plugin": "core", "name": "end_epoch", "raw_value": "1685946542.0000000"}, {"title": "Job Start Time", "value": "2023-06-05 06:28:47", "plugin": "core", "name": "start_epoch", "raw_value": "1685946527.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}]}