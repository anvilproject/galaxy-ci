{
    "model_class": "Job",
    "id": "6f29a6ed646bb639",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-04-05T07:14:46.201053",
    "create_time": "2024-04-05T07:14:28.680149",
    "galaxy_version": "23.1",
    "command_version": "",
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "6d5881f4c28c717b",
    "external_id": "gxy-z2z74",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/9/4/b/dataset_94bb8712-40ef-4fb4-9cfc-cef7a137bf66.dat' && cp '/galaxy/server/database/objects/a/7/7/dataset_a77e47f2-3c30-4f7b-a8e1-fb99bed1090e.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/a/5/d/dataset_a5d5290f-395a-46cd-9f53-581d62a1f663.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/e/7/5/dataset_e75f9232-dc8f-458d-89b6-2b4534a07fd2.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 28: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 341, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 342, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 340, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "549c119c770f3d12",
            "src": "hda",
            "uuid": "e75f9232-dc8f-458d-89b6-2b4534a07fd2"
        },
        "pairstraight|file2": {
            "id": "b75038fd6daa5585",
            "src": "hda",
            "uuid": "a5d5290f-395a-46cd-9f53-581d62a1f663"
        },
        "pairstraight|file1": {
            "id": "2f7fdae6f30d9b74",
            "src": "hda",
            "uuid": "a77e47f2-3c30-4f7b-a8e1-fb99bed1090e"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "4028059f60b89b32",
            "src": "hda",
            "uuid": "94bb8712-40ef-4fb4-9cfc-cef7a137bf66"
        }
    },
    "outputs": {
        "observed_bias_3p": {
            "id": "8c3375df33ae553a",
            "src": "hda",
            "uuid": "6b4fb5ad-1ac2-4787-bf01-bf7afe15f6d9"
        },
        "quants_tier_mat": {
            "id": "be1ff51a7c83c089",
            "src": "hda",
            "uuid": "93c9a284-81ac-4d70-b48a-4a3a43f0d861"
        },
        "quants_mat_rows_txt": {
            "id": "abd96501d6fc1298",
            "src": "hda",
            "uuid": "cd7d2e9a-bd7d-4754-95f2-70472d7d2f84"
        },
        "quants_mat_cols_txt": {
            "id": "7e6ce46447f5297c",
            "src": "hda",
            "uuid": "6b6449c4-b595-4387-ae73-915907e3bb0c"
        },
        "raw_cb_frequency_txt": {
            "id": "e4c1a2982b12824f",
            "src": "hda",
            "uuid": "a03f7b8d-c1f1-4131-befb-e5f3e7fd7cb9"
        },
        "quants_mat_mtx": {
            "id": "fb0f19da11f9fda3",
            "src": "hda",
            "uuid": "440845a8-8386-461e-99e8-045bbdb1e620"
        },
        "flenDist_txt": {
            "id": "ca50203d734f68f3",
            "src": "hda",
            "uuid": "e4adb470-8431-4525-8c86-5b755ea2a7b7"
        },
        "observed_bias": {
            "id": "9fe576b5b009cb42",
            "src": "hda",
            "uuid": "5593e257-41f1-4a5b-b33c-a96c81a6eb42"
        },
        "expected_bias": {
            "id": "8c744889224d7293",
            "src": "hda",
            "uuid": "c172911f-96ac-4b5b-bbbf-7144fb40ca0a"
        },
        "whitelist_txt": {
            "id": "5cc93303d3bec8e5",
            "src": "hda",
            "uuid": "941269f8-ae22-4d2e-ae99-fe1aa4db93a4"
        },
        "featureDump_txt": {
            "id": "dd8e55b68b38cf27",
            "src": "hda",
            "uuid": "5133317b-9936-4997-b7c4-2878eb48914c"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
