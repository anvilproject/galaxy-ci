<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="6"
           failures="8"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="35.54571723937988">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="9.763026714324951">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 9.763026714324951, "tool_id": "bcftools_filter", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="29.691853761672974">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="29.425201416015625">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="30.30900740623474">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="29.820329189300537">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="30.02159595489502">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="30.032519340515137">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="30.97560405731201">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="39.526082038879395">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="32.78688430786133">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="43.01939392089844">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="14.240808248519897">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 14.240808248519897, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="35.38361978530884">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input|input_bams": [   {    "id": "bdb8edcaef38ae6d",    "src": "hda"   },   {    "id": "b6ce91cb4d3915ea",    "src": "hda"   },   {    "id": "233afaceccae0db4",    "src": "hda"   }  ],  "input|input_number": "multiple",  "output_type": "v",  "reference_source|ref_file": {   "id": "840b3a8e57199ade",   "src": "hda"  },  "reference_source|reference_source_selector": "history",  "sec_filtering|filter_by_flags|exclude_flags": [   "4",   "16"  ],  "sec_filtering|filter_by_flags|filter_flags": "filter",  "sec_restrict|regions|regions_0|chrom": "17",  "sec_restrict|regions|regions_0|start": "1050",  "sec_restrict|regions|regions_0|stop": "1060",  "sec_restrict|regions|regions_src": "regions" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/e/e/f/dataset_eefade9e-5b33-4f6b-808f-13720e69d44d.dat\u0027 mpileup_1.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/2/f/5/metadata_2f579dee-d921-4c11-9681-e85fc1cdf27e.dat\u0027 mpileup_1.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/8/0/d/dataset_80d461f8-0221-4157-9dc2-def7c78fd526.dat\u0027 mpileup_2.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/5/2/9/metadata_529f0581-ebdd-45b0-9826-df082a2f9141.dat\u0027 mpileup_2.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/6/0/8/dataset_6087c74a-b542-41df-a6b0-c68dfac7cc23.dat\u0027 mpileup_3.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/f/a/5/metadata_fa5e25a0-e614-47fa-b759-8ce6f05469b5.dat\u0027 mpileup_3.bam.bai \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/b/4/b/dataset_b4b3d3a3-e93c-4d77-96ff-789a48f353ad.dat\u0027 ref.fa \u0026\u0026 samtools faidx ref.fa \u0026\u0026           bcftools mpileup  --fasta-ref \u0027ref.fa\u0027   --ff 20 -d \"250\"              --regions \u002717:1050-1060\u0027         --threads ${GALAXY_SLOTS:-4}    --output-type \u0027v\u0027   mpileup_1.bam mpileup_2.bam mpileup_3.bam \u003e \u0027/galaxy/server/database/objects/2/1/4/dataset_214ba163-c515-4497-aff1-ab669a6e64fe.dat\u0027",  "command_version": null,  "create_time": "2023-09-25T19:08:16.834677",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-qw96s",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "2062ddf38f5193a9",  "inputs": {   "input_bams": {    "id": "bdb8edcaef38ae6d",    "src": "hda",    "uuid": "eefade9e-5b33-4f6b-808f-13720e69d44d"   },   "input_bams1": {    "id": "bdb8edcaef38ae6d",    "src": "hda",    "uuid": "eefade9e-5b33-4f6b-808f-13720e69d44d"   },   "input_bams2": {    "id": "b6ce91cb4d3915ea",    "src": "hda",    "uuid": "80d461f8-0221-4157-9dc2-def7c78fd526"   },   "input_bams3": {    "id": "233afaceccae0db4",    "src": "hda",    "uuid": "6087c74a-b542-41df-a6b0-c68dfac7cc23"   },   "ref_file": {    "id": "840b3a8e57199ade",    "src": "hda",    "uuid": "b4b3d3a3-e93c-4d77-96ff-789a48f353ad"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "b5a025e605c34473",    "src": "hda",    "uuid": "214ba163-c515-4497-aff1-ab669a6e64fe"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 206, \"src\": \"hda\"}, {\"id\": 207, \"src\": \"hda\"}, {\"id\": 208, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}",   "output_type": "\"v\"",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 209, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",   "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 0, \"exclude_flags\": [\"4\", \"16\"], \"filter_flags\": \"filter\", \"require_flags\": null}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}",   "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}",   "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}",   "sec_restrict": "{\"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"1050\", \"stop\": \"1060\"}], \"regions_src\": \"regions\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}",   "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-25T19:08:22.335479",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 35.38361978530884, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="77.01306772232056">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="40.085150480270386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.15851426124572754">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.15851426124572754, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="37.61404252052307">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="28.61227822303772">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="29.996440410614014">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="30.42066240310669">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="30.22635054588318">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="28.389132022857666">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="31.421170234680176">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="31.107757091522217">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="29.198803663253784">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="36.39978575706482">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="30.475327253341675">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="22.954655408859253">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "1d6d99fe873fbd8e",   "src": "hda"  },  "linefilters_0|filter|filter_type": "regex",  "linefilters_0|filter|regex_action": "include_find",  "linefilters_0|filter|regex_pattern": "^\\d+",  "linefilters_1|filter|add": "after",  "linefilters_1|filter|column": "c4",  "linefilters_1|filter|filter_type": "replace",  "linefilters_1|filter|regex_pattern": ".*@(.*)",  "linefilters_1|filter|regex_replace": "\\1",  "linefilters_2|filter|add": "append",  "linefilters_2|filter|column": "c4",  "linefilters_2|filter|filter_type": "replace",  "linefilters_2|filter|regex_pattern": ".*(com|org|net)$",  "linefilters_2|filter|regex_replace": "\\1",  "linefilters_3|filter|add": "prepend",  "linefilters_3|filter|column": "c6",  "linefilters_3|filter|filter_type": "replace",  "linefilters_3|filter|regex_pattern": "^(\\d+)-(\\d+)-(\\d+)$",  "linefilters_3|filter|regex_replace": "\\1" }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py\u0027 -i \u0027/galaxy/server/database/objects/1/a/b/dataset_1abe0038-4c36-4dc9-aa9e-07bb043c5b61.dat\u0027 -j \u0027/galaxy/server/database/jobs_directory/000/132/configs/tmpt28omb46\u0027 -o \u0027/galaxy/server/database/objects/2/8/f/dataset_28f00416-a8c0-4e2e-94d1-e705fe323356.dat\u0027",  "command_version": null,  "create_time": "2023-09-25T19:05:26.413067",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-8ftrq",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "70021cfd8bc7bcd4",  "inputs": {   "input": {    "id": "1d6d99fe873fbd8e",    "src": "hda",    "uuid": "1abe0038-4c36-4dc9-aa9e-07bb043c5b61"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "ec9ced30dd641c3b",    "src": "hda",    "uuid": "28f00416-a8c0-4e2e-94d1-e705fe323356"   }  },  "params": {   "__input_ext": "\"tabular\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 8, \"add\": \"after\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*@(.*)\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 8, \"add\": \"append\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*(com|org|net)$\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 8, \"add\": \"prepend\", \"column\": \"c6\", \"filter_type\": \"replace\", \"regex_pattern\": \"^(\\\\d+)-(\\\\d+)-(\\\\d+)$\", \"regex_replace\": \"\\\\1\"}}]"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-25T19:05:32.156038",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 22.954655408859253, "tool_id": "filter_tabular", "tool_version": "3.1.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="62.870078563690186">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="66.03306031227112">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="34.76190161705017">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="53.80693078041077">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/d/0/f/dataset_d0fade19-9544-44aa-af9d-29f8aec3cad4.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/9/c/9/dataset_9c948751-f15f-4a5f-b87f-af2fe04516e0.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/1/f/d/dataset_1fd9c696-4df9-487f-b990-6ef4199ce863.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "create_time": "2023-09-25T19:03:07.657891",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rbtqr",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "7a12d0dfd5b79e55",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "21.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "21 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695668614.0000000",    "title": "Job End Time",    "value": "2023-09-25 19:03:34"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695668593.0000000",    "title": "Job Start Time",    "value": "2023-09-25 19:03:13"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "3d0fa5551f2b0ac8",    "src": "hda",    "uuid": "1fd9c696-4df9-487f-b990-6ef4199ce863"   },   "design_tsv": {    "id": "015da3d967a3a3db",    "src": "hda",    "uuid": "db493c98-eb55-44d5-8a01-012044d436ee"   },   "genes_tsv": {    "id": "487446ebfb6b85c3",    "src": "hda",    "uuid": "9c948751-f15f-4a5f-b87f-af2fe04516e0"   },   "matrix_mtx": {    "id": "409ef6872cfecaf0",    "src": "hda",    "uuid": "d0fade19-9544-44aa-af9d-29f8aec3cad4"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-09-25 19:03:13--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  182K\n    50K .......... .......... .......... .......... ..........  273K\n   100K .......... .......... .......... .......... ..........  274K\n   150K .......... .......... .......... .......... ..........  549K\n   200K .......... .......... .......... .......... ..........  543K\n   250K .......... .......... .......... .......... ..........  546K\n   300K .......... .......... .......... .......... ..........  538K\n   350K .......... .......... .......... .......... ..........  277K\n   400K .......... .......... .......... .......... ..........  547K\n   450K .......... .......... .......... .......... .......... 19.0M\n   500K .......... .......... .......... .......... ..........  546K\n   550K .......... .......... .......... .......... ..........  544K\n   600K .......... .......... .......... .......... ..........  556K\n   650K .......... .......... .......... .......... .......... 20.2M\n   700K .......... .......... .......... .......... ..........  548K\n   750K .......... .......... .......... .......... ..........  561K\n   800K .......... .......... .......... .......... .......... 20.5M\n   850K .......... .......... .......... .......... ..........  548K\n   900K .......... .......... .......... .......... .......... 67.0M\n   950K .......... .......... .......... .......... ..........  551K\n  1000K .......... .......... .......... .......... .......... 87.1M\n  1050K .......... .......... .......... .......... ..........  552K\n  1100K .......... .......... .......... .......... .......... 99.1M\n  1150K .......... .......... .......... .......... ..........  551K\n  1200K .......... .......... .......... .......... ..........  102M\n  1250K .......... .......... .......... .......... ..........  552K\n  1300K .......... .......... .......... .......... ..........  120M\n  1350K .......... .......... .......... .......... ..........  555K\n  1400K .......... .......... .......... .......... .......... 38.7M\n  1450K .......... .......... .......... .......... ..........  146M\n  1500K .......... .......... .......... .......... ..........  555K\n  1550K .......... .......... .......... .......... .......... 50.3M\n  1600K .......... .......... .......... .......... .......... 1.03M\n  1650K .......... .......... .......... .......... .......... 1.12M\n  1700K .......... .......... .......... .......... ..........  168M\n  1750K .......... .......... .......... .......... ..........  552K\n  1800K .......... .......... .......... .......... ..........  120M\n  1850K .......... .......... .......... .......... ..........  165M\n  1900K .......... .......... .......... .......... .......... 11.1M\n  1950K .......... .......... .......... .......... ..........  576K\n  2000K .......... .......... .......... .......... .......... 37.7M\n  2050K .......... .......... .......... .......... .......... 16.7M\n  2100K .......... .......... .......... .......... ..........  578K\n  2150K .......... .......... .......... .......... ..........  104M\n  2200K .......... .......... .......... .......... .......... 19.4M\n  2250K .......... .......... .......... .......... .......... 1.06M\n  2300K .......... .......... .......... .......... .......... 1.14M\n  2350K .......... .......... .......... .......... ..........  107M\n  2400K .......... .......... .......... .......... .......... 17.1M\n  2450K .......... .......... .......... .......... .......... 1.06M\n  2500K .......... .......... .......... .......... .......... 1.17M\n  2550K .......... .......... .......... .......... .......... 82.5M\n  2600K .......... .......... .......... .......... .......... 22.0M\n  2650K .......... .......... .......... .......... .......... 20.9M\n  2700K .......... .......... .......... .......... ..........  579K\n  2750K .......... .......... .......... .......... ..........  106M\n  2800K .......... .......... .......... .......... .......... 20.9M\n  2850K .......... .......... .......... .......... .......... 25.4M\n  2900K .......... .......... .......... .......... ..........  576K\n  2950K .......... .......... .......... .......... ..........  146M\n  3000K .......... .......... .......... .......... ..........  126M\n  3050K .......... .......... .......... .......... .......... 24.4M\n  3100K .......... .......... .......... .......... .......... 23.0M\n  3150K .......... .......... .......... .......... ..........  576K\n  3200K .......... .......... .......... .......... ..........  125M\n  3250K .......... .......... .......... .......... ..........  155M\n  3300K .......... .......... .......... .......... .......... 25.1M\n  3350K .......... .......... .......... .......... .......... 14.8M\n  3400K .......... .......... .......... .......... ..........  585K\n  3450K .......... .......... .......... .......... .......... 65.5M\n  3500K .......... .......... .......... .......... .......... 85.3M\n  3550K .......... .......... .......... .......... .......... 39.1M\n  3600K .......... .......... .......... .......... .......... 12.0M\n  3650K .......... .......... .......... .......... ..........  585K\n  3700K .......... .......... .......... .......... .......... 84.7M\n  3750K .......... .......... .......... .......... .......... 92.6M\n  3800K .......... .......... .......... .......... ..........  141M\n  3850K .......... .......... .......... .......... .......... 12.4M\n  3900K .......... .......... .......... .......... .......... 1.09M\n  3950K .......... .......... .......... .......... .......... 1.18M\n  4000K .......... .......... .......... .......... ..........  139M\n  4050K .......... .......... .......... .......... ..........  168M\n  4100K .......... .......... .......... .......... .......... 61.7M\n  4150K .......... .......... .......... .......... .......... 11.7M\n  4200K .......... .......... .......... .......... .......... 1.10M\n  4250K .......... .......... .......... .......... .......... 1.18M\n  4300K .......... .......... .......... .......... ..........  133M\n  4350K .......... .......... .......... .......... ..........  111M\n  4400K .......... .......... .......... .......... .......... 21.4M\n  4450K .......... .......... .......... .......... .......... 23.9M\n  4500K .......... .......... .......... .......... ..........  581K\n  4550K .......... .......... .......... .......... .......... 82.8M\n  4600K .......... .......... .......... .......... .......... 71.4M\n  4650K .......... .......... .......... .......... ..........  170M\n  4700K .......... .......... .......... .......... .......... 55.9M\n  4750K .......... .......... .......... .......... .......... 14.7M\n  4800K .......... .......... .......... .......... .......... 1.08M\n  4850K .......... .......... .......... .......... .......... 1.18M\n  4900K .......... .......... .......... .......... ..........  141M\n  4950K .......... .......... .......... .......... ..........  163M\n  5000K .......... .......... .......... .......... ..........  115M\n  5050K .......... .......... .......... .......... .......... 17.0M\n  5100K .......... .......... .......... .......... .......... 61.8M\n  5150K .......... .......... .......... .......... ..........  583K\n  5200K .......... .......... .......... .......... .......... 68.2M\n  5250K .......... .......... .......... .......... .......... 62.5M\n  5300K .......... .......... .......... .......... ..........  108M\n  5350K .......... .......... .......... .......... ..........  127M\n  5400K .......... .......... .......... .......... .......... 20.3M\n  5450K .......... .......... .......... .......... .......... 1.12M\n  5500K .......... .......... .......... .......... .......... 1.13M\n  5550K .......... .......... .......... .......... ..........  104M\n  5600K .......... .......... .......... .......... ..........  141M\n  5650K .......... .......... .......... .......... ..........  116M\n  5700K .......... .......... .......... .......... .......... 52.2M\n  5750K .......... .......... .......... .......... .......... 23.2M\n  5800K .......... .......... .......... .......... .......... 31.6M\n  5850K .......... .......... .......... .......... .......... 1.01M\n  5900K .......... .......... .......... .......... .......... 1.27M\n  5950K .......... .......... .......... .......... ..........  145M\n  6000K .......... .......... .......... .......... ..........  123M\n  6050K .......... .......... .......... .......... ..........  160M\n  6100K .......... .......... .......... .......... .......... 41.9M\n  6150K .......... .......... .......... .......... .......... 16.9M\n  6200K .......... .......... .......... .......... .......... 1.17M\n  6250K .......... .......... .......... .......... .......... 1.13M\n  6300K .......... .......... .......... .......... .......... 42.6M\n  6350K .......... .......... .......... .......... .......... 92.8M\n  6400K .......... .......... .......... .......... ..........  109M\n  6450K .......... .......... .......... .......... .......... 7.27M\n  6500K .......... .......... .......... .......... ..........  120M\n  6550K .......... .......... .......... .......... .......... 78.2M\n  6600K .......... .......... .......... .......... .......... 1.23M\n  6650K .......... .......... .......... .......... .......... 10.5M\n  6700K .......... .......... .......... .......... .......... 1.28M\n  6750K .......... .......... .......... .......... ..........  115M\n  6800K .......... .......... .......... .......... ..........  149M\n  6850K .......... .......... .......... .......... .......... 7.04M\n  6900K .......... .......... .......... .......... .......... 82.0M\n  6950K .......... .......... .......... .......... ..........  117M\n  7000K .......... .......... .......... .......... .......... 97.6M\n  7050K .......... .......... .......... .......... .......... 1.20M\n  7100K .......... .......... .......... .......... .......... 1.19M\n  7150K .......... .......... .......... .......... ..........  108M\n  7200K .......... .......... .......... .......... ..........  156M\n  7250K .......... .......... .......... .......... ..........  149M\n  7300K .......... .......... .......... .......... .......... 6.68M\n  7350K .......... .......... .......... .......... ..........  167M\n  7400K .......... .......... .......... .......... ..........  133M\n  7450K .......... .......... .......... .......... .......... 1.19M\n  7500K .......... .......... .......... .......... .......... 8.28M\n  7550K .......... .......... .......... .......... .......... 1.38M\n  7600K .......... .......... .......... .......... ..........  133M\n  7650K .......... .......... .......... .......... ..........  148M\n  7700K .......... .......... .......... .......... ..........  152M\n  7750K .......... .......... .......... .......... .......... 6.81M\n  7800K .......... .......... .......... .......... ..........  128M\n  7850K .......... .......... .......... .......... ..........  115M\n  7900K .......... .......... .......... .......... .......... 1.18M\n  7950K .......... .......... .......... .......... .......... 9.64M\n  8000K .......... .......... .......... .......... .......... 1.37M\n  8050K .......... .......... .......... .......... ..........  101M\n  8100K .......... .......... .......... .......... ..........  147M\n  8150K .......... .......... .......... .......... ..........  157M\n  8200K .......... .......... .......... .......... .......... 6.75M\n  8250K .......... .......... .......... .......... .......... 72.1M\n  8300K .......... .......... .......... .......... ..........  123M\n  8350K .......... .......... .......... .......... ..........  139M\n  8400K .......... .......... .......... .......... .......... 1.17M\n  8450K .......... .......... .......... .......... .......... 6.12M\n  8500K .......... .......... .......... .......... .......... 1.52M\n  8550K .......... .......... .......... .......... ..........  169M\n  8600K .......... .......... .......... .......... ..........  152M\n  8650K .......... .......... .......... .......... ..........  119M\n  8700K .......... .......... .......... .......... .......... 6.72M\n  8750K .......... .......... .......... .......... ..........  128M\n  8800K .......... .......... .......... .......... .......... 6.07M\n  8850K .......... .......... .......... .......... .......... 1.51M\n  8900K .......... .......... .......... .......... .......... 28.9M\n  8950K .......... .......... .......... .......... .......... 6.06M\n  9000K .......... .......... .......... .......... .......... 1.51M\n  9050K .......... .......... .......... .......... ..........  157M\n  9100K .......... .......... .......... .......... ..........  145M\n  9150K .......... .......... .......... .......... .......... 74.6M\n  9200K .......... .......... .......... .......... .......... 6.07M\n  9250K .......... .......... .......... .......... ..........  110M\n  9300K .......... .......... .......... .......... .......... 5.09M\n  9350K .......... .......... .......... .......... .......... 1.79M\n  9400K .......... .......... .......... .......... .......... 11.3M\n  9450K .......... .......... .......... .......... .......... 10.3M\n  9500K .......... .......... .......... .......... .......... 1.37M\n  9550K .......... .......... .......... .......... ..........  110M\n  9600K .......... .......... .......... .......... .......... 77.2M\n  9650K .......... .......... .......... .......... ..........  146M\n  9700K .......... .......... .......... .......... ..........  169M\n  9750K .......... .......... .......... .......... .......... 6.55M\n  9800K .......... .......... .......... .......... .......... 33.7M\n  9850K .......... .......... .......... .......... .......... 5.51M\n  9900K .......... .......... .......... .......... .......... 1.66M\n  9950K .......... .......... .......... .......... .......... 14.9M\n 10000K .......... .......... .......... .......... .......... 12.9M\n 10050K .......... .......... .......... .......... .......... 1.33M\n 10100K .......... .......... .......... .......... .......... 82.2M\n 10150K .......... .......... .......... .......... .......... 79.5M\n 10200K .......... .......... .......... .......... .......... 79.0M\n 10250K .......... .......... .......... .......... ..........  173M\n 10300K .......... .......... .......... .......... .......... 7.71M\n 10350K .......... .......... .......... .......... .......... 82.2M\n 10400K .......... .......... .......... .......... .......... 5.49M\n 10450K .......... .......... .......... .......... ..........  587K\n 10500K .......... .......... .......... .......... .......... 1016K\n 10550K .......... .......... .......... .......... .......... 39.3M\n 10600K .......... .......... .......... .......... .......... 90.9M\n 10650K .......... .......... .......... .......... .......... 1.31M\n 10700K .......... .......... .......... .......... ..........  907K\n 10750K .......... .......... .......... .......... .......... 1.27M\n 10800K .......... .......... .......... .......... ..........  706K\n 10850K .......... .......... .......... .......... .......... 12.4M\n 10900K .......... .......... .......... .......... .......... 3.38M\n 10950K .......... .......... .......... .......... ..........  121M\n 11000K .......... .......... .......... .......... .......... 57.9M\n 11050K .......... .......... .......... .......... .......... 2.75M\n 11100K .......... .......... .......... .......... .......... 25.1M\n 11150K .......... .......... .......... .......... .......... 87.8M\n 11200K .......... .......... .......... .......... .......... 79.0M\n 11250K .......... .......... .......... .......... .......... 91.3M\n 11300K .......... .......... .......... .......... .......... 80.1M\n 11350K .......... .......... .......... .......... .......... 1.25M\n 11400K .......... .......... .......... .......... .......... 3.97M\n 11450K .......... .......... .......... .......... .......... 15.1M\n 11500K .......... .......... .......... .......... .......... 3.53M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.93M\n 50150K .......... .......... .......... .......... .......... 4.68M\n 50200K .......... .......... .......... .......... .......... 3.37M\n 50250K .......... .......... .......... .......... .......... 5.39M\n 50300K .......... .......... .......... .......... .......... 14.4M\n 50350K .......... .......... .......... .......... .......... 4.20M\n 50400K .......... .......... .......... .......... .......... 4.77M\n 50450K .......... .......... .......... .......... .......... 8.33M\n 50500K .......... .......... .......... .......... .......... 3.75M\n 50550K .......... .......... .......... .......... .......... 4.06M\n 50600K .......... .......... .......... .......... .......... 6.04M\n 50650K .......... .......... .......... .......... .......... 5.35M\n 50700K .......... .......... .......... .......... .......... 6.18M\n 50750K .......... .......... .......... .......... .......... 1.83M\n 50800K .......... .......... .......... .......... .......... 19.7M\n 50850K .......... .......... .......... .......... ..........  136M\n 50900K .......... .......... .......... .......... .......... 3.71M\n 50950K .......... .......... .......... .......... .......... 6.46M\n 51000K .......... .......... .......... .......... .......... 4.44M\n 51050K .......... .......... .......... .......... .......... 6.23M\n 51100K .......... .......... .......... .......... .......... 5.25M\n 51150K .......... .......... .......... .......... .......... 2.54M\n 51200K .......... .......... .......... .......... .......... 14.4M\n 51250K .......... .......... .......... .......... .......... 3.59M\n 51300K .......... .......... .......... .......... .......... 16.0M\n 51350K .......... .......... .......... .......... .......... 3.98M\n 51400K .......... .......... .......... .......... .......... 3.81M\n 51450K .......... .......... .......... .......... .......... 3.55M\n 51500K .......... .......... .......... .......... .......... 84.2M\n 51550K .......... .......... .......... .......... .......... 4.12M\n 51600K .......... .......... .......... .......... .......... 4.92M\n 51650K .......... .......... .......... .......... .......... 2.67M\n 51700K .......... .......... .......... .......... .......... 2.78M\n 51750K .......... .......... .......... .......... .......... 3.26M\n 51800K .......... .......... .......... .......... .......... 98.7M\n 51850K .......... .......... .......... .......... ..........  156M\n 51900K .......... .......... .......... .......... .......... 4.50M\n 51950K .......... .......... .......... .......... .......... 8.80M\n 52000K .......... .......... .......... .......... .......... 4.26M\n 52050K .......... .......... .......... .......... .......... 3.84M\n 52100K .......... .......... .......... .......... .......... 5.79M\n 52150K .......... .......... .......... .......... .......... 8.79M\n 52200K .......... .......... .......... .......... .......... 1.88M\n 52250K .......... .......... .......... .......... .......... 12.4M\n 52300K .......... .......... .......... .......... .......... 5.69M\n 52350K .......... .......... .......... .......... .......... 76.3M\n 52400K .......... .......... .......... .......... .......... 1.31M\n 52450K .......... .......... .......... .......... .......... 17.9M\n 52500K .......... .......... .......... .......... .......... 77.1M\n 52550K .......... .......... .......... .......... ..........  150M\n 52600K .......... .......... .......... .......... .......... 2.88M\n 52650K .......... .......... .......... .......... .......... 40.4M\n 52700K .......... .......... .......... .......... .......... 2.80M\n 52750K .......... .......... .......... .......... .......... 4.09M\n 52800K .......... .......... .......... .......... .......... 85.0M\n 52850K .......... .......... .......... .......... .......... 5.57M\n 52900K .......... .......... .......... .......... .......... 4.68M\n 52950K .......... .......... .......... .......... .......... 7.84M\n 53000K .......... .......... .......... .......... .......... 4.30M\n 53050K .......... .......... .......... .......... .......... 2.44M\n 53100K .......... .......... .......... .......... .......... 6.11M\n 53150K .......... .......... .......... .......... .......... 50.7M\n 53200K .......... .......... .......... .......... .......... 4.70M\n 53250K .......... .......... .......... .......... .......... 4.27M\n 53300K .......... .......... .......... .......... .......... 4.46M\n 53350K .......... .......... .......... .......... .......... 2.38M\n 53400K .......... .......... .......... .......... .......... 36.2M\n 53450K .......... .......... .......... .......... .......... 7.04M\n 53500K .......... .......... .......... .......... .......... 5.25M\n 53550K .......... .......... .......... .......... .......... 8.05M\n 53600K .......... .......... .......... .......... .......... 3.43M\n 53650K .......... .......... .......... .......... .......... 5.19M\n 53700K .......... .......... .......... .......... .......... 5.36M\n 53750K .......... .......... .......... .......... .......... 8.59M\n 53800K .......... .......... .......... .......... .......... 4.66M\n 53850K .......... .......... .......... .......... .......... 4.39M\n 53900K .......... .......... .......... .......... .......... 4.63M\n 53950K .......... .......... .......... .......... .......... 4.71M\n 54000K .......... .......... .......... .......... .......... 7.19M\n 54050K .......... .......... .......... .......... .......... 4.57M\n 54100K .......... .......... .......... .......... .......... 3.90M\n 54150K .......... .......... .......... .......... .......... 4.51M\n 54200K .......... .......... .......... .......... .......... 10.5M\n 54250K .......... .......... .......... .......... .......... 3.92M\n 54300K .......... .......... .......... .......... .......... 3.10M\n 54350K .......... .......... .......... .......... .......... 2.45M\n 54400K .......... .......... .......... .......... .......... 45.3M\n 54450K .......... .......... .......... .......... .......... 51.1M\n 54500K .......... .......... .......... .......... .......... 3.85M\n 54550K .......... .......... .......... .......... .......... 5.88M\n 54600K .......... .......... .......... .......... .......... 7.75M\n 54650K .......... .......... .......... .......... .......... 4.11M\n 54700K .......... .......... .......... .......... .......... 3.44M\n 54750K .......... .......... .......... .......... .......... 4.81M\n 54800K .......... .......... .......... .......... .......... 5.98M\n 54850K .......... .......... .......... .......... .......... 4.55M\n 54900K .......... .......... .......... .......... .......... 4.84M\n 54950K .......... .......... .......... .......... .......... 4.26M\n 55000K .......... .......... .......... .......... .......... 9.61M\n 55050K .......... .......... .......... .......... .......... 4.23M\n 55100K .......... .......... .......... .......... .......... 4.88M\n 55150K .......... .......... .......... .......... .......... 4.61M\n 55200K .......... .......... .......... .......... .......... 2.06M\n 55250K .......... .......... .......... .......... .......... 60.6M\n 55300K .......... .......... .......... .......... .......... 12.2M\n 55350K .......... .......... .......... .......... .......... 2.18M\n 55400K .......... .......... .......... .......... .......... 45.4M\n 55450K .......... .......... .......... .......... .......... 4.10M\n 55500K .......... .......... .......... .......... .......... 15.1M\n 55550K .......... .......... .......... .......... .......... 4.97M\n 55600K .......... .......... .......... .......... .......... 4.43M\n 55650K .......... .......... .......... .......... .......... 5.55M\n 55700K .......... .......... .......... .......... .......... 2.46M\n 55750K .......... .......... .......... .......... ..........  109M\n 55800K .......... .......... .......... .......... .......... 2.02M\n 55850K .......... .......... .......... .......... .......... 17.7M\n 55900K .......... .......... .......... .......... .......... 2.39M\n 55950K .......... .......... .......... .......... .......... 9.95M\n 56000K .......... .......... .......... .......... .......... 68.2M\n 56050K .......... .......... .......... .......... .......... 46.9M\n 56100K .......... .......... .......... .......... .......... 4.47M\n 56150K .......... .......... .......... .......... .......... 4.39M\n 56200K .......... .......... .......... .......... .......... 4.48M\n 56250K .......... .......... .......... .......... .......... 8.91M\n 56300K .......... .......... .......... .......... .......... 4.44M\n 56350K .......... .......... .......... .......... .......... 2.14M\n 56400K .......... .......... .......... .......... .......... 1.98M\n 56450K .......... .......... .......... .......... .......... 22.6M\n 56500K .......... .......... .......... .......... .......... 50.6M\n 56550K .......... .......... .......... .......... ..........  124M\n 56600K .......... .......... .......... .......... .......... 5.68M\n 56650K .......... .......... .......... .......... .......... 8.97M\n 56700K .......... .......... .......... .......... .......... 4.58M\n 56750K .......... .......... .......... .......... .......... 3.89M\n 56800K .......... .......... .......... .......... .......... 4.67M\n 56850K .......... .......... .......... .......... .......... 4.36M\n 56900K .......... .......... .......... .......... .......... 6.73M\n 56950K .......... .......... .......... .......... .......... 6.47M\n 57000K .......... .......... .......... .......... .......... 3.75M\n 57050K .......... .......... .......... .......... .......... 5.38M\n 57100K .......... .......... .......... .......... .......... 6.80M\n 57150K .......... .......... .......... .......... .......... 4.51M\n 57200K .......... .......... .......... .......... .......... 4.94M\n 57250K .......... .......... .......... .......... .......... 8.78M\n 57300K .......... .......... .......... .......... .......... 3.13M\n 57350K .......... .......... .......... .......... .......... 7.80M\n 57400K .......... .......... .......... .......... .......... 4.67M\n 57450K .......... .......... .......... .......... .......... 8.92M\n 57500K .......... .......... .......... .......... .......... 4.58M\n 57550K .......... .......... .......... .......... .......... 4.61M\n 57600K .......... .......... .......... .......... .......... 4.13M\n 57650K .......... .......... .......... .......... .......... 10.5M\n 57700K .......... .......... .......... .......... .......... 4.53M\n 57750K .......... .......... .......... .......... .......... 3.76M\n 57800K .......... .......... .......... .......... .......... 4.13M\n 57850K .......... .......... .......... .......... .......... 18.8M\n 57900K .......... .......... .......... .......... .......... 3.98M\n 57950K .......... .......... .......... .......... .......... 5.22M\n 58000K .......... .......... .......... .......... .......... 3.99M\n 58050K .......... .......... .......... .......... .......... 9.66M\n 58100K .......... .......... .......... .......... .......... 4.40M\n 58150K .......... .......... .......... .......... .......... 4.99M\n 58200K .......... .......... .......... .......... .......... 4.32M\n 58250K .......... .......... .......... .......... .......... 7.40M\n 58300K .......... .......... .......... .......... .......... 4.42M\n 58350K .......... .......... .......... .......... .......... 5.38M\n 58400K .......... .......... .......... .......... .......... 4.51M\n 58450K .......... .......... .......... .......... .......... 6.59M\n 58500K .......... .......... .......... .......... .......... 5.22M\n 58550K .......... .......... .......... .......... .......... 4.90M\n 58600K .......... .......... .......... .......... .......... 4.35M\n 58650K .......... .......... .......... .......... .......... 2.95M\n 58700K .......... .......... .......... .......... ..........  132M\n 58750K .......... .......... .......... .......... .......... 4.74M\n 58800K .......... .......... .......... .......... .......... 4.30M\n 58850K .......... .......... .......... .......... .......... 8.32M\n 58900K .......... .......... .......... .......... .......... 4.80M\n 58950K .......... .......... .......... .......... .......... 4.30M\n 59000K .......... .......... .......... .......... .......... 2.61M\n 59050K .......... .......... .......... .......... .......... 20.1M\n 59100K .......... .......... .......... .......... .......... 8.92M\n 59150K .......... .......... .......... .......... .......... 3.42M\n 59200K .......... .......... .......... .......... .......... 5.97M\n 59250K .......... .......... .......... .......... .......... 4.77M\n 59300K .......... .......... .......... .......... .......... 4.57M\n 59350K .......... .......... .......... .......... .......... 6.01M\n 59400K .......... .......... .......... .......... .......... 4.71M\n 59450K .......... .......... .......... .......... .......... 4.20M\n 59500K .......... .......... .......... .......... .......... 4.03M\n 59550K .......... .......... .......... .......... .......... 1.82M\n 59600K .......... .......... .......... .......... .......... 67.8M\n 59650K .......... .......... .......... .......... ..........  132M\n 59700K .......... .......... .......... .......... .......... 8.31M\n 59750K .......... .......... .......... .......... .......... 5.90M\n 59800K .......... .......... .......... .......... .......... 6.92M\n 59850K .......... .......... .......... .......... .......... 2.66M\n 59900K .......... .......... .......... .......... .......... 10.8M\n 59950K .......... .......... .......... .......... .......... 9.76M\n 60000K .......... .......... .......... .......... .......... 4.55M\n 60050K .......... .......... .......... .......... .......... 3.48M\n 60100K .......... .......... .......... .......... .......... 7.72M\n 60150K .......... .......... .......... .......... .......... 7.87M\n 60200K .......... .......... .......... .......... .......... 4.86M\n 60250K .......... .......... .......... .......... .......... 4.54M\n 60300K .......... .......... .......... .......... .......... 4.51M\n 60350K .......... .......... .......... .......... .......... 9.23M\n 60400K .......... .......... .......... .......... .......... 4.21M\n 60450K .......... .......... .......... .......... .......... 5.03M\n 60500K .......... .......... .......... .......... .......... 4.58M\n 60550K .......... .......... .......... .......... .......... 7.33M\n 60600K .......... .......... .......... .......... ..........  368K\n 60650K .......... .........                                   40.8M=15s\n\n2023-09-25 19:03:29 (3.95 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-09-25 19:03:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  181K 4s\n    50K .......... .......... .......... .......... .......... 12%  270K 3s\n   100K .......... .......... .......... .......... .......... 18%  269K 3s\n   150K .......... .......... .......... .......... .......... 24%  539K 2s\n   200K .......... .......... .......... .......... .......... 30%  542K 2s\n   250K .......... .......... .......... .......... .......... 36%  543K 2s\n   300K .......... .......... .......... .......... .......... 42%  544K 1s\n   350K .......... .......... .......... .......... .......... 48%  539K 1s\n   400K .......... .......... .......... .......... .......... 54% 1.03M 1s\n   450K .......... .......... .......... .......... .......... 60% 1.04M 1s\n   500K .......... .......... .......... .......... .......... 66%  556K 1s\n   550K .......... .......... .......... .......... .......... 72% 11.6M 0s\n   600K .......... .......... .......... .......... .......... 78%  565K 0s\n   650K .......... .......... .......... .......... .......... 84% 12.6M 0s\n   700K .......... .......... .......... .......... .......... 90%  565K 0s\n   750K .......... .......... .......... .......... .......... 96% 1022K 0s\n   800K .......... .......... .......                         100% 13.8M=1.5s\n\n2023-09-25 19:03:34 (541 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-09-25 19:03:13--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  182K\n    50K .......... .......... .......... .......... ..........  273K\n   100K .......... .......... .......... .......... ..........  274K\n   150K .......... .......... .......... .......... ..........  549K\n   200K .......... .......... .......... .......... ..........  543K\n   250K .......... .......... .......... .......... ..........  546K\n   300K .......... .......... .......... .......... ..........  538K\n   350K .......... .......... .......... .......... ..........  277K\n   400K .......... .......... .......... .......... ..........  547K\n   450K .......... .......... .......... .......... .......... 19.0M\n   500K .......... .......... .......... .......... ..........  546K\n   550K .......... .......... .......... .......... ..........  544K\n   600K .......... .......... .......... .......... ..........  556K\n   650K .......... .......... .......... .......... .......... 20.2M\n   700K .......... .......... .......... .......... ..........  548K\n   750K .......... .......... .......... .......... ..........  561K\n   800K .......... .......... .......... .......... .......... 20.5M\n   850K .......... .......... .......... .......... ..........  548K\n   900K .......... .......... .......... .......... .......... 67.0M\n   950K .......... .......... .......... .......... ..........  551K\n  1000K .......... .......... .......... .......... .......... 87.1M\n  1050K .......... .......... .......... .......... ..........  552K\n  1100K .......... .......... .......... .......... .......... 99.1M\n  1150K .......... .......... .......... .......... ..........  551K\n  1200K .......... .......... .......... .......... ..........  102M\n  1250K .......... .......... .......... .......... ..........  552K\n  1300K .......... .......... .......... .......... ..........  120M\n  1350K .......... .......... .......... .......... ..........  555K\n  1400K .......... .......... .......... .......... .......... 38.7M\n  1450K .......... .......... .......... .......... ..........  146M\n  1500K .......... .......... .......... .......... ..........  555K\n  1550K .......... .......... .......... .......... .......... 50.3M\n  1600K .......... .......... .......... .......... .......... 1.03M\n  1650K .......... .......... .......... .......... .......... 1.12M\n  1700K .......... .......... .......... .......... ..........  168M\n  1750K .......... .......... .......... .......... ..........  552K\n  1800K .......... .......... .......... .......... ..........  120M\n  1850K .......... .......... .......... .......... ..........  165M\n  1900K .......... .......... .......... .......... .......... 11.1M\n  1950K .......... .......... .......... .......... ..........  576K\n  2000K .......... .......... .......... .......... .......... 37.7M\n  2050K .......... .......... .......... .......... .......... 16.7M\n  2100K .......... .......... .......... .......... ..........  578K\n  2150K .......... .......... .......... .......... ..........  104M\n  2200K .......... .......... .......... .......... .......... 19.4M\n  2250K .......... .......... .......... .......... .......... 1.06M\n  2300K .......... .......... .......... .......... .......... 1.14M\n  2350K .......... .......... .......... .......... ..........  107M\n  2400K .......... .......... .......... .......... .......... 17.1M\n  2450K .......... .......... .......... .......... .......... 1.06M\n  2500K .......... .......... .......... .......... .......... 1.17M\n  2550K .......... .......... .......... .......... .......... 82.5M\n  2600K .......... .......... .......... .......... .......... 22.0M\n  2650K .......... .......... .......... .......... .......... 20.9M\n  2700K .......... .......... .......... .......... ..........  579K\n  2750K .......... .......... .......... .......... ..........  106M\n  2800K .......... .......... .......... .......... .......... 20.9M\n  2850K .......... .......... .......... .......... .......... 25.4M\n  2900K .......... .......... .......... .......... ..........  576K\n  2950K .......... .......... .......... .......... ..........  146M\n  3000K .......... .......... .......... .......... ..........  126M\n  3050K .......... .......... .......... .......... .......... 24.4M\n  3100K .......... .......... .......... .......... .......... 23.0M\n  3150K .......... .......... .......... .......... ..........  576K\n  3200K .......... .......... .......... .......... ..........  125M\n  3250K .......... .......... .......... .......... ..........  155M\n  3300K .......... .......... .......... .......... .......... 25.1M\n  3350K .......... .......... .......... .......... .......... 14.8M\n  3400K .......... .......... .......... .......... ..........  585K\n  3450K .......... .......... .......... .......... .......... 65.5M\n  3500K .......... .......... .......... .......... .......... 85.3M\n  3550K .......... .......... .......... .......... .......... 39.1M\n  3600K .......... .......... .......... .......... .......... 12.0M\n  3650K .......... .......... .......... .......... ..........  585K\n  3700K .......... .......... .......... .......... .......... 84.7M\n  3750K .......... .......... .......... .......... .......... 92.6M\n  3800K .......... .......... .......... .......... ..........  141M\n  3850K .......... .......... .......... .......... .......... 12.4M\n  3900K .......... .......... .......... .......... .......... 1.09M\n  3950K .......... .......... .......... .......... .......... 1.18M\n  4000K .......... .......... .......... .......... ..........  139M\n  4050K .......... .......... .......... .......... ..........  168M\n  4100K .......... .......... .......... .......... .......... 61.7M\n  4150K .......... .......... .......... .......... .......... 11.7M\n  4200K .......... .......... .......... .......... .......... 1.10M\n  4250K .......... .......... .......... .......... .......... 1.18M\n  4300K .......... .......... .......... .......... ..........  133M\n  4350K .......... .......... .......... .......... ..........  111M\n  4400K .......... .......... .......... .......... .......... 21.4M\n  4450K .......... .......... .......... .......... .......... 23.9M\n  4500K .......... .......... .......... .......... ..........  581K\n  4550K .......... .......... .......... .......... .......... 82.8M\n  4600K .......... .......... .......... .......... .......... 71.4M\n  4650K .......... .......... .......... .......... ..........  170M\n  4700K .......... .......... .......... .......... .......... 55.9M\n  4750K .......... .......... .......... .......... .......... 14.7M\n  4800K .......... .......... .......... .......... .......... 1.08M\n  4850K .......... .......... .......... .......... .......... 1.18M\n  4900K .......... .......... .......... .......... ..........  141M\n  4950K .......... .......... .......... .......... ..........  163M\n  5000K .......... .......... .......... .......... ..........  115M\n  5050K .......... .......... .......... .......... .......... 17.0M\n  5100K .......... .......... .......... .......... .......... 61.8M\n  5150K .......... .......... .......... .......... ..........  583K\n  5200K .......... .......... .......... .......... .......... 68.2M\n  5250K .......... .......... .......... .......... .......... 62.5M\n  5300K .......... .......... .......... .......... ..........  108M\n  5350K .......... .......... .......... .......... ..........  127M\n  5400K .......... .......... .......... .......... .......... 20.3M\n  5450K .......... .......... .......... .......... .......... 1.12M\n  5500K .......... .......... .......... .......... .......... 1.13M\n  5550K .......... .......... .......... .......... ..........  104M\n  5600K .......... .......... .......... .......... ..........  141M\n  5650K .......... .......... .......... .......... ..........  116M\n  5700K .......... .......... .......... .......... .......... 52.2M\n  5750K .......... .......... .......... .......... .......... 23.2M\n  5800K .......... .......... .......... .......... .......... 31.6M\n  5850K .......... .......... .......... .......... .......... 1.01M\n  5900K .......... .......... .......... .......... .......... 1.27M\n  5950K .......... .......... .......... .......... ..........  145M\n  6000K .......... .......... .......... .......... ..........  123M\n  6050K .......... .......... .......... .......... ..........  160M\n  6100K .......... .......... .......... .......... .......... 41.9M\n  6150K .......... .......... .......... .......... .......... 16.9M\n  6200K .......... .......... .......... .......... .......... 1.17M\n  6250K .......... .......... .......... .......... .......... 1.13M\n  6300K .......... .......... .......... .......... .......... 42.6M\n  6350K .......... .......... .......... .......... .......... 92.8M\n  6400K .......... .......... .......... .......... ..........  109M\n  6450K .......... .......... .......... .......... .......... 7.27M\n  6500K .......... .......... .......... .......... ..........  120M\n  6550K .......... .......... .......... .......... .......... 78.2M\n  6600K .......... .......... .......... .......... .......... 1.23M\n  6650K .......... .......... .......... .......... .......... 10.5M\n  6700K .......... .......... .......... .......... .......... 1.28M\n  6750K .......... .......... .......... .......... ..........  115M\n  6800K .......... .......... .......... .......... ..........  149M\n  6850K .......... .......... .......... .......... .......... 7.04M\n  6900K .......... .......... .......... .......... .......... 82.0M\n  6950K .......... .......... .......... .......... ..........  117M\n  7000K .......... .......... .......... .......... .......... 97.6M\n  7050K .......... .......... .......... .......... .......... 1.20M\n  7100K .......... .......... .......... .......... .......... 1.19M\n  7150K .......... .......... .......... .......... ..........  108M\n  7200K .......... .......... .......... .......... ..........  156M\n  7250K .......... .......... .......... .......... ..........  149M\n  7300K .......... .......... .......... .......... .......... 6.68M\n  7350K .......... .......... .......... .......... ..........  167M\n  7400K .......... .......... .......... .......... ..........  133M\n  7450K .......... .......... .......... .......... .......... 1.19M\n  7500K .......... .......... .......... .......... .......... 8.28M\n  7550K .......... .......... .......... .......... .......... 1.38M\n  7600K .......... .......... .......... .......... ..........  133M\n  7650K .......... .......... .......... .......... ..........  148M\n  7700K .......... .......... .......... .......... ..........  152M\n  7750K .......... .......... .......... .......... .......... 6.81M\n  7800K .......... .......... .......... .......... ..........  128M\n  7850K .......... .......... .......... .......... ..........  115M\n  7900K .......... .......... .......... .......... .......... 1.18M\n  7950K .......... .......... .......... .......... .......... 9.64M\n  8000K .......... .......... .......... .......... .......... 1.37M\n  8050K .......... .......... .......... .......... ..........  101M\n  8100K .......... .......... .......... .......... ..........  147M\n  8150K .......... .......... .......... .......... ..........  157M\n  8200K .......... .......... .......... .......... .......... 6.75M\n  8250K .......... .......... .......... .......... .......... 72.1M\n  8300K .......... .......... .......... .......... ..........  123M\n  8350K .......... .......... .......... .......... ..........  139M\n  8400K .......... .......... .......... .......... .......... 1.17M\n  8450K .......... .......... .......... .......... .......... 6.12M\n  8500K .......... .......... .......... .......... .......... 1.52M\n  8550K .......... .......... .......... .......... ..........  169M\n  8600K .......... .......... .......... .......... ..........  152M\n  8650K .......... .......... .......... .......... ..........  119M\n  8700K .......... .......... .......... .......... .......... 6.72M\n  8750K .......... .......... .......... .......... ..........  128M\n  8800K .......... .......... .......... .......... .......... 6.07M\n  8850K .......... .......... .......... .......... .......... 1.51M\n  8900K .......... .......... .......... .......... .......... 28.9M\n  8950K .......... .......... .......... .......... .......... 6.06M\n  9000K .......... .......... .......... .......... .......... 1.51M\n  9050K .......... .......... .......... .......... ..........  157M\n  9100K .......... .......... .......... .......... ..........  145M\n  9150K .......... .......... .......... .......... .......... 74.6M\n  9200K .......... .......... .......... .......... .......... 6.07M\n  9250K .......... .......... .......... .......... ..........  110M\n  9300K .......... .......... .......... .......... .......... 5.09M\n  9350K .......... .......... .......... .......... .......... 1.79M\n  9400K .......... .......... .......... .......... .......... 11.3M\n  9450K .......... .......... .......... .......... .......... 10.3M\n  9500K .......... .......... .......... .......... .......... 1.37M\n  9550K .......... .......... .......... .......... ..........  110M\n  9600K .......... .......... .......... .......... .......... 77.2M\n  9650K .......... .......... .......... .......... ..........  146M\n  9700K .......... .......... .......... .......... ..........  169M\n  9750K .......... .......... .......... .......... .......... 6.55M\n  9800K .......... .......... .......... .......... .......... 33.7M\n  9850K .......... .......... .......... .......... .......... 5.51M\n  9900K .......... .......... .......... .......... .......... 1.66M\n  9950K .......... .......... .......... .......... .......... 14.9M\n 10000K .......... .......... .......... .......... .......... 12.9M\n 10050K .......... .......... .......... .......... .......... 1.33M\n 10100K .......... .......... .......... .......... .......... 82.2M\n 10150K .......... .......... .......... .......... .......... 79.5M\n 10200K .......... .......... .......... .......... .......... 79.0M\n 10250K .......... .......... .......... .......... ..........  173M\n 10300K .......... .......... .......... .......... .......... 7.71M\n 10350K .......... .......... .......... .......... .......... 82.2M\n 10400K .......... .......... .......... .......... .......... 5.49M\n 10450K .......... .......... .......... .......... ..........  587K\n 10500K .......... .......... .......... .......... .......... 1016K\n 10550K .......... .......... .......... .......... .......... 39.3M\n 10600K .......... .......... .......... .......... .......... 90.9M\n 10650K .......... .......... .......... .......... .......... 1.31M\n 10700K .......... .......... .......... .......... ..........  907K\n 10750K .......... .......... .......... .......... .......... 1.27M\n 10800K .......... .......... .......... .......... ..........  706K\n 10850K .......... .......... .......... .......... .......... 12.4M\n 10900K .......... .......... .......... .......... .......... 3.38M\n 10950K .......... .......... .......... .......... ..........  121M\n 11000K .......... .......... .......... .......... .......... 57.9M\n 11050K .......... .......... .......... .......... .......... 2.75M\n 11100K .......... .......... .......... .......... .......... 25.1M\n 11150K .......... .......... .......... .......... .......... 87.8M\n 11200K .......... .......... .......... .......... .......... 79.0M\n 11250K .......... .......... .......... .......... .......... 91.3M\n 11300K .......... .......... .......... .......... .......... 80.1M\n 11350K .......... .......... .......... .......... .......... 1.25M\n 11400K .......... .......... .......... .......... .......... 3.97M\n 11450K .......... .......... .......... .......... .......... 15.1M\n 11500K .......... .......... .......... .......... .......... 3.53M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.93M\n 50150K .......... .......... .......... .......... .......... 4.68M\n 50200K .......... .......... .......... .......... .......... 3.37M\n 50250K .......... .......... .......... .......... .......... 5.39M\n 50300K .......... .......... .......... .......... .......... 14.4M\n 50350K .......... .......... .......... .......... .......... 4.20M\n 50400K .......... .......... .......... .......... .......... 4.77M\n 50450K .......... .......... .......... .......... .......... 8.33M\n 50500K .......... .......... .......... .......... .......... 3.75M\n 50550K .......... .......... .......... .......... .......... 4.06M\n 50600K .......... .......... .......... .......... .......... 6.04M\n 50650K .......... .......... .......... .......... .......... 5.35M\n 50700K .......... .......... .......... .......... .......... 6.18M\n 50750K .......... .......... .......... .......... .......... 1.83M\n 50800K .......... .......... .......... .......... .......... 19.7M\n 50850K .......... .......... .......... .......... ..........  136M\n 50900K .......... .......... .......... .......... .......... 3.71M\n 50950K .......... .......... .......... .......... .......... 6.46M\n 51000K .......... .......... .......... .......... .......... 4.44M\n 51050K .......... .......... .......... .......... .......... 6.23M\n 51100K .......... .......... .......... .......... .......... 5.25M\n 51150K .......... .......... .......... .......... .......... 2.54M\n 51200K .......... .......... .......... .......... .......... 14.4M\n 51250K .......... .......... .......... .......... .......... 3.59M\n 51300K .......... .......... .......... .......... .......... 16.0M\n 51350K .......... .......... .......... .......... .......... 3.98M\n 51400K .......... .......... .......... .......... .......... 3.81M\n 51450K .......... .......... .......... .......... .......... 3.55M\n 51500K .......... .......... .......... .......... .......... 84.2M\n 51550K .......... .......... .......... .......... .......... 4.12M\n 51600K .......... .......... .......... .......... .......... 4.92M\n 51650K .......... .......... .......... .......... .......... 2.67M\n 51700K .......... .......... .......... .......... .......... 2.78M\n 51750K .......... .......... .......... .......... .......... 3.26M\n 51800K .......... .......... .......... .......... .......... 98.7M\n 51850K .......... .......... .......... .......... ..........  156M\n 51900K .......... .......... .......... .......... .......... 4.50M\n 51950K .......... .......... .......... .......... .......... 8.80M\n 52000K .......... .......... .......... .......... .......... 4.26M\n 52050K .......... .......... .......... .......... .......... 3.84M\n 52100K .......... .......... .......... .......... .......... 5.79M\n 52150K .......... .......... .......... .......... .......... 8.79M\n 52200K .......... .......... .......... .......... .......... 1.88M\n 52250K .......... .......... .......... .......... .......... 12.4M\n 52300K .......... .......... .......... .......... .......... 5.69M\n 52350K .......... .......... .......... .......... .......... 76.3M\n 52400K .......... .......... .......... .......... .......... 1.31M\n 52450K .......... .......... .......... .......... .......... 17.9M\n 52500K .......... .......... .......... .......... .......... 77.1M\n 52550K .......... .......... .......... .......... ..........  150M\n 52600K .......... .......... .......... .......... .......... 2.88M\n 52650K .......... .......... .......... .......... .......... 40.4M\n 52700K .......... .......... .......... .......... .......... 2.80M\n 52750K .......... .......... .......... .......... .......... 4.09M\n 52800K .......... .......... .......... .......... .......... 85.0M\n 52850K .......... .......... .......... .......... .......... 5.57M\n 52900K .......... .......... .......... .......... .......... 4.68M\n 52950K .......... .......... .......... .......... .......... 7.84M\n 53000K .......... .......... .......... .......... .......... 4.30M\n 53050K .......... .......... .......... .......... .......... 2.44M\n 53100K .......... .......... .......... .......... .......... 6.11M\n 53150K .......... .......... .......... .......... .......... 50.7M\n 53200K .......... .......... .......... .......... .......... 4.70M\n 53250K .......... .......... .......... .......... .......... 4.27M\n 53300K .......... .......... .......... .......... .......... 4.46M\n 53350K .......... .......... .......... .......... .......... 2.38M\n 53400K .......... .......... .......... .......... .......... 36.2M\n 53450K .......... .......... .......... .......... .......... 7.04M\n 53500K .......... .......... .......... .......... .......... 5.25M\n 53550K .......... .......... .......... .......... .......... 8.05M\n 53600K .......... .......... .......... .......... .......... 3.43M\n 53650K .......... .......... .......... .......... .......... 5.19M\n 53700K .......... .......... .......... .......... .......... 5.36M\n 53750K .......... .......... .......... .......... .......... 8.59M\n 53800K .......... .......... .......... .......... .......... 4.66M\n 53850K .......... .......... .......... .......... .......... 4.39M\n 53900K .......... .......... .......... .......... .......... 4.63M\n 53950K .......... .......... .......... .......... .......... 4.71M\n 54000K .......... .......... .......... .......... .......... 7.19M\n 54050K .......... .......... .......... .......... .......... 4.57M\n 54100K .......... .......... .......... .......... .......... 3.90M\n 54150K .......... .......... .......... .......... .......... 4.51M\n 54200K .......... .......... .......... .......... .......... 10.5M\n 54250K .......... .......... .......... .......... .......... 3.92M\n 54300K .......... .......... .......... .......... .......... 3.10M\n 54350K .......... .......... .......... .......... .......... 2.45M\n 54400K .......... .......... .......... .......... .......... 45.3M\n 54450K .......... .......... .......... .......... .......... 51.1M\n 54500K .......... .......... .......... .......... .......... 3.85M\n 54550K .......... .......... .......... .......... .......... 5.88M\n 54600K .......... .......... .......... .......... .......... 7.75M\n 54650K .......... .......... .......... .......... .......... 4.11M\n 54700K .......... .......... .......... .......... .......... 3.44M\n 54750K .......... .......... .......... .......... .......... 4.81M\n 54800K .......... .......... .......... .......... .......... 5.98M\n 54850K .......... .......... .......... .......... .......... 4.55M\n 54900K .......... .......... .......... .......... .......... 4.84M\n 54950K .......... .......... .......... .......... .......... 4.26M\n 55000K .......... .......... .......... .......... .......... 9.61M\n 55050K .......... .......... .......... .......... .......... 4.23M\n 55100K .......... .......... .......... .......... .......... 4.88M\n 55150K .......... .......... .......... .......... .......... 4.61M\n 55200K .......... .......... .......... .......... .......... 2.06M\n 55250K .......... .......... .......... .......... .......... 60.6M\n 55300K .......... .......... .......... .......... .......... 12.2M\n 55350K .......... .......... .......... .......... .......... 2.18M\n 55400K .......... .......... .......... .......... .......... 45.4M\n 55450K .......... .......... .......... .......... .......... 4.10M\n 55500K .......... .......... .......... .......... .......... 15.1M\n 55550K .......... .......... .......... .......... .......... 4.97M\n 55600K .......... .......... .......... .......... .......... 4.43M\n 55650K .......... .......... .......... .......... .......... 5.55M\n 55700K .......... .......... .......... .......... .......... 2.46M\n 55750K .......... .......... .......... .......... ..........  109M\n 55800K .......... .......... .......... .......... .......... 2.02M\n 55850K .......... .......... .......... .......... .......... 17.7M\n 55900K .......... .......... .......... .......... .......... 2.39M\n 55950K .......... .......... .......... .......... .......... 9.95M\n 56000K .......... .......... .......... .......... .......... 68.2M\n 56050K .......... .......... .......... .......... .......... 46.9M\n 56100K .......... .......... .......... .......... .......... 4.47M\n 56150K .......... .......... .......... .......... .......... 4.39M\n 56200K .......... .......... .......... .......... .......... 4.48M\n 56250K .......... .......... .......... .......... .......... 8.91M\n 56300K .......... .......... .......... .......... .......... 4.44M\n 56350K .......... .......... .......... .......... .......... 2.14M\n 56400K .......... .......... .......... .......... .......... 1.98M\n 56450K .......... .......... .......... .......... .......... 22.6M\n 56500K .......... .......... .......... .......... .......... 50.6M\n 56550K .......... .......... .......... .......... ..........  124M\n 56600K .......... .......... .......... .......... .......... 5.68M\n 56650K .......... .......... .......... .......... .......... 8.97M\n 56700K .......... .......... .......... .......... .......... 4.58M\n 56750K .......... .......... .......... .......... .......... 3.89M\n 56800K .......... .......... .......... .......... .......... 4.67M\n 56850K .......... .......... .......... .......... .......... 4.36M\n 56900K .......... .......... .......... .......... .......... 6.73M\n 56950K .......... .......... .......... .......... .......... 6.47M\n 57000K .......... .......... .......... .......... .......... 3.75M\n 57050K .......... .......... .......... .......... .......... 5.38M\n 57100K .......... .......... .......... .......... .......... 6.80M\n 57150K .......... .......... .......... .......... .......... 4.51M\n 57200K .......... .......... .......... .......... .......... 4.94M\n 57250K .......... .......... .......... .......... .......... 8.78M\n 57300K .......... .......... .......... .......... .......... 3.13M\n 57350K .......... .......... .......... .......... .......... 7.80M\n 57400K .......... .......... .......... .......... .......... 4.67M\n 57450K .......... .......... .......... .......... .......... 8.92M\n 57500K .......... .......... .......... .......... .......... 4.58M\n 57550K .......... .......... .......... .......... .......... 4.61M\n 57600K .......... .......... .......... .......... .......... 4.13M\n 57650K .......... .......... .......... .......... .......... 10.5M\n 57700K .......... .......... .......... .......... .......... 4.53M\n 57750K .......... .......... .......... .......... .......... 3.76M\n 57800K .......... .......... .......... .......... .......... 4.13M\n 57850K .......... .......... .......... .......... .......... 18.8M\n 57900K .......... .......... .......... .......... .......... 3.98M\n 57950K .......... .......... .......... .......... .......... 5.22M\n 58000K .......... .......... .......... .......... .......... 3.99M\n 58050K .......... .......... .......... .......... .......... 9.66M\n 58100K .......... .......... .......... .......... .......... 4.40M\n 58150K .......... .......... .......... .......... .......... 4.99M\n 58200K .......... .......... .......... .......... .......... 4.32M\n 58250K .......... .......... .......... .......... .......... 7.40M\n 58300K .......... .......... .......... .......... .......... 4.42M\n 58350K .......... .......... .......... .......... .......... 5.38M\n 58400K .......... .......... .......... .......... .......... 4.51M\n 58450K .......... .......... .......... .......... .......... 6.59M\n 58500K .......... .......... .......... .......... .......... 5.22M\n 58550K .......... .......... .......... .......... .......... 4.90M\n 58600K .......... .......... .......... .......... .......... 4.35M\n 58650K .......... .......... .......... .......... .......... 2.95M\n 58700K .......... .......... .......... .......... ..........  132M\n 58750K .......... .......... .......... .......... .......... 4.74M\n 58800K .......... .......... .......... .......... .......... 4.30M\n 58850K .......... .......... .......... .......... .......... 8.32M\n 58900K .......... .......... .......... .......... .......... 4.80M\n 58950K .......... .......... .......... .......... .......... 4.30M\n 59000K .......... .......... .......... .......... .......... 2.61M\n 59050K .......... .......... .......... .......... .......... 20.1M\n 59100K .......... .......... .......... .......... .......... 8.92M\n 59150K .......... .......... .......... .......... .......... 3.42M\n 59200K .......... .......... .......... .......... .......... 5.97M\n 59250K .......... .......... .......... .......... .......... 4.77M\n 59300K .......... .......... .......... .......... .......... 4.57M\n 59350K .......... .......... .......... .......... .......... 6.01M\n 59400K .......... .......... .......... .......... .......... 4.71M\n 59450K .......... .......... .......... .......... .......... 4.20M\n 59500K .......... .......... .......... .......... .......... 4.03M\n 59550K .......... .......... .......... .......... .......... 1.82M\n 59600K .......... .......... .......... .......... .......... 67.8M\n 59650K .......... .......... .......... .......... ..........  132M\n 59700K .......... .......... .......... .......... .......... 8.31M\n 59750K .......... .......... .......... .......... .......... 5.90M\n 59800K .......... .......... .......... .......... .......... 6.92M\n 59850K .......... .......... .......... .......... .......... 2.66M\n 59900K .......... .......... .......... .......... .......... 10.8M\n 59950K .......... .......... .......... .......... .......... 9.76M\n 60000K .......... .......... .......... .......... .......... 4.55M\n 60050K .......... .......... .......... .......... .......... 3.48M\n 60100K .......... .......... .......... .......... .......... 7.72M\n 60150K .......... .......... .......... .......... .......... 7.87M\n 60200K .......... .......... .......... .......... .......... 4.86M\n 60250K .......... .......... .......... .......... .......... 4.54M\n 60300K .......... .......... .......... .......... .......... 4.51M\n 60350K .......... .......... .......... .......... .......... 9.23M\n 60400K .......... .......... .......... .......... .......... 4.21M\n 60450K .......... .......... .......... .......... .......... 5.03M\n 60500K .......... .......... .......... .......... .......... 4.58M\n 60550K .......... .......... .......... .......... .......... 7.33M\n 60600K .......... .......... .......... .......... ..........  368K\n 60650K .......... .........                                   40.8M=15s\n\n2023-09-25 19:03:29 (3.95 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-09-25 19:03:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  181K 4s\n    50K .......... .......... .......... .......... .......... 12%  270K 3s\n   100K .......... .......... .......... .......... .......... 18%  269K 3s\n   150K .......... .......... .......... .......... .......... 24%  539K 2s\n   200K .......... .......... .......... .......... .......... 30%  542K 2s\n   250K .......... .......... .......... .......... .......... 36%  543K 2s\n   300K .......... .......... .......... .......... .......... 42%  544K 1s\n   350K .......... .......... .......... .......... .......... 48%  539K 1s\n   400K .......... .......... .......... .......... .......... 54% 1.03M 1s\n   450K .......... .......... .......... .......... .......... 60% 1.04M 1s\n   500K .......... .......... .......... .......... .......... 66%  556K 1s\n   550K .......... .......... .......... .......... .......... 72% 11.6M 0s\n   600K .......... .......... .......... .......... .......... 78%  565K 0s\n   650K .......... .......... .......... .......... .......... 84% 12.6M 0s\n   700K .......... .......... .......... .......... .......... 90%  565K 0s\n   750K .......... .......... .......... .......... .......... 96% 1022K 0s\n   800K .......... .......... .......                         100% 13.8M=1.5s\n\n2023-09-25 19:03:34 (541 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-09-25T19:03:48.183351",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 53.80693078041077, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-09-25 19:03:13--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  182K    50K .......... .......... .......... .......... ..........  273K   100K .......... .......... .......... .......... ..........  274K   150K .......... .......... .......... .......... ..........  549K   200K .......... .......... .......... .......... ..........  543K   250K .......... .......... .......... .......... ..........  546K   300K .......... .......... .......... .......... ..........  538K   350K .......... .......... .......... .......... ..........  277K   400K .......... .......... .......... .......... ..........  547K   450K .......... .......... .......... .......... .......... 19.0M   500K .......... .......... .......... .......... ..........  546K   550K .......... .......... .......... .......... ..........  544K   600K .......... .......... .......... .......... ..........  556K   650K .......... .......... .......... .......... .......... 20.2M   700K .......... .......... .......... .......... ..........  548K   750K .......... .......... .......... .......... ..........  561K   800K .......... .......... .......... .......... .......... 20.5M   850K .......... .......... .......... .......... ..........  548K   900K .......... .......... .......... .......... .......... 67.0M   950K .......... .......... .......... .......... ..........  551K  1000K .......... .......... .......... .......... .......... 87.1M  1050K .......... .......... .......... .......... ..........  552K  1100K .......... .......... .......... .......... .......... 99.1M  1150K .......... .......... .......... .......... ..........  551K  1200K .......... .......... .......... .......... ..........  102M  1250K .......... .......... .......... .......... ..........  552K  1300K .......... .......... .......... .......... ..........  120M  1350K .......... .......... .......... .......... ..........  555K  1400K .......... .......... .......... .......... .......... 38.7M  1450K .......... .......... .......... .......... ..........  146M  1500K .......... .......... .......... .......... ..........  555K  1550K .......... .......... .......... .......... .......... 50.3M  1600K .......... .......... .......... .......... .......... 1.03M  1650K .......... .......... .......... .......... .......... 1.12M  1700K .......... .......... .......... .......... ..........  168M  1750K .......... .......... .......... .......... ..........  552K  1800K .......... .......... .......... .......... ..........  120M  1850K .......... .......... .......... .......... ..........  165M  1900K .......... .......... .......... .......... .......... 11.1M  1950K .......... .......... .......... .......... ..........  576K  2000K .......... .......... .......... .......... .......... 37.7M  2050K .......... .......... .......... .......... .......... 16.7M  2100K .......... .......... .......... .......... ..........  578K  2150K .......... .......... .......... .......... ..........  104M  2200K .......... .......... .......... .......... .......... 19.4M  2250K .......... .......... .......... .......... .......... 1.06M  2300K .......... .......... .......... .......... .......... 1.14M  2350K .......... .......... .......... .......... ..........  107M  2400K .......... .......... .......... .......... .......... 17.1M  2450K .......... .......... .......... .......... .......... 1.06M  2500K .......... .......... .......... .......... .......... 1.17M  2550K .......... .......... .......... .......... .......... 82.5M  2600K .......... .......... .......... .......... .......... 22.0M  2650K .......... .......... .......... .......... .......... 20.9M  2700K .......... .......... .......... .......... ..........  579K  2750K .......... .......... .......... .......... ..........  106M  2800K .......... .......... .......... .......... .......... 20.9M  2850K .......... .......... .......... .......... .......... 25.4M  2900K .......... .......... .......... .......... ..........  576K  2950K .......... .......... .......... .......... ..........  146M  3000K .......... .......... .......... .......... ..........  126M  3050K .......... .......... .......... .......... .......... 24.4M  3100K .......... .......... .......... .......... .......... 23.0M  3150K .......... .......... .......... .......... ..........  576K  3200K .......... .......... .......... .......... ..........  125M  3250K .......... .......... .......... .......... ..........  155M  3300K .......... .......... .......... .......... .......... 25.1M  3350K .......... .......... .......... .......... .......... 14.8M  3400K .......... .......... .......... .......... ..........  585K  3450K .......... .......... .......... .......... .......... 65.5M  3500K .......... .......... .......... .......... .......... 85.3M  3550K .......... .......... .......... .......... .......... 39.1M  3600K .......... .......... .......... .......... .......... 12.0M  3650K .......... .......... .......... .......... ..........  585K  3700K .......... .......... .......... .......... .......... 84.7M  3750K .......... .......... .......... .......... .......... 92.6M  3800K .......... .......... .......... .......... ..........  141M  3850K .......... .......... .......... .......... .......... 12.4M  3900K .......... .......... .......... .......... .......... 1.09M  3950K .......... .......... .......... .......... .......... 1.18M  4000K .......... .......... .......... .......... ..........  139M  4050K .......... .......... .......... .......... ..........  168M  4100K .......... .......... .......... .......... .......... 61.7M  4150K .......... .......... .......... .......... .......... 11.7M  4200K .......... .......... .......... .......... .......... 1.10M  4250K .......... .......... .......... .......... .......... 1.18M  4300K .......... .......... .......... .......... ..........  133M  4350K .......... .......... .......... .......... ..........  111M  4400K .......... .......... .......... .......... .......... 21.4M  4450K .......... .......... .......... .......... .......... 23.9M  4500K .......... .......... .......... .......... ..........  581K  4550K .......... .......... .......... .......... .......... 82.8M  4600K .......... .......... .......... .......... .......... 71.4M  4650K .......... .......... .......... .......... ..........  170M  4700K .......... .......... .......... .......... .......... 55.9M  4750K .......... .......... .......... .......... .......... 14.7M  4800K .......... .......... .......... .......... .......... 1.08M  4850K .......... .......... .......... .......... .......... 1.18M  4900K .......... .......... .......... .......... ..........  141M  4950K .......... .......... .......... .......... ..........  163M  5000K .......... .......... .......... .......... ..........  115M  5050K .......... .......... .......... .......... .......... 17.0M  5100K .......... .......... .......... .......... .......... 61.8M  5150K .......... .......... .......... .......... ..........  583K  5200K .......... .......... .......... .......... .......... 68.2M  5250K .......... .......... .......... .......... .......... 62.5M  5300K .......... .......... .......... .......... ..........  108M  5350K .......... .......... .......... .......... ..........  127M  5400K .......... .......... .......... .......... .......... 20.3M  5450K .......... .......... .......... .......... .......... 1.12M  5500K .......... .......... .......... .......... .......... 1.13M  5550K .......... .......... .......... .......... ..........  104M  5600K .......... .......... .......... .......... ..........  141M  5650K .......... .......... .......... .......... ..........  116M  5700K .......... .......... .......... .......... .......... 52.2M  5750K .......... .......... .......... .......... .......... 23.2M  5800K .......... .......... .......... .......... .......... 31.6M  5850K .......... .......... .......... .......... .......... 1.01M  5900K .......... .......... .......... .......... .......... 1.27M  5950K .......... .......... .......... .......... ..........  145M  6000K .......... .......... .......... .......... ..........  123M  6050K .......... .......... .......... .......... ..........  160M  6100K .......... .......... .......... .......... .......... 41.9M  6150K .......... .......... .......... .......... .......... 16.9M  6200K .......... .......... .......... .......... .......... 1.17M  6250K .......... .......... .......... .......... .......... 1.13M  6300K .......... .......... .......... .......... .......... 42.6M  6350K .......... .......... .......... .......... .......... 92.8M  6400K .......... .......... .......... .......... ..........  109M  6450K .......... .......... .......... .......... .......... 7.27M  6500K .......... .......... .......... .......... ..........  120M  6550K .......... .......... .......... .......... .......... 78.2M  6600K .......... .......... .......... .......... .......... 1.23M  6650K .......... .......... .......... .......... .......... 10.5M  6700K .......... .......... .......... .......... .......... 1.28M  6750K .......... .......... .......... .......... ..........  115M  6800K .......... .......... .......... .......... ..........  149M  6850K .......... .......... .......... .......... .......... 7.04M  6900K .......... .......... .......... .......... .......... 82.0M  6950K .......... .......... .......... .......... ..........  117M  7000K .......... .......... .......... .......... .......... 97.6M  7050K .......... .......... .......... .......... .......... 1.20M  7100K .......... .......... .......... .......... .......... 1.19M  7150K .......... .......... .......... .......... ..........  108M  7200K .......... .......... .......... .......... ..........  156M  7250K .......... .......... .......... .......... ..........  149M  7300K .......... .......... .......... .......... .......... 6.68M  7350K .......... .......... .......... .......... ..........  167M  7400K .......... .......... .......... .......... ..........  133M  7450K .......... .......... .......... .......... .......... 1.19M  7500K .......... .......... .......... .......... .......... 8.28M  7550K .......... .......... .......... .......... .......... 1.38M  7600K .......... .......... .......... .......... ..........  133M  7650K .......... .......... .......... .......... ..........  148M  7700K .......... .......... .......... .......... ..........  152M  7750K .......... .......... .......... .......... .......... 6.81M  7800K .......... .......... .......... .......... ..........  128M  7850K .......... .......... .......... .......... ..........  115M  7900K .......... .......... .......... .......... .......... 1.18M  7950K .......... .......... .......... .......... .......... 9.64M  8000K .......... .......... .......... .......... .......... 1.37M  8050K .......... .......... .......... .......... ..........  101M  8100K .......... .......... .......... .......... ..........  147M  8150K .......... .......... .......... .......... ..........  157M  8200K .......... .......... .......... .......... .......... 6.75M  8250K .......... .......... .......... .......... .......... 72.1M  8300K .......... .......... .......... .......... ..........  123M  8350K .......... .......... .......... .......... ..........  139M  8400K .......... .......... .......... .......... .......... 1.17M  8450K .......... .......... .......... .......... .......... 6.12M  8500K .......... .......... .......... .......... .......... 1.52M  8550K .......... .......... .......... .......... ..........  169M  8600K .......... .......... .......... .......... ..........  152M  8650K .......... .......... .......... .......... ..........  119M  8700K .......... .......... .......... .......... .......... 6.72M  8750K .......... .......... .......... .......... ..........  128M  8800K .......... .......... .......... .......... .......... 6.07M  8850K .......... .......... .......... .......... .......... 1.51M  8900K .......... .......... .......... .......... .......... 28.9M  8950K .......... .......... .......... .......... .......... 6.06M  9000K .......... .......... .......... .......... .......... 1.51M  9050K .......... .......... .......... .......... ..........  157M  9100K .......... .......... .......... .......... ..........  145M  9150K .......... .......... .......... .......... .......... 74.6M  9200K .......... .......... .......... .......... .......... 6.07M  9250K .......... .......... .......... .......... ..........  110M  9300K .......... .......... .......... .......... .......... 5.09M  9350K .......... .......... .......... .......... .......... 1.79M  9400K .......... .......... .......... .......... .......... 11.3M  9450K .......... .......... .......... .......... .......... 10.3M  9500K .......... .......... .......... .......... .......... 1.37M  9550K .......... .......... .......... .......... ..........  110M  9600K .......... .......... .......... .......... .......... 77.2M  9650K .......... .......... .......... .......... ..........  146M  9700K .......... .......... .......... .......... ..........  169M  9750K .......... .......... .......... .......... .......... 6.55M  9800K .......... .......... .......... .......... .......... 33.7M  9850K .......... .......... .......... .......... .......... 5.51M  9900K .......... .......... .......... .......... .......... 1.66M  9950K .......... .......... .......... .......... .......... 14.9M 10000K .......... .......... .......... .......... .......... 12.9M 10050K .......... .......... .......... .......... .......... 1.33M 10100K .......... .......... .......... .......... .......... 82.2M 10150K .......... .......... .......... .......... .......... 79.5M 10200K .......... .......... .......... .......... .......... 79.0M 10250K .......... .......... .......... .......... ..........  173M 10300K .......... .......... .......... .......... .......... 7.71M 10350K .......... .......... .......... .......... .......... 82.2M 10400K .......... .......... .......... .......... .......... 5.49M 10450K .......... .......... .......... .......... ..........  587K 10500K .......... .......... .......... .......... .......... 1016K 10550K .......... .......... .......... .......... .......... 39.3M 10600K .......... .......... .......... .......... .......... 90.9M 10650K .......... .......... .......... .......... .......... 1.31M 10700K .......... .......... .......... .......... ..........  907K 10750K .......... .......... .......... .......... .......... 1.27M 10800K .......... .......... .......... .......... ..........  706K 10850K .......... .......... .......... .......... .......... 12.4M 10900K .......... .......... .......... .......... .......... 3.38M 10950K .......... .......... .......... .......... ..........  121M 11000K .......... .......... .......... .......... .......... 57.9M 11050K .......... .......... .......... .......... .......... 2.75M 11100K .......... .......... .......... .......... .......... 25.1M 11150K .......... .......... .......... .......... .......... 87.8M 11200K .......... .......... .......... .......... .......... 79.0M 11250K .......... .......... .......... .......... .......... 91.3M 11300K .......... .......... .......... .......... .......... 80.1M 11350K .......... .......... .......... .......... .......... 1.25M 11400K .......... .......... .......... .......... .......... 3.97M 11450K .......... .......... .......... .......... .......... 15.1M 11500K .......... .......... .......... .......... .......... 3.53M 11550K .......... .......... .......... .......... .................. 4.93M 50150K .......... .......... .......... .......... .......... 4.68M 50200K .......... .......... .......... .......... .......... 3.37M 50250K .......... .......... .......... .......... .......... 5.39M 50300K .......... .......... .......... .......... .......... 14.4M 50350K .......... .......... .......... .......... .......... 4.20M 50400K .......... .......... .......... .......... .......... 4.77M 50450K .......... .......... .......... .......... .......... 8.33M 50500K .......... .......... .......... .......... .......... 3.75M 50550K .......... .......... .......... .......... .......... 4.06M 50600K .......... .......... .......... .......... .......... 6.04M 50650K .......... .......... .......... .......... .......... 5.35M 50700K .......... .......... .......... .......... .......... 6.18M 50750K .......... .......... .......... .......... .......... 1.83M 50800K .......... .......... .......... .......... .......... 19.7M 50850K .......... .......... .......... .......... ..........  136M 50900K .......... .......... .......... .......... .......... 3.71M 50950K .......... .......... .......... .......... .......... 6.46M 51000K .......... .......... .......... .......... .......... 4.44M 51050K .......... .......... .......... .......... .......... 6.23M 51100K .......... .......... .......... .......... .......... 5.25M 51150K .......... .......... .......... .......... .......... 2.54M 51200K .......... .......... .......... .......... .......... 14.4M 51250K .......... .......... .......... .......... .......... 3.59M 51300K .......... .......... .......... .......... .......... 16.0M 51350K .......... .......... .......... .......... .......... 3.98M 51400K .......... .......... .......... .......... .......... 3.81M 51450K .......... .......... .......... .......... .......... 3.55M 51500K .......... .......... .......... .......... .......... 84.2M 51550K .......... .......... .......... .......... .......... 4.12M 51600K .......... .......... .......... .......... .......... 4.92M 51650K .......... .......... .......... .......... .......... 2.67M 51700K .......... .......... .......... .......... .......... 2.78M 51750K .......... .......... .......... .......... .......... 3.26M 51800K .......... .......... .......... .......... .......... 98.7M 51850K .......... .......... .......... .......... ..........  156M 51900K .......... .......... .......... .......... .......... 4.50M 51950K .......... .......... .......... .......... .......... 8.80M 52000K .......... .......... .......... .......... .......... 4.26M 52050K .......... .......... .......... .......... .......... 3.84M 52100K .......... .......... .......... .......... .......... 5.79M 52150K .......... .......... .......... .......... .......... 8.79M 52200K .......... .......... .......... .......... .......... 1.88M 52250K .......... .......... .......... .......... .......... 12.4M 52300K .......... .......... .......... .......... .......... 5.69M 52350K .......... .......... .......... .......... .......... 76.3M 52400K .......... .......... .......... .......... .......... 1.31M 52450K .......... .......... .......... .......... .......... 17.9M 52500K .......... .......... .......... .......... .......... 77.1M 52550K .......... .......... .......... .......... ..........  150M 52600K .......... .......... .......... .......... .......... 2.88M 52650K .......... .......... .......... .......... .......... 40.4M 52700K .......... .......... .......... .......... .......... 2.80M 52750K .......... .......... .......... .......... .......... 4.09M 52800K .......... .......... .......... .......... .......... 85.0M 52850K .......... .......... .......... .......... .......... 5.57M 52900K .......... .......... .......... .......... .......... 4.68M 52950K .......... .......... .......... .......... .......... 7.84M 53000K .......... .......... .......... .......... .......... 4.30M 53050K .......... .......... .......... .......... .......... 2.44M 53100K .......... .......... .......... .......... .......... 6.11M 53150K .......... .......... .......... .......... .......... 50.7M 53200K .......... .......... .......... .......... .......... 4.70M 53250K .......... .......... .......... .......... .......... 4.27M 53300K .......... .......... .......... .......... .......... 4.46M 53350K .......... .......... .......... .......... .......... 2.38M 53400K .......... .......... .......... .......... .......... 36.2M 53450K .......... .......... .......... .......... .......... 7.04M 53500K .......... .......... .......... .......... .......... 5.25M 53550K .......... .......... .......... .......... .......... 8.05M 53600K .......... .......... .......... .......... .......... 3.43M 53650K .......... .......... .......... .......... .......... 5.19M 53700K .......... .......... .......... .......... .......... 5.36M 53750K .......... .......... .......... .......... .......... 8.59M 53800K .......... .......... .......... .......... .......... 4.66M 53850K .......... .......... .......... .......... .......... 4.39M 53900K .......... .......... .......... .......... .......... 4.63M 53950K .......... .......... .......... .......... .......... 4.71M 54000K .......... .......... .......... .......... .......... 7.19M 54050K .......... .......... .......... .......... .......... 4.57M 54100K .......... .......... .......... .......... .......... 3.90M 54150K .......... .......... .......... .......... .......... 4.51M 54200K .......... .......... .......... .......... .......... 10.5M 54250K .......... .......... .......... .......... .......... 3.92M 54300K .......... .......... .......... .......... .......... 3.10M 54350K .......... .......... .......... .......... .......... 2.45M 54400K .......... .......... .......... .......... .......... 45.3M 54450K .......... .......... .......... .......... .......... 51.1M 54500K .......... .......... .......... .......... .......... 3.85M 54550K .......... .......... .......... .......... .......... 5.88M 54600K .......... .......... .......... .......... .......... 7.75M 54650K .......... .......... .......... .......... .......... 4.11M 54700K .......... .......... .......... .......... .......... 3.44M 54750K .......... .......... .......... .......... .......... 4.81M 54800K .......... .......... .......... .......... .......... 5.98M 54850K .......... .......... .......... .......... .......... 4.55M 54900K .......... .......... .......... .......... .......... 4.84M 54950K .......... .......... .......... .......... .......... 4.26M 55000K .......... .......... .......... .......... .......... 9.61M 55050K .......... .......... .......... .......... .......... 4.23M 55100K .......... .......... .......... .......... .......... 4.88M 55150K .......... .......... .......... .......... .......... 4.61M 55200K .......... .......... .......... .......... .......... 2.06M 55250K .......... .......... .......... .......... .......... 60.6M 55300K .......... .......... .......... .......... .......... 12.2M 55350K .......... .......... .......... .......... .......... 2.18M 55400K .......... .......... .......... .......... .......... 45.4M 55450K .......... .......... .......... .......... .......... 4.10M 55500K .......... .......... .......... .......... .......... 15.1M 55550K .......... .......... .......... .......... .......... 4.97M 55600K .......... .......... .......... .......... .......... 4.43M 55650K .......... .......... .......... .......... .......... 5.55M 55700K .......... .......... .......... .......... .......... 2.46M 55750K .......... .......... .......... .......... ..........  109M 55800K .......... .......... .......... .......... .......... 2.02M 55850K .......... .......... .......... .......... .......... 17.7M 55900K .......... .......... .......... .......... .......... 2.39M 55950K .......... .......... .......... .......... .......... 9.95M 56000K .......... .......... .......... .......... .......... 68.2M 56050K .......... .......... .......... .......... .......... 46.9M 56100K .......... .......... .......... .......... .......... 4.47M 56150K .......... .......... .......... .......... .......... 4.39M 56200K .......... .......... .......... .......... .......... 4.48M 56250K .......... .......... .......... .......... .......... 8.91M 56300K .......... .......... .......... .......... .......... 4.44M 56350K .......... .......... .......... .......... .......... 2.14M 56400K .......... .......... .......... .......... .......... 1.98M 56450K .......... .......... .......... .......... .......... 22.6M 56500K .......... .......... .......... .......... .......... 50.6M 56550K .......... .......... .......... .......... ..........  124M 56600K .......... .......... .......... .......... .......... 5.68M 56650K .......... .......... .......... .......... .......... 8.97M 56700K .......... .......... .......... .......... .......... 4.58M 56750K .......... .......... .......... .......... .......... 3.89M 56800K .......... .......... .......... .......... .......... 4.67M 56850K .......... .......... .......... .......... .......... 4.36M 56900K .......... .......... .......... .......... .......... 6.73M 56950K .......... .......... .......... .......... .......... 6.47M 57000K .......... .......... .......... .......... .......... 3.75M 57050K .......... .......... .......... .......... .......... 5.38M 57100K .......... .......... .......... .......... .......... 6.80M 57150K .......... .......... .......... .......... .......... 4.51M 57200K .......... .......... .......... .......... .......... 4.94M 57250K .......... .......... .......... .......... .......... 8.78M 57300K .......... .......... .......... .......... .......... 3.13M 57350K .......... .......... .......... .......... .......... 7.80M 57400K .......... .......... .......... .......... .......... 4.67M 57450K .......... .......... .......... .......... .......... 8.92M 57500K .......... .......... .......... .......... .......... 4.58M 57550K .......... .......... .......... .......... .......... 4.61M 57600K .......... .......... .......... .......... .......... 4.13M 57650K .......... .......... .......... .......... .......... 10.5M 57700K .......... .......... .......... .......... .......... 4.53M 57750K .......... .......... .......... .......... .......... 3.76M 57800K .......... .......... .......... .......... .......... 4.13M 57850K .......... .......... .......... .......... .......... 18.8M 57900K .......... .......... .......... .......... .......... 3.98M 57950K .......... .......... .......... .......... .......... 5.22M 58000K .......... .......... .......... .......... .......... 3.99M 58050K .......... .......... .......... .......... .......... 9.66M 58100K .......... .......... .......... .......... .......... 4.40M 58150K .......... .......... .......... .......... .......... 4.99M 58200K .......... .......... .......... .......... .......... 4.32M 58250K .......... .......... .......... .......... .......... 7.40M 58300K .......... .......... .......... .......... .......... 4.42M 58350K .......... .......... .......... .......... .......... 5.38M 58400K .......... .......... .......... .......... .......... 4.51M 58450K .......... .......... .......... .......... .......... 6.59M 58500K .......... .......... .......... .......... .......... 5.22M 58550K .......... .......... .......... .......... .......... 4.90M 58600K .......... .......... .......... .......... .......... 4.35M 58650K .......... .......... .......... .......... .......... 2.95M 58700K .......... .......... .......... .......... ..........  132M 58750K .......... .......... .......... .......... .......... 4.74M 58800K .......... .......... .......... .......... .......... 4.30M 58850K .......... .......... .......... .......... .......... 8.32M 58900K .......... .......... .......... .......... .......... 4.80M 58950K .......... .......... .......... .......... .......... 4.30M 59000K .......... .......... .......... .......... .......... 2.61M 59050K .......... .......... .......... .......... .......... 20.1M 59100K .......... .......... .......... .......... .......... 8.92M 59150K .......... .......... .......... .......... .......... 3.42M 59200K .......... .......... .......... .......... .......... 5.97M 59250K .......... .......... .......... .......... .......... 4.77M 59300K .......... .......... .......... .......... .......... 4.57M 59350K .......... .......... .......... .......... .......... 6.01M 59400K .......... .......... .......... .......... .......... 4.71M 59450K .......... .......... .......... .......... .......... 4.20M 59500K .......... .......... .......... .......... .......... 4.03M 59550K .......... .......... .......... .......... .......... 1.82M 59600K .......... .......... .......... .......... .......... 67.8M 59650K .......... .......... .......... .......... ..........  132M 59700K .......... .......... .......... .......... .......... 8.31M 59750K .......... .......... .......... .......... .......... 5.90M 59800K .......... .......... .......... .......... .......... 6.92M 59850K .......... .......... .......... .......... .......... 2.66M 59900K .......... .......... .......... .......... .......... 10.8M 59950K .......... .......... .......... .......... .......... 9.76M 60000K .......... .......... .......... .......... .......... 4.55M 60050K .......... .......... .......... .......... .......... 3.48M 60100K .......... .......... .......... .......... .......... 7.72M 60150K .......... .......... .......... .......... .......... 7.87M 60200K .......... .......... .......... .......... .......... 4.86M 60250K .......... .......... .......... .......... .......... 4.54M 60300K .......... .......... .......... .......... .......... 4.51M 60350K .......... .......... .......... .......... .......... 9.23M 60400K .......... .......... .......... .......... .......... 4.21M 60450K .......... .......... .......... .......... .......... 5.03M 60500K .......... .......... .......... .......... .......... 4.58M 60550K .......... .......... .......... .......... .......... 7.33M 60600K .......... .......... .......... .......... ..........  368K 60650K .......... .........                                   40.8M=15s2023-09-25 19:03:29 (3.95 MB/s) - 'exp_quant.zip' saved [62125370]--2023-09-25 19:03:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  181K 4s    50K .......... .......... .......... .......... .......... 12%  270K 3s   100K .......... .......... .......... .......... .......... 18%  269K 3s   150K .......... .......... .......... .......... .......... 24%  539K 2s   200K .......... .......... .......... .......... .......... 30%  542K 2s   250K .......... .......... .......... .......... .......... 36%  543K 2s   300K .......... .......... .......... .......... .......... 42%  544K 1s   350K .......... .......... .......... .......... .......... 48%  539K 1s   400K .......... .......... .......... .......... .......... 54% 1.03M 1s   450K .......... .......... .......... .......... .......... 60% 1.04M 1s   500K .......... .......... .......... .......... .......... 66%  556K 1s   550K .......... .......... .......... .......... .......... 72% 11.6M 0s   600K .......... .......... .......... .......... .......... 78%  565K 0s   650K .......... .......... .......... .......... .......... 84% 12.6M 0s   700K .......... .......... .......... .......... .......... 90%  565K 0s   750K .......... .......... .......... .......... .......... 96% 1022K 0s   800K .......... .......... .......                         100% 13.8M=1.5s2023-09-25 19:03:34 (541 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="46.91151714324951">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-25 18:53:32.653] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-25 18:53:32.653] [jLog] [info] building indexout : ./index[2023-09-25 18:53:32.654] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-25 18:53:32.662] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-25 18:53:32.662] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-25 18:53:32.674] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-25 18:53:32.676] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-25 18:53:32.739] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-25 18:53:32.739] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.0753 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 795.63 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-25 18:53:32.741] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-25 18:53:32.742] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-25 18:53:32.742] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-25 18:53:32.742] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-25 18:53:32.742] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-25 18:53:32.742] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-25 18:53:32.742] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-25 18:53:32.755] [puff::index::jointLog] [info] # segments = 23[2023-09-25 18:53:32.755] [puff::index::jointLog] [info] total length = 19592[2023-09-25 18:53:32.755] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-25 18:53:32.764] [puff::index::jointLog] [info] positional integer width = 15[2023-09-25 18:53:32.764] [puff::index::jointLog] [info] seqSize = 19592[2023-09-25 18:53:32.764] [puff::index::jointLog] [info] rankSize = 19592[2023-09-25 18:53:32.764] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-25 18:53:32.764] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-25 18:53:32.840] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-25 18:53:32.841] [puff::index::jointLog] [info] chunk size = 9796[2023-09-25 18:53:32.841] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-25 18:53:32.841] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-25 18:53:32.842] [puff::index::jointLog] [info] finished populating pos vector[2023-09-25 18:53:32.842] [puff::index::jointLog] [info] writing index components[2023-09-25 18:53:32.856] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-25 18:53:32.862] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-25 18:53:33.543] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-25 18:53:33.543] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-25 18:53:33.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-09-25 18:53:33.543] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-25 18:53:33.543] [jointLog] [info] parsing read library format[2023-09-25 18:53:33.543] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 521.06 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0687 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 471.64 us----------------------------------------------------------------------------------| Loading mphf table | Time = 732.37 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.0151 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 940.5 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 2.1008 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 695.45 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 299.5 us-----------------------------------------[2023-09-25 18:53:33.667] [jointLog] [info] Loading pufferfish index[2023-09-25 18:53:33.668] [jointLog] [info] Loading dense pufferfish index.[2023-09-25 18:53:33.678] [jointLog] [info] done[2023-09-25 18:53:33.678] [jointLog] [info] Index contained 15 targets[2023-09-25 18:53:33.678] [jointLog] [info] Number of decoys : 0[2023-09-25 18:53:33.747] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-25 18:53:33.747] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-25 18:53:33.749] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-09-25 18:53:33.749] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-25 18:53:33.749] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-25 18:53:33.749] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-09-25 18:53:33.749] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-25 18:53:33.749] [jointLog] [info] Mapping rate = 100%[2023-09-25 18:53:33.749] [jointLog] [info] finished quantifyLibrary()[2023-09-25 18:53:33.755] [jointLog] [info] Starting optimizer[2023-09-25 18:53:33.755] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-25 18:53:33.755] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-09-25 18:53:33.756] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-25 18:53:33.756] [jointLog] [info] Finished optimizer[2023-09-25 18:53:33.756] [jointLog] [info] writing output [2023-09-25 18:53:33.762] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="30.671167373657227">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-25 18:54:07.609] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-25 18:54:07.609] [jLog] [info] building indexout : ./index[2023-09-25 18:54:07.610] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-25 18:54:07.618] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-25 18:54:07.618] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-25 18:54:07.633] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-25 18:54:07.635] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-25 18:54:07.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-25 18:54:07.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 878.03 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 622.29 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-25 18:54:07.710] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-25 18:54:07.710] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-25 18:54:07.710] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-25 18:54:07.710] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-25 18:54:07.710] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-25 18:54:07.710] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-25 18:54:07.710] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-25 18:54:07.723] [puff::index::jointLog] [info] # segments = 23[2023-09-25 18:54:07.723] [puff::index::jointLog] [info] total length = 19592[2023-09-25 18:54:07.723] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-25 18:54:07.734] [puff::index::jointLog] [info] positional integer width = 15[2023-09-25 18:54:07.734] [puff::index::jointLog] [info] seqSize = 19592[2023-09-25 18:54:07.734] [puff::index::jointLog] [info] rankSize = 19592[2023-09-25 18:54:07.734] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-25 18:54:07.734] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-25 18:54:07.822] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-25 18:54:07.823] [puff::index::jointLog] [info] chunk size = 9796[2023-09-25 18:54:07.823] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-25 18:54:07.823] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-25 18:54:07.824] [puff::index::jointLog] [info] finished populating pos vector[2023-09-25 18:54:07.824] [puff::index::jointLog] [info] writing index components[2023-09-25 18:54:07.840] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-25 18:54:07.846] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-25 18:54:07.940] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-25 18:54:07.940] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-25 18:54:07.940] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-09-25 18:54:07.940] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-25 18:54:07.940] [jointLog] [info] parsing read library format[2023-09-25 18:54:07.940] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 828.29 us-----------------------------------------[2023-09-25 18:54:08.058] [jointLog] [info] Loading pufferfish index[2023-09-25 18:54:08.059] [jointLog] [info] Loading dense pufferfish index.size = 24-----------------------------------------| Loading contig offsets | Time = 2.3663 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 503.26 us----------------------------------------------------------------------------------| Loading mphf table | Time = 926.7 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 984.96 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 758.74 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.2483 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 958.81 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 364.33 us-----------------------------------------[2023-09-25 18:54:08.070] [jointLog] [info] done[2023-09-25 18:54:08.070] [jointLog] [info] Index contained 15 targets[2023-09-25 18:54:08.070] [jointLog] [info] Number of decoys : 0[2023-09-25 18:54:08.142] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-25 18:54:08.142] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-25 18:54:08.145] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-09-25 18:54:08.145] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-25 18:54:08.145] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-25 18:54:08.145] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-09-25 18:54:08.145] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-25 18:54:08.145] [jointLog] [info] Mapping rate = 100%[2023-09-25 18:54:08.145] [jointLog] [info] finished quantifyLibrary()[2023-09-25 18:54:08.151] [jointLog] [info] Starting optimizer[2023-09-25 18:54:08.166] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-25 18:54:08.166] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-09-25 18:54:08.167] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-25 18:54:08.167] [jointLog] [info] Finished optimizer[2023-09-25 18:54:08.167] [jointLog] [info] writing output [2023-09-25 18:54:08.173] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="31.372331857681274">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-25 18:54:38.505] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-25 18:54:38.505] [jLog] [info] building indexout : ./index[2023-09-25 18:54:38.505] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-25 18:54:38.514] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-25 18:54:38.514] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-25 18:54:38.529] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-25 18:54:38.531] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-25 18:54:38.597] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-25 18:54:38.598] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.0405 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 806.78 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-25 18:54:38.600] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-25 18:54:38.600] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-25 18:54:38.600] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-25 18:54:38.600] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-25 18:54:38.600] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-25 18:54:38.600] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-25 18:54:38.600] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-25 18:54:38.612] [puff::index::jointLog] [info] # segments = 23[2023-09-25 18:54:38.612] [puff::index::jointLog] [info] total length = 19592[2023-09-25 18:54:38.612] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-25 18:54:38.623] [puff::index::jointLog] [info] positional integer width = 15[2023-09-25 18:54:38.623] [puff::index::jointLog] [info] seqSize = 19592[2023-09-25 18:54:38.623] [puff::index::jointLog] [info] rankSize = 19592[2023-09-25 18:54:38.623] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-25 18:54:38.623] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-25 18:54:38.704] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-25 18:54:38.704] [puff::index::jointLog] [info] chunk size = 9796[2023-09-25 18:54:38.704] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-25 18:54:38.704] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-25 18:54:38.705] [puff::index::jointLog] [info] finished populating pos vector[2023-09-25 18:54:38.705] [puff::index::jointLog] [info] writing index components[2023-09-25 18:54:38.721] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-25 18:54:38.726] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-25 18:54:38.825] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-25 18:54:38.825] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-25 18:54:38.826] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-09-25 18:54:38.826] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-25 18:54:38.826] [jointLog] [info] parsing read library format[2023-09-25 18:54:38.826] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 692.05 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.9934 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 338.29 us----------------------------------------------------------------------------------| Loading mphf table | Time = 794.41 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 839.62 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 669.85 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.1273 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 962.9 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 519.45 us-----------------------------------------[2023-09-25 18:54:38.932] [jointLog] [info] Loading pufferfish index[2023-09-25 18:54:38.933] [jointLog] [info] Loading dense pufferfish index.[2023-09-25 18:54:38.943] [jointLog] [info] done[2023-09-25 18:54:38.943] [jointLog] [info] Index contained 15 targets[2023-09-25 18:54:38.943] [jointLog] [info] Number of decoys : 0[2023-09-25 18:54:39.013] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-25 18:54:39.013] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-25 18:54:39.015] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-09-25 18:54:39.015] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-25 18:54:39.015] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-25 18:54:39.015] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-09-25 18:54:39.015] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-25 18:54:39.015] [jointLog] [info] Mapping rate = 100%[2023-09-25 18:54:39.015] [jointLog] [info] finished quantifyLibrary()[2023-09-25 18:54:39.021] [jointLog] [info] Starting optimizer[2023-09-25 18:54:39.022] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-25 18:54:39.022] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-09-25 18:54:39.023] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-25 18:54:39.023] [jointLog] [info] Finished optimizer[2023-09-25 18:54:39.023] [jointLog] [info] writing output [2023-09-25 18:54:39.029] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="35.010976791381836">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "46686b433fbe3f4e",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "e3c0ac8fe2be2294",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/0/5/a/dataset_05a0e985-f2da-4309-ad7a-da5ad081de03.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "create_time": "2023-09-25T18:55:09.704548",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-tvkj6",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "9f721cacada6270e",  "inputs": {   "afile": {    "id": "46686b433fbe3f4e",    "src": "hda",    "uuid": "e6e73ccc-eba0-4ab7-a535-783b89732d08"   },   "transcript": {    "id": "e3c0ac8fe2be2294",    "src": "hda",    "uuid": "05a0e985-f2da-4309-ad7a-da5ad081de03"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695668114.0000000",    "title": "Job End Time",    "value": "2023-09-25 18:55:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695668111.0000000",    "title": "Job Start Time",    "value": "2023-09-25 18:55:11"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "188da14b003e5aae",    "src": "hda",    "uuid": "6f0a4c62-5a7b-4971-a84e-719c9a1e6ce0"   },   "postSample": {    "id": "7ae6562d281bde7a",    "src": "hda",    "uuid": "9e00220d-0404-478e-b4a7-5636978f3b89"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/5/a/dataset_05a0e985-f2da-4309-ad7a-da5ad081de03.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-09-25 18:55:12.037] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-09-25 18:55:12.037] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-09-25 18:55:12.037] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat\", fasta = \"/galaxy/server/database/objects/0/5/a/dataset_05a0e985-f2da-4309-ad7a-da5ad081de03.dat\" . . .done\n[2023-09-25 18:55:12.574] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A[2023-09-25 18:55:12.811] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-09-25 18:55:12.819] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-09-25 18:55:12.819] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2023-09-25 18:55:12.819] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-09-25 18:55:12.820] [jointLog] [info] starting optimizer\n[2023-09-25 18:55:12.821] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-09-25 18:55:12.821] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-09-25 18:55:12.822] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-09-25 18:55:12.822] [jointLog] [info] finished optimizer\n[2023-09-25 18:55:12.822] [jointLog] [info] writing output\n[2023-09-25 18:55:12.826] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/5/a/dataset_05a0e985-f2da-4309-ad7a-da5ad081de03.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-09-25 18:55:12.037] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-09-25 18:55:12.037] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-09-25 18:55:12.037] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat\", fasta = \"/galaxy/server/database/objects/0/5/a/dataset_05a0e985-f2da-4309-ad7a-da5ad081de03.dat\" . . .done\n[2023-09-25 18:55:12.574] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A[2023-09-25 18:55:12.811] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-09-25 18:55:12.819] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-09-25 18:55:12.819] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2023-09-25 18:55:12.819] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-09-25 18:55:12.820] [jointLog] [info] starting optimizer\n[2023-09-25 18:55:12.821] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-09-25 18:55:12.821] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-09-25 18:55:12.822] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-09-25 18:55:12.822] [jointLog] [info] finished optimizer\n[2023-09-25 18:55:12.822] [jointLog] [info] writing output\n[2023-09-25 18:55:12.826] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-25T18:55:25.234665",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_cmqb93yq.sam v. /tmp/history_bam_converted_to_sam_0lkmpum2.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -18013,9 +18014,9 @@\n 2071:NM_022658:827:189\t83\tNM_022658\t967\t1\t50M\t=\t828\t-189\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2980:NM_022658:826:190\t83\tNM_022658\t967\t1\t50M\t=\t827\t-190\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9883:NM_022658:822:194\t147\tNM_022658\t967\t1\t50M\t=\t823\t-194\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1395:NM_022658:967:112\t99\tNM_022658\t968\t1\t50M\t=\t1030\t112\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5474:NM_022658:967:171\t99\tNM_022658\t968\t1\t50M\t=\t1089\t171\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1989:NM_022658:833:184\t147\tNM_022658\t968\t1\t50M\t=\t834\t-184\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7622:NM_022658:968:140\t99\tNM_022658\t969\t1\t50M\t=\t1059\t140\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1913:NM_022658:831:187\t83\tNM_022658\t969\t1\t50M\t=\t832\t-187\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -27014,8 +27015,8 @@\n 3076:NM_173860:414:198\t99\tNM_173860\t415\t1\t50M\t=\t563\t198\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3326:NM_173860:414:135\t163\tNM_173860\t415\t1\t50M\t=\t500\t135\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8790:NM_173860:286:178\t147\tNM_173860\t415\t1\t50M\t=\t287\t-178\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7340:NM_173860:415:212\t99\tNM_173860\t416\t1\t50M\t=\t578\t212\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 614:NM_173860:277:188\t83\tNM_173860\t416\t1\t50M\t=\t278\t-188\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9840:NM_173860:284:181\t147\tNM_173860\t416\t1\t50M\t=\t285\t-181\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3019:NM_173860:416:157\t163\tNM_173860\t417\t1\t50M\t=\t524\t157\tCGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 35.010976791381836, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/0/5/a/dataset_05a0e985-f2da-4309-ad7a-da5ad081de03.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-25 18:55:12.037] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-25 18:55:12.037] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2023-09-25 18:55:12.037] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat", fasta = "/galaxy/server/database/objects/0/5/a/dataset_05a0e985-f2da-4309-ad7a-da5ad081de03.dat" . . .done[2023-09-25 18:55:12.574] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2023-09-25 18:55:12.811] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2023-09-25 18:55:12.819] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2023-09-25 18:55:12.819] [jointLog] [info] Counted 28503 total reads in the equivalence classes Resetting BAMQueue from file(s) [ "/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2023-09-25 18:55:12.819] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-25 18:55:12.820] [jointLog] [info] starting optimizer[2023-09-25 18:55:12.821] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-25 18:55:12.821] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2023-09-25 18:55:12.822] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-25 18:55:12.822] [jointLog] [info] finished optimizer[2023-09-25 18:55:12.822] [jointLog] [info] writing output[2023-09-25 18:55:12.826] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/e/6/e/dataset_e6e73ccc-eba0-4ab7-a535-783b89732d08.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="31.765857458114624">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-25 18:55:45.800] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-25 18:55:45.800] [jLog] [info] building indexout : ./index[2023-09-25 18:55:45.801] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-25 18:55:45.809] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-25 18:55:45.809] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-25 18:55:45.822] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-25 18:55:45.824] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-25 18:55:45.887] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-25 18:55:45.887] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.4844 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 977.02 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-25 18:55:45.890] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-25 18:55:45.890] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-25 18:55:45.890] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-25 18:55:45.890] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-25 18:55:45.890] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-25 18:55:45.890] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-25 18:55:45.890] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-25 18:55:45.902] [puff::index::jointLog] [info] # segments = 23[2023-09-25 18:55:45.902] [puff::index::jointLog] [info] total length = 19592[2023-09-25 18:55:45.902] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-25 18:55:45.913] [puff::index::jointLog] [info] positional integer width = 15[2023-09-25 18:55:45.913] [puff::index::jointLog] [info] seqSize = 19592[2023-09-25 18:55:45.913] [puff::index::jointLog] [info] rankSize = 19592[2023-09-25 18:55:45.913] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-25 18:55:45.913] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-25 18:55:46.010] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-25 18:55:46.010] [puff::index::jointLog] [info] chunk size = 9796[2023-09-25 18:55:46.010] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-25 18:55:46.010] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-25 18:55:46.011] [puff::index::jointLog] [info] finished populating pos vector[2023-09-25 18:55:46.011] [puff::index::jointLog] [info] writing index components[2023-09-25 18:55:46.026] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-25 18:55:46.031] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-25 18:55:46.125] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-25 18:55:46.125] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-25 18:55:46.125] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2023-09-25 18:55:46.125] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-25 18:55:46.125] [jointLog] [info] parsing read library format[2023-09-25 18:55:46.125] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 500.54 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.5897 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 527.3 us----------------------------------------------------------------------------------| Loading mphf table | Time = 733.71 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 4.4735 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 815.07 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.9072 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 1.1724 ms----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 540.15 us-----------------------------------------[2023-09-25 18:55:46.230] [jointLog] [info] Loading pufferfish index[2023-09-25 18:55:46.231] [jointLog] [info] Loading dense pufferfish index.[2023-09-25 18:55:46.246] [jointLog] [info] done[2023-09-25 18:55:46.246] [jointLog] [info] Index contained 15 targets[2023-09-25 18:55:46.246] [jointLog] [info] Number of decoys : 0[2023-09-25 18:55:46.313] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-25 18:55:46.313] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-25 18:55:46.315] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2023-09-25 18:55:46.315] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2023-09-25 18:55:46.315] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-25 18:55:46.315] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-25 18:55:46.315] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-25 18:55:46.315] [jointLog] [info] Mapping rate = 100%[2023-09-25 18:55:46.315] [jointLog] [info] finished quantifyLibrary()[2023-09-25 18:55:46.320] [jointLog] [info] Starting optimizer[2023-09-25 18:55:46.321] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-25 18:55:46.321] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-09-25 18:55:46.322] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-25 18:55:46.322] [jointLog] [info] Finished optimizer[2023-09-25 18:55:46.322] [jointLog] [info] writing output [2023-09-25 18:55:46.326] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="30.16195011138916">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-09-25 18:56:15.715] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-09-25 18:56:15.715] [jLog] [info] building indexout : ./index[2023-09-25 18:56:15.716] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-09-25 18:56:15.723] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-09-25 18:56:15.723] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-09-25 18:56:15.736] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-09-25 18:56:15.737] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-09-25 18:56:15.795] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-09-25 18:56:15.795] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 601.22 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 715.5 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-09-25 18:56:15.797] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-09-25 18:56:15.797] [puff::index::jointLog] [info] contig count for validation: 23[2023-09-25 18:56:15.797] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-09-25 18:56:15.797] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-09-25 18:56:15.798] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-09-25 18:56:15.798] [puff::index::jointLog] [info] bits per offset entry 6[2023-09-25 18:56:15.798] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-09-25 18:56:15.807] [puff::index::jointLog] [info] # segments = 23[2023-09-25 18:56:15.808] [puff::index::jointLog] [info] total length = 19592[2023-09-25 18:56:15.808] [puff::index::jointLog] [info] Reading the reference files ...[2023-09-25 18:56:15.817] [puff::index::jointLog] [info] positional integer width = 15[2023-09-25 18:56:15.817] [puff::index::jointLog] [info] seqSize = 19592[2023-09-25 18:56:15.817] [puff::index::jointLog] [info] rankSize = 19592[2023-09-25 18:56:15.817] [puff::index::jointLog] [info] edgeVecSize = 0[2023-09-25 18:56:15.817] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elap..g BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-09-25 18:56:15.897] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-09-25 18:56:15.898] [puff::index::jointLog] [info] chunk size = 9796[2023-09-25 18:56:15.898] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-09-25 18:56:15.898] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-09-25 18:56:15.899] [puff::index::jointLog] [info] finished populating pos vector[2023-09-25 18:56:15.899] [puff::index::jointLog] [info] writing index components[2023-09-25 18:56:15.913] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-09-25 18:56:15.918] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-09-25 18:56:16.014] [jointLog] [info] setting maxHashResizeThreads to 6[2023-09-25 18:56:16.014] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-09-25 18:56:16.014] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-09-25 18:56:16.014] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-09-25 18:56:16.014] [jointLog] [info] parsing read library format[2023-09-25 18:56:16.014] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 613.96 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.2752 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 492.21 us----------------------------------------------------------------------------------| Loading mphf table | Time = 644.06 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 730.51 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 721.15 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.053 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 660.6 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 532.48 us-----------------------------------------[2023-09-25 18:56:16.120] [jointLog] [info] Loading pufferfish index[2023-09-25 18:56:16.121] [jointLog] [info] Loading dense pufferfish index.[2023-09-25 18:56:16.129] [jointLog] [info] done[2023-09-25 18:56:16.129] [jointLog] [info] Index contained 15 targets[2023-09-25 18:56:16.130] [jointLog] [info] Number of decoys : 0[2023-09-25 18:56:16.130] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2023-09-25 18:56:16.198] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-09-25 18:56:16.198] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-09-25 18:56:16.200] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-09-25 18:56:16.200] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-09-25 18:56:16.200] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-09-25 18:56:16.200] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-09-25 18:56:16.201] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-09-25 18:56:16.201] [jointLog] [info] Mapping rate = 100%[2023-09-25 18:56:16.201] [jointLog] [info] finished quantifyLibrary()[2023-09-25 18:56:16.205] [jointLog] [info] Starting optimizer[2023-09-25 18:56:16.206] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-09-25 18:56:16.206] [jointLog] [info] iteration = 0 | max rel diff. = 49[2023-09-25 18:56:16.206] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2023-09-25 18:56:16.210] [jointLog] [info] Computed expected counts (for bias correction)[2023-09-25 18:56:16.212] [jointLog] [info] processed bias for 13.3% of the transcripts[2023-09-25 18:56:16.212] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-09-25 18:56:16.212] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-09-25 18:56:16.212] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-09-25 18:56:16.213] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-09-25 18:56:16.213] [jointLog] [info] processed bias for 46.7% of the transcripts[2023-09-25 18:56:16.213] [jointLog] [info] processed bias for 66.7% of the transcripts[2023-09-25 18:56:16.213] [jointLog] [info] processed bias for 66.7% of the transcripts[2023-09-25 18:56:16.214] [jointLog] [info] processed bias for 100.0% of the transcripts[2023-09-25 18:56:16.215] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-09-25 18:56:16.215] [jointLog] [info] Finished optimizer[2023-09-25 18:56:16.215] [jointLog] [info] writing output [2023-09-25 18:56:16.219] [jointLog] [info] writing equivalence class counts.[2023-09-25 18:56:16.220] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2023-09-25 18:56:16.220] [jointLog] [info] done.[2023-09-25 18:56:16.223] [jointLog] [info] done writing equivalence class counts.[2023-09-25 18:56:16.223] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="25.8527774810791">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_bams": {   "id": "a4353efb2f6ff760",   "src": "hda"  },  "input_bed": {   "id": "7c4d920e3eacc061",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/7/c/dataset_17cfbcab-6ef5-41b9-b520-12e164cb1296.dat\u0027 \u00270\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/a/0/0/metadata_a005c1e6-0cec-48b5-ada7-4c0f45fe6ef5.dat\u0027 \u00270.bai\u0027 \u0026\u0026   samtools bedcov  \u0027/galaxy/server/database/objects/0/f/0/dataset_0f0156dd-7c41-4a72-8713-e92b665be460.dat\u0027 \u00270\u0027 \u003e \u0027/galaxy/server/database/objects/d/6/f/dataset_d6f49ac3-57b3-417e-98fe-795124c48d7b.dat\u0027",  "command_version": null,  "create_time": "2023-09-25T18:57:58.429441",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-828m5",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "b4d4c1848591c8ef",  "inputs": {   "input_bams": {    "id": "a4353efb2f6ff760",    "src": "hda",    "uuid": "17cfbcab-6ef5-41b9-b520-12e164cb1296"   },   "input_bams1": {    "id": "a4353efb2f6ff760",    "src": "hda",    "uuid": "17cfbcab-6ef5-41b9-b520-12e164cb1296"   },   "input_bed": {    "id": "7c4d920e3eacc061",    "src": "hda",    "uuid": "0f0156dd-7c41-4a72-8713-e92b665be460"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "a56038e1c671e462",    "src": "hda",    "uuid": "d6f49ac3-57b3-417e-98fe-795124c48d7b"   }  },  "params": {   "__input_ext": "\"bed\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "countdel": "false",   "dbkey": "\"?\"",   "mapq": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-25T18:58:04.639468",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 25.8527774810791, "tool_id": "samtools_bedcov", "tool_version": "2.0.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="38.02018189430237">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="32.407143115997314">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="34.76950550079346">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="35.465296506881714">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="32.64207911491394">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="67.72899651527405">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_loom": {   "id": "a908177c9f18b124",   "src": "hda"  },  "plot_log": false }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R\u0027 -i \u0027/galaxy/server/database/objects/6/a/d/dataset_6ad2424a-168a-47a9-862e-ed681a894673.dat\u0027 -o \u0027/galaxy/server/database/objects/3/a/6/dataset_3a62105a-a0e2-435c-92b9-e3c617b93d0f.dat\u0027",  "command_version": null,  "create_time": "2023-09-25T19:00:12.099284",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-z6dlm",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "ac84b88ca6d0b1ec",  "inputs": {   "input_loom": {    "id": "a908177c9f18b124",    "src": "hda",    "uuid": "6ad2424a-168a-47a9-862e-ed681a894673"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_plot": {    "id": "e6c68588f77e8766",    "src": "hda",    "uuid": "3a62105a-a0e2-435c-92b9-e3c617b93d0f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "plot_log": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-25T19:01:02.348164",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 67.72899651527405, "tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="40.28017997741699">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="41.94589400291443">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="39.55591678619385">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="130.57647895812988">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/3/d/3/dataset_3d33f444-3da8-44c8-b47a-7181f2fd98d0.dat--pe1-2fastq:/galaxy/server/database/objects/8/7/2/dataset_87295dbc-41e1-4994-85eb-0f3ac534bfac.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/d/3/dataset_3d33f444-3da8-44c8-b47a-7181f2fd98d0.dat']      right reads: ['/galaxy/server/database/objects/8/7/2/dataset_87295dbc-41e1-4994-85eb-0f3ac534bfac.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/d/3/dataset_3d33f444-3da8-44c8-b47a-7181f2fd98d0.dat  0:00:01.135     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/7/2/dataset_87295dbc-41e1-4994-85eb-0f3ac534bfac.dat  0:00:02.233     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.244    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.603    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.603    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.807    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.832    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.855    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.857    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.859    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.861    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.870    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.871    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.871    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/d/3/dataset_3d33f444-3da8-44c8-b47a-7181f2fd98d0.dat  0:00:02.891    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/7/2/dataset_87295dbc-41e1-4994-85eb-0f3ac534bfac.dat  0:00:02.908    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.908    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.908    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.921    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.922    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.922    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.932    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.933    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.933    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.933    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/d/3/dataset_3d33f444-3da8-44c8-b47a-7181f2fd98d0.dat and /galaxy/server/database/objects/8/7/2/dataset_87295dbc-41e1-4994-85eb-0f3ac534bfac.dat  0:00:02.992    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.001    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.006    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.046    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.046    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.047    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:03.052    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.110    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.115     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.285   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.291     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.453   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.557     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.557     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.557     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.558     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.559     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.559     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.559     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.064     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.073    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.074    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.265    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.265    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.363    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.364    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.364    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.365    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.365    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.365    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.363     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.377    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.783    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.783    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.989    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.010    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.030    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.030    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.034    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.036    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensi..      : 346)   Closing short gaps  0:00:09.345    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.347    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.347    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.347    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.347    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.347    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.347    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.347    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.347    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.347    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.348    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.348    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.348    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.348    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:09.348    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.348    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.348    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.357    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.357    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.357    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.361    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.361    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.362    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:09.366    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:09.370    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:09.375    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:09.382    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.382    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.382    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.382    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.382    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.382    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.508   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.730   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.506   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.507   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.517    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.662   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.667   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.674   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.698   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.704   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.722    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.723    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.723    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.723    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.723    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.724    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.724    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.724    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.724    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.724    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.724    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.724    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.724    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.724    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.725    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.726    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.726    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.726    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.726    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.726    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.726    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.728    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:11.733    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:11.737    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:11.746    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:11.764    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.767    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="46.04305672645569">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/4/a/c/dataset_4aca46b8-e340-490a-8d2a-00bb065edc43.dat--pe1-2fasta:/galaxy/server/database/objects/9/1/4/dataset_914f3025-5785-45de-b2e2-98acfc988053.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/4/a/c/dataset_4aca46b8-e340-490a-8d2a-00bb065edc43.dat']      right reads: ['/galaxy/server/database/objects/9/1/4/dataset_914f3025-5785-45de-b2e2-98acfc988053.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.283     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.446   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.545     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.545     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.545     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.546     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.547     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.547     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.547     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.054     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.062    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.062    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.263    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.263    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.358    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.359    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.359    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.360    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.360    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.360    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.326     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.340    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.772    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.772    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.967    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.988    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.010    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:03.010    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.015    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.016    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:03.017    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:03.017    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:03.017    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:03.018    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:03.018    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:03.018    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:03.018    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.034    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:03.034    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:03.041    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:03.051    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:03.051    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:03.051    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:03.051    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:03.051    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:03.093    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:03.198    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.566    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:04.190    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:05.324    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:07.180    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:07.182    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:07.182    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:07.182    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:07.183    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:07.183    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:07.183    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:07.183    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:07.183    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:07.183    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:07.184    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:07.184    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:07.185    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:07.185    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:07.185    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:08.310     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:08.320    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:08.779    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:08.779    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:08.986    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:09.019    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:09.056    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:09.056    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:09.062    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:09.065    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:09.065    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:09.068    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:09.068    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:09.068    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.068    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:09.072    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:09.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:09.072    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:09.072    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:09.072    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:09.072    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.072 ..indices  0:00:11.010    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:11.010    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:11.011    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:11.011    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:11.012    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:11.012    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:11.012    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:11.012    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:11.012    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:11.012    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:11.012    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:11.012    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:11.012    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:11.012    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:11.023    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:11.024    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:11.024    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:11.029    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.029    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.030    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:11.034    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:11.038    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:11.043    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:11.050    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:11.051    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:11.051    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:11.051    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:11.051    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:11.051    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:11.177   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.405   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.178   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:13.179   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:13.190    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:13.327   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:13.332   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.336   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.344   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:13.344   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:13.344   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:13.360   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.366   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.386    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:13.386    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:13.386    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:13.387    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:13.387    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.387    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.387    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.387    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:13.387    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:13.387    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:13.387    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.389    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.389    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:13.390    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:13.390    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.390    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.390    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.390    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:13.390    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:13.390    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:13.390    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:13.391    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.391    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.391    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:13.391    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:13.391    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.391    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.391    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.391    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.391    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.391    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.391    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:13.391    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:13.391    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:13.392    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:13.398    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:13.402    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:13.410    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:13.427    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:13.429    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 13 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="10.07043719291687">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.07043719291687, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="58.19070744514465">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/11/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/7/d/9/dataset_7d96b45b-b970-433f-9adc-b5c2e384bf4e.dat--pe1-2fastq:/galaxy/server/database/objects/e/0/6/dataset_e06069d5-fe4d-44c2-a24f-d1eb0e497035.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/11/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/d/9/dataset_7d96b45b-b970-433f-9adc-b5c2e384bf4e.dat']      right reads: ['/galaxy/server/database/objects/e/0/6/dataset_e06069d5-fe4d-44c2-a24f-d1eb0e497035.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/11/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/d/9/dataset_7d96b45b-b970-433f-9adc-b5c2e384bf4e.dat  0:00:01.034     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/0/6/dataset_e06069d5-fe4d-44c2-a24f-d1eb0e497035.dat  0:00:01.978     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.990    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.329    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.329    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.522    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.548    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.568    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.571    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.575    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.576    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.587    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.588    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.588    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/d/9/dataset_7d96b45b-b970-433f-9adc-b5c2e384bf4e.dat  0:00:02.609    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/0/6/dataset_e06069d5-fe4d-44c2-a24f-d1eb0e497035.dat  0:00:02.629    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.630    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.630    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.644    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.644    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.645    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.645    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.645    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.645    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.645    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.645    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.645    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.646    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.646    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.663    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.663    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.663    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.663    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/d/9/dataset_7d96b45b-b970-433f-9adc-b5c2e384bf4e.dat and /galaxy/server/database/objects/e/0/6/dataset_e06069d5-fe4d-44c2-a24f-d1eb0e497035.dat  0:00:02.720    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.727    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.731    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.772    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.772    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.772    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml  0:00:02.777    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/11/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/11/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.278   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.285     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.449   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.561     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.562     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.562     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.562     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.563     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.564     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.564     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:01.106     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.115    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.116    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.325    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.325    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.421    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.421    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.422    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.422    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.422    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.422    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.485     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.499    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.912    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.912    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.105    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.135    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.155    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:03.155    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.157    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.159    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:03.159    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea.. short gaps  0:00:06.743    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:06.745    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:06.745    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:06.746    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:06.746    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:06.746    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.746    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:06.746    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:06.746    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:06.746    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:06.746    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:06.746    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.746    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.756    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:06.757    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:06.757    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:06.761    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:06.761    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:06.762    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:06.766    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:06.771    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/simplified_contigs.fasta  0:00:06.775    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/intermediate_contigs.fasta  0:00:06.784    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:06.784    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.784    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.784    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:06.784    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:06.784    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:06.913   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.133   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.907   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:08.907   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:08.918    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:09.056   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:09.063   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.066   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.070   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:09.071   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:09.071   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:09.086   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.092   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.113    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:09.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:09.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:09.113    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:09.113    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.113    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.113    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:09.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:09.113    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:09.115    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.115    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.115    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:09.115    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:09.115    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.116    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.116    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.116    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:09.116    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:09.116    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:09.116    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:09.117    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:09.117    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:09.117    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:09.117    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:09.117    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.117    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.117    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.117    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.117    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.117    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.117    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:09.117    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.117    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:09.119    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:09.124    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:09.129    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/final_contigs.paths  0:00:09.137    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/scaffolds.paths  0:00:09.154    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:09.157    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/11/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="50.59939432144165">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/14/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/c/8/5/dataset_c852220f-e4d0-4966-bc2a-0dd8c55953f2.dat--pe1-2fastq:/galaxy/server/database/objects/3/8/2/dataset_382c79d6-8155-4100-872c-7826e1f5e68b.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/14/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/8/5/dataset_c852220f-e4d0-4966-bc2a-0dd8c55953f2.dat']      right reads: ['/galaxy/server/database/objects/3/8/2/dataset_382c79d6-8155-4100-872c-7826e1f5e68b.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/14/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/8/5/dataset_c852220f-e4d0-4966-bc2a-0dd8c55953f2.dat  0:00:01.058     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/8/2/dataset_382c79d6-8155-4100-872c-7826e1f5e68b.dat  0:00:02.031     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.043    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.368    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.368    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.543    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.565    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.585    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.587    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.591    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.593    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.603    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.603    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.603    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/8/5/dataset_c852220f-e4d0-4966-bc2a-0dd8c55953f2.dat  0:00:02.622    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/8/2/dataset_382c79d6-8155-4100-872c-7826e1f5e68b.dat  0:00:02.641    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.641    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.641    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:08.002    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:08.003    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:08.003    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:08.012    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:08.012    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:08.012    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:08.012    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/8/5/dataset_c852220f-e4d0-4966-bc2a-0dd8c55953f2.dat and /galaxy/server/database/objects/3/8/2/dataset_382c79d6-8155-4100-872c-7826e1f5e68b.dat  0:00:08.069    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:08.076    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:08.079    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:08.118    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:08.119    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:08.119    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml  0:00:08.123    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/14/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/14/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.109    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.114     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.277   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.285     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.448   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.560     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.560     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.560     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.561     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.562     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.562     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.562     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:01.098     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.106    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.106    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.312    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.312    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.414    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.414    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.415    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.415    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.416    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.416    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:02.527     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:02.540    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.964    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:02.964    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.170    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.194    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.218    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:03.218    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.221    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.222    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..osing short gaps  0:00:06.999    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.003    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.003    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.003    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.003    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.003    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.003    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.003    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.003    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.003    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.003    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.003    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.004    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.004    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.004    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.004    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.004    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.004    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.004    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:07.004    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.004    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.004    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.017    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.017    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.017    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.024    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.024    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:07.024    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:07.029    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:07.033    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/simplified_contigs.fasta  0:00:07.037    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/intermediate_contigs.fasta  0:00:07.045    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.045    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.045    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.045    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:07.045    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.045    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:07.169   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.387   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.157   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:09.157   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:09.169    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:09.306   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:09.311   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.313   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.317   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:09.317   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:09.317   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:09.332   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.337   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.356    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:09.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:09.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:09.357    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:09.357    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.357    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.357    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:09.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:09.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:09.358    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.359    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.359    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:09.359    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:09.359    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.359    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.359    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.359    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:09.359    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:09.359    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:09.359    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:09.360    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:09.360    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:09.360    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:09.360    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:09.360    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:09.360    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:09.360    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:09.360    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.360    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.361    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.361    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.361    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.361    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.361    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.361    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:09.361    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.361    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:09.363    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:09.367    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:09.372    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/final_contigs.paths  0:00:09.380    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/scaffolds.paths  0:00:09.397    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:09.400    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/14/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="11.386795997619629">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 11.386795997619629, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="48.547685623168945">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/19/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/e/9/0/dataset_e908ea75-4d8a-43d1-bacd-344770ef60cf.dat--pe1-2fastq:/galaxy/server/database/objects/e/4/1/dataset_e41817ac-c2b7-4ac9-adc1-d752226ba950.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/19/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/e/9/0/dataset_e908ea75-4d8a-43d1-bacd-344770ef60cf.dat']      right reads: ['/galaxy/server/database/objects/e/4/1/dataset_e41817ac-c2b7-4ac9-adc1-d752226ba950.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/19/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/19/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/19/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/9/0/dataset_e908ea75-4d8a-43d1-bacd-344770ef60cf.dat  0:00:01.013     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/4/1/dataset_e41817ac-c2b7-4ac9-adc1-d752226ba950.dat  0:00:01.930     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.937    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.252    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.253    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.440    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.464    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.487    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.489    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.492    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.494    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.505    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.505    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.505    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/9/0/dataset_e908ea75-4d8a-43d1-bacd-344770ef60cf.dat  0:00:02.524    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/4/1/dataset_e41817ac-c2b7-4ac9-adc1-d752226ba950.dat  0:00:02.541    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.542    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.542    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.556    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.557    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.558    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.558    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.570    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.570    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.570    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.570    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/e/9/0/dataset_e908ea75-4d8a-43d1-bacd-344770ef60cf.dat and /galaxy/server/database/objects/e/4/1/dataset_e41817ac-c2b7-4ac9-adc1-d752226ba950.dat  0:00:02.627    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.633    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.638    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.680    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.680    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.680    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/19/working/corrected/corrected.yaml  0:00:02.685    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/19/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/19/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/19/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.281   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.288     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.449   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.548     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.548     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.548     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.549     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.549     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.549     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.549     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.018     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.026    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.027    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.223    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.223    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.311    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.312    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.312    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.312    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.313    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.313    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.283     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.296    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.704    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.704    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.892    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.930    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.955    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.955    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.963    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.965    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:09.500    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.503    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.503    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.504    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.504    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.504    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.504    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.504    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.504    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.504    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:09.504    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.504    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.504    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.518    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.518    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.518    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.524    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.524    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.525    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta  0:00:09.529    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg  0:00:09.533    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/simplified_contigs.fasta  0:00:09.538    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/intermediate_contigs.fasta  0:00:09.545    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.545    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.545    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.545    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.545    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.545    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.674   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.893   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.678   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.678   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.688    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.828   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.832   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.835   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.840   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.840   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.840   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.854   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.862   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.882    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.882    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.882    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.882    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.883    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.884    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.884    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.884    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.884    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.884    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.887    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.888    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.888    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.888    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.888    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.888    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.888    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.888    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.888    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.888    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.888    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.889    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.889    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.889    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.889    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.889    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.889    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.889    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.889    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.889    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.889    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.890    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.890    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.890    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.890    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.890    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.890    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.890    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.890    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.891    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta  0:00:11.895    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg  0:00:11.899    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/final_contigs.paths  0:00:11.907    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/scaffolds.paths  0:00:11.922    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.925    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/19/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="46.46138787269592">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "careful": false,  "kmer_choice|kmers": "33",  "libraries_0|files_0|file_type|fwd_reads": {   "id": "702663627234fd16",   "src": "hda"  },  "libraries_0|files_0|file_type|rev_reads": {   "id": "a3c3a33865e71f86",   "src": "hda"  },  "libraries_0|lib_type": "paired_end",  "sc": false }, "job": {  "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi \u0026\u0026  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/8/d/f/dataset_8df64969-a1dd-48a9-beee-8cae7bc5d190.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/6/e/0/dataset_6e0651eb-dfb0-468f-aaac-e5aeb352bf36.dat \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/22/configs/tmpvkx0icbx\u0027 \u003c contigs.fasta \u003e \u0027/galaxy/server/database/objects/b/b/6/dataset_bb61f0db-93a4-4b08-82d2-5083fcb38e08.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/22/configs/tmpvkx0icbx\u0027 \u003c scaffolds.fasta \u003e \u0027/galaxy/server/database/objects/b/5/f/dataset_b5f295dc-cb9b-4dee-8066-9f51dfdefbcc.dat\u0027",  "command_version": null,  "create_time": "2023-09-25T18:36:07.949804",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-2tcmf",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "431b8cf7bb6037d8",  "inputs": {   "libraries_0|files_0|fwd_reads": {    "id": "702663627234fd16",    "src": "hda",    "uuid": "8df64969-a1dd-48a9-beee-8cae7bc5d190"   },   "libraries_0|files_0|rev_reads": {    "id": "a3c3a33865e71f86",    "src": "hda",    "uuid": "6e0651eb-dfb0-468f-aaac-e5aeb352bf36"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_contig_stats": {    "id": "6764c91e15ab836d",    "src": "hda",    "uuid": "bb61f0db-93a4-4b08-82d2-5083fcb38e08"   },   "out_contigs": {    "id": "8aaf20aa947533dc",    "src": "hda",    "uuid": "adae8bcd-641f-4bc6-ad2c-800e4513fb20"   },   "out_log": {    "id": "0c40d6778177cd58",    "src": "hda",    "uuid": "6f52399f-355d-415e-83e0-c9b342ec84c5"   },   "out_scaffold_stats": {    "id": "98aa7b3adca37321",    "src": "hda",    "uuid": "b5f295dc-cb9b-4dee-8066-9f51dfdefbcc"   },   "out_scaffolds": {    "id": "b2785cd9517f2f4f",    "src": "hda",    "uuid": "48292cac-a7db-41e0-8982-1cd18e21b053"   }  },  "params": {   "__input_ext": "\"fastqsanger.gz\"",   "careful": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contig_graph_out": "false",   "cov": "{\"__current_case__\": 0, \"state\": \"off\"}",   "dbkey": "\"?\"",   "iontorrent": "false",   "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}",   "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 40, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 41, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]",   "nanopore_reads": null,   "onlyassembler": "false",   "pacbio_reads": null,   "sanger_reads": null,   "sc": "false",   "scaffold_graph_out": "false",   "trusted_contigs": null,   "untrusted_contigs": null  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-25T18:36:34.658200",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 7, "time_seconds": 46.46138787269592, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="47.116575717926025">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "6bffd9dfab9729fd",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/5/4/a/dataset_54af2c5c-0a3c-49d3-b404-119157e2298a.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/d/e/1/dataset_de13c27b-c273-4e30-a3b5-20a68851cc45.dat\u0027",  "command_version": "",  "create_time": "2023-09-25T18:43:31.025825",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8kp7f",  "galaxy_version": "23.0",  "history_id": "d8c301ea81e813ec",  "id": "0c40d6778177cd58",  "inputs": {   "fastq_in": {    "id": "6bffd9dfab9729fd",    "src": "hda",    "uuid": "54af2c5c-0a3c-49d3-b404-119157e2298a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695667425.0000000",    "title": "Job End Time",    "value": "2023-09-25 18:43:45"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695667425.0000000",    "title": "Job Start Time",    "value": "2023-09-25 18:43:45"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "51a215ce81624f81",    "src": "hda",    "uuid": "71d11c17-d5e7-4128-8e3b-1c42a0159c26"   },   "fastq_out": {    "id": "c328dd33c33a2187",    "src": "hda",    "uuid": "de13c27b-c273-4e30-a3b5-20a68851cc45"   },   "log_file": {    "id": "75e4336791723007",    "src": "hda",    "uuid": "d03fe410-681e-4f36-a059-2f5e9eeac693"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 74, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2023-09-25T18:44:00.108985",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpxfwhthzetrimmomatic_se_out1.err v. /tmp/tmp_ax9r23otrimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 47.116575717926025, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="30.44238519668579">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="28.290731191635132">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="35.20664858818054">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="32.635883808135986">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/77/configs/tmpaj6srgov:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="33.4447226524353">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="33.46275472640991">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="33.618226289749146">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="17.62908673286438">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 17.62908673286438, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="31.261138677597046">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="31.735010862350464">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="32.61500263214111">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="31.583019018173218">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="37.60323786735535">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>