<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="81"
           errors="14"
           failures="22"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="11.697209119796753">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.697209119796753, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="36.200812578201294">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "d038dc45f3fb34e4",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/104/configs/tmpo4fkl8if\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/104/configs/tmpo4fkl8if\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:00:06.572756",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-nj7r4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "0cc1d67905648c81",  "inputs": {   "hd5_format|in|input": {    "id": "d038dc45f3fb34e4",    "src": "hda",    "uuid": "9b7a0fa4-82f4-4efc-91bd-798cea20d2d3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030013.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:00:13"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030012.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:00:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "183aa70c41c453fc",    "src": "hda",    "uuid": "3752ff09-a82b-41a3-8501-27e4150ac9f3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 138, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/b/7/dataset_9b7a0fa4-82f4-4efc-91bd-798cea20d2d3.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/b/7/dataset_9b7a0fa4-82f4-4efc-91bd-798cea20d2d3.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T19:00:25.087300",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 36.200812578201294, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/9/b/7/dataset_9b7a0fa4-82f4-4efc-91bd-798cea20d2d3.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="53.98897933959961">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "20b72fa47186bb45",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/89/configs/tmpfbjoe5oi\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/89/configs/tmpfbjoe5oi\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T18:56:10.042715",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wck56",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "6e41989296964470",  "inputs": {   "hd5_format|in|input": {    "id": "20b72fa47186bb45",    "src": "hda",    "uuid": "feb22a83-4d0f-4e55-b1e0-f87a72976f24"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734029790.0000000",    "title": "Job End Time",    "value": "2024-12-12 18:56:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734029788.0000000",    "title": "Job Start Time",    "value": "2024-12-12 18:56:28"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "991d0e16ff037f77",    "src": "hda",    "uuid": "cd8dcfd6-53b9-45fa-be7a-c87fa75be6d3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 123, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/e/b/dataset_feb22a83-4d0f-4e55-b1e0-f87a72976f24.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/e/b/dataset_feb22a83-4d0f-4e55-b1e0-f87a72976f24.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T18:56:45.274730",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpq7nx8v2bimport.csv.h5ad v. /tmp/tmppyimjamgimport.csv.h5ad )\nFiles /tmp/tmpq7nx8v2bimport.csv.h5ad=29512b but /tmp/tmppyimjamgimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 53.98897933959961, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/f/e/b/dataset_feb22a83-4d0f-4e55-b1e0-f87a72976f24.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="35.31754946708679">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "aa7eea5b1ab5d05b",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/106/configs/tmp38k3bvhh\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/106/configs/tmp38k3bvhh\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:00:45.268093",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-94qsx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "7177271eb7f81f0f",  "inputs": {   "hd5_format|in|input": {    "id": "aa7eea5b1ab5d05b",    "src": "hda",    "uuid": "794cc3cc-512e-4041-9ac7-68bd21d88110"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030048.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:00:48"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030046.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:00:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "467e1f2a87f76868",    "src": "hda",    "uuid": "dbaab4aa-0695-4135-bce0-2570cf0efb1a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 140, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/7/9/4/dataset_794cc3cc-512e-4041-9ac7-68bd21d88110.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/7/9/4/dataset_794cc3cc-512e-4041-9ac7-68bd21d88110.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T19:01:00.512445",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmprodflzf2import.csv.h5ad v. /tmp/tmphz__pkgiimport.csv.h5ad )\nFiles /tmp/tmprodflzf2import.csv.h5ad=29512b but /tmp/tmphz__pkgiimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 35.31754946708679, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/7/9/4/dataset_794cc3cc-512e-4041-9ac7-68bd21d88110.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="34.01857924461365">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "b2c77db85fa64b29",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmp30iek37b\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmp30iek37b\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T18:57:04.121173",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-b8rrq",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "9cae7eaedc9f1964",  "inputs": {   "hd5_format|in|input": {    "id": "b2c77db85fa64b29",    "src": "hda",    "uuid": "f8248f30-df3a-453a-9b0f-235e3c71dbf7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734029827.0000000",    "title": "Job End Time",    "value": "2024-12-12 18:57:07"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734029826.0000000",    "title": "Job Start Time",    "value": "2024-12-12 18:57:06"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "b1a0f2306914e6e7",    "src": "hda",    "uuid": "877aa43c-148d-486f-b775-62c2f5ca54c0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 125, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/8/2/dataset_f8248f30-df3a-453a-9b0f-235e3c71dbf7.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/8/2/dataset_f8248f30-df3a-453a-9b0f-235e3c71dbf7.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T18:57:19.408456",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 34.01857924461365, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/f/8/2/dataset_f8248f30-df3a-453a-9b0f-235e3c71dbf7.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="32.409934282302856">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "b35be550902e38fa",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/108/configs/tmpy5be8fkj\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/108/configs/tmpy5be8fkj\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:01:18.987592",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pcdv5",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "d65535e360b04b19",  "inputs": {   "hd5_format|in|input": {    "id": "b35be550902e38fa",    "src": "hda",    "uuid": "19b157c1-4e6b-4bef-a75b-5bf0be3a2091"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030082.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:01:22"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030080.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:01:20"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "205920aef991097b",    "src": "hda",    "uuid": "6d5ca3bf-bf48-4d76-8b1b-60d9ccb94a7b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/1/9/b/dataset_19b157c1-4e6b-4bef-a75b-5bf0be3a2091.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/1/9/b/dataset_19b157c1-4e6b-4bef-a75b-5bf0be3a2091.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T19:01:32.836291",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 32.409934282302856, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/1/9/b/dataset_19b157c1-4e6b-4bef-a75b-5bf0be3a2091.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="35.353726863861084">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "b13e16a86f651e77",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmps6f6iwik\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmps6f6iwik\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T18:57:39.550020",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-h5j26",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "8ae64bd8fb30117d",  "inputs": {   "hd5_format|in|matrix": {    "id": "b13e16a86f651e77",    "src": "hda",    "uuid": "61839648-3e6c-4b2b-bf71-115672e9c11b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734029863.0000000",    "title": "Job End Time",    "value": "2024-12-12 18:57:43"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734029861.0000000",    "title": "Job Start Time",    "value": "2024-12-12 18:57:41"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "bf90e3aa6d074bf4",    "src": "hda",    "uuid": "e4c46fd1-9a30-4c45-aa89-8dd23bd574e9"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 127, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/6/1/8/dataset_61839648-3e6c-4b2b-bf71-115672e9c11b.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/6/1/8/dataset_61839648-3e6c-4b2b-bf71-115672e9c11b.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T18:57:54.622352",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 35.353726863861084, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/6/1/8/dataset_61839648-3e6c-4b2b-bf71-115672e9c11b.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="34.241995334625244">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "ea02f991d1ca0c9d",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/110/configs/tmpgtcu7si8\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/110/configs/tmpgtcu7si8\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:01:52.392914",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-f245q",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "c9faccdd8077f7a7",  "inputs": {   "hd5_format|in|matrix": {    "id": "ea02f991d1ca0c9d",    "src": "hda",    "uuid": "73041cb5-91c3-4883-a0cc-518a19463851"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030116.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:01:56"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030114.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:01:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "bd7d476a130db9bc",    "src": "hda",    "uuid": "c19ab260-9d60-4c52-bdf6-d4c4ea1fd999"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/7/3/0/dataset_73041cb5-91c3-4883-a0cc-518a19463851.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/7/3/0/dataset_73041cb5-91c3-4883-a0cc-518a19463851.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T19:02:07.064941",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 34.241995334625244, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/7/3/0/dataset_73041cb5-91c3-4883-a0cc-518a19463851.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="36.30559277534485">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "8b19c8a9785dcc05",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/e/8/d/dataset_e8d9ebef-d322-4e4f-92c5-9d1f2914362d.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/95/configs/tmpru2iaz92\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/95/configs/tmpru2iaz92\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T18:58:15.219584",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8492t",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "9c354b31aa370b86",  "inputs": {   "hd5_format|in|input": {    "id": "8b19c8a9785dcc05",    "src": "hda",    "uuid": "e8d9ebef-d322-4e4f-92c5-9d1f2914362d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734029898.0000000",    "title": "Job End Time",    "value": "2024-12-12 18:58:18"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734029897.0000000",    "title": "Job Start Time",    "value": "2024-12-12 18:58:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "fbcc8e0cc4b1b591",    "src": "hda",    "uuid": "156e4236-d3d9-486b-a990-ba3a5d4435c6"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T18:58:30.931857",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 36.30559277534485, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="33.77221727371216">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "277b3afc4e5a8ee7",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/6/c/0/dataset_6c0b86a9-1302-4247-baab-fd47a19d12f1.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/112/configs/tmp8rm7f5sm\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/112/configs/tmp8rm7f5sm\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:02:27.578615",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-42pvt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "59a9c8f7845f5a4c",  "inputs": {   "hd5_format|in|input": {    "id": "277b3afc4e5a8ee7",    "src": "hda",    "uuid": "6c0b86a9-1302-4247-baab-fd47a19d12f1"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030150.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:02:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030149.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:02:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "10711c605353e367",    "src": "hda",    "uuid": "c5e0d9d4-331d-46e4-9071-1def3c28a0d4"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-12-12T19:02:41.155193",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 33.77221727371216, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="42.31688141822815">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "b3ca080a28021a76",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "82a9263fc8f47e48",   "src": "hda"  },  "hd5_format|other_files": {   "id": "f31b134da502cc73",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "0f8d1ac3dff53ced",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/a/1/1/dataset_a110afbf-d38f-4d17-b23e-a8fa90f780e1.dat\u0027 -r \u0027/galaxy/server/database/objects/8/7/9/dataset_87916876-97a7-4144-952b-7ab77bcbc6b3.dat\u0027 -f \u0027/galaxy/server/database/objects/3/7/4/dataset_374889bb-989a-4555-9c70-1c9b4ffbc63f.dat\u0027 \u0027/galaxy/server/database/objects/a/2/c/dataset_a2c31655-680d-4fec-9f5a-2bf6ac7fd32f.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-12-12T18:58:58.802454",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-56g46",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "2be95d47e7b56f72",  "inputs": {   "hd5_format|coldata": {    "id": "b3ca080a28021a76",    "src": "hda",    "uuid": "a110afbf-d38f-4d17-b23e-a8fa90f780e1"   },   "hd5_format|mainmatrix": {    "id": "82a9263fc8f47e48",    "src": "hda",    "uuid": "374889bb-989a-4555-9c70-1c9b4ffbc63f"   },   "hd5_format|other_files": {    "id": "f31b134da502cc73",    "src": "hda",    "uuid": "a2c31655-680d-4fec-9f5a-2bf6ac7fd32f"   },   "hd5_format|other_files1": {    "id": "f31b134da502cc73",    "src": "hda",    "uuid": "a2c31655-680d-4fec-9f5a-2bf6ac7fd32f"   },   "hd5_format|rowdata": {    "id": "0f8d1ac3dff53ced",    "src": "hda",    "uuid": "87916876-97a7-4144-952b-7ab77bcbc6b3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734029941.0000000",    "title": "Job End Time",    "value": "2024-12-12 18:59:01"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734029940.0000000",    "title": "Job Start Time",    "value": "2024-12-12 18:59:00"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "3a4c4c0be999f5dc",    "src": "hda",    "uuid": "86b2afdc-e615-495a-8f5e-631357f67331"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 133, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 131, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 132, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-12T18:59:13.464448",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpy4by0zficonverted.loom.test v. /tmp/tmpiyny9uqcconverted.loom.test )\nFiles /tmp/tmpy4by0zficonverted.loom.test=41883b but /tmp/tmpiyny9uqcconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 42.31688141822815, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="23.676080465316772">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 23.676080465316772, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="34.44263577461243">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/c/3/2/dataset_c326410b-6b36-40c5-bb09-36c4994f6431.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="34.65792894363403">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/3/7/8/dataset_37895202-bdbe-413c-aec2-e98622258923.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="41.843204975128174">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="65.30901026725769">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="10.449240684509277">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.449240684509277, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="32.071388959884644">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="31.791149854660034">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="135.26642513275146">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 135.26642513275146, "tool_id": "collection_element_identifiers", "tool_version": "0.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="31.581732511520386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="77.04789519309998">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="33.64515137672424">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "e83c9644bf77e060",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/8/d/7/dataset_8d75900b-7023-44f5-a7ae-1f15e160fe2c.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/4/b/b/dataset_4bb6d4d3-371a-4c62-b5b1-845ec9eaa833.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2024-12-12T18:39:14.736908",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6z9s2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "e83c9644bf77e060",  "inputs": {   "corData": {    "id": "e83c9644bf77e060",    "src": "hda",    "uuid": "8d75900b-7023-44f5-a7ae-1f15e160fe2c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734028759.0000000",    "title": "Job End Time",    "value": "2024-12-12 18:39:19"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734028756.0000000",    "title": "Job Start Time",    "value": "2024-12-12 18:39:16"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "3be1cfb0e18d7047",    "src": "hda",    "uuid": "4bb6d4d3-371a-4c62-b5b1-845ec9eaa833"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-12T18:39:29.843897",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpbnm2fw9vplotCorrelation_result2.png v. /tmp/tmpyw9a9ha8plotCorrelation_result2.png )\nFiles /tmp/tmpbnm2fw9vplotCorrelation_result2.png=11943b but /tmp/tmpyw9a9ha8plotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 33.64515137672424, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="38.80165672302246">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="37.04218888282776">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="33.903584480285645">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/0/6/7/dataset_067b7863-fc4f-458a-b542-b7e2f6d8c4c5.dat[FLASH]     /galaxy/server/database/objects/4/1/1/dataset_411cfa4d-74a3-4e2f-80d1-545d2dd6bb59.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.023 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="35.053117513656616">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="12.610515117645264">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.610515117645264, "tool_id": "flash", "tool_version": "1.2.11.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="46.60681223869324">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "5d386b08d97c36b1",   "src": "hda"  },  "reference_source|ref": {   "id": "f5f88514eae22446",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/e/f/dataset_2ef3b4a4-1136-4a92-807b-02898a18f166.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/0/3/b/dataset_03bae558-4cc1-4878-a883-da1cbdf5cec5.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/e/6/f/metadata_e6fa75ac-a4e8-49f1-bf6e-e125e0009c7f.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:14:35.884967",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-s97kh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "6a1f2823a4dcdd68",  "inputs": {   "reads": {    "id": "5d386b08d97c36b1",    "src": "hda",    "uuid": "03bae558-4cc1-4878-a883-da1cbdf5cec5"   },   "reference_source|ref": {    "id": "f5f88514eae22446",    "src": "hda",    "uuid": "2ef3b4a4-1136-4a92-807b-02898a18f166"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030889.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:14:49"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030886.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:14:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "eed894508432c1ba",    "src": "hda",    "uuid": "aea775e7-7705-4f3d-a754-aa24c4654b90"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 205, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-12 19:14:46,872]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-12 19:14:46,906]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-12 19:14:49,813]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-12 19:14:46,872]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-12 19:14:46,906]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-12 19:14:49,813]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-12-12T19:15:02.333096",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp64lajyvacall-out1.vcf v. /tmp/tmp876o8mc3call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241212\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/concat.vcf.gz /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/0.vcf.gz /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/1.vcf.gz /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/2.vcf.gz /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/3.vcf.gz /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/4.vcf.gz; Date=Thu Dec 12 19:14:49 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 46.60681223869324, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-12 19:14:46,872]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2024-12-12 19:14:46,906]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-12-12 19:14:49,813]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/152/tmp/lofreq2_call_parallelnqel7k4w/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="35.67058181762695">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "1bc79080e2353aeb",   "src": "hda"  },  "reference_source|ref": {   "id": "14ca44875d72f74e",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/8/d/dataset_58dcf875-f90d-4a31-a3bc-bd9dd24576b0.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/d/d/5/dataset_dd598cae-f496-4f72-8495-f655cc1daf62.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/9/0/b/metadata_90b0e96d-1acd-42ed-9d98-7f6c523d382b.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:15:22.446283",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-ff78m",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "081925737ae3e7c9",  "inputs": {   "reads": {    "id": "1bc79080e2353aeb",    "src": "hda",    "uuid": "dd598cae-f496-4f72-8495-f655cc1daf62"   },   "reference_source|ref": {    "id": "14ca44875d72f74e",    "src": "hda",    "uuid": "58dcf875-f90d-4a31-a3bc-bd9dd24576b0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030928.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:15:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030924.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:15:24"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "510db4024b163bb5",    "src": "hda",    "uuid": "495047ff-338b-4029-b416-7f7c106c1c84"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 208, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-12 19:15:24,648]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-12 19:15:24,719]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-12 19:15:27,913]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-12 19:15:24,648]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-12 19:15:24,719]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-12 19:15:27,913]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-12-12T19:15:38.074365",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp__igy8ywcall-out1.vcf v. /tmp/tmpvlvmf0b2call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241212\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/concat.vcf.gz /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/0.vcf.gz /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/1.vcf.gz /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/2.vcf.gz /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/3.vcf.gz /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/4.vcf.gz; Date=Thu Dec 12 19:15:27 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 35.67058181762695, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-12 19:15:24,648]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-12-12 19:15:24,719]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-12-12 19:15:27,913]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/155/tmp/lofreq2_call_parallellgrboshs/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="39.063544273376465">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "83134d2c7b077863",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "afe01243fe56fa00",   "src": "hda"  },  "reference_source|ref": {   "id": "3527fdfdf9c08814",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/e/c/6/dataset_ec69d15d-efb1-4807-9fcb-49b6e5f7b5db.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/e/4/d/dataset_e4d76cc1-a20e-4f9b-9bbe-54b6a5a6c282.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/8/0/1/metadata_8010a1e4-406b-4364-9b2e-0ad710c7c7b0.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/7/4/3/dataset_743765da-5417-4676-801a-9f210aac687e.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:16:01.294707",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-27q49",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "81c0dc6af2dceead",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "83134d2c7b077863",    "src": "hda",    "uuid": "743765da-5417-4676-801a-9f210aac687e"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "83134d2c7b077863",    "src": "hda",    "uuid": "743765da-5417-4676-801a-9f210aac687e"   },   "reads": {    "id": "afe01243fe56fa00",    "src": "hda",    "uuid": "e4d76cc1-a20e-4f9b-9bbe-54b6a5a6c282"   },   "reference_source|ref": {    "id": "3527fdfdf9c08814",    "src": "hda",    "uuid": "ec69d15d-efb1-4807-9fcb-49b6e5f7b5db"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030966.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:16:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030963.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:16:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "3eac18b96973ed80",    "src": "hda",    "uuid": "fb8d4a5f-36b3-4263-acb2-6070581ca8bc"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 212, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 211, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-12 19:16:03,273]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-12 19:16:03,308]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-12 19:16:06,237]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-12 19:16:03,273]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-12-12 19:16:03,308]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-12-12 19:16:06,237]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-12-12T19:16:17.123208",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmplr28ei46call-out1.vcf v. /tmp/tmpiknj_og3call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241212\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/concat.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/0.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/1.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/2.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/3.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/4.vcf.gz; Date=Thu Dec 12 19:16:06 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 39.063544273376465, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-12 19:16:03,273]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-12-12 19:16:03,308]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-12-12 19:16:06,237]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelwraoz_t2/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="11.221649646759033">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 11.221649646759033, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="33.83772850036621">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "949c1a122b785db3",   "src": "hda"  },  "reference_source|ref": {   "id": "04b659ccf308eb84",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/c/6/dataset_1c6eedb1-5e47-46ae-9128-7574e62dce4c.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/4/c/3/dataset_4c3005d6-3b84-4531-b437-a4dc6f2d7d5e.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/7/e/4/metadata_7e4acccc-b133-4972-9d91-de47b2870480.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:16:47.712841",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-f6m8v",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "8be847512b24ad5f",  "inputs": {   "reads": {    "id": "949c1a122b785db3",    "src": "hda",    "uuid": "4c3005d6-3b84-4531-b437-a4dc6f2d7d5e"   },   "reference_source|ref": {    "id": "04b659ccf308eb84",    "src": "hda",    "uuid": "1c6eedb1-5e47-46ae-9128-7574e62dce4c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734031012.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:16:52"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734031009.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:16:49"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "d21efec3e04a4333",    "src": "hda",    "uuid": "2ac7cdcf-dad2-4909-8e25-e0714d820d0a"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 217, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-12-12 19:16:49,488]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-12-12 19:16:49,518]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2024-12-12 19:16:52,139]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-12-12 19:16:49,488]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-12-12 19:16:49,518]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2024-12-12 19:16:52,139]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2024-12-12T19:17:02.434139",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpiw6rey2jindel-call-out.vcf v. /tmp/tmp7zmjir0kindel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241212\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_paralleljwprkw9t/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_paralleljwprkw9t/concat.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_paralleljwprkw9t/0.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_paralleljwprkw9t/1.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_paralleljwprkw9t/2.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_paralleljwprkw9t/3.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_paralleljwprkw9t/4.vcf.gz; Date=Thu Dec 12 19:16:52 2024\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 33.83772850036621, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-12-12 19:16:49,488]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2024-12-12 19:16:49,518]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2024-12-12 19:16:52,139]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="69.73400044441223">
        
            
            <system-out><![CDATA[
            [18:45:10 - DataStre] Loaded sample register.[18:45:10 - DataStre] Loaded sample register.[18:45:10 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:45:10 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:45:10 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:45:10 - Variants] Processing NC_045512.2:0-.[18:45:10 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:45:12 - Annotate] Getting chrom coordinates[18:45:12 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:45:12 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="43.242760181427">
        
            
            <system-out><![CDATA[
            [18:45:59 - DataStre] Loaded sample register.[18:45:59 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:46:00 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:46:00 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:46:02 - Annotate] Getting chrom coordinates[18:46:02 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:46:02 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="28.51361632347107">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "output_annotated|output_annotated_select": "false",  "output_log_bool": false,  "pool|input": {   "id": "c1f2aa3668c38b22",   "src": "hda"  },  "pool|pool_mode": "No",  "reference_source|ref_file": {   "id": "876ff7e781e9d172",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/c/f/dataset_dcf2d199-4fb6-4c48-a15b-8cada84d1fa2.dat\u0027 reference.fa \u0026\u0026    medaka variant --debug    reference.fa \u0027/galaxy/server/database/objects/0/4/7/dataset_04797b38-83d1-4ff6-823a-a886435a61b7.dat\u0027 \u0027/galaxy/server/database/objects/9/1/b/dataset_91b54cd9-2f9c-4e9b-97c4-c55e1f1216e9.dat\u0027 2\u003e\u00261 | tee \u0027XXXX\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-12T18:46:35.762601",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-64cgz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "d75fc7064b905286",  "inputs": {   "pool|input": {    "id": "c1f2aa3668c38b22",    "src": "hda",    "uuid": "04797b38-83d1-4ff6-823a-a886435a61b7"   },   "reference_source|ref_file": {    "id": "876ff7e781e9d172",    "src": "hda",    "uuid": "dcf2d199-4fb6-4c48-a15b-8cada84d1fa2"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_variants": {    "id": "412c66109c58e13b",    "src": "hda",    "uuid": "91b54cd9-2f9c-4e9b-97c4-c55e1f1216e9"   }  },  "params": {   "__input_ext": "\"input\"",   "ambig_ref": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gvcf": "false",   "output_annotated": "{\"__current_case__\": 1, \"output_annotated_select\": \"false\"}",   "output_log_bool": "false",   "pool": "{\"__current_case__\": 1, \"input\": {\"values\": [{\"id\": 63, \"src\": \"hda\"}]}, \"pool_mode\": \"No\"}",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 64, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",   "regions": "\"\"",   "verbose": "false"  },  "state": "error",  "stderr": "",  "stdout": "[18:46:40 - DataStre] Loaded sample register.\n[18:46:40 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[18:46:40 - Variants] Label decoding is:\n0: (\u0027*\u0027,)\n1: (\u0027A\u0027,)\n2: (\u0027C\u0027,)\n3: (\u0027G\u0027,)\n4: (\u0027T\u0027,)\n[18:46:40 - Variants] Processing NC_045512.2:0-.\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/medaka_variant/1.7.2+galaxy1",  "tool_stderr": "",  "tool_stdout": "[18:46:40 - DataStre] Loaded sample register.\n[18:46:40 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[18:46:40 - Variants] Label decoding is:\n0: (\u0027*\u0027,)\n1: (\u0027A\u0027,)\n2: (\u0027C\u0027,)\n3: (\u0027G\u0027,)\n4: (\u0027T\u0027,)\n[18:46:40 - Variants] Processing NC_045512.2:0-.\n",  "update_time": "2024-12-12T18:46:43.839192",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/medaka_variant/1.7.2+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_variant/medaka_variant/1.7.2+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 28.51361632347107, "tool_id": "medaka_variant", "tool_version": "1.7.2+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            [18:46:40 - DataStre] Loaded sample register.[18:46:40 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:46:40 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:46:40 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="61.05812692642212">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="63.64658308029175">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="35.059051513671875">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="35.815186977386475">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="35.773112297058105">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="37.67202639579773">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="35.72468137741089">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="36.760103702545166">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="36.25615358352661">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="41.556053161621094">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="40.872666358947754">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="50.39808964729309">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00091619sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.527e-05sWriting sequence data to file . . . doneElapsed time: 5.624e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00014613sdoneElapsed time: 0.0029116sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00112446sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logsthere is 1 lib[2024-12-12 18:48:23.910] [jointLog] [info] parsing read library formatLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-12-12 18:48:23.978] [jointLog] [info] Loading Quasi index[2024-12-12 18:48:23.981] [jointLog] [info] done[2024-12-12 18:48:23.979] [stderrLog] [info] Loading Suffix Array [2024-12-12 18:48:23.979] [stderrLog] [info] Loading Position Hash[2024-12-12 18:48:23.979] [stderrLog] [info] Loading Transcript Info [2024-12-12 18:48:23.980] [stderrLog] [info] Loading Rank-Select Bit Array[2024-12-12 18:48:23.980] [stderrLog] [info] There were 15 set bits in the bit array[2024-12-12 18:48:23.980] [stderrLog] [info] Computing transcript lengths[2024-12-12 18:48:23.980] [stderrLog] [info] Waiting to finish loading hash[2024-12-12 18:48:23.981] [stderrLog] [info] Done loading index[2024-12-12 18:48:24.002] [jointLog] [info] Gathered fragment lengths from all threads[2024-12-12 18:48:24.002] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-12-12 18:48:24.003] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-12-12 18:48:24.011] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-12-12 18:48:24.011] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-12-12 18:48:24.011] [jointLog] [info] Starting optimizer:[2024-12-12 18:48:24.011] [jointLog] [info] Optimizing over 21 equivalence classes[2024-12-12 18:48:24.011] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-12-12 18:48:24.011] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2024-12-12 18:48:24.011] [jointLog] [info] Finished optimizer[2024-12-12 18:48:24.011] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="19.675609588623047">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 19.675609588623047, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="37.06321334838867">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00110282sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 5.651e-05sWriting sequence data to file . . . doneElapsed time: 0.00010967s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00015611sdoneElapsed time: 0.00283465sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00110728sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-12-12 18:49:23.482] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-12-12 18:49:23.549] [jointLog] [info] Loading Quasi index[2024-12-12 18:49:23.553] [jointLog] [info] done[2024-12-12 18:49:23.551] [stderrLog] [info] Loading Position Hash[2024-12-12 18:49:23.551] [stderrLog] [info] Loading Suffix Array [2024-12-12 18:49:23.551] [stderrLog] [info] Loading Transcript Info [2024-12-12 18:49:23.552] [stderrLog] [info] Loading Rank-Select Bit Array[2024-12-12 18:49:23.552] [stderrLog] [info] There were 15 set bits in the bit array[2024-12-12 18:49:23.552] [stderrLog] [info] Computing transcript lengths[2024-12-12 18:49:23.552] [stderrLog] [info] Waiting to finish loading hash[2024-12-12 18:49:23.553] [stderrLog] [info] Done loading index[2024-12-12 18:49:23.574] [jointLog] [info] Gathered fragment lengths from all threads[2024-12-12 18:49:23.574] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-12-12 18:49:23.575] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-12-12 18:49:23.583] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-12-12 18:49:23.583] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-12-12 18:49:23.583] [jointLog] [info] Starting optimizer:[2024-12-12 18:49:23.583] [jointLog] [info] Optimizing over 21 equivalence classes[2024-12-12 18:49:23.583] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-12-12 18:49:23.583] [jointLog] [info] iteration 50, recomputing effective lengths[2024-12-12 18:49:23.585] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2024-12-12 18:49:23.585] [jointLog] [info] Finished optimizer[2024-12-12 18:49:23.585] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="41.97944259643555">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00102191sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.591e-05sWriting sequence data to file . . . doneElapsed time: 8.491e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000132849sdoneElapsed time: 0.0153216sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00161808sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-12-12 18:50:03.992] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-12-12 18:50:04.059] [jointLog] [info] Loading Quasi index[2024-12-12 18:50:04.062] [jointLog] [info] done[2024-12-12 18:50:04.061] [stderrLog] [info] Loading Suffix Array [2024-12-12 18:50:04.061] [stderrLog] [info] Loading Position Hash[2024-12-12 18:50:04.061] [stderrLog] [info] Loading Transcript Info [2024-12-12 18:50:04.062] [stderrLog] [info] Loading Rank-Select Bit Array[2024-12-12 18:50:04.062] [stderrLog] [info] There were 15 set bits in the bit array[2024-12-12 18:50:04.062] [stderrLog] [info] Computing transcript lengths[2024-12-12 18:50:04.062] [stderrLog] [info] Waiting to finish loading hash[2024-12-12 18:50:04.062] [stderrLog] [info] Done loading index[2024-12-12 18:50:04.084] [jointLog] [info] Gathered fragment lengths from all threads[2024-12-12 18:50:04.084] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-12-12 18:50:04.084] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-12-12 18:50:04.092] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-12-12 18:50:04.092] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-12-12 18:50:04.093] [jointLog] [info] Starting optimizer:[2024-12-12 18:50:04.093] [jointLog] [info] Optimizing over 21 equivalence classes[2024-12-12 18:50:04.093] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-12-12 18:50:04.093] [jointLog] [info] iteration 50, recomputing effective lengths[2024-12-12 18:50:04.094] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2024-12-12 18:50:04.094] [jointLog] [info] Finished optimizer[2024-12-12 18:50:04.094] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="42.99584436416626">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="23.51442575454712">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "3814a770aac64d4e",   "src": "hda"  },  "advanced_options|advanced_options_selector": "advanced",  "advanced_options|disable_probabilistic_realignment": true,  "advanced_options|filter_by_flags|exclude_flags": [   "4",   "16"  ],  "advanced_options|filter_by_flags|filter_flags": "filter",  "advanced_options|limit_by_region|limit_by_regions": "limit",  "advanced_options|limit_by_region|region_paste": "17:1050-1060",  "input": {   "id": "d65535e360b04b19",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/f/2/dataset_3f203242-dc8d-4066-a5af-bd3b3f003a18.dat\u0027 \u00270\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/8/e/6/metadata_8e6a4e53-581f-430f-9486-e19598612cf5.dat\u0027 \u00270.bai\u0027 \u0026\u0026      reffa=\"reference.fa\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/1/b/d/dataset_1bd1ace5-0b26-43c4-9736-0c5f368a73f1.dat\u0027 $reffa \u0026\u0026 samtools faidx $reffa \u0026\u0026 reffai=$reffa.fai \u0026\u0026   samtools mpileup -f \"$reffa\" \u00270\u0027    --rf 0   --ff 20 -r \u002717:1050-1060\u0027    -B -C 0 -d 8000  -q 0 -Q 13  --output \u0027/galaxy/server/database/objects/c/b/f/dataset_cbf0df41-dbe6-4c7b-9f26-d30a4df5faa1.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-12T18:53:39.151857",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-snk6s",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "fb7a6c0046fa1083",  "inputs": {   "addref_cond|ref": {    "id": "3814a770aac64d4e",    "src": "hda",    "uuid": "1bd1ace5-0b26-43c4-9736-0c5f368a73f1"   },   "input": {    "id": "d65535e360b04b19",    "src": "hda",    "uuid": "3f203242-dc8d-4066-a5af-bd3b3f003a18"   },   "input1": {    "id": "d65535e360b04b19",    "src": "hda",    "uuid": "3f203242-dc8d-4066-a5af-bd3b3f003a18"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file_pu": {    "id": "c9faccdd8077f7a7",    "src": "hda",    "uuid": "cbf0df41-dbe6-4c7b-9f26-d30a4df5faa1"   }  },  "params": {   "__input_ext": "\"input\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 109, \"src\": \"hda\"}]}}",   "advanced_options": "{\"__current_case__\": 1, \"advanced_options_selector\": \"advanced\", \"coefficient_for_downgrading\": \"0\", \"disable_probabilistic_realignment\": true, \"exclude_read_group\": {\"__current_case__\": 2, \"exclude_read_groups\": \"no_limit\"}, \"extended_BAQ_computation\": false, \"filter_by_flags\": {\"__current_case__\": 0, \"exclude_flags\": [\"4\", \"16\"], \"filter_flags\": \"filter\", \"require_flags\": null}, \"ignore_overlaps\": false, \"limit_by_region\": {\"__current_case__\": 0, \"bed_regions\": null, \"limit_by_regions\": \"limit\", \"region_paste\": \"17:1050-1060\"}, \"max_reads_per_bam\": \"8000\", \"minimum_base_quality\": \"13\", \"minimum_mapping_quality\": \"0\", \"qualities_illumina_onethree\": false, \"skip_anomalous_read_pairs\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_options_cond": "{\"__current_case__\": 0, \"output_options_selector\": \"default\"}"  },  "state": "error",  "stderr": "[mpileup] 1 samples in 1 input files\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.7",  "tool_stderr": "[mpileup] 1 samples in 1 input files\n",  "tool_stdout": "",  "update_time": "2024-12-12T18:53:43.481312",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.7, exit_code: None, stderr: [mpileup] 1 samples in 1 input files\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.7, exit_code: None, stderr: [mpileup] 1 samples in 1 input files\n." ], "status": "failure", "test_index": 1, "time_seconds": 23.51442575454712, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="31.586681604385376">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="32.91531467437744">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="30.735513925552368">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="19.68574023246765">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 19.68574023246765, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="38.12726163864136">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="33.169455766677856">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="11.204557657241821">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.204557657241821, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="11.520560026168823">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.520560026168823, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="32.68624472618103">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="11.242279291152954">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.242279291152954, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="77.10550141334534">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "dc0f6e232ae74eaa",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/f/4/9/dataset_f495713e-77b8-4af4-82cf-c5f50ba2d29c.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/140/configs/tmp3g26d75q\u0027 \u003e \u0027/galaxy/server/database/objects/5/5/e/dataset_55eb28e5-9d3f-47f4-82de-5daa7967a39d.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/140/configs/tmp3g26d75q\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/5/5/e/dataset_55eb28e5-9d3f-47f4-82de-5daa7967a39d.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/5/5/e/dataset_55eb28e5-9d3f-47f4-82de-5daa7967a39d.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:10:41.089722",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p44qs",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "aa7eea5b1ab5d05b",  "inputs": {   "adata": {    "id": "dc0f6e232ae74eaa",    "src": "hda",    "uuid": "f495713e-77b8-4af4-82cf-c5f50ba2d29c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030678.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:11:18"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030674.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:11:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "2c5edf105fa32dec",    "src": "hda",    "uuid": "30123c7f-1706-4251-858e-20cb849f7e7f"   },   "hidden_output": {    "id": "26f9fce5834c9bf2",    "src": "hda",    "uuid": "55eb28e5-9d3f-47f4-82de-5daa7967a39d"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2024-12-12T19:11:38.624781",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 77.10550141334534, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="35.78615641593933">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "fe655a8d882d1b16",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/7/4/8/dataset_74894025-8b6e-4ac2-87a9-ae68305551cb.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/142/configs/tmpyos59g66\u0027 \u003e \u0027/galaxy/server/database/objects/5/f/d/dataset_5fde0856-c50a-4938-9c14-f54e6ceb83b6.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/142/configs/tmpyos59g66\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/5/f/d/dataset_5fde0856-c50a-4938-9c14-f54e6ceb83b6.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/5/f/d/dataset_5fde0856-c50a-4938-9c14-f54e6ceb83b6.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:11:57.433045",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-sd447",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "b35be550902e38fa",  "inputs": {   "adata": {    "id": "fe655a8d882d1b16",    "src": "hda",    "uuid": "74894025-8b6e-4ac2-87a9-ae68305551cb"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030723.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:12:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030719.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:11:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "65e9435defee685a",    "src": "hda",    "uuid": "1ecb6bfb-09b3-4aa5-97c9-cec58e3235fe"   },   "hidden_output": {    "id": "bbb8d210e8127b28",    "src": "hda",    "uuid": "5fde0856-c50a-4938-9c14-f54e6ceb83b6"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2024-12-12T19:12:14.311874",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmpt_wvyue8pp.recipe_zheng17.random-randint.h5ad v. /tmp/tmp9vvjfb6ppp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmpt_wvyue8pp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmp9vvjfb6ppp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 35.78615641593933, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="35.429020404815674">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "4fb6d5a04a3f3e4c",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/3/a/dataset_23ae4ff3-a01d-461a-98b4-84c8463c7672.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/144/configs/tmp9cb0lr08\u0027 \u003e \u0027/galaxy/server/database/objects/5/9/b/dataset_59b592f2-aa7b-417f-9986-a43310f5d307.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/144/configs/tmp9cb0lr08\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/5/9/b/dataset_59b592f2-aa7b-417f-9986-a43310f5d307.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/5/9/b/dataset_59b592f2-aa7b-417f-9986-a43310f5d307.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:12:33.138818",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zsqdb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "ea02f991d1ca0c9d",  "inputs": {   "adata": {    "id": "4fb6d5a04a3f3e4c",    "src": "hda",    "uuid": "23ae4ff3-a01d-461a-98b4-84c8463c7672"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030758.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:12:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030754.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:12:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "d7811f0eb23e3891",    "src": "hda",    "uuid": "451f499e-917a-4c73-a84d-1e5ec68a0f56"   },   "hidden_output": {    "id": "01ed5df52b3bb7c0",    "src": "hda",    "uuid": "59b592f2-aa7b-417f-9986-a43310f5d307"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2024-12-12T19:12:49.814372",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 35.429020404815674, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="34.944337129592896">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "4edc3b748c4e3cfb",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/5/c/6/dataset_5c6415d7-5a16-4aac-993f-f954980bb2cf.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmpy2z37tsk\u0027 \u003e \u0027/galaxy/server/database/objects/4/f/b/dataset_4fb3816a-2974-45df-ba46-8a0d37f608ab.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmpy2z37tsk\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/4/f/b/dataset_4fb3816a-2974-45df-ba46-8a0d37f608ab.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/4/f/b/dataset_4fb3816a-2974-45df-ba46-8a0d37f608ab.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:13:09.133368",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-57xbk",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "277b3afc4e5a8ee7",  "inputs": {   "adata": {    "id": "4edc3b748c4e3cfb",    "src": "hda",    "uuid": "5c6415d7-5a16-4aac-993f-f954980bb2cf"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030794.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:13:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030790.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:13:10"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "ef82944684ee5a30",    "src": "hda",    "uuid": "4f84e358-4b6e-4ae3-a44e-0f453fec7099"   },   "hidden_output": {    "id": "678716b3a4eb0260",    "src": "hda",    "uuid": "4fb3816a-2974-45df-ba46-8a0d37f608ab"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2024-12-12T19:13:25.030036",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 34.944337129592896, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="10.737339496612549">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 10.737339496612549, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="35.87320351600647">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "8d9cac92da15f1eb",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/0/0/9/dataset_009f5ad5-6054-41c0-9322-bf299822687c.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/149/configs/tmp3tt2wboj\u0027 \u003e \u0027/galaxy/server/database/objects/d/8/7/dataset_d87f07fe-d17b-493d-b6d6-25167c9fce68.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/149/configs/tmp3tt2wboj\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/d/8/7/dataset_d87f07fe-d17b-493d-b6d6-25167c9fce68.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/d/8/7/dataset_d87f07fe-d17b-493d-b6d6-25167c9fce68.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-12-12T19:13:54.849638",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-r9sgq",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a90787e2d31703ef",  "id": "c8465c57ff4481e7",  "inputs": {   "adata": {    "id": "8d9cac92da15f1eb",    "src": "hda",    "uuid": "009f5ad5-6054-41c0-9322-bf299822687c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1734030840.0000000",    "title": "Job End Time",    "value": "2024-12-12 19:14:00"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1734030836.0000000",    "title": "Job Start Time",    "value": "2024-12-12 19:13:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "af54feac5b8b2e38",    "src": "hda",    "uuid": "14230a72-aac6-4d7a-9f87-702d73072e8e"   },   "hidden_output": {    "id": "dab756ca04487503",    "src": "hda",    "uuid": "d87f07fe-d17b-493d-b6d6-25167c9fce68"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2024-12-12T19:14:11.744443",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 35.87320351600647, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.0924370288848877">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.0924370288848877, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.09209346771240234">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.09209346771240234, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="53.22080898284912">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="38.428056716918945">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="30.987048387527466">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="32.60732078552246">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="30.08919095993042">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="30.37398624420166">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="58.09125995635986">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="36.83623766899109">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="37.236809730529785">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>