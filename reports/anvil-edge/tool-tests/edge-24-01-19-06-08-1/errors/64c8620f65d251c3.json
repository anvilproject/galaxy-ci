{
    "model_class": "Job",
    "id": "64c8620f65d251c3",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-01-19T07:21:26.170959",
    "create_time": "2024-01-19T07:20:49.279419",
    "galaxy_version": "23.1",
    "command_version": "",
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "e8806cd05a25142a",
    "external_id": "gxy-qpxfq",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/b/2/4/dataset_b2482ed8-450a-43e1-bfea-392129e03f71.dat' && cp '/galaxy/server/database/objects/d/5/c/dataset_d5ca931a-06e5-43ae-95d1-21d7deaeba3f.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/0/7/c/dataset_07c0fb70-04a8-4ef7-ba71-120b64fa2907.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/5/f/d/dataset_5fd28f1f-f293-4f21-9fd7-a81e210cf5d2.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 10: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 314, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 315, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 313, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "ffc73cfb354ee6f3",
            "src": "hda",
            "uuid": "5fd28f1f-f293-4f21-9fd7-a81e210cf5d2"
        },
        "pairstraight|file2": {
            "id": "4959c7bfe155c21a",
            "src": "hda",
            "uuid": "07c0fb70-04a8-4ef7-ba71-120b64fa2907"
        },
        "pairstraight|file1": {
            "id": "3328697176f18de0",
            "src": "hda",
            "uuid": "d5ca931a-06e5-43ae-95d1-21d7deaeba3f"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "4775258255af24dc",
            "src": "hda",
            "uuid": "b2482ed8-450a-43e1-bfea-392129e03f71"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "6ed1054f056401c0",
            "src": "hda",
            "uuid": "8ab6f535-d375-476b-af19-b539d93c33e2"
        },
        "expected_bias": {
            "id": "b29b23b01126b23a",
            "src": "hda",
            "uuid": "d69020db-2aba-42b0-9cc6-5995c55b20e3"
        },
        "observed_bias_3p": {
            "id": "a70abb63a2c0a2f4",
            "src": "hda",
            "uuid": "e6da9f78-3520-46c7-8179-7051ef8e2417"
        },
        "raw_cb_frequency_txt": {
            "id": "63dd88fa469be378",
            "src": "hda",
            "uuid": "2d1d03b5-5007-44c6-b6a4-7dcc45747a50"
        },
        "quants_mat_cols_txt": {
            "id": "915fa59e397da3e9",
            "src": "hda",
            "uuid": "21e70f9d-7fa7-442e-bf31-442db063b317"
        },
        "observed_bias": {
            "id": "fbf58ab32ae46875",
            "src": "hda",
            "uuid": "edce4bdf-783b-43c5-afc6-483ac9be0971"
        },
        "quants_mat_mtx": {
            "id": "d6a04a564ed0e85a",
            "src": "hda",
            "uuid": "a1c7800b-14bb-4f25-927e-74b87757ac9c"
        },
        "featureDump_txt": {
            "id": "bb6b1675dad26129",
            "src": "hda",
            "uuid": "d7d900bc-a5e0-4e5b-b2e4-4c023e07552e"
        },
        "whitelist_txt": {
            "id": "b164bbf1ab47f387",
            "src": "hda",
            "uuid": "929d7068-eec4-492f-a695-7d485993ae5b"
        },
        "quants_mat_rows_txt": {
            "id": "b486fd9a7fb117c5",
            "src": "hda",
            "uuid": "cf791532-eff0-4a71-b4f1-f99384d37ec2"
        },
        "quants_tier_mat": {
            "id": "8b9f8497c9e3eed7",
            "src": "hda",
            "uuid": "c551c622-b15b-4096-adf5-f448a0aa2de2"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
