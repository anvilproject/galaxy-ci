{
    "model_class": "Job",
    "id": "9c27cd99893a1dbd",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-02-23T07:13:09.849125",
    "create_time": "2024-02-23T07:12:42.121204",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "9f8c5b59a2218bae",
    "external_id": "gxy-vszvm",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/c/d/4/dataset_cd4a28ad-1c07-42c3-bc5c-97fc2106b54d.dat' && cp '/galaxy/server/database/objects/a/b/2/dataset_ab2c1e9e-4697-44a0-a658-5a65ae56e0cd.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/1/9/c/dataset_19c61dbf-e4be-4429-b989-ad4845f6968a.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/7/a/2/dataset_7a226190-7c58-4afb-91ad-5d03d17d04f8.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 55: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 311, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 312, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 310, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "0870cc3ddebb8d8d",
            "src": "hda",
            "uuid": "7a226190-7c58-4afb-91ad-5d03d17d04f8"
        },
        "pairstraight|file2": {
            "id": "05e50d6efde54083",
            "src": "hda",
            "uuid": "19c61dbf-e4be-4429-b989-ad4845f6968a"
        },
        "pairstraight|file1": {
            "id": "a85f3164e578a377",
            "src": "hda",
            "uuid": "ab2c1e9e-4697-44a0-a658-5a65ae56e0cd"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "1030acb1ab7184dc",
            "src": "hda",
            "uuid": "cd4a28ad-1c07-42c3-bc5c-97fc2106b54d"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "cd1efbe0f63441d1",
            "src": "hda",
            "uuid": "595a1b00-169a-4fe3-8b2a-cb8523d5514c"
        },
        "whitelist_txt": {
            "id": "396443ad47681571",
            "src": "hda",
            "uuid": "78e1b1cb-0c68-4c4b-8f8c-ee2db807a261"
        },
        "quants_mat_cols_txt": {
            "id": "6c3758d943b68969",
            "src": "hda",
            "uuid": "8ed170b0-42bb-4337-8d0f-32c3d4ac5258"
        },
        "featureDump_txt": {
            "id": "c2f18a86bb840bee",
            "src": "hda",
            "uuid": "416f1c5c-ae4c-448d-9a9f-14ca31290ffd"
        },
        "quants_tier_mat": {
            "id": "6e9935b630f64045",
            "src": "hda",
            "uuid": "74518b98-e712-4377-8292-ac1594a0daea"
        },
        "quants_mat_rows_txt": {
            "id": "f09685fd4ef4be35",
            "src": "hda",
            "uuid": "84f7d528-ae8d-4de8-aee6-790a6b3f482d"
        },
        "raw_cb_frequency_txt": {
            "id": "785cf0018baccdc9",
            "src": "hda",
            "uuid": "b7549c36-8da5-45f4-8358-6d9a0716bf72"
        },
        "quants_mat_mtx": {
            "id": "987e07c707f5bb0d",
            "src": "hda",
            "uuid": "d5f6bce8-3dce-4cc5-8bbd-f5cb668548b0"
        },
        "observed_bias_3p": {
            "id": "53b3c281eeae8594",
            "src": "hda",
            "uuid": "ebb29cc9-93f9-4e3b-8898-7cc53621de72"
        },
        "observed_bias": {
            "id": "949a798d2fa77190",
            "src": "hda",
            "uuid": "3a4d869d-5a40-4ad1-a221-ee03f8c02375"
        },
        "expected_bias": {
            "id": "a2d111a9d455b40c",
            "src": "hda",
            "uuid": "8540b918-74c7-4fd2-b902-775fd25093f9"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
