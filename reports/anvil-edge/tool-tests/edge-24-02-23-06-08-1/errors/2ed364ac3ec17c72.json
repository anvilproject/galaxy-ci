{
    "model_class": "Job",
    "id": "2ed364ac3ec17c72",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-02-23T07:14:24.548236",
    "create_time": "2024-02-23T07:14:10.055990",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "9f8c5b59a2218bae",
    "external_id": "gxy-82xdd",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/d/0/4/dataset_d04ddae4-2c8f-40ea-a161-c2d6a6afc9ba.dat' && cp '/galaxy/server/database/objects/b/4/d/dataset_b4de1713-4987-4329-9dfb-33411411dc00.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/1/a/8/dataset_1a8efbbb-92e3-4add-9239-2a22378c7a1c.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/a/1/8/dataset_a1871264-1f21-414f-80d9-a24c2f50e618.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 37: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 344, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 345, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "47f43b5f4dc6a8e0",
            "src": "hda",
            "uuid": "a1871264-1f21-414f-80d9-a24c2f50e618"
        },
        "pairstraight|file2": {
            "id": "503eebe1a70d0f65",
            "src": "hda",
            "uuid": "1a8efbbb-92e3-4add-9239-2a22378c7a1c"
        },
        "pairstraight|file1": {
            "id": "48e58fe64c23944a",
            "src": "hda",
            "uuid": "b4de1713-4987-4329-9dfb-33411411dc00"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "4119f4b1d51f68e2",
            "src": "hda",
            "uuid": "d04ddae4-2c8f-40ea-a161-c2d6a6afc9ba"
        }
    },
    "outputs": {
        "raw_cb_frequency_txt": {
            "id": "0427c77fa3233533",
            "src": "hda",
            "uuid": "09d4a1e4-5221-4e49-a200-d7415ecd2214"
        },
        "quants_mat_mtx": {
            "id": "e062abcec124e296",
            "src": "hda",
            "uuid": "76b006fa-4ad3-4e33-9e08-c731de395e30"
        },
        "flenDist_txt": {
            "id": "81aae0179528a31d",
            "src": "hda",
            "uuid": "27218734-3eea-4d82-9edc-7816a5cf5462"
        },
        "observed_bias_3p": {
            "id": "a58acbf78befe6d7",
            "src": "hda",
            "uuid": "5c8c3f0c-3a2f-4726-b828-71597d3094e8"
        },
        "observed_bias": {
            "id": "3f835c7a24d90d0a",
            "src": "hda",
            "uuid": "43ab049f-ca62-4af1-a36a-c450037684a5"
        },
        "expected_bias": {
            "id": "9eb6ca773bc36258",
            "src": "hda",
            "uuid": "b4070204-e4b8-452e-9e0a-5123c5444b5b"
        },
        "whitelist_txt": {
            "id": "cc2dd5ce6f62ca2c",
            "src": "hda",
            "uuid": "f29a6c6b-5a1c-422a-b99e-182c9b0aedd5"
        },
        "featureDump_txt": {
            "id": "789c28cbc601ec9e",
            "src": "hda",
            "uuid": "156506f9-16ec-4347-a2d9-774ae575c80f"
        },
        "quants_tier_mat": {
            "id": "6100c30de454a84d",
            "src": "hda",
            "uuid": "050b707c-c2de-4f8a-b01a-1b9a8912e76c"
        },
        "quants_mat_rows_txt": {
            "id": "f4cf9bad2eb578fa",
            "src": "hda",
            "uuid": "b2478d85-6da5-488c-8f42-e42e8ca41244"
        },
        "quants_mat_cols_txt": {
            "id": "d41fb639bc8355cf",
            "src": "hda",
            "uuid": "3b658005-a0d4-41c8-accc-198f5c5d8918"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
