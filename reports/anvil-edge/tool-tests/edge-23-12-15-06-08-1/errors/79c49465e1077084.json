{
    "model_class": "Job",
    "id": "79c49465e1077084",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-12-15T07:20:13.357352",
    "create_time": "2023-12-15T07:19:55.265062",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "dd7c69ffbce454e7",
    "external_id": "gxy-tlm69",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/1/9/2/dataset_1925587b-f473-46de-9473-9bcb85d030ae.dat' && cp '/galaxy/server/database/objects/f/1/1/dataset_f1164293-8d78-477e-854b-0407d8dd529f.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/a/c/5/dataset_ac542e04-2f0b-4b4f-a82f-ac6e3e7a5c99.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/9/5/3/dataset_953892cf-8520-4fe9-8ebb-4f29e43a1570.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 330, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 331, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 329, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "3bed702ec1cd1c46",
            "src": "hda",
            "uuid": "953892cf-8520-4fe9-8ebb-4f29e43a1570"
        },
        "pairstraight|file2": {
            "id": "dbfe6eaad00f08d7",
            "src": "hda",
            "uuid": "ac542e04-2f0b-4b4f-a82f-ac6e3e7a5c99"
        },
        "pairstraight|file1": {
            "id": "bf8b0abd3e06d041",
            "src": "hda",
            "uuid": "f1164293-8d78-477e-854b-0407d8dd529f"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "261ae04d2f44fe6b",
            "src": "hda",
            "uuid": "1925587b-f473-46de-9473-9bcb85d030ae"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "ceb55307c4faebbd",
            "src": "hda",
            "uuid": "90244003-b9ea-41a6-8eb2-e577ceb61efa"
        },
        "observed_bias_3p": {
            "id": "2c7edd542b20e97f",
            "src": "hda",
            "uuid": "21dadb04-f7fb-4425-9f4a-61a4a1569319"
        },
        "observed_bias": {
            "id": "c1782c9f5eb65417",
            "src": "hda",
            "uuid": "ac6b0074-c00c-47f4-9f92-b06176a00e64"
        },
        "expected_bias": {
            "id": "061266eee3c9c663",
            "src": "hda",
            "uuid": "3089e437-b873-4dd2-878f-6d7100867ba0"
        },
        "whitelist_txt": {
            "id": "af0cbd4f86c75c07",
            "src": "hda",
            "uuid": "e2b4b340-cddf-4463-82ed-9fcad2818c2c"
        },
        "featureDump_txt": {
            "id": "86e14540176a00ba",
            "src": "hda",
            "uuid": "3e828497-e07d-4515-b53e-151198ac64f8"
        },
        "quants_tier_mat": {
            "id": "d30636bd08101372",
            "src": "hda",
            "uuid": "0b05a666-1f0c-4e9b-9603-d076f46239af"
        },
        "quants_mat_rows_txt": {
            "id": "7a50e42f23d00c95",
            "src": "hda",
            "uuid": "0451a007-96f0-442e-9075-a172cb5219da"
        },
        "quants_mat_cols_txt": {
            "id": "43b79152a0da9f56",
            "src": "hda",
            "uuid": "d6e1dcc3-69c8-4c5d-bde9-e4928d43dca7"
        },
        "raw_cb_frequency_txt": {
            "id": "f9f340c8c6ad3152",
            "src": "hda",
            "uuid": "81ff2700-1dcd-4ea5-b9c0-a2e0588f6551"
        },
        "quants_mat_mtx": {
            "id": "c5117daf870c205f",
            "src": "hda",
            "uuid": "20e11cdd-9ce4-4777-823b-9c526d59d5e4"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
