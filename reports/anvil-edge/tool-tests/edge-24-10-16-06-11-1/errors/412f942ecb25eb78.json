{
    "model_class": "Job",
    "id": "412f942ecb25eb78",
    "history_id": "73476956ae7443fa",
    "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/deseq2/deseq2/2.11.40.8+galaxy0",
    "state": "error",
    "exit_code": null,
    "create_time": "2024-10-16T06:44:32.775849",
    "update_time": "2024-10-16T06:44:57.459247",
    "galaxy_version": "24.1",
    "external_id": "gxy-brf79",
    "handler": null,
    "job_runner_name": null,
    "command_line": "ln -s '/galaxy/server/database/objects/7/f/2/dataset_7f2b5052-014b-4934-a668-d0157abcac92.dat' mapping.gff &&  cat '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/deseq2/9a882d108833/deseq2/get_deseq_dataset.R' > /dev/null &&  Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/deseq2/9a882d108833/deseq2/deseq2.R' --cores ${GALAXY_SLOTS:-1} -o '/galaxy/server/database/objects/3/2/f/dataset_32ffb0ec-12cd-4988-8b99-3a9fa85750ae.dat' -A 0.05 -F '/galaxy/server/database/objects/1/6/3/dataset_1632dcd0-75d5-45ba-92ae-78ced417e704.dat'                  -H  -f '[[\"Treatment\", [{\"Untreated\": [\"/galaxy/server/database/objects/7/3/0/dataset_730f8bf1-d45f-4625-8fdc-c3618ded68e4.dat\", \"/galaxy/server/database/objects/8/8/9/dataset_889a5053-55f8-4f9b-980f-237c17a98882.dat\", \"/galaxy/server/database/objects/d/b/0/dataset_db036af6-0fc9-4c65-bfbe-e5901e36fbf3.dat\"]}, {\"Treated\": [\"/galaxy/server/database/objects/9/c/b/dataset_9cbd0f5b-153d-4e4e-949c-ce8a8da2efd7.dat\", \"/galaxy/server/database/objects/5/0/7/dataset_50788d06-b424-4c0d-b6e6-d58883693f3d.dat\", \"/galaxy/server/database/objects/e/0/6/dataset_e0669f7b-acef-487d-a758-23a465f9b336.dat\"]}]]]' -l '{\"dataset_9cbd0f5b-153d-4e4e-949c-ce8a8da2efd7.dat\": \"sailfish_quant.sf1.tab\", \"dataset_50788d06-b424-4c0d-b6e6-d58883693f3d.dat\": \"sailfish_quant.sf2.tab\", \"dataset_e0669f7b-acef-487d-a758-23a465f9b336.dat\": \"sailfish_quant.sf3.tab\", \"dataset_730f8bf1-d45f-4625-8fdc-c3618ded68e4.dat\": \"sailfish_quant.sf4.tab\", \"dataset_889a5053-55f8-4f9b-980f-237c17a98882.dat\": \"sailfish_quant.sf5.tab\", \"dataset_db036af6-0fc9-4c65-bfbe-e5901e36fbf3.dat\": \"sailfish_quant.sf6.tab\"}' -t 1       -i -y sailfish -x mapping.gff",
    "user_email": "tests@fake.org",
    "command_version": null,
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "output_options": "{\"alpha_ma\": \"0.05\", \"output_selector\": \"sizefactors\"}",
        "advanced_options": "{\"auto_mean_filter_off\": false, \"esf_cond\": {\"__current_case__\": 0, \"esf\": \"\"}, \"fit_type\": \"1\", \"outlier_filter_off\": false, \"outlier_replace_off\": false, \"prefilter_conditional\": {\"__current_case__\": 1, \"prefilter\": \"\"}, \"use_beta_priors\": false}",
        "tximport": "{\"__current_case__\": 0, \"mapping_format\": {\"__current_case__\": 0, \"gtf_file\": {\"values\": [{\"id\": 120, \"src\": \"hda\"}]}, \"mapping_format_selector\": \"gtf\"}, \"tximport_selector\": \"tximport\", \"txtype\": \"sailfish\"}",
        "header": "true",
        "batch_factors": null,
        "select_data": "{\"__current_case__\": 1, \"how\": \"datasets_per_level\", \"rep_factorName\": [{\"__index__\": 0, \"factorName\": \"Treatment\", \"rep_factorLevel\": [{\"__index__\": 0, \"countsFile\": {\"values\": [{\"id\": 114, \"src\": \"hda\"}, {\"id\": 115, \"src\": \"hda\"}, {\"id\": 116, \"src\": \"hda\"}]}, \"factorLevel\": \"Treated\"}, {\"__index__\": 1, \"countsFile\": {\"values\": [{\"id\": 117, \"src\": \"hda\"}, {\"id\": 118, \"src\": \"hda\"}, {\"id\": 119, \"src\": \"hda\"}]}, \"factorLevel\": \"Untreated\"}]}]}"
    },
    "inputs": {
        "select_data|rep_factorName_0|rep_factorLevel_1|countsFile2": {
            "id": "a1c2bdb57e770ab2",
            "src": "hda",
            "uuid": "889a5053-55f8-4f9b-980f-237c17a98882"
        },
        "select_data|rep_factorName_0|rep_factorLevel_0|countsFile3": {
            "id": "c7abaabe7b8c1ec7",
            "src": "hda",
            "uuid": "e0669f7b-acef-487d-a758-23a465f9b336"
        },
        "tximport|mapping_format|gtf_file": {
            "id": "86e75e017978bb25",
            "src": "hda",
            "uuid": "7f2b5052-014b-4934-a668-d0157abcac92"
        },
        "select_data|rep_factorName_0|rep_factorLevel_1|countsFile3": {
            "id": "5efff7c1adbcdc4f",
            "src": "hda",
            "uuid": "db036af6-0fc9-4c65-bfbe-e5901e36fbf3"
        },
        "select_data|rep_factorName_0|rep_factorLevel_0|countsFile1": {
            "id": "c20e0612e9a9111d",
            "src": "hda",
            "uuid": "9cbd0f5b-153d-4e4e-949c-ce8a8da2efd7"
        },
        "select_data|rep_factorName_0|rep_factorLevel_0|countsFile": {
            "id": "c20e0612e9a9111d",
            "src": "hda",
            "uuid": "9cbd0f5b-153d-4e4e-949c-ce8a8da2efd7"
        },
        "select_data|rep_factorName_0|rep_factorLevel_0|countsFile2": {
            "id": "31e4348d6bca43ac",
            "src": "hda",
            "uuid": "50788d06-b424-4c0d-b6e6-d58883693f3d"
        },
        "select_data|rep_factorName_0|rep_factorLevel_1|countsFile1": {
            "id": "5bb922b11c0b3318",
            "src": "hda",
            "uuid": "730f8bf1-d45f-4625-8fdc-c3618ded68e4"
        },
        "select_data|rep_factorName_0|rep_factorLevel_1|countsFile": {
            "id": "5bb922b11c0b3318",
            "src": "hda",
            "uuid": "730f8bf1-d45f-4625-8fdc-c3618ded68e4"
        }
    },
    "outputs": {
        "sizefactors_out": {
            "id": "56f59201c5a0ff41",
            "src": "hda",
            "uuid": "1632dcd0-75d5-45ba-92ae-78ced417e704"
        },
        "deseq_out": {
            "id": "a19c6063fbdd73e3",
            "src": "hda",
            "uuid": "32ffb0ec-12cd-4988-8b99-3a9fa85750ae"
        }
    },
    "copied_from_job_id": null,
    "output_collections": {},
    "tool_stdout": "primary factor: Treatment \n\n---------------------\nNo size factor was used\n\nsize factors for samples: taking tximport data into account\nDESeq2 run information\n\nsample table:\n                       Treatment\nsailfish_quant.sf4.tab Untreated\nsailfish_quant.sf5.tab Untreated\nsailfish_quant.sf6.tab Untreated\nsailfish_quant.sf1.tab   Treated\nsailfish_quant.sf2.tab   Treated\nsailfish_quant.sf3.tab   Treated\n\ndesign formula:\n~Treatment\n\n\n6 samples with counts over 11 genes\nApplied default - beta prior off\n[1] \"use_beta_prior is set to FALSE\"\nusing disperion fit type: parametric \nsummary of results\nTreatment: Treated vs Untreated\n\nout of 9 with nonzero total read count\nadjusted p-value < 0.1\nLFC > 0 (up)       : 0, 0%\nLFC < 0 (down)     : 0, 0%\noutliers [1]       : 0, 0%\nlow counts [2]     : 0, 0%\n(mean count < 0)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\nNULL\nSession information:\n\nR version 4.3.1 (2023-06-16)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.23.so;  LAPACK version 3.11.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: NA\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    tools     stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] GenomicFeatures_1.52.1      AnnotationDbi_1.62.2       \n [3] tximport_1.28.0             rjson_0.2.21               \n [5] gplots_3.1.3                RColorBrewer_1.1-3         \n [7] DESeq2_1.40.2               SummarizedExperiment_1.30.2\n [9] Biobase_2.60.0              MatrixGenerics_1.12.2      \n[11] matrixStats_1.0.0           GenomicRanges_1.52.0       \n[13] GenomeInfoDb_1.36.1         IRanges_2.34.1             \n[15] S4Vectors_0.38.1            BiocGenerics_0.46.0        \n[17] getopt_1.20.3              \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.0         dplyr_1.1.2              blob_1.2.4              \n [4] filelock_1.0.2           Biostrings_2.68.1        bitops_1.0-7            \n [7] fastmap_1.1.1            RCurl_1.98-1.12          BiocFileCache_2.8.0     \n[10] GenomicAlignments_1.36.0 XML_3.99-0.14            digest_0.6.33           \n[13] lifecycle_1.0.3          KEGGREST_1.40.0          RSQLite_2.3.1           \n[16] magrittr_2.0.3           compiler_4.3.1           rlang_1.1.1             \n[19] progress_1.2.2           yaml_2.3.7               utf8_1.2.3              \n[22] rtracklayer_1.60.0       prettyunits_1.1.1        S4Arrays_1.0.4          \n[25] bit_4.0.5                curl_5.0.1               DelayedArray_0.26.6     \n[28] xml2_1.3.5               BiocParallel_1.34.2      KernSmooth_2.23-22      \n[31] grid_4.3.1               fansi_1.0.4              caTools_1.18.2          \n[34] colorspace_2.1-0         ggplot2_3.4.2            scales_1.2.1            \n[37] gtools_3.9.4             biomaRt_2.56.1           cli_3.6.1               \n[40] crayon_1.5.2             generics_0.1.3           httr_1.4.6              \n[43] DBI_1.1.3                cachem_1.0.8             stringr_1.5.0           \n[46] zlibbioc_1.46.0          parallel_4.3.1           restfulr_0.0.15         \n[49] XVector_0.40.0           vctrs_0.6.3              Matrix_1.6-0            \n[52] jsonlite_1.8.7           hms_1.1.3                bit64_4.0.5             \n[55] locfit_1.5-9.8           glue_1.6.2               codetools_0.2-19        \n[58] stringi_1.7.12           gtable_0.3.3             BiocIO_1.10.0           \n[61] munsell_0.5.0            tibble_3.2.1             pillar_1.9.0            \n[64] rappdirs_0.3.3           GenomeInfoDbData_1.2.10  R6_2.5.1                \n[67] dbplyr_2.3.3             lattice_0.21-8           Rsamtools_2.16.0        \n[70] png_0.1-8                memoise_2.0.1            Rcpp_1.0.11             \n[73] pkgconfig_2.0.3         \n",
    "tool_stderr": "Import genomic features from the file as a GRanges object ... OK\nPrepare the 'metadata' data frame ... OK\nMake the TxDb object ... OK\n'select()' returned 1:1 mapping between keys and columns\nreading in files with read.delim (install 'readr' package for speed up)\n1 2 3 4 5 6 \nreading in files with read.delim (install 'readr' package for speed up)\n1 2 3 4 5 6 \nsummarizing abundance\nsummarizing counts\nsummarizing length\nusing counts and average transcript lengths from tximport\nWarning message:\nIn .get_cds_IDX(mcols0$type, mcols0$phase) :\n  The \"phase\" metadata column contains non-NA values for features of type\n  stop_codon. This information was ignored.\nestimating size factors\nusing 'avgTxLength' from assays(dds), correcting for library size\nestimating dispersions\ngene-wise dispersion estimates\nmean-dispersion relationship\n-- note: fitType='parametric', but the dispersion trend was not well captured by the\n   function: y = a/x + b, and a local regression fit was automatically substituted.\n   specify fitType='local' or 'mean' to avoid this message next time.\nfinal dispersion estimates\nfitting model and testing\nWarning message:\nIn lfproc(x, y, weights = weights, cens = cens, base = base, geth = geth,  :\n  Estimated rdf < 1.0; not estimating variance\n",
    "job_stdout": null,
    "job_stderr": null,
    "stdout": "primary factor: Treatment \n\n---------------------\nNo size factor was used\n\nsize factors for samples: taking tximport data into account\nDESeq2 run information\n\nsample table:\n                       Treatment\nsailfish_quant.sf4.tab Untreated\nsailfish_quant.sf5.tab Untreated\nsailfish_quant.sf6.tab Untreated\nsailfish_quant.sf1.tab   Treated\nsailfish_quant.sf2.tab   Treated\nsailfish_quant.sf3.tab   Treated\n\ndesign formula:\n~Treatment\n\n\n6 samples with counts over 11 genes\nApplied default - beta prior off\n[1] \"use_beta_prior is set to FALSE\"\nusing disperion fit type: parametric \nsummary of results\nTreatment: Treated vs Untreated\n\nout of 9 with nonzero total read count\nadjusted p-value < 0.1\nLFC > 0 (up)       : 0, 0%\nLFC < 0 (down)     : 0, 0%\noutliers [1]       : 0, 0%\nlow counts [2]     : 0, 0%\n(mean count < 0)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\nNULL\nSession information:\n\nR version 4.3.1 (2023-06-16)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.23.so;  LAPACK version 3.11.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: NA\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    tools     stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] GenomicFeatures_1.52.1      AnnotationDbi_1.62.2       \n [3] tximport_1.28.0             rjson_0.2.21               \n [5] gplots_3.1.3                RColorBrewer_1.1-3         \n [7] DESeq2_1.40.2               SummarizedExperiment_1.30.2\n [9] Biobase_2.60.0              MatrixGenerics_1.12.2      \n[11] matrixStats_1.0.0           GenomicRanges_1.52.0       \n[13] GenomeInfoDb_1.36.1         IRanges_2.34.1             \n[15] S4Vectors_0.38.1            BiocGenerics_0.46.0        \n[17] getopt_1.20.3              \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.0         dplyr_1.1.2              blob_1.2.4              \n [4] filelock_1.0.2           Biostrings_2.68.1        bitops_1.0-7            \n [7] fastmap_1.1.1            RCurl_1.98-1.12          BiocFileCache_2.8.0     \n[10] GenomicAlignments_1.36.0 XML_3.99-0.14            digest_0.6.33           \n[13] lifecycle_1.0.3          KEGGREST_1.40.0          RSQLite_2.3.1           \n[16] magrittr_2.0.3           compiler_4.3.1           rlang_1.1.1             \n[19] progress_1.2.2           yaml_2.3.7               utf8_1.2.3              \n[22] rtracklayer_1.60.0       prettyunits_1.1.1        S4Arrays_1.0.4          \n[25] bit_4.0.5                curl_5.0.1               DelayedArray_0.26.6     \n[28] xml2_1.3.5               BiocParallel_1.34.2      KernSmooth_2.23-22      \n[31] grid_4.3.1               fansi_1.0.4              caTools_1.18.2          \n[34] colorspace_2.1-0         ggplot2_3.4.2            scales_1.2.1            \n[37] gtools_3.9.4             biomaRt_2.56.1           cli_3.6.1               \n[40] crayon_1.5.2             generics_0.1.3           httr_1.4.6              \n[43] DBI_1.1.3                cachem_1.0.8             stringr_1.5.0           \n[46] zlibbioc_1.46.0          parallel_4.3.1           restfulr_0.0.15         \n[49] XVector_0.40.0           vctrs_0.6.3              Matrix_1.6-0            \n[52] jsonlite_1.8.7           hms_1.1.3                bit64_4.0.5             \n[55] locfit_1.5-9.8           glue_1.6.2               codetools_0.2-19        \n[58] stringi_1.7.12           gtable_0.3.3             BiocIO_1.10.0           \n[61] munsell_0.5.0            tibble_3.2.1             pillar_1.9.0            \n[64] rappdirs_0.3.3           GenomeInfoDbData_1.2.10  R6_2.5.1                \n[67] dbplyr_2.3.3             lattice_0.21-8           Rsamtools_2.16.0        \n[70] png_0.1-8                memoise_2.0.1            Rcpp_1.0.11             \n[73] pkgconfig_2.0.3         \n",
    "stderr": "Import genomic features from the file as a GRanges object ... OK\nPrepare the 'metadata' data frame ... OK\nMake the TxDb object ... OK\n'select()' returned 1:1 mapping between keys and columns\nreading in files with read.delim (install 'readr' package for speed up)\n1 2 3 4 5 6 \nreading in files with read.delim (install 'readr' package for speed up)\n1 2 3 4 5 6 \nsummarizing abundance\nsummarizing counts\nsummarizing length\nusing counts and average transcript lengths from tximport\nWarning message:\nIn .get_cds_IDX(mcols0$type, mcols0$phase) :\n  The \"phase\" metadata column contains non-NA values for features of type\n  stop_codon. This information was ignored.\nestimating size factors\nusing 'avgTxLength' from assays(dds), correcting for library size\nestimating dispersions\ngene-wise dispersion estimates\nmean-dispersion relationship\n-- note: fitType='parametric', but the dispersion trend was not well captured by the\n   function: y = a/x + b, and a local regression fit was automatically substituted.\n   specify fitType='local' or 'mean' to avoid this message next time.\nfinal dispersion estimates\nfitting model and testing\nWarning message:\nIn lfproc(x, y, weights = weights, cens = cens, base = base, geth = geth,  :\n  Estimated rdf < 1.0; not estimating variance\n",
    "job_messages": null,
    "dependencies": [],
    "job_metrics": []
}
