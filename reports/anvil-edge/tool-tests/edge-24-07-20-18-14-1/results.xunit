<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="106"
           errors="12"
           failures="11"
           skip="0">
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="11.164407014846802">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.164407014846802, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="11.257541418075562">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.257541418075562, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="31.810438632965088">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/4/b/dataset_b4b0bdb0-cef7-425a-9f75-23c067f37016.dat')with open('/galaxy/server/database/objects/e/b/8/dataset_eb8325dc-84f4-4f5c-8054-b8bb379a4f1d.dat', 'w', encoding="utf-8") as f:    print(adata, file=f)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="41.11109256744385">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/6/6/dataset_166302b9-4be5-463f-a557-a6fa9c85d4ad.dat')adata.to_df().to_csv('/galaxy/server/database/objects/1/3/8/dataset_138d6b26-db90-4f8b-b22b-7ba344f848e7.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="32.90104913711548">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/3/e/d/dataset_3edce530-635d-48d6-abcd-83dee2452b5f.dat')adata.to_df().to_csv('/galaxy/server/database/objects/d/0/2/dataset_d02793c6-b327-4594-aa2a-e03ddacacc2f.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="32.76328635215759">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/3/4/8/dataset_348199d8-f085-4dd5-ba79-d5683aa0fdeb.dat')adata.to_df().to_csv('/galaxy/server/database/objects/b/5/3/dataset_b534b965-46bc-4695-84ac-899e91ecfbbb.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="34.445982694625854">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/4/e/2/dataset_4e2a119f-313a-42c0-aae4-2bffe88b95a3.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/2/5/e/dataset_25e48dbe-8da0-4eef-88bd-2084ba455994.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="34.69820237159729">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/3/9/dataset_2398428f-06cf-44cb-800f-84c713ed0ab3.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/6/2/b/dataset_62bf4f05-b09e-4817-967c-8a1f8cb42508.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="32.64321541786194">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/f/1/dataset_9f1fe849-6268-4b19-8f7f-7567a49e3285.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/1/0/0/dataset_100d4f0b-b437-45e3-ad02-f5f36cc300ed.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="34.44764518737793">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/b/0/dataset_7b0664a9-8757-4b4c-9f94-08fd1409eb25.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/1/8/5/dataset_1854edc1-631c-47dc-88e3-04a6177d0fff.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="34.02456498146057">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/8/e/dataset_b8e41fb2-40d4-472c-8281-092180ee9e19.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/5/b/1/dataset_5b16f907-33be-4377-980a-fc3b88219260.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="34.00937223434448">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/9/7/dataset_997b8ba0-fab2-47b9-af87-a0551863dca2.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/9/a/3/dataset_9a37ecda-f883-4de2-9efc-fc8dbdbe3988.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="31.224408626556396">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/e/7/dataset_de735a39-9143-4f14-bd2b-f3637e7c4d7b.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/e/a/b/dataset_eab774fc-4104-4981-b92f-fba9f06158c3.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="32.4102258682251">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/4/8/7/dataset_487f7d0b-0424-4481-989d-eb59aad8eb0a.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/7/8/e/dataset_78e093d2-387c-4351-966a-36f37b9426a9.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="32.4200439453125">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/e/f/6/dataset_ef63d21f-aa4b-4b84-ae87-6b9941986728.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/8/1/c/dataset_81c90134-9ad5-4f92-87ab-5d2e160f1fba.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="34.315900564193726">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/7/3/dataset_d7386c49-84f9-4b24-9c4f-d276dddcc150.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="24.939650297164917">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "f628495948d048f7",   "src": "hda"  },  "inspect|info": "obsm",  "inspect|obsm_info": "X_draw_graph" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/142/configs/tmpey0kuqa6\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/142/configs/tmpey0kuqa6\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-20T19:09:07.207517",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-727pt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "2dead8310806309e",  "inputs": {   "input": {    "id": "f628495948d048f7",    "src": "hda",    "uuid": "d4ffe91f-74a9-4ee2-bc7b-42b346b5dc66"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {   "obsm_X_draw_graph": {    "id": "0d05ee2c68ad7c00",    "src": "hdca"   }  },  "outputs": {},  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 6, \"info\": \"obsm\", \"obsm_info\": \"X_draw_graph\"}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/d/4/f/dataset_d4ffe91f-74a9-4ee2-bc7b-42b346b5dc66.dat\u0027)\n\nfor key in adata.obsm.keys():\n    if key.startswith(\u0027X_draw_graph\u0027):\n        pd.DataFrame(adata.obsm[key]).to_csv(key, sep=\"\\t\", index = False)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/d/4/f/dataset_d4ffe91f-74a9-4ee2-bc7b-42b346b5dc66.dat\u0027)\n\nfor key in adata.obsm.keys():\n    if key.startswith(\u0027X_draw_graph\u0027):\n        pd.DataFrame(adata.obsm[key]).to_csv(key, sep=\"\\t\", index = False)\n\n",  "update_time": "2024-07-20T19:09:13.511171",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: .",  "Output collection \u0027obsm_X_draw_graph\u0027: failed to find identifier \u0027fr\u0027 in the tool generated elements []" ], "status": "failure", "test_index": 13, "time_seconds": 24.939650297164917, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/4/f/dataset_d4ffe91f-74a9-4ee2-bc7b-42b346b5dc66.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="33.17953610420227">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/3/4/dataset_b34fdf88-60a4-4722-9927-9c7e9cf85039.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="33.36426854133606">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/f/3/f/dataset_f3f5717c-d4bb-4ff1-8336-fbd92638e157.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/8/d/1/dataset_8d18b9b0-eb48-41f8-b6eb-5d0b968a8a25.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="33.57352614402771">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/8/e/d/dataset_8eda3962-3e4b-4da1-bcd3-72b71b51a37b.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/1/1/5/dataset_11520fc1-3d17-465d-bdaf-a971ddddc6c1.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="34.339821338653564">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/4/1/dataset_741836ad-4512-4c60-b2b1-c513e4e5d3ed.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/8/6/b/dataset_86bdd011-9255-4e78-b0c3-b37d416be7b7.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="34.31062650680542">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/e/8/f/dataset_e8f4dacf-f4a8-4675-972b-8c9e514b3be3.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/3/1/e/dataset_31e0cf9d-d7ee-47f1-bbe1-927dd355ea0f.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="33.24594855308533">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/5/0/dataset_0502dc70-6988-42e4-8362-0f1fd2383dbc.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/9/8/6/dataset_98699c20-55dc-407e-8906-859b9a6e95f9.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="32.384613275527954">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/c/3/a/dataset_c3a9ba1d-d447-4cb8-a16f-06f405c0ab57.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/a/c/6/dataset_ac6ea3dd-e61c-4f09-80f9-0954d5317cb6.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="33.014026165008545">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/a/0/dataset_da0a9320-f5a9-4b56-928e-f80923d1a598.dat')adata.obs.to_csv('/galaxy/server/database/objects/f/2/9/dataset_f2914634-0f08-4678-9bcb-0421573883d7.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="32.29157853126526">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/6/0/dataset_2600333f-b35c-40a9-8fea-d38f4b5b6188.dat')adata.obs.to_csv('/galaxy/server/database/objects/0/7/0/dataset_07069923-b145-412b-a84e-d3560e807c42.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="31.773935317993164">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/5/d/dataset_b5db90b2-c3bd-4000-b32e-dc43d9e3d351.dat')adata.obs.to_csv('/galaxy/server/database/objects/a/6/1/dataset_a6194bc0-9051-4162-ace1-2143b6a2dd9a.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="32.19429111480713">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/c/a/dataset_2cad3ee7-593a-416a-9077-0593808e847d.dat')adata.var.to_csv('/galaxy/server/database/objects/7/e/f/dataset_7ef44ebb-2118-403f-bf05-9cb9e6657a08.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="32.21567153930664">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/0/b/dataset_90b7d08a-7b68-48d7-ba48-ff14129cbeaf.dat')adata.var.to_csv('/galaxy/server/database/objects/7/4/a/dataset_74a5d33f-74b9-497f-a2b6-71c223a15b91.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="34.31376886367798">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/c/e/a/dataset_cea826d8-5223-49ed-b611-2c4f1430312f.dat')adata.var.to_csv('/galaxy/server/database/objects/8/0/e/dataset_80e0d515-3791-4841-8a5b-4d0ff77731e5.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="33.96966075897217">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/f/c/5/dataset_fc5de9c7-4d72-4380-9c67-721f879f5bec.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/4/d/4/dataset_4d49a204-bec8-478c-9ecc-6c2cb6746ec1.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="25.6014301776886">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "58e1f39f60115aa8",   "src": "hda"  },  "inspect|chunk|info": "specified",  "inspect|chunk|list": "3,5,8",  "inspect|info": "chunk_X" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/124/configs/tmpdf41x0yk\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/124/configs/tmpdf41x0yk\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-20T19:04:06.155939",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-flt42",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "0098a46ea16efcdd",  "inputs": {   "input": {    "id": "58e1f39f60115aa8",    "src": "hda",    "uuid": "bf23cc94-3973-49ac-afbb-139d26e56fe8"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "chunk_X": {    "id": "351d0efb184d372e",    "src": "hda",    "uuid": "b89596e7-1c6d-4229-ac4b-ce40d302f18b"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 2, \"chunk\": {\"__current_case__\": 1, \"info\": \"specified\", \"list\": \"3,5,8\"}, \"info\": \"chunk_X\"}"  },  "state": "error",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/b/f/2/dataset_bf23cc94-3973-49ac-afbb-139d26e56fe8.dat\u0027)\n\nX = adata.chunk_X(select=[3, 5, 8])\npd.DataFrame(X).to_csv(\u0027/galaxy/server/database/objects/b/8/9/dataset_b89596e7-1c6d-4229-ac4b-ce40d302f18b.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/b/f/2/dataset_bf23cc94-3973-49ac-afbb-139d26e56fe8.dat\u0027)\n\nX = adata.chunk_X(select=[3, 5, 8])\npd.DataFrame(X).to_csv(\u0027/galaxy/server/database/objects/b/8/9/dataset_b89596e7-1c6d-4229-ac4b-ce40d302f18b.dat\u0027, sep=\u0027\\t\u0027)\n\n",  "update_time": "2024-07-20T19:04:12.047323",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n." ], "status": "failure", "test_index": 4, "time_seconds": 25.6014301776886, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/f/2/dataset_bf23cc94-3973-49ac-afbb-139d26e56fe8.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/b/8/9/dataset_b89596e7-1c6d-4229-ac4b-ce40d302f18b.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="32.15647315979004">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/f/a/dataset_2faa043c-8a6c-4747-be5a-72af535f0f72.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/f/f/5/dataset_ff5dc075-64be-4e0f-b435-b667f561c607.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="31.067212343215942">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/e/e/dataset_2ee22f9d-8727-41b9-a93b-8ffe43da83e4.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/2/3/c/dataset_23c0b826-4a40-4b17-bbfc-51c57b02d1cc.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="31.50802493095398">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/9/d/dataset_69d775a3-f8fc-4eeb-b499-d499f2d09f0e.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/b/e/8/dataset_be83ad3f-c640-4efd-ad25-4b6714a5e0a9.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="33.51116323471069">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/a/d/c/dataset_adce22fd-0a05-4fe6-8662-a523c9d85d13.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/e/a/b/dataset_eab14836-9941-4cc3-9cdb-5c784849c672.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="34.682579040527344">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/c/7/dataset_2c713017-53a6-4793-a50d-823b95ea516d.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="33.89007377624512">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/8/a/dataset_18af40da-6cca-43ea-9b98-1e00f137d2ff.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="34.57547163963318">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/2/a/dataset_22a11497-5aac-479b-a88e-e2c92e56b025.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="33.65203356742859">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/8/9/3/dataset_893b4b4d-d6a7-4c05-9095-48df8b51f276.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="34.233853340148926">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/6/9/dataset_7698ee4f-8480-47c5-a635-04f9f137dd85.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="35.29699110984802">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/e/2/dataset_de20867d-4017-48c2-9741-e4d298399a8d.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="33.83051562309265">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/e/e/4/dataset_ee480ca8-9313-4e82-ba56-fb45e34838c1.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/c/4/4/dataset_c44906b9-88bc-46bf-ad22-d707e6ce042f.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/c/8/e/dataset_c8ef0351-13ab-4a0f-8d8c-bc2ca4587e77.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="33.95880055427551">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/4/6/2/dataset_462ea7d3-34de-4d7e-85ac-547ad5f22c6e.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/2/2/3/dataset_22342ef2-deba-46c6-9ea9-9339641602b2.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/0/0/2/dataset_002883d7-c44e-428b-864d-1a85823b881c.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="32.63181447982788">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/2/b/dataset_62b5d3ec-81f3-411e-bcce-c70b569d4738.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/a/3/8/dataset_a38157d7-3be0-4a61-a07c-86784671f2ef.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/a/d/b/dataset_adb8e698-44d7-419b-bdef-131f51efb624.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="26.30429434776306">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "bfe759ca4e087df1",   "src": "hda"  },  "inspect|info": "uns",  "inspect|uns_info": "rank_genes_groups" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/103/configs/tmp7dnf6m4a\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/103/configs/tmp7dnf6m4a\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-20T18:58:25.211486",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-k79zr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "70b2edd63f4edfa6",  "inputs": {   "input": {    "id": "bfe759ca4e087df1",    "src": "hda",    "uuid": "64efd65c-056f-44f7-95df-6790ccb77a97"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "uns_rank_genes_groups_logfoldchanges": {    "id": "6b92ad53396b8958",    "src": "hda",    "uuid": "a31edb7e-52ea-4332-89bd-e37258a47d90"   },   "uns_rank_genes_groups_names": {    "id": "aa8017478acd9293",    "src": "hda",    "uuid": "2b194aa7-a696-405d-b6dd-70ea41637c0a"   },   "uns_rank_genes_groups_pvals": {    "id": "188e9086ed0498cb",    "src": "hda",    "uuid": "8475b5d1-1e8d-43be-9986-ee928157ca65"   },   "uns_rank_genes_groups_pvals_adj": {    "id": "c5d0ee1bb0d49279",    "src": "hda",    "uuid": "9693bdc9-3b50-4cd3-b182-cc95ccbdca82"   },   "uns_rank_genes_groups_scores": {    "id": "5ac0e082989ed685",    "src": "hda",    "uuid": "a27114c1-7e9f-47f8-a032-def904c70eea"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 5, \"info\": \"uns\", \"uns_info\": \"rank_genes_groups\"}"  },  "state": "error",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/6/4/e/dataset_64efd65c-056f-44f7-95df-6790ccb77a97.dat\u0027)\n\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027logfoldchanges\u0027]).to_csv(\"/galaxy/server/database/objects/a/3/1/dataset_a31edb7e-52ea-4332-89bd-e37258a47d90.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027names\u0027]).to_csv(\"/galaxy/server/database/objects/2/b/1/dataset_2b194aa7-a696-405d-b6dd-70ea41637c0a.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027pvals\u0027]).to_csv(\"/galaxy/server/database/objects/8/4/7/dataset_8475b5d1-1e8d-43be-9986-ee928157ca65.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027pvals_adj\u0027]).to_csv(\"/galaxy/server/database/objects/9/6/9/dataset_9693bdc9-3b50-4cd3-b182-cc95ccbdca82.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027scores\u0027]).to_csv(\"/galaxy/server/database/objects/a/2/7/dataset_a27114c1-7e9f-47f8-a032-def904c70eea.dat\", sep=\"\\t\", index = False)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/6/4/e/dataset_64efd65c-056f-44f7-95df-6790ccb77a97.dat\u0027)\n\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027logfoldchanges\u0027]).to_csv(\"/galaxy/server/database/objects/a/3/1/dataset_a31edb7e-52ea-4332-89bd-e37258a47d90.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027names\u0027]).to_csv(\"/galaxy/server/database/objects/2/b/1/dataset_2b194aa7-a696-405d-b6dd-70ea41637c0a.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027pvals\u0027]).to_csv(\"/galaxy/server/database/objects/8/4/7/dataset_8475b5d1-1e8d-43be-9986-ee928157ca65.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027pvals_adj\u0027]).to_csv(\"/galaxy/server/database/objects/9/6/9/dataset_9693bdc9-3b50-4cd3-b182-cc95ccbdca82.dat\", sep=\"\\t\", index = False)\npd.DataFrame(adata.uns[\u0027rank_genes_groups\u0027][\u0027scores\u0027]).to_csv(\"/galaxy/server/database/objects/a/2/7/dataset_a27114c1-7e9f-47f8-a032-def904c70eea.dat\", sep=\"\\t\", index = False)\n\n",  "update_time": "2024-07-20T18:58:31.272346",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n." ], "status": "failure", "test_index": 9, "time_seconds": 26.30429434776306, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/4/e/dataset_64efd65c-056f-44f7-95df-6790ccb77a97.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/a/3/1/dataset_a31edb7e-52ea-4332-89bd-e37258a47d90.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/2/b/1/dataset_2b194aa7-a696-405d-b6dd-70ea41637c0a.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/8/4/7/dataset_8475b5d1-1e8d-43be-9986-ee928157ca65.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/9/6/9/dataset_9693bdc9-3b50-4cd3-b182-cc95ccbdca82.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/a/2/7/dataset_a27114c1-7e9f-47f8-a032-def904c70eea.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="40.22349572181702">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/2/2/dataset_922cf036-5788-4a6f-9b8f-f31ff9847182.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/a/2/d/dataset_a2d616a2-44a6-4e6e-9bf8-4428a49c90f4.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/d/2/4/dataset_d2414b53-85d6-49a4-bd99-9864057cfaca.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/a/0/9/dataset_a09d136c-bf89-4c75-8e3d-80e9b062dec2.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/4/6/5/dataset_465939ac-c2a5-4c3a-aca7-429ec07f206e.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/f/b/a/dataset_fba5905f-83b9-40d7-bdaf-488ffdae70ff.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="34.16818189620972">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/1/8/dataset_0189c6be-081c-4b07-adf1-a7918b4927b9.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/c/1/d/dataset_c1d4bb66-a19e-4fad-b963-73606c4305dd.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/7/2/a/dataset_72a1476c-1692-4542-ab54-6c2b5c5549a1.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/9/0/e/dataset_90e3869f-0953-4046-be54-4f2646115da2.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/8/9/4/dataset_894e0453-9875-4e47-b9ce-aa8364997a78.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/7/a/3/dataset_7a3b266e-8e42-49e0-bb92-f4b576a2e2c2.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #1)" name="0" time="12.092690467834473">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.092690467834473, "tool_id": "bcftools_merge", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #2)" name="1" time="33.70117902755737">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #3)" name="2" time="33.19064211845398">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #4)" name="3" time="10.904244422912598">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 10.904244422912598, "tool_id": "bcftools_merge", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #5)" name="4" time="32.85331106185913">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #6)" name="5" time="32.84787321090698">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_missing2ref (Test #1)" name="0" time="37.1176643371582">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Filled 44 REF alleles
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #1)" name="0" time="49.25717782974243">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "f0b01535da939185",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "ad6aae31a4d275ad",   "src": "hda"  },  "single_or_paired|input_mate2": {   "id": "0e16410f01796e98",   "src": "hda"  },  "single_or_paired|single_or_paired_opts": "paired" }, "job": {  "command_line": "mkdir index_dir \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/0/a/0/dataset_0a0d8958-b0f8-4227-be9b-bdfe0f0ca26c.dat\u0027 index_dir/genome.fa \u0026\u0026 bwameth.py index index_dir/genome.fa \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/b/a/1/dataset_ba14b276-cbf2-4b0a-9ee1-d0caec99164f.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/0/8/9/dataset_0893f064-cddc-4e8b-a32e-bd21c2a8b019.dat\u0027 input_r.fastq.gz \u0026\u0026  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference \u0027index_dir/genome.fa\u0027   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-20T18:37:36.293578",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-9jz8r",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "ad6aae31a4d275ad",  "inputs": {   "referenceSource|reference": {    "id": "9f5119661c2300ae",    "src": "hda",    "uuid": "0a0d8958-b0f8-4227-be9b-bdfe0f0ca26c"   },   "single_or_paired|input_mate1": {    "id": "ad6aae31a4d275ad",    "src": "hda",    "uuid": "ba14b276-cbf2-4b0a-9ee1-d0caec99164f"   },   "single_or_paired|input_mate2": {    "id": "0e16410f01796e98",    "src": "hda",    "uuid": "0893f064-cddc-4e8b-a32e-bd21c2a8b019"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "9744ad91e43631da",    "src": "hda",    "uuid": "400c4b05-07fe-4d37-b565-c6678d63e41e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 33, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 31, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 32, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"paired\"}"  },  "state": "error",  "stderr": "[bwa_index] Pack FASTA... 0.01 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.53 seconds elapse.\n[bwa_index] Update BWT... 0.01 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.11 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 0.762 sec; CPU: 0.674 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.074 sec; CPU: 0.031 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": "[bwa_index] Pack FASTA... 0.01 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.53 seconds elapse.\n[bwa_index] Update BWT... 0.01 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.11 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 0.762 sec; CPU: 0.674 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.074 sec; CPU: 0.031 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "tool_stdout": "",  "update_time": "2024-07-20T18:38:01.015845",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2, exit_code: None, stderr: [bwa_index] Pack FASTA... 0.01 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.53 seconds elapse.\n[bwa_index] Update BWT... 0.01 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.11 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 0.762 sec; CPU: 0.674 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.074 sec; CPU: 0.031 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2, exit_code: None, stderr: [bwa_index] Pack FASTA... 0.01 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.53 seconds elapse.\n[bwa_index] Update BWT... 0.01 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.11 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 0.762 sec; CPU: 0.674 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.074 sec; CPU: 0.031 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n." ], "status": "failure", "test_index": 0, "time_seconds": 49.25717782974243, "tool_id": "bwameth", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.01 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.53 seconds elapse.[bwa_index] Update BWT... 0.01 sec[bwa_index] Pack forward-only FASTA... 0.01 sec[bwa_index] Construct SA from BWT and Occ... 0.11 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 0.762 sec; CPU: 0.674 secconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing: index_dir/genome.fa.bwameth.c2t[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -[main] Real time: 0.074 sec; CPU: 0.031 secrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 8  index_dir/genome.fa.bwameth.c2t -
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #2)" name="1" time="49.10370874404907">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "bfc97be382129821",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "f09540ec6e422e74",   "src": "hdca"  },  "single_or_paired|single_or_paired_opts": "paired_collection" }, "job": {  "command_line": "mkdir index_dir \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/4/d/d/dataset_4dd1daa1-90d0-4d53-b8e4-9776e05589dd.dat\u0027 index_dir/genome.fa \u0026\u0026 bwameth.py index index_dir/genome.fa \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/0/4/f/dataset_04ff62dd-11f8-4906-80ba-2fc9646a5861.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/3/9/9/dataset_39937745-2817-41df-ae99-9e8d5cc9955e.dat\u0027 input_r.fastq.gz \u0026\u0026  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference \u0027index_dir/genome.fa\u0027   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -",  "command_version": "bwa-meth.py 0.2.2",  "copied_from_job_id": null,  "create_time": "2024-07-20T18:38:26.246264",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-px9mz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "948528eae98e1b71",  "inputs": {   "referenceSource|reference": {    "id": "f6be4f58b8367027",    "src": "hda",    "uuid": "4dd1daa1-90d0-4d53-b8e4-9776e05589dd"   },   "single_or_paired|input_mate11": {    "id": "948528eae98e1b71",    "src": "hda",    "uuid": "04ff62dd-11f8-4906-80ba-2fc9646a5861"   },   "single_or_paired|input_mate12": {    "id": "6bea4776e094ba2c",    "src": "hda",    "uuid": "39937745-2817-41df-ae99-9e8d5cc9955e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "25769.0000000",    "title": "Memory Allocated (MB)",    "value": "25769"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1721500719.0000000",    "title": "Job Start Time",    "value": "2024-07-20 18:38:39"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1721500720.0000000",    "title": "Job End Time",    "value": "2024-07-20 18:38:40"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "b3735337ec010759",    "src": "hda",    "uuid": "04b5217b-5145-4358-99a9-fff90a39b56d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 38, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 2, \"input_mate1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"single_or_paired_opts\": \"paired_collection\"}"  },  "state": "ok",  "stderr": "[bwa_index] Pack FASTA... 0.01 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.47 seconds elapse.\n[bwa_index] Update BWT... 0.01 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.11 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 0.704 sec; CPU: 0.618 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.077 sec; CPU: 0.032 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": "[bwa_index] Pack FASTA... 0.01 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.47 seconds elapse.\n[bwa_index] Update BWT... 0.01 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.11 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 0.704 sec; CPU: 0.618 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.077 sec; CPU: 0.032 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "tool_stdout": "",  "update_time": "2024-07-20T18:38:50.235792",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_opp7bvav.sam v. /tmp/history_bam_converted_to_sam_b2tkgyp2.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,9 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:chrREF\tLN:900000\n @RG\tID:input_\tSM:input_\n-@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.0\tCL:\"/usr/users/ga002/soranzon/miniconda3/envs/__bwameth@0.2.0/bin/bwameth.py -t 1 --reference index_dir/genome.fa input_f.fastq input_r.fastq\"\n+@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.2\tCL:\"/usr/local/bin/bwameth.py -t 8 --reference index_dir/genome.fa input_f.fastq.gz input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bwa-meth\tVN:1.10\tCL:samtools view -u -\n+@PG\tID:samtools.1\tPN:samtools\tPP:samtools\tVN:1.10\tCL:samtools sort -@ 8 -T /galaxy/server/database/jobs_directory/000/36/tmp -O bam -o output.bam -\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t163\tchrREF\t26002\t60\t101M\t=\t26025\t124\tCAAAATATATCAATCAAAAAAACATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACA\tBBBFFFFFFFFFFIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIFIFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFBFFF\tNM:i:1\tMD:Z:50C50\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:GA\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t83\tchrREF\t26025\t60\t101M\t=\t26002\t-124\tATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACATAATTTCAAAAAAATCAAACACC\tB0\u0027\u0027B\u003c\u003c\u003c00FB7\u003c000\u0027BBB0B\u003c0FFFFFFFFFFFFFFFFFBFFB\u003c7FFIFFFBBB\u003cFFB\u003c\u003c7FFIFFFFFBBFF\u003cIIIIIFFBIIFFFFFFBFFFFBBB\tNM:i:1\tMD:Z:27C73\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:CT\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:6662:24968\t99\tchrREF\t26991\t60\t101M\t=\t26992\t102\tAGGTGTCGTTTAATTGTTTAGGTTTATGGTATTGTGTTTCGTTTTTTTGGTATTTGTGAGGGTAGAATTGTTTTTGGGTTTTAATTTTTTTAAGTATGGGA\tBBBFFFFFFFFFFIIBFFIFBBFFFFIB\u003cFFFI\u003cFBFFFFBFFIIIII77BFFIIBFBFBBBFBBFFFF\u003cBBFFF\u002707BBBBFFFFFFFFFFB0\u003cBF####\tNM:i:0\tMD:Z:101\tMC:Z:101M\tAS:i:101\tXS:i:19\tRG:Z:input_\tYC:Z:CT\tYD:Z:f\n" ], "status": "failure", "test_index": 1, "time_seconds": 49.10370874404907, "tool_id": "bwameth", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.01 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.47 seconds elapse.[bwa_index] Update BWT... 0.01 sec[bwa_index] Pack forward-only FASTA... 0.01 sec[bwa_index] Construct SA from BWT and Occ... 0.11 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 0.704 sec; CPU: 0.618 secconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing: index_dir/genome.fa.bwameth.c2t[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.024 CPU sec, 0.006 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -[main] Real time: 0.077 sec; CPU: 0.032 secrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 8  index_dir/genome.fa.bwameth.c2t -
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #1)" name="0" time="69.69347262382507">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #2)" name="1" time="31.00054931640625">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #3)" name="2" time="31.31868290901184">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #4)" name="3" time="10.759355545043945">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 10.759355545043945, "tool_id": "datamash_ops", "tool_version": "1.1.0+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #1)" name="0" time="55.36333084106445">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #2)" name="1" time="35.897650480270386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #1)" name="0" time="37.099047899246216">
        
            
            <system-out><![CDATA[
            A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.A reference sequence has not been supplied. Amino acid translation will not be done.
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #1)" name="0" time="39.87891483306885">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "d065c95bdd75a097",   "src": "hda"  },  "reference_source|ref": {   "id": "db676ea881a216cf",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/6/8/dataset_668a81bd-34a2-4d3b-94e5-b48912fc15c7.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/c/f/1/dataset_cf1dafc7-0b61-4d9e-96da-1a12051de9f9.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/8/2/5/dataset_8258aecc-aff7-413c-9837-524d32d8fb0b.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-20T19:21:35.066459",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9c2pb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "64da7fcf11bd4d3d",  "inputs": {   "reads": {    "id": "d065c95bdd75a097",    "src": "hda",    "uuid": "cf1dafc7-0b61-4d9e-96da-1a12051de9f9"   },   "reference_source|ref": {    "id": "db676ea881a216cf",    "src": "hda",    "uuid": "668a81bd-34a2-4d3b-94e5-b48912fc15c7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1721503301.0000000",    "title": "Job End Time",    "value": "2024-07-20 19:21:41"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1721503301.0000000",    "title": "Job Start Time",    "value": "2024-07-20 19:21:41"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "26894b246ed2a751",    "src": "hda",    "uuid": "8258aecc-aff7-413c-9837-524d32d8fb0b"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 264, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-07-20T19:21:53.824373",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp4rujc36galnqual-out1.bam v. /tmp/tmphs1425oualnqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 39.87891483306885, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #2)" name="1" time="19.912665605545044">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 19.912665605545044, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #3)" name="2" time="32.79400849342346">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-A",  "reads": {   "id": "f1af6ac8b2dfc263",   "src": "hda"  },  "reference_source|ref": {   "id": "65a5e556e701d0f0",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/7/f/5/dataset_7f56409d-caab-4d5d-877f-7e24568388e2.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -A  \u0027/galaxy/server/database/objects/9/7/d/dataset_97d22bad-3e04-4645-b5a9-a879aacf3b69.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/5/8/d/dataset_58d99f94-66c4-4e02-a45b-785fa65111b4.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-20T19:22:34.714318",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qm967",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "b2d30ddb0bb41b2b",  "inputs": {   "reads": {    "id": "f1af6ac8b2dfc263",    "src": "hda",    "uuid": "97d22bad-3e04-4645-b5a9-a879aacf3b69"   },   "reference_source|ref": {    "id": "65a5e556e701d0f0",    "src": "hda",    "uuid": "7f56409d-caab-4d5d-877f-7e24568388e2"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1721503356.0000000",    "title": "Job End Time",    "value": "2024-07-20 19:22:36"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1721503356.0000000",    "title": "Job Start Time",    "value": "2024-07-20 19:22:36"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "3806c9b0dec44173",    "src": "hda",    "uuid": "58d99f94-66c4-4e02-a45b-785fa65111b4"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 2, \"alnquals_to_use\": \"-A\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 269, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-07-20T19:22:46.720348",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpt_y1jvtgalnqual-out3.bam v. /tmp/tmpu3wyeohoalnqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 32.79400849342346, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #4)" name="3" time="32.36898589134216">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|extended_baq": false,  "reads": {   "id": "91429deb8c168bca",   "src": "hda"  },  "reference_source|ref": {   "id": "dd4156cfad13022d",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/8/f/9/dataset_8f98b90c-f6e5-4288-9b02-821238077543.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b -e   \u0027/galaxy/server/database/objects/6/5/9/dataset_65959aa0-ba21-4036-b6a1-ee547a1df505.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/3/c/e/dataset_3ce273eb-9b7d-4274-8bea-e23b1e5fd3f5.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-20T19:23:07.182036",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9gqdw",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "a42091af19d0b6d7",  "inputs": {   "reads": {    "id": "91429deb8c168bca",    "src": "hda",    "uuid": "65959aa0-ba21-4036-b6a1-ee547a1df505"   },   "reference_source|ref": {    "id": "dd4156cfad13022d",    "src": "hda",    "uuid": "8f98b90c-f6e5-4288-9b02-821238077543"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1721503388.0000000",    "title": "Job End Time",    "value": "2024-07-20 19:23:08"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1721503388.0000000",    "title": "Job Start Time",    "value": "2024-07-20 19:23:08"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "acdd5510ac579f47",    "src": "hda",    "uuid": "3ce273eb-9b7d-4274-8bea-e23b1e5fd3f5"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 272, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-07-20T19:23:19.090187",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpm2mucrscalnqual-out4.bam v. /tmp/tmp4924y484alnqual-out4.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 3, "time_seconds": 32.36898589134216, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #5)" name="4" time="25.20586633682251">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "reads": {   "id": "69dd3d0dc09dc8ef",   "src": "hda"  },  "reference_source|ref": {   "id": "7fd4ee94b75a7073",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/4/e/0/dataset_4e0dd726-e3b7-474c-846a-ecbb05ec1b4d.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/c/f/0/dataset_cf06473c-759c-44d8-aefc-95a909193d48.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/8/1/1/dataset_811a7728-404b-407e-859f-6603d03362c6.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-20T19:23:39.617250",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-8gk25",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "ef6f287f6471050d",  "inputs": {   "reads": {    "id": "69dd3d0dc09dc8ef",    "src": "hda",    "uuid": "cf06473c-759c-44d8-aefc-95a909193d48"   },   "reference_source|ref": {    "id": "7fd4ee94b75a7073",    "src": "hda",    "uuid": "4e0dd726-e3b7-474c-846a-ecbb05ec1b4d"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "dcc088715cd86c89",    "src": "hda",    "uuid": "811a7728-404b-407e-859f-6603d03362c6"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 275, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-07-20T19:23:45.078919",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 25.20586633682251, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #1)" name="0" time="55.67481231689453">
        
            
            <system-out><![CDATA[
            [18:39:27 - Predict] Processing region(s): ref:0-30[18:39:27 - DataStore] Writing sample registry.[18:39:27 - Predict] Setting tensorflow threads to 1.2024-07-20 18:39:27.279212: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA2024-07-20 18:39:27.282584: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2249995000 Hz2024-07-20 18:39:27.284239: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5be0f65b9270 executing computations on platform Host. Devices:2024-07-20 18:39:27.284275: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>[18:39:27 - Predict] Processing 1 long region(s) with batching.[18:39:27 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_prom_high_g360_model.hdf5.[18:39:27 - ModelLoad] Building model with cudnn optimization: False2024-07-20 18:39:28.003695: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.[18:39:28 - DLoader] Initializing data loader[18:39:28 - DLoader] Submitting ref:0-30.[18:39:28 - PWorker] Running inference for 0.0M draft bases.[18:39:28 - Sampler] Initializing sampler for consensus of region ref:0-30.[18:39:28 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[18:39:28 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:39:28 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[18:39:28 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:39:28 - Sampler] Took 0.00s to make features.[18:39:28 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 10000, quarantining.[18:39:28 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 10000, quarantining.[18:39:28 - DataStore] Writing sample registry.[18:39:28 - PWorker] All done, 2 remainder regions.[18:39:28 - Predict] Processing 2 short region(s).[18:39:28 - ModelLoad] Building model with cudnn optimization: False[18:39:28 - DLoader] Initializing data loader[18:39:28 - DLoader] Submitting ref:0-10.[18:39:28 - PWorker] Running inference for 0.0M draft bases.[18:39:28 - Sampler] Initializing sampler for consensus of region ref:0-10.[18:39:28 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:39:28 - Sampler] Took 0.00s to make features.[18:39:28 - Sampler] Pileup for ref:0.0-9.0 is of width 10[18:39:29 - DataStore] Writing sample registry.[18:39:29 - PWorker] All done, 0 remainder regions.[18:39:29 - DLoader] Initializing data loader[18:39:29 - DLoader] Submitting ref:14-30.[18:39:29 - PWorker] Running inference for 0.0M draft bases.[18:39:29 - Sampler] Initializing sampler for consensus of region ref:14-30.[18:39:29 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:39:29 - Sampler] Took 0.00s to make features.[18:39:29 - Sampler] Pileup for ref:14.0-29.0 is of width 16[18:39:29 - DataStore] Writing sample registry.[18:39:29 - PWorker] All done, 0 remainder regions.[18:39:29 - Predict] Finished processing all regions.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #2)" name="1" time="12.812849998474121">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.812849998474121, "tool_id": "medaka_consensus", "tool_version": "1.0.3+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #1)" name="0" time="15.530873537063599">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 15.530873537063599, "tool_id": "poretools_nucdist", "tool_version": "0.6.1a1.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #2)" name="1" time="57.67683029174805">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #1)" name="0" time="35.59121036529541">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #2)" name="1" time="34.52487015724182">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #11)" name="10" time="35.52423977851868">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #12)" name="11" time="36.006425619125366">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #13)" name="12" time="37.34304618835449">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #14)" name="13" time="38.210655212402344">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #15)" name="14" time="35.620513916015625">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #16)" name="15" time="36.80935549736023">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #17)" name="16" time="36.30257177352905">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #18)" name="17" time="36.92493748664856">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #3)" name="2" time="34.256357192993164">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #4)" name="3" time="32.230884075164795">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #5)" name="4" time="33.617738008499146">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #6)" name="5" time="33.86231851577759">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #7)" name="6" time="33.64856743812561">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #8)" name="7" time="36.274269342422485">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #9)" name="8" time="36.61417031288147">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 1 singletons[M::bam2fq_mainloop] processed 37 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #10)" name="9" time="35.66235852241516">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #1)" name="0" time="12.469783067703247">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.469783067703247, "tool_id": "samtools_slice_bam", "tool_version": "2.0.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #2)" name="1" time="35.09671139717102">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #3)" name="2" time="30.882689237594604">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.4507443904876709">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.4507443904876709, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.45162105560302734">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.45162105560302734, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="65.7121114730835">
        
            
            <system-out><![CDATA[
            [1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minLoading required package: S4VectorsAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: scuttleLoading required package: ggplot2Loading required package: rhdf5Loading required package: BiocIOWarning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="43.027472734451294">
        
            
            <system-out><![CDATA[
            [1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minLoading required package: S4VectorsAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: scuttleLoading required package: ggplot2Loading required package: rhdf5Loading required package: BiocIOWarning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #1)" name="0" time="11.00242280960083">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.00242280960083, "tool_id": "seq_filter_by_id", "tool_version": "0.2.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #2)" name="1" time="45.70849871635437">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some of your identifiers had white space in them, using first word only. e.g.:gi|16127999|ref|NP_414546.1| hypothetical protein b0005 [Escherichia coli str. K-12 substr. MG1655]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #3)" name="2" time="23.10222887992859">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "id_opts|id_list": "gi|16127999|ref|NP_414546.1|",  "id_opts|id_opts_selector": "list",  "input_file": {   "id": "e1df93389f94f8b4",   "src": "hda"  },  "output_choice_cond|output_choice": "pos" }, "job": {  "command_line": "python /cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/141612f8c3e3/seq_filter_by_id/tools/seq_filter_by_id/seq_filter_by_id.py -i \u0027/galaxy/server/database/objects/0/4/b/dataset_04bfeaa8-30c6-4d4d-ae75-97573f8f7904.dat\u0027 -f \u0027fasta\u0027 -p \u0027/galaxy/server/database/objects/f/6/0/dataset_f608c707-745a-44f2-8b96-5d2f93d9415a.dat\u0027 -t \u0027gi|16127999|ref|NP_414546.1|\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-20T18:35:31.869662",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-h6hkx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "e1df93389f94f8b4",  "inputs": {   "input_file": {    "id": "e1df93389f94f8b4",    "src": "hda",    "uuid": "04bfeaa8-30c6-4d4d-ae75-97573f8f7904"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_pos": {    "id": "41c25a57a41f8767",    "src": "hda",    "uuid": "f608c707-745a-44f2-8b96-5d2f93d9415a"   }  },  "params": {   "__input_ext": "\"fasta\"",   "adv_opts": "{\"__current_case__\": 0, \"adv_opts_selector\": \"basic\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "id_opts": "{\"__current_case__\": 1, \"id_list\": \"gi|16127999|ref|NP_414546.1|\", \"id_opts_selector\": \"list\"}",   "output_choice_cond": "{\"__current_case__\": 1, \"output_choice\": \"pos\"}"  },  "state": "error",  "stderr": "",  "stdout": "Have 1 unique identifiers from list\nGenerating matching FASTA file\n1 with and 9 without specified IDs\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.7",  "tool_stderr": "",  "tool_stdout": "Have 1 unique identifiers from list\nGenerating matching FASTA file\n1 with and 9 without specified IDs\n",  "update_time": "2024-07-20T18:35:36.773930",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.7, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.7, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 23.10222887992859, "tool_id": "seq_filter_by_id", "tool_version": "0.2.7"}
                ]]></error>
            
            <system-out><![CDATA[
            Have 1 unique identifiers from listGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #4)" name="3" time="31.4964919090271">
        
            
            <system-out><![CDATA[
            Have 2 unique identifiers from listGenerating matching FASTQ file
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #5)" name="4" time="35.4846248626709">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/c/d/2/dataset_cd22d923-fa81-45cc-b07b-b0ccc6202386.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03WTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04WTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04WTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05WTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05WTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07WTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08WTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09WTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09WTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10WTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10WTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11WTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11WTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12WTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12WTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14WTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14WTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15WTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16WTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16WTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17WTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18WTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18WTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20WTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20WTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21WTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22WTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22WTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23WTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24WTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01WTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01WTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02WTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02WTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03WTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04WTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06WTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07WTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07WTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08WTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09WTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10WTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10WTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11WTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12WTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12WTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13WTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14WTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15WTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16WTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16WTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17WTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17WTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18WTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20WTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20WTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21WTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21WTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22WTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23WTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23WTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01WTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04WTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04WTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05WTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05WTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06WTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06WTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07WTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08WTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08WTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09WTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09WTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10WTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10WTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11WTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11WTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12WTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12WTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13WTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14WTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14WTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15WTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15WTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16WTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17WTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17WTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19WTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20WTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20WTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22WTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22WTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24WTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01WTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01WTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02WTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02WTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03WTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04WTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06WTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07WTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08WTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08WTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09WTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09WTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10WTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11WTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12WTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13WTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14WTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14WTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15WTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15WTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16WTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16WTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17WTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17WTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18WTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19WTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19WTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20WTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20WTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21WTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22WTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23WTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24WTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24WTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01WTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01WTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02WTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03WTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03WTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04WTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04WTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05WTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06WTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06WTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07WTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07WTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08WTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08WTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09WTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10WTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10WTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11WTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12WTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12WTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13WTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13WTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14WTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14WTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15WTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15WTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16WTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17WTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17WTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18WTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18WTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21WTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21WTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22WTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22WTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23WTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23WTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24WTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24WTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01WTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01WTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02WTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03WTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04WTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05WTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06WTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08WTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09WTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09WTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10WTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10WTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11WTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12WTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14WTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14WTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15WTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16WTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17WTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18WTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18WTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19WTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19WTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20WTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20WTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21WTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21WTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22WTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22WTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23WTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24WTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01WTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01WTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #6)" name="5" time="26.3039813041687">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adv_opts|adv_opts_selector": "advanced",  "adv_opts|strip_suffix": false,  "id_opts|columns": "1",  "id_opts|input_tabular": {   "id": "aa6662a82f15fbf3",   "src": "hda"  },  "input_file": {   "id": "acfc67f56e1b8165",   "src": "hda"  },  "output_choice_cond|output_choice": "both" }, "job": {  "command_line": "python /cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/141612f8c3e3/seq_filter_by_id/tools/seq_filter_by_id/seq_filter_by_id.py -i \u0027/galaxy/server/database/objects/6/9/5/dataset_69592ecd-3b5c-40b5-bdb3-bf4c0c8b1a45.dat\u0027 -f \u0027fastq\u0027 -p \u0027/galaxy/server/database/objects/7/1/7/dataset_7177b783-0411-4788-b8dd-c7c42b3d1073.dat\u0027 -n \u0027/galaxy/server/database/objects/8/a/0/dataset_8a0fb306-5ff6-4ebc-bca6-d15330a718dd.dat\u0027 -l UNION \u0027/galaxy/server/database/objects/2/2/6/dataset_2261472a-b2f7-4c65-b60b-ec65e0434e1d.dat\u0027 \u00271\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-20T18:37:04.872969",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-s9vsr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "f09540ec6e422e74",  "id": "acfc67f56e1b8165",  "inputs": {   "id_opts|input_tabular": {    "id": "aa6662a82f15fbf3",    "src": "hda",    "uuid": "2261472a-b2f7-4c65-b60b-ec65e0434e1d"   },   "input_file": {    "id": "acfc67f56e1b8165",    "src": "hda",    "uuid": "69592ecd-3b5c-40b5-bdb3-bf4c0c8b1a45"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_neg": {    "id": "c47e3849d6b6a64f",    "src": "hda",    "uuid": "8a0fb306-5ff6-4ebc-bca6-d15330a718dd"   },   "output_pos": {    "id": "65fb99f6866d2689",    "src": "hda",    "uuid": "7177b783-0411-4788-b8dd-c7c42b3d1073"   }  },  "params": {   "__input_ext": "\"fastq\"",   "adv_opts": "{\"__current_case__\": 1, \"adv_opts_selector\": \"advanced\", \"strip_suffix\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "id_opts": "{\"__current_case__\": 0, \"columns\": [\"1\"], \"id_opts_selector\": \"tabular\", \"input_tabular\": {\"values\": [{\"id\": 27, \"src\": \"hda\"}]}}",   "output_choice_cond": "{\"__current_case__\": 0, \"output_choice\": \"both\"}"  },  "state": "error",  "stderr": "",  "stdout": "Using 128 IDs from column 1 in tabular file\nGenerating two FASTQ files\n/galaxy/server/database/objects/6/9/5/dataset_69592ecd-3b5c-40b5-bdb3-bf4c0c8b1a45.dat\nWTSI_1055_1a03.p1kpIBF bases 1 to 312 --\u003e WTSI_1055_1a03.p1kpIBF\nWTSI_1055_1a04.p1kpIBF bases 1 to 186 --\u003e WTSI_1055_1a04.p1kpIBF\nWTSI_1055_1a04.q1kpIBR bases 1 to 359 --\u003e WTSI_1055_1a04.q1kpIBR\nWTSI_1055_1a05.p1kpIBF bases 1 to 642 --\u003e WTSI_1055_1a05.p1kpIBF\nWTSI_1055_1a05.q1kpIBR bases 1 to 219 --\u003e WTSI_1055_1a05.q1kpIBR\nWTSI_1055_1a07.p1kpIBF bases 1 to 574 --\u003e WTSI_1055_1a07.p1kpIBF\nWTSI_1055_1a08.p1kpIBF bases 1 to 397 --\u003e WTSI_1055_1a08.p1kpIBF\nWTSI_1055_1a09.p1kpIBF bases 1 to 497 --\u003e WTSI_1055_1a09.p1kpIBF\nWTSI_1055_1a09.q1kpIBR bases 1 to 558 --\u003e WTSI_1055_1a09.q1kpIBR\nWTSI_1055_1a10.p1kpIBF bases 1 to 512 --\u003e WTSI_1055_1a10.p1kpIBF\nWTSI_1055_1a10.q1kpIBR bases 1 to 431 --\u003e WTSI_1055_1a10.q1kpIBR\nWTSI_1055_1a11.p1kpIBF bases 1 to 307 --\u003e WTSI_1055_1a11.p1kpIBF\nWTSI_1055_1a11.q1kpIBR bases 1 to 301 --\u003e WTSI_1055_1a11.q1kpIBR\nWTSI_1055_1a12.p1kpIBF bases 1 to 414 --\u003e WTSI_1055_1a12.p1kpIBF\nWTSI_1055_1a12.q1kpIBR bases 1 to 505 --\u003e WTSI_1055_1a12.q1kpIBR\nWTSI_1055_1a14.p1kpIBF bases 1 to 661 --\u003e WTSI_1055_1a14.p1kpIBF\nWTSI_1055_1a14.q1kpIBR bases 1 to 497 --\u003e WTSI_1055_1a14.q1kpIBR\nWTSI_1055_1a15.p1kpIBF bases 1 to 312 --\u003e WTSI_1055_1a15.p1kpIBF\nWTSI_1055_1a16.p1kpIBF bases 1 to 314 --\u003e WTSI_1055_1a16.p1kpIBF\nWTSI_1055_1a16.q1kpIBR bases 1 to 524 --\u003e WTSI_1055_1a16.q1kpIBR\nWTSI_1055_1a17.p1kpIBF bases 1 to 201 --\u003e WTSI_1055_1a17.p1kpIBF\nWTSI_1055_1a18.p1kpIBF bases 1 to 171 --\u003e WTSI_1055_1a18.p1kpIBF\nWTSI_1055_1a18.q1kpIBR bases 1 to 413 --\u003e WTSI_1055_1a18.q1kpIBR\nWTSI_1055_1a20.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1a20.p1kpIBF\nWTSI_1055_1a20.q1kpIBR bases 1 to 439 --\u003e WTSI_1055_1a20.q1kpIBR\nWTSI_1055_1a21.q1kpIBR bases 1 to 114 --\u003e WTSI_1055_1a21.q1kpIBR\nWTSI_1055_1a22.p1kpIBF bases 1 to 374 --\u003e WTSI_1055_1a22.p1kpIBF\nWTSI_1055_1a22.q1kpIBR bases 1 to 394 --\u003e WTSI_1055_1a22.q1kpIBR\nWTSI_1055_1a23.p1kpIBF bases 1 to 400 --\u003e WTSI_1055_1a23.p1kpIBF\nWTSI_1055_1a24.q1kpIBR bases 1 to 272 --\u003e WTSI_1055_1a24.q1kpIBR\nWTSI_1055_1b01.p1kpIBF bases 1 to 392 --\u003e WTSI_1055_1b01.p1kpIBF\nWTSI_1055_1b01.q1kpIBR bases 1 to 465 --\u003e WTSI_1055_1b01.q1kpIBR\nWTSI_1055_1b02.p1kpIBF bases 1 to 360 --\u003e WTSI_1055_1b02.p1kpIBF\nWTSI_1055_1b02.q1kpIBR bases 1 to 428 --\u003e WTSI_1055_1b02.q1kpIBR\nWTSI_1055_1b03.q1kpIBR bases 1 to 253 --\u003e WTSI_1055_1b03.q1kpIBR\nWTSI_1055_1b04.p1kpIBF bases 1 to 127 --\u003e WTSI_1055_1b04.p1kpIBF\nWTSI_1055_1b06.p1kpIBF bases 1 to 297 --\u003e WTSI_1055_1b06.p1kpIBF\nWTSI_1055_1b07.p1kpIBF bases 1 to 280 --\u003e WTSI_1055_1b07.p1kpIBF\nWTSI_1055_1b07.q1kpIBR bases 1 to 357 --\u003e WTSI_1055_1b07.q1kpIBR\nWTSI_1055_1b08.p1kpIBF bases 1 to 265 --\u003e WTSI_1055_1b08.p1kpIBF\nWTSI_1055_1b09.p1kpIBF bases 1 to 298 --\u003e WTSI_1055_1b09.p1kpIBF\nWTSI_1055_1b10.p1kpIBF bases 1 to 324 --\u003e WTSI_1055_1b10.p1kpIBF\nWTSI_1055_1b10.q1kpIBR bases 1 to 339 --\u003e WTSI_1055_1b10.q1kpIBR\nWTSI_1055_1b11.q1kpIBR bases 1 to 123 --\u003e WTSI_1055_1b11.q1kpIBR\nWTSI_1055_1b12.p1kpIBF bases 1 to 139 --\u003e WTSI_1055_1b12.p1kpIBF\nWTSI_1055_1b12.q1kpIBR bases 1 to 375 --\u003e WTSI_1055_1b12.q1kpIBR\nWTSI_1055_1b13.p1kpIBF bases 1 to 358 --\u003e WTSI_1055_1b13.p1kpIBF\nWTSI_1055_1b14.p1kpIBF bases 1 to 225 --\u003e WTSI_1055_1b14.p1kpIBF\nWTSI_1055_1b15.q1kpIBR bases 1 to 312 --\u003e WTSI_1055_1b15.q1kpIBR\nWTSI_1055_1b16.p1kpIBF bases 1 to 217 --\u003e WTSI_1055_1b16.p1kpIBF\nWTSI_1055_1b16.q1kpIBR bases 1 to 260 --\u003e WTSI_1055_1b16.q1kpIBR\nWTSI_1055_1b17.p1kpIBF bases 1 to 309 --\u003e WTSI_1055_1b17.p1kpIBF\nWTSI_1055_1b17.q1kpIBR bases 1 to 330 --\u003e WTSI_1055_1b17.q1kpIBR\nWTSI_1055_1b18.p1kpIBF bases 1 to 264 --\u003e WTSI_1055_1b18.p1kpIBF\nWTSI_1055_1b20.p1kpIBF bases 1 to 259 --\u003e WTSI_1055_1b20.p1kpIBF\nWTSI_1055_1b20.q1kpIBR bases 1 to 321 --\u003e WTSI_1055_1b20.q1kpIBR\nWTSI_1055_1b21.p1kpIBF bases 1 to 378 --\u003e WTSI_1055_1b21.p1kpIBF\nWTSI_1055_1b21.q1kpIBR bases 1 to 376 --\u003e WTSI_1055_1b21.q1kpIBR\nWTSI_1055_1b22.p1kpIBF bases 1 to 135 --\u003e WTSI_1055_1b22.p1kpIBF\nWTSI_1055_1b23.p1kpIBF bases 1 to 300 --\u003e WTSI_1055_1b23.p1kpIBF\nWTSI_1055_1b23.q1kpIBR bases 1 to 536 --\u003e WTSI_1055_1b23.q1kpIBR\nWTSI_1055_1c01.q1kpIBR bases 1 to 620 --\u003e WTSI_1055_1c01.q1kpIBR\nWTSI_1055_1c04.p1kpIBF bases 1 to 321 --\u003e WTSI_1055_1c04.p1kpIBF\nWTSI_1055_1c04.q1kpIBR bases 1 to 491 --\u003e WTSI_1055_1c04.q1kpIBR\nWTSI_1055_1c05.p1kpIBF bases 1 to 337 --\u003e WTSI_1055_1c05.p1kpIBF\nWTSI_1055_1c05.q1kpIBR bases 1 to 442 --\u003e WTSI_1055_1c05.q1kpIBR\nWTSI_1055_1c06.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1c06.p1kpIBF\nWTSI_1055_1c06.q1kpIBR bases 1 to 485 --\u003e WTSI_1055_1c06.q1kpIBR\nWTSI_1055_1c07.p1kpIBF bases 1 to 273 --\u003e WTSI_1055_1c07.p1kpIBF\nWTSI_1055_1c08.p1kpIBF bases 1 to 414 --\u003e WTSI_1055_1c08.p1kpIBF\nWTSI_1055_1c08.q1kpIBR bases 1 to 362 --\u003e WTSI_1055_1c08.q1kpIBR\nWTSI_1055_1c09.p1kpIBF bases 1 to 452 --\u003e WTSI_1055_1c09.p1kpIBF\nWTSI_1055_1c09.q1kpIBR bases 1 to 543 --\u003e WTSI_1055_1c09.q1kpIBR\nWTSI_1055_1c10.p1kpIBF bases 1 to 428 --\u003e WTSI_1055_1c10.p1kpIBF\nWTSI_1055_1c10.q1kpIBR bases 1 to 452 --\u003e WTSI_1055_1c10.q1kpIBR\nWTSI_1055_1c11.p1kpIBF bases 1 to 494 --\u003e WTSI_1055_1c11.p1kpIBF\nWTSI_1055_1c11.q1kpIBR bases 1 to 379 --\u003e WTSI_1055_1c11.q1kpIBR\nWTSI_1055_1c12.p1kpIBF bases 1 to 280 --\u003e WTSI_1055_1c12.p1kpIBF\nWTSI_1055_1c12.q1kpIBR bases 1 to 444 --\u003e WTSI_1055_1c12.q1kpIBR\nWTSI_1055_1c13.p1kpIBF bases 1 to 308 --\u003e WTSI_1055_1c13.p1kpIBF\nWTSI_1055_1c14.p1kpIBF bases 1 to 400 --\u003e WTSI_1055_1c14.p1kpIBF\nWTSI_1055_1c14.q1kpIBR bases 1 to 323 --\u003e WTSI_1055_1c14.q1kpIBR\nWTSI_1055_1c15.p1kpIBF bases 1 to 460 --\u003e WTSI_1055_1c15.p1kpIBF\nWTSI_1055_1c15.q1kpIBR bases 1 to 643 --\u003e WTSI_1055_1c15.q1kpIBR\nWTSI_1055_1c16.p1kpIBF bases 1 to 301 --\u003e WTSI_1055_1c16.p1kpIBF\nWTSI_1055_1c17.p1kpIBF bases 1 to 436 --\u003e WTSI_1055_1c17.p1kpIBF\nWTSI_1055_1c17.q1kpIBR bases 1 to 485 --\u003e WTSI_1055_1c17.q1kpIBR\nWTSI_1055_1c19.p1kpIBF bases 1 to 348 --\u003e WTSI_1055_1c19.p1kpIBF\nWTSI_1055_1c20.p1kpIBF bases 1 to 375 --\u003e WTSI_1055_1c20.p1kpIBF\nWTSI_1055_1c20.q1kpIBR bases 1 to 298 --\u003e WTSI_1055_1c20.q1kpIBR\nWTSI_1055_1c22.p1kpIBF bases 1 to 141 --\u003e WTSI_1055_1c22.p1kpIBF\nWTSI_1055_1c22.q1kpIBR bases 1 to 360 --\u003e WTSI_1055_1c22.q1kpIBR\nWTSI_1055_1c24.p1kpIBF bases 1 to 346 --\u003e WTSI_1055_1c24.p1kpIBF\nWTSI_1055_1d01.p1kpIBF bases 1 to 391 --\u003e WTSI_1055_1d01.p1kpIBF\nWTSI_1055_1d01.q1kpIBR bases 86 to 449 --\u003e WTSI_1055_1d01.q1kpIBR\nWTSI_1055_1d02.p1kpIBF bases 1 to 335 --\u003e WTSI_1055_1d02.p1kpIBF\nWTSI_1055_1d02.q1kpIBR bases 1 to 510 --\u003e WTSI_1055_1d02.q1kpIBR\nWTSI_1055_1d03.p1kpIBF bases 1 to 191 --\u003e WTSI_1055_1d03.p1kpIBF\nWTSI_1055_1d04.p1kpIBF bases 1 to 233 --\u003e WTSI_1055_1d04.p1kpIBF\nWTSI_1055_1d06.p1kpIBF bases 1 to 233 --\u003e WTSI_1055_1d06.p1kpIBF\nWTSI_1055_1d07.p1kpIBF bases 1 to 350 --\u003e WTSI_1055_1d07.p1kpIBF\nWTSI_1055_1d08.p1kpIBF bases 1 to 391 --\u003e WTSI_1055_1d08.p1kpIBF\nWTSI_1055_1d08.q1kpIBR bases 1 to 225 --\u003e WTSI_1055_1d08.q1kpIBR\nWTSI_1055_1d09.p1kpIBF bases 1 to 415 --\u003e WTSI_1055_1d09.p1kpIBF\nWTSI_1055_1d09.q1kpIBR bases 1 to 332 --\u003e WTSI_1055_1d09.q1kpIBR\nWTSI_1055_1d10.p1kpIBF bases 1 to 295 --\u003e WTSI_1055_1d10.p1kpIBF\nWTSI_1055_1d11.p1kpIBF bases 1 to 335 --\u003e WTSI_1055_1d11.p1kpIBF\nWTSI_1055_1d12.p1kpIBF bases 1 to 225 --\u003e WTSI_1055_1d12.p1kpIBF\nWTSI_1055_1d13.p1kpIBF bases 1 to 286 --\u003e WTSI_1055_1d13.p1kpIBF\nWTSI_1055_1d14.p1kpIBF bases 1 to 318 --\u003e WTSI_1055_1d14.p1kpIBF\nWTSI_1055_1d14.q1kpIBR bases 1 to 291 --\u003e WTSI_1055_1d14.q1kpIBR\nWTSI_1055_1d15.p1kpIBF bases 1 to 338 --\u003e WTSI_1055_1d15.p1kpIBF\nWTSI_1055_1d15.q1kpIBR bases 1 to 347 --\u003e WTSI_1055_1d15.q1kpIBR\nWTSI_1055_1d16.p1kpIBF bases 1 to 459 --\u003e WTSI_1055_1d16.p1kpIBF\nWTSI_1055_1d16.q1kpIBR bases 1 to 344 --\u003e WTSI_1055_1d16.q1kpIBR\nWTSI_1055_1d17.p1kpIBF bases 1 to 317 --\u003e WTSI_1055_1d17.p1kpIBF\nWTSI_1055_1d17.q1kpIBR bases 1 to 371 --\u003e WTSI_1055_1d17.q1kpIBR\nWTSI_1055_1d18.p1kpIBF bases 1 to 363 --\u003e WTSI_1055_1d18.p1kpIBF\nWTSI_1055_1d19.p1kpIBF bases 1 to 298 --\u003e WTSI_1055_1d19.p1kpIBF\nWTSI_1055_1d19.q1kpIBR bases 1 to 369 --\u003e WTSI_1055_1d19.q1kpIBR\nWTSI_1055_1d20.p1kpIBF bases 1 to 370 --\u003e WTSI_1055_1d20.p1kpIBF\nWTSI_1055_1d20.q1kpIBR bases 1 to 403 --\u003e WTSI_1055_1d20.q1kpIBR\nWTSI_1055_1d21.p1kpIBF bases 1 to 342 --\u003e WTSI_1055_1d21.p1kpIBF\nWTSI_1055_1d22.p1kpIBF bases 1 to 360 --\u003e WTSI_1055_1d22.p1kpIBF\nWTSI_1055_1d23.p1kpIBF bases 1 to 278 --\u003e WTSI_1055_1d23.p1kpIBF\nWTSI_1055_1d24.p1kpIBF bases 1 to 219 --\u003e WTSI_1055_1d24.p1kpIBF\nWTSI_1055_1d24.q1kpIBR bases 1 to 503 --\u003e WTSI_1055_1d24.q1kpIBR\nWTSI_1055_1e01.p1kpIBF bases 1 to 258 --\u003e WTSI_1055_1e01.p1kpIBF\nWTSI_1055_1e01.q1kpIBR bases 1 to 564 --\u003e WTSI_1055_1e01.q1kpIBR\nWTSI_1055_1e02.p1kpIBF bases 1 to 385 --\u003e WTSI_1055_1e02.p1kpIBF\nWTSI_1055_1e03.p1kpIBF bases 1 to 516 --\u003e WTSI_1055_1e03.p1kpIBF\nWTSI_1055_1e03.q1kpIBR bases 1 to 472 --\u003e WTSI_1055_1e03.q1kpIBR\nWTSI_1055_1e04.p1kpIBF bases 1 to 417 --\u003e WTSI_1055_1e04.p1kpIBF\nWTSI_1055_1e04.q1kpIBR bases 1 to 462 --\u003e WTSI_1055_1e04.q1kpIBR\nWTSI_1055_1e05.p1kpIBF bases 1 to 312 --\u003e WTSI_1055_1e05.p1kpIBF\nWTSI_1055_1e06.p1kpIBF bases 1 to 368 --\u003e WTSI_1055_1e06.p1kpIBF\nWTSI_1055_1e06.q1kpIBR bases 1 to 374 --\u003e WTSI_1055_1e06.q1kpIBR\nWTSI_1055_1e07.p1kpIBF bases 1 to 248 --\u003e WTSI_1055_1e07.p1kpIBF\nWTSI_1055_1e07.q1kpIBR bases 1 to 358 --\u003e WTSI_1055_1e07.q1kpIBR\nWTSI_1055_1e08.p1kpIBF bases 1 to 395 --\u003e WTSI_1055_1e08.p1kpIBF\nWTSI_1055_1e08.q1kpIBR bases 1 to 467 --\u003e WTSI_1055_1e08.q1kpIBR\nWTSI_1055_1e09.p1kpIBF bases 1 to 612 --\u003e WTSI_1055_1e09.p1kpIBF\nWTSI_1055_1e10.p1kpIBF bases 1 to 396 --\u003e WTSI_1055_1e10.p1kpIBF\nWTSI_1055_1e10.q1kpIBR bases 1 to 492 --\u003e WTSI_1055_1e10.q1kpIBR\nWTSI_1055_1e11.p1kpIBF bases 1 to 295 --\u003e WTSI_1055_1e11.p1kpIBF\nWTSI_1055_1e12.p1kpIBF bases 1 to 356 --\u003e WTSI_1055_1e12.p1kpIBF\nWTSI_1055_1e12.q1kpIBR bases 1 to 423 --\u003e WTSI_1055_1e12.q1kpIBR\nWTSI_1055_1e13.p1kpIBF bases 1 to 330 --\u003e WTSI_1055_1e13.p1kpIBF\nWTSI_1055_1e13.q1kpIBR bases 1 to 279 --\u003e WTSI_1055_1e13.q1kpIBR\nWTSI_1055_1e14.p1kpIBF bases 1 to 357 --\u003e WTSI_1055_1e14.p1kpIBF\nWTSI_1055_1e14.q1kpIBR bases 1 to 418 --\u003e WTSI_1055_1e14.q1kpIBR\nWTSI_1055_1e15.p1kpIBF bases 1 to 353 --\u003e WTSI_1055_1e15.p1kpIBF\nWTSI_1055_1e15.q1kpIBR bases 1 to 441 --\u003e WTSI_1055_1e15.q1kpIBR\nWTSI_1055_1e16.p1kpIBF bases 1 to 243 --\u003e WTSI_1055_1e16.p1kpIBF\nWTSI_1055_1e17.p1kpIBF bases 1 to 285 --\u003e WTSI_1055_1e17.p1kpIBF\nWTSI_1055_1e17.q1kpIBR bases 1 to 303 --\u003e WTSI_1055_1e17.q1kpIBR\nWTSI_1055_1e18.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1e18.p1kpIBF\nWTSI_1055_1e18.q1kpIBR bases 1 to 383 --\u003e WTSI_1055_1e18.q1kpIBR\nWTSI_1055_1e21.p1kpIBF bases 1 to 306 --\u003e WTSI_1055_1e21.p1kpIBF\nWTSI_1055_1e21.q1kpIBR bases 1 to 280 --\u003e WTSI_1055_1e21.q1kpIBR\nWTSI_1055_1e22.p1kpIBF bases 1 to 394 --\u003e WTSI_1055_1e22.p1kpIBF\nWTSI_1055_1e22.q1kpIBR bases 1 to 359 --\u003e WTSI_1055_1e22.q1kpIBR\nWTSI_1055_1e23.p1kpIBF bases 1 to 167 --\u003e WTSI_1055_1e23.p1kpIBF\nWTSI_1055_1e23.q1kpIBR bases 1 to 301 --\u003e WTSI_1055_1e23.q1kpIBR\nWTSI_1055_1e24.p1kpIBF bases 1 to 328 --\u003e WTSI_1055_1e24.p1kpIBF\nWTSI_1055_1e24.q1kpIBR bases 1 to 426 --\u003e WTSI_1055_1e24.q1kpIBR\nWTSI_1055_1f01.p1kpIBF bases 1 to 339 --\u003e WTSI_1055_1f01.p1kpIBF\nWTSI_1055_1f01.q1kpIBR bases 1 to 431 --\u003e WTSI_1055_1f01.q1kpIBR\nWTSI_1055_1f02.p1kpIBF bases 1 to 141 --\u003e WTSI_1055_1f02.p1kpIBF\nWTSI_1055_1f03.p1kpIBF bases 1 to 289 --\u003e WTSI_1055_1f03.p1kpIBF\nWTSI_1055_1f04.q1kpIBR bases 1 to 201 --\u003e WTSI_1055_1f04.q1kpIBR\nWTSI_1055_1f05.p1kpIBF bases 1 to 284 --\u003e WTSI_1055_1f05.p1kpIBF\nWTSI_1055_1f06.p1kpIBF bases 1 to 424 --\u003e WTSI_1055_1f06.p1kpIBF\nWTSI_1055_1f08.p1kpIBF bases 1 to 414 --\u003e WTSI_1055_1f08.p1kpIBF\nWTSI_1055_1f09.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1f09.p1kpIBF\nWTSI_1055_1f09.q1kpIBR bases 1 to 355 --\u003e WTSI_1055_1f09.q1kpIBR\nWTSI_1055_1f10.p1kpIBF bases 1 to 383 --\u003e WTSI_1055_1f10.p1kpIBF\nWTSI_1055_1f10.q1kpIBR bases 1 to 501 --\u003e WTSI_1055_1f10.q1kpIBR\nWTSI_1055_1f11.p1kpIBF bases 1 to 283 --\u003e WTSI_1055_1f11.p1kpIBF\nWTSI_1055_1f12.p1kpIBF bases 1 to 364 --\u003e WTSI_1055_1f12.p1kpIBF\nWTSI_1055_1f14.p1kpIBF bases 1 to 331 --\u003e WTSI_1055_1f14.p1kpIBF\nWTSI_1055_1f14.q1kpIBR bases 1 to 490 --\u003e WTSI_1055_1f14.q1kpIBR\nWTSI_1055_1f15.p1kpIBF bases 1 to 261 --\u003e WTSI_1055_1f15.p1kpIBF\nWTSI_1055_1f16.p1kpIBF bases 1 to 363 --\u003e WTSI_1055_1f16.p1kpIBF\nWTSI_1055_1f17.p1kpIBF bases 1 to 436 --\u003e WTSI_1055_1f17.p1kpIBF\nWTSI_1055_1f18.p1kpIBF bases 1 to 532 --\u003e WTSI_1055_1f18.p1kpIBF\nWTSI_1055_1f18.q1kpIBR bases 1 to 350 --\u003e WTSI_1055_1f18.q1kpIBR\nWTSI_1055_1f19.p1kpIBF bases 1 to 363 --\u003e WTSI_1055_1f19.p1kpIBF\nWTSI_1055_1f19.q1kpIBR bases 1 to 468 --\u003e WTSI_1055_1f19.q1kpIBR\nWTSI_1055_1f20.p1kpIBF bases 1 to 491 --\u003e WTSI_1055_1f20.p1kpIBF\nWTSI_1055_1f20.q1kpIBR bases 1 to 451 --\u003e WTSI_1055_1f20.q1kpIBR\nWTSI_1055_1f21.p1kpIBF bases 1 to 456 --\u003e WTSI_1055_1f21.p1kpIBF\nWTSI_1055_1f21.q1kpIBR bases 1 to 336 --\u003e WTSI_1055_1f21.q1kpIBR\nWTSI_1055_1f22.p1kpIBF bases 1 to 370 --\u003e WTSI_1055_1f22.p1kpIBF\nWTSI_1055_1f22.q1kpIBR bases 1 to 496 --\u003e WTSI_1055_1f22.q1kpIBR\nWTSI_1055_1f23.p1kpIBF bases 1 to 383 --\u003e WTSI_1055_1f23.p1kpIBF\nWTSI_1055_1f24.q1kpIBR bases 86 to 670 --\u003e WTSI_1055_1f24.q1kpIBR\nWTSI_1055_1g01.p1kpIBF bases 1 to 584 --\u003e WTSI_1055_1g01.p1kpIBF\nWTSI_1055_1g01.q1kpIBR bases 1 to 350 --\u003e WTSI_1055_1g01.q1kpIBR\nWTSI_1055_1g02.p1kpIBF bases 1 to 523 --\u003e WTSI_1055_1g02.p1kpIBF\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.7",  "tool_stderr": "",  "tool_stdout": "Using 128 IDs from column 1 in tabular file\nGenerating two FASTQ files\n/galaxy/server/database/objects/6/9/5/dataset_69592ecd-3b5c-40b5-bdb3-bf4c0c8b1a45.dat\nWTSI_1055_1a03.p1kpIBF bases 1 to 312 --\u003e WTSI_1055_1a03.p1kpIBF\nWTSI_1055_1a04.p1kpIBF bases 1 to 186 --\u003e WTSI_1055_1a04.p1kpIBF\nWTSI_1055_1a04.q1kpIBR bases 1 to 359 --\u003e WTSI_1055_1a04.q1kpIBR\nWTSI_1055_1a05.p1kpIBF bases 1 to 642 --\u003e WTSI_1055_1a05.p1kpIBF\nWTSI_1055_1a05.q1kpIBR bases 1 to 219 --\u003e WTSI_1055_1a05.q1kpIBR\nWTSI_1055_1a07.p1kpIBF bases 1 to 574 --\u003e WTSI_1055_1a07.p1kpIBF\nWTSI_1055_1a08.p1kpIBF bases 1 to 397 --\u003e WTSI_1055_1a08.p1kpIBF\nWTSI_1055_1a09.p1kpIBF bases 1 to 497 --\u003e WTSI_1055_1a09.p1kpIBF\nWTSI_1055_1a09.q1kpIBR bases 1 to 558 --\u003e WTSI_1055_1a09.q1kpIBR\nWTSI_1055_1a10.p1kpIBF bases 1 to 512 --\u003e WTSI_1055_1a10.p1kpIBF\nWTSI_1055_1a10.q1kpIBR bases 1 to 431 --\u003e WTSI_1055_1a10.q1kpIBR\nWTSI_1055_1a11.p1kpIBF bases 1 to 307 --\u003e WTSI_1055_1a11.p1kpIBF\nWTSI_1055_1a11.q1kpIBR bases 1 to 301 --\u003e WTSI_1055_1a11.q1kpIBR\nWTSI_1055_1a12.p1kpIBF bases 1 to 414 --\u003e WTSI_1055_1a12.p1kpIBF\nWTSI_1055_1a12.q1kpIBR bases 1 to 505 --\u003e WTSI_1055_1a12.q1kpIBR\nWTSI_1055_1a14.p1kpIBF bases 1 to 661 --\u003e WTSI_1055_1a14.p1kpIBF\nWTSI_1055_1a14.q1kpIBR bases 1 to 497 --\u003e WTSI_1055_1a14.q1kpIBR\nWTSI_1055_1a15.p1kpIBF bases 1 to 312 --\u003e WTSI_1055_1a15.p1kpIBF\nWTSI_1055_1a16.p1kpIBF bases 1 to 314 --\u003e WTSI_1055_1a16.p1kpIBF\nWTSI_1055_1a16.q1kpIBR bases 1 to 524 --\u003e WTSI_1055_1a16.q1kpIBR\nWTSI_1055_1a17.p1kpIBF bases 1 to 201 --\u003e WTSI_1055_1a17.p1kpIBF\nWTSI_1055_1a18.p1kpIBF bases 1 to 171 --\u003e WTSI_1055_1a18.p1kpIBF\nWTSI_1055_1a18.q1kpIBR bases 1 to 413 --\u003e WTSI_1055_1a18.q1kpIBR\nWTSI_1055_1a20.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1a20.p1kpIBF\nWTSI_1055_1a20.q1kpIBR bases 1 to 439 --\u003e WTSI_1055_1a20.q1kpIBR\nWTSI_1055_1a21.q1kpIBR bases 1 to 114 --\u003e WTSI_1055_1a21.q1kpIBR\nWTSI_1055_1a22.p1kpIBF bases 1 to 374 --\u003e WTSI_1055_1a22.p1kpIBF\nWTSI_1055_1a22.q1kpIBR bases 1 to 394 --\u003e WTSI_1055_1a22.q1kpIBR\nWTSI_1055_1a23.p1kpIBF bases 1 to 400 --\u003e WTSI_1055_1a23.p1kpIBF\nWTSI_1055_1a24.q1kpIBR bases 1 to 272 --\u003e WTSI_1055_1a24.q1kpIBR\nWTSI_1055_1b01.p1kpIBF bases 1 to 392 --\u003e WTSI_1055_1b01.p1kpIBF\nWTSI_1055_1b01.q1kpIBR bases 1 to 465 --\u003e WTSI_1055_1b01.q1kpIBR\nWTSI_1055_1b02.p1kpIBF bases 1 to 360 --\u003e WTSI_1055_1b02.p1kpIBF\nWTSI_1055_1b02.q1kpIBR bases 1 to 428 --\u003e WTSI_1055_1b02.q1kpIBR\nWTSI_1055_1b03.q1kpIBR bases 1 to 253 --\u003e WTSI_1055_1b03.q1kpIBR\nWTSI_1055_1b04.p1kpIBF bases 1 to 127 --\u003e WTSI_1055_1b04.p1kpIBF\nWTSI_1055_1b06.p1kpIBF bases 1 to 297 --\u003e WTSI_1055_1b06.p1kpIBF\nWTSI_1055_1b07.p1kpIBF bases 1 to 280 --\u003e WTSI_1055_1b07.p1kpIBF\nWTSI_1055_1b07.q1kpIBR bases 1 to 357 --\u003e WTSI_1055_1b07.q1kpIBR\nWTSI_1055_1b08.p1kpIBF bases 1 to 265 --\u003e WTSI_1055_1b08.p1kpIBF\nWTSI_1055_1b09.p1kpIBF bases 1 to 298 --\u003e WTSI_1055_1b09.p1kpIBF\nWTSI_1055_1b10.p1kpIBF bases 1 to 324 --\u003e WTSI_1055_1b10.p1kpIBF\nWTSI_1055_1b10.q1kpIBR bases 1 to 339 --\u003e WTSI_1055_1b10.q1kpIBR\nWTSI_1055_1b11.q1kpIBR bases 1 to 123 --\u003e WTSI_1055_1b11.q1kpIBR\nWTSI_1055_1b12.p1kpIBF bases 1 to 139 --\u003e WTSI_1055_1b12.p1kpIBF\nWTSI_1055_1b12.q1kpIBR bases 1 to 375 --\u003e WTSI_1055_1b12.q1kpIBR\nWTSI_1055_1b13.p1kpIBF bases 1 to 358 --\u003e WTSI_1055_1b13.p1kpIBF\nWTSI_1055_1b14.p1kpIBF bases 1 to 225 --\u003e WTSI_1055_1b14.p1kpIBF\nWTSI_1055_1b15.q1kpIBR bases 1 to 312 --\u003e WTSI_1055_1b15.q1kpIBR\nWTSI_1055_1b16.p1kpIBF bases 1 to 217 --\u003e WTSI_1055_1b16.p1kpIBF\nWTSI_1055_1b16.q1kpIBR bases 1 to 260 --\u003e WTSI_1055_1b16.q1kpIBR\nWTSI_1055_1b17.p1kpIBF bases 1 to 309 --\u003e WTSI_1055_1b17.p1kpIBF\nWTSI_1055_1b17.q1kpIBR bases 1 to 330 --\u003e WTSI_1055_1b17.q1kpIBR\nWTSI_1055_1b18.p1kpIBF bases 1 to 264 --\u003e WTSI_1055_1b18.p1kpIBF\nWTSI_1055_1b20.p1kpIBF bases 1 to 259 --\u003e WTSI_1055_1b20.p1kpIBF\nWTSI_1055_1b20.q1kpIBR bases 1 to 321 --\u003e WTSI_1055_1b20.q1kpIBR\nWTSI_1055_1b21.p1kpIBF bases 1 to 378 --\u003e WTSI_1055_1b21.p1kpIBF\nWTSI_1055_1b21.q1kpIBR bases 1 to 376 --\u003e WTSI_1055_1b21.q1kpIBR\nWTSI_1055_1b22.p1kpIBF bases 1 to 135 --\u003e WTSI_1055_1b22.p1kpIBF\nWTSI_1055_1b23.p1kpIBF bases 1 to 300 --\u003e WTSI_1055_1b23.p1kpIBF\nWTSI_1055_1b23.q1kpIBR bases 1 to 536 --\u003e WTSI_1055_1b23.q1kpIBR\nWTSI_1055_1c01.q1kpIBR bases 1 to 620 --\u003e WTSI_1055_1c01.q1kpIBR\nWTSI_1055_1c04.p1kpIBF bases 1 to 321 --\u003e WTSI_1055_1c04.p1kpIBF\nWTSI_1055_1c04.q1kpIBR bases 1 to 491 --\u003e WTSI_1055_1c04.q1kpIBR\nWTSI_1055_1c05.p1kpIBF bases 1 to 337 --\u003e WTSI_1055_1c05.p1kpIBF\nWTSI_1055_1c05.q1kpIBR bases 1 to 442 --\u003e WTSI_1055_1c05.q1kpIBR\nWTSI_1055_1c06.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1c06.p1kpIBF\nWTSI_1055_1c06.q1kpIBR bases 1 to 485 --\u003e WTSI_1055_1c06.q1kpIBR\nWTSI_1055_1c07.p1kpIBF bases 1 to 273 --\u003e WTSI_1055_1c07.p1kpIBF\nWTSI_1055_1c08.p1kpIBF bases 1 to 414 --\u003e WTSI_1055_1c08.p1kpIBF\nWTSI_1055_1c08.q1kpIBR bases 1 to 362 --\u003e WTSI_1055_1c08.q1kpIBR\nWTSI_1055_1c09.p1kpIBF bases 1 to 452 --\u003e WTSI_1055_1c09.p1kpIBF\nWTSI_1055_1c09.q1kpIBR bases 1 to 543 --\u003e WTSI_1055_1c09.q1kpIBR\nWTSI_1055_1c10.p1kpIBF bases 1 to 428 --\u003e WTSI_1055_1c10.p1kpIBF\nWTSI_1055_1c10.q1kpIBR bases 1 to 452 --\u003e WTSI_1055_1c10.q1kpIBR\nWTSI_1055_1c11.p1kpIBF bases 1 to 494 --\u003e WTSI_1055_1c11.p1kpIBF\nWTSI_1055_1c11.q1kpIBR bases 1 to 379 --\u003e WTSI_1055_1c11.q1kpIBR\nWTSI_1055_1c12.p1kpIBF bases 1 to 280 --\u003e WTSI_1055_1c12.p1kpIBF\nWTSI_1055_1c12.q1kpIBR bases 1 to 444 --\u003e WTSI_1055_1c12.q1kpIBR\nWTSI_1055_1c13.p1kpIBF bases 1 to 308 --\u003e WTSI_1055_1c13.p1kpIBF\nWTSI_1055_1c14.p1kpIBF bases 1 to 400 --\u003e WTSI_1055_1c14.p1kpIBF\nWTSI_1055_1c14.q1kpIBR bases 1 to 323 --\u003e WTSI_1055_1c14.q1kpIBR\nWTSI_1055_1c15.p1kpIBF bases 1 to 460 --\u003e WTSI_1055_1c15.p1kpIBF\nWTSI_1055_1c15.q1kpIBR bases 1 to 643 --\u003e WTSI_1055_1c15.q1kpIBR\nWTSI_1055_1c16.p1kpIBF bases 1 to 301 --\u003e WTSI_1055_1c16.p1kpIBF\nWTSI_1055_1c17.p1kpIBF bases 1 to 436 --\u003e WTSI_1055_1c17.p1kpIBF\nWTSI_1055_1c17.q1kpIBR bases 1 to 485 --\u003e WTSI_1055_1c17.q1kpIBR\nWTSI_1055_1c19.p1kpIBF bases 1 to 348 --\u003e WTSI_1055_1c19.p1kpIBF\nWTSI_1055_1c20.p1kpIBF bases 1 to 375 --\u003e WTSI_1055_1c20.p1kpIBF\nWTSI_1055_1c20.q1kpIBR bases 1 to 298 --\u003e WTSI_1055_1c20.q1kpIBR\nWTSI_1055_1c22.p1kpIBF bases 1 to 141 --\u003e WTSI_1055_1c22.p1kpIBF\nWTSI_1055_1c22.q1kpIBR bases 1 to 360 --\u003e WTSI_1055_1c22.q1kpIBR\nWTSI_1055_1c24.p1kpIBF bases 1 to 346 --\u003e WTSI_1055_1c24.p1kpIBF\nWTSI_1055_1d01.p1kpIBF bases 1 to 391 --\u003e WTSI_1055_1d01.p1kpIBF\nWTSI_1055_1d01.q1kpIBR bases 86 to 449 --\u003e WTSI_1055_1d01.q1kpIBR\nWTSI_1055_1d02.p1kpIBF bases 1 to 335 --\u003e WTSI_1055_1d02.p1kpIBF\nWTSI_1055_1d02.q1kpIBR bases 1 to 510 --\u003e WTSI_1055_1d02.q1kpIBR\nWTSI_1055_1d03.p1kpIBF bases 1 to 191 --\u003e WTSI_1055_1d03.p1kpIBF\nWTSI_1055_1d04.p1kpIBF bases 1 to 233 --\u003e WTSI_1055_1d04.p1kpIBF\nWTSI_1055_1d06.p1kpIBF bases 1 to 233 --\u003e WTSI_1055_1d06.p1kpIBF\nWTSI_1055_1d07.p1kpIBF bases 1 to 350 --\u003e WTSI_1055_1d07.p1kpIBF\nWTSI_1055_1d08.p1kpIBF bases 1 to 391 --\u003e WTSI_1055_1d08.p1kpIBF\nWTSI_1055_1d08.q1kpIBR bases 1 to 225 --\u003e WTSI_1055_1d08.q1kpIBR\nWTSI_1055_1d09.p1kpIBF bases 1 to 415 --\u003e WTSI_1055_1d09.p1kpIBF\nWTSI_1055_1d09.q1kpIBR bases 1 to 332 --\u003e WTSI_1055_1d09.q1kpIBR\nWTSI_1055_1d10.p1kpIBF bases 1 to 295 --\u003e WTSI_1055_1d10.p1kpIBF\nWTSI_1055_1d11.p1kpIBF bases 1 to 335 --\u003e WTSI_1055_1d11.p1kpIBF\nWTSI_1055_1d12.p1kpIBF bases 1 to 225 --\u003e WTSI_1055_1d12.p1kpIBF\nWTSI_1055_1d13.p1kpIBF bases 1 to 286 --\u003e WTSI_1055_1d13.p1kpIBF\nWTSI_1055_1d14.p1kpIBF bases 1 to 318 --\u003e WTSI_1055_1d14.p1kpIBF\nWTSI_1055_1d14.q1kpIBR bases 1 to 291 --\u003e WTSI_1055_1d14.q1kpIBR\nWTSI_1055_1d15.p1kpIBF bases 1 to 338 --\u003e WTSI_1055_1d15.p1kpIBF\nWTSI_1055_1d15.q1kpIBR bases 1 to 347 --\u003e WTSI_1055_1d15.q1kpIBR\nWTSI_1055_1d16.p1kpIBF bases 1 to 459 --\u003e WTSI_1055_1d16.p1kpIBF\nWTSI_1055_1d16.q1kpIBR bases 1 to 344 --\u003e WTSI_1055_1d16.q1kpIBR\nWTSI_1055_1d17.p1kpIBF bases 1 to 317 --\u003e WTSI_1055_1d17.p1kpIBF\nWTSI_1055_1d17.q1kpIBR bases 1 to 371 --\u003e WTSI_1055_1d17.q1kpIBR\nWTSI_1055_1d18.p1kpIBF bases 1 to 363 --\u003e WTSI_1055_1d18.p1kpIBF\nWTSI_1055_1d19.p1kpIBF bases 1 to 298 --\u003e WTSI_1055_1d19.p1kpIBF\nWTSI_1055_1d19.q1kpIBR bases 1 to 369 --\u003e WTSI_1055_1d19.q1kpIBR\nWTSI_1055_1d20.p1kpIBF bases 1 to 370 --\u003e WTSI_1055_1d20.p1kpIBF\nWTSI_1055_1d20.q1kpIBR bases 1 to 403 --\u003e WTSI_1055_1d20.q1kpIBR\nWTSI_1055_1d21.p1kpIBF bases 1 to 342 --\u003e WTSI_1055_1d21.p1kpIBF\nWTSI_1055_1d22.p1kpIBF bases 1 to 360 --\u003e WTSI_1055_1d22.p1kpIBF\nWTSI_1055_1d23.p1kpIBF bases 1 to 278 --\u003e WTSI_1055_1d23.p1kpIBF\nWTSI_1055_1d24.p1kpIBF bases 1 to 219 --\u003e WTSI_1055_1d24.p1kpIBF\nWTSI_1055_1d24.q1kpIBR bases 1 to 503 --\u003e WTSI_1055_1d24.q1kpIBR\nWTSI_1055_1e01.p1kpIBF bases 1 to 258 --\u003e WTSI_1055_1e01.p1kpIBF\nWTSI_1055_1e01.q1kpIBR bases 1 to 564 --\u003e WTSI_1055_1e01.q1kpIBR\nWTSI_1055_1e02.p1kpIBF bases 1 to 385 --\u003e WTSI_1055_1e02.p1kpIBF\nWTSI_1055_1e03.p1kpIBF bases 1 to 516 --\u003e WTSI_1055_1e03.p1kpIBF\nWTSI_1055_1e03.q1kpIBR bases 1 to 472 --\u003e WTSI_1055_1e03.q1kpIBR\nWTSI_1055_1e04.p1kpIBF bases 1 to 417 --\u003e WTSI_1055_1e04.p1kpIBF\nWTSI_1055_1e04.q1kpIBR bases 1 to 462 --\u003e WTSI_1055_1e04.q1kpIBR\nWTSI_1055_1e05.p1kpIBF bases 1 to 312 --\u003e WTSI_1055_1e05.p1kpIBF\nWTSI_1055_1e06.p1kpIBF bases 1 to 368 --\u003e WTSI_1055_1e06.p1kpIBF\nWTSI_1055_1e06.q1kpIBR bases 1 to 374 --\u003e WTSI_1055_1e06.q1kpIBR\nWTSI_1055_1e07.p1kpIBF bases 1 to 248 --\u003e WTSI_1055_1e07.p1kpIBF\nWTSI_1055_1e07.q1kpIBR bases 1 to 358 --\u003e WTSI_1055_1e07.q1kpIBR\nWTSI_1055_1e08.p1kpIBF bases 1 to 395 --\u003e WTSI_1055_1e08.p1kpIBF\nWTSI_1055_1e08.q1kpIBR bases 1 to 467 --\u003e WTSI_1055_1e08.q1kpIBR\nWTSI_1055_1e09.p1kpIBF bases 1 to 612 --\u003e WTSI_1055_1e09.p1kpIBF\nWTSI_1055_1e10.p1kpIBF bases 1 to 396 --\u003e WTSI_1055_1e10.p1kpIBF\nWTSI_1055_1e10.q1kpIBR bases 1 to 492 --\u003e WTSI_1055_1e10.q1kpIBR\nWTSI_1055_1e11.p1kpIBF bases 1 to 295 --\u003e WTSI_1055_1e11.p1kpIBF\nWTSI_1055_1e12.p1kpIBF bases 1 to 356 --\u003e WTSI_1055_1e12.p1kpIBF\nWTSI_1055_1e12.q1kpIBR bases 1 to 423 --\u003e WTSI_1055_1e12.q1kpIBR\nWTSI_1055_1e13.p1kpIBF bases 1 to 330 --\u003e WTSI_1055_1e13.p1kpIBF\nWTSI_1055_1e13.q1kpIBR bases 1 to 279 --\u003e WTSI_1055_1e13.q1kpIBR\nWTSI_1055_1e14.p1kpIBF bases 1 to 357 --\u003e WTSI_1055_1e14.p1kpIBF\nWTSI_1055_1e14.q1kpIBR bases 1 to 418 --\u003e WTSI_1055_1e14.q1kpIBR\nWTSI_1055_1e15.p1kpIBF bases 1 to 353 --\u003e WTSI_1055_1e15.p1kpIBF\nWTSI_1055_1e15.q1kpIBR bases 1 to 441 --\u003e WTSI_1055_1e15.q1kpIBR\nWTSI_1055_1e16.p1kpIBF bases 1 to 243 --\u003e WTSI_1055_1e16.p1kpIBF\nWTSI_1055_1e17.p1kpIBF bases 1 to 285 --\u003e WTSI_1055_1e17.p1kpIBF\nWTSI_1055_1e17.q1kpIBR bases 1 to 303 --\u003e WTSI_1055_1e17.q1kpIBR\nWTSI_1055_1e18.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1e18.p1kpIBF\nWTSI_1055_1e18.q1kpIBR bases 1 to 383 --\u003e WTSI_1055_1e18.q1kpIBR\nWTSI_1055_1e21.p1kpIBF bases 1 to 306 --\u003e WTSI_1055_1e21.p1kpIBF\nWTSI_1055_1e21.q1kpIBR bases 1 to 280 --\u003e WTSI_1055_1e21.q1kpIBR\nWTSI_1055_1e22.p1kpIBF bases 1 to 394 --\u003e WTSI_1055_1e22.p1kpIBF\nWTSI_1055_1e22.q1kpIBR bases 1 to 359 --\u003e WTSI_1055_1e22.q1kpIBR\nWTSI_1055_1e23.p1kpIBF bases 1 to 167 --\u003e WTSI_1055_1e23.p1kpIBF\nWTSI_1055_1e23.q1kpIBR bases 1 to 301 --\u003e WTSI_1055_1e23.q1kpIBR\nWTSI_1055_1e24.p1kpIBF bases 1 to 328 --\u003e WTSI_1055_1e24.p1kpIBF\nWTSI_1055_1e24.q1kpIBR bases 1 to 426 --\u003e WTSI_1055_1e24.q1kpIBR\nWTSI_1055_1f01.p1kpIBF bases 1 to 339 --\u003e WTSI_1055_1f01.p1kpIBF\nWTSI_1055_1f01.q1kpIBR bases 1 to 431 --\u003e WTSI_1055_1f01.q1kpIBR\nWTSI_1055_1f02.p1kpIBF bases 1 to 141 --\u003e WTSI_1055_1f02.p1kpIBF\nWTSI_1055_1f03.p1kpIBF bases 1 to 289 --\u003e WTSI_1055_1f03.p1kpIBF\nWTSI_1055_1f04.q1kpIBR bases 1 to 201 --\u003e WTSI_1055_1f04.q1kpIBR\nWTSI_1055_1f05.p1kpIBF bases 1 to 284 --\u003e WTSI_1055_1f05.p1kpIBF\nWTSI_1055_1f06.p1kpIBF bases 1 to 424 --\u003e WTSI_1055_1f06.p1kpIBF\nWTSI_1055_1f08.p1kpIBF bases 1 to 414 --\u003e WTSI_1055_1f08.p1kpIBF\nWTSI_1055_1f09.p1kpIBF bases 1 to 372 --\u003e WTSI_1055_1f09.p1kpIBF\nWTSI_1055_1f09.q1kpIBR bases 1 to 355 --\u003e WTSI_1055_1f09.q1kpIBR\nWTSI_1055_1f10.p1kpIBF bases 1 to 383 --\u003e WTSI_1055_1f10.p1kpIBF\nWTSI_1055_1f10.q1kpIBR bases 1 to 501 --\u003e WTSI_1055_1f10.q1kpIBR\nWTSI_1055_1f11.p1kpIBF bases 1 to 283 --\u003e WTSI_1055_1f11.p1kpIBF\nWTSI_1055_1f12.p1kpIBF bases 1 to 364 --\u003e WTSI_1055_1f12.p1kpIBF\nWTSI_1055_1f14.p1kpIBF bases 1 to 331 --\u003e WTSI_1055_1f14.p1kpIBF\nWTSI_1055_1f14.q1kpIBR bases 1 to 490 --\u003e WTSI_1055_1f14.q1kpIBR\nWTSI_1055_1f15.p1kpIBF bases 1 to 261 --\u003e WTSI_1055_1f15.p1kpIBF\nWTSI_1055_1f16.p1kpIBF bases 1 to 363 --\u003e WTSI_1055_1f16.p1kpIBF\nWTSI_1055_1f17.p1kpIBF bases 1 to 436 --\u003e WTSI_1055_1f17.p1kpIBF\nWTSI_1055_1f18.p1kpIBF bases 1 to 532 --\u003e WTSI_1055_1f18.p1kpIBF\nWTSI_1055_1f18.q1kpIBR bases 1 to 350 --\u003e WTSI_1055_1f18.q1kpIBR\nWTSI_1055_1f19.p1kpIBF bases 1 to 363 --\u003e WTSI_1055_1f19.p1kpIBF\nWTSI_1055_1f19.q1kpIBR bases 1 to 468 --\u003e WTSI_1055_1f19.q1kpIBR\nWTSI_1055_1f20.p1kpIBF bases 1 to 491 --\u003e WTSI_1055_1f20.p1kpIBF\nWTSI_1055_1f20.q1kpIBR bases 1 to 451 --\u003e WTSI_1055_1f20.q1kpIBR\nWTSI_1055_1f21.p1kpIBF bases 1 to 456 --\u003e WTSI_1055_1f21.p1kpIBF\nWTSI_1055_1f21.q1kpIBR bases 1 to 336 --\u003e WTSI_1055_1f21.q1kpIBR\nWTSI_1055_1f22.p1kpIBF bases 1 to 370 --\u003e WTSI_1055_1f22.p1kpIBF\nWTSI_1055_1f22.q1kpIBR bases 1 to 496 --\u003e WTSI_1055_1f22.q1kpIBR\nWTSI_1055_1f23.p1kpIBF bases 1 to 383 --\u003e WTSI_1055_1f23.p1kpIBF\nWTSI_1055_1f24.q1kpIBR bases 86 to 670 --\u003e WTSI_1055_1f24.q1kpIBR\nWTSI_1055_1g01.p1kpIBF bases 1 to 584 --\u003e WTSI_1055_1g01.p1kpIBF\nWTSI_1055_1g01.q1kpIBR bases 1 to 350 --\u003e WTSI_1055_1g01.q1kpIBR\nWTSI_1055_1g02.p1kpIBF bases 1 to 523 --\u003e WTSI_1055_1g02.p1kpIBF\n",  "update_time": "2024-07-20T18:37:10.081753",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.7, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.7, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/peterjc/seq_filter_by_id/seq_filter_by_id/0.2.7, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 26.3039813041687, "tool_id": "seq_filter_by_id", "tool_version": "0.2.7"}
                ]]></error>
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/6/9/5/dataset_69592ecd-3b5c-40b5-bdb3-bf4c0c8b1a45.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03.p1kpIBFWTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04.p1kpIBFWTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04.q1kpIBRWTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05.p1kpIBFWTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05.q1kpIBRWTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07.p1kpIBFWTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08.p1kpIBFWTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09.p1kpIBFWTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09.q1kpIBRWTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10.p1kpIBFWTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10.q1kpIBRWTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11.p1kpIBFWTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11.q1kpIBRWTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12.p1kpIBFWTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12.q1kpIBRWTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14.p1kpIBFWTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14.q1kpIBRWTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15.p1kpIBFWTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16.p1kpIBFWTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16.q1kpIBRWTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17.p1kpIBFWTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18.p1kpIBFWTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18.q1kpIBRWTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20.p1kpIBFWTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20.q1kpIBRWTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21.q1kpIBRWTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22.p1kpIBFWTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22.q1kpIBRWTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23.p1kpIBFWTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24.q1kpIBRWTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01.p1kpIBFWTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01.q1kpIBRWTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02.p1kpIBFWTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02.q1kpIBRWTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03.q1kpIBRWTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04.p1kpIBFWTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06.p1kpIBFWTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07.p1kpIBFWTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07.q1kpIBRWTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08.p1kpIBFWTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09.p1kpIBFWTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10.p1kpIBFWTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10.q1kpIBRWTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11.q1kpIBRWTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12.p1kpIBFWTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12.q1kpIBRWTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13.p1kpIBFWTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14.p1kpIBFWTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15.q1kpIBRWTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16.p1kpIBFWTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16.q1kpIBRWTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17.p1kpIBFWTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17.q1kpIBRWTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18.p1kpIBFWTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20.p1kpIBFWTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20.q1kpIBRWTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21.p1kpIBFWTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21.q1kpIBRWTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22.p1kpIBFWTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23.p1kpIBFWTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23.q1kpIBRWTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01.q1kpIBRWTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04.p1kpIBFWTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04.q1kpIBRWTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05.p1kpIBFWTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05.q1kpIBRWTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06.p1kpIBFWTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06.q1kpIBRWTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07.p1kpIBFWTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08.p1kpIBFWTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08.q1kpIBRWTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09.p1kpIBFWTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09.q1kpIBRWTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10.p1kpIBFWTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10.q1kpIBRWTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11.p1kpIBFWTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11.q1kpIBRWTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12.p1kpIBFWTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12.q1kpIBRWTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13.p1kpIBFWTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14.p1kpIBFWTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14.q1kpIBRWTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15.p1kpIBFWTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15.q1kpIBRWTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16.p1kpIBFWTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17.p1kpIBFWTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17.q1kpIBRWTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19.p1kpIBFWTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20.p1kpIBFWTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20.q1kpIBRWTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22.p1kpIBFWTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22.q1kpIBRWTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24.p1kpIBFWTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01.p1kpIBFWTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01.q1kpIBRWTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02.p1kpIBFWTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02.q1kpIBRWTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03.p1kpIBFWTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04.p1kpIBFWTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06.p1kpIBFWTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07.p1kpIBFWTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08.p1kpIBFWTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08.q1kpIBRWTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09.p1kpIBFWTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09.q1kpIBRWTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10.p1kpIBFWTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11.p1kpIBFWTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12.p1kpIBFWTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13.p1kpIBFWTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14.p1kpIBFWTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14.q1kpIBRWTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15.p1kpIBFWTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15.q1kpIBRWTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16.p1kpIBFWTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16.q1kpIBRWTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17.p1kpIBFWTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17.q1kpIBRWTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18.p1kpIBFWTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19.p1kpIBFWTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19.q1kpIBRWTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20.p1kpIBFWTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20.q1kpIBRWTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21.p1kpIBFWTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22.p1kpIBFWTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23.p1kpIBFWTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24.p1kpIBFWTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24.q1kpIBRWTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01.p1kpIBFWTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01.q1kpIBRWTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02.p1kpIBFWTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03.p1kpIBFWTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03.q1kpIBRWTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04.p1kpIBFWTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04.q1kpIBRWTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05.p1kpIBFWTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06.p1kpIBFWTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06.q1kpIBRWTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07.p1kpIBFWTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07.q1kpIBRWTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08.p1kpIBFWTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08.q1kpIBRWTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09.p1kpIBFWTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10.p1kpIBFWTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10.q1kpIBRWTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11.p1kpIBFWTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12.p1kpIBFWTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12.q1kpIBRWTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13.p1kpIBFWTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13.q1kpIBRWTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14.p1kpIBFWTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14.q1kpIBRWTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15.p1kpIBFWTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15.q1kpIBRWTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16.p1kpIBFWTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17.p1kpIBFWTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17.q1kpIBRWTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18.p1kpIBFWTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18.q1kpIBRWTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21.p1kpIBFWTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21.q1kpIBRWTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22.p1kpIBFWTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22.q1kpIBRWTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23.p1kpIBFWTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23.q1kpIBRWTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24.p1kpIBFWTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24.q1kpIBRWTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01.p1kpIBFWTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01.q1kpIBRWTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02.p1kpIBFWTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03.p1kpIBFWTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04.q1kpIBRWTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05.p1kpIBFWTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06.p1kpIBFWTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08.p1kpIBFWTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09.p1kpIBFWTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09.q1kpIBRWTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10.p1kpIBFWTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10.q1kpIBRWTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11.p1kpIBFWTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12.p1kpIBFWTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14.p1kpIBFWTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14.q1kpIBRWTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15.p1kpIBFWTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16.p1kpIBFWTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17.p1kpIBFWTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18.p1kpIBFWTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18.q1kpIBRWTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19.p1kpIBFWTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19.q1kpIBRWTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20.p1kpIBFWTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20.q1kpIBRWTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21.p1kpIBFWTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21.q1kpIBRWTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22.p1kpIBFWTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22.q1kpIBRWTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23.p1kpIBFWTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24.q1kpIBRWTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01.p1kpIBFWTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01.q1kpIBRWTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02.p1kpIBF
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfannotategenotypes (Test #1)" name="0" time="38.811168909072876">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfsort (Test #1)" name="0" time="30.735058307647705">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>